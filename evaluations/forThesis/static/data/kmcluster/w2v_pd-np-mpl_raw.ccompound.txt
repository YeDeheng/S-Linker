Prony	77	98	458	279	738
Cn	85	172	481	224	778
__multiarray_api.h	55	128	386	636	194
netcdf	71	153	214	423	108
11544	54	186	300	338	139
hanging	50	232	301	764	954
ThreeD	90	297	4	332	744
localized	12	170	231	709	562
regularize	12	42	409	44	988
LAST	30	212	55	136	965
scipy.ndimage.filters.correlate	6	100	14	313	244
Adjusting	59	52	32	209	479
numpy.log10	96	219	177	396	201
DATETIME	61	18	162	426	260
varible	2	49	335	185	884
fractal	20	126	48	195	416
ax.axvline	46	148	253	592	844
pymc	77	57	167	697	732
u'Beauty	54	50	368	429	624
a.itemsize	44	227	228	0	357
eV	96	201	18	173	62
enddate	48	281	486	197	687
cm.gray	22	36	294	653	488
b.ix	90	95	26	239	227
ndarray's	3	220	361	514	235
Tuesday	99	140	453	109	94
nullspace	60	194	280	431	485
tom's	4	17	254	710	441
pandas.read_html	52	185	28	24	793
parameterization	81	98	231	783	738
scrapes	40	246	429	609	92
Matlab-like	76	23	65	118	730
14:30	99	69	119	158	256
feasibility	39	232	235	709	562
271	54	3	101	332	158
272	54	3	298	187	158
273	54	3	101	187	158
274	54	3	101	429	158
275	54	3	101	187	158
276	37	250	27	187	194
277	37	250	27	475	194
278	37	271	373	187	194
279	54	3	101	187	158
scraped	71	246	50	60	92
y_min	68	35	289	176	810
errors	50	37	301	618	625
dialogs	93	187	104	537	728
Initially	50	264	292	210	747
myplot()	93	187	495	51	627
cooking	95	123	373	480	852
Numpythonic	88	257	61	675	327
stats.stackexchange.com	18	225	45	527	509
46	54	3	298	318	811
designing	13	246	48	4	765
iterables	65	94	158	540	890
smallDoses	90	54	257	751	486
str.format	43	157	14	589	448
data.T	44	227	251	704	263
1250	78	204	298	196	361
audiolab	67	248	470	604	732
Logging	38	147	173	751	603
SPY	53	138	450	762	746
str()	3	44	162	15	341
27k	81	43	234	557	192
highpass	20	93	382	709	989
Draggable	59	52	495	51	728
0.00001	96	266	314	391	421
n_iter	77	183	409	327	162
kids	50	200	114	407	64
pytables	71	153	446	702	457
item-wise	34	100	95	18	694
0.12644904710626975	74	266	4	391	262
AllData	74	293	4	255	577
ax.hold	46	203	348	123	55
error-	63	44	199	582	888
appropriately	2	229	457	335	338
myfile.py	40	141	281	76	632
topography	39	149	279	93	573
projection	39	149	279	298	586
absolute_heights	90	293	13	586	744
y.reshape	44	227	228	0	357
2.2.5	19	7	417	13	644
2.2.1	19	7	417	13	322
2.2.0	19	7	417	13	972
RL5	53	181	42	250	624
Detector	38	298	266	519	698
dna	36	90	246	141	942
non-neuter	78	144	195	276	517
ax.spines	46	226	494	116	348
assign()	43	265	72	771	31
magnify	59	154	188	427	203
inevitable	88	152	301	573	863
s.values	27	157	14	313	244
Out	90	3	298	332	995
music	13	246	58	428	852
therefore	47	0	392	91	338
distortions	12	117	409	44	562
thread-safe	29	218	345	359	803
my2c	94	222	446	702	160
skewness	20	214	472	783	459
Postgresql	71	171	473	128	88
populations	81	228	206	498	675
43	54	3	298	318	811
multi-channel	22	248	381	571	593
somehting	42	269	14	306	244
Howver	12	49	214	170	713
pd.DataFrame	64	150	74	551	48
,,,,	1	186	300	338	361
dataframe.apply()	43	265	72	742	709
pandas.TimeSeries	99	147	450	426	817
numpy.nonzero	42	27	286	358	134
DataFrame.combine_first	43	157	14	630	439
echelon	85	194	280	431	485
unpack	65	174	199	589	888
DataTable	3	94	162	540	470
circumstances	12	152	147	630	604
equilateral	39	149	235	152	102
locked	29	119	183	609	954
argrelextrema	42	27	14	313	244
RLE	34	94	162	91	260
plt.Circle	46	226	73	316	649
"]`	53	95	260	455	496
96x96	22	248	381	45	943
grid.linestyle	45	39	73	316	906
FeatureFolds	90	297	13	10	744
post's	4	215	490	252	81
Lb	85	172	108	224	778
stubbornly	12	152	5	145	908
wand	10	202	37	323	876
KFold	77	168	186	705	162
Ln	41	6	177	107	142
Lo	24	109	394	444	469
.type	3	220	261	15	235
my_cm	46	36	73	316	488
Li	24	121	264	646	500
want	47	0	392	91	338
Lx	85	201	370	560	142
absolute	81	170	275	588	603
LF	61	58	443	539	501
500*500	10	127	258	323	655
x.mean()	27	29	10	772	838
LC	85	179	215	574	145
LA	22	298	419	36	898
LO	30	271	159	429	428
travel	79	43	206	195	949
LM	77	98	458	279	485
Notepad	61	58	443	769	501
LK	77	42	235	195	905
geojson	71	73	214	60	108
LV	38	206	282	60	38
LW	11	109	394	444	469
playback	13	218	183	359	959
LR	77	168	186	705	646
LP	77	42	38	279	809
text.latex.preamble	45	80	448	767	909
2015-06-21	54	50	368	429	428
HEAD	35	122	156	292	376
45.0	68	266	23	695	421
numpy.multiply	44	30	137	74	598
L6	85	194	280	5	192
modest	10	202	37	323	876
L2	85	194	280	431	485
L3	85	194	355	467	192
L0	85	298	419	467	497
L1	85	298	419	467	192
Nones	6	68	12	130	910
graph's	39	79	41	400	234
i_1	90	54	13	332	744
Hoping	11	173	143	763	652
CFD	39	246	214	428	949
subplots	5	52	255	19	518
y_learn	3	174	177	157	172
18th	99	140	453	109	94
CFT	20	93	248	191	738
nonsensical	12	152	147	170	120
numpyish	88	257	61	675	327
0d-array	34	77	0	73	694
welcomed	11	173	389	763	867
arr_index	90	54	257	10	486
assing	47	229	14	15	709
AAAA	99	140	453	198	221
Wx.index	52	185	489	548	390
to_numeric	43	157	72	24	956
concurrency	76	218	183	445	803
PyPlot.jl	93	23	90	97	537
wherein	81	21	41	487	702
activating	40	132	352	113	137
fir	20	246	382	742	989
data.set_index	64	287	256	250	294
His	4	17	254	710	441
ylist	41	6	289	282	397
ligand	39	149	438	733	573
fit	77	124	132	324	738
bringing	50	232	232	35	531
fix	11	48	143	799	360
striking	12	183	235	44	950
timedelta64	94	63	68	426	452
fig	46	203	255	577	430
fid	36	10	336	712	261
4+	10	160	274	323	655
fin	36	10	489	712	261
non-random	57	235	342	450	950
__setstate__	3	220	329	663	720
df.foo	68	260	431	234	945
HIGH	53	139	51	448	821
Exception_count	79	228	487	168	653
effects	12	152	409	44	84
SGEMM	7	51	102	431	751
multidimensional	34	77	0	73	694
xlswriter	94	222	457	306	160
-data	27	297	18	28	486
Copy	69	31	237	530	911
2000000	21	298	419	519	38
df2.index.get_level_values	68	54	257	682	199
.close()	29	218	447	570	55
Shame	24	200	493	504	870
merge()	43	47	72	683	956
timeout	29	218	128	764	954
getE	85	174	117	5	192
telescope	39	126	58	571	949
haHigh1	68	32	13	545	486
392	54	3	298	187	158
391	54	69	119	158	126
390	54	3	298	318	158
396	44	205	251	196	252
395	54	3	101	297	399
394	54	3	298	318	995
distrib	13	26	65	697	730
my_matrix_2.T	78	100	216	616	456
georeferenced	39	126	495	571	573
np.in1d()	42	27	14	313	244
.concat	43	47	72	683	956
enviroment	40	141	210	76	632
gradation	59	4	433	32	198
stock's	79	78	450	101	955
combinatorial	12	42	118	552	32
encourage	18	225	5	527	53
adapt	57	229	457	306	360
numpy.diag	60	194	137	704	598
Correcting	47	174	392	592	469
numpy.polynomial.polynomial.polyval	60	296	102	742	396
X.sum	44	227	403	65	202
strata	79	228	487	480	675
CM_tilde	74	293	216	509	228
true_values	52	185	272	708	640
corrects	2	263	491	618	621
estimate	77	214	132	783	4
JNI	7	51	65	2	730
"]"	54	50	340	81	277
Localization	95	138	159	197	653
f.read()	36	10	489	712	261
disturbed	12	183	270	170	563
newaxis	42	30	26	74	368
bugtracker	35	122	220	292	106
curiouser	30	94	419	127	38
phyl_ax	31	1	388	592	444
master_count.csv	30	37	222	347	560
e_vals	90	297	54	509	744
timeCondition	27	260	431	234	945
megabytes	21	127	355	159	359
non-absolute	63	63	68	426	390
LANG	45	80	334	269	315
service	13	239	90	609	852
LAPACK	7	163	428	418	166
incremented	78	100	216	616	187
Aggregation	69	179	169	789	739
needed	47	0	392	91	338
master	35	122	220	292	376
Gtk+	93	119	104	368	591
JPY	95	298	419	751	38
fcluster	60	270	472	152	662
Adapting	4	235	254	478	552
fill()	42	27	88	358	244
linkage()	60	194	472	396	709
zeroth	78	100	216	616	456
task	13	48	126	203	765
Oracle	71	171	473	128	88
positively	12	170	25	431	908
270	54	223	298	318	158
LogNorm	31	4	294	653	271
0-12	5	288	32	19	884
0-10	78	140	335	168	176
0-11	99	204	453	198	687
df.index.map	64	150	10	772	838
1-column	34	265	0	771	356
idle	40	141	281	76	632
get_data_yahoo	43	78	450	762	746
Unhandled	63	176	397	582	136
feeling	88	59	114	35	469
SPEED	78	144	216	616	456
item_date	99	63	68	155	390
Chicago	99	268	453	322	687
longs	14	291	162	610	470
Generally	47	0	392	678	544
spectrum	20	93	425	507	344
MayaVI	93	23	63	97	537
goodness	77	214	132	783	738
big_ax	46	203	348	577	430
header=True	36	10	376	712	971
.text	36	10	489	712	314
dozen	21	190	234	557	326
affairs	12	183	5	419	908
quadrature	72	98	458	652	438
re-check	6	68	456	355	910
2.73	91	7	417	13	321
Component	38	210	151	94	899
.argmin	90	91	13	545	744
2.76	84	7	274	297	321
Portable	67	151	210	351	104
They	47	0	392	251	544
64bits	84	7	417	241	644
numpy.insert	42	30	286	358	595
sortby	94	222	446	702	160
.to_series()	64	150	74	551	779
diminishing	10	272	118	225	169
metrics	79	168	186	705	646
disjointed	2	116	233	546	356
mouth	18	43	235	709	562
AFAIU	47	0	392	306	469
Locator.MAXTICKS	99	69	324	204	129
df1.columns	49	47	406	631	445
vertices	39	149	41	152	102
tech	13	78	126	480	852
hanning	60	296	382	742	396
saying	47	59	199	699	888
BDay	99	63	68	426	817
lookback	99	147	173	101	817
Helvetica	45	230	448	767	909
padded	6	263	85	546	910
sub-graphs	81	170	409	44	576
Template	38	162	191	281	837
Marks	95	162	191	789	837
tempted	88	59	22	419	917
cheaply	88	265	122	706	356
hypercube	39	43	235	733	102
eliminated	2	263	328	799	187
Resources	55	128	52	477	372
rowvar	6	100	334	269	866
datasizes	10	202	37	534	783
clicked	29	154	188	427	2
Extend	69	31	100	530	911
copy.copy	3	220	361	212	273
inpainting	72	126	7	709	562
n+2	96	201	18	173	62
blist	76	272	356	327	668
rich	13	23	138	118	264
argmin()	42	27	103	750	244
Tricky	57	235	342	450	451
plate	39	126	206	322	949
4.5	96	108	23	579	322
Tricks	38	162	191	61	114
incongruent	78	43	25	170	517
2min	21	160	274	323	655
ceil	14	29	314	173	238
altogether	88	263	60	349	531
numpy.argmin	42	269	103	313	244
segregate	2	116	145	203	986
datafile	57	49	50	423	108
numpy.nextafter	14	86	314	325	549
optimise	76	272	118	225	169
nicely	47	232	138	91	264
boarder	59	117	433	32	198
f_c	68	32	154	545	486
patch	31	1	388	399	879
gnuplot.py	93	23	90	97	537
apreciated	11	173	389	763	867
programmatic	88	257	61	675	612
top-most	59	154	188	427	203
lot_	88	232	5	419	337
clarified	4	200	490	567	81
datelist	74	281	454	218	779
sensitivity	12	183	409	44	84
scipy.interpolate.RegularGridInterpolator	60	296	375	313	396
YMMV	10	272	138	334	394
.ix	94	95	115	369	227
accesses	76	188	447	573	450
clarifies	18	225	490	567	81
Openpyxl	35	122	156	9	376
lots	13	152	126	203	604
irr	38	206	173	264	698
mvce	18	225	45	527	81
Python2	65	291	81	735	311
subarray	34	77	0	522	694
newlines	61	58	452	230	501
Advanced	69	111	259	110	402
wage	86	18	272	157	262
person_name	41	6	335	621	884
extend	2	229	457	306	360
nature	12	152	134	552	563
monospace	45	230	448	767	909
B.index	64	150	406	551	48
%%R	40	141	281	76	632
extent	5	284	284	245	479
Parenthesis	61	162	191	61	260
pandas.Timestamp	94	63	68	426	452
AutoLocator	5	148	363	558	844
gene_names	71	61	233	51	54
.dta	71	153	86	638	561
+13	54	54	257	713	776
+12	44	194	257	5	192
double_scalars	63	86	478	582	350
y.dtype	3	18	141	266	969
geocoder	71	271	90	60	92
genomelength	75	32	54	690	577
.82	54	50	300	797	139
MysqlDB	6	171	473	128	88
npoints	41	205	177	725	201
VS2008	19	163	152	241	850
ates	64	287	406	631	294
11.10	19	7	432	301	156
pd.IndexSlice	94	95	115	369	227
self-consistent	47	229	392	91	338
customisation	43	23	457	306	710
Joris	24	121	264	646	500
fro	24	109	394	140	870
cue	12	59	134	252	371
frm	75	195	256	690	597
.	47	0	392	91	338
muck	50	232	457	306	439
much	88	109	229	444	264
Closely	35	193	19	387	114
.to_excel	52	185	86	760	561
retrospect	24	200	493	504	469
spit	47	37	491	699	59
line_context	95	49	373	185	517
doubts	18	109	394	567	219
crossover	81	43	206	132	576
spin	13	119	183	609	377
datatable	48	49	182	405	502
13th	99	140	453	109	94
administrative	84	119	2	697	786
Beware	47	0	147	678	544
professionally	13	26	63	118	398
ugly	88	257	61	334	695
employ	76	229	134	630	621
convertable	3	94	162	514	470
32-bit	84	291	85	608	644
hard-coded	2	215	233	91	702
k	85	195	370	255	192
imgproc	55	128	52	477	56
mno-cygwin	45	176	222	215	315
n_y	44	30	396	509	520
data-structures	76	26	122	203	457
fontList.cache	55	132	352	775	798
nd-array	34	77	0	73	694
conditioned	77	183	132	783	738
NA-friendly	13	265	126	203	734
n_i	41	205	370	107	192
n_j	44	205	370	196	201
unsubscriptable	63	44	460	172	787
actable	68	32	18	617	62
numpy.roll()	42	27	14	313	439
serialisation	76	94	162	514	260
hone	13	232	232	203	765
copy.deepcopy	65	220	361	212	273
13.10	19	7	432	301	156
subplots_adjust()	5	284	253	757	518
weightspace	24	200	445	567	991
non-broadcastable	63	44	199	582	357
Importantly	76	42	413	799	360
split	2	116	145	706	986
.Bahl	65	200	181	145	195
boiled	57	235	342	450	781
inadvertently	50	152	60	573	120
Maybe	47	0	392	678	835
otypes	52	185	334	15	793
boiler	57	235	463	37	451
nuanced	18	225	490	170	219
numpy.newaxis	42	30	286	74	368
.Sebastian	24	121	264	646	991
newline=	86	129	136	137	347
Oliphant	4	193	372	71	594
round()	14	86	14	15	549
academic	84	26	63	516	850
academia	13	26	63	516	850
Table	69	162	191	789	739
corporate	84	119	2	697	377
massaging	57	116	145	306	564
bellow	57	235	342	450	59
golden	81	170	457	245	479
epochs	99	147	453	198	949
10000x10000	21	190	258	45	943
sdate	53	95	115	239	779
homogeneity	34	116	122	203	694
????	86	174	117	185	835
root-mean-square	60	219	472	742	738
Happy	11	225	45	472	922
hah	24	200	493	504	991
replace()	43	107	72	589	956
ham	95	181	373	185	682
Oscar	24	109	229	444	469
had	50	264	292	210	747
fortran	7	51	428	215	915
2**16	14	291	46	325	482
2-3x	10	202	37	323	876
has	47	215	491	91	702
zorder=-1	5	13	32	592	518
sorted()	65	157	349	648	640
64,201	53	139	42	250	199
rescaled	5	288	284	245	479
numpy.indices	42	30	286	358	146
Setup	63	176	397	347	560
indicative	12	183	409	44	120
rescales	22	4	284	245	479
clustered	81	117	433	546	714
shadow	59	135	181	145	195
12:30	99	69	119	525	256
ctime	15	135	222	777	906
LabelBinarizer	38	265	14	313	439
4G	84	127	355	159	359
ha=	46	226	30	316	348
Steven	4	121	372	444	264
Frames	69	162	191	574	739
warping	39	149	235	152	102
beneficial	88	272	5	334	612
crowd	13	120	212	739	852
Literally	15	174	222	751	262
proportionally	81	170	409	44	576
deflection	41	170	177	396	622
MySQLdb	71	171	473	128	88
Between	69	162	191	61	837
x**	96	201	105	173	13
most_liquid_contracts	79	140	453	109	955
GDAL	71	248	214	571	593
ImageMagick's	71	61	315	99	942
perchance	47	0	143	630	835
bottom	59	288	25	122	979
NORM	95	181	419	429	428
plucked	13	183	235	195	781
F2.function	15	40	444	396	622
Facebook	71	26	126	60	537
completly	47	59	392	143	907
defaultdict	65	233	158	648	526
Calls	30	271	117	36	262
model.fit	63	256	154	582	994
np.linalg	60	296	102	345	751
evidence_id	48	49	486	339	502
a.all	27	260	431	234	945
binary_fill_holes	72	165	15	235	244
b*d	96	201	18	173	62
Fedora19	50	57	292	664	321
SIZE	30	212	233	127	965
yticklabels	5	148	32	19	844
behavour	60	296	14	742	709
Font	45	230	448	654	909
ar**	41	201	426	3	13
browse	71	232	232	387	594
Static	38	162	191	61	837
acos	96	201	426	560	62
abbreviations	61	58	443	86	1
mpl.get_backend()	15	80	184	103	630
#next	68	32	117	211	486
Aaron	24	109	394	567	870
Management	38	171	282	110	38
shoots	10	170	355	167	576
Storer	94	153	446	702	457
analytically	77	98	38	279	809
fabric	67	232	167	697	732
fromstring()	3	291	162	404	470
Downsampling	69	31	100	530	71
tamb	64	150	449	197	48
array2	27	269	137	509	228
altitude	39	149	279	766	573
B-spline	72	165	15	235	570
16000	21	190	234	557	655
grasping	50	120	114	35	907
array-	34	77	0	586	228
Device	79	144	337	787	713
ssd_difference	90	195	4	255	744
43000	44	205	251	196	357
arr.size	75	227	385	0	486
array_	27	260	431	509	945
image.png	36	90	246	141	619
tokenize	36	10	485	193	325
denoting	81	21	131	487	702
)]))`	75	32	13	545	486
arrayB	44	205	251	5	228
arrayA	44	256	251	5	192
algoritm	13	42	48	722	905
000000	61	174	117	185	262
else's	11	120	212	739	727
arrays	34	77	0	73	694
County	95	181	373	686	497
re.IGNORECASE	86	89	163	299	66
open-air	59	79	375	364	631
Graphing	69	162	191	209	837
smashed	48	144	486	706	986
Counts	69	138	66	789	739
screencapture	29	37	222	335	54
passenger	48	123	51	448	821
Calibration	95	271	373	519	38
df.dtypes	94	18	74	293	729
PREFIX	55	128	52	477	56
timezone	94	63	68	426	452
triangles	39	165	235	152	102
scipy.special	15	296	319	742	957
Paul's	4	17	254	710	441
eventual	2	116	145	203	950
role	12	193	134	630	371
sub-setting	50	120	126	35	765
roll	47	232	232	306	439
intend	47	0	392	91	835
Operation	69	162	191	61	145
Idx	48	204	486	178	637
Chaudhary's	4	17	254	710	441
outage	78	49	148	355	769
Ids	48	144	195	178	637
yahoo	71	78	450	762	746
intent	12	59	490	144	908
Idk	12	59	232	144	469
variable	2	215	181	91	406
2008-03-10	48	123	486	788	687
.div	64	150	256	65	48
date_parser=	52	185	28	15	793
PostgreSQL	71	171	473	128	88
difflib.get_close_matches	53	139	256	417	775
probplot	60	124	458	742	438
MSSQL	71	171	473	128	88
f2.f90	15	37	222	699	625
chain	76	111	147	574	272
whoever	18	225	40	407	805
array.T	42	30	286	313	368
affine_transform	39	149	466	152	570
m.astype	3	227	385	157	969
py2	91	122	156	587	376
serially	71	218	183	609	600
chair	86	174	117	751	262
Bye	6	68	394	85	340
amplification	20	86	275	588	84
ADDITIONAL	30	212	55	429	428
ctable	35	153	446	702	457
-Inf	6	68	12	130	910
page_name	86	129	163	339	199
effeciently	76	42	61	169	612
oversight	35	200	220	292	106
verbally	57	225	463	37	451
retbins	42	157	297	171	956
downloading	67	151	470	604	104
jerk	11	200	114	144	469
P.shape	68	54	257	338	139
choice	12	183	134	630	563
netlib	7	163	428	418	166
VERSION	55	128	52	477	568
knapsack	12	42	38	799	809
stays	2	215	491	167	769
exact	47	0	392	91	59
minute	99	147	453	198	817
A.T	44	194	280	704	598
Inexplicable	69	31	199	9	888
skewed	81	214	270	546	4
CSV_1	78	49	195	787	944
CSV_2	78	144	195	787	944
Tag	61	49	373	686	517
Stereographic	39	149	279	322	586
Tab	40	141	259	281	402
multiprocessing	76	218	345	445	803
Date1	48	281	486	788	502
phone_number	53	139	51	417	775
Date2	48	281	486	339	502
M-	68	201	18	173	128
trails	12	183	134	552	769
heavyweight	76	26	65	118	730
M6	5	288	32	19	129
chopping	50	263	145	167	781
M0	5	288	335	19	129
M3	85	172	481	671	778
M2	85	172	481	671	778
incrementally	2	116	145	573	531
numpy.max()	42	27	14	313	709
M8	86	18	162	682	341
bottleneck.partsort()	10	202	37	323	876
CMYK	22	4	381	438	672
scalarMap.to_rgba	41	39	289	282	397
ReviewDate_month	53	150	256	250	775
boost	7	51	65	312	990
cross-validated	77	219	186	705	162
unintentionally	35	122	60	9	376
Flatten	69	31	100	530	911
Me	24	200	493	504	991
Dates	99	138	66	789	452
xvalue	46	39	73	316	488
Mb	21	127	355	159	359
304	54	3	101	187	158
Mo	21	153	50	380	692
df_full	48	281	486	339	82
Mu	96	201	472	391	142
Mt	53	139	51	197	779
306	54	3	101	797	158
Ms	48	144	486	547	502
address	2	229	447	170	81
My	47	0	342	678	544
factorials	14	190	258	637	863
MD	7	224	65	2	730
.date()	64	274	68	72	390
MA	95	298	173	467	687
day-of-year	79	147	173	101	603
MC	13	183	48	195	416
MB	21	127	355	159	359
MM	99	274	68	679	221
impacted	12	218	60	359	187
rolling_count	43	157	103	784	956
MN	85	205	154	196	192
procedurally	88	48	61	424	360
example	57	235	342	450	950
queue	29	218	183	359	803
MT	30	239	117	751	262
accomplished	2	48	389	799	360
throughput	10	160	118	225	176
MP	54	50	419	429	428
ALOT	11	232	114	35	781
MR	34	49	275	522	108
MY	30	212	55	136	965
windowing	20	93	382	191	344
REAL	12	59	409	170	563
stock-info	71	49	303	60	92
Shuffling	34	188	122	566	694
READ	54	50	300	429	449
dtype	3	18	141	266	969
write()	36	153	336	423	942
EXCEL	71	153	50	423	108
somecondition	46	100	348	577	430
Enough	13	232	232	89	439
randoms	81	214	132	783	4
self-sufficient	57	235	463	37	451
instal	67	57	167	499	732
isntead	65	233	457	335	526
dostuff()	76	174	181	36	906
50*50	81	77	239	88	943
working	50	59	342	450	59
precision=3	45	284	334	269	913
27000	21	190	234	557	700
optimize	76	272	118	225	360
!!!!!!	24	109	394	140	870
opposed	47	0	491	91	338
np.NAN	53	139	51	234	945
familar	88	120	212	739	727
Those	47	0	392	251	544
Iris	38	168	214	705	646
Klaus	24	121	264	646	500
nalt	41	205	154	196	357
CONTENT	53	139	42	417	775
consoles	40	141	281	76	632
optmization	13	120	126	35	765
frombuffer	3	220	336	312	235
cardinality	12	183	409	44	84
lowercase	61	58	443	86	501
plt.scatter	46	39	383	592	649
Similarity	38	206	169	264	698
non-square	34	77	280	431	900
originally	50	264	292	210	747
oscillator	77	98	48	195	738
Hershey	13	230	448	767	909
data.index	53	139	51	239	199
mirrors	2	229	457	91	338
locks	29	218	128	764	954
incremental	81	147	275	203	31
numpy.poly1d	60	124	458	324	597
Humm	47	59	392	630	907
usng	30	235	342	347	560
listens	40	119	429	609	377
Integrating	38	98	458	742	71
MATLAB-like	13	23	375	118	195
subroutines	7	51	65	215	730
ST2	40	57	44	36	315
ST3	40	57	167	36	906
Dumb	18	200	490	567	81
.set_linewidth	68	35	289	46	486
STD	85	219	173	467	459
data3.groupby	64	150	256	250	48
Vbe	12	200	493	504	469
STL	71	248	65	312	730
LocationID	53	139	42	417	775
Timezone	99	69	119	155	914
LB	53	139	481	551	778
.png	93	61	315	99	374
backend_pdf.py	55	132	330	205	568
conscious	12	152	5	419	53
date_ret	68	32	13	617	744
UnboundLocalError	63	44	181	582	406
quadrant	39	149	438	69	601
sandbox	67	132	44	604	305
mango	95	181	373	168	497
pulled	2	215	328	98	92
LL	85	195	4	617	192
Py_ssize_t	3	67	261	146	235
pd.concat()	49	47	72	706	445
zmax	74	100	108	586	577
SEPARATE	30	212	55	136	965
LIL	34	292	64	348	218
ax.get_ylim()	46	284	253	46	208
below-	2	49	328	98	59
years	99	140	450	109	94
professors	13	26	212	118	730
structuring	34	116	145	203	670
Nyquist	20	93	425	507	344
np.unique()	65	27	158	683	526
tmp_G	29	203	444	236	406
ovals	59	117	495	32	177
disconnect	29	187	128	459	611
prc_path	48	281	74	771	3
forward-looking	76	265	275	784	734
0001HARISH	95	181	373	455	340
troubles	50	120	301	35	120
.to_datetime()	43	63	68	426	452
matplotlib.colorbar	15	135	319	751	823
jit	76	51	428	225	915
np.hist	41	35	297	171	201
troubled	11	232	232	144	53
ia	85	143	215	5	37
Hiding	59	52	32	19	884
modestly	10	272	118	334	604
clock()	10	202	37	323	876
18563	81	43	472	733	662
year1	68	32	431	234	945
year2	68	259	431	234	945
sorter	42	27	349	358	640
4d	34	77	0	73	7
aprox	21	190	234	557	42
columns=range	75	32	385	425	486
UnicodeDecodeError	63	5	397	563	209
\	37	89	386	299	66
set_value	43	157	72	750	73
my_grid	78	49	216	522	336
compare_fn	68	243	274	297	399
didn	50	264	393	75	469
24.1	54	3	101	297	399
Yellow	95	298	427	168	497
24.3	84	141	274	76	321
Translating	38	179	169	61	145
JD	99	140	453	109	94
instability	12	86	314	618	84
stackexchange	18	225	45	527	509
quarter	99	140	453	109	817
seldom	12	152	5	419	84
retrieve	2	229	328	98	92
vanishingly	12	152	409	170	563
~4x	10	202	37	323	876
Live	19	230	448	767	909
entering	2	116	328	335	531
toPandas()	71	265	303	60	457
interned	14	291	162	355	470
Suppress	69	162	191	61	316
seriously	18	225	5	419	53
df.max()	27	260	431	234	945
full_matrices=False	44	194	280	5	485
-fopenmp	55	163	293	326	56
bisect.bisect	27	40	14	15	709
complicates	88	116	147	566	520
THANK	24	33	229	667	870
scikits-image	13	193	372	387	704
256GB	84	127	2	159	359
=1000	68	32	431	234	945
21.78	54	108	300	579	931
deliver	13	59	126	203	765
~40	21	190	234	557	42
byte	61	5	85	563	898
.index	64	150	256	72	131
setdefault	65	233	158	648	526
barchart_demo.py	57	235	342	450	950
wrong	47	59	445	424	835
skiprows	52	185	28	121	793
initiate	29	229	232	167	180
Kepler	38	206	48	195	416
quibble	88	257	5	145	908
neglect	81	170	270	733	84
Backend	93	80	259	435	402
emotion	36	10	376	712	261
irfft	96	29	425	336	344
saving	71	61	315	99	54
symmetry	20	93	425	191	344
subplots_adjust	5	284	253	757	339
spoken	50	232	393	35	564
random.random	60	243	81	725	484
one	47	21	392	91	338
theano.tensor	60	194	137	5	751
colourbars	59	52	433	32	714
export_graphviz	65	1	444	514	709
my_variable	53	139	51	417	821
affords	76	272	118	444	863
DataFrame.filter	43	157	14	589	956
Monday	99	140	453	109	94
numpy.exp	60	29	137	173	598
matplotlib.ticker.FormatStrFormatter	86	129	465	137	347
constants	14	145	38	279	809
oversimplified	4	235	490	450	81
lingering	50	232	114	35	64
suffixing	60	174	181	514	720
Coverage	79	138	173	276	459
nansum	6	269	12	53	244
numpy.zeros_like	44	227	385	282	595
Anaconda's	40	141	210	241	104
object()	90	297	54	690	172
spyderlib	40	141	281	764	954
arround	50	264	292	210	747
on=	49	287	406	631	445
specialists	13	152	5	35	53
@~unutbu	47	59	392	504	469
GF28	34	94	329	514	694
s.index	64	150	406	551	48
History	95	224	66	102	340
matplotlib.cm.get_cmap	46	36	73	316	488
Kmeans	77	168	186	705	646
fftconvolve	20	93	382	191	396
interp2d	72	165	15	235	570
EPD's	40	132	352	113	568
winpython	67	151	210	351	104
ffmpeg	93	61	315	288	872
tile()	47	100	14	522	709
wandering	76	120	5	630	907
numpy.fft.rfftfreq	77	124	458	324	438
Suggest	47	48	143	424	835
turned	50	264	292	210	781
arr.ravel()	34	222	361	404	694
openpyxl	91	122	86	638	561
shx2's	10	17	254	710	441
Field	38	162	191	519	837
Matlab	60	296	375	364	631
borough	79	144	487	276	653
_offsets3d	31	6	388	399	397
zoo	13	265	375	364	631
intends	3	59	361	404	908
Half	21	223	266	751	176
phi=	96	266	31	391	13
Hall	11	109	490	567	870
plattform	84	119	167	697	321
funcion	60	40	444	742	709
twodim	74	293	4	509	228
hunt	88	232	232	144	781
offload	76	218	345	445	803
opposite	47	21	25	122	908
buffer	3	188	447	312	450
numpy.lexsort	42	27	286	358	146
DataFrame.from_records	43	157	72	24	448
printed	61	37	328	699	59
np.atleast_1d	42	30	286	74	263
evaluator	76	51	65	169	730
sortedness	94	222	273	706	160
-statement	15	37	222	699	59
Instances	2	215	328	514	720
messier	88	257	61	334	695
phis	34	77	0	73	336
redirected	40	37	429	699	954
Retention	95	181	373	211	428
poissonian	77	214	132	783	4
DataArray	34	220	329	514	720
omdb_info	53	95	51	339	779
dimensioned	34	77	0	73	694
img.sum	75	227	385	65	486
PyArg_ParseTuple	3	40	444	15	314
friction	20	170	48	195	416
clip_path	31	13	388	399	879
cbook.py	37	250	475	205	173
inconsistent	12	152	301	618	120
aggressive	88	152	5	334	53
imagined	24	59	229	444	483
.254	54	50	300	797	139
recomended	13	26	63	118	398
Berlin	99	268	318	686	27
autofmt_xdate()	5	148	363	19	844
efficently	2	116	145	706	356
windowed	20	93	382	191	989
pandas-way	88	48	61	630	31
zipfile	36	153	336	423	942
simplistic	88	257	61	450	950
build_src	67	57	167	499	315
ploting	59	52	495	51	710
fig.add_subplot	46	284	255	577	430
14:13	54	186	318	372	789
ACTUAL	95	39	335	316	649
trys	3	220	444	514	172
could've	50	264	114	210	747
plt.colorbar()	46	203	348	653	55
YES	24	212	55	136	965
key=lambda	75	32	54	690	838
vision	13	248	7	195	964
numpy.NAN	3	68	12	514	910
dgesvd	15	135	261	215	957
find()	60	296	375	364	631
attenuated	20	93	425	391	344
decision_boundary	72	40	15	199	829
CUBLAS	7	51	428	418	166
matplotlib.animation	93	23	104	774	537
impressions	95	123	487	197	653
start_codon	48	123	148	572	763
plt.yscale	46	39	494	639	825
refreshes	29	187	128	167	2
drawnow	29	23	104	537	537
np.min	27	269	403	53	244
np.argmax()	81	288	266	588	283
Compilation	40	176	397	696	136
df.head	75	243	74	425	975
Jonas	24	109	222	444	469
Minitab	38	206	132	209	71
refreshed	29	154	128	427	2
Wikipedia's	4	193	372	387	371
head()	43	157	72	683	73
SNACODE	61	49	443	539	501
Unhashable	63	44	199	582	136
ready-to-use	7	26	63	697	398
pluck	81	21	342	203	950
sep=r	52	10	376	121	971
upper_left_vert	54	54	287	730	139
concentrated	81	170	266	391	176
^2+	96	201	18	68	62
circumference	39	149	438	733	116
v0.11.0	91	7	417	13	644
flipped	22	21	25	122	520
paring	50	116	145	573	781
s	47	174	254	710	441
workplace	84	119	2	410	580
expended	67	57	167	499	315
can't	47	59	392	143	835
Yosemite	19	7	306	301	232
countif	79	214	173	784	459
non-masked	6	269	12	53	244
Panel4D	43	265	75	771	921
usecase	88	257	61	630	612
data.values	42	27	396	489	228
figtext	5	148	30	134	518
constant	81	170	409	44	576
date()	43	63	68	426	452
TruncatedSVD	77	168	186	705	646
x.head	27	150	10	772	838
accelerometer	20	246	58	428	949
west	39	149	438	322	10
evolutionary	77	98	48	195	416
threshold	81	170	266	588	148
savetext	42	27	14	15	793
_don't_	76	232	232	419	53
compare-cumsum-groupby	4	17	342	589	448
wants	47	59	491	91	908
relations	77	270	41	400	234
rawkit	35	193	14	97	439
formed	34	21	328	98	187
photon	20	246	206	745	949
0.8.0	91	122	156	587	626
0.8.3	91	122	167	697	732
readings	79	147	206	101	675
photos	22	126	206	498	562
asnwer	24	200	394	567	81
hashtag	79	49	233	27	944
exp2	90	54	26	617	744
former	47	0	134	91	908
PLOT	30	212	182	392	965
Adjusted	99	78	450	762	746
fliers	59	159	383	386	608
single	2	21	233	91	338
squeezes	3	30	396	404	235
LimMag	95	39	335	168	649
squeezed	59	288	25	122	479
situation	12	152	147	630	950
Size	69	162	191	127	837
graphed	59	52	32	19	884
plt.subplots()	46	203	255	577	430
dubious	88	152	5	257	695
list.index()	42	27	14	313	244
X.min()	46	243	289	425	810
Eliminate	69	31	100	530	911
nbin	81	170	370	391	176
scatter3D	46	39	383	592	649
technology	13	213	63	118	537
first_layer	68	260	431	234	945
Profile	30	277	37	127	169
verified	2	215	292	210	187
12464	38	206	282	722	38
hostname	61	132	352	686	568
subplot_adjust()	5	284	284	245	479
verifies	12	220	95	212	866
TextMate	40	141	281	76	632
0.042725	54	50	368	429	449
visually	59	117	409	32	714
UTF	61	58	443	539	853
assigns	2	215	491	174	702
Map	69	162	191	61	837
Clear	24	109	229	444	2
transforms.py	37	250	27	475	194
constraining	77	98	458	279	738
edges	39	117	41	400	234
wired	50	37	301	284	120
Clean	69	271	237	281	837
Spherical	39	149	279	298	573
plt.pcolor	46	36	294	653	550
tracking	13	246	206	203	765
60,000	21	190	234	557	42
peculiarities	12	193	147	387	371
Max	95	138	159	789	698
df.index.levels	53	139	54	690	526
somevalue	74	233	54	690	526
dimension	34	77	251	73	694
persistently	71	153	446	702	457
NAG	55	128	330	477	372
being	2	215	328	91	187
BOS	54	186	300	797	139
NAN	6	68	12	130	910
sum2	44	297	4	509	228
sum1	90	297	385	509	486
recycled	29	215	447	570	187
BOM	61	58	443	563	209
Py_Finalize	29	218	429	384	169
minimized	77	98	458	396	738
sort_values	43	157	72	683	73
prefix=	86	112	276	57	128
generator	65	233	81	648	311
Tested	91	7	417	13	644
Completed	95	138	66	198	687
occluded	59	117	433	32	714
pickling	71	218	183	359	457
d3.js	93	23	90	537	537
NAs	6	68	12	130	910
aborts	40	37	44	384	315
0.054932	54	50	368	429	449
haystack	74	293	108	586	228
Annotation	31	1	388	399	879
Mad	4	121	264	646	500
j-th	74	195	239	255	577
rejoin	2	116	145	706	986
decomposed	85	194	280	431	485
sums	81	214	275	784	603
f.read	36	10	136	712	261
gestures	40	187	429	764	954
rasterized	93	61	315	99	54
kindall	47	59	392	630	469
preference	12	152	134	458	908
Amplitude	38	206	191	209	678
world	13	120	212	203	852
enums	13	94	181	145	195
decomposes	34	42	280	431	485
Example	69	235	342	347	560
error_matrix	90	297	4	239	744
fractile	78	288	266	391	283
contourlines	59	117	433	32	714
Case	30	162	191	280	560
satisfactory	18	264	393	75	564
learning	13	120	212	739	727
Aligning	69	52	100	209	837
pandas.concat()	43	157	72	683	956
Seriously	88	225	5	444	53
moreover	47	0	457	91	338
single-pass	10	202	356	327	668
00:15	99	253	119	525	256
new2.py	37	250	27	475	194
pinv()	60	296	102	431	751
cavity	39	126	235	184	949
python-dap	67	151	327	499	334
90x90	34	77	251	404	694
stacked=False	46	39	73	505	649
semantically	88	111	147	145	908
restoring	93	154	188	573	54
systemOfEquations	15	40	444	396	406
BFGS	77	98	458	279	438
SQUARE	59	154	284	245	479
arrow	59	149	438	122	116
Green's	20	98	248	191	989
retains	2	215	491	174	621
You'll	47	0	392	678	9
return_counts	42	27	349	358	833
scipy.optimize.curve_fit()	77	124	458	324	438
filtsize	44	205	251	196	201
10.6.7	84	7	2	301	321
10.6.6	19	7	306	301	232
10.6.4	19	7	167	301	321
10.6.8	19	7	306	301	232
Searching	50	264	393	75	564
non-missing	6	85	173	276	961
sys.version	40	112	184	103	630
340.99	99	281	453	155	419
cater	12	229	138	306	394
2011-1-1	53	139	42	250	199
skew	20	214	132	783	459
0.6.0	91	122	156	587	626
shapely	72	165	235	152	102
No	47	0	392	678	469
tosum	10	202	37	323	876
snittpris	53	139	42	250	775
Nd	34	77	0	73	694
Nx	44	205	251	196	357
Ny	44	205	251	196	943
Np	44	227	385	0	357
pivot	43	265	75	771	356
alas	88	59	393	75	469
Ns	44	205	370	196	201
Nt	44	205	251	196	357
DISPLAY	40	80	315	435	591
MSLINK	48	144	195	787	497
NL	95	298	373	787	497
NN	77	168	186	705	646
NO	30	212	55	136	965
NA	6	68	12	130	910
NB	47	235	342	450	604
ND	34	77	0	73	694
Gram-Schmidt	77	42	48	195	416
NX	47	174	392	751	835
redirection	40	119	429	609	377
NP	6	68	12	355	910
NR	30	174	117	751	262
NS	78	170	148	167	769
bubble	59	52	433	32	177
followers_df	57	49	456	170	451
Woops	24	200	493	504	991
N*	44	205	370	196	192
N+	44	205	370	196	192
continents	59	117	433	322	586
d.png	36	129	465	137	906
wits	11	120	114	35	64
dangers	35	152	60	419	908
Alternately	47	0	457	306	9
N=	21	160	258	323	655
N0	48	123	272	339	778
N1	41	276	370	107	778
N2	41	276	370	107	778
N3	44	276	370	196	778
plot_wireframe	31	13	495	199	627
plt.pause	29	203	348	123	55
abused	76	94	147	169	734
pull	35	116	220	292	92
rush	50	200	114	35	64
rage	44	174	177	396	192
data_dC	44	293	4	196	228
%time	40	277	281	76	632
dirty	88	257	61	675	237
scipy.org	67	193	372	387	594
trips	79	228	487	27	326
Kerkez	4	121	264	646	500
zsort=	46	39	73	316	649
Paths	31	1	330	205	720
creat	2	21	328	98	702
df.to_csv()	52	185	28	121	793
CAT1	48	123	486	339	682
associating	2	116	233	98	531
follow-up	4	225	254	472	81
formulation	12	42	490	170	81
watched	50	264	310	407	64
jargon	13	120	212	739	67
Real	69	162	191	61	837
high	81	170	409	44	562
ideally	47	0	392	91	338
Read	69	31	237	530	316
numpy.maximum()	42	27	14	313	244
thresholded	22	126	7	709	670
introspection	76	94	181	514	720
1440	21	223	234	557	252
x.date()	64	274	10	772	838
df.to_html()	36	61	86	24	975
MPLD3	93	23	90	537	537
divide	81	86	275	588	603
numpy.core.records.recarray	63	211	460	172	3
tricky	88	257	61	334	695
ready-made	72	48	382	630	31
posible	57	229	392	91	451
seberg's	4	17	254	710	441
sns.barplot	31	13	383	592	710
tricks	76	272	118	169	990
Explained	47	229	457	91	338
Hardware	38	271	282	519	38
eigh	60	296	102	431	751
gamma.fit	27	269	14	313	244
recognising	61	215	60	91	260
ds1_new	90	297	4	332	744
dataarray	47	229	131	522	451
scn	68	176	397	21	773
sci	5	148	494	19	348
Fit	77	206	132	147	71
10-30	21	160	274	323	655
rx	41	6	99	107	211
beware	12	152	147	618	621
sca	5	148	348	558	958
.remove	75	35	289	46	430
mplwidget	93	187	104	537	728
Fig	38	154	188	209	71
numpy-1.9.2rc1	67	112	276	57	128
causes	2	37	301	618	120
end-users	7	26	167	697	732
cvxopt	7	292	102	348	751
lognorm	77	214	132	147	4
Keras	38	168	342	450	537
.nanos	68	32	431	545	945
micro-optimizations	76	272	118	225	783
Thankyou	24	33	229	667	870
matplotlib.get_backend()	45	80	184	103	630
sympy	60	98	38	279	809
np.roll	42	30	286	74	263
2013-01-31	99	140	453	155	687
2015-03	99	140	453	198	884
4-1	96	195	18	617	62
I'am	11	109	394	203	31
gfortran	67	163	152	326	334
sans	45	230	448	767	909
shenanigans	76	232	382	306	439
rh	55	128	293	52	56
insufficiently	12	225	490	170	219
.set_xlim	5	284	253	558	430
sane	88	229	138	9	908
the_list	74	293	54	690	146
small	57	272	258	44	604
abbreviated	57	235	342	450	950
quicker	88	257	61	675	612
199	54	223	298	318	811
198	54	3	298	318	158
-BitAlchemist	24	200	493	504	991
195	54	3	101	297	158
194	54	3	101	332	862
numpy.unravel_index	42	30	286	358	146
196	54	223	298	318	158
191	54	223	298	318	995
190	21	223	498	318	252
193	54	3	101	297	158
gc'd	50	232	447	570	450
past	50	264	393	75	564
substitutions	96	42	38	279	809
displays	2	215	491	174	59
pass	2	229	457	306	709
investment	79	78	482	101	955
clock	21	160	206	167	27
mytup	74	174	74	509	262
FileNotFoundError	63	176	397	696	136
IndexErrors	50	37	301	618	888
clf.predict	27	256	74	668	994
subspaces	34	77	270	733	694
Planck's	96	201	426	560	142
serie1	48	144	195	178	637
hash	65	233	158	540	526
NA's	6	68	12	130	910
methodes	12	200	456	170	747
optparse	76	51	65	735	31
Charlie	95	181	373	455	496
fips	48	123	486	339	682
MANHATTAN	54	181	368	429	428
fipy	47	37	392	699	835
experience	13	120	212	118	727
prior	2	0	392	335	338
periodic	20	93	425	191	989
*256	68	32	201	28	482
*255	68	90	246	28	486
-1073741819	63	176	397	582	136
followed	47	264	292	252	59
over-simplified	57	235	490	450	81
reclaimed	29	188	447	570	450
re-drawn	29	154	128	123	203
re-compute	29	1	188	149	282
to_records	43	47	72	24	73
r'slope	46	39	73	316	649
type_check.py	37	250	52	475	194
3.2778	54	50	300	331	449
calcuate	34	21	275	522	603
non-monotonic	43	147	270	546	301
Crash	38	206	282	281	38
universally	88	152	123	145	908
squeeze=True	52	185	28	121	971
automate	13	48	126	306	360
Plotted	95	149	438	209	837
more	88	257	61	630	612
time_interval	75	243	385	425	484
door	29	187	128	407	769
initiated	29	215	328	167	187
tester	29	235	342	450	950
company	79	78	487	480	285
int_t	3	67	261	146	498
corrected	24	200	493	567	991
uint8	3	291	141	266	969
tested	50	264	292	210	59
r1	85	172	481	224	778
numpy.lib.recfunctions.append_fields	3	220	14	404	957
installing	67	151	210	351	104
totalData.plot	46	39	73	505	649
autocomplete	40	141	281	76	632
bias	77	219	132	783	454
Ashwini's	4	17	254	710	441
learn	11	120	212	739	727
knocked	57	235	342	450	950
Dict	65	162	158	540	739
non-symmetric	60	194	280	431	188
scramble	81	229	131	709	562
PyArrayObject	3	67	261	312	498
head_width	45	13	334	134	479
ponts	39	43	270	733	102
numpy.piecewise	72	98	458	742	438
mat2	74	195	4	255	577
Glasgow	95	268	373	168	497
huge	10	272	258	44	863
respective	2	21	233	251	702
simps	60	124	458	742	597
Pyinstaller	67	57	174	664	305
pyplot.bar()	31	14	383	568	710
simpy	31	232	457	306	439
multi_df.index	74	95	115	239	227
enlarge	59	154	284	245	479
Simulate	71	153	50	423	108
vlc	71	246	58	571	942
intended	88	59	147	91	908
variant	4	17	254	630	441
pd.get_dummies	64	256	418	548	443
OTHER	79	228	487	251	944
SOLVE	30	206	282	722	560
filename.csv	36	10	136	712	261
bioinformatics	13	120	126	203	765
Disclaimer	35	26	63	516	398
f_no_dot	10	202	37	323	876
eryksun	4	121	264	646	500
resemble	59	117	495	32	177
s.resample	64	287	449	48	48
bars.index	5	148	363	558	844
twisting	50	59	114	35	469
11.5	75	243	274	297	399
trellis	13	23	138	97	537
Trailing	61	58	452	539	501
QMSA	38	206	282	722	71
replied	18	15	45	472	922
polyhedron	39	52	495	209	177
circularity	12	170	344	44	563
mktime()	30	63	68	426	452
installed	67	151	210	351	104
resorts	76	94	65	404	235
paper	13	224	372	94	689
replies	24	109	394	140	870
ApplicationServices.framework	55	128	52	477	56
unique_df	53	95	51	448	779
roots	60	98	38	279	809
discretizing	81	98	48	195	738
80GB	21	127	355	159	359
jBLAS	10	202	37	323	876
symptoms	30	37	222	170	120
plotters	59	117	284	245	54
bypass	76	48	457	799	360
sauce	11	120	114	419	53
f.set_size_inches	75	243	385	425	484
colleague	50	264	292	407	747
MatplotlibDeprecationWarning	29	176	397	205	136
MS-DOS	40	141	429	384	632
set_yscale	46	13	383	639	825
Dux	46	35	289	46	649
document	61	49	50	27	1
non-identical	34	77	131	73	694
everytime	29	37	128	335	180
ast.literal_eval	65	233	81	589	448
courses	13	224	487	480	852
piping	71	246	58	609	600
shocking	10	188	355	44	863
2011-12-31	53	281	42	250	199
quesion	4	193	19	252	114
detect	2	229	7	709	670
figure.savefig	36	61	348	99	619
A=1	78	144	148	178	637
to_html	52	185	86	24	561
numeric	6	68	162	130	470
deterministically	12	59	301	699	120
300ms	21	160	234	323	655
9x9	34	77	258	88	943
operation	76	48	275	566	734
prototypes	47	94	138	91	260
;))	4	193	372	595	371
zero-size	63	44	199	582	888
.fill	74	297	4	509	228
All-NaN	63	44	135	130	350
research	13	120	393	75	564
senderle's	42	17	254	710	441
Report	38	224	282	686	38
offline	50	246	429	609	600
%R	15	135	319	36	823
Kurtosis	77	214	132	783	459
occurs	47	37	301	699	888
os.fork()	29	218	183	359	803
savefig.dpi	45	80	448	269	619
_macosx.so	40	176	44	205	315
Principle	38	206	282	722	899
eigenvalues	60	194	280	431	485
x_vars	29	37	128	764	2
definition	60	40	444	396	709
uwnd	74	95	222	185	995
covariogram	96	201	472	783	142
Screenshot	57	235	342	347	967
wide_to_long	43	265	72	376	956
TIMESTAMP	48	281	68	788	429
graphic	93	61	495	51	54
known_array	74	100	108	586	283
multi-index	43	265	75	771	921
rolling_mean()	81	147	275	784	817
widely-used	13	42	63	118	398
df_	64	47	406	551	779
Logistic	77	168	186	687	646
Elastic	67	119	210	607	377
3Z	85	201	370	560	142
Fri	99	186	318	34	789
Cache	76	218	183	359	959
brutally	10	272	118	225	863
preservation	12	222	122	702	621
f.seek	36	10	489	712	261
3X	10	202	37	534	876
display.precision	45	129	334	269	413
firsts	78	263	222	504	262
dfA	48	123	486	339	637
dfC	48	47	486	339	923
dfB	48	123	486	178	637
dfx	43	47	74	551	502
Started	38	271	19	281	114
dft	20	93	425	336	344
swipe	50	154	188	427	796
moderately	10	272	258	334	604
dfs	49	47	75	706	445
dfm	49	123	486	631	445
Implementing	76	179	169	722	145
dfn	49	47	406	631	445
pastable	57	239	463	183	800
calculations	76	272	275	203	734
Homebrew	67	151	210	351	104
dfg	53	123	272	197	779
dff	64	150	74	551	779
dfa	49	47	486	631	445
dfc	48	95	115	339	227
dfb	53	95	272	551	779
5.92	41	39	73	282	649
zticks	5	229	457	306	844
margins=True	64	150	103	197	48
pathArray	53	123	272	339	682
df=	36	10	376	551	971
Cancer	48	123	173	197	653
df5	53	139	51	448	821
df4	48	123	486	339	779
df1	49	281	486	631	445
df0	48	144	195	276	502
df3	49	47	486	631	445
df2	49	281	486	631	445
verbose=10	36	37	184	103	630
savemat	71	153	336	423	306
insertion	2	116	145	573	531
qustion	50	17	134	630	31
velx	41	6	177	107	397
scipy.weave.blitz	7	51	65	215	915
conjugate	20	93	248	191	708
scipy.integrate.quad	60	98	458	279	438
cleverness	88	120	61	35	612
reimplementing	76	26	65	257	417
half-open	14	159	297	725	411
sell	79	78	450	762	955
Triangle	69	162	191	61	837
self	31	40	444	236	314
107.000	30	50	368	429	428
also	47	0	392	91	338
recognizing	61	215	60	405	260
0.12.0	91	7	156	587	626
available_values	14	100	46	522	187
singles	61	49	162	522	260
x.shift	27	150	10	772	838
PyLab	40	141	281	76	632
masked_invalid	6	68	12	130	910
ax.annotate	46	226	30	316	753
lowest_gridpoints	74	100	108	586	577
virus	13	43	206	400	675
EXTREMELY	88	59	389	630	604
understands	47	215	491	174	260
fvector	74	293	216	509	228
incase	50	232	232	407	469
sometimes	47	152	147	618	604
rectified	50	264	292	210	747
TEST	30	181	373	185	965
Portfolio	38	271	159	264	698
ufunc's	76	27	14	313	244
pandas.get_dummies()	43	157	72	341	443
wording	18	225	490	472	81
ambiguities	12	152	134	552	563
ugh	24	200	493	504	469
blended	59	117	433	199	177
columnF	53	139	51	417	775
columnA	48	281	486	339	779
sublist	74	233	216	522	336
columnB	48	123	486	185	262
colorized	22	126	7	709	562
Has	50	264	143	75	652
Hat	19	7	432	590	156
overwhelmed	50	120	393	35	564
matplotlib.contour	50	59	301	699	888
blender	67	57	167	499	732
]]=	90	54	13	10	744
T's	78	48	389	706	986
tmp.txt	36	10	136	712	261
Optimizations	7	26	63	516	850
wiggles	39	117	231	322	116
sega_sai	4	17	254	710	441
2368999.932089	90	297	257	10	995
Base	61	271	373	514	517
df.map	64	150	10	551	838
read_sql_query()	52	171	473	128	88
]]'	90	54	257	332	995
df1.index	49	47	406	631	445
Bash	40	141	429	76	632
store.append	53	211	74	551	369
]]]	90	54	287	10	585
os.path.basename	36	10	136	712	261
SQL-style	49	47	75	706	356
cbar_ax	31	13	388	592	444
remedy	11	48	9	799	360
compass	39	126	438	322	949
logfile	40	37	429	764	954
RandomizedSearchCV	77	168	186	705	646
distraction	24	109	229	444	870
column-	34	144	131	522	944
*-devel	67	112	327	232	334
adapts	2	229	457	306	394
savefig.bbox	45	80	136	36	906
bytes	3	291	85	608	44
Reduction	69	162	191	61	739
column=	46	39	73	505	649
Bago's	4	17	254	710	441
schemes	13	23	134	97	606
pd.DataFrame.from_csv	52	185	376	121	971
Polynomial	77	98	458	324	438
column4	48	123	163	185	682
IDE's	40	141	281	76	632
column1	48	123	486	339	682
]]`	90	54	13	10	585
column3	48	123	486	339	682
column2	48	123	486	339	682
insane	88	59	5	284	695
318	54	108	101	158	931
GROUP	48	212	182	547	965
FTP	71	246	429	609	600
313	54	3	331	187	158
312	54	3	331	187	158
311	54	3	101	187	158
310	54	108	101	332	931
317	54	186	298	187	811
labelspacing	5	13	253	134	518
315	54	3	101	187	158
314	54	3	101	187	158
28x28	22	126	251	45	943
matplotlib.__file__	15	112	184	308	630
2dim	34	30	286	73	694
overboard	50	120	114	35	695
multi-indexed	43	265	75	771	921
#the	36	174	117	211	262
analog	20	246	375	428	631
python33	67	132	44	384	791
deactivate	40	187	276	113	137
exchange	13	78	450	762	746
sub-DataFrames	43	157	72	771	956
numpy.save	71	153	336	702	306
nitpick	14	86	314	145	908
leveraging	76	51	345	169	990
warn_bad_lines	45	185	334	269	793
c-level	76	51	65	169	730
Schorsch	24	109	394	140	870
pprint.pprint	15	135	329	663	720
synchronizing	2	232	457	306	439
python2.6	55	132	52	151	372
untouched	2	263	25	405	520
)')`	86	89	163	299	66
Weights	38	206	191	264	698
np.broadcast	42	30	286	74	263
add_z	41	6	177	282	397
scipy.spatial.distance.euclidean	60	270	472	313	662
21:00	99	69	119	525	256
Neil	4	121	264	102	500
Regret	90	297	4	509	228
scipy.savetxt	86	129	117	211	486
dimentions	34	77	0	73	694
gca()	46	203	348	577	430
tom10's	4	17	254	710	441
Debian's	67	151	167	697	732
author_id	48	123	487	787	285
np.ones_like	42	227	286	358	146
bell	20	214	132	147	4
acted	2	215	328	98	187
incompatibilities	67	163	152	241	850
adaptation	4	17	382	661	989
23:00	99	69	119	525	762
210018	79	298	419	467	361
210019	47	174	419	751	262
ax.matshow	46	39	348	577	430
belt	13	232	232	458	950
array_like	3	220	329	514	890
Shapefile	71	73	214	152	586
ISO3	53	123	486	339	82
bbox_to_anchor()	31	13	383	592	518
DEMs	39	126	206	195	949
Carl	95	78	487	686	741
kronecker	10	194	37	225	598
d.something	53	260	51	682	199
Card	27	260	431	234	945
Care	57	235	143	37	451
top-down	59	117	25	122	714
adaptable	88	257	61	334	612
awake	50	200	114	793	64
Yield	95	271	159	519	38
presses	29	187	188	427	2
underdetermined	77	42	38	279	809
GOAL	30	212	55	136	965
exponential	77	98	132	147	4
minimaindex	90	204	108	586	995
expanded	2	215	328	91	187
empirical	77	214	132	147	4
Marked	24	15	264	646	922
admire	24	109	229	444	469
pressed	29	187	188	427	2
32	84	291	85	608	644
Marker	59	52	433	134	608
drawable	31	1	388	399	444
new_shape	44	227	228	0	357
Market	38	292	64	61	38
increment	78	100	216	167	603
vol	78	104	453	198	955
averaging	81	147	275	733	603
von	72	126	495	147	4
binding	29	218	181	149	195
hover	59	154	188	427	203
despine	31	13	388	618	908
.__getitem__	74	293	26	690	526
signal-processing	13	120	126	203	765
np.float64_t	3	67	26	146	235
re-shape	34	116	145	566	356
numpy.round	14	29	14	325	549
scipy.special.expit	60	124	458	742	438
read	71	153	50	423	108
Name2	48	144	195	787	502
metric=	85	270	472	5	662
Name1	48	144	75	787	502
ugliness	76	272	118	257	695
full-screen	93	154	188	427	203
Readability	30	162	191	145	114
numpy.random.binomial	42	27	14	313	709
Then	47	0	392	678	544
FeatureUnion	42	292	186	702	646
existent	2	263	456	405	338
INDICES	90	293	26	509	228
2014-12-28	57	235	490	37	451
implement	76	48	65	630	360
infamous	47	37	301	699	888
2014-12-29	99	140	453	155	762
knn	77	168	186	705	646
df2.index.hour	64	150	256	250	775
Named	69	162	191	61	837
NANOSECONDS	99	281	66	788	687
Names	48	138	159	789	653
16:52	30	271	338	281	560
bundled	67	151	210	351	104
copes	72	165	409	235	604
Karl	24	121	264	646	500
recoverable	61	49	50	539	260
v1.4.1	35	122	220	292	376
v1.4.0	91	122	156	587	230
v1.4.3	91	122	156	587	230
politely	18	225	490	472	81
2.75	91	108	23	579	322
ax=None	46	35	73	176	649
3040	78	204	456	682	199
O3	54	298	419	751	361
O2	7	51	428	485	741
O1	7	298	419	485	741
optimize.newton	90	40	444	396	314
cufft	12	183	131	534	783
skipinitialspace=True	52	185	376	114	971
img_hogs	47	256	328	98	994
multi-year	79	147	450	101	817
y+1	41	6	289	282	397
parents	29	1	41	236	444
ax.plot()	31	203	348	123	55
cnt	74	233	54	690	833
comprehensible	88	257	61	334	612
csv_chunks	65	233	54	750	526
Marnach's	4	17	254	710	441
float32	14	291	141	608	969
On	47	0	445	678	544
a_t	41	6	177	107	397
Ok	24	200	493	504	991
x_pos	34	77	216	522	336
Oh	24	200	493	504	991
Of	47	0	392	678	544
couple	50	264	393	35	564
y_arr	42	40	0	73	336
Oz	24	109	229	444	870
Oy	24	200	235	504	469
Os	19	7	306	301	232
Or	47	0	392	678	835
Op	12	116	275	170	563
OO	13	23	104	537	195
ON	30	212	182	136	965
counterintuitive	88	152	147	145	908
OK	24	200	493	504	469
plot_date()	5	13	383	558	745
OH	24	200	493	504	991
spine	5	148	30	134	518
OF	30	212	55	136	965
y+h	68	32	289	545	486
interweb	13	193	126	387	371
OA	18	183	490	485	741
to_rgb	63	44	201	559	858
individuals	79	228	487	480	285
OX	84	57	167	301	321
A.copy()	44	227	228	5	598
OS	19	7	306	301	232
OR	30	111	95	18	272
spins	29	43	235	167	769
OP	4	17	490	252	908
Capture	38	162	191	209	837
Major_axis	99	69	318	155	221
methods	76	94	138	630	720
pings	20	214	173	784	459
methode	47	48	61	630	31
ncol	75	227	228	0	810
00.000000	99	69	119	155	256
ijk	44	143	215	5	37
MiKTeX	84	230	448	767	909
Effectively	2	21	491	174	544
Frank	24	121	394	567	500
measurements	81	147	206	101	949
gateway	57	120	5	419	53
behave	47	94	147	145	908
inserting	2	116	145	573	531
OsX	40	7	167	697	321
method2	10	202	37	323	876
method1	10	202	37	323	876
method=	64	85	449	48	48
CFFI	35	51	65	2	730
obscured	59	117	433	32	714
Hello	24	109	394	140	870
np.subtract	42	30	137	74	595
deserved	18	15	45	472	922
simplify	57	235	342	799	360
weekends	99	140	450	109	94
chg	74	293	108	509	228
argsort	42	27	349	358	640
deserves	18	15	45	472	922
StartTime	79	144	195	787	944
chi	77	124	132	783	162
1gb	21	127	355	159	359
dopri5	60	296	102	279	438
well-versed	11	120	212	739	907
intc	3	291	162	608	969
pp.close()	29	37	128	699	55
into	2	116	145	91	986
warpPerspective	22	4	7	141	722
neglects	78	86	275	391	283
intp	3	291	162	266	470
ints	14	291	162	325	470
andrews_curves	48	100	456	276	502
contributor	12	183	409	44	371
RING	22	4	294	438	672
set_ylim()	5	148	253	558	958
scilimits	46	39	73	316	649
clustering	77	168	186	705	899
uncertainties	77	270	132	783	738
Unzip	38	271	259	281	38
span	81	147	270	546	326
nicer-looking	5	13	457	558	441
spam	18	225	45	647	1
hyperspectral	34	126	258	45	943
NumpyDoc	31	23	19	97	439
downloadable	35	239	372	60	594
User	30	271	259	281	38
int_	3	18	162	266	969
opens	40	187	128	764	364
toeplitz	42	202	88	404	581
considerably	10	202	37	323	876
int*	3	67	261	312	498
originallist	90	297	26	509	228
timedeltas	94	63	68	426	452
Resolution	38	162	191	209	837
int8	14	291	141	266	969
plt.rcParams	45	80	448	269	906
numpy-sharedmem	35	193	372	387	371
Awesome	24	33	229	140	870
astronomer	13	120	212	739	727
preprocessed	2	116	328	98	563
index=range	75	243	385	425	484
bill	88	229	332	630	371
faded	22	4	433	32	198
filt	64	150	51	551	48
moarningsun	4	121	264	646	500
rrule	95	298	419	751	38
Cython	7	51	428	2	915
plt.gcf()	46	203	348	770	55
natively	76	26	138	9	398
Integers	14	162	191	61	890
influence	12	170	409	44	576
globally	45	0	457	335	315
f77blas	55	163	386	636	56
diverse	13	26	63	118	765
chat	35	225	220	292	509
x-positions	41	6	438	69	116
puzzling	50	59	147	284	120
NonUniformImage	72	13	14	592	627
np.ravel	42	30	286	358	263
revision	35	122	220	567	594
0.5	96	266	324	695	421
Phrases	69	162	191	789	739
la.inv()	3	220	447	212	450
integer-based	94	111	115	369	227
suppression	12	152	409	618	120
prudent	88	257	5	630	612
lang	48	228	487	480	682
land	39	117	235	322	586
methodologies	47	94	131	251	694
100*100	21	190	258	45	655
algorithm	77	42	48	195	905
label=r	46	39	73	316	649
6.26	27	260	431	234	945
Skipping	69	31	100	127	316
train	77	168	186	705	646
Cournapeau	4	121	264	646	500
pandas.tslib.Timedelta	63	63	68	426	452
49.83072758	54	50	368	331	449
Clarification	30	212	55	347	560
DateTimesy	49	287	406	631	445
Jim	95	121	264	102	741
scipy.ndimage.filters.generic_filter	60	27	14	313	396
Upvoted	24	109	229	444	264
2013-09-09	54	69	119	158	126
toggle	29	154	188	427	2
broader	18	225	5	419	219
amiss	57	37	301	424	625
contourf	22	13	294	199	627
cython	7	51	428	215	915
numpy.argmin()	42	27	14	675	244
item_name	53	181	373	455	775
Python-numpy	10	59	37	91	876
scipy.sparse.diags	60	292	64	348	218
contours	39	117	433	199	586
hints	11	173	389	763	867
resources	13	26	126	697	219
uploaded	57	239	342	450	451
Heaviside	60	98	458	742	438
15:23	99	69	119	155	256
double-checked	50	264	292	210	59
Subplots	69	162	191	209	837
optimize.fsolve	60	98	38	279	809
decorating	42	40	14	15	709
ax.add_artist	31	13	388	592	879
Graham's	72	294	38	279	809
precompute	10	272	118	327	863
qt4agg	93	80	104	435	591
Render	69	162	237	209	837
embarked	79	228	487	480	741
fewer	21	190	234	557	604
inelegant	88	257	61	675	695
.sum	27	269	403	65	598
set_color	31	1	388	399	879
.sub	64	150	406	631	48
df_test	85	256	370	668	994
element's	74	100	239	487	336
594	54	3	298	187	158
math.fsum	27	269	403	65	396
heapq.nlargest	75	233	54	690	526
Mathematically	60	42	38	431	809
Credit_exp	53	139	51	682	199
Winston's	4	17	254	710	441
show_graph	15	135	319	777	823
dynamics	13	42	48	195	416
Transformation	38	179	248	191	145
2015-06-17	95	214	324	8	459
intel's	7	163	428	418	166
ATpy	13	26	122	118	457
turnaround	11	109	229	444	867
flowing	39	126	7	709	562
funtion	31	40	444	149	282
Freedom	95	298	419	338	361
reduce_C_function	22	13	297	171	271
colleague's	40	57	167	664	321
Supposed	2	21	131	251	262
r_div	78	100	216	616	456
fifteen	81	147	450	101	326
mailinglist	35	225	220	71	509
stats.gaussian_kde	60	124	177	742	4
5577	84	163	33	590	322
Extract	69	31	100	530	911
headline	61	49	490	539	81
sys.getsizeof()	50	188	60	699	863
survey	79	228	487	480	285
scipys	72	165	382	235	396
makes	88	59	491	174	908
maker	2	215	444	514	720
thats	24	200	493	504	469
c.csv	36	10	50	712	261
2011-01-07	99	253	453	525	256
Pasted	57	235	490	37	81
Signature	53	139	42	417	775
Pigeon	48	123	486	339	682
DataFrame	43	265	72	771	356
pf1	44	195	370	196	192
erroring	50	37	301	699	59
reserved	61	58	123	145	195
.corr	53	139	256	250	775
confidence	77	214	132	104	4
Presently	81	21	266	588	338
Sold	95	228	159	168	517
guideline	13	26	372	118	606
python-for-android	67	57	167	604	732
eleven	78	43	266	64	944
Solr	71	116	126	203	457
givens	60	40	181	396	439
pencil	39	117	235	400	760
Octave	60	296	375	364	631
oct2py	7	57	167	499	732
undeclared	63	176	164	582	572
entries_of_interest	74	293	26	509	228
self.predictor	44	205	251	196	581
pick_event	29	187	188	149	282
Merge	69	31	100	530	739
file.h5	94	239	446	293	729
LgRnk	48	123	486	197	653
actualy	12	42	143	630	360
ax.errorbar	46	39	289	592	649
customer	79	144	487	787	285
hessian	60	98	458	279	438
integrating	20	98	38	279	809
clients	79	119	90	609	285
unknowns	85	172	38	279	809
histtype	46	14	383	505	649
plt.xlabel()	46	203	348	577	430
scatter	59	52	495	199	710
xcb	63	271	397	281	136
wedge	59	52	32	32	116
process	71	218	183	167	959
lock	29	218	183	445	803
locs	5	148	363	46	844
str.count	65	157	72	589	448
Adapt	29	1	444	236	444
ATLAS	7	163	428	418	166
haversine	60	270	472	742	662
schemas	71	153	86	638	561
chop	2	25	232	306	781
educational	13	120	212	458	852
sizers	93	154	188	427	203
?!...	11	173	143	763	652
tvska$	55	112	276	57	128
.dat	36	153	50	423	108
numerous	50	264	393	75	564
sucess	50	59	373	731	517
Troubleshooting	30	193	19	281	114
bnds	74	233	54	690	486
my_colors	46	39	73	316	649
Win64	84	163	152	241	850
n_lines	90	297	4	239	744
underway	35	225	220	292	106
Time-series	69	31	100	209	911
num_classes	44	205	370	196	192
loc=	46	226	494	505	348
pocket	76	120	232	419	53
realized	50	200	292	210	747
cv2.imwrite	36	90	246	141	942
lame	88	200	179	739	67
robot	39	126	48	195	416
One	47	0	134	678	544
Qstring	15	57	199	735	888
Replicating	69	179	122	61	739
Drink	53	50	368	429	624
mute	47	229	457	306	338
mtrand	15	135	319	205	823
volts	20	147	206	507	27
insight	11	173	389	763	867
1.4.3	91	7	417	587	230
stock-mach.py	37	250	27	475	194
])`	90	297	13	10	585
interoperable	71	94	122	702	457
x_list	41	6	177	107	577
perfect	24	109	229	140	264
])]	90	54	13	10	585
Scientific	38	224	282	110	689
vectorizers	77	168	186	705	646
meantime	35	122	232	292	376
Python3.4	84	7	417	301	644
Python3.2	84	57	167	301	791
corr()	43	157	72	742	956
stalled	35	122	220	407	64
unbounded	14	170	409	44	84
a.py	40	141	281	76	632
derivative	20	98	458	279	438
]);	75	32	13	10	585
]):	75	297	54	690	585
])=	68	32	13	10	585
putpixel	88	59	88	334	876
color-coded	59	4	433	621	177
Register	3	215	329	514	720
]))	68	32	13	10	585
lamz	74	6	177	107	211
pbaspect	5	13	457	306	479
Extensions	7	163	386	499	850
snake	12	59	114	419	469
Works	24	109	106	140	870
realize	50	200	292	210	747
])'	90	54	13	10	744
reconstruction	20	93	248	191	84
off-center	59	117	284	245	714
concave	39	149	231	733	102
shortage	50	127	355	159	359
Python3.x	65	26	65	735	311
reproducing	57	235	463	37	766
homogeneous	34	94	122	73	694
cStringIO	36	135	336	312	885
columns=None	3	18	74	682	314
RDMS	71	171	303	128	457
bump	50	232	232	35	576
FOUN	30	271	55	429	428
Opencv	22	248	381	141	722
-1s	78	144	195	64	944
books	13	228	372	480	285
pareto	77	214	495	147	4
witness	12	152	134	618	120
fundamentally	12	59	147	145	908
arctangent	60	194	248	396	622
nowadays	84	26	63	697	398
dtype=str	52	10	376	266	971
plot.ly	93	23	90	537	537
Store	69	162	191	281	739
b.mask	27	260	431	509	945
W-SUN	99	268	449	48	687
defualt	2	215	328	98	187
adaptive	72	98	382	652	989
Prices	95	138	159	168	746
highs	41	6	335	198	687
c_normalized	68	32	431	545	945
Attempt	30	271	237	347	560
unwieldy	88	257	61	334	695
greedy	12	42	409	327	905
-11	68	32	18	397	62
-10	96	266	324	397	810
-13	68	266	257	397	421
-12	68	266	324	397	421
Expecting	63	44	199	582	888
convolutions	20	93	382	191	697
-16	68	266	324	397	421
initialize	2	229	328	404	338
-18	54	54	324	397	421
Passing	69	31	237	530	316
concatinate	34	116	145	706	694
\mathrm	45	230	448	767	909
full-featured	13	23	138	118	398
Zhu's	4	17	254	710	441
transferable	88	257	61	334	612
could	47	0	392	143	338
numpy.nanmean	42	27	14	313	244
fminunc	60	296	458	742	438
length	81	21	131	546	336
sharex=ax1	5	284	253	577	518
aproaches	77	168	186	705	646
repeats	78	49	131	167	944
500.0	68	266	201	234	482
untested	57	235	342	424	950
1344	44	205	385	196	357
scene	59	126	433	571	177
Connecting	69	31	495	209	837
bar-plot	59	14	32	621	884
WORKS	30	212	55	136	965
scent	50	43	235	167	769
1-m	96	219	370	391	192
x-index	34	77	216	522	336
_copy_	34	188	361	404	273
Eastern	99	268	318	679	27
ordering	12	21	337	708	520
Grouper	43	157	103	683	956
string.split	65	27	14	15	448
Heres	57	235	342	450	451
))=	96	29	18	28	62
np.log	96	29	18	173	598
dX_dv	60	40	444	742	622
dX_dt	60	40	444	396	622
denominators	14	86	314	325	238
interests	13	228	487	480	285
Treatment	95	298	419	467	497
cflags	88	57	167	697	315
2015-05-31	54	50	368	429	428
out.csv	36	10	376	712	261
namespacing	12	152	181	257	195
12x12	34	77	258	88	943
np.put	42	27	286	358	146
data.shape	75	205	228	0	357
freetype2	67	151	327	326	334
cx_Oracle	71	171	473	128	88
Existing	69	162	191	61	739
radius	39	149	438	93	116
getbuffer	3	220	336	312	235
numpy.copyto	3	220	261	157	235
matplotlib's	31	23	495	51	627
colourbar	5	4	433	19	198
Rows	69	162	191	789	739
false	6	100	95	355	148
shrinks	5	154	284	245	479
.ffill()	64	85	406	631	48
GF4	3	220	329	663	235
tonight	11	232	232	407	64
ndarray.tolist()	42	27	88	404	581
chi-square	77	214	132	783	162
Meter	53	181	373	211	199
falsy	14	94	95	355	866
Android	84	119	58	609	600
9am	99	140	453	109	94
depict	59	79	41	400	234
Wakari	40	119	281	76	321
how-to	18	225	372	387	219
%cpaste	60	40	444	236	709
fseek	76	51	65	215	957
zcosmo	41	288	324	200	421
Weather	38	271	214	519	38
shrinkB	45	226	30	134	608
bisection	72	42	38	152	809
shrinkA	45	226	30	134	608
Bayesian	77	168	48	652	353
Resizing	2	188	284	245	479
220189	78	204	419	168	361
Row1	78	144	195	547	637
Row2	78	144	195	547	502
np.linalg.norm	27	269	403	65	598
shrink=	46	39	289	316	649
hpaulj	4	121	264	646	500
jdata	65	233	54	690	526
Y1	85	172	481	333	170
df_addresses	53	139	406	551	775
Mode	69	162	259	281	402
regressing	41	170	270	546	301
numpy.flatiter	3	220	460	172	787
Y3	85	172	481	333	170
so-called	76	111	147	145	621
placement	5	148	32	19	479
pre-specified	34	21	0	91	694
Sudo	67	112	167	499	315
curiously	6	68	456	618	469
\pandas\tools\	37	250	27	475	889
plot-window	29	187	128	764	2
sources.list	55	132	352	113	568
self.df	53	220	329	514	406
overwrites	2	215	491	174	275
plt.semilogy	5	13	383	592	710
rolling_apply	43	157	103	784	956
dependant	2	21	416	91	702
pd.read	47	48	456	675	31
80-bit	14	291	142	608	44
itertools.chain.from_iterable	65	233	81	648	526
inductor	20	93	248	191	989
total_paid	48	123	173	197	653
W_hidden	44	292	251	88	218
GOOGL	95	78	373	686	955
nominally	38	117	235	167	177
trying	47	120	392	203	907
Pennington	24	200	490	567	81
flyveren	55	128	52	477	568
y_t	85	201	177	560	192
jar	40	109	232	444	53
Update	4	17	254	347	560
2**n	14	100	46	391	192
y_n	68	201	426	560	142
axhspan	5	148	253	558	844
2**m	44	243	46	196	192
y_i	85	241	370	107	142
subplotting	59	23	495	51	710
jac	60	98	458	396	438
Pweave	93	229	457	51	54
Keep	47	0	237	678	544
Objective-C	7	26	65	2	730
ax.scatter()	31	203	348	123	55
+1j	68	266	23	695	421
sinus	20	93	425	191	344
wring	57	235	222	450	451
Rating	48	138	159	789	653
textsize	5	170	284	245	576
determinants	77	42	280	431	485
looping	76	116	145	573	207
2**4	81	288	284	200	479
comprising	81	21	258	546	702
y_1	41	172	370	560	391
y_0	41	201	426	560	391
Well-written	7	51	65	2	730
stuff	13	232	232	35	417
17ms	10	202	37	323	876
monkey-patching	76	220	329	663	720
Brent	60	193	19	514	905
Pr	85	194	280	704	62
Ps	4	121	490	567	81
file.write	36	10	336	157	314
frame	2	265	145	405	356
z.T	41	195	177	107	397
blockshaped	44	227	385	0	357
Pa	85	6	370	391	192
libav	67	57	167	499	732
nimfa	60	57	167	697	732
Pi	84	246	58	609	600
Pn	85	172	177	224	597
sys.getdefaultencoding()	15	112	184	103	630
PR	35	122	220	292	106
PS	47	235	342	630	54
PP	55	298	419	467	568
stop_words	45	13	14	15	709
insulting	18	225	45	419	53
self-taught	11	120	212	739	727
06459200	54	50	300	331	299
PB	79	298	419	467	38
PC	84	127	2	410	321
PA	85	298	419	168	497
PF	54	181	287	730	428
PD	81	270	472	588	662
membrane	39	126	206	195	949
repetitively	10	188	118	573	863
grp4	79	228	173	101	167
PN	95	298	419	467	497
PL	15	135	319	777	823
PM	99	253	318	525	256
csvreader	36	10	222	712	942
hard-coding	2	116	181	573	531
P0	85	172	481	224	778
P1	85	172	481	224	778
np.bool_	3	220	361	146	235
idx+1	90	260	431	234	945
ISO-8859-1	52	58	443	563	209
hierarchial	43	265	75	771	356
wondering	88	48	61	630	907
Mpmath	14	51	142	325	549
staring	50	200	114	793	64
result's	74	49	131	522	944
extendable	76	272	61	334	612
.??	59	52	32	51	884
denormal	14	86	314	325	84
corrcoef	60	219	472	742	396
builders	76	26	65	655	398
ushort	3	291	85	608	969
a_positions	59	52	433	621	198
np.interp()	42	27	14	313	709
indice	78	49	239	616	456
conclude	23	59	392	252	908
0,100	75	243	289	46	810
0,102	75	243	370	200	486
dataframe	43	265	75	771	356
stylistically	88	257	61	675	612
100,200	44	205	251	196	252
star_name	52	10	376	121	971
Elevation	38	147	206	766	949
SIGSEGV	63	176	397	582	136
x_inp	44	227	251	0	357
cv2	15	248	381	141	722
s=20	46	39	73	316	649
mask=False	3	220	88	404	866
genetic	77	42	48	195	416
tz-aware	94	63	68	426	452
no_features	44	205	251	0	357
cv.imshow	45	291	141	266	969
x_inc	90	297	13	397	744
]]:	90	297	13	239	744
StandardScaler	35	168	19	341	443
>	27	260	431	234	945
strLibPath	3	67	272	157	865
pandas.DataFrame.to_csv	52	185	28	121	793
*args	31	35	444	176	314
loadtxt()	52	185	336	423	793
coherence	20	93	425	191	344
1d-arrays	41	6	177	107	336
Compile	7	163	56	326	915
tsv	71	153	50	423	108
+10	96	266	324	397	421
web-server	40	119	429	609	377
+17	90	54	257	332	744
allData	74	297	54	10	228
09:35	99	253	119	525	256
sortable	65	94	158	540	890
+15	90	54	257	713	776
09:32	54	69	119	158	126
+14	86	18	465	211	199
cvs	71	153	50	638	561
MatPlotLib	93	57	495	209	537
.std	75	227	385	65	486
hahaha	24	200	493	504	469
rbg	22	4	294	438	672
rbf	77	165	15	235	570
pupynere	71	153	50	423	108
..??	59	52	32	19	884
pychecker	40	37	44	384	315
Pipes	71	218	183	445	803
__reduce__	3	220	329	663	720
10^x	5	148	32	19	844
energylist	74	195	4	255	577
spektrum	78	204	338	198	502
cohort	79	78	450	101	395
2.7.x	19	7	167	241	644
level=0	64	150	406	197	48
level=1	64	47	406	631	294
non-iterative	88	257	61	675	612
RNN	77	168	48	705	353
Regular	69	162	191	61	837
PyTypeObject	3	220	329	514	720
corrcoef()	81	270	472	588	662
1.2s	10	202	37	323	876
900MHz	20	93	425	709	344
planned	35	232	126	407	765
10^1	5	288	324	19	129
10^0	96	288	324	19	129
10^3	21	190	234	557	129
10^2	96	288	324	19	129
10^5	21	190	234	557	252
10^4	21	190	258	557	129
10^7	21	190	234	557	355
max_dd	10	170	275	167	769
10^9	21	160	234	557	655
10^8	21	190	234	557	42
colnames	48	49	486	339	502
2015-11-01	54	69	119	158	126
identity	34	194	280	431	485
ofc	47	174	117	690	262
2.7.8	19	7	417	13	972
2.7.9	19	7	417	13	972
functionalities	13	26	138	118	398
2.7.4	19	7	417	13	644
2.7.5	19	7	417	13	644
2.7.6	19	7	417	13	644
2.7.7	19	7	417	13	972
2.7.0	91	122	156	587	376
2.7.1	19	7	417	13	972
2.7.2	19	7	417	13	644
2.7.3	19	7	417	13	644
patterns	81	49	131	27	944
backpropagation	77	168	186	705	905
oft	2	215	457	618	621
Artists	31	1	388	399	879
1.23	86	108	23	579	421
1.22	96	108	23	695	421
1.21	10	160	274	297	399
audio	20	246	58	428	600
1.27	24	160	274	323	655
1.25	96	266	324	695	421
pymc3	77	206	132	783	71
Lag	81	298	419	742	262
sklearn.metrics	15	135	319	777	823
Similarly	47	0	392	678	544
tokenizing	63	11	296	582	25
CGAL	13	26	63	118	398
dot1	27	29	385	699	969
Filename	36	10	489	712	261
clocks	10	160	274	323	655
v0.17.1	91	122	156	587	230
v0.17.0	91	57	167	664	732
loglikelihood	77	124	458	324	738
dtype=uint8	54	90	201	758	158
web	13	119	90	609	537
RendererAgg	31	1	388	399	879
wee	88	59	114	35	695
normaltest	60	214	14	742	709
axs.size	44	293	216	509	146
PatchCollection	31	1	388	399	271
toyed	50	232	393	35	564
wes	50	264	292	407	747
valid	47	215	456	355	888
readibility	3	94	147	145	606
crack	11	120	114	35	64
practise	88	257	5	334	604
tics	5	288	32	19	129
svmlight	71	153	50	423	108
set_color()	31	1	388	399	879
normalise	81	214	275	171	603
MatPlotlib	38	162	191	61	837
uploads	71	246	58	609	600
crux	12	17	134	552	120
source_node	65	40	444	396	622
tick	5	148	32	19	844
pies	59	52	335	51	518
debatable	88	152	5	419	908
gridspecs	59	52	233	51	518
seaborn.clustermap	43	265	72	771	356
GTK	93	187	104	435	591
extremely	88	59	5	334	604
np_vertices=	75	227	385	266	486
min_overall	53	123	51	197	199
flickering	29	187	128	764	2
become	2	21	392	91	338
df1.iloc	90	297	13	239	744
ISINs	48	144	195	787	637
scipy.misc.imread	36	90	246	141	942
grids	72	165	270	733	301
polyfit()	60	124	458	324	438
mxstep	96	172	177	396	236
time-step	81	98	48	195	416
gymnastics	12	152	147	618	908
scatters	59	52	495	51	177
choosing	12	21	409	91	563
flush	29	218	447	570	450
|V|	96	201	356	327	668
2403900	99	140	453	198	603
recognition	13	210	7	94	899
just-in-time	7	51	428	169	915
kidda	57	120	212	144	727
1.00000000e	54	54	257	713	776
fitCovariances	57	37	301	618	120
biology	13	120	48	195	765
hstack	42	30	286	74	595
AdamsBashforth4	37	250	27	187	194
y-Axis	39	288	438	200	479
pressure	39	126	206	766	949
Python-pandas	6	68	456	574	739
posterity	4	17	254	458	441
imaginary	20	175	425	191	389
Element	69	162	191	61	837
Sci	38	224	282	94	689
VOL	53	139	51	417	775
VON	86	181	373	185	437
current_drop	68	32	13	545	945
union	43	265	75	706	356
time-dependent	77	98	458	279	416
equally-spaced	81	21	270	733	301
materializing	42	48	88	675	612
grayed	40	187	188	764	954
plt.minorticks_on()	46	148	289	46	810
Image()	71	61	381	141	942
artefact	12	152	409	618	563
letters	61	49	452	86	501
Somewhere	61	215	222	697	260
sharpness	10	170	284	245	576
sender	79	144	487	60	92
numpy.append()	65	188	88	750	581
RawArray	71	188	447	359	450
imgFinal	90	297	4	509	228
saveas	15	203	444	236	444
pairing	34	49	131	522	944
ndtr	96	29	18	173	13
terminates	29	37	128	764	954
yrs	99	140	453	198	687
Exact	38	162	191	281	114
opencv's	60	296	7	742	570
Matlab's	60	296	375	364	631
n-dimension	34	77	0	73	694
Calcbench	57	235	342	450	950
Healthcare	54	50	368	429	624
pre-built	67	151	470	219	104
df.to_excel	52	185	86	638	561
fragmentation	76	127	447	570	450
tossed	50	264	292	75	564
r**2	96	266	438	3	421
places	47	263	392	91	338
shrunk	59	117	284	245	479
.jit	3	67	261	157	498
placed	2	215	328	122	187
problem	12	59	60	799	120
bigram	79	144	487	27	1
newton()	60	98	458	279	438
graphml	71	79	41	60	234
0.0000001	96	29	18	173	62
numpy.polyfit	77	124	458	324	438
_lot_	88	272	5	257	606
NULL	6	68	12	130	910
effected	2	215	456	405	187
bzip2	71	153	446	702	306
compared	10	202	37	534	876
nonetheless	24	109	229	444	264
NDFrame	3	220	329	663	890
lately	50	264	393	75	564
compares	2	100	491	534	783
details	57	193	19	387	371
n_outputs	44	205	154	196	994
behold	47	57	392	630	469
worthwile	88	257	61	675	612
illusion	76	272	5	552	990
Structure	69	162	191	265	739
Pyglet	93	248	381	571	722
February	99	182	318	372	94
repeat	2	21	131	522	338
ULP	14	86	314	391	74
U	85	194	280	5	192
nicest	88	257	61	675	327
Categorial	38	162	191	61	739
exposure	81	246	206	428	959
searches	50	264	393	75	564
usefull	11	120	212	334	264
compete	10	229	118	534	783
block_diag	60	296	102	348	751
searched	50	264	393	75	564
]]"	90	54	257	10	585
magnetic	39	149	438	93	949
no-site-packages	67	112	276	598	137
NavigationToolbar	93	154	104	537	728
yikes	24	109	493	567	53
large_repr	86	129	465	36	906
entropy	77	214	132	783	162
python-3	93	57	167	697	732
2,201	54	69	119	338	361
NYC	79	228	206	101	675
integrity	2	116	456	405	713
not-a-number	6	68	12	130	910
converters={0	86	129	465	137	347
docutils	93	61	90	97	537
flags=	86	89	163	299	66
fixed-length	61	94	122	702	405
Binning	69	31	100	530	911
v.s.	81	214	132	621	698
numpy.lib.recfunctions.join_by	88	59	61	334	695
neighbours	39	43	239	588	283
arr1d	44	227	228	0	263
China	95	268	373	686	497
worth	88	59	5	334	604
summarizes	57	235	342	450	950
.iget()	60	111	19	369	371
splitting	2	116	145	706	986
Pipe	71	218	183	359	803
replication	12	183	345	445	162
NEAs	78	288	266	19	176
summarized	57	235	342	98	950
numpy.seterr	45	80	334	269	350
pyximport	7	163	428	215	915
progression	81	147	275	264	603
train_dict	74	256	54	586	994
raw_data	36	174	74	551	923
cmd	40	141	281	76	632
roadblock	50	120	126	35	564
1+x	96	201	18	173	13
notifying	24	109	394	140	870
row_number	90	95	115	239	227
starttime	48	281	68	198	687
deadline	11	232	232	407	64
cmp	65	157	14	15	866
SqlAlchemy	71	171	303	128	88
Datetimeindex	43	265	72	771	956
Troubles	84	7	167	301	321
numpy.argwhere	42	27	286	313	244
pands	43	265	292	210	747
non-tuple	3	111	329	514	890
data|model1	96	201	18	173	62
ndarray.reshape	42	30	286	74	263
panda	43	265	145	771	356
machines	84	119	2	241	321
pd_series	74	116	145	522	356
filtration	43	157	72	683	956
preds	53	256	74	668	994
Game	38	271	48	519	38
petri	39	126	206	498	949
slots	81	21	131	167	769
lambdified	60	40	444	169	709
Sally	79	228	487	102	285
Jupyter	40	141	281	76	632
zero-indexed	78	111	216	616	77
np.arctan	96	29	18	173	13
somefunc	75	227	385	0	263
protection	12	152	134	552	398
stresses	39	126	231	93	949
np.float32_t	3	67	261	146	498
otterb	24	109	394	140	870
random_list	74	293	108	586	577
seamlessly	71	26	183	359	959
pred2	95	181	335	168	497
Peel's	4	17	254	710	441
stressed	18	225	490	252	81
Absolute	38	206	282	264	698
equivalence	60	94	131	534	783
pandas.io.sql.read_sql	71	171	473	128	88
90000	21	223	234	557	252
bro	24	33	229	79	870
n_x	74	293	396	509	146
scitools	67	57	167	499	732
2014-08-08	54	69	119	158	126
exaclty	57	235	342	450	59
DataFrame.drop	43	47	72	24	73
coins	81	190	258	327	176
bundles	13	57	63	422	732
get_level_values	43	157	72	683	956
canvas.copy_from_bbox	46	203	348	123	55
tryin	40	57	301	699	888
vertexes	39	43	188	167	102
separated	61	58	452	539	501
becouse	12	232	5	144	53
GeForce	84	127	2	410	580
nan's	6	68	12	130	910
month_delta	99	63	68	155	687
Df1	78	144	195	787	559
1970-01-16	54	69	119	158	126
regrouping	43	265	75	574	356
separates	2	215	491	174	702
unraveled	34	77	0	566	520
Normally	47	0	392	678	544
blocking	29	187	128	764	954
numpy.triu	6	47	72	683	73
m*m	85	194	280	88	192
1990	99	182	318	372	687
1993	54	186	318	372	361
1992	99	140	318	372	687
1995	99	96	318	372	94
1994	54	186	300	372	299
err	27	29	177	28	469
1996	38	298	318	372	361
1999	99	182	318	372	94
1998	99	186	318	372	789
tnx	24	109	394	140	870
Header	95	271	159	789	115
erf	96	29	18	173	13
containment	65	94	158	540	866
elbow	77	183	409	44	162
erm	4	17	490	252	81
EVER	88	152	5	419	53
hinting	12	59	60	252	371
scripting	13	26	63	118	730
anticipating	50	264	114	35	907
subtleties	12	152	147	552	606
next_each	27	260	431	234	945
indicated	4	215	60	252	187
repos	67	151	210	351	156
Ralph	53	123	51	339	779
indicates	47	215	491	487	702
Abs	60	40	458	396	406
all_results	90	297	13	617	744
scrollbars	93	154	188	427	203
0.1.1	91	57	167	587	230
subchart	59	271	495	519	884
np.bincount()	47	174	14	313	709
vert	81	170	235	588	603
smoothest	81	170	266	588	283
recovery	71	218	126	359	959
NormStrike	78	170	148	391	769
provide	57	235	463	37	451
nuts	11	120	114	284	727
recovers	2	215	328	98	59
libfreetype-devel	67	112	276	499	128
Iterate	69	31	100	530	911
Segment	2	138	335	789	653
arcs	39	43	41	400	116
ladder	76	51	65	169	417
gboffi's	4	17	254	710	324
fillna	6	85	418	700	73
mpi	76	272	345	445	959
arch	84	119	2	499	321
sorted	78	233	337	708	640
elusive	50	109	114	444	64
datalim	5	226	494	757	508
.....,	90	54	257	10	995
rerunning	40	37	222	699	954
......	36	174	117	751	262
appreciate	11	173	389	763	867
purging	67	57	44	664	315
Sphere	38	206	282	722	71
log_fact	47	21	392	91	338
nsfg	15	57	44	664	594
popsicle	77	98	206	588	738
12.3	84	108	23	579	322
12.2	54	108	23	579	399
12.1	54	108	274	297	399
12.0	54	108	23	579	322
12.6	54	108	23	8	931
12.5	54	108	23	579	399
12.4	54	108	23	579	931
OS-specific	93	57	167	697	321
12.9	54	108	23	579	399
12.8	54	108	23	297	399
Moore-Penrose	60	194	280	431	485
_numpy	7	51	65	2	730
suffix	61	49	443	363	502
asymptotes	59	117	29	32	116
cartogram	13	126	214	400	177
Bands	95	298	419	686	497
What's	47	48	445	678	835
17:00	99	253	119	525	256
production	13	183	126	458	765
00-05	54	69	119	158	126
np.choose	42	27	286	358	244
overshoot	72	170	231	235	84
artist.py	37	250	27	314	173
coffee	18	200	493	407	64
2,000	21	190	234	557	42
Ditto	78	49	338	251	456
mis-understanding	88	48	392	424	907
safe	3	94	147	145	908
collide	59	117	284	780	714
outer()	60	40	14	15	709
Motion	38	206	282	519	38
Kassies	24	121	264	646	500
workflows	13	26	126	203	765
StringIO.StringIO	36	58	489	712	942
ctypeslib	55	135	330	205	461
big_list	90	297	13	10	744
simplices	39	43	279	152	102
changelog	35	122	156	292	376
HEALPix	39	248	214	571	573
routines	76	51	65	169	730
l	74	195	4	255	577
matplotlib.pyplot.streamplot	35	193	19	9	371
max_rows	45	185	334	269	413
n_components	77	205	370	196	201
reasonable	88	183	409	44	604
2013-05-30	99	2	119	525	256
Substituting	27	29	254	751	144
feeds	71	153	491	174	260
associative	34	194	280	431	734
Reshape	69	31	100	530	520
query_ball_point	72	27	472	152	570
Typo	24	200	493	567	991
pythonw.exe	40	176	397	764	954
Csv	71	246	50	60	108
Type	95	271	159	281	653
slew	13	26	235	118	618
superscripts	61	230	448	86	374
GeoTIFF	71	248	214	571	593
sourced	71	239	303	60	92
self.data	75	233	74	425	526
GSL	7	51	63	2	730
tupple	3	233	162	540	34
inarray	68	259	431	234	945
barrier	10	272	235	44	863
leftovers	2	229	131	251	338
%config	45	80	334	269	906
allLabelPredict	74	100	108	586	228
Embedding	93	23	104	537	728
forcibly	94	222	457	548	160
detecting	12	117	60	709	563
temp.append	90	297	13	10	744
Ugh	24	200	493	504	991
matplotlib.pyplot.imsave	93	61	315	141	942
work-around	88	48	61	630	31
Metric	95	298	335	168	361
flawless	35	26	63	697	594
I-V	38	206	495	722	71
c-style	34	116	145	404	694
scanf	76	51	65	169	730
render	93	61	495	51	54
synonymous	47	111	147	145	114
MaxNLocator	5	148	363	558	844
short-circuits	27	100	95	18	866
another	2	21	392	91	338
electronic	13	78	126	195	852
illustrate	57	235	342	450	766
-2147483648	14	291	46	325	482
cartesian	39	149	279	766	573
int's	61	291	162	735	260
parser.pyd	37	250	27	475	194
2059	44	205	251	196	357
approximately	21	160	234	557	655
.legend()	5	148	255	592	844
rasterizing	93	61	113	99	54
john	95	181	373	686	57
dogs	79	228	206	480	852
opting	88	0	5	419	53
resampled	99	147	449	48	817
offhand	12	289	5	419	907
wastes	10	188	355	573	863
wasted	24	272	114	444	863
december	99	140	453	109	94
blitting	93	154	104	123	203
A.toarray()	44	292	64	348	218
div()	42	157	14	15	956
max_depth	77	170	409	44	576
developping	13	120	48	195	416
historical	79	78	450	762	746
CLASSIFICADOES	53	139	42	417	624
apparantly	94	171	473	128	88
Q1	99	159	173	104	616
Q3	99	159	324	104	616
Q2	48	159	173	104	616
Q5	68	32	257	234	945
Q4	99	140	173	101	616
respecting	69	31	100	789	739
script-	63	37	199	582	888
i-th	74	195	239	616	577
75%	21	160	266	104	176
Wolfram	96	86	314	191	939
contents	2	49	50	405	854
pythontex	13	26	19	97	439
n-dim	34	77	0	73	694
convenient	88	257	61	675	612
numpy.random.rand	75	219	228	725	484
hexbin()	22	13	294	51	627
TSS	79	43	206	480	852
subjects	79	228	487	480	285
self.cft_id	90	95	115	239	227
easy_install	67	151	327	232	334
canonical	88	257	61	675	327
Gallery	13	193	372	387	704
ndpointer	3	220	261	312	235
bilinear	72	36	15	235	570
Qs	2	116	145	203	356
nobody	18	225	5	419	53
Qt	93	187	104	537	728
Artist	31	1	388	399	879
germane	18	225	490	419	907
Button	29	187	259	149	323
Resolving	63	271	199	582	136
troughs	20	93	231	588	283
NumberCalls	53	139	42	250	199
scripts	40	141	429	76	632
assessed	12	183	409	44	563
W4L	54	108	300	797	139
IndentationError	63	44	199	582	298
-br	24	200	493	646	991
Luck	24	109	229	444	870
QQ	77	214	132	147	4
QP	60	42	38	279	809
QS	44	205	370	196	192
QR	60	194	280	431	485
QT	93	187	104	537	728
Ubuntu's	67	151	327	499	732
Delauney	72	165	15	152	570
QA	35	193	372	527	509
QC	6	68	456	355	910
bracket	61	263	452	230	298
x.pow	68	32	18	173	62
boils	88	59	491	799	781
reserve	6	188	447	573	863
Ridge	77	168	186	705	646
\numpy\lib\	37	250	27	314	889
usetex=True	45	230	448	767	348
Vectorised	10	202	37	323	876
data.rei	48	281	50	294	502
disturbs	12	152	25	122	120
PAE	84	127	2	159	359
myarray2	90	297	361	509	995
9.78998	54	50	368	331	19
line.strip()	36	10	489	712	261
PAM	7	51	44	215	305
numpy.ascontiguousarray()	76	188	361	404	450
Wno-error	55	112	276	57	128
uniques	78	144	195	522	944
facecolor	31	13	294	134	608
ellipsoid	39	149	438	93	102
panned	59	154	188	427	203
throttling	84	119	345	697	377
dataframe.head()	57	239	74	769	975
append_fields	42	27	14	15	957
DCT	20	93	248	191	344
rectangle	59	154	433	32	203
.gca()	46	203	348	577	430
Kington's	4	17	254	710	552
simpler	88	257	61	675	612
degradation	10	272	118	225	990
roundabout	88	257	61	675	695
downtime	99	147	173	198	687
long-format	43	265	72	771	356
beleive	47	59	392	630	31
Loud	38	206	282	429	428
0.97	46	54	289	695	421
runs	10	160	491	699	59
emf	93	61	315	99	374
cell-by-cell	76	272	118	169	207
df.select_dtypes	64	47	418	548	48
Agent	48	281	66	197	653
plt1	46	39	444	592	314
ems	90	174	330	188	250
NPY_DOUBLE	3	67	261	157	969
datetime.datetime.utcfromtimestamp	47	37	199	699	888
AES	71	153	258	423	108
reread	18	200	490	504	991
module's	15	135	319	777	873
totNEA2014	75	243	289	46	810
which_col	74	100	272	178	199
lt.cm.Spectral	46	36	294	653	488
horrendous	88	257	61	334	695
discussions	50	193	393	75	219
applicaiton	61	49	373	185	517
optimum	77	98	231	279	809
techniques	13	42	126	118	765
get_ylim()	31	13	388	558	879
2's	78	298	487	526	513
draws	59	52	491	174	177
plt.draw()	29	203	348	123	55
pasted	57	239	222	450	975
away	47	232	232	618	781
12.000000	54	108	300	797	139
.fits	71	248	214	423	593
Dtypes	69	265	122	789	739
Repeated	69	215	328	405	187
theta_matrix	78	49	239	616	456
figure.figsize	45	80	136	269	906
drawn	59	52	433	32	177
lasso	77	154	188	427	528
misguided	12	59	147	419	908
pastes	2	37	491	769	847
INCORRECT	30	212	373	185	517
C-API	7	51	65	2	730
handful	13	26	138	118	604
histogram()	42	157	297	171	341
Shapes	38	162	191	61	837
visited	79	228	487	231	285
Weird	50	59	301	210	120
kitchen	65	291	85	522	526
11.85	54	50	300	158	139
essentially	47	21	392	91	908
Bring	2	49	145	706	986
categoricals	94	222	162	702	470
disappears	29	37	128	764	954
EMS's	4	17	254	710	441
Load	69	31	100	530	316
tone	20	93	425	507	344
surfaceplot	39	52	495	93	177
mutations	79	228	206	498	675
tons	50	232	393	35	564
applicability	12	183	409	552	563
gratitude	18	225	45	567	922
latitude-longitude	39	149	279	766	573
tolerances	14	98	31	279	236
I've	50	264	393	75	564
QIIME	40	57	429	697	321
bar-graphs	59	14	383	568	710
np.fromfile	36	10	336	712	306
lockup	63	37	301	699	954
math.exp()	60	40	14	15	709
SMA_15	78	140	148	87	742
fdata.loc	53	139	13	612	821
Dialog	29	187	128	236	2
MasterUserId	85	181	182	197	35
integer_id	48	123	486	197	653
MultinomialNB	63	168	186	133	646
epsilon=	68	266	46	695	236
line_list	2	21	131	98	336
reciprocal	60	270	472	431	662
gnu	7	163	152	215	305
hat	12	194	280	431	485
pdf.savefig()	29	203	348	123	55
a.view	3	291	141	266	969
pyshell	37	250	27	187	194
hav	78	100	266	391	283
endpoints	39	149	29	733	116
Ascii	61	58	443	539	260
tupels	78	147	131	522	944
cylinder	39	149	438	192	116
cons	13	193	134	552	219
cont	41	35	289	282	397
conv	75	174	117	690	314
prop={	46	226	494	730	348
CVS	71	153	50	423	108
_could_	4	232	232	630	439
index_array	90	195	4	617	744
conc	75	174	272	751	211
512^3	10	170	258	44	576
THanks	24	33	229	667	870
conf	71	48	389	697	895
conj	96	201	18	336	62
conn	36	10	182	343	314
canvases	93	154	104	537	728
self.wData	90	297	431	617	744
ta.SMA()	47	40	103	750	709
ratings.dat	36	10	44	384	305
np.log()	60	86	275	742	603
grid_z	41	6	289	282	397
grid_y	41	39	289	282	397
grid_x	41	39	289	282	397
synch	2	21	131	522	944
survival	77	214	132	147	4
wheel	67	151	470	125	104
fuss	88	257	61	444	384
hang	29	218	128	764	954
counterparts	76	94	65	325	734
hand	47	0	445	122	338
fuse	76	263	118	522	207
animations	93	23	104	537	537
browser-based	13	23	90	118	537
Warren's	4	17	254	710	441
matplotlib.axes._subplots.AxesSubplot	31	1	388	399	879
y_fit	96	201	177	282	201
whereby	2	21	233	91	621
Windows-specific	35	122	220	292	106
1600	21	223	234	557	252
humble	13	225	342	458	950
CV2	22	248	381	141	722
wxagg	93	80	315	435	591
client	71	119	90	609	600
humbly	18	225	490	567	81
wopt	27	40	444	396	622
TS1	57	239	490	170	451
mic	71	246	58	428	600
non-trivial	76	272	118	334	604
BACKEND	30	271	330	429	428
plt.tight_layout()	5	284	348	757	518
Win8	84	7	432	241	644
neater	88	257	61	675	327
proccess	11	160	143	167	769
AnnotationBbox	93	13	388	51	54
newton	60	98	458	279	438
Win7	19	7	432	301	644
criterions	77	168	186	783	738
Cartesian	39	149	279	766	573
thanks	24	33	229	667	870
Users\pauldufosse\Anaconda\lib\	37	250	27	475	889
8.16	54	54	300	338	139
integer-valued	81	21	145	546	603
C-level	76	51	65	169	730
shoud	47	0	392	424	835
superuser.com	18	225	45	472	922
ipdb	40	141	281	76	12
shoul	6	204	456	391	910
draw_event	29	187	188	149	282
opencv	22	248	381	141	722
shout	18	225	232	144	53
Errno	63	176	397	696	819
baselines	39	149	279	733	102
Reset	69	31	237	281	402
usable	88	257	138	334	612
insensitive	61	49	337	27	1
_escape_cdata	36	10	136	712	261
Colour	22	4	381	438	672
tricking	22	248	381	320	722
iOS	84	119	63	241	850
B.ix	74	297	4	239	821
800200.2986	30	50	368	429	428
mutiple	69	31	233	251	986
.unique()	64	150	256	72	48
Jansen	24	121	264	646	500
designers	12	94	147	145	606
Wing	40	141	281	76	402
Wind	99	298	66	198	687
Wine	30	271	337	519	38
eroded	22	117	25	122	979
Fresno	95	298	419	338	361
sublevel	48	144	75	276	356
Certain	94	162	191	117	739
scikit-learn	77	168	186	705	646
temporally	93	246	429	51	54
sparse	34	292	64	348	218
night	50	264	114	407	64
revisiting	50	200	490	210	907
str.match	65	157	14	589	448
flatter	88	257	61	257	612
born	79	228	487	480	852
trainDF	53	139	51	668	779
bork	35	122	156	9	376
flatten	34	30	396	566	520
NFFT	20	93	425	191	344
bore	12	59	5	144	53
confusing	88	59	147	144	695
figure.savefig()	93	203	128	123	55
site-package	55	132	352	384	305
SpanSelector	29	187	104	537	728
x_values	46	148	289	46	810
semi-definite	77	194	280	431	485
asking	18	225	490	170	907
sample_date	48	123	486	168	82
participation	11	257	232	630	53
y-offset	31	42	38	279	90
\sklearn\svm\	37	250	27	475	194
peel	59	232	232	32	781
elucidate	11	225	490	567	81
E2_func	74	195	4	509	228
time-series	81	147	450	101	817
Near	39	43	235	400	116
Neat	24	109	229	140	870
Gram	77	42	280	431	485
architectural	12	152	5	419	563
substitution	60	42	38	279	809
peer	18	15	490	472	81
Grab	2	215	237	174	92
.to_json()	94	95	74	551	975
mimics	57	235	342	450	343
ludmo	3	220	328	514	3
df.corr()	94	95	115	239	227
tsplot	31	14	383	568	710
fphysics	55	128	330	477	568
profession	12	183	212	170	852
curios	11	120	114	35	907
candlesticks	59	52	450	19	884
rendering	93	61	315	99	54
sub-dataframe	48	144	262	276	637
-lm	55	128	293	52	56
array_list	74	297	26	509	228
stumble	18	225	143	35	652
familiarize	13	120	212	118	727
abaqus	40	57	429	664	791
checkmark	18	15	45	472	922
Lagrangian	12	42	235	279	738
list_of_items	74	174	117	690	262
*fvec	29	40	447	570	406
inner1d	10	202	137	418	876
mycol	53	139	51	682	199
diligence	12	183	409	44	53
python-bits	84	57	167	241	321
candlestick2	5	148	363	19	844
needles	74	100	158	690	526
np.arange	75	243	385	425	484
CompanyName	48	123	486	631	82
maximum	81	21	266	588	283
pcolorfast	31	13	388	592	627
00:10	99	69	119	155	256
np.random.random_sample	75	243	385	425	486
faking	50	59	147	210	908
isin	43	157	72	683	956
LineString	39	149	279	199	102
guesses	12	183	458	279	563
request	35	15	220	292	106
Squared	38	206	472	264	698
NUMBER	95	298	419	686	497
postscript	93	61	315	99	374
.reset_index	64	150	406	548	48
guessed	50	264	292	210	747
expertise	11	225	212	739	67
BACKGROUND	30	212	55	136	965
Squares	77	206	282	722	905
xlim()	5	148	322	558	844
.set_ylim	46	284	289	46	339
refactor	76	232	232	257	417
STDEV	60	219	472	784	454
test	57	183	342	534	783
group.plot	64	150	335	197	653
CreateFig	29	203	128	236	2
hashtable.c	37	250	27	314	802
DataFrame.fillna	43	157	19	15	956
Mysql	71	171	303	60	92
update	2	229	457	335	180
let's	47	21	342	450	927
Trial	49	47	406	631	445
Atleast	57	225	490	37	451
time_range	94	63	68	426	390
Consistency	36	239	50	712	517
BSON	71	153	162	423	457
}	86	129	287	479	585
interval	81	147	270	391	603
SublimeText3	40	57	429	76	632
cmath	60	135	319	735	957
Kth	78	144	195	276	944
drop_duplicates	43	47	72	683	73
songs	79	228	206	480	675
df.index.labels	90	297	13	239	227
concept	13	59	147	145	908
sys.getrefcount	75	174	117	751	486
F_k	68	32	18	617	62
supplement	4	193	372	670	552
F_s	85	195	370	391	192
battle	50	264	114	35	990
y-limits	5	284	253	558	339
interlaced	59	52	233	51	54
layers	59	126	233	251	177
touches	50	232	235	167	769
visualizer	71	246	90	609	537
bpython	40	141	281	76	632
zeroing	34	188	88	566	581
gigs	21	127	355	159	359
numpy.ndenumerate	42	27	286	358	244
Scipy's	72	165	15	235	570
a's	78	100	216	616	456
recoding	76	116	126	221	473
tasklist	65	233	337	708	517
MultiGraph	39	79	41	400	234
include_start	45	157	334	1	866
ConnectionPatch	31	52	495	199	177
non-loop	10	202	37	675	31
F_2	14	194	280	431	485
Followed	4	121	264	646	552
get_support	43	220	95	514	866
visualized	59	126	495	98	177
data_source	30	181	117	751	262
FormatStrFormatter	5	148	363	558	844
turns	50	264	491	210	781
gui	93	187	104	537	728
fftw	7	51	65	2	957
gun	18	200	493	504	991
ffts	60	296	382	742	989
soooo	24	109	229	140	870
gut	88	59	5	419	53
guy	18	225	372	407	852
cvMat	22	248	381	141	722
alfa	60	40	426	396	13
verifiable	57	235	463	160	607
CMD	40	141	281	76	632
CMB	71	248	214	571	108
PyQt5	93	187	104	368	591
cosh	14	86	314	279	238
cost	10	272	118	225	863
populating	2	116	145	573	531
01:00	99	253	119	525	256
numpy.array_equal	42	27	286	313	244
font_manager	45	80	448	205	372
sharey	5	284	255	577	518
sharex	5	284	255	558	518
mlab.py	37	250	475	205	173
shares	79	78	450	101	955
Ford	95	298	487	102	741
Admittedly	88	59	114	334	695
shared	2	218	447	359	450
Representing	69	31	100	61	71
.shift	64	150	256	72	131
np.complex64	3	291	141	266	969
values.tolist()	65	27	14	15	709
uninstalling	67	151	327	232	104
cel's	4	17	254	710	441
Attached	57	235	342	450	120
rollReturnRandomDf	78	95	115	239	182
English	18	225	179	739	67
root's	4	17	254	710	441
Distribution	38	206	132	147	4
sieve	10	272	118	327	238
teaches	18	225	5	145	195
teacher	79	228	487	469	285
sending	71	218	183	359	600
hdf5	71	153	446	702	457
backticks	61	58	452	230	298
plotter	39	126	495	199	177
spacial	81	6	270	766	301
VisPy	13	26	63	537	537
plottet	78	223	338	200	252
burdensome	88	272	118	334	604
upvote	18	15	45	472	922
domains	39	98	231	400	102
ancient	91	122	156	587	376
freqDf	47	49	222	405	888
435	37	3	298	187	158
432	54	223	298	8	158
pillow	93	248	381	368	872
430	21	223	298	200	692
431	54	3	154	338	357
indNZ	74	293	54	690	577
regardless	47	21	392	91	338
Plotly	93	23	90	51	537
extra	2	263	452	618	338
colorline	31	13	388	592	879
10**509	14	86	314	325	549
high-density	81	43	41	733	301
Dimensions	69	162	191	61	837
Isaac	24	200	394	567	469
bumps	81	170	235	44	576
regex	61	89	163	589	448
bigx	41	6	270	586	301
numpy.int64	3	18	460	172	787
f6	53	139	272	36	214
np.rollaxis	42	30	286	74	263
centrality	79	228	41	400	234
coalesce	76	265	375	574	734
wonderfully	24	109	229	140	870
double-quote	61	58	452	539	501
thresholding	22	126	7	709	670
\scipy\fftpack\	37	250	27	475	194
+0200	54	69	119	158	997
Normalizing	69	31	100	530	603
dx^2	96	201	426	560	13
animated=True	29	203	348	123	55
fmin_ncg	60	40	458	742	709
work.I	47	229	457	306	371
defeats	88	59	491	573	207
purge	67	151	327	664	334
syntactically	88	257	61	675	695
trans	44	292	64	348	218
ma.masked_array	27	259	211	41	945
chip	79	126	206	203	375
Contains	69	162	191	789	739
didn't	50	264	292	210	747
axes.spines	46	226	494	46	348
Runge	77	98	458	279	438
occur	12	37	301	618	120
Shows	38	235	342	281	560
iteration's	29	263	128	167	769
lxml	67	171	44	499	732
discussion	35	193	372	387	509
spreads	81	214	173	733	603
numpy.std()	60	219	103	784	396
f-	96	29	18	173	62
positional	31	111	123	369	709
multipy	85	100	131	522	192
sciPy	60	296	375	742	738
Dropbox	71	239	50	443	639
Datatypes	71	162	191	61	114
matplotllib	59	57	495	51	177
economy	81	183	258	458	950
Concatenate	69	31	100	530	911
product	34	194	472	5	598
ax1.set_ylabel	46	226	494	316	348
chi2	77	168	186	705	646
bitarrays	76	94	131	251	439
implicity	94	222	456	588	160
produce	47	21	392	91	59
Martin	24	121	264	102	500
drastic	10	202	37	44	876
Model	38	206	282	722	353
pre-requisite	47	57	167	499	732
5.625	68	54	257	713	449
to_sql()	52	171	473	128	88
Radio	38	246	48	195	416
----------	30	128	293	429	428
Numexpr	7	51	428	2	734
opts	45	129	117	269	906
approx	21	190	234	557	655
serving	71	116	90	609	92
Sheet	95	271	86	638	561
Rs	11	59	373	444	469
np.kron	44	30	356	74	15
Rx	96	194	18	704	598
raised	63	44	199	582	888
Rz	85	194	280	5	598
pie-chart	59	52	32	32	884
Re	4	200	254	228	560
Rf	85	201	426	560	192
Exporting	69	31	100	530	316
Feb	99	182	318	34	519
still	47	59	392	91	469
no1	78	100	216	522	336
RT	48	49	74	170	262
RV	81	214	132	783	162
xycoords	5	226	30	134	348
builtins	65	135	81	735	195
RS	95	298	373	686	38
RE	30	263	456	281	114
RF	79	168	186	705	646
RA	41	6	324	200	573
affraid	88	120	5	419	907
RC	93	61	315	99	374
a.k.a	40	112	276	499	128
Image.fromarray()	22	90	381	141	722
RK	77	98	458	279	438
correspondence	81	21	131	546	563
non	2	21	456	91	338
R0	48	123	51	448	821
R1	85	172	419	467	778
R2	77	124	132	467	597
R3	48	204	272	467	361
rotations	39	149	438	298	573
chain.from_iterable	65	27	81	648	311
alist	74	233	54	690	577
2011-04-01	54	69	119	158	126
introduce	12	229	409	618	563
mutliple	69	31	191	789	739
soo	24	109	229	444	870
not	47	59	392	91	908
eq_data	36	10	489	712	261
now	50	59	392	567	469
nop	2	37	222	699	957
nor	47	0	392	91	544
nos	21	140	234	167	326
layering	22	117	235	709	562
inversion	60	42	280	431	485
C-function	60	40	444	312	957
thankful	11	173	389	763	867
re-sampled	71	147	450	203	817
pd.merge()	49	47	72	683	73
drop	6	263	456	405	36
hermitian	60	194	280	431	708
22.0	68	139	42	417	624
os.system()	29	277	444	236	169
instabilities	14	86	314	279	84
random.seed	60	219	14	725	484
space-delimited	61	153	50	539	108
prompted	4	37	490	567	81
non-NA	6	68	456	130	910
random.sample()	42	27	81	725	244
challenges	13	183	134	552	219
replay	24	109	394	140	870
DONE	24	212	55	136	870
yeap	24	200	493	504	991
Passed	63	162	199	582	136
year	99	140	453	109	94
Expected	63	11	296	347	25
naming	12	152	181	145	195
scipy.signal	20	93	382	336	396
\numpy\core\include	37	250	386	475	194
fargs	31	40	444	201	444
ifAction	53	139	51	239	821
furthermore	47	0	392	91	544
rpy2.ipython	15	57	44	36	823
ListedColormap	31	4	294	653	271
wholeheartedly	4	225	5	419	53
datetime.date()	94	63	68	426	452
spark-env.sh	67	132	352	113	137
uwsgi	71	218	183	445	803
python_select	67	112	276	57	128
divergence	20	270	472	191	662
.zfill	68	32	117	211	486
diagnostic	57	183	377	203	765
dependencies	67	151	327	351	104
unwanted	6	263	456	618	910
2061	54	50	368	158	277
cycles	81	160	275	167	326
Bin_time	43	47	337	405	356
waits	29	218	128	764	954
fb	65	233	158	751	262
Parsing	69	31	100	530	316
array3	74	100	108	586	577
tangled	50	120	114	35	53
Erik	4	224	264	94	552
.45	54	223	324	200	421
511	21	243	234	323	655
510	21	223	419	519	252
513	54	3	298	187	158
512	21	223	298	45	252
515	78	204	456	338	361
Eric	4	17	254	710	552
numpy.argsort	42	27	349	358	640
DISCLAIMER	50	59	393	75	564
math.stackexchange.com	18	225	45	527	509
GMPY2	7	51	65	2	730
Tensor	38	206	282	61	694
rint	15	135	250	777	823
flipping	2	263	25	566	520
blink	10	272	232	167	769
Till	50	264	292	35	469
ctypeslib.ndpointer	3	220	329	514	235
Pure	38	179	169	2	145
15000	21	223	234	557	252
ring	39	126	235	709	670
tomorrow	24	109	232	407	64
rolling_moment	85	100	239	522	192
CountVectorizer	77	168	186	705	646
plt.Figure	29	203	348	123	55
caught	50	37	301	210	625
inv	85	194	280	704	512
remotely	40	119	429	609	377
typographical	18	225	5	419	53
y0.copy()	27	29	177	396	622
Response	95	271	159	102	741
1417982808063	95	181	287	479	277
program.py	40	141	281	76	632
asymmetric	77	214	132	147	4
brains	13	120	301	697	765
auto-magically	2	215	457	335	180
pnl	53	95	115	239	227
bins=20	75	39	297	171	649
Rbf	72	165	15	235	570
appreciated	11	173	389	763	867
.days	53	63	68	72	390
nlabels	95	43	419	751	670
C-api	7	51	65	2	730
toolboxes	13	26	63	118	398
transferred	71	246	328	98	600
reassignment	2	95	115	212	273
30GB	21	190	355	159	359
apples	14	94	37	534	467
Dtype	3	18	162	61	457
dynamically	2	229	457	335	338
overnight	50	160	301	407	954
concurrent.futures	76	193	19	359	439
collumn	78	77	239	616	456
QUESTION	30	212	55	136	965
1000000	21	243	274	297	252
equipment	79	246	206	428	600
fC	3	292	336	404	306
test-set	81	21	32	546	884
100000+	21	190	258	557	42
Off	47	289	445	122	176
Unlike	47	92	147	678	544
Package	67	151	259	110	104
neatly	47	48	61	91	360
)));	75	32	385	545	486
designates	78	144	195	787	502
importantly	88	59	5	144	612
mru	53	139	51	417	775
attempting	2	116	126	203	907
readingtime	61	49	452	539	260
Module	15	176	44	696	823
pd.scatter_matrix	46	35	289	425	810
Fill	69	31	100	530	911
17571	3	18	141	157	172
Web	38	224	90	110	537
2.389	14	18	74	682	199
Character	38	251	191	110	837
discovered	50	264	292	210	747
u'2014	54	69	119	158	126
30-40	10	160	274	323	176
std()	60	219	103	784	454
liblapack-dev	67	112	327	232	334
df.values.ravel()	75	233	74	551	526
re-execute	57	37	222	764	954
collegue	50	264	292	407	747
Worse	88	152	5	419	604
HSD	77	168	186	467	443
HSI	22	4	427	438	672
fig.canvas.draw()	29	203	348	123	55
HSL	22	4	381	438	672
Lorentzian	77	124	132	324	4
difficulties	50	120	60	75	727
Worst	10	272	232	167	863
aspect=1	46	226	494	757	508
HST	61	248	381	571	593
IMPORT	30	212	222	170	835
M=2	85	205	370	88	192
read_sql	52	171	473	128	88
hash-table	76	26	158	540	612
fast_kde	72	165	382	742	552
undertand	12	59	490	144	907
toolkits	93	26	104	368	398
webapp2	15	57	44	499	732
where()	42	27	14	750	244
c++	7	51	261	312	730
non-visible	59	117	433	32	714
input_array	44	227	361	404	228
bar_list	74	195	54	690	577
numpy.fft	20	93	425	191	344
EMD	38	206	392	742	71
cv2.imshow()	40	37	429	699	59
EMA	81	147	173	264	817
deconvolution	20	42	7	709	989
anchored	5	148	32	19	884
add-in	71	246	86	60	92
actively	13	26	138	118	398
ferms	90	174	117	211	262
EMS	24	121	394	646	500
EMR	84	119	429	609	377
Org1	95	181	373	185	517
suspects	7	57	167	697	732
autoscale	5	148	253	558	958
manipulatable	13	272	126	203	765
?!?	50	59	222	699	835
lexical	88	257	61	424	612
0.97491349	90	54	257	713	449
StrVector	2	94	162	426	260
colours	59	4	433	438	608
math.log10	27	29	10	772	838
rephrase	18	225	490	472	81
?!!	11	173	389	763	835
import	15	135	319	777	823
ROOT	13	23	372	118	398
-99	6	68	201	130	910
_after_	2	263	232	573	180
FigureCanvasWxAgg	93	187	104	537	728
y=None	46	35	154	176	201
Joseph	95	181	373	102	340
n_columns	44	205	228	0	357
pylab.imshow()	59	52	495	199	627
all_info	48	49	50	98	854
*sqrt	96	201	18	173	62
Shorthand	35	57	167	9	732
resides	2	215	429	384	305
tmax	99	281	272	107	211
QApplication	29	187	128	764	954
sparseness	81	126	258	44	562
Unicode	61	58	443	539	501
df3.columns	64	150	406	551	48
well-optimized	76	51	345	169	166
Tutorial	38	193	372	387	704
RQDRECORD	30	212	419	467	965
reindex	43	47	75	683	73
solving	77	42	38	279	809
madness	11	232	235	35	53
__len__()	65	220	329	663	890
np.longdouble	14	291	142	325	549
linux2	54	186	33	590	322
inexplicable	84	57	167	697	321
group_name	64	150	74	551	779
inexplicably	50	37	292	699	59
Interested	18	225	490	170	81
tz=None	99	274	119	679	997
.flatten	42	30	396	489	263
jpegs	93	61	315	99	872
amino	79	228	487	27	675
np.random.randint	75	243	385	425	484
>>>	75	174	117	425	486
ASGM	4	121	264	646	500
long()	63	44	199	688	341
Personal	13	183	5	170	852
drop-in	76	94	65	470	31
idiot	24	200	493	504	991
Logout	48	138	66	686	653
Doctors	54	223	101	797	428
Pair	39	43	239	766	949
EVERY	30	198	55	136	965
lib-tk	37	250	27	475	173
1034	54	3	101	187	158
matplotlib.mlab	60	296	375	742	396
sediment_transport	39	263	25	733	283
arcsin	96	29	18	173	13
50x50	34	77	258	45	943
pd.ewma	64	150	256	772	775
vagueness	18	225	179	567	81
rephrased	18	200	490	472	81
Vincent	13	23	372	97	710
a.bool()	63	44	240	782	226
DataFrame.convert_objects	43	185	162	15	448
no_nodes	21	6	258	196	192
Striding	76	272	118	169	863
error_kw	46	39	73	505	649
repeat()	42	27	14	313	244
sitecustomize.py	37	250	475	475	173
.to_csv()	52	47	74	551	779
GNU	84	163	2	241	850
goog.npy	55	132	330	384	372
metric	77	270	472	783	662
z.max()	41	39	289	282	397
equal	78	100	266	546	283
Better	47	0	392	678	9
v1.2.1	91	122	156	587	230
v1.2.0	91	122	156	587	230
datastore	71	153	303	423	108
Israel	95	181	287	211	340
develop	13	26	126	118	765
Keyerror	69	57	191	127	888
inquiry	81	21	275	91	702
Bloomberg	71	171	303	60	561
Resize	69	31	100	209	911
They're	47	94	147	145	908
min_value	27	260	431	234	945
pyinstaller	67	151	174	604	104
InterpolatedUnivariateSpline	72	165	15	235	570
Launcher	40	141	259	76	632
meteorological	13	147	214	203	765
Francisco	95	73	335	621	586
Caveat	12	152	110	630	604
close()	29	203	128	123	55
data2D	74	195	4	282	397
coo_matrix	44	292	64	348	218
df1.plot	46	39	383	505	649
demean	81	214	173	784	20
alleviate	12	152	60	799	625
SDL	93	23	138	537	537
ascontiguousarray	3	67	361	404	273
SDK	67	163	152	326	850
taxi	79	228	233	251	675
myNumPyArray	27	260	431	234	945
Possible	69	252	237	530	114
skipna=True	27	269	403	1	48
foot	81	170	451	44	576
compromising	76	272	118	44	990
Theano's	76	51	60	169	621
0.5s	21	160	274	323	655
axes.flat	65	233	54	648	207
Might	47	0	392	143	544
death	50	120	114	407	64
Linear	38	206	282	436	71
pdb.set_trace()	15	135	319	777	823
mmap	71	188	336	359	306
Showing	69	162	237	209	316
Spot	24	109	229	140	870
set_label_coords	5	13	388	558	844
30.526506	68	54	257	338	192
versa	2	215	25	91	174
Multiplication	69	179	169	61	145
downcasting	3	291	162	325	470
arrary	2	77	0	98	336
desperately	11	120	212	739	727
Starts	78	174	117	452	262
swig	7	51	261	215	957
amd	81	214	409	44	576
gonna	24	200	114	504	469
0.58	54	108	23	579	931
user_ids	79	144	195	787	944
subplot()	31	203	255	577	518
0.51	54	266	23	695	421
using	47	0	392	91	338
0.53	68	108	23	8	399
0.55	96	266	324	695	421
amt	48	123	173	197	653
0.57	54	108	23	8	931
0.56	96	266	426	695	421
Jan's	4	17	254	710	441
annually	99	140	453	198	955
d-1	96	201	18	3	62
itemfreq	60	27	349	313	640
group-wise	43	144	173	276	559
Lagrange	77	98	458	279	809
Mapquest	71	246	90	60	92
output	57	235	342	450	59
scipy.test	15	112	184	103	630
twelve	79	140	453	101	326
verbal	57	225	463	37	451
exposed	76	215	65	9	720
panadas	59	23	383	51	710
DataFrame.resample()	43	147	450	771	817
exposes	31	94	138	514	720
csvdata	57	174	74	699	975
E	85	298	419	467	192
pandas.pivot_table	64	47	72	197	48
iinfo	42	27	14	313	244
ADDING	30	271	368	429	428
1851	78	3	298	187	862
1852	78	204	195	178	862
Earlier	50	264	292	210	747
7.75374	54	108	23	579	931
SourceData	78	144	195	405	944
outarr	44	293	4	509	228
counts_vec	10	202	216	327	283
StatsModels	77	168	375	341	443
fromfile	36	153	336	423	306
propagating	2	215	328	771	187
Minerals	37	250	27	475	194
.75	96	266	218	391	421
multiarray.so	55	132	44	696	372
assembly	7	51	65	2	730
sixth	78	49	338	616	456
.78	95	181	373	185	496
^_^	24	200	493	140	870
sqlite3.Binary	71	153	50	423	108
assemble	2	116	145	706	986
top-right	59	288	29	122	979
exciting	35	120	212	407	264
print_function	15	135	319	777	823
screen-shot	59	154	188	427	2
ufunc.reduce	12	193	147	9	371
resizes	29	154	188	427	203
digitize()	12	59	147	355	908
isn't	47	59	392	91	908
np.linalg.eigh	44	194	280	704	485
new_ax	74	195	4	255	192
backup	35	239	232	697	237
freeing	7	188	447	570	450
change_geometry	31	13	388	592	879
numpys	60	27	14	313	244
redshift	81	214	132	783	162
norm_conf	27	297	4	509	945
shrinking	59	117	284	245	479
self.defaultFamily	68	32	257	545	744
intervention	76	272	118	609	556
stare	11	120	114	739	64
np.ravel()	42	48	396	566	520
x-Axis	39	288	438	93	116
qualifying	78	49	291	355	148
Least-Squares	38	206	282	722	71
stark	10	37	118	225	863
ordinate	41	288	266	200	129
start	47	232	232	167	769
stars	81	43	433	32	198
Integer	69	162	191	61	470
co-worker	18	120	212	739	727
delayed	24	200	394	567	954
sheet1.xml	55	298	330	477	568
know-how	13	120	212	739	727
pow()	86	44	460	172	772
self.canvas.draw()	29	203	348	123	55
Original	30	235	254	347	560
becasue	50	200	222	504	991
f()	60	40	444	396	622
embedded	93	187	104	537	728
default	45	215	457	269	621
20130102	90	297	4	239	995
20130101	53	287	42	155	997
Moved	4	225	254	567	81
im.set_data	46	203	348	123	55
skews	59	117	409	709	563
intents	2	94	131	251	596
600	21	223	234	557	252
603	21	160	274	297	655
Comparison	69	179	169	61	145
currencies	79	265	456	706	356
60%	21	160	234	323	176
price_id	74	233	54	690	262
ipython's	40	141	281	76	632
30816	90	37	298	332	995
infact	47	215	392	210	59
Chum	24	121	394	646	500
value_1	64	150	256	250	775
pandas-ish	88	257	61	675	612
value_2	64	150	256	250	82
terminating	29	37	301	764	954
Purpose	30	215	237	269	702
forcing	2	215	457	335	621
to_offset	43	157	14	15	709
poor	12	183	5	419	563
60s	99	287	449	48	817
plt.figure	46	203	255	577	430
System32	55	132	352	384	305
60x	10	202	37	323	876
preforming	76	272	275	169	863
left-justified	61	58	443	539	501
df.Value	27	174	74	551	211
registry	67	151	152	664	104
Verlet	20	98	231	279	905
Entry	29	271	159	281	2
pool	29	218	183	445	803
01.933000	54	69	119	158	126
insertions	10	272	118	327	863
value_x	74	100	216	355	709
acutally	61	49	222	405	702
couse	47	48	457	306	439
dissapears	59	117	25	32	714
60M	10	160	234	323	655
cores	84	127	345	445	580
misnomer	50	200	114	504	469
Letting	47	174	392	751	338
monte	76	42	48	195	416
semantic	12	152	147	145	606
Compression	71	49	50	787	502
ceases	29	37	128	764	769
rasters	39	126	214	571	593
Unknown	63	44	199	559	136
YUV	22	248	381	571	593
sparse=True	44	30	286	74	595
Take	47	193	19	387	9
Professional	84	163	2	241	850
mach-o	55	132	44	664	791
bookers	48	144	195	787	637
pl.savefig	36	203	348	123	619
Histogram	69	31	100	209	837
newfunc	65	40	444	15	406
+0530	54	186	318	34	789
np.int_t	3	67	261	146	498
plt.plot	46	39	73	592	649
horror	50	232	114	35	53
nbviewer	40	141	90	769	632
coloured	59	117	433	32	198
decide	47	229	457	306	563
imagedata	2	220	329	514	720
Blocksize	44	205	251	196	252
0.0624	96	266	324	391	810
mapreduce	13	272	126	203	959
get's	78	215	328	167	769
ass	50	120	114	697	315
GUI	93	187	104	537	728
-kington	24	109	394	646	870
track1	79	228	206	498	675
dissertation	13	246	214	195	950
rgbs	44	293	251	0	263
END_DATE	48	281	486	339	687
investing	13	272	126	225	765
ntotal	44	227	228	0	357
df.merge	49	47	406	631	445
Korem	24	109	394	140	870
UGLY	30	212	55	136	965
rgba	22	4	201	559	672
np.zeros	75	227	228	0	484
learned	50	120	393	35	727
d2ff42jctw8n80000gn	55	128	293	52	325
|^2	96	201	426	560	62
tracks	79	43	206	167	769
uneven	81	21	270	546	301
0.99.1.1	19	7	417	587	230
excess	21	263	238	573	863
matching	78	49	131	522	944
preallocates	34	188	131	404	694
Pyside	93	187	104	537	537
np.require	3	67	361	212	273
N=1000	10	202	37	323	876
DGEMM	7	51	428	418	166
fpath	36	10	136	712	261
iterateOverElements	65	40	444	15	172
indirection	76	272	118	257	863
arent	47	0	392	618	888
preallocated	34	188	88	404	581
Joan	24	121	394	102	870
..........	24	109	394	494	870
8gb	84	127	2	159	359
700k	21	190	258	557	42
S8	86	18	141	266	178
S3	71	153	303	423	457
requiring	76	272	118	169	621
S1	48	18	272	266	497
S6	86	18	141	266	178
S5	3	18	141	266	178
S4	86	18	141	266	178
put	2	229	457	306	338
scipy.misc.imresize	22	36	246	141	488
bar-charts	59	52	32	19	884
reverting	91	122	471	587	230
conventional	47	0	392	91	908
700L	68	32	154	545	357
fill_value=0	64	47	406	548	48
class_i	34	77	251	196	336
set_sizes	31	1	388	399	879
spectrogram	20	93	425	191	344
chaotic	13	235	48	195	416
LFV	14	86	314	325	84
y=mx+b	77	98	38	279	809
pre-packaged	67	57	167	697	732
lowering	20	170	409	709	576
Sy	44	174	18	5	192
Sx	44	29	18	5	486
Limits	38	162	191	209	837
Ss	95	181	73	429	428
Sp	85	194	419	5	192
St	39	268	282	322	949
dates.py	37	250	475	314	173
So	47	0	392	678	544
7000	21	190	234	557	42
producing	47	21	342	91	59
recompilation	15	57	44	699	315
Browser	38	271	90	281	38
Believe	18	200	490	567	469
Afterwards	2	0	233	335	180
quantize	81	21	7	306	360
SS	99	274	68	679	221
SR	24	174	19	751	371
SP	95	138	159	467	746
SW	6	68	95	355	910
SV	78	298	419	438	672
ST	30	212	182	136	965
SI	14	298	409	86	84
SO	18	225	45	527	509
SN	85	172	419	467	497
SM	60	296	419	36	201
SL	84	7	167	301	83
SC	95	181	373	686	497
SA	95	298	419	686	517
SF	67	57	470	604	594
SE	18	193	372	527	509
SD	79	214	173	783	459
post_number	48	123	256	197	82
f.pyx	55	112	276	215	915
persists	91	37	301	699	59
744	21	223	234	557	811
IBM	79	78	487	500	746
terrible	88	59	61	334	695
GroupBy.apply	43	157	72	771	956
threading.py	37	250	475	475	194
phrase	18	49	490	170	1
myarray.shape	74	293	4	509	228
overcomplicating	88	109	229	444	264
multi_df	43	265	72	771	73
FFmpeg	40	57	167	499	732
ax1.twiny()	46	284	348	577	430
utilize	76	229	126	203	360
unlucky	14	59	5	504	469
heart's	57	239	457	306	439
reject	12	183	409	783	148
FURTHER	4	235	254	710	81
chunksize=1000	52	10	376	121	971
hd5f	71	153	446	702	457
Lower	38	223	266	519	38
13:22	99	140	453	198	221
communicating	13	218	183	445	803
clf.fit	36	256	154	668	994
_not_	47	152	5	145	908
pandas.io.data	15	135	319	762	746
longitude-latitude	39	43	279	40	102
misnamed	24	200	493	504	991
numpy.isclose	42	27	14	313	866
UDP	71	218	183	609	600
corrupting	40	132	222	384	315
Mexico	95	73	279	322	586
roundtrip	71	153	122	423	457
high-precision	76	26	65	2	730
three-level	43	265	75	771	356
2013-11-12	54	69	119	158	126
UDF	65	157	72	574	956
photoshop	59	117	433	571	54
remnants	2	232	232	335	180
Publication	53	138	66	250	775
2d-array	34	77	0	73	694
mainthread	29	187	128	236	444
basename	36	129	465	137	906
thermal	20	126	206	195	949
Atlas	7	163	428	418	166
120Hz	20	93	425	507	344
pic_2	74	233	54	10	995
interquartile	81	159	266	104	459
probability	77	214	132	147	4
plt.hist	46	14	297	171	810
psycopg2	71	171	473	128	88
Panther	84	7	2	241	322
V*	85	194	280	5	192
.apply	64	150	10	772	838
G.copy()	74	174	4	212	273
absence	12	152	60	355	702
systems	84	119	2	697	321
differed	79	78	487	534	783
curiousity	50	264	114	534	783
fetchall()	65	171	473	128	88
haven't	50	264	393	75	564
misalignment	59	117	284	32	714
sensor	79	246	206	428	600
evening	50	232	114	407	64
reordered	34	77	337	708	520
FooBar	4	121	264	646	500
cel	4	121	264	646	500
c.shape	44	205	228	0	357
permissible	12	152	147	145	908
reset_index()	43	47	75	683	73
pre-merge	21	190	355	702	986
N-by-1	34	77	280	88	694
QThread	29	187	104	537	728
AXP	86	89	373	185	437
800MB	21	127	355	159	359
mahalanobis	85	270	472	255	662
pd.DataFrame.apply	43	157	103	522	956
radian	96	93	438	391	344
radial	39	149	438	93	116
Liam	24	109	394	140	870
heavy	76	272	118	169	863
transcribe	71	232	232	35	92
solvers	60	42	38	279	809
data.applymap	27	157	10	772	838
BusinessHour	4	193	19	426	114
buffers	76	188	447	312	450
leave	18	232	232	306	81
xlabels	5	148	32	19	884
x.abs()	27	260	431	234	945
MATRIX	85	212	55	136	965
10MB	21	127	355	159	359
pivoted	48	47	75	131	356
buffer_	36	37	136	699	942
unstacking	43	47	75	683	73
safety	12	152	447	458	606
7	84	186	257	338	811
Ipython	40	141	281	76	632
e-mail	71	239	143	390	106
matplotlib.cbook	15	135	319	777	823
None	74	297	26	509	228
B_L	74	195	108	690	577
defaults	45	215	334	269	621
housed	71	116	303	60	92
1-12	78	204	66	198	687
H's	4	17	254	710	441
houses	79	78	206	101	675
unsightly	59	117	433	32	714
brightest	39	126	239	517	670
thxs	24	33	229	140	870
loads	71	153	491	423	108
Fantastic	24	33	229	140	870
unresolved	63	176	98	696	952
statments	57	37	222	699	59
Boston	95	271	373	519	38
pyaudio	71	246	58	428	600
y.sum	44	205	251	5	357
Accession	48	49	159	787	502
B_x	53	123	272	339	82
Simone	95	123	272	168	497
american	99	268	318	679	221
confirming	24	200	209	567	991
gene_name	48	144	195	787	502
50-100	21	190	234	557	326
formulas	77	42	86	638	912
Adds	78	263	216	616	456
PolygonCollection	31	1	388	399	271
Wrapper	31	1	388	257	720
df1.merge	49	47	406	631	445
warts	13	152	138	118	398
datatypes	3	94	162	702	470
equating	81	170	266	391	283
horse	79	78	232	407	53
pyplot.specgram	20	93	425	336	344
bytescale	29	40	444	236	406
fig.set_facecolor	46	226	494	316	608
Feels	88	257	61	424	756
dug	50	264	393	75	564
station	79	228	487	101	675
hundred	21	190	234	557	42
Neighbors	38	206	48	722	353
0.14.1	91	122	156	587	626
0.14.0	91	122	156	587	626
trapped	76	152	60	697	625
.results	71	153	50	423	108
longtitude	41	6	438	766	573
1919	44	205	251	196	192
4.9.2	84	7	33	590	322
RPy2	13	26	126	697	398
tft	90	297	289	10	995
python-ggplot	59	23	457	51	439
classifiers	77	168	186	705	646
grew	10	127	355	159	359
grep	55	112	276	57	128
grey	22	117	427	438	198
hesitating	50	200	292	210	469
Numba	7	51	428	2	915
pandas.DataFrame.from_csv	52	185	28	121	793
.aggregate	64	150	256	197	48
toward	13	170	25	122	979
procedural	76	23	61	257	195
NameValidator	45	185	334	269	793
non-technical	12	183	5	458	563
880	21	190	234	557	252
884	54	108	101	751	361
footnote	4	193	19	592	371
constructors	3	94	329	663	720
Late	6	204	456	376	459
3.625	74	195	4	509	228
well-written	13	26	138	118	398
Python34\Lib\	37	250	386	475	194
bz2	36	153	336	423	306
py27_0	91	57	167	499	732
Clicking	59	154	188	427	2
Price	48	138	159	762	746
cave	74	297	4	612	821
python-2.7	67	57	167	499	791
python-2.6	67	57	167	499	791
oversampling	20	170	409	44	562
ReshapeError	63	44	199	582	183
unconstrained	77	42	38	279	809
ticker.py	55	132	475	205	173
non-blank	78	49	456	405	713
Therfore	74	188	361	404	923
datalat	41	195	177	282	397
.51	85	204	370	391	366
literal_eval	65	157	81	589	448
Total	95	138	159	168	497
numpy.vectorize	42	27	14	313	244
Viewer	38	271	90	769	537
IndexingError	63	44	199	582	39
Obtaining	2	31	495	51	911
newvals	90	297	4	239	744
re-state	57	225	143	37	451
velocity	39	149	438	93	949
any()	42	157	95	18	866
physics	13	42	48	195	852
naively	50	264	275	210	747
NoneType	63	44	460	172	787
EArray	71	188	122	702	457
x100	10	160	274	323	876
hovered	59	154	188	427	203
non-keyword	63	44	334	269	341
5102	90	35	154	396	314
serialised	71	153	303	359	457
alphabets	61	49	131	759	713
5100	96	266	324	391	421
polygonal	39	149	495	199	102
meta-information	71	153	122	702	457
justice	88	257	61	144	695
numpy.linalg	60	296	102	431	751
French	13	224	282	519	852
y_coord	39	170	266	733	116
ques	18	43	490	88	81
swapaxes	42	30	396	74	368
2015-04-02	54	186	300	338	139
include_dirs	55	112	276	57	128
yml	71	153	50	423	108
multi-part	71	229	145	170	986
QuerySet	71	171	303	60	92
IanH	4	121	264	646	500
NewTable	48	144	486	787	502
Threading	29	218	345	445	803
feels	88	257	61	334	695
pretending	88	59	147	334	908
competing	76	218	183	445	803
FITS	71	248	381	571	593
C-style	34	188	122	404	77
numpy.atleast_2d	42	30	396	313	228
Maxima	13	206	65	588	730
host_subplot	5	148	255	558	518
fluff	57	263	452	618	781
areasplit	27	259	431	234	945
.resize	75	227	385	0	486
stored	2	215	328	98	187
Unpivot	69	162	191	789	739
performant	88	257	61	675	612
ylimits	5	13	284	245	479
locale	45	80	465	767	909
sth	47	174	392	424	835
France	95	181	42	250	497
mantra	88	257	5	419	195
Gibbs	77	214	48	147	162
close	47	59	128	764	364
cur.execute	30	212	182	343	965
high-pass	20	93	382	709	989
-shared	55	128	293	326	56
locals	65	40	181	777	406
dateutil	67	151	327	354	104
#008000	86	129	201	211	178
pictures	59	61	433	571	54
muliple	2	21	131	251	944
%Y-%m-%d	86	274	465	679	151
Rpy2	13	168	375	364	443
pictured	59	52	495	51	177
Butterworth	20	93	382	709	989
missing	6	68	456	424	910
somwhere	78	49	338	167	835
healpix	20	126	7	191	670
scalability	12	183	134	458	765
ranked	78	214	131	442	944
EdChum	24	121	264	646	500
bivariate	77	98	132	147	4
abruptly	29	187	128	764	954
league	79	228	487	480	285
collaborators	13	232	232	203	765
twiny()	5	148	363	558	518
dtw	81	270	472	588	662
wouldn't	47	0	392	143	908
Steve	24	121	264	646	500
forgotten	50	264	292	210	747
experimental	35	26	138	9	765
100ms	10	160	360	323	655
Julia's	47	296	375	630	631
demographic	79	228	487	101	675
Mr	4	121	264	646	500
100mb	21	127	355	159	359
32-bits	84	127	432	241	644
right_index	49	47	72	363	445
toolitems	29	1	329	236	444
side-effect	12	152	147	257	621
destructor	29	67	447	570	406
NSIS	67	151	167	499	732
instructing	2	48	145	91	260
empty	2	68	328	405	910
get_position()	31	13	388	592	879
__new__()	31	220	329	514	444
covariance	77	270	280	431	485
modelling	77	183	48	195	345
N	44	205	370	196	192
Switch	93	57	237	499	54
Broadcasting	42	30	169	74	368
lives	40	132	352	384	568
gedit	40	141	281	76	632
Pick	39	43	235	588	769
accomplishes	88	59	491	424	950
floating-point	14	86	142	325	549
intriguing	18	225	5	419	53
practicality	10	272	134	458	606
Useful	31	23	138	9	371
hacking	50	232	393	35	417
invocations	76	218	447	573	783
pace	10	237	114	407	655
accidently	40	218	181	764	954
smart	88	257	61	675	31
ML	77	168	186	705	646
guide	11	193	372	387	704
pack	2	215	328	306	986
byte-string	61	58	162	539	260
costly	10	272	118	334	863
unicode_literals	15	135	319	777	823
binwidth	81	214	297	171	603
sentences	61	49	131	27	1
ArrayType	3	220	261	157	498
00s	61	174	68	155	262
DataFrame.applymap	43	157	72	683	956
50.89081787	54	50	368	331	449
grant	38	271	66	519	38
Luke	4	121	264	646	500
MW	95	298	373	686	517
wnat	2	229	457	335	338
spectrums	39	6	206	184	784
onclick	29	187	188	149	282
grand	79	214	173	784	435
Entropy	38	224	282	722	689
composition	12	183	5	257	606
superfast	24	109	229	444	870
button_press_event	29	187	104	149	282
ndmin	42	30	334	15	793
docstrings	61	193	19	387	371
lie	39	149	266	733	116
00+	99	69	119	525	256
Stealing	38	206	282	478	552
data.dtype	75	233	54	690	486
dok_matrix	3	292	64	348	218
002	95	204	318	119	361
001	95	204	318	119	361
000	21	190	234	557	42
run()	29	277	128	236	55
dissimilarity	77	270	472	431	662
clf.predict_proba	77	256	186	668	994
Generates	57	37	342	127	560
inital	2	37	392	699	59
obviously	47	59	392	91	908
calibrated	20	93	425	191	344
set_offsets()	31	13	388	199	627
consistency	12	152	134	458	606
Teegarden	4	121	264	646	500
lin	77	57	167	697	315
exploits	76	42	118	169	621
reviewed	4	264	393	75	564
0.0008	81	170	409	391	935
v1.6.2	91	7	417	301	230
v1.6.1	91	7	167	301	230
v1.6.0	91	122	156	9	376
0.0000	14	86	314	8	549
reviewer	79	228	487	480	285
0.0002	96	266	324	391	421
0.0005	96	266	324	730	421
questioner	18	225	490	170	81
PIL	22	248	381	141	722
.Kline	24	200	493	504	991
np.unpackbits	42	291	385	266	969
informal	10	202	37	534	783
PID	48	123	486	631	502
shortcut	88	48	375	145	31
ImageDraw	22	248	381	141	722
new_range	64	287	42	250	997
PIP	67	151	210	351	104
liq	48	123	148	197	637
Graphic	30	271	191	102	114
eGrid	90	54	13	10	744
Retina	84	119	2	301	321
stack-overflow	18	225	45	527	219
capacities	34	77	0	73	694
pylab.figure()	29	203	348	577	55
zero-value	59	117	433	32	198
_Complex	3	67	261	146	831
goodness-of-fit	77	214	132	783	738
logical	34	111	95	18	272
process.py	37	250	475	205	173
excluding	78	263	338	588	456
statsmodels.formula.api	77	168	375	364	443
Slices	69	111	191	574	694
aliasing	20	117	382	709	562
filt_out	27	100	4	189	293
altough	88	59	147	334	908
warnings.simplefilter	45	185	334	85	350
Identify	69	31	100	530	911
u'employer	53	181	42	250	624
eek	76	272	118	225	990
popular	13	26	63	118	398
eeg	22	248	381	571	108
terminology	13	120	212	739	67
sketch	57	235	342	450	950
escapechar	45	185	334	269	906
cones	39	149	438	733	102
Pattern	38	162	282	519	38
1.4.2	91	7	417	587	230
...??	47	59	392	91	469
economic	79	78	450	101	675
MWE	57	235	342	450	766
np.asmatrix	44	292	64	0	218
Hayden's	4	17	254	710	441
kwatford	24	200	490	567	469
Difficult	57	59	232	144	451
AMI	84	119	167	607	377
ozone	99	147	450	101	746
d.keys()	65	233	158	540	526
AMD	84	127	2	410	580
DOT	55	128	330	21	568
user2357112	4	121	264	646	500
INTEGER	94	18	162	128	429
ioff()	93	187	128	123	55
rhs	94	222	468	212	160
Here's	57	235	342	450	950
AMV	78	147	173	588	559
1.11022302e-16	68	54	257	713	776
Bill	24	121	264	102	500
dype	3	18	162	266	470
crammed	59	288	32	19	884
Django's	71	239	183	609	959
assists	95	298	487	686	212
negatives	14	86	314	391	148
backprop	77	98	48	195	905
numpy.mean	60	269	403	53	592
August	99	182	318	109	94
Taylor	77	98	248	279	738
wouldnt	50	264	114	106	469
cv.fromarray	3	90	246	141	722
Looks	47	0	392	424	544
silence	45	37	301	618	625
19:00	99	253	119	525	256
rho	41	6	177	107	13
DIAMETER	48	144	195	787	637
Bezier	39	149	231	93	102
Diagonal	69	162	169	61	837
pastebin	57	239	463	443	451
MemoryView	3	220	14	312	235
reworked	4	17	254	710	441
Normal	38	206	132	147	71
placing	2	116	457	573	531
combinator	27	174	177	396	622
ExcelFile	36	153	86	638	111
JohnE	24	121	264	646	500
texmanager.py	37	250	475	205	173
gtk3agg	93	80	167	435	591
spawning	29	218	183	445	803
matplotlib.lines.Line2D	31	1	388	47	879
:-D	24	109	229	444	870
injection	12	171	181	257	195
Newbie	11	120	212	739	727
0xc3	86	5	443	563	898
datetimelike	94	63	68	682	390
3D-numpy-array	81	126	233	98	177
np.indices	42	30	286	74	368
pct_change	43	85	103	784	956
similar	47	264	392	630	371
Cnt	78	204	195	168	361
ordered	2	21	337	708	944
Tx	41	6	370	107	192
Ty	24	121	394	646	500
Pandas.Dataframe	78	49	131	522	944
recalculates	29	79	491	167	207
Tp	85	298	419	467	201
reopening	29	218	128	764	364
To	47	0	392	678	544
Tm	48	123	486	339	779
Tk	93	187	104	368	591
Ti	85	195	426	560	391
recalculated	81	215	275	167	187
ARGB	22	248	381	571	593
Ta	74	40	181	212	923
T_	78	100	148	355	944
TZ	94	268	68	426	452
TX	95	298	318	686	741
TY	24	33	229	140	870
amounts	21	272	118	203	863
dashed	59	117	433	32	608
TT	34	256	251	73	994
TU	96	201	426	560	13
TR	78	49	328	98	888
np.nditer	42	27	286	648	28
TP	78	144	148	517	522
bmat	42	292	64	404	595
application	13	26	429	609	765
TL	30	296	375	364	631
square_list	65	40	158	15	406
TK	29	187	104	368	591
TI	21	205	355	196	252
department	79	78	487	480	285
decremented	3	220	447	570	187
TB	21	127	355	159	359
TC	95	123	373	686	711
arithmetic	14	86	142	325	734
TA	76	152	5	697	863
Customer	48	144	159	787	653
scipy.integrate.odeint	60	98	458	279	438
OSX	19	7	306	301	232
Median	38	206	191	264	698
Scikit-Image	13	232	232	444	264
T0	30	174	117	751	262
T1	95	172	335	168	497
graphically	81	183	495	400	177
0.29	96	108	23	695	421
svn	35	122	220	604	594
svm	77	168	186	705	646
e	85	174	177	107	262
syntactical	88	59	26	212	273
complicating	88	59	114	799	360
svg	93	61	315	99	374
svd	60	296	102	431	751
resolving	11	173	389	763	867
orbit	39	149	438	93	949
utilised	50	59	65	697	59
(([	90	227	13	10	744
2014-10-14	99	140	453	198	687
correlates	12	86	314	588	84
utilises	10	202	37	323	876
everywhere	47	68	392	355	724
Apparently	47	215	292	210	544
virtue	10	202	118	169	876
train_labels	74	256	74	196	994
zero-length	34	44	0	73	665
funct	27	40	444	396	314
numpy.string_	3	18	460	172	787
myc_rb_e2f	96	40	444	396	201
Bengal	95	181	373	168	497
y^2	96	201	426	560	13
np.savetxt()	52	185	336	15	793
Ratio	95	138	159	789	497
compact	88	257	61	675	612
Non	38	206	409	722	71
Parent	95	271	159	519	38
2014-09-11	54	69	340	158	126
uninformative	63	44	199	582	888
funcB	27	40	444	396	622
funcA	27	40	444	396	622
in-line	93	23	457	51	54
Not	47	59	392	678	469
Nov	99	182	33	34	519
Now	47	0	392	678	544
665	63	176	199	582	136
Nor	47	229	392	91	621
Nos	48	144	195	178	637
func3	27	139	274	551	262
func2	10	202	37	396	622
func1	27	40	444	396	622
wavg	6	263	456	405	207
wave	20	93	58	428	344
vector's	34	21	0	404	694
_actually_	57	37	222	37	451
telling	47	59	392	91	888
Acquisition	95	271	66	519	38
3x1	34	77	251	88	943
positions	81	6	131	733	283
matplotlib.patches.Rectangle	31	1	388	399	879
enforce	12	229	457	91	621
image.shape	75	227	228	0	486
Index	43	265	191	789	183
math.pow	96	29	18	173	13
pretend	57	235	342	144	950
$HOME	55	132	352	775	798
save_count	31	13	444	592	709
result.shape	44	205	154	196	357
valores	68	32	408	432	463
jump	50	232	235	167	769
redone	50	264	292	210	187
Camera	71	246	58	571	600
df.index.year	64	150	256	72	227
rcparams	45	80	448	269	909
n_range	44	205	251	0	397
hspace	5	284	253	757	339
66%	21	160	234	323	655
Disadvantages	34	21	131	91	338
Grid	38	162	279	209	837
precisions	14	86	314	325	27
tweets_data	36	174	117	690	262
tri.LinearTriInterpolator	31	13	15	592	879
upper-triangular	34	77	280	88	943
((8	75	227	385	0	357
.shift()	53	139	51	72	821
Popen	36	218	489	288	942
following	57	235	342	450	59
logout	99	140	453	198	92
Published	48	123	486	787	502
.01	96	266	324	695	421
convert	2	116	162	98	260
copyright	13	224	373	686	892
plaintext	71	153	50	423	108
Back	24	109	114	407	64
HDFStore	71	171	446	702	457
bquery	76	153	65	359	457
gene	79	144	195	27	944
lamda	43	157	103	551	956
foresee	12	152	301	618	120
_n_	34	77	239	88	192
plt.xscale	46	35	383	639	825
Doctor	99	140	318	109	94
display.notebook_repr_html	45	80	334	269	906
llvmpy	67	151	327	499	334
4.75	78	160	274	297	399
PnL	79	78	453	101	955
Adaptive	38	206	282	722	71
_nx	15	135	330	205	823
left-inclusive	47	174	392	751	908
varaible	78	49	328	405	502
camera	39	126	58	571	600
ret_index	36	10	136	343	858
postprocess	59	229	457	306	54
fig.draw()	29	203	348	123	55
historically	50	120	114	35	121
~80%	10	272	118	225	863
superflous	15	135	319	777	823
Markus	4	17	254	710	552
.ipynb	40	141	281	76	632
sbin	55	128	52	477	568
visibility	59	154	457	134	608
numpy.digitize()	42	27	14	313	244
average_	75	227	385	0	486
:-)	24	109	229	444	870
palettes	59	4	433	97	278
~800	21	160	234	557	655
resize	29	154	284	245	203
Benchmarking	7	277	37	534	783
hist2d	31	14	297	171	627
lapse	50	116	114	35	360
averaged	81	147	266	101	603
columns=lambda	86	150	10	772	838
numpy.argsort()	42	27	349	358	640
12.200000	54	108	300	797	139
dfList	74	233	54	690	526
meet	12	229	291	355	148
Sourceforge	67	151	470	604	594
averages	81	147	173	101	817
10:30	99	253	318	525	256
waaaay	10	190	234	323	604
collections.Iterable	65	233	158	15	172
argrelmin	6	100	95	588	283
np.argpartition	42	27	349	358	244
Cauchy	38	206	280	431	485
pulling	71	116	303	60	92
htype	78	100	239	522	192
img3	22	90	246	653	488
img2	22	90	246	28	672
img1	22	90	246	141	672
Lovely	24	109	229	444	264
defective	44	194	280	431	485
per-element	3	94	88	404	235
meanwhile	50	264	292	630	747
pyqt	93	187	104	368	728
narr	44	293	26	509	228
un-related	57	235	463	37	451
2014-02-01	54	69	119	155	126
instinctively	88	232	5	419	53
Hilbert	77	206	248	722	485
fare	76	290	61	334	612
W.sum	44	194	280	704	598
0020	30	50	368	429	428
link1	35	193	19	387	371
link2	35	193	19	387	371
ImmutableMatrix	15	135	319	777	957
sys.path	15	132	352	308	137
imgg	22	90	246	141	969
#NULL	6	68	12	85	910
Roman	45	230	448	767	909
chroot	67	119	167	499	377
Allow	57	235	237	281	451
imgs	74	90	246	726	228
dtype=int	75	227	385	0	969
tranformation	34	77	280	88	943
cv2.imshow	22	90	246	141	942
s=	46	39	73	316	649
computations	76	272	118	169	734
imgB	74	195	4	255	577
imgA	74	195	4	255	577
Downvoter	18	225	143	472	81
0:5	90	95	26	239	227
py27-pandas	67	112	327	232	334
s1	85	172	481	224	211
unique_id	48	123	486	197	653
p1a	86	181	260	455	496
skimage.morphology	72	165	15	235	570
startswith	65	89	163	589	448
Numarray	35	122	138	9	376
y-data	5	288	32	19	844
xarray	41	6	177	107	397
including	2	21	233	251	338
during	2	37	301	167	769
to_sparse()	2	188	145	573	863
RandomOp	81	43	123	725	578
subplot_kw	31	226	255	134	430
Hippodraw	7	26	63	516	398
Multiple	69	162	100	209	837
numpy.var	60	219	132	742	454
high-low	81	170	266	588	459
patches.Circle	31	13	388	199	879
RAM	84	127	355	159	359
plot.scatter	47	13	14	592	709
Multiply	69	31	499	530	911
3-character	61	49	487	27	1
Significant	38	162	191	61	837
factorial	14	29	314	173	238
frontal	38	298	282	519	795
scatterpoints	5	13	383	134	608
Two	69	162	191	281	114
bulk	76	272	126	203	863
subtraction	34	86	275	566	734
some_percentage	5	284	253	757	339
querying	71	171	303	128	457
sdf	94	47	51	551	779
dll's	67	239	167	604	305
text-only	40	141	429	769	92
Layer	95	271	159	519	38
loc=0	46	35	289	176	649
loc=1	5	226	494	577	348
loc=2	46	226	494	46	348
mytest	48	174	74	185	262
university	13	246	48	195	852
Integral	20	98	248	722	989
Bellman	13	42	38	279	809
slide	59	154	188	427	203
gists	57	193	19	387	371
|	86	271	117	491	272
prevailing	79	78	450	101	955
single-threaded	10	202	37	445	166
Statistics	38	206	282	309	353
Ideally	47	0	392	678	544
low_price	64	287	406	197	48
TfidfVectorizer()	77	168	186	705	646
Contractor	48	123	486	339	502
constitute	78	49	131	170	944
image-processing	13	26	126	118	765
minutes_array	48	49	337	355	567
re-using	2	116	181	573	531
indexs	78	49	131	522	944
OCR	13	168	186	705	646
special	61	94	147	91	621
maximizes	77	270	472	783	738
L2_Norm	90	3	298	332	995
FeedType	64	123	256	197	82
atan	96	29	177	560	13
littered	57	37	301	618	120
needn't	74	100	147	145	908
time1	99	281	68	788	390
time2	99	281	68	72	390
time-	76	272	65	735	730
Lorentz	77	214	132	147	4
pre-calculating	10	202	37	534	783
maximized	29	187	188	764	796
cause	12	152	301	618	120
")))`	86	129	136	211	151
index*	12	188	311	522	656
galaxies	39	126	206	93	949
delegates	31	296	444	174	621
100x100x100	34	77	258	45	943
index=	64	287	406	631	294
index2	74	293	54	690	577
delegated	31	13	138	359	621
index1	74	293	54	690	146
Drawing	59	31	495	209	911
visible=True	46	148	363	46	348
determining	12	21	134	588	563
maths	12	120	212	144	727
timer	29	187	128	149	282
times	10	160	37	323	655
echoing	65	40	181	735	406
isotropic	39	126	270	733	301
projectile	39	98	48	195	416
timed	10	202	37	534	783
DataFrame.sample	42	157	14	313	244
sub-set	2	154	138	44	959
neccesary	88	272	118	334	31
df_B	48	144	195	166	637
df_A	48	144	195	166	637
2014-06-15	99	69	119	155	256
powerful	13	257	138	118	264
Subclass	2	94	329	514	720
condense	57	116	145	706	986
list-	34	77	0	522	694
randomized	81	183	409	44	162
x^3	96	201	426	560	13
x^2	96	201	426	560	13
hehe	18	225	45	444	870
df_Y	47	21	233	405	356
you're	47	0	392	144	908
df_b	49	123	486	631	445
df_a	49	123	486	631	445
tobytes()	3	220	361	404	235
Fran	47	59	392	91	908
tinkering	50	264	393	75	564
mkdir	40	132	276	384	315
wrapper	76	51	65	312	417
manipulations	76	116	126	203	734
bokeh	59	23	90	51	710
is_quiet	14	291	142	325	549
backtrace	57	37	421	37	630
max_diff	53	139	42	233	775
norm=None	96	35	289	176	201
pypy3	67	57	167	499	732
Uz_0	29	37	444	236	406
10.9.1	19	7	306	301	232
10.9.2	19	7	306	301	232
10.9.3	19	7	306	301	232
10.9.4	19	7	306	301	232
10.9.5	19	7	306	301	232
lists	65	233	158	540	336
.view()	42	30	396	404	273
matrix's	34	292	280	431	485
period_id	48	150	256	197	653
list_	27	233	54	690	526
cpython	7	51	65	2	730
bloat	10	272	118	225	863
log10	96	29	18	639	810
Needless	18	120	212	739	53
submitted	35	122	220	292	106
succinctly	88	257	61	675	612
df_3	48	62	195	178	502
df_2	49	62	486	631	445
df_1	48	62	486	339	502
Python.framework	55	128	488	741	423
sq	96	266	370	391	252
enforced	12	152	147	145	908
Probe	48	144	195	787	502
dataAry	90	227	228	509	146
julian	99	140	453	109	94
dataArr	90	195	4	255	252
ordinarily	42	27	14	404	287
reorders	43	47	72	683	73
Other	47	0	392	678	544
unpivot	43	47	75	771	356
enforces	3	215	162	514	621
PATH	67	132	352	113	137
Administrator	40	141	259	216	402
hypergeometric	76	42	65	169	905
mappings	2	94	158	540	720
ind2	74	293	26	586	228
get_value	43	157	72	750	73
subdivisions	81	43	231	733	102
figlegend	5	13	388	592	518
sequel	71	235	342	450	950
AABB	5	288	284	245	479
sl	74	195	177	255	622
Submitted	35	122	220	567	106
Pls	57	235	463	37	106
intrinsic	76	26	138	552	621
signal.convolve2d	60	27	14	313	396
annulus	39	149	438	93	116
fig.colorbar()	31	13	388	592	879
drop_duplicates()	43	47	72	683	73
subtracted	78	49	275	98	603
inds	74	231	54	690	146
url	36	239	50	769	92
uri	36	61	136	769	942
constrain	77	124	231	783	738
gesv	60	296	102	313	751
Suppressing	69	162	191	61	114
keypress	29	187	188	149	282
-pylab	40	141	281	76	632
EDITED	30	212	55	136	965
b-a	96	29	18	173	62
Pylint	84	119	301	697	321
3.2633	54	50	300	331	449
word_count	95	123	373	185	517
halting	29	37	301	764	625
Randy	24	121	264	646	500
yfit	96	201	426	560	13
scipy.linalg.svd	60	194	102	431	751
figure.Figure	59	52	233	51	54
unfinished	18	235	490	450	81
Hough	39	126	7	709	670
varid	78	144	131	522	944
extensible	88	257	61	334	163
sub-directory	67	132	352	384	305
brighter	22	4	427	32	198
won	79	160	487	167	769
inherited	31	220	329	12	720
Robust	13	42	48	722	905
intersphinx	35	193	19	387	594
str.get_dummies	43	157	72	683	956
achieve	47	48	389	630	360
Nevermind	24	200	493	210	991
0:1	90	95	26	239	227
ifilter	42	27	14	313	709
Frobenius	60	194	472	431	485
indentations	57	58	452	230	298
colname	53	95	115	551	227
b-1	90	293	26	10	228
Parquet	71	153	122	423	457
i.m.o.	88	257	61	513	264
WGS84	39	73	279	766	573
Forget	24	200	490	504	991
int64s	14	291	46	325	470
expansions	61	58	452	230	501
ISTM	88	0	392	630	31
install.sh	55	132	330	113	568
tuned	76	272	138	169	394
FAILED	84	271	330	21	321
S.O.	4	225	372	387	219
1293926400000	54	50	368	158	277
plt.sca	5	203	348	577	430
CategoricalIndex	35	122	156	292	376
multiplying	34	86	275	566	238
Lake	53	139	42	417	775
Cleanest	2	48	457	574	338
y-coord	41	6	30	122	979
approriate	45	80	315	269	906
Send	71	246	90	609	92
operates	2	215	491	174	734
outputted	2	215	328	98	59
operated	2	215	328	169	187
PointLabelTooltip	57	37	301	51	888
numpy.median	42	27	103	361	244
notoriously	13	152	5	697	604
nightmare	50	120	114	284	727
44100Hz	20	246	58	428	593
tend	88	152	5	625	604
macros	7	51	65	215	957
quartiles	81	159	173	104	459
tens	21	190	234	557	42
select_table	71	153	303	60	457
fontname=	86	129	465	767	858
pixmap	93	154	104	537	728
supernova	79	228	206	480	702
jid	79	144	195	198	955
interfere	93	230	457	335	796
Hooray	24	109	229	140	870
kicking	50	120	114	35	727
array.min()	74	100	108	586	283
key	65	233	158	540	526
interp=	41	36	73	316	488
pool.join()	29	218	128	764	954
ker	44	205	4	509	228
.to_json	64	287	406	551	48
hits	79	37	301	167	769
sniff	61	58	162	539	260
limits	5	148	253	245	479
shingle	48	144	195	276	502
Manipulating	69	31	100	530	316
estimation	77	214	132	147	4
PerformancePython	7	193	372	387	689
interp2	72	296	15	235	631
subtitle	59	154	350	19	518
set_aspect()	31	1	388	399	879
afaik	12	0	392	91	621
tuesday	99	140	453	109	94
array-likes	3	94	95	15	890
rows=	64	287	256	197	294
Artificial	38	206	130	195	416
genre	79	228	487	542	285
inspite	22	117	433	134	608
rows*	21	190	234	557	11
erased	29	37	222	764	2
accomplishing	11	48	389	675	327
geometries	39	43	235	400	102
cross-correlate	81	21	275	588	396
cent	78	266	324	397	421
immense	11	272	118	35	863
erases	2	215	457	335	621
Editing	24	200	490	567	81
xlsx	71	153	86	638	561
xpos	41	6	481	107	211
optionally	2	215	457	306	9
controlled	2	215	60	245	187
Sizes	38	162	191	127	837
pre-counted	81	126	495	621	177
git+	67	151	327	232	334
controller	29	246	48	609	600
xlsm	36	153	86	638	561
smoking	24	200	493	504	469
Sweep1	53	95	51	339	779
Consequently	2	215	392	678	544
Prevent	69	31	237	254	316
boto	67	132	44	384	315
learn's	77	168	186	705	646
timeit()	10	277	37	534	783
0:3	90	95	26	239	227
holdings.portfolio	53	139	42	250	775
Huzzah	24	109	229	140	870
Fish	95	181	373	686	340
1.0000	96	266	23	8	421
surface	39	149	495	93	177
examined	50	264	393	75	187
getvalue()	3	37	222	15	625
Pretty	88	59	229	535	469
Typed	76	51	65	169	114
sqrt	96	29	18	173	13
parts	57	263	233	251	986
speaker	13	120	179	739	67
dCount	53	281	51	682	779
party	13	26	63	2	398
Types	69	162	191	61	837
http	71	119	90	609	245
Failing	47	48	457	678	680
####	30	174	117	751	262
40+	95	246	58	519	221
colouring	39	4	433	400	177
2403950	99	140	453	198	687
nation	79	228	487	519	675
string-like	94	222	162	702	470
destruction	29	188	447	570	450
0.70710678	90	54	257	713	776
ammended	57	235	490	567	81
49	54	3	298	318	811
Tidy	38	257	342	203	264
array.max()	90	100	108	586	283
part1	41	180	54	107	986
part2	41	180	54	107	986
Threshold	27	59	14	742	907
Type1	86	129	272	36	199
Type2	86	129	272	211	199
MacOS	19	7	306	301	290
increasingly	10	170	409	44	604
stack_test3.xlsx	86	129	386	475	194
Ultimately	47	0	392	678	544
Streamplot	38	206	191	209	71
TIL	88	111	147	145	908
distant	39	43	235	588	346
no_classes	44	227	228	0	357
advertised	35	122	138	9	264
TID	79	228	487	198	944
bottom=	46	284	494	757	339
same_kind	3	18	162	266	470
TIA	11	173	389	763	867
2012-06-09	54	69	119	158	126
MacOs	50	57	167	697	321
event_time	27	100	148	391	283
density	20	214	132	147	4
large-scale	13	272	48	195	765
xs=	90	54	13	10	744
0.13rc1	35	122	156	292	376
balloons	21	160	234	44	326
2012-06-08	54	69	119	158	126
Exposure	21	160	85	198	27
Mon-Sun	81	147	450	621	884
bbox_inches=	45	226	494	757	619
howto	71	193	19	423	260
_mask	3	220	361	514	273
matplotlib=inline	40	141	281	76	632
Limit	69	162	191	61	698
Nelson	38	193	126	458	783
bottoms	41	6	108	586	283
intersection	39	43	235	588	102
reproduceable	88	48	301	630	120
loss	12	183	409	44	84
necessary	47	0	392	91	621
lost	50	59	328	618	907
Numeric	3	137	329	9	957
payments	79	144	487	101	675
lose	2	229	457	335	338
async	29	218	183	359	803
Haversine	39	270	472	298	662
re-inventing	76	42	134	125	31
Avoid	76	152	237	573	200
.transform()	43	157	103	683	956
U1	85	18	272	266	178
U0	44	194	280	5	598
library	7	26	65	2	398
U2	86	18	419	211	178
Json	71	153	303	60	457
home	55	132	352	477	568
EEG	71	246	58	428	600
nibabel	13	26	138	118	439
Andras	24	200	394	140	870
overlay	59	52	433	32	177
broad	18	225	45	527	219
objected	13	94	181	145	195
overlap	59	52	32	546	714
mutation	88	183	361	212	273
demonstrated	4	17	254	252	552
limitations	12	152	134	552	606
to_frame()	43	157	72	24	73
0.083	54	266	324	578	421
reaching	50	232	235	573	769
real-world	12	183	409	44	563
Straight	38	224	282	94	689
Official	35	193	19	387	594
Up	50	271	292	519	769
Um	24	200	493	504	991
Uh	24	200	493	504	991
$A$	85	194	280	88	192
LAMMPS	13	26	63	118	398
naics	53	281	51	448	779
Pool.map()	76	26	65	359	803
UV	39	194	280	431	485
UP	30	235	55	281	560
mlpy	38	57	167	697	732
add.at	42	27	88	358	146
UL	54	50	368	429	428
UN	95	181	373	155	437
read.py	40	57	44	384	315
Couldn't	47	264	392	143	835
myfunc2	65	157	14	15	956
case=False	86	89	163	589	448
UB	53	139	51	234	821
OPTION	53	139	256	417	775
scalex=False	46	284	348	577	430
2**24	21	160	46	557	482
2**20	21	243	46	196	252
Quickly	69	162	191	61	837
cocoa	93	187	104	403	591
myname	55	128	52	477	568
Internal	30	176	397	582	136
cummulative	79	78	173	101	955
t-test	77	214	132	783	162
pointless	88	59	147	334	695
4D	34	77	0	73	943
additional	2	263	457	91	338
200MB	21	127	355	159	359
time_dense	78	43	239	588	283
lagged	81	147	173	518	817
L\xfccke	52	185	443	85	906
struct.pack	3	291	141	266	969
coarse	72	170	270	733	301
PNGs	93	61	315	99	374
north	39	149	438	322	10
Mavericks	19	7	306	301	232
.round	53	32	256	10	585
snipplet	57	239	490	37	451
triangular	34	194	280	431	485
set_xticklabels()	5	148	363	558	844
gain	10	272	118	225	990
winch	20	170	206	167	949
highest	78	214	266	588	283
minutely	99	147	450	101	817
`"`	61	58	452	539	501
geopy	39	270	472	60	662
sinusoids	20	93	425	191	344
re.split	86	89	163	340	66
e-13	81	170	314	391	84
Einstein	42	111	215	74	123
display	59	52	495	51	54
1.094990	54	129	287	211	139
evals	74	293	4	509	146
legend=False	46	39	383	505	430
800k	21	190	234	557	42
universal	60	296	375	742	631
linearity	77	194	472	451	738
exogenous	77	168	186	341	443
multimodal	77	214	132	147	4
beats	10	202	37	534	871
education	11	120	212	739	727
Especially	88	0	5	678	544
Function	69	179	169	61	698
a.astype	3	18	141	266	969
functions	76	94	65	742	709
ingredients	48	144	195	27	1
Million	21	190	269	557	42
list_of_files	36	174	222	424	262
arctan	96	29	458	336	13
Delivery	48	138	66	197	653
convert_objects()	52	185	334	548	793
Interpreting	12	183	186	91	563
pd.read_json	52	10	489	712	369
df.shift()	27	260	431	234	945
~30x	10	202	37	225	876
stat	95	270	472	467	682
star	39	126	235	93	177
numpy.ma.masked_array	60	100	275	355	603
radially	20	170	231	147	4
stay	47	229	25	91	338
stab	88	232	232	35	950
additionally	2	215	457	91	338
8000	21	190	234	557	42
statefulness	31	13	388	51	879
typenum	3	67	261	157	498
~30%	10	202	37	323	876
function3	3	67	261	146	235
function2	14	67	314	146	549
shunt	2	116	145	706	986
QUOTE_NONE	68	54	257	338	361
antialiasing	59	117	433	709	318
platform-dependent	3	291	142	312	235
DateFrame	43	265	72	771	356
fieldname	48	123	486	339	682
~300	21	125	234	557	42
draw_wrapper	37	250	27	314	173
15-20	21	160	234	164	326
chiming	24	109	229	140	870
function*	31	40	181	145	195
function-	76	59	392	630	31
indirectly	29	218	183	359	315
whoops	24	200	493	504	991
soultion	88	59	61	630	31
single-step	88	48	61	675	327
abide	12	183	409	44	563
consists	2	21	233	487	702
attemp	2	103	491	203	702
line.strip	86	129	117	211	66
Apple's	67	151	210	351	104
isometric	22	248	381	571	54
buddy	24	109	394	140	870
df.Val2	27	150	256	185	496
sines	20	98	458	279	738
c.f.	59	117	342	450	59
swap	2	116	396	566	520
recycle	59	4	433	32	714
aux	90	297	26	509	228
sorry	24	200	493	504	991
re-test	84	119	167	697	321
zero-valued	12	170	409	44	576
voil	91	57	167	664	732
collaborate	13	225	5	419	219
Identifying	69	31	100	530	911
void	3	67	261	157	498
internet	50	264	393	75	564
non-sparse	34	292	64	348	218
A23	79	147	450	101	675
python-scipy	67	112	327	232	334
crops	59	117	491	709	781
sns.tsplot	99	14	383	568	710
5856	48	123	51	448	522
unrelated	57	152	60	618	120
Sheet1	36	10	86	638	561
Sheet3	36	153	86	638	561
Sheet2	95	10	86	638	561
enhance	12	229	409	709	562
markov	77	43	48	195	416
pd.read_hdf	52	185	446	24	793
Reassigning	69	31	100	789	739
namelist	36	40	444	699	622
likely	88	152	5	334	604
tangential	39	149	438	93	738
A^-1	85	194	280	704	485
21.72	54	108	23	579	399
str.join()	65	157	158	648	448
use_index	46	35	73	505	649
SetNoDataValue	6	68	12	130	910
while	47	0	392	91	544
dgeev	60	296	102	431	751
self.__stoch	86	129	117	211	199
16384	21	233	234	522	336
sub-frames	71	116	145	706	986
probelm	50	264	292	697	564
numpy.abs()	96	29	18	173	598
CGContextRef	63	37	199	582	136
metadata	71	153	446	702	457
med	6	214	173	28	459
niche	13	26	5	118	53
mec	31	13	388	134	608
OS-level	71	26	183	359	959
mem	10	127	355	159	359
men	79	228	218	168	167
meh	18	200	5	419	53
met	78	100	291	355	148
mew	5	226	494	134	608
replacements	6	68	456	355	604
mex	7	51	65	2	730
contraction	34	42	48	88	734
df.reindex()	43	157	72	551	956
Motivation	76	21	48	203	950
timewise	10	202	37	404	581
Extra	38	271	282	281	114
recordings	79	147	206	101	675
Packaging	7	224	63	516	850
complicated	88	257	61	334	695
someone's	50	225	5	419	53
30min	99	147	449	48	817
emulation	76	94	65	257	195
Industries	79	78	450	101	955
fantastic	24	109	229	444	264
slicer	2	111	115	212	227
slices	34	77	0	566	694
serialize	71	153	122	359	457
Python3	91	57	417	735	230
sliced	34	111	328	566	520
Allocate	34	188	0	404	581
Phylo	35	57	167	499	732
lt.imshow	46	36	73	505	488
344	78	204	338	751	361
cast=True	3	67	261	146	235
3d	59	52	495	199	177
io.py	15	132	352	384	305
dropna()	6	85	12	700	910
PyArray_DATA	3	67	261	157	498
survive	2	215	328	355	187
WHY	30	212	55	136	965
342	54	3	101	297	399
343	37	3	27	187	158
expand.grid()	76	17	375	118	612
100:200	90	297	13	239	744
SUMMARY	13	26	375	574	631
jpg	93	61	315	99	593
df_one	48	123	486	631	82
room	59	232	232	458	576
l.set_ydata	75	40	444	236	622
roof	39	43	235	93	116
df.merge()	43	265	72	771	956
Eelco's	10	202	37	534	876
rolling-sum	77	42	248	279	905
exceptions	12	152	301	618	625
rssi	81	170	266	391	949
user_interfaces	93	235	104	537	704
root	60	98	38	279	809
2x10	34	77	0	88	228
Hettinger	24	121	264	646	500
Chrome	40	141	281	769	374
iterative	76	42	118	327	905
Whereas	47	0	392	678	544
MVLR	36	220	460	514	787
Chroma	13	224	63	108	893
stressing	50	59	114	210	907
implementations	7	51	65	2	730
downsides	76	272	134	552	990
10,000	21	190	234	557	42
.profile	55	132	352	113	798
integrate.quad	60	40	458	396	622
performace	10	272	118	225	98
reseting	43	47	75	771	73
Indexers	63	44	199	514	890
Watching	84	127	355	159	359
0.7.6	35	122	156	587	376
libaries	67	151	152	516	850
0.7.2	91	122	156	587	230
0.7.3	91	122	156	587	626
0.7.0	91	7	156	587	626
0.7.1	91	7	156	587	230
amazing	24	109	229	444	264
zaxis	5	148	253	558	844
2006-04-25	54	69	119	158	126
asvoid	90	291	141	266	969
config	55	132	352	113	798
interp_2d	60	40	458	396	352
loggers	79	147	450	101	675
NumPy-specific	76	94	147	169	235
blanks	6	68	12	130	910
Lucas	38	206	282	722	353
long-form	43	265	158	771	356
manuals	13	193	372	387	371
baseline	81	170	266	122	176
series3	95	281	335	621	211
third	78	21	338	616	456
np.fromfunction	42	40	14	15	709
68%	81	159	132	104	4
contingency	77	214	132	783	950
automaticly	2	116	145	405	986
try-except	88	59	14	424	866
Ended	24	109	229	413	870
checkerboard	22	117	433	709	672
linux32	55	128	52	477	56
operate	76	94	416	566	734
681	54	223	154	797	139
1576	68	205	154	196	357
682	37	250	27	475	194
twinned	5	148	32	19	518
b.data	27	100	95	138	273
.0001	96	266	289	28	810
cpBody	3	67	85	157	336
Place	69	162	191	209	837
10.10.1	19	7	306	301	232
captions	59	52	32	122	54
10.10.3	19	7	306	301	232
10.10.2	19	7	306	301	232
10.10.5	19	7	306	301	232
10.10.4	19	7	306	301	232
before	50	264	292	210	747
10.1	91	7	156	587	322
10.0	68	108	23	579	322
10.3	84	151	2	241	322
EasyBuild	35	26	63	516	594
10.5	84	108	249	579	322
10.4	84	108	2	579	322
10.7	19	7	306	301	232
10.6	19	7	306	301	232
personal	13	26	5	458	53
10.8	19	7	306	301	232
decile	78	144	173	276	459
nonblocking	29	187	128	123	55
numpy.tensordot	42	27	14	313	244
JOB	95	181	42	158	277
backend_tkagg	15	176	397	696	136
Path	83	1	259	514	720
fill_diagonal	42	27	88	313	244
cred	18	15	45	472	922
anim	29	203	348	236	444
combination	47	21	233	251	702
Computations	38	206	282	722	689
Challenge	38	206	282	519	38
.__array_interface__	3	220	361	138	273
Simulation	38	206	282	722	689
octal	61	58	443	539	501
@USER	24	121	264	646	500
open-source	13	26	63	516	850
Secondly	47	0	392	678	544
delimiting	61	58	452	539	501
Reference	69	193	19	387	114
Path.contains_points	72	165	15	199	570
griddata()	72	165	15	235	570
sio.savemat	3	174	74	157	942
interpolation	72	165	15	235	570
Check	47	193	19	678	371
fig.get_axes()	46	284	255	46	430
rebooted	40	119	429	664	954
DictReader	71	153	336	514	448
hasn't	50	264	292	210	747
Perform	69	179	169	530	145
no-go	35	232	220	697	594
df1.reset_index	64	150	406	548	48
trading	79	78	450	762	746
forgot	24	200	493	504	991
temporary	2	188	447	573	581
cumu	53	39	256	505	649
numpy.zip	67	132	352	499	791
toPandas	43	265	72	105	356
listed_array	78	100	216	355	283
0'th	74	49	216	616	456
plt.clf	29	203	348	123	55
whitespace	61	58	452	539	501
realtime	59	246	495	51	537
SELinux	40	119	429	607	377
parallelizing	76	272	345	225	990
Join	69	265	75	706	739
resume	29	187	128	764	954
2014-03-04	54	69	119	158	126
2014-03-05	54	50	368	429	19
Adj_Close	53	32	42	417	775
vstack	42	30	286	74	595
trang_data	68	32	13	545	744
infix	4	94	137	313	734
eveything	47	21	392	699	59
SST	41	165	15	282	397
copy&paste	57	232	222	567	451
SSL	67	119	473	607	377
some_df	53	95	51	239	779
SSH	40	119	429	607	377
SSE	7	51	428	418	166
shape-preserving	72	165	15	235	301
my_data	36	10	74	712	777
boarders	59	52	433	32	714
bite	88	232	232	144	53
my_date	99	281	68	679	390
ImageMagick	93	61	381	99	872
x86_64	19	7	33	590	972
df.join	64	150	406	631	445
Ascending	95	298	419	787	944
saved_cols	64	47	74	489	923
numpy.random.randint	75	243	88	725	484
warped	39	149	279	298	586
numpy.random.multinomial	14	174	199	699	888
agri	53	123	486	339	779
immensely	11	173	389	763	867
BlockManager	63	220	329	514	890
Series.shift	42	27	14	313	244
Contrast	69	162	191	61	38
misusing	47	59	60	424	907
qsort	76	51	65	169	730
oneHamming	96	266	266	391	421
m.imshow	46	36	73	316	488
Mesh	72	165	15	152	570
params	45	40	444	269	793
size=100	75	243	385	425	486
eigenvectors	60	194	280	431	485
plottable	61	215	328	355	260
guidelines	18	193	372	527	219
pandas-based	10	202	37	323	876
Factorization	38	206	282	722	353
copyto	42	30	361	138	273
clf.coef_	85	195	177	617	597
requisite	2	215	233	167	92
patheffects	15	135	44	777	873
begins	2	263	338	167	769
9-12-24	54	69	119	158	126
conforms	3	229	162	514	260
collinear	77	42	131	251	738
useing	50	264	292	699	59
frame_table	71	153	446	702	457
splmake	72	165	15	235	438
+ve	70	86	314	391	84
abstracting	13	232	126	203	417
pyplot.plot	46	39	383	592	649
enabling	76	152	138	257	621
A^{-1	85	194	280	704	598
Celery	29	218	183	359	803
filename.py	40	141	281	76	632
Animation	29	154	104	537	728
matplotlib._png	15	176	44	696	823
grind	59	232	235	167	394
tells	47	215	491	174	888
logical-or	42	157	95	18	866
JS_dj17	55	128	52	477	56
multiprocessing.Array	3	188	447	359	450
Algorithmic	38	224	282	94	689
py26-selected-packages	55	128	352	477	568
2gb	21	127	355	159	359
fitting	77	124	458	324	438
FigureCanvasGTKAgg	15	1	460	514	787
refinding	88	59	114	284	469
VideoWriter	38	248	381	141	722
b=2	90	227	257	10	744
desTrain	68	227	385	0	486
non-number	61	49	456	539	260
ContourSet	31	1	388	399	879
exponentials	14	86	314	279	238
Stripping	61	263	452	539	501
locality	76	188	447	44	450
Ivan	24	109	394	140	870
many-to-one	79	144	195	787	502
maria	95	181	272	168	497
lt.cm.jet	46	39	289	282	488
observation	79	147	173	101	955
x-lim	5	154	32	427	203
i.png	68	90	246	211	486
dateframe	43	265	75	771	356
simulate	76	246	48	195	416
hamming	60	270	472	588	662
0.98788927	90	54	257	713	449
100,819	34	205	251	196	943
annoyed	50	120	114	35	64
nice-looking	59	23	495	334	54
~1%	21	190	258	64	863
whitelist	94	222	456	170	160
probe	81	147	270	733	301
implying	47	0	392	91	908
~10	21	190	234	557	42
~16	21	160	355	323	655
liberty	57	263	490	567	81
~15	21	160	274	207	655
randomize	34	116	145	566	520
probs	96	174	297	238	469
index.pyx	37	250	27	314	802
trade-off	88	272	118	552	606
non-sequential	2	116	145	706	356
excercise	50	264	342	450	564
*my_list	75	227	54	690	526
new_dataframe	64	150	406	551	779
recomputed	2	215	328	405	187
762	54	3	101	127	158
month_name	5	14	335	621	884
Advantages	76	272	134	44	612
Others	47	0	5	170	219
index.pyc	37	250	27	475	194
100-1000	78	190	195	442	42
~1k	21	190	234	557	655
Leave	12	232	232	419	53
~1s	10	160	37	323	655
ord=2	44	194	403	5	598
my_stat_function	43	157	103	197	956
A+B	95	174	373	185	517
CV_8UC1	68	90	246	21	773
earn	18	15	45	472	922
unnecesary	12	188	118	573	863
traverses	34	179	396	566	77
setattr	65	220	329	514	720
vectorised	76	157	14	589	448
~1M	21	190	234	557	42
reload	15	135	319	777	180
traversed	2	43	328	573	187
terabyte	21	127	85	159	359
re-installed	67	151	327	664	104
tinker	88	232	232	306	439
notional	81	21	266	200	338
PYSPARK_PYTHON	55	132	352	113	137
test.txt	36	10	376	294	261
ears	11	120	212	739	727
uint32s	34	77	85	404	694
ECMWF	79	147	450	101	675
imitate	60	296	342	742	631
self._reader.read	75	227	385	425	486
Invert	69	31	237	209	911
testing	50	183	292	534	783
alterations	50	232	232	35	531
Indexes	69	162	191	789	739
scipy.misc.imsave	22	248	381	141	722
Indexed	69	162	122	61	739
interruptions	59	117	29	32	714
sns.factorplot	46	39	260	505	649
Somebody	11	173	143	144	652
pd.NaT	27	260	431	85	945
Tool	38	224	282	110	689
FigureCanvasQTAgg	93	187	104	537	728
Took	50	109	114	407	64
artificial	12	183	48	195	950
bivariate_normal	60	40	444	742	709
Jamie's	4	17	254	710	441
A+1	85	270	472	467	676
x_range	41	13	177	592	397
omg	24	200	114	444	469
setup.cfg	55	132	352	113	798
pyplot.xticks	75	148	289	46	810
physicist	18	120	212	739	852
weary	88	59	114	35	907
openSUSE	84	7	432	301	321
upfront	94	222	446	702	160
cousin	13	183	342	458	950
rand()	15	277	444	725	957
param=	55	128	293	52	56
Otherwise	47	0	392	678	544
suggested	4	121	264	252	500
NULLs	6	68	162	130	470
4-grams	21	160	234	391	863
YAML	71	153	50	423	108
.xs()	43	265	72	369	227
Permute	34	49	131	522	944
presumably	47	0	392	91	908
ZZ	78	144	195	467	361
carat	41	39	335	621	649
Returns	69	162	237	347	560
log2FoldChange	53	181	42	250	624
interpolations	72	165	15	235	301
xlist	41	6	270	282	397
puts	2	215	491	174	702
basis	81	21	275	203	738
regenerate	93	239	457	335	180
np.uint8_t	90	227	26	157	498
tiny	10	272	409	44	604
ting	65	153	145	589	854
JSON	71	171	303	60	457
np.c_	42	30	286	74	595
detrimental	7	51	345	169	166
interest	2	21	233	170	338
basic	13	59	126	203	950
entered	2	215	328	98	187
lovely	24	109	229	444	264
asciitable	35	193	19	9	371
groupby-apply	43	157	72	771	956
dismiss	12	263	5	419	908
Flow	38	271	159	519	38
locations	81	21	131	733	283
inliers	34	100	95	509	228
Voice	38	206	282	519	38
Debugging	57	235	19	281	451
glyphs	93	230	448	767	851
forum	18	225	45	527	509
np.__config__.show()	15	112	184	699	630
Process	38	218	183	281	803
zip_longest	65	27	81	735	311
zero-based	78	111	216	369	77
-------	30	212	368	429	428
look_for	74	100	108	178	637
os.chdir	36	10	136	308	261
setuptools	67	151	210	604	104
numpy.dstack()	42	27	286	313	244
DataFrame.reset_index	43	47	72	683	73
seven	78	140	233	251	326
settles	24	200	493	504	991
80M	79	144	195	787	944
cann	76	48	61	630	614
recuperate	74	297	4	255	228
cant	50	264	392	143	835
Value3	48	123	486	339	82
Value2	48	123	486	339	82
Value1	48	123	486	339	82
firstWords	78	204	338	318	995
1417982811944	86	181	287	479	496
disappear	59	154	188	427	714
specialization	3	220	329	663	235
overlaps	59	52	32	122	884
realizing	50	264	292	210	747
7200	75	243	385	0	486
V1	85	172	481	467	170
V2	85	172	419	467	170
V3	44	174	251	5	59
V4	44	205	251	196	192
__check_build	15	176	44	696	823
14:45	54	186	119	34	789
b_positions	59	4	433	199	198
evolve	41	6	177	396	622
VC	55	132	152	384	305
VI	85	194	280	5	485
VM	84	119	2	607	377
VS	7	163	152	241	850
Values	69	162	191	789	837
VV	44	205	4	509	228
normvecs	90	297	4	509	744
Usually	47	0	392	678	544
2014-12-31	99	287	453	155	687
presto	24	109	394	444	469
.predict	27	256	154	668	994
failing	50	37	301	699	888
80%	21	160	355	159	176
Psyco	7	51	65	2	730
add_newdocs	15	176	44	696	823
programa	53	139	42	417	624
Vx	41	6	177	107	228
programm	40	246	429	609	954
800	21	223	234	557	252
yours	4	17	254	710	441
Native	30	271	191	281	38
str.contains()	43	157	72	683	956
.interpolate()	53	139	418	72	390
all_authors	75	174	117	690	314
yea	24	200	493	504	991
downwards	59	288	25	122	884
prints	2	37	491	174	59
assigned	2	215	328	98	187
~1500	21	190	258	203	863
yep	24	200	493	504	991
yes	24	200	493	504	991
yet	35	264	393	75	564
COBYLA	63	98	458	279	438
nudge	11	173	389	763	867
cross-product	39	43	235	152	102
royal	13	225	235	419	219
Elapsed	10	160	274	323	655
d_main	74	195	54	690	888
uint16	14	291	141	266	969
inefficiencies	76	272	118	552	863
join()	29	218	103	683	803
0xFF	22	291	201	438	672
save	71	61	50	423	180
trimming	50	263	145	44	576
tabulators	61	263	452	539	501
pd.Index	64	150	256	72	390
display.float_format	86	129	465	137	347
discreet	81	21	409	44	162
scale=	96	266	289	695	427
cbook	15	37	44	699	823
Arr	74	297	54	690	228
thank-you	24	109	229	140	870
Art	54	186	298	338	361
${PYTHON	86	129	485	193	858
Redshift	71	171	303	128	759
occlusion	59	52	495	199	177
np.where	27	260	431	234	945
Arc	31	57	167	199	732
Are	47	0	392	678	835
Arg	24	200	493	140	469
datetime.datetime.fromordinal	63	63	460	426	390
OUTPUT	30	271	159	347	560
signal	20	93	425	507	344
index=0	48	123	486	339	502
np.putmask	42	27	14	313	244
deal	12	229	392	799	360
somehow	47	59	392	91	835
dead	35	232	220	407	594
printer	93	61	315	99	374
dear	24	200	493	504	991
Contra+1a	54	108	23	579	931
manifest	71	153	60	697	315
add_subplot	31	284	255	577	518
subdf	53	95	51	212	273
csv.QUOTE_NONE	52	185	28	114	971
ill-posed	12	42	38	170	84
2013-06-19	53	69	42	155	624
runing	50	37	429	167	59
nxutils	35	122	156	415	376
locators	5	148	363	19	844
ax.show()	46	203	348	577	55
Learning	38	224	282	94	689
data_orig	53	123	51	339	779
Esri	71	246	50	60	108
index=x	64	150	256	772	838
Ocaml	71	272	122	702	457
maintainers	35	122	220	628	594
sys.stdout	36	10	136	712	619
Cores	54	108	300	797	139
codified	61	49	443	539	501
group_id	78	144	195	276	637
Centos	19	7	432	301	321
m+n	44	195	356	327	668
APLpy	93	61	495	51	54
magazine	79	228	487	519	675
Pressing	29	187	128	764	954
Including	57	235	342	450	338
afternoon	50	264	114	407	64
emcee	38	206	48	722	353
time_unit	63	174	460	172	787
FDTD	11	120	48	195	416
thinner	59	52	433	32	714
managers	67	151	47	351	732
subs	31	148	388	514	879
to_pydatetime()	43	157	14	15	956
test2.png	59	52	233	251	54
numpy.ravel	42	30	396	358	263
y-scale	5	288	32	639	825
down	50	232	232	35	781
locator	5	148	363	558	844
refined	72	165	15	799	371
Python.org	67	151	210	351	104
NaT's	6	68	456	130	910
matrixes	34	292	280	431	485
Coriolis	20	170	231	191	576
Unless	47	0	392	678	544
flying	12	225	5	144	53
editor	40	141	281	769	632
fraction	81	170	284	245	479
Ubuntu	19	7	432	301	156
NBA	38	224	282	519	38
Pyzo	91	7	156	587	230
in-kernel	71	171	303	702	457
analyse	13	246	126	203	765
sub-	2	222	216	514	694
analyst	13	207	126	203	765
sns.pointplot	31	14	383	568	710
opcode	76	218	183	359	803
matplotlib.pyplot.xticks	5	148	363	558	844
prevents	2	152	491	618	621
Attempts	2	21	131	91	888
groupby.transform	43	157	72	683	956
reimplementation	76	272	118	169	581
whisker	59	159	433	104	710
pre-calculated	81	170	266	44	576
y_idx	44	293	108	586	146
regularisation	77	168	186	705	162
np.index_exp	90	297	26	239	744
65535	22	291	201	438	672
65536	21	190	258	45	252
internal	76	152	147	257	621
marking	18	15	45	472	922
Share_Amt_To_Buy	78	204	453	167	769
ndarrays	34	94	0	73	694
df_cols	49	47	406	548	73
contains_points	72	165	15	152	570
linewidths=	46	39	73	316	488
-rf	55	128	52	477	568
2500	21	190	234	557	252
10x5	34	77	0	88	228
10x4	34	190	258	88	491
10x3	34	77	251	88	943
10x2	34	77	251	88	943
10x1	34	77	0	88	943
fmin_cg	60	40	444	396	709
utilities	13	26	126	118	398
index.py	37	250	475	314	173
600809	95	123	335	606	255
np.lib.npyio.NpzFile	71	153	336	423	306
weekend	99	140	232	407	64
Inf	6	68	12	130	910
cut-and-paste	57	232	232	144	625
250k	21	160	234	323	655
happening	50	59	301	618	120
macports	67	151	210	351	104
restores	2	215	328	335	180
$PATH	55	132	352	113	137
stripping	61	263	452	618	781
netCDF	71	153	214	423	108
Substitute	34	21	131	522	338
Chaco	13	23	63	118	398
laws	77	42	248	279	238
MikTeX	19	7	417	301	644
noverlap	45	170	284	245	479
s.iloc	90	297	115	239	227
E.G.	99	140	453	198	687
math.isnan	27	260	431	234	945
WIDTH	61	129	117	157	898
cumsum()	43	85	103	784	956
np.ogrid	42	30	286	74	368
hello.py	40	176	429	696	136
t_output	44	243	46	196	252
Weckesser's	4	121	254	710	441
POLY_KEY_I	48	123	51	197	82
retention	79	147	173	101	817
Edited	4	200	490	567	81
anticipation	24	109	394	567	870
PySparse	60	296	102	431	751
l.append	75	32	431	690	486
non-iteratively	81	48	275	588	738
0	90	297	257	10	744
swoop	2	48	145	574	207
one-d	34	77	0	73	694
sys.path.append	55	132	386	308	568
advises	24	121	264	646	500
python-setuptools	67	151	327	232	334
downscale	20	126	381	571	562
pd.read_sql	36	171	182	343	88
df.iloc	90	95	115	239	227
a.empty	63	44	240	782	226
advised	12	152	60	419	907
__bool__	3	220	329	663	866
array_name	74	95	54	239	779
11:01	54	186	119	158	126
swapping	2	188	355	573	863
new_dtype	75	227	385	0	486
cheapest	79	43	282	327	327
proposals	18	225	5	419	219
np.import_array()	76	51	65	215	625
crimeall	53	139	42	72	775
stackplot	31	1	388	399	879
Cumsum	43	100	275	276	734
round	14	86	314	325	549
talked	4	264	292	210	747
dealing	12	152	126	203	604
pd.melt()	43	157	72	683	956
measurable	10	202	37	225	990
Pythons	84	26	167	735	321
ipynb	57	61	342	769	54
-dev	67	151	327	232	334
Counter()	65	233	158	540	526
targets	47	21	291	251	148
Merged	69	265	191	405	739
Define	69	179	237	174	927
majors	59	52	29	32	714
sparsetools	55	128	330	205	461
linalg.pinv	60	194	280	431	485
pylab.imshow	22	90	246	141	627
cythonize	7	51	428	215	915
numpy.sum	42	269	403	65	244
filler	6	68	456	349	910
pyplot	93	23	104	51	710
unsort	2	116	337	708	520
Heat	38	206	495	209	71
suspect	47	59	60	630	120
Normalized	69	138	159	789	698
international	79	268	450	762	746
filled	6	68	328	32	910
processing	71	246	126	203	765
clears	29	203	128	123	55
DST	99	140	453	109	94
DSP	13	26	212	118	765
rug	59	23	495	51	710
interferogram	20	93	339	191	344
DSL	76	94	65	257	748
DSM	4	121	264	646	500
rospy	71	246	183	609	600
falsetru's	4	17	254	710	441
numpy.meshgrid()	34	77	286	662	397
box	59	154	284	122	479
boy	50	228	114	407	852
diagnoses	65	233	158	540	890
exemplified	57	235	342	66	950
equidistantly	81	43	270	733	714
bot	29	187	233	149	2
netCDF4.Dataset	86	129	136	211	858
streamplot()	31	13	393	199	627
spheres	39	117	433	93	102
Daylight	99	140	66	198	27
Session	30	281	66	339	779
diagnosed	4	121	264	646	500
bob	95	181	373	686	497
column-vector	44	77	251	73	888
bog	13	246	58	571	765
merely	47	215	392	91	908
PCs	81	21	233	251	321
fc-list	40	112	128	288	954
raspberry	84	246	58	428	600
hierarchically	43	265	75	771	356
sake	57	17	342	458	950
mouseevent	59	154	495	51	2
visit	79	193	372	231	285
ahhh	24	200	493	504	991
Maintaining	71	116	126	203	108
AUC	77	168	186	705	646
accuracy	77	183	409	44	84
faith	18	120	212	419	53
S100	86	18	141	266	178
a.resize	75	227	228	0	263
512x512	22	126	251	45	943
AUS	53	181	42	250	775
a.max()	27	260	431	509	945
sorted_list	75	243	370	282	810
JOIN	30	212	182	574	965
idx	74	293	4	509	146
try-catch	61	37	222	618	625
quoting	61	58	452	539	501
operator()	3	220	447	570	235
repro	57	37	143	37	451
drags	59	154	188	427	203
Numbers	69	162	191	789	425
scipy.ndimage.measurements.center_of_mass	39	149	235	122	979
making	2	116	145	573	531
thicknesses	59	52	32	245	714
nearest	72	165	15	588	570
Fundamentally	12	183	409	44	84
numpy.setdiff1d	42	27	14	73	866
ax.annotate()	31	13	388	592	879
sample	57	235	463	450	451
df3.index	49	139	406	631	445
format.py	55	128	330	205	461
Bummer	45	48	457	630	31
unhandled	63	176	397	582	136
14h	95	181	373	90	428
dataframe.plot()	5	148	383	51	710
x.values	27	269	10	772	838
foreach	74	100	131	522	694
Row	69	162	191	789	739
datasource	71	153	50	423	561
146	54	3	298	318	158
147	54	3	298	318	158
dataframe.apply	43	116	103	706	356
145	54	3	298	318	158
142	54	3	101	318	158
143	54	3	187	318	158
140	21	223	298	318	158
141	54	3	101	318	158
y-coordinates	39	288	438	733	116
binade	81	170	266	391	84
Uri	47	59	392	91	469
148	54	223	298	318	158
2700	47	21	131	251	59
membership	65	100	158	18	866
14%	10	170	409	44	176
snr	53	139	42	417	775
sns	31	23	319	568	710
snp	53	123	486	339	82
LC_ALL	45	80	334	269	315
Animated	59	52	495	209	177
MNIST	77	168	186	705	646
jellyfish	77	270	472	742	662
n_ind	44	293	4	509	146
dimenions	12	152	147	91	908
Series	43	265	72	771	956
p.size	10	243	46	323	876
frameon	45	226	334	269	608
Randomly	69	31	100	530	911
if-condition	2	48	457	522	338
basket	79	78	487	480	285
numpy.asarray	3	90	246	157	263
dojo	12	225	5	419	53
bisplrep	72	165	15	235	570
shoes	18	225	373	170	852
Generator	69	162	191	61	837
mytable	36	171	182	343	88
decently	88	272	61	334	604
lst	75	233	54	690	526
98.5522082	54	50	368	331	449
equiv	86	18	460	36	906
observational	79	147	450	101	675
Replacing	69	31	100	530	911
group	79	144	173	276	653
monitor	40	127	355	159	600
sparce	34	292	64	348	218
vector_a	44	205	87	5	598
vector_b	44	205	87	5	228
0.3.1	91	7	417	587	230
Rain	48	123	66	168	497
DeMorgan's	60	42	14	313	272
np.int8	3	291	141	266	969
policy	35	225	183	170	219
transparently	76	51	65	169	957
non-negligible	10	272	356	327	863
pixbuf	93	187	104	537	728
Kyle	24	109	394	646	500
-inf	96	29	314	130	13
onedir	45	80	174	435	591
lunch	18	232	232	407	64
markings	59	52	433	32	884
Vanderplas	93	193	372	387	704
ls=	46	39	73	316	649
workload	13	218	183	445	803
matplotlib.pyplot.imshow()	22	4	381	571	627
III	95	298	282	519	38
-300000	96	29	18	173	13
repositories	67	151	210	351	104
_get_numeric_data()	43	157	103	683	956
Sampling	69	31	100	264	71
Minimum	38	162	191	264	698
careless	24	200	493	504	991
x1=	41	6	289	200	810
getitem	3	220	329	663	720
x10	10	202	37	323	876
x11	40	141	281	764	954
x13	41	172	481	243	808
dpi=100	46	284	348	577	619
badly	12	152	60	334	604
Generic	30	271	191	281	114
conventions	12	152	147	145	195
monary	18	193	19	387	371
assertEqual	27	40	95	355	866
tab-separated	61	49	50	539	108
distro's	67	151	210	351	732
numpy.float	3	291	142	266	969
stitch	2	116	145	706	986
autopct=	86	129	465	137	347
Successful	71	153	50	127	108
nominal	81	228	206	519	675
NavigationToolbar2WxAgg	93	154	104	537	728
Key	48	271	159	281	682
Tingis	50	109	394	567	469
blit=False	45	80	348	123	55
G	85	79	419	5	192
eig()	60	296	102	431	751
Sometimes	47	0	392	678	544
numpy.triu_indices	42	194	286	358	244
Importing	69	31	100	530	316
ajax	71	246	90	609	92
bayes	77	168	186	705	646
Tuple	65	94	158	540	890
test5.o	55	128	386	52	56
funky	50	152	301	618	120
Installer	67	151	470	241	104
.lower()	53	89	163	340	131
waited	10	160	274	323	655
first	47	21	338	616	456
earnings_vola	63	40	444	396	622
Arduino	40	246	58	55	600
numpy.random	15	135	319	725	873
figure.show()	29	37	128	699	54
Black	22	4	427	438	225
specificity	12	183	409	458	219
csv_file_object	36	10	489	712	261
row-index	78	49	456	405	356
numpy.bmat	34	77	280	88	581
bare-bones	57	235	342	450	950
pylab=wx	40	141	281	76	632
quiver()	59	13	495	199	627
vmax=	46	36	73	653	488
Subclassing	3	220	329	663	720
speaking	88	0	147	145	908
numpy.dstack	42	90	246	74	595
Int64	94	63	162	426	452
undesired	12	263	301	618	515
np.vstack()	42	27	88	750	595
set-up	57	235	342	697	950
out-of-bound	76	111	147	145	890
csv.QUOTE_MINIMAL	52	185	376	85	906
QuTiP	13	42	48	722	416
highest_gridpoints	78	100	108	586	283
scraping	71	153	303	60	92
groupsort	94	222	356	252	160
currencypair	61	58	452	539	501
Matplolib	59	154	495	209	177
zip()	65	27	81	648	311
default=None	74	174	493	504	991
anyways	47	0	392	630	469
20s	10	160	37	323	655
deciphering	11	120	114	35	727
Container	31	1	388	399	879
OEUhrzeit	53	139	256	682	199
20x	10	202	37	323	284
talib	13	26	126	118	398
Tight	5	13	19	97	439
Contained	31	193	19	514	114
0-7	78	288	324	397	421
sheet1	36	10	376	712	261
20k	21	190	258	557	42
20m	21	116	131	522	944
recreated	2	215	328	335	187
NumericType	3	264	162	514	888
0-3	78	288	453	198	603
hotspot	10	277	118	225	169
recreates	57	235	463	450	766
double-click	40	187	188	427	2
interior	39	43	235	733	116
performance	10	272	118	225	990
20K	21	190	258	557	42
20M	21	190	234	557	42
600,000	21	190	234	557	42
bets	12	232	232	35	53
200	21	223	234	557	252
203	54	3	101	318	158
202	54	223	298	318	811
205	54	3	298	318	158
204	54	3	298	318	158
207	54	3	101	297	158
206	54	3	101	297	158
arguing	18	120	5	419	53
208	21	3	101	297	158
numpy.uint32	3	291	141	266	969
incidence	81	126	206	93	949
fred	95	181	373	686	517
1+1	96	201	18	560	62
beta	77	219	177	783	597
20%	10	160	37	323	176
fmin()	77	124	458	396	738
sheets	71	153	86	638	561
formulae	61	42	86	638	912
canny	22	248	7	709	670
20+	21	190	234	557	354
proxies	31	94	329	514	720
AssertionError	63	44	199	582	888
synonym	3	94	181	145	195
C2143	63	176	164	211	572
compounds	81	43	131	251	944
re-apply	50	232	457	335	180
sigma	96	219	132	783	454
WF	74	67	261	146	498
MultiIndexes	43	265	75	702	921
C-compiled	76	40	88	169	417
Linode	84	119	183	607	377
supposition	57	235	490	37	451
representatives	81	79	41	522	234
russian	71	153	50	423	108
MultiIndexed	43	265	75	771	921
decompositions	60	194	280	431	485
Stephen	4	224	264	102	689
Across	69	162	191	789	739
WX	93	80	104	435	591
We	47	0	392	678	544
Series.astype()	65	157	14	15	956
storms	39	73	279	322	586
1e-30	14	183	314	391	84
analytic	77	98	38	279	809
helix	39	149	438	93	116
max-min	96	266	18	28	241
pickle.dumps	36	10	489	712	942
awareness	35	152	138	9	398
Wx	93	187	104	368	591
200000	21	190	234	557	42
get	47	0	392	91	338
Rosenbrock	36	129	136	137	858
plt.rc	45	80	448	767	909
Large	69	162	191	61	837
unimportant	2	263	134	618	863
sollution	11	120	114	35	727
a.k.a.	72	165	358	722	71
tifffile	22	248	381	571	593
geo	79	73	279	766	675
llvm-gcc-4.2	63	176	397	696	136
gem	24	109	229	444	264
DataFrame.sort	43	157	103	683	956
Right	47	200	445	678	469
fdf	53	139	42	250	775
synonyms	59	59	25	122	835
requesting	12	152	60	419	907
argrelmax	72	165	382	235	396
circuits	88	257	61	327	612
miles	39	73	279	766	221
W2	60	194	280	431	485
W1	44	194	280	431	485
j=0	74	195	4	255	577
j=1	74	195	4	255	577
Twitter	71	246	303	60	92
declared	15	40	328	146	406
Visualize	69	206	495	209	71
HELP	24	33	229	140	870
Cythonize	76	42	48	225	169
Provide	57	235	463	37	451
%run	40	141	281	76	632
refcheck	45	220	334	269	793
func_cpp	3	40	261	312	349
declares	3	67	261	146	235
eliminating	2	263	145	566	531
Grand	95	271	159	686	38
unaltered	2	215	328	699	180
utm	39	149	279	298	573
wonder	88	59	392	630	31
__array_wrap__	3	220	329	663	235
replicating	2	116	145	573	531
vertical	59	52	32	32	884
parallelizes	76	218	345	445	803
label	5	52	32	19	884
boundaries	39	117	270	733	301
*x0*	96	35	154	176	201
enough	88	59	5	419	604
streaming	71	246	183	609	600
ngrps	14	86	314	325	238
expose	76	51	65	312	417
across	81	21	233	251	338
max_x	75	227	385	28	486
max_y	27	259	289	28	810
top_depth	48	123	486	168	82
infrastructure	13	26	126	118	959
np.concatenate	42	30	286	74	595
FOR	30	212	55	136	965
flist	75	174	117	509	486
heterogeneous	71	94	122	702	457
A.transpose	44	227	228	0	598
Each	79	21	233	487	702
labels_array	74	100	108	586	283
xVars	65	233	54	690	526
Reversing	2	111	147	566	77
deallocating	10	188	447	570	450
2:00	99	69	119	525	762
tour	18	225	45	527	509
tout	29	187	128	427	2
X-Y	39	149	270	733	301
Statistical	38	224	282	94	689
OMP_NUM_THREADS=1	10	218	345	445	803
c_start	99	140	453	109	94
Pearson's	60	270	472	783	662
OMP_NUM_THREADS=4	21	160	274	359	655
executables	67	151	152	241	137
among	47	21	233	251	702
syntex	50	264	292	210	59
int-like	3	291	162	426	470
firewall	67	119	167	697	377
colspan	5	284	255	577	518
.ravel	42	30	396	74	263
spans	81	147	450	101	817
apply_along_axis()	63	44	199	15	341
considering	12	59	60	630	907
itertools.takewhile	42	27	14	589	793
numexpr.evaluate	27	29	10	173	314
tuning	77	183	409	306	394
capable	13	26	126	118	765
a+b+c	60	296	14	279	809
COM3	40	119	429	764	600
16.5	54	108	23	579	399
PLSSVD	77	168	186	705	646
attaching	2	116	328	450	531
Optical	38	206	282	722	353
wobbly	59	52	60	618	120
18:00	99	253	119	525	256
judging	50	193	60	252	371
np.uint16	3	291	141	266	969
16.2	91	7	156	587	626
imv	44	194	137	5	598
squash	81	170	25	122	603
reproducable	57	235	463	37	766
dramatic	10	202	37	323	342
rsuffix=	49	123	406	631	82
declaration	3	67	261	146	406
Action	95	138	66	519	38
hardcore	88	272	5	630	612
^	86	89	163	299	66
sound	20	246	58	428	563
kappa	96	219	314	396	13
str.zfill	42	157	14	589	448
cross-correlation	20	93	248	191	396
_first_	5	288	25	449	884
1100	54	108	23	579	399
promising	88	109	229	334	264
PointX	74	297	338	616	995
hmmmm	24	200	493	504	991
408	68	3	101	797	139
Y-Axis	59	288	335	209	884
%pylab	40	141	281	76	632
strait	88	48	457	306	31
sleeping	29	218	128	764	954
dict's	65	116	158	540	207
strain	21	73	50	519	713
sudden	29	37	301	764	954
loosing	2	116	145	573	531
protein	79	228	206	27	675
\xa0	61	58	443	36	209
IEEE	14	86	142	325	549
Prefix	61	49	50	539	713
pdftk	93	61	315	51	54
quirky	88	17	61	799	695
sieving	10	42	67	327	238
Grumble	88	225	5	419	53
np.iinfo	3	291	141	796	969
s.plot	46	39	73	505	649
compiling	7	163	428	326	915
recfromcsv	52	185	336	121	793
MatLab	13	296	375	364	631
extended	2	229	342	799	187
Embedded	38	162	259	110	837
Polar	38	149	495	209	71
sort_columns=True	46	39	383	505	649
assist	11	173	143	763	652
companion	35	26	63	9	594
get_offsets()	31	215	388	252	59
SIM0	78	144	173	547	459
invariance	20	93	248	191	989
arrays-	50	264	393	75	564
to_csv	52	185	28	24	793
arrays*	14	94	137	325	238
identifiers	78	49	195	787	944
clust_data	74	233	54	690	526
pep8	57	152	181	257	195
norm.pdf	96	219	177	725	201
double-precision	14	291	142	325	549
new_entry	90	297	54	690	995
41872	87	81	69	77	89
raw=True	42	40	14	15	709
reindex_like	43	47	72	683	73
8.000000	54	108	300	579	139
consisted	78	21	131	98	702
yearly	79	147	450	101	94
A*	96	194	1	704	598
FancyBboxPatch	31	1	388	399	720
soon-to-be-released	91	122	156	587	376
unofficial	67	151	470	219	104
_constructor	31	220	329	663	720
FigureManager	93	1	104	537	728
set_tick_params	5	148	363	558	844
}}}	31	1	123	540	578
clueless	50	120	212	284	907
A0	85	194	280	5	485
MathTextParser	47	21	392	51	338
A3	85	172	481	224	778
f.set_index	64	287	406	631	294
A2	85	172	481	224	778
cvtColor	3	90	246	141	722
python-qt4	67	112	276	499	128
A5	22	4	207	200	672
set_option	45	80	334	24	547
mouseclick	59	154	188	149	2
2011-07-01	54	108	23	158	931
2011-07-03	54	108	23	579	931
2011-07-02	54	108	23	579	931
black-box	60	98	458	279	438
x*x*x	10	202	137	169	876
one-to-many	48	144	195	787	502
credentials	40	119	429	609	377
web2py	40	119	429	609	377
Operations	69	179	169	61	145
_all_	6	263	95	618	827
acquainted	50	120	212	35	727
adams	45	18	334	36	906
identifying	2	116	60	799	531
relativedelta	43	63	68	426	745
df2.loc	53	95	115	417	227
es_in	3	220	444	514	406
Raises	63	44	199	582	888
Moreover	47	0	392	678	544
cokey	78	100	456	355	283
Analogously	47	21	233	251	338
imagee	44	293	4	5	228
imaged	59	117	25	32	54
finalResult	61	129	222	137	975
nordev's	4	17	254	710	59
Spyder's	40	141	281	76	632
Hmmph	24	109	37	323	876
AD	99	140	453	198	687
slice()	65	220	81	648	172
Four	95	43	235	519	517
pd.to_datetime()	94	63	68	426	452
outs	50	232	232	35	564
calculating	81	270	275	783	603
Mem	84	271	2	410	38
Mel	53	139	51	417	199
stages	79	218	126	167	959
Covariance	38	206	169	264	698
14000	21	160	234	557	655
Gender	48	123	486	339	653
Image2	27	259	211	41	945
Configuration	40	141	259	110	402
.indices	34	27	88	404	581
ImageJ	22	248	381	141	722
df.columns.difference	64	150	256	551	48
4:10	68	54	257	332	744
fitness	77	43	235	588	162
Settle	48	281	486	339	502
Behavior	69	162	191	61	837
image2	22	90	246	141	722
image1	41	90	246	107	397
Akavall	4	121	264	646	500
out2	49	172	481	631	445
irregardless	78	170	266	546	283
dataList	3	18	162	514	172
__setslice__	42	220	329	663	273
out=	42	30	286	74	263
Autumn	54	186	300	338	300
tabledf	31	48	457	122	979
student_id	48	144	486	178	637
Images	38	206	191	209	71
numpy.intersect1d	42	27	14	313	244
Patch3DCollection	31	1	388	399	879
AT	79	144	195	178	965
ScalarFormatter	5	148	363	629	844
coupon	48	123	486	168	814
symlog	5	148	383	639	825
scipy.stats.binned_statistic	60	296	472	313	396
harness	76	51	65	169	783
pandas_env	67	112	276	57	137
x.flatten()	42	30	361	138	263
AX	85	238	177	396	622
first_column	48	49	328	185	517
DataFrame.append	43	265	72	771	73
calctheta	15	135	460	236	406
.groups	64	150	256	197	48
distracted	50	200	114	35	81
''])	53	139	42	211	199
Errorbar	69	162	191	209	837
mondays	99	140	453	109	687
labelling	59	52	32	19	884
pd.ols	77	256	177	668	597
spicy	60	57	301	699	59
woudl	11	48	389	143	867
index=index	64	287	406	551	48
Pool.map	60	40	444	359	803
Pythran	10	202	274	297	915
help-fcompiler	55	112	276	57	128
Win32	63	176	397	696	136
math.e	96	29	137	173	598
.len()	53	139	51	417	775
rbind	43	265	375	364	631
hurricanes	59	73	279	27	586
cp27	67	151	470	604	104
impression_data	53	167	51	339	199
arranged	81	21	270	98	301
'']`	53	139	51	85	199
year-olds	78	204	453	338	361
relabeling	5	52	32	19	884
reapply	2	116	145	706	923
arranges	2	116	145	566	520
showPopupMenu()	45	100	148	355	148
eschew	12	152	181	145	195
HSV	22	4	381	438	672
250x250	21	190	258	557	252
z**2	96	201	18	560	13
number-like	3	94	329	514	720
Am	47	48	445	424	835
profilers	18	225	5	419	219
imwrite	22	248	381	141	722
examine	2	37	232	144	338
numpy.polyfit()	77	124	458	324	438
df_if	53	139	51	448	779
again	47	109	292	567	469
fomit-frame-pointer	55	128	293	52	56
CrossValidated	18	225	45	527	509
Gig	21	127	355	159	359
subject_id	53	18	272	682	199
pandas_select	76	94	14	15	734
Somewhat	88	59	147	630	908
d.concat	64	287	406	631	294
low_memory=False	52	185	28	121	793
np.reshape()	34	205	251	196	943
setp()	31	13	388	269	879
test5_wrap.o	55	128	293	52	56
eachStock	65	233	181	86	406
file.py	40	141	281	384	632
Ax	85	194	38	704	809
figure()	29	203	348	123	55
data-array	31	13	388	588	879
480	21	223	251	45	252
np.loadtext	36	10	376	712	261
assets	79	78	450	101	955
MedDescription	48	123	486	787	82
DataFrame.ix	43	95	115	369	227
PythonXY	67	151	63	516	850
u	85	174	177	107	262
multi-dimentional	34	77	0	73	694
tensorsolve	44	194	137	5	598
Ctrl+C	29	187	128	764	954
u'occurred	63	44	460	172	997
Workers	40	218	80	445	803
founded	79	264	487	480	285
Git	67	151	167	499	732
THANKS	24	33	229	667	870
fill_method=	64	85	449	48	817
expressions	76	94	14	589	734
Asahi	24	33	229	140	870
responsiveness	10	272	118	225	990
preserves	2	229	491	566	621
cross-sections	43	265	75	706	921
diffuse	20	126	206	709	562
tarball	67	151	470	604	104
rec2csv	36	153	50	423	108
preserved	2	215	337	708	187
TAB	29	141	128	764	855
ylabel	5	148	32	19	518
enjoying	11	120	212	739	727
Self	4	162	19	281	114
CreatedAt	53	281	68	682	390
fig.add_subplot()	31	203	348	577	879
Training	16	206	282	519	353
np.timedelta	3	63	460	172	787
movie_id	48	47	159	631	82
QWidget	93	1	104	537	728
sitting	71	218	429	697	92
plt.yticks	5	148	253	46	339
toss	50	232	232	618	781
Restarting	40	57	301	664	315
curve_fit	77	124	458	324	438
set_printoptions()	45	37	334	15	906
scipy.ndimage.zoom	72	165	15	235	570
Sebastian	4	121	264	646	552
ufunc_object.c	76	218	444	169	709
groupby's	43	157	72	683	956
forking	29	218	183	359	803
bypasses	76	272	118	169	612
array_equal	42	27	14	313	866
SuperLU	3	220	329	663	155
egg_info	55	176	397	696	791
Labels	69	162	191	209	837
triangulate	72	165	15	152	102
non-continuous	59	117	409	546	120
bypassed	2	152	60	799	187
dists	85	293	108	586	778
distr	84	57	167	301	321
PC2	59	52	495	209	177
20th	78	140	338	616	456
deallocated	3	188	447	570	450
maxymoo's	4	17	254	710	441
matplotlib.collections.PolyCollection	31	1	388	399	879
2012-02-03	54	54	119	158	126
zero	6	86	314	391	283
perspective	13	152	5	419	53
num_columns	75	227	228	0	357
500k	21	190	234	557	42
wmat	34	188	361	404	77
residue	77	214	132	783	801
in-process	71	218	183	609	959
application's	29	218	183	609	556
Divakar's	10	202	37	710	441
fama_macbeth	43	265	375	742	709
L-BFGS	77	98	458	722	905
500K	21	190	234	557	655
memmap	71	188	336	702	306
.csvs	71	272	183	706	959
5001	75	243	289	200	252
5000	21	190	234	557	252
6.75	54	54	257	713	449
Documentation	35	193	19	387	371
Zoom	93	154	188	427	203
6.73	90	54	257	332	995
Roman's	4	17	254	710	441
threads	29	218	345	445	803
over-complicating	50	232	114	35	469
rotation=70	46	148	363	46	430
500+	21	190	390	557	692
N-dimensions	34	43	131	73	694
Classifier	77	168	186	705	353
mult	85	194	406	5	598
diffs	6	100	456	522	910
bracket1	63	44	199	582	888
sofar	11	225	389	170	219
Separating	69	31	233	530	911
mentions	4	193	19	252	371
Bizarre	43	152	60	799	120
x-position	5	288	32	490	479
charmap	61	5	443	563	209
boosting	77	168	186	705	646
y_train_actual	63	256	199	184	994
error_bad_lines=False	52	185	28	121	971
update_plot	74	40	444	201	622
json_data	36	174	489	185	262
Axes3DSubplot	31	1	460	172	787
extract_patches	60	27	19	313	368
process's	29	218	447	570	450
uniformity	12	183	5	118	563
SVGs	93	61	315	99	374
subsumed	50	215	292	9	957
0.009	96	266	324	695	421
Coming	13	120	375	364	631
0.007	96	266	324	695	421
0.006	54	266	324	695	421
0.005	96	266	324	695	421
0.004	54	266	324	695	421
0.003	54	266	324	695	421
0.002	96	266	324	695	421
0.001	96	266	31	695	236
0.000	54	266	23	8	421
constructs	76	94	491	174	734
reconvert	2	116	162	423	260
landed	50	264	393	75	564
psearch	24	112	276	504	991
Roger	24	109	394	444	870
Freetype	67	151	327	604	104
60008494	53	123	148	448	821
hour	99	140	453	198	27
recall	50	59	292	210	747
phrasing	18	200	490	419	973
ith	74	100	239	586	577
sucks	50	200	114	35	469
cols_to_delete	74	293	108	586	146
guards	76	152	181	257	195
remain	2	229	25	91	338
halts	40	141	128	764	954
specialized	76	26	65	118	398
.split	86	89	163	340	66
stubborn	47	0	392	91	338
np.number	27	269	418	548	48
synchronized	2	218	183	167	959
mainline	35	122	220	292	376
scipy.stats.kde	60	214	132	147	4
MovingOLS	77	168	186	705	353
collision	76	43	181	552	195
minimum	81	21	266	588	283
numbers	14	86	314	325	549
hyperplane	39	149	438	93	102
Encode	61	162	191	539	316
Cause	47	0	392	91	835
CORRECT	30	212	55	136	965
read_only	45	185	334	269	793
stil	47	37	292	210	59
stim	59	4	433	438	198
mape	31	40	444	396	622
ascii	61	5	443	563	209
acts	2	215	491	174	734
mixed-type	94	222	122	702	470
maps	22	4	233	438	672
quoting=	52	185	28	114	971
set_array	31	13	294	399	271
coords.T	90	293	26	509	228
a.flat	42	30	286	358	146
Spark	71	171	303	445	457
MultiIndexing	43	265	75	771	921
DATE_LIST	53	281	68	788	779
-KeepitReal	4	225	490	710	81
83.803	34	270	472	588	662
objdump	55	112	330	499	315
questioning	18	17	490	419	81
Continue	47	174	392	167	769
spectacularly	10	272	118	334	863
coming	50	120	301	618	120
cursor.description	90	95	115	239	227
Int64Index	63	18	460	172	787
0.11.0b1	91	7	417	13	644
generated.pyx	37	250	475	205	173
fixed-point	14	42	314	325	84
sitename	48	144	486	197	653
Imported	91	57	167	499	732
underscore	61	58	452	86	501
define_macros	86	181	42	211	624
FigureCanvasAgg	93	1	104	435	591
uname	84	112	276	57	128
through	2	116	145	573	531
first_seen	48	123	486	339	82
1.00999999046	90	95	115	239	227
messed	50	232	114	210	120
csv-file	71	153	50	423	108
numpy.random.random	75	243	385	725	484
lat-lon	39	149	279	766	573
pct	43	136	173	784	459
ax.xaxis.set_major_formatter	46	274	363	679	151
check-mark	4	15	45	472	922
misunderstandings	18	200	5	419	991
messes	2	232	491	174	621
pca	44	256	186	705	646
d=1	41	266	177	200	201
d=3	44	205	370	196	192
increments	81	288	266	198	603
7.00	68	266	324	397	421
tract-level	81	214	173	621	167
np.diagonal	42	30	286	358	146
primary	2	215	134	552	621
hyphens	61	58	452	539	501
avgDists	90	293	26	509	146
clf()	29	203	348	123	55
compound	34	94	122	771	694
utils.py	15	132	330	205	461
viewers	59	61	315	99	54
mystery	50	59	221	284	469
fantasy	95	230	487	480	682
Laptop	84	7	432	301	321
Datetime	43	63	66	426	452
micro	84	160	2	697	27
repeating	2	116	131	522	944
UTC	99	63	68	426	27
rephrasing	18	225	490	419	81
raw_input()	29	203	128	123	55
get_ylim	5	148	253	558	958
asarray	3	30	361	404	263
they'll	47	0	232	143	338
Cook	95	298	419	686	741
evaluation	77	98	458	279	738
IRR	96	86	314	391	738
Cool	24	33	229	140	870
dvipng	67	80	327	499	872
email_cnt	90	297	115	239	227
enforcing	2	229	302	91	621
mmm	99	200	493	621	221
WITHOUT	2	48	457	335	338
set()	65	233	158	648	526
JPEG	22	248	381	99	593
backed	76	215	122	9	213
UTM	39	149	279	766	573
beginning	2	263	222	167	338
Clipping	59	52	495	209	177
cjarray	90	297	13	509	228
Soil	95	181	335	751	497
needing	2	116	145	573	531
taht	47	0	392	91	835
NASA	39	73	214	322	586
2.24	54	108	23	579	322
1E6	21	190	258	557	252
configurations	84	57	233	697	321
n00b	18	120	212	739	67
eqs	77	98	38	396	738
INNER	30	212	182	574	965
_is_	88	59	5	419	908
libpython	67	132	167	499	315
bug-prone	88	272	118	334	606
FileDialog	15	135	174	289	823
X*	44	194	280	704	598
log()	14	157	103	784	603
array.shape	90	293	228	0	146
X-	39	126	206	93	949
numPy	34	57	65	2	730
Screen	38	271	259	519	38
a.clip	27	243	18	28	486
itertuples	43	157	72	750	207
X=	44	227	385	489	969
X2	85	172	481	333	170
dask.array	76	188	336	359	306
WPF	40	187	90	537	537
start_byte	3	291	162	699	470
X4	85	172	481	333	170
MPFR	7	163	63	418	166
df.a.shift	27	260	431	234	945
Python34\Scripts	55	132	386	475	305
gigabytes	21	127	355	159	359
XA	44	205	177	5	192
-long	34	77	0	88	336
XE	7	163	152	241	850
XZ	39	149	495	199	177
XX	99	6	419	155	211
XY	39	6	279	733	573
differentiate	12	229	235	251	338
np.copy	3	90	361	212	273
XP	19	7	432	301	644
d.get	27	233	10	772	838
Xn	85	172	481	333	170
cyclic	39	126	235	709	562
jumps	81	170	409	167	769
Xa	75	32	385	545	486
bucketed	79	147	453	101	675
substracting	78	21	275	522	603
dt.time	68	186	257	338	361
EACH	81	212	206	136	965
Xs	85	172	370	333	512
insightful	24	109	229	140	264
Xt	44	249	180	200	718
debugging	50	37	301	35	625
X1	85	172	481	333	170
np.linalg.matrix_rank	44	256	280	668	994
download	67	151	470	604	104
char*	3	67	261	157	498
1:00	99	253	453	641	762
delta	96	147	275	391	603
3-tuple	22	6	201	483	672
dynamic_lookup	55	128	293	52	56
ax.yaxis.set_ticks_position	45	226	494	592	906
.boundscheck	42	27	334	15	915
17:19	54	69	119	332	126
Power	38	206	282	147	71
temp.win32-2.7	37	250	386	475	194
17:15	54	69	119	158	126
Lucid	84	7	432	301	156
img_filtered	68	90	201	545	486
plt.quiver	41	39	177	592	397
square	81	270	280	88	943
openshift	40	187	429	764	954
programmers	13	120	212	145	195
chars	61	58	443	539	501
colorbrewer	59	229	457	306	439
chart	59	52	495	51	710
ncol=2	46	226	494	316	348
charm	24	33	106	140	870
services	13	119	183	609	377
11:13	90	297	115	239	995
.fillna	64	287	418	548	131
869	74	100	216	616	283
key-value	65	233	158	540	526
tikz	93	61	315	99	54
pyproj.py	55	132	330	205	372
shutil.move	65	233	489	384	854
Port	95	271	373	686	860
To_UTC	94	212	182	136	965
theano	7	51	428	412	915
scipy.spatial.cKDTree	72	165	15	152	570
imdata	47	100	457	306	9
Yann's	4	23	495	97	552
personid	48	144	486	276	653
database-like	76	94	122	574	457
converge	77	98	231	279	905
node.js	13	26	90	609	537
quote_df	53	139	51	417	821
businesses	79	228	487	60	675
double*	3	67	261	312	498
cell	78	49	131	522	944
merger	79	144	195	706	502
merges	43	265	75	706	356
-40	96	266	324	200	421
-45	54	288	324	200	762
experiment	81	183	206	203	765
sanitize	57	37	222	15	260
.ctypes	3	220	361	157	235
resp	48	256	272	467	994
merged	48	265	359	706	356
intractable	10	272	356	327	863
Magic	38	109	229	444	264
kubuntu	84	57	167	301	321
express	47	229	392	91	360
interprocess	76	218	183	359	959
patchify	76	51	65	169	612
mat0.ravel()	27	269	403	65	146
Users\hanans\AppData\Local\Continuum\Anaconda3\lib\	37	250	27	475	194
numpy.nan	6	68	12	130	910
spikes	20	170	425	507	562
pip2.7	67	112	276	57	334
aes	86	39	117	36	649
worst-case	10	202	258	327	876
asset_gainpct	44	293	4	509	228
Slicehost	13	119	63	516	377
doubled	2	263	355	546	576
wspace=0	5	284	253	757	518
logistic	77	168	186	705	646
Apologies	18	200	179	739	67
doubles	14	291	85	325	549
Perceptron	77	168	186	705	353
restaurants	79	144	195	787	944
SKU	95	181	419	168	497
set_zlim	46	284	253	558	958
datetime.datetime.fromtimestamp	86	274	10	679	151
Vge	48	123	486	197	653
opposing	79	144	195	588	944
no-op	3	220	361	15	235
Citing	4	17	254	252	114
M+1	99	268	68	198	687
curvilinear	39	149	279	93	102
latlon	46	13	294	282	397
stringify	65	157	72	589	439
expert	11	120	212	739	727
GET	30	212	90	149	965
Marnach	4	121	264	646	500
newcol1	6	123	456	748	82
python-2.6.1	55	128	52	477	56
.loc	94	95	115	369	227
pyplot.gcf()	31	203	348	577	879
data's	81	21	409	91	563
subscript	61	111	452	86	123
merged.to_csv	36	10	376	712	971
Synaptic	67	151	327	232	104
concatenate	34	116	145	706	986
KAMA	38	206	169	264	698
__init__.pxd	55	132	330	477	568
essay	18	225	45	407	219
([	75	54	385	10	585
off-diagonal	85	194	280	704	485
premise	12	59	147	424	734
isclose()	60	51	14	313	439
Yeh	50	200	114	504	469
TypeError	63	44	199	172	341
Afaik	76	26	65	697	730
Yea	24	200	493	504	991
Python-specific	13	26	63	118	398
foreign	71	171	303	60	457
LinAlgError	63	44	280	431	485
fittedvalues	77	124	132	783	162
Yep	24	200	493	504	991
Yes	24	200	493	504	991
Yet	47	0	392	678	544
Inkscape	93	61	315	99	374
re-run	40	37	429	664	954
!!!!!!!	24	109	229	444	870
elaborating	4	225	490	472	81
0.35	96	266	324	695	421
point	39	43	235	93	116
globals	15	135	181	777	195
expensive	10	272	118	334	863
backend	93	80	315	435	591
fused	3	51	261	312	915
GTKAgg	93	80	315	435	591
n_particles	44	205	251	196	357
Processing	38	224	282	94	302
ohlc	43	85	449	48	817
matplotlib.mlab.psd	60	29	403	742	396
30ms	21	160	37	323	655
d.to_datetime	64	287	256	72	997
np.in1d	42	27	286	358	146
Hadamard	34	194	280	431	485
in-place	42	188	361	212	273
arcpy	13	26	65	2	730
Appreciated	24	109	229	140	870
axis()	5	13	253	558	844
np.radians	96	29	18	173	13
It'll	47	0	232	143	544
.The	78	6	239	487	702
ajcr's	4	17	254	710	441
pylot	59	52	495	51	177
numpy.NaN	6	68	12	130	910
25.000	21	190	234	557	42
keyError	63	44	199	582	888
server's	40	246	429	609	600
DataFrame.cov	3	202	37	169	876
deferred	29	218	118	167	769
a.transpose	44	227	228	0	263
)']`	53	139	42	417	775
n=3	78	100	370	391	192
split()	65	58	452	589	240
century	99	140	318	109	221
faceted	13	23	138	97	710
jorgeca	4	121	264	646	5
symmetrize	44	194	280	431	485
period_range	64	287	449	48	48
.mean()	64	150	256	197	48
Java's	76	51	65	359	235
righthand	2	21	445	122	979
None}	45	129	334	36	906
randomization	76	183	41	725	959
corridor	79	228	206	27	675
last()	43	157	103	683	481
QUEENS	54	50	368	429	428
ndimage.convolve	42	100	382	313	396
development	35	122	156	292	376
strips	61	263	491	174	260
io.BytesIO()	36	10	489	712	942
Nathan	50	264	292	252	59
traditionally	59	23	433	51	54
voxels1	90	293	13	545	744
stripe	59	117	433	32	198
ifft	20	93	425	336	344
AFAIK	76	94	138	9	621
numpy.fill	42	27	88	404	581
subplot's	5	148	32	19	518
plot's	5	148	32	19	518
iffy	88	183	61	424	695
.sub()	42	111	137	313	709
a.strides	90	227	228	0	357
col_sig_squared	74	100	216	586	890
Sample_ID	48	204	272	339	199
visualizations	13	23	90	118	537
PowerShell	40	141	281	76	632
corrwith	43	85	72	700	956
darn	88	59	114	334	469
128GB	84	127	2	410	321
izip	65	233	81	648	311
outfile.write	86	129	136	137	347
1961	54	186	300	372	361
DatatimeIndex	43	63	456	771	452
shape	44	205	251	196	357
1962	99	186	318	372	361
SGDRegressor	77	168	186	705	646
np.array	75	227	385	0	486
alternative	88	48	61	675	31
Legends	59	52	32	209	710
2-digit	99	140	453	109	221
cut	57	263	25	122	781
v1.0.1	67	151	327	664	732
cur	30	260	431	18	965
pyplot.bar	31	14	383	568	710
add-ons	84	163	63	516	850
cuz	47	174	392	504	835
myarray	74	297	4	509	228
kinect	39	126	235	581	949
source	35	193	19	387	594
rgb	22	4	201	438	672
aggregate()	43	157	103	15	956
Christopher	24	109	229	444	870
hlines	31	13	388	399	879
column-oriented	71	153	122	367	457
cum	78	144	173	276	559
im_array	90	231	13	617	744
maxm	74	100	108	586	283
lag_plot	31	14	383	568	710
start_ix	90	297	51	239	821
df.date_time	53	281	74	682	199
Truth	95	214	297	171	698
reliable	88	183	332	334	604
coulmn	78	144	195	276	559
f=0	20	170	231	733	116
reusability	88	183	5	458	53
knock	11	232	232	706	986
World	95	271	373	185	517
.Thanks	24	200	493	567	870
-av	94	222	446	293	729
borrows	4	193	342	478	552
foolish	50	200	114	739	469
DataFrame.values	94	94	122	404	890
TimedeltaProperties	99	63	460	172	787
Happens	24	109	229	567	870
valleys	20	170	231	709	949
lastest	35	122	156	664	594
absolutely	24	59	493	504	908
timerange	81	147	266	198	603
delegation	76	94	5	257	195
segfaults	7	37	301	215	224
COUNTIF	95	298	419	467	497
LassoCV	31	40	444	263	709
candle	59	147	450	20	955
sizeof	3	67	261	157	498
.set_xlabel	46	39	117	46	649
culprit	50	37	60	225	169
TLDR	12	152	490	552	114
proficient	11	120	212	739	727
5:10	53	95	480	239	227
Modular	38	224	282	722	689
centroid	39	43	279	152	102
cloud	39	126	235	93	102
fixations	81	126	266	391	949
np.var	27	219	403	550	454
Box	38	271	191	209	837
intial	2	215	292	210	747
fit_fn	41	39	73	282	649
Bot	47	229	392	630	338
stats.linregress	74	233	54	690	597
.xls	71	153	86	638	561
Bob	95	121	264	102	741
my_array.reshape	75	227	228	0	357
position-based	94	111	115	369	227
config.h	55	128	293	52	56
Cocoa	93	61	315	368	591
CreatedDate	30	212	182	136	965
monkeypatch	65	27	14	306	439
1.1.1rc1	91	122	156	587	230
1.1.1rc2	91	122	156	587	230
tiff	22	248	381	571	593
Increase	69	31	237	209	911
Experiment	31	13	294	592	879
Accuracy	38	224	282	722	689
Vi	96	201	426	560	13
interacted	79	78	487	480	285
Comic	93	230	448	767	909
normality	77	183	186	534	783
1.50	85	298	419	467	421
numpy.repeat	42	27	286	358	244
1.57	96	266	324	695	421
9000000	68	29	18	173	62
1.58	54	108	23	579	399
translate	47	229	392	306	360
YXD	4	225	45	567	81
rfftfreq	60	296	460	9	787
invite	18	225	232	144	53
scipy.sparse	60	292	64	348	218
1.5M	21	190	234	557	42
Filter	69	31	100	530	911
underlined	59	52	32	32	54
pickers	59	154	188	427	2
non-indexed	43	265	72	771	356
planet	39	149	279	93	949
1.5s	21	160	274	167	655
planes	39	149	438	93	102
y_axis	5	148	363	46	844
1.5x	10	202	37	323	876
stype	30	176	117	21	773
circuitous	88	257	61	675	695
Bessel's	60	219	132	783	454
curr	48	144	195	178	637
stripped	57	263	342	450	781
consulted	31	193	19	697	371
cure	50	232	143	799	469
diving	50	120	393	35	564
obtuse	88	59	114	419	907
type_num	3	67	261	157	235
curl	67	112	276	744	128
sourceforge	67	151	470	604	104
Sliding	69	179	169	209	71
encoders	71	94	181	514	720
backend_bases	15	135	475	205	873
azimuths	81	160	266	733	949
composing	2	116	233	706	986
may_b	44	227	385	509	486
rand_image	74	297	4	509	228
Student	38	214	132	783	162
confine	81	229	457	306	360
anser	24	109	394	567	500
lower-triangular	60	194	280	431	485
Advance	11	109	394	763	867
fraxel	4	121	254	710	552
iterators	76	94	81	169	207
g.draw()	46	203	348	123	55
utterly	50	120	212	739	727
Image2_mask	68	259	211	41	945
sudoku	34	21	48	195	416
dtype=int16	75	227	385	0	357
implies	12	152	147	252	908
overlooking	11	120	179	739	907
pd.MultiIndex.from_arrays	64	47	406	551	48
.rename	64	47	418	551	131
cooked	57	235	342	450	950
implied	12	152	134	252	908
presenting	12	120	212	419	950
Determine	69	31	237	264	698
visualising	59	23	126	203	455
xedges	41	35	297	171	397
df_index	64	287	256	548	48
os.path.join()	65	58	81	589	448
unittesting	50	264	292	210	469
time-zone	99	63	68	426	27
pylab.show	29	203	128	123	55
wrangle	50	116	233	706	986
Thanking	11	173	143	567	867
odeintw	60	296	102	279	751
Assuming	47	0	392	678	927
amplified	20	170	409	709	562
wavfile	71	153	336	423	593
compose	2	229	145	306	986
Means	79	21	233	360	713
im.convert	36	90	246	712	619
Argh	24	200	493	504	991
Fetching	79	78	303	203	92
xlimits	31	13	388	51	879
numpy.array2string	88	257	138	306	439
numpy.linalg.pinv	60	296	102	431	751
Iris-setosa	54	108	23	579	931
Aren't	47	0	392	251	835
presently	50	57	138	9	59
\mpl_toolkits\mplot3d\	37	250	475	205	173
implicitly	2	215	147	91	621
2rd	78	204	338	616	456
astype()	42	27	14	15	470
vis.py	15	132	352	384	305
entire	2	116	145	573	338
y_vals	41	6	168	107	577
backtesting	13	78	126	762	746
-pro	24	200	493	504	991
FIDO	22	243	370	45	743
csv.reader	36	10	489	712	261
pyCMS	57	248	19	97	114
havent	50	264	292	75	747
Term	38	138	282	519	38
Fast	38	252	169	722	233
rivers	39	73	279	322	586
lsuffix=	49	139	42	631	82
bitstring	3	27	336	312	235
self.canvas.print_figure	37	35	117	176	314
Criteria	69	162	191	789	739
carlo	20	42	48	195	416
append	2	116	145	706	207
DataFrame.hist()	31	14	233	621	710
([[	90	54	257	10	585
a.index	64	139	406	551	945
access	2	229	457	335	338
subcube	34	293	216	586	283
sub-sub-lists	78	144	239	522	336
LibreOffice	71	153	86	769	374
.GDP	53	139	434	240	775
subregional	79	214	173	101	167
non-linear	77	98	38	279	809
data-sets	81	168	258	705	646
aggfunc=len	64	287	406	250	294
packing	20	116	85	91	986
safer	88	257	61	675	327
Prompt	40	141	281	76	632
np.dstack	42	30	286	74	595
self.x	96	35	289	157	406
WinXP	19	7	432	301	644
truthiness	3	94	95	18	866
scikits.image	22	248	381	141	722
new-style	3	94	329	514	720
Download	67	151	470	604	104
climb	50	232	114	284	64
honor	3	220	147	9	621
composed	2	21	233	98	702
vips	76	61	381	552	959
x-coord	41	6	239	200	979
twin()	5	13	363	558	518
Batchelder	4	193	490	567	114
Answer	4	121	254	567	81
event.inaxes	31	1	388	149	282
.iteritems()	65	231	54	690	526
GIMP	22	61	381	99	374
I1	85	194	239	5	192
Records	69	162	191	789	38
Sept	99	182	318	372	519
import_array	15	67	261	215	957
providers	79	78	487	480	285
Driver	30	271	259	519	38
chm	13	26	90	697	537
readably	88	257	61	675	612
chr	86	129	117	211	262
v.T	27	29	18	704	598
monteCarloPerf	47	21	392	91	338
up-vote	18	15	45	472	922
convolutional	77	168	48	705	646
Floating-point	14	86	85	325	549
loadtxt	52	185	336	121	793
ord()	65	157	14	589	448
respondents	79	228	487	480	285
use()	15	37	444	236	709
Pyro	7	193	372	387	594
DtypeWarning	37	250	27	187	947
rows_idx	90	297	4	586	577
.rst	40	239	429	384	108
fooling	50	264	393	75	564
Uninstalling	67	151	167	664	230
decouples	5	148	363	179	844
x.sum	27	269	403	65	598
1000.00	68	266	324	8	421
closing	29	187	128	764	364
.date	64	63	68	72	390
didnt	50	264	292	210	469
fetch	71	246	303	60	92
decoupled	59	52	32	19	884
YI	44	296	154	5	397
continuity	12	170	231	44	84
sqlite	71	171	473	128	88
high=	68	266	324	695	427
invoices	79	144	195	442	675
high0	86	129	465	36	906
pandas.concat	49	47	406	631	445
reran	50	57	292	699	321
YY	85	6	419	766	221
columns={0	53	139	42	417	775
YZ	39	52	495	199	177
df.info`	57	235	74	450	975
non_zero	27	297	4	509	228
YR	99	204	338	155	687
Geocoding	38	26	90	387	537
Yi	34	77	370	522	192
varied	12	183	233	251	604
noises	71	246	7	709	959
Ya	24	200	493	504	991
holds	2	215	491	487	702
Ye	88	59	493	504	469
varies	81	21	266	487	576
Ys	85	172	370	333	512
Behzad	24	200	493	504	991
profile	57	277	232	225	169
newtonRap	64	47	406	631	445
U_last	44	201	18	617	62
Sound_Fc	74	195	4	167	577
isoline	39	149	279	93	573
matplotlib.image.AxesImage	31	13	388	399	879
hight	81	21	284	245	479
Aah	24	200	493	504	991
chasing	50	120	232	35	53
GtkAgg	45	80	315	435	591
non-finite	6	68	12	130	910
pd.HDFStore	36	153	446	702	369
congruent	78	100	148	355	148
Quantopian	13	224	126	203	765
941	47	174	392	424	835
49000	78	21	131	522	192
Y=	41	39	289	282	397
float_format=	52	129	465	137	347
subsequently	2	215	328	335	180
Y2	41	172	481	333	170
64-bits	14	291	142	325	549
h5f	53	95	51	239	779
np.random.permutation	42	47	286	358	146
afterwords	2	116	457	306	439
non-integer	14	86	270	546	603
20:00	99	69	119	155	256
Beside	29	187	128	335	2
sigmoid()	60	40	444	396	622
weirdly	50	264	292	210	59
grp2	64	150	256	197	775
galaxy	39	126	206	93	949
TPCLOSE	53	123	51	448	821
eul	60	40	458	396	622
y.size	44	205	228	0	357
integrators	60	98	458	279	438
accredited	61	49	373	185	517
cumtime	60	277	19	742	314
BGRA	22	248	381	571	593
Na	6	68	12	355	910
ANSWER	30	212	55	136	525
tst	74	174	272	185	682
bolder	59	52	433	32	714
IEEE-754	14	291	142	608	549
bolded	12	235	342	170	219
10.5.8	19	7	306	301	232
pdflatex	93	61	315	99	374
Robin	24	109	394	567	500
Paint	84	61	381	571	593
libjpeg	67	151	327	274	872
preclude	47	0	392	143	439
psutil	35	57	19	697	371
backend's	29	187	128	764	2
fcompiler=gnu95	55	112	276	57	128
ts2	99	281	68	788	211
ts3	53	281	51	155	211
ts1	99	281	68	788	211
0.25978994	68	54	257	713	449
3,000	21	190	234	557	692
ndenumerate	42	27	286	358	28
]`'	90	297	115	239	227
ipython_kernel_config.py	55	132	352	113	798
np.fft.rfft	27	269	403	65	48
sub-histograms	5	52	32	19	884
Print	69	31	237	530	911
col1	48	123	486	656	82
popping	29	187	301	764	954
conceptually	88	59	147	630	908
Permission	55	176	397	696	136
8-d	81	214	275	783	603
8-b	22	291	85	608	103
char	61	67	162	266	498
p-value	77	214	132	783	162
plt.table	31	13	383	592	518
scipy.ndimage.interpolation.zoom	22	90	246	141	722
flushing	50	188	447	573	364
dawned	50	264	114	567	469
EdChum's	4	17	254	710	441
aureus	53	139	42	417	131
approached	50	42	38	799	360
Irregular	69	31	270	546	301
workflow	13	26	126	203	765
qux	53	123	486	250	82
NJ	90	54	257	332	361
clarify	57	235	490	170	81
approaches	12	183	134	534	783
_from_ordinalf	68	35	289	176	314
que	53	174	408	432	807
British	79	228	487	480	285
Exceptions	69	162	169	281	402
font-family	45	230	448	767	909
supose	88	59	232	144	469
plt.ylabel	46	226	494	46	348
Outlook	79	228	487	686	285
backwards	35	122	392	9	376
density=True	46	256	297	171	810
1430	95	50	368	429	428
recipes	35	193	372	387	704
1.3.0	91	7	417	587	230
right-most	81	288	25	122	884
errorbars	59	52	433	32	710
72000	21	127	46	196	359
BaseEstimator	77	168	186	705	646
heatplot	59	52	495	199	177
glean	47	59	392	170	835
MPI4Py	71	246	0	60	694
300MB	21	127	355	159	359
error_bad_lines	45	185	334	269	793
dataset's	31	215	342	450	950
Fecha	53	281	272	339	779
Marking	4	225	45	170	81
reaches	29	170	491	167	769
sloped	77	214	132	147	4
lagging	50	57	301	697	120
reached	50	170	301	167	769
hashes	65	233	158	540	526
braces	61	58	452	230	298
showfliers=False	45	13	383	592	879
libgfortran	67	151	327	499	732
NY	95	268	373	686	361
Symbol	48	123	159	339	502
Inheritance	69	162	191	61	739
Groupby	69	138	191	789	739
intermediate	76	188	118	573	863
Stocks	38	271	450	519	38
listcomp	42	27	14	334	244
scans	71	246	58	167	92
sm.OLS	27	256	10	218	597
cv2.filter2D	44	90	246	509	357
explanation	4	109	490	567	81
acquire	29	218	183	167	769
matplotlib.colors.LinearSegmentedColormap	31	13	294	653	271
uniquify	34	77	0	522	694
read_fwf	52	185	28	121	793
2011-02-09	54	69	119	158	126
.weekday	53	139	51	72	390
scipy.sparse.coo_matrix	34	292	64	348	218
df.col1	27	260	431	234	945
wishlist	35	122	220	292	106
df.col2	27	260	431	234	945
Reds	22	36	294	653	488
recieve	63	37	199	582	888
Markdown	71	57	50	423	108
rbox	95	181	419	730	497
pl.figure()	46	203	348	123	55
GeoDataFrame	39	73	279	621	586
Lastly	47	0	392	678	544
abstracts	13	232	5	257	417
Abid	24	109	394	140	870
Quicksort	10	202	349	708	640
hava	47	21	392	588	338
fast_path	2	40	444	699	709
have	47	21	392	91	338
disturbing	12	117	235	618	120
c-cR	85	194	426	5	201
x=10	41	288	29	69	116
Interpolation	72	165	100	530	71
agglomerative	77	168	186	705	646
dateutil.parser	52	63	68	426	745
child's	71	218	183	27	854
Y**2	68	266	257	282	486
63-1	14	291	46	325	482
current_date	27	281	456	198	945
concerns	12	152	134	552	120
prefer	88	0	392	630	338
x-limit	5	288	32	19	479
Ticker	48	138	159	762	746
GradientBoostingClassifier	77	168	186	705	646
Glad	24	33	229	667	922
epstopdf	93	61	315	99	374
mimick	57	235	342	450	451
pyplot.pyc	37	250	27	475	194
Dodgers	95	181	373	455	496
.to_dict	64	139	74	551	975
new_column	53	281	51	72	779
payment	79	228	487	480	285
distance_transform_edt	60	296	472	152	570
2008-12-31	53	181	42	250	775
disease	79	228	487	480	675
agg.path.chunksize	45	80	334	269	906
1,000	21	190	234	557	42
Namely	47	21	392	678	544
Sankey	59	52	41	400	177
occasion	50	264	292	210	747
fig.suptitle	46	226	494	577	348
Goal	30	21	173	347	560
draw_if_interactive	46	35	348	236	314
visualizes	13	206	48	195	416
setted	45	215	457	335	54
rotating	39	149	25	298	177
continually	29	246	128	167	769
thicker	59	52	433	32	714
setter	31	94	329	663	720
4.0.1	19	7	33	590	972
4.0.0	91	7	417	13	972
TkAgg	93	80	315	435	591
knowledge	13	120	212	419	727
4.0.6	91	7	417	13	644
with	47	21	392	91	338
Matt's	4	121	254	710	552
autoscale()	31	13	388	592	879
fill_reject	78	204	148	178	361
pylab.figure	31	14	383	51	710
Percentile	95	138	173	789	459
amplify	20	93	425	191	84
pitfall	12	152	147	552	606
regularly	72	165	270	733	301
__getitem__()	3	220	329	663	235
Rodrigues	60	98	248	742	738
700,000	21	190	234	557	42
quad-core	84	127	2	410	580
reputations	18	15	45	472	922
.nth	64	150	256	197	48
block=False	29	203	128	123	55
.round()	75	227	385	548	486
scipy.optimize.fmin_bfgs	60	124	458	742	438
axes.formatter.limits	45	80	334	269	906
fixes	35	122	60	799	376
teams	79	228	487	480	285
576	54	223	298	318	252
gnuplot's	72	23	495	199	54
Redefining	43	265	456	405	739
fixed	35	122	60	799	376
delimitated	61	58	50	539	501
2066	54	50	368	158	277
-ed	3	37	292	210	888
transpositions	34	194	396	566	520
timezones	94	63	68	426	452
angled	59	117	433	32	116
np.take()	42	27	88	358	244
intensity	22	4	266	438	672
SepalWidth	48	144	195	276	118
single-element	65	111	26	540	890
3.962492	90	54	257	332	139
DayLocator	5	148	363	558	844
Formatter	5	148	363	558	844
reform	18	225	490	170	81
fwhm	20	214	266	391	116
identification	12	43	131	170	563
3dim	34	77	0	73	694
train_test_split	77	168	186	705	443
event_num	29	37	128	236	2
invariant	34	126	251	196	192
boundary	39	117	235	709	670
Chinmay	24	109	229	444	870
:(	50	59	114	699	469
page_verified	90	54	257	332	995
column-based	71	265	122	702	457
pandas.hashtable.Int64HashTable.get_item	37	250	27	314	802
reproduced	57	235	342	799	766
Borrowing	4	17	342	478	552
pyplot.fill	81	21	270	733	301
np.ma.masked	6	297	12	509	228
reproduces	57	235	463	37	766
Macintosh	84	119	429	301	321
commenting	4	200	222	567	81
tkinter	93	187	104	368	728
joke	18	225	490	419	53
dfrm	53	95	272	339	779
pickle.dump()	3	37	222	699	908
kosher	88	257	61	675	327
scipy.sparse.linalg.svds	60	27	14	313	244
df.insert	53	139	406	631	779
plotinfo	63	44	260	185	858
i+=1	88	272	118	573	207
combine_first()	43	85	72	700	956
15-min	99	147	450	198	817
.transpose	44	227	228	0	263
it's	88	59	392	91	908
datetime64's	69	63	68	426	452
easiest	88	48	61	675	327
Pieters	24	121	264	646	500
it'a	88	59	5	419	53
anomaly	39	149	235	93	116
it'd	88	59	232	143	908
ewmstd	43	85	449	784	817
aranges	14	86	314	325	84
6482	44	205	154	0	357
plt.pause()	29	203	128	123	55
isnull()	6	85	12	700	956
Recreate	38	206	495	209	71
General	69	162	191	61	114
__sub__	3	220	329	663	235
frustrating	50	120	114	284	695
trailer	61	153	50	539	501
interpolate.interp1d	72	165	15	235	570
Centering	59	52	32	209	884
readin	2	49	50	405	108
weighed	20	93	275	191	615
python27.dll	40	132	44	696	305
arrangements	34	205	131	196	357
well-behaved	12	42	38	279	84
partner	78	144	131	522	944
MBs	21	190	355	159	959
sequentially	2	116	145	167	986
whirl	24	109	229	444	870
productivity	13	120	212	419	53
fabs	86	29	18	173	838
np.fill_diagonal	42	27	14	313	368
)	47	21	392	91	338
df.x.unique()	75	243	385	690	486
__version__	15	135	460	103	787
MBP	84	127	2	410	580
cm.get_cmap	22	90	246	141	672
Panel	43	265	75	771	921
Runge-Kutta	77	98	38	279	809
Avoiding	76	272	118	169	200
extention	71	153	50	423	108
update-alternatives	67	112	327	418	334
discontiguous	34	188	361	404	694
commenters	4	121	264	646	500
Chebyshev	77	98	458	279	738
recourse	10	160	118	573	863
neural	77	168	48	705	646
nevertheless	88	59	392	630	948
Spring	95	186	287	338	300
builder	13	152	138	257	53
difflib	65	157	472	313	662
data-set	57	190	214	203	950
exceedingly	88	59	138	334	604
residuals	77	124	458	324	738
bboxes	59	52	32	32	884
comparisons	76	94	95	18	734
recasting	2	116	162	210	470
__pow__	60	220	329	663	235
stores	2	215	122	174	702
storer	94	222	446	702	369
somestring	86	89	465	137	66
numbering	2	263	25	122	884
array.array	3	220	361	312	235
interim	2	116	145	573	531
Fourth	47	0	392	501	338
localize	94	63	68	426	472
Repeating	69	31	100	530	911
wether	12	59	134	355	563
arraylike	3	94	14	15	734
operands	63	44	199	689	341
onward	99	140	338	109	94
Terragen	38	224	282	519	38
recommending	18	225	5	419	53
288	54	223	298	318	158
QTableView	69	116	303	60	92
281	54	3	101	579	399
280	54	3	298	318	158
283	54	3	101	187	186
285	54	223	298	318	811
284	54	108	101	297	399
287	54	223	257	797	139
286	54	3	101	187	158
resolved	35	264	60	799	81
28L	68	32	154	545	486
Thread	29	187	128	236	803
np.__file__	15	37	184	699	630
datetime.strftime	43	157	68	426	745
elapsed	99	140	453	198	27
Collect	2	116	233	251	92
io.imread	36	90	246	712	942
resolves	35	122	60	799	364
Release	38	224	259	110	689
df_final	53	260	51	234	821
mintab	74	6	108	586	336
displaced	59	52	25	546	479
0.1354	68	54	257	713	449
like	47	0	392	424	338
success	50	264	393	75	564
lt.figure()	46	203	255	577	430
28s	10	160	37	323	655
OSx	19	7	417	13	644
classical	12	48	126	630	765
writerow	61	49	444	539	336
OSs	84	119	2	697	321
ColumnName1	53	123	51	551	779
hail	39	43	235	400	234
hair	50	232	114	407	64
recommendation	4	17	134	630	219
Reed-Solomon	38	224	282	94	689
diagonalizing	34	77	280	431	485
happens	47	37	301	699	120
mitigate	12	48	389	799	360
Option	30	271	191	281	560
pie()	31	13	388	134	879
results=	75	174	117	211	262
hurricane	79	73	279	621	586
MinGW	67	163	152	326	104
OSM	39	248	90	571	537
happend	50	37	143	149	652
screwed	50	232	114	210	120
Overflow	18	225	45	527	509
Applying	69	179	100	530	911
pollute	15	135	181	777	195
bar-chart	59	14	383	621	710
fucntion	65	40	444	15	709
propably	47	0	392	91	338
recieving	50	37	301	699	888
reindex()	43	47	72	683	73
dct	22	180	246	141	722
automagic	76	272	138	458	606
:-(	50	120	114	739	469
datareader	43	171	450	762	746
:-/	50	200	114	504	469
introduces	12	263	491	618	621
Japan	95	181	373	686	497
introduced	35	122	156	9	376
beeswarm	59	52	383	51	710
afterall	88	94	147	257	908
x.T	44	30	137	704	598
transparencies	93	61	315	99	54
Tweet	48	271	159	60	682
preexisting	2	215	328	405	710
hexes	81	117	266	32	714
x.A	27	32	10	772	838
k-nearest	72	43	15	152	570
female	95	228	218	647	653
kinda	88	59	114	424	469
Wich	81	21	233	251	950
np.hypot	42	29	137	313	883
bitwise-or	42	111	95	18	734
spectogram	59	52	495	199	177
1632	63	3	298	187	158
elastic	39	126	235	195	102
rushed	18	200	493	504	469
0.11.0	91	7	156	587	626
0.11.1	35	122	156	292	376
FAST	38	224	282	519	689
x.a	27	260	10	772	838
x.b	27	29	10	772	838
byhostandop	53	139	256	250	775
crucially	2	21	131	522	338
November	99	182	318	109	94
Optimize	38	179	169	722	145
hotspots	76	272	409	225	169
28*28	20	126	258	45	562
py.test	47	183	126	534	783
orig_handle	86	129	117	211	314
beetween	78	49	233	251	260
versatile	88	257	61	118	264
webservice	71	239	90	609	537
scrollable	59	52	495	51	54
.diagonal()	44	227	385	704	598
1184	54	3	101	187	931
flip	2	229	25	122	520
16bits	22	248	381	571	593
eigs	60	296	102	431	751
PyScripter	40	141	281	76	632
replying	24	109	394	140	870
exceeded	63	44	199	582	769
levenshtein	81	270	472	588	662
well-defined	12	152	147	546	563
periods	99	147	450	101	817
identities	60	270	472	279	662
anchors	59	226	25	122	979
\matplotlib\backends\	37	250	27	314	889
-argument	31	13	457	592	879
`")	61	129	465	575	496
detail	57	225	143	144	371
duplications	78	144	131	522	944
tests.py	40	112	276	57	315
appends	2	116	145	573	854
wordlist	78	144	195	27	1
conveys	13	120	212	144	727
Pitch	95	298	335	168	221
c_void_p	3	220	329	157	235
df2.reset_index()	64	150	406	631	445
NavigationToolbar2Wx	93	154	104	537	728
0.24	96	266	23	695	421
ramble	18	225	490	419	219
2012-07-01T23	54	69	119	158	126
columsn	78	49	131	522	944
non-native	76	94	162	735	470
clean-up	2	116	457	405	180
view_init	5	13	388	134	879
imputing	81	168	275	203	603
fathom	50	264	393	75	564
easting	39	149	279	766	573
Notepad++	40	58	281	769	501
if-else	42	27	95	18	207
34%	22	4	201	438	672
explainations	4	235	394	567	371
Warnings	15	37	199	215	625
.8	96	266	23	695	797
end-of-month	99	63	68	426	452
pprint	15	135	319	308	873
extent=extent	46	36	73	316	488
Refactoring	30	235	342	450	114
347	54	3	101	187	158
341	54	3	101	187	158
whatsoever	12	59	134	552	908
caused	50	152	60	618	120
Nasty	50	109	229	444	264
348	54	3	101	187	158
Fix	30	263	237	281	560
matplotrc	45	80	222	269	54
Shoot	18	200	490	504	991
@	24	121	264	646	500
zoomable	93	61	315	99	54
np.flipud	44	30	286	74	263
SVMs	77	168	186	705	646
50ms	10	160	37	323	655
vastly	10	272	37	334	990
gen()	34	188	0	404	336
Sublime	40	141	281	76	632
line.startswith	86	129	117	211	66
subexpressions	76	116	145	706	36
school	79	120	487	480	852
__nonzero__	3	220	329	663	235
EmployeeID	48	138	66	276	502
Beginning	69	147	450	101	560
loess	60	296	375	364	631
Scikit-Learn	38	168	186	705	353
oddities	12	152	301	618	120
parse_date	52	185	28	121	971
KD-tree	76	26	65	152	398
glued	2	215	25	706	986
unpythonic	88	257	61	334	695
martingale	38	206	282	722	71
return_inverse	42	27	349	358	833
gmpy2	7	51	142	2	915
pylab.py	55	132	330	205	372
put()	42	193	19	313	694
Fortunately	47	0	392	678	544
Mathplotlib	38	162	495	209	837
direct	88	257	61	675	612
nail	50	232	114	35	781
actualrgn	27	260	431	234	945
log-linear	59	52	495	199	177
colordown=	46	39	73	316	649
kivy	40	119	429	609	537
x_vals	41	6	168	107	577
hashtable.pyx	37	250	27	314	802
blue	59	4	427	32	198
b=1	96	35	177	560	201
hide	59	263	457	51	884
Z*	44	205	251	196	357
selected	2	215	328	98	187
revolves	50	120	393	75	564
c_double	75	227	385	157	498
supplied	2	215	328	252	187
Mmm	50	200	493	504	991
Z=	41	205	289	200	397
Y's	81	77	131	621	944
blur	20	117	7	709	562
supplies	2	215	491	174	621
matplotlib.pyplot.bar	31	14	383	568	710
revolved	39	170	235	93	949
Z1	82	6	481	333	170
Z2	82	205	481	333	170
op_axes	74	111	4	509	228
discontinuity	39	149	29	69	116
RandomForest	77	168	186	705	646
fs.scores_	45	129	117	36	906
Doug's	4	17	254	710	441
out.txt	36	10	136	384	261
hardcode	47	229	457	306	338
tolist()	65	27	158	648	526
\numpy\core\	37	250	27	475	889
chunked	71	153	446	702	457
tkinter.ttk	15	112	117	289	823
Zd	90	293	4	509	228
recursive	76	42	458	279	207
leaves	2	263	491	174	621
numpy.fft.fft2	20	93	425	336	627
month-year	79	265	337	771	356
depreciated	35	122	156	415	376
settled	50	264	393	35	564
midway	81	43	235	122	116
Zs	74	293	108	586	336
apnt_ymd	48	123	486	197	82
Group	69	138	159	789	653
Giving	57	235	237	347	621
lightseagreen	53	287	42	250	997
patience	24	33	394	140	870
pandas.__version__	91	122	184	103	630
Python+numpy	7	51	142	697	31
printf	36	37	222	215	858
y.T	44	194	426	704	598
CellTool	67	151	470	604	104
tn	68	201	426	67	62
_isurl	76	220	329	663	31
Dividing	69	31	499	530	911
would	47	0	392	143	338
create_engine	52	185	473	343	88
wxAgg	93	187	104	368	591
shebang	40	141	281	113	632
tl	74	174	4	306	439
PostGIS	71	248	214	571	537
distributing	13	26	48	203	765
Whichever	12	183	5	458	563
Ctypes	7	51	65	2	730
spike	81	170	378	167	176
t.ix	90	54	13	332	744
replys	18	225	232	170	219
th	74	195	216	255	577
xidx	74	297	4	509	228
Entries	69	162	191	61	837
excellent	4	109	372	387	264
textfile	61	153	50	423	108
supplemental	79	49	233	787	713
abundance	39	126	206	93	949
numpy.ctypeslib	3	220	261	312	235
IPythons	47	218	392	699	31
y-axes	5	52	32	19	884
0.35355339	68	54	257	713	449
ndimensional	34	77	0	73	694
one-item	65	233	158	540	526
geometry	39	149	235	93	102
tom10	4	121	264	646	683
deficiencies	12	225	490	170	219
AxisArtist	31	23	388	97	371
norm	60	270	472	431	662
max_index	44	205	46	196	357
route	88	232	232	630	439
Xming	40	119	429	697	377
preserving	2	116	145	566	531
hexagons	59	117	284	32	479
captcha	93	57	495	571	992
jumble	2	49	131	251	944
attract	18	225	45	527	509
unordered	65	233	158	540	890
multiband	22	248	381	571	722
ONE	30	212	55	136	965
workbook	71	153	86	638	561
im1arr	14	291	85	325	549
actuality	21	190	258	546	604
0.5.0	91	122	156	587	626
0.5.1	91	122	156	587	230
dialect	71	171	473	128	561
gdalinfo	71	153	50	423	108
description	57	235	490	170	371
insecure	35	57	44	9	315
imaginable	88	48	61	630	31
lump	2	116	233	706	986
linalg.svd	60	194	280	431	485
befor	47	264	292	699	59
Working	69	31	100	61	316
tidying	18	232	232	35	219
parallel	76	218	345	445	803
suspected	24	121	264	210	747
luma	22	4	7	438	672
duplicated()	43	157	72	683	956
vocab	74	233	54	145	1
Fortran90+	7	51	65	2	730
amin	42	269	103	53	244
ginormous	34	188	258	44	863
iter_csv	36	10	489	712	261
datatype	3	18	162	266	470
summing	34	116	275	566	603
upside	22	36	25	122	979
shoehorn	76	232	232	35	439
-lcblas	55	128	293	52	56
plumbing	76	1	138	257	417
Rough	57	235	342	450	950
Beyond	47	0	392	678	544
re-calculate	81	170	275	327	955
OperationalError	63	176	397	582	136
file-like	36	153	336	312	942
fetchall	65	27	158	648	526
Nonetheless	88	59	5	678	544
millis	94	63	68	426	452
persons	79	228	487	480	285
peeking	2	263	25	122	417
isize	68	54	257	617	744
elementwise	34	94	137	18	734
forehead	84	232	167	407	321
40%	10	160	37	323	176
unzipped	67	132	470	604	305
img	22	90	246	141	722
pkid	48	144	486	276	502
Adjacency	38	79	41	431	234
20,000,000	21	190	234	557	42
numpy.empty()	42	27	88	404	244
imo	88	257	61	675	695
16.7	54	108	23	579	399
imp	65	233	74	690	526
405	54	3	101	187	428
404	63	176	397	582	136
CH4	54	181	257	338	139
402	54	3	101	332	158
401	74	3	298	318	995
400	21	223	234	557	252
16.9	54	108	23	579	399
16.8	68	108	257	579	399
diseases	79	228	487	621	675
CHF	95	268	419	686	38
prevented	50	152	60	618	120
40K	21	190	258	557	42
CHM	71	239	90	769	537
SAMPLE	30	212	55	136	965
Remarks	47	21	392	91	560
nx.draw	31	203	348	236	444
appart	50	235	342	450	950
mincnt=1	46	13	289	592	397
numpy.int	3	291	141	266	969
40k	21	190	234	557	42
im1	22	90	246	141	942
im0	22	90	246	141	942
0.44	54	108	23	8	421
im2	22	90	246	141	722
40s	10	160	37	323	655
numpy.inf	6	68	12	130	910
40x	10	202	37	323	876
consolidate	71	49	303	706	986
Adding	69	31	237	530	911
Percent	79	138	34	264	459
co-occurrence	34	292	41	88	943
floodfill	12	42	235	419	905
t3	48	123	486	168	82
juggling	88	120	114	35	727
pandas.tseries.converter	15	135	184	103	630
Derivative	60	98	458	279	809
ax.xaxis.set_major_locator	46	148	217	46	844
revisions	35	225	232	534	219
100-200	21	170	234	557	576
psychic	24	109	114	444	469
sand	95	228	206	480	675
day1	53	281	68	194	390
laid	2	116	122	98	694
Namespaces	15	135	181	145	195
newly	2	215	328	335	180
independence	77	214	132	783	162
non-iterable	65	94	162	15	336
associate	81	21	233	487	702
coeffs	85	6	177	107	13
klmn	48	265	272	706	356
W	85	194	370	5	192
tobytes	3	220	361	514	235
RN_x	78	49	338	405	502
PYTHON	69	31	191	61	534
Chain	38	206	48	195	416
Photo	30	193	19	281	114
days	99	140	453	109	94
Zelazny7	4	17	254	710	441
tolerant	6	68	12	130	910
filter	20	93	382	709	989
Traits	93	26	63	516	537
heck	50	59	114	35	469
Counting	69	31	100	530	911
Stratified	77	168	186	705	353
separable	20	93	382	191	989
Prepare	38	206	214	98	71
pyrex	7	51	428	215	915
researcher	13	26	63	516	852
researches	50	264	393	75	564
OpenCL	7	51	345	2	730
encouraging	18	225	5	419	53
OpenCV	22	248	381	141	722
.figtext()	31	13	388	306	439
)"""	86	89	163	551	66
researched	50	264	393	75	564
tbl_ind	53	139	51	551	779
1.e15	27	297	431	509	486
Mac-specific	50	61	315	99	120
pkgconfig	55	132	352	477	568
heights	81	288	297	171	479
mymask	44	227	361	509	273
OpenCv	22	248	381	571	722
IDLE	40	141	281	76	632
collections.Counter	65	27	81	648	526
corpus	79	168	186	27	1
197	54	3	101	318	158
geocode_data	48	123	51	339	779
leaking	29	218	447	570	803
6.4	84	108	23	579	322
repeatable	12	183	301	725	604
incur	76	272	118	573	863
.com	4	121	19	102	340
Managed	57	109	463	567	870
192	54	223	298	318	158
EUR	95	268	159	168	746
NPY_1_7_API_VERSION	30	176	397	429	858
ROWS	78	144	195	787	944
frankly	50	59	114	419	908
50Hz	20	93	425	507	344
company's	79	78	450	762	746
h	96	195	177	107	192
df.sum	64	150	406	65	48
bridge	81	43	41	400	234
maxX	41	6	289	282	810
col_index	90	95	115	239	227
__radd__	3	220	329	663	235
screwy	88	232	232	424	835
colspecs	52	10	376	121	971
screws	2	232	491	174	781
configure	40	57	167	520	732
maxx	41	6	108	229	999
maxy	41	6	289	229	999
other_series	27	260	418	548	945
thoroughly	50	264	393	75	590
bugzilla	40	239	429	609	92
thorough	4	109	229	444	237
maxi	74	231	54	690	262
hatch	59	13	433	134	608
maxc	27	260	431	234	945
second_mask	74	100	108	586	228
n*	96	29	356	173	668
Convert	69	31	100	530	316
Pythonista	11	48	61	675	31
shape_base.py	37	250	475	205	461
np.char.add	75	227	385	0	526
left-to-right	2	111	25	708	908
rownames	61	49	456	405	517
promotions	3	94	162	514	470
mininum	78	100	108	588	283
wave.py	47	48	65	630	31
Float	69	162	191	61	260
Bound	95	138	159	519	38
-based	76	17	14	169	612
,..	85	54	287	338	585
data-type	56	18	162	514	119
3D-array	34	77	0	73	336
ax=axes	46	39	73	505	649
xaxis_date()	47	13	457	592	844
Hourly	38	138	450	101	746
dups	94	222	446	706	160
dupe	18	15	45	472	922
x-x0	96	201	426	560	62
colors	22	4	294	438	271
pkg	67	151	327	499	732
matplotlib.backend_bases	15	135	319	205	873
analogue	76	94	382	742	989
pkl	71	153	50	423	108
absolut	11	120	212	739	221
do_some_work	29	187	128	123	55
proposed	4	17	254	710	441
spite	12	152	292	252	908
situations	88	152	147	630	604
A.index	64	297	54	551	779
spits	50	37	491	699	59
543	54	3	368	429	428
540	54	223	298	318	158
547	37	250	27	187	194
545	54	3	101	187	158
C-order	3	188	396	404	77
3-channel	22	90	381	141	672
Thnaks	24	109	229	140	870
borrowed	4	193	372	478	552
SystemExit	63	176	397	582	136
df.info()``	94	222	446	293	729
SIGN	61	230	443	86	517
color1	46	39	73	316	198
color2	59	39	335	168	198
despite	50	264	292	210	59
knocks	10	160	274	323	655
toolbox	13	26	63	118	537
color=	46	39	73	316	649
RegularPolyCollection	59	79	41	199	234
Gene_id	48	123	486	339	82
yerror	41	6	270	546	177
Holoviews	13	23	233	51	710
earncat	79	228	337	621	653
pandas-0.10.0-py2.6-linux-x86_	37	128	52	205	173
L14	68	32	18	173	62
generally	88	0	147	630	604
Thorsten	4	121	264	252	500
full	57	235	342	450	451
Formula	38	206	248	467	71
VBOs	50	120	393	257	417
1MB	10	127	355	159	359
Gnome	84	7	432	301	321
wave_data	90	297	13	617	744
SECONDS	99	281	66	198	687
meta	71	239	122	702	457
bins=10	46	35	297	171	810
binary_erosion	20	93	7	709	670
finger	18	120	114	35	64
hopefully	11	225	232	144	81
mul	43	157	137	663	956
Unnamed	1	204	373	338	502
discovery	13	246	48	195	416
reiterate	18	225	232	182	360
Colored	69	162	191	209	837
newb	11	120	212	739	727
pygame	93	248	104	571	722
Tree	38	206	282	722	353
however	47	0	392	91	544
pythonish	88	257	61	675	612
atetime64	53	18	68	682	390
newx	74	6	177	107	397
newy	41	6	177	107	397
news	24	109	229	444	264
Among	13	26	134	118	621
mu1	41	6	438	107	573
Probability	38	214	132	147	4
mu2	41	6	251	107	192
fault	50	37	301	699	954
COL_NAME	53	95	115	239	227
C2065	63	176	164	211	572
mildly	88	257	5	257	695
extobj=extobj	30	174	117	751	262
expense	76	272	118	44	863
DataFrame.index	74	95	108	734	227
mpl.colors.Normalize	75	36	289	28	810
DiGraph	38	79	41	60	234
fillna()	6	85	12	700	956
bincount()	42	27	103	358	244
conference	13	78	372	480	852
differently-shaped	34	111	147	546	694
WoodChopper	24	121	394	646	500
commutative	44	194	137	431	598
foo.bar	15	174	117	592	823
Wilderness_Area	54	204	257	338	361
least-squares	77	124	38	324	438
sucessfully	40	57	429	499	732
unixtime	99	281	68	198	687
least-squared	72	165	231	199	71
towns	39	77	239	88	943
p.s	57	235	222	699	451
nolearn	67	57	330	205	791
%prun	57	277	37	534	706
5k	21	190	234	557	42
xxx	86	129	330	185	568
data-types	3	94	162	15	470
PathPatch	31	1	388	399	879
xxd	40	37	222	384	315
tracebacks	57	239	421	37	451
arrayobject.h	55	176	44	696	305
constant_values	46	226	289	316	810
combos	79	144	337	522	944
Averaging	69	31	100	530	911
censors	53	123	51	197	199
chunker	36	233	489	712	262
n	44	205	370	327	192
plt.ion()	29	203	128	123	55
dashboard	93	187	90	609	537
gave	4	264	292	210	59
matplotlib.pcolor	22	4	495	199	177
axis-labels	59	52	32	209	796
Histograms	69	162	191	209	837
print_png	31	1	388	399	942
DURATION	48	123	486	168	653
MIME	71	153	50	423	260
A.flat	27	293	26	138	146
Tell	57	59	143	144	451
Toeplitz	34	42	280	431	485
beside	59	52	25	32	338
drawback	12	152	134	552	621
3-element	34	77	0	73	336
sortContent	47	174	222	185	262
single-valued	81	147	270	203	301
80000	21	190	234	557	42
Springer	38	224	282	519	689
peaks	20	93	425	507	344
screw	50	232	457	618	781
numerical	12	42	38	279	84
scikits.learn	77	168	186	705	646
HPC	84	119	2	445	580
goofed	24	200	493	504	991
shortly	35	122	220	292	376
Saves	10	160	118	64	863
ocean	39	73	279	322	586
y_trainN	90	256	154	668	994
Manager	40	271	259	281	377
Solaris	84	119	2	410	321
Ensure	15	215	156	9	376
Saved	24	109	229	444	870
possesses	34	77	280	88	485
Utility	38	271	206	519	38
Forma	79	265	450	621	118
assembling	2	116	145	573	531
graded	18	264	292	170	747
2,2,100	44	205	251	196	357
BabyDataSet	65	233	54	690	526
column-specific	57	229	457	405	356
proposes	4	17	254	710	441
grades	79	228	487	480	285
np.isnan	27	260	431	234	945
scattering	81	126	206	203	949
enlighten	11	173	143	763	652
columned	2	116	233	766	713
scatterpoints=1	31	13	383	592	608
megabyte	21	190	234	557	42
greater-than	60	94	95	18	866
bidimensional	34	77	0	73	943
from_csv	52	185	28	121	793
breaks	2	263	491	174	781
in_array	44	227	26	509	228
IPython's	40	277	281	76	706
np.random.rand()	57	263	452	251	451
shipmentid	78	49	456	355	769
memoized	10	202	37	169	207
appearing	59	52	301	32	59
appendable	71	153	446	702	457
sharey=	5	226	494	577	518
ConfigParser	61	153	50	423	108
melting	43	265	75	706	356
Relevant	57	193	19	387	114
broadcasted	34	77	251	73	694
renames	15	135	86	384	275
contradict	12	225	490	170	371
pandas.get_dummies	43	157	72	341	443
sub-level	48	138	456	789	739
Topic	38	224	282	519	38
renamed	15	215	292	210	275
peeves	88	59	5	419	53
0-100	81	288	266	200	672
avatar	18	200	493	444	991
matchup	48	144	486	405	502
permuting	42	30	396	566	520
Again	47	0	392	678	544
35:00	54	69	119	155	126
envision	81	21	233	424	177
executable	67	132	174	604	305
excerpt	57	235	342	450	950
zoom	59	154	188	427	203
9999	6	68	456	355	910
Extraction	78	43	131	522	944
radiobutton	59	52	188	51	2
self.ax	31	203	255	577	430
FILE*	15	94	329	663	957
coerce=True	52	274	418	548	390
p_guess	41	124	177	396	201
dataframes	43	265	75	706	356
mystified	50	59	114	35	907
t11	41	288	239	200	884
num_rows	75	227	228	0	486
Accepted	24	15	229	472	922
borderpad	5	284	494	757	518
deleted	50	200	292	210	187
1.6GB	10	127	355	159	359
df.isin()	43	157	72	683	956
5%	81	170	266	104	176
quaternion	3	220	329	514	235
attendance	79	49	487	60	92
hsv	22	4	294	438	672
D):	85	172	419	224	778
Used	69	215	237	281	59
ASDF	15	40	444	777	406
deletes	2	215	491	174	275
Forecasting	38	206	282	281	353
Two-dimensional	81	116	122	546	301
attacks	13	232	5	458	195
cuv_list	78	49	131	27	336
dataframe2	48	144	486	631	502
dataframe1	49	47	486	631	502
dinner	18	200	490	185	469
ensure	2	229	457	335	338
connected	39	43	41	400	234
memory_profiler	10	277	355	359	169
little-endian	14	291	85	608	44
mistyped	18	200	170	504	991
ppc	55	128	293	52	56
ppa	35	57	167	664	732
aha	24	200	493	504	991
ppf	77	219	458	279	4
[[	90	54	287	10	585
ahh	24	200	493	504	991
Radial	72	206	15	722	71
ppm	57	246	50	571	108
ppl	11	120	212	419	53
Environment	19	141	259	110	402
differnet	14	291	301	325	549
annotating	59	23	32	51	203
Floris	24	121	264	646	500
predict_proba	77	168	186	705	646
vode	60	296	102	279	438
subvector	34	100	239	88	283
Break	69	31	237	530	781
stuck	50	120	114	35	727
striding	34	30	396	566	368
Rajat	35	235	222	567	81
indexers	94	111	115	369	160
.__init__	31	40	444	236	444
-operator	3	111	26	145	890
GMM	77	168	186	147	646
bottlenecks	76	277	118	225	169
+str	86	129	117	211	66
subclassing	3	220	329	663	720
PROBLEM	30	212	55	136	965
GMP	7	51	65	2	730
fig.legend	46	203	255	577	430
GMT	99	63	68	426	27
sp500	99	281	333	218	597
flavour	13	171	473	128	88
attr	31	44	460	514	3
Vol	78	204	419	178	497
[:	90	297	13	239	744
Pseudocode	88	48	61	424	31
intra-day	99	147	450	101	817
unboxing	10	188	118	573	863
[(	53	32	287	234	585
[/	90	54	257	332	995
datingLabels	68	18	201	266	969
cobbled	50	264	393	35	564
matrix_of_coupons_and_facevalues	90	297	4	509	995
Gnuplot	59	23	495	51	54
decrypt	57	59	392	37	835
suspicions	50	232	114	35	863
0.60	96	266	324	695	421
0.61	96	266	23	695	421
0.62	96	266	257	695	421
sometime	50	264	6	407	469
object-orientated	88	23	61	306	439
0.65	96	266	324	695	421
0.66	96	108	23	695	421
0.67	68	266	257	8	421
0.68	54	108	23	8	421
plt.legend	46	226	494	505	348
regime	12	170	409	44	576
u'34	53	181	42	250	624
when	47	37	392	699	59
c_i	85	195	370	560	192
setting	2	215	457	335	531
papers	13	224	372	118	852
erosion	39	126	7	709	670
1.875	90	297	257	200	995
picture	59	117	433	32	177
football	79	228	487	480	285
flushes	29	218	447	573	450
one-sided	20	93	132	191	344
webserver	40	119	429	609	377
flushed	71	188	447	570	450
disk-based	71	222	122	702	457
faster	10	202	37	323	876
1800	21	223	234	557	252
uncovered	12	152	60	799	120
3.2.5	91	7	417	13	230
#VALUE	6	68	376	85	199
3.2.1	91	7	417	587	626
3.2.2	19	7	417	13	644
remarked	4	121	264	252	500
fasten	76	48	118	225	360
nuclei	22	4	201	438	672
mpfr	7	51	428	2	642
RollBasis	78	204	195	178	637
logarithms	14	86	314	279	238
df.to_sql	52	171	473	343	369
subtotals	79	265	173	547	435
set_scale	46	13	383	558	825
roc	79	228	173	168	918
Superb	24	33	229	140	870
.get_major_formatter()	46	35	348	46	430
recode	76	48	456	341	360
.05	96	266	324	695	421
Gets	69	162	191	789	837
rot	5	148	363	283	844
.00	86	69	119	155	256
row	78	49	216	616	456
Shifted	35	193	19	9	371
inverse	60	194	280	431	485
clarification	18	15	490	472	265
NaTs	6	68	12	130	731
cloud9	93	23	167	697	537
Truly	24	109	229	444	264
barplots	59	52	265	621	884
allocate	34	188	447	570	450
ax._get_lines.color_cycle	65	233	81	592	526
cantilever	39	126	495	93	177
frequencies	20	93	425	507	344
.0f	86	129	465	137	347
unfamiliar	13	120	212	739	727
1.125	96	266	23	695	421
300dpi	93	61	315	99	54
endpoint	81	140	338	391	116
df.xs	64	150	406	551	48
tanks	24	109	229	140	870
cyan	22	4	427	438	198
emphasized	12	59	392	630	908
a.fill	75	227	385	0	484
XList	78	100	108	588	283
oftentimes	94	222	122	771	160
nbins	5	288	284	245	479
clouds	39	126	235	733	102
impressive	10	202	37	444	264
level	2	21	75	91	338
set_index	43	47	75	683	73
posts	18	225	45	527	219
iter()	65	40	444	15	709
standards	13	225	5	170	219
differential	77	98	38	279	809
numpy.object	3	18	141	266	969
my_function	65	40	444	236	314
illustrating	57	235	463	450	766
tougher	88	272	118	334	695
trend	77	170	231	783	738
x.strftime	86	274	10	772	838
ubiquitous	88	272	5	334	53
long-winded	88	257	114	334	695
Rcpp	50	57	393	697	398
port	40	246	429	609	600
plt.contourf	46	36	294	282	397
81.00	54	50	368	158	126
Mersenne	60	42	48	725	162
value_counts()	43	157	103	376	956
explictly	45	229	457	306	906
Que	78	144	195	178	475
goes	47	232	491	167	781
np.version.version	91	112	184	103	630
scripted	12	232	457	306	338
tabulation	61	270	452	86	738
recarrays	34	94	122	702	694
sortlevel	43	47	406	683	73
witch	2	21	495	91	338
Uses	69	265	191	61	739
6-7	21	160	234	557	655
library.zip	37	132	44	384	305
rethink	12	225	5	419	563
earned	79	228	487	480	285
.7	96	266	23	695	797
Francesco	24	121	394	646	500
newcomer	18	120	212	739	727
timeout=None	53	139	117	417	775
pl.tight_layout()	45	203	348	123	55
dumb	88	200	179	739	67
subcategory	78	144	335	276	653
pauldufosse	37	250	27	475	194
bounds	81	170	266	245	283
It's	47	0	392	678	544
3800	21	223	298	391	252
Languages	38	224	282	519	689
Therefore	47	0	392	678	544
subnormals	14	86	314	325	549
xls.parse	43	265	74	699	59
init.tcl	67	132	44	384	315
It'd	47	0	232	143	544
dict.items()	65	233	476	540	526
linespacing	5	13	30	134	844
set_titles	31	203	348	592	879
pred	41	256	74	668	994
text-based	2	265	145	98	356
prec	78	140	338	198	456
andy	11	109	229	444	870
gaussian_filter	72	165	382	235	396
owndata	3	220	447	570	450
prep	71	116	126	203	765
today	50	264	114	407	64
numpy-1.8.0	55	132	330	499	791
plug	47	229	232	306	439
numpy-1.8.2	67	112	470	604	128
load()	71	153	336	423	942
comments=	52	185	376	121	971
These	47	21	233	251	544
str.lower	65	157	103	683	956
cased	61	263	147	618	260
.diff	43	157	72	683	956
equivalents	76	94	65	169	631
2.4.9	84	57	167	141	722
2.4.8	67	57	167	499	732
linspace	42	243	286	282	484
employed	12	42	134	799	738
2.4.3	91	7	417	13	864
2.4.2	91	57	156	587	864
2.4.1	19	7	417	13	644
2.4.0	91	7	417	13	972
2.4.6	91	57	167	499	230
df.eval	27	139	51	551	199
stackflow	18	225	45	527	219
matplotlib.rcParams	45	80	448	435	909
timepoints	81	147	270	376	603
py27	55	132	352	113	568
read.csv	36	171	74	24	369
dpaste	57	193	372	387	371
lineterminator=	86	10	376	137	971
Wrap	69	179	237	174	417
pickle	71	153	336	359	306
ax.barh	27	35	289	46	486
usability	13	272	122	458	612
figure	59	154	284	51	54
Anaconda3	19	7	432	301	644
Ordering	34	21	131	708	702
DictVectorizer	77	168	186	341	443
Integration	38	206	282	722	71
choke	61	71	301	735	260
inexperience	12	120	212	739	727
critic	53	150	256	197	285
11:00	99	253	119	525	256
z-label	5	148	363	558	844
10*10	21	205	258	88	943
VPS	84	119	2	697	377
p.s.	11	120	179	739	67
event_id	48	144	195	787	502
Concerning	47	0	392	228	908
inner=	95	159	260	104	496
meager	11	120	114	444	53
scat	46	39	348	592	649
vital	12	59	5	419	120
over-writes	2	215	328	405	187
.diagonal	90	227	13	509	263
fourth	78	21	338	616	456
a_sorted	90	297	4	509	146
displacements	39	43	384	93	949
denormals	50	232	118	35	53
$100	21	127	355	159	955
np.s_	42	30	26	74	368
Anacondas	40	57	167	664	321
digesting	61	37	301	355	888
xtics	59	52	32	19	884
numpy.savez	71	153	336	702	306
REST	71	171	90	60	537
index_list	74	293	108	509	146
informs	50	37	429	764	954
xtick	5	148	32	19	884
re-running	40	37	301	699	954
4500	21	223	234	557	252
mixin	31	1	329	663	720
representations	14	86	162	325	260
vectorizable	88	257	61	334	612
USFederalHolidayCalendar	99	140	450	109	94
\n\r	36	58	136	36	906
liblapack3gf	67	151	327	232	334
Still	47	59	392	678	469
scipy.misc	15	135	319	777	873
Anaconda\	37	250	27	475	194
inform	12	152	60	419	625
evector.apply	68	32	10	772	838
Reinstalling	67	57	167	664	230
representation	14	86	162	325	260
if-elif-else	2	49	328	98	262
\n\n	86	129	136	137	66
apreciate	11	173	389	763	867
|S4	86	18	141	266	178
|S5	86	18	141	137	178
|S2	3	18	162	266	178
spiketimes	21	190	234	557	655
|S1	86	18	141	266	178
YearEnd	64	287	449	197	653
|S8	3	18	162	266	969
FILE	36	10	489	712	942
129	54	3	298	318	158
Higher	38	206	231	709	71
+Numpy	76	26	65	697	730
numpy.linalg.cond	60	194	280	431	485
Rules	30	162	191	61	114
dodgy	88	257	61	334	695
platform	84	119	167	241	850
axes.facecolor	45	226	494	134	608
locale.setlocale	86	129	136	36	906
:[	95	181	287	479	585
ppi	59	160	284	245	54
NDArray	38	296	375	364	631
lattitude	39	6	279	766	573
Received	63	176	42	36	136
scipy.signal.resample	20	170	382	313	244
qualifies	35	59	147	252	908
qualifier	61	49	373	355	517
dfmi	53	95	115	239	227
matrix_power	60	194	102	431	751
arrow's	81	170	284	245	479
qualified	12	152	5	419	53
Ultimate	84	271	2	281	321
Receiver	38	206	282	722	353
unvectorized	88	202	61	675	876
v1.8.0	91	122	156	587	376
permissions	67	119	352	384	786
inheriting	15	135	329	663	720
a+c	68	32	18	617	62
sklearn.linear_model.LinearRegression	60	193	19	742	371
debating	18	264	490	337	907
Compatibility	84	57	167	127	321
set_xlabel()	31	13	388	592	879
shy	50	232	301	618	863
importation	15	57	319	742	957
ax.imshow	46	36	348	577	488
matplotlib-venn	67	151	167	499	137
np.square	44	227	385	0	486
non-object	34	94	162	404	470
mapplotlib	47	37	392	91	888
catching	24	200	493	567	991
123456	95	123	373	686	653
Finder	40	132	429	384	568
concur	12	59	392	630	907
numpy.logical_or	42	27	286	358	244
pd.to_timedelta	64	274	68	72	390
non-na	78	100	456	588	283
Z.shape	44	293	251	196	228
dis.dis	42	277	14	313	709
statically	7	51	65	215	730
20130501000000	63	50	368	429	428
20130501000001	54	50	368	429	428
matplotlib.backends	15	135	319	289	823
importances	77	168	186	341	443
F1*	96	29	18	28	62
buffer_.close()	29	37	60	252	625
randwalk	74	195	177	396	622
df_result	48	123	486	339	779
succesfully	40	57	167	664	732
str2	86	89	163	772	199
\d{4}	86	89	163	299	66
yup	24	200	493	504	991
shm	55	132	330	477	568
Andy's	4	17	254	115	441
turn	2	116	457	306	338
yum	67	151	327	232	334
backend_agg.py	37	250	475	205	173
ufuncify	76	51	14	15	709
datetime.strptime()	43	63	68	426	745
scipy.linalg.eig	60	296	102	431	751
as_index=True	64	150	256	197	48
walkthrough	24	109	394	444	870
closed-form	77	42	38	279	809
computed	81	21	275	98	187
squashed	59	52	32	32	714
.names	74	233	74	551	526
Commercial	38	224	282	519	38
renderings	59	52	204	51	54
easier	88	257	61	675	612
2013-11-25	54	54	300	338	139
IMG	57	193	19	387	371
texlive-latex-extra	67	151	327	33	334
Brendan	24	109	394	444	264
men's	18	15	218	472	922
IMO	88	257	61	334	695
-Ofast	7	51	428	2	915
minimalistic	57	235	463	450	766
dayfirst=True	52	274	28	121	971
np.copyto	42	27	286	358	244
gil	76	218	447	570	450
resource.setrlimit	10	127	355	159	359
embeded	61	58	50	539	260
order()	43	265	337	771	356
h-index	78	298	419	640	361
n'th	60	21	216	616	456
Fake	69	265	191	789	739
cards	79	228	206	480	212
havnt	76	264	118	630	747
Constrained	38	206	169	722	71
Fails	69	162	191	281	837
pylab_setup	37	250	27	187	194
measure	81	270	472	783	662
pandas.merge()	43	265	72	771	356
exchanging	2	63	68	426	260
amateur	11	120	212	739	67
``]	94	222	19	313	160
```	47	231	117	112	262
t.hour	53	150	256	72	997
datapath	45	10	376	269	906
np.irr	76	179	169	169	145
sciences	13	120	212	118	852
animation	29	187	128	51	54
epsilon	14	86	314	325	236
resembling	57	235	342	450	950
surf	72	36	294	282	627
sure	47	59	392	91	907
transposes	34	30	396	566	520
printable	61	58	443	539	501
pd.cut	43	157	297	376	956
insets	59	52	233	51	518
.agg	64	150	256	197	48
donation	79	144	487	787	285
lut	74	205	251	509	228
icol	74	233	54	690	526
icon	93	154	188	427	203
latex	93	230	448	767	909
``'	94	222	449	293	160
Whoever	18	225	490	472	53
``)	94	222	446	293	160
later	47	232	232	335	180
-style	76	111	375	6	631
matplotlib.animation.FuncAnimation	31	1	388	236	444
3X3	34	77	280	88	694
ADC	20	246	58	428	600
02:30	54	108	23	579	931
ax.azim	5	284	253	134	879
100000000	75	243	385	425	484
cheat	4	193	372	306	439
allocatable	76	51	65	312	957
cheap	88	188	118	334	863
future-proof	76	232	65	630	439
Research	38	224	282	94	689
concurrent	71	218	183	445	803
spaces	61	58	452	539	501
tks	24	200	394	567	870
pelson	24	121	394	646	500
ax.xaxis_date()	5	274	363	558	745
Unfortunatelly	67	57	167	499	732
.datetime	90	297	115	239	227
-0700	99	274	119	679	997
555-9898	53	271	42	417	624
ScrolledWindow	93	154	188	427	203
aubio	40	57	429	384	732
Binomial	77	206	132	147	162
believing	50	120	114	35	727
KNN	77	168	186	705	646
syntaxes	47	264	233	599	59
data=None	64	220	74	551	314
.otf	93	230	448	767	909
legendre	60	98	458	279	438
Louis	38	224	282	519	38
Annual	95	138	66	789	687
dedupe	43	116	145	706	356
h-1	44	195	370	255	192
z-axis	39	288	438	93	116
.next()	65	233	74	592	526
portions	2	116	233	203	986
10Hz	20	147	206	507	949
assignation	34	100	131	522	283
dict.values()	65	220	476	540	311
Coding	38	179	196	722	145
jokes	11	225	232	170	219
copy-pasted	57	239	222	450	451
predicted	77	214	132	783	162
cx_freeze	67	151	174	604	104
jit-ed	76	48	65	630	31
y'all	11	173	389	763	867
[8	90	54	257	332	585
Py2exe	40	57	174	582	732
matplotlib.figure	31	203	255	577	728
freeimage	67	112	167	499	732
signs	61	58	452	86	501
1920	21	205	251	196	252
interpolate()	43	85	72	700	817
1922	79	144	195	787	211
MANY	94	16	72	334	160
lg	96	201	356	327	668
installer	67	151	470	604	104
ruined	50	59	490	252	120
arff	71	8	50	423	108
surfaces	39	149	495	199	177
managing	13	26	126	118	457
mol	85	174	419	751	192
mtrw	4	121	254	710	441
masked_array	42	27	88	53	244
getattr	15	135	485	193	314
surfaced	35	57	60	9	120
guitar	20	183	425	191	606
np.corrcoef	27	269	472	704	598
IList	34	94	0	91	694
3.4	91	7	417	13	644
set_printoptions	45	185	334	269	913
UnivariateSpline	72	165	15	235	438
pass-through	76	272	118	169	709
pylab.plot()	29	203	128	123	55
mplot3d	59	23	495	199	627
Eventually	47	232	232	678	544
item_a	74	100	456	355	283
quiet	6	68	212	130	604
contract	79	78	450	101	634
patient_id	43	265	456	405	356
999999	68	266	257	397	995
TfidfTransformer	65	168	186	705	646
liblapack	55	132	330	418	372
web.DataReader	36	10	136	343	746
filtering	2	116	145	203	531
DataFrame.from_csv	52	185	28	121	793
re-usable	76	215	181	257	187
Decision	38	168	186	705	353
period	99	147	450	101	817
insist	47	0	416	630	439
Mechanical	95	49	373	185	517
newbee	13	120	212	739	852
down-voted	18	225	45	472	53
Degree	38	206	38	722	71
cv2.resize	22	90	246	141	722
subscriber	29	246	183	609	600
AbundanceFrame	43	265	72	771	356
direction	39	149	438	93	116
copy-paste	57	239	463	37	766
na's	6	68	456	700	910
1215	37	181	42	250	624
\Microsoft	37	250	386	475	194
linalg.norm	42	202	37	313	876
andrew	95	181	373	102	340
os.urandom	15	135	319	725	823
annot=True	45	274	465	269	906
recolor	59	52	433	32	714
ironpython	7	51	429	2	730
__eq__	3	220	329	663	866
spirit	88	17	61	675	219
protocols	71	153	183	359	803
case	47	0	392	630	908
with-statement	40	218	183	359	625
3.1	91	108	23	579	322
cash	99	78	450	762	955
df.index.day	53	139	256	234	775
cast	3	291	162	266	470
2GB	84	127	355	159	359
geom_macro	31	1	181	236	444
irrespective	79	49	487	487	702
Open	40	271	259	281	746
pandas.tseries.index.DatetimeIndex	43	63	68	426	3
focussed	76	42	169	279	145
my_func	27	40	444	396	622
Redis	71	26	183	359	959
duplicating	2	188	145	573	531
ipykernel	55	128	52	205	372
acess	74	229	4	255	228
participant	33	144	165	787	690
author	4	225	372	670	552
reshape	34	30	396	566	520
granted	10	202	37	169	876
Solutions	69	179	389	574	145
ecolor	31	13	294	592	608
~1000	21	190	258	557	42
status	79	271	487	281	769
a.dot	44	143	137	704	598
typecode	3	18	141	157	969
weed	10	263	114	588	207
director	95	123	373	686	682
numpy.nditer	42	27	14	358	28
one-by-one	2	116	145	573	551
facet_wrap	31	14	383	568	710
AnchoredText	31	13	30	134	608
3,500	90	297	13	10	744
relies	76	215	491	174	621
time_0	86	18	272	682	199
~100k	21	190	234	557	42
ascomb	53	139	51	417	821
lucky	50	59	114	35	469
without	2	48	457	335	338
~100x	10	202	37	323	876
relief	39	206	495	199	177
relied	50	152	60	697	120
inability	88	59	134	91	120
binaries	67	151	470	219	104
researchers	13	26	63	118	398
justify	12	272	5	419	53
PyMC	77	98	48	195	353
df.column_name	94	222	115	369	160
Python-3.3.0	55	128	52	477	568
ninth	78	49	338	616	456
pairtime	3	18	460	157	787
sample's	81	214	173	104	459
x_inf	96	124	426	324	201
polish	12	17	457	630	371
fan_corrQ	68	32	154	545	449
ill-conditioned	77	42	280	431	485
unconverted	99	69	199	155	221
Pint	13	120	138	118	398
\0	86	129	163	85	66
scipy.ndimage.convolve	60	296	382	313	396
log_sSFR_dAGN	81	117	270	733	198
lets	47	21	491	174	927
set_radius	47	174	392	592	469
devflux	54	50	300	331	299
flashing	29	187	128	764	954
\*	61	266	117	8	797
-fwrapv	55	128	293	52	56
PySide	93	187	104	368	591
grid.shape	75	195	289	617	810
Many	11	109	229	444	867
co-ordinates	39	149	438	766	573
data.ndim	42	227	228	509	709
match_array	34	100	251	196	694
quantiles	81	159	173	104	459
itertools.compress	42	27	14	313	244
lil_matrix	34	292	64	348	218
\N	61	5	443	539	209
DataFrame.plot	31	14	383	568	710
EmpID	48	144	195	787	502
acute	12	42	38	279	84
\t	52	10	376	137	971
\r	61	58	443	137	501
\s	86	89	163	299	66
Switched	50	264	292	618	625
deta	74	40	444	396	622
\x	61	58	443	563	209
\f	61	58	443	539	501
\d	86	89	163	299	66
donations	79	78	487	480	176
parse	61	153	50	423	260
\a	86	58	443	137	66
\n	86	129	452	137	66
tower	3	94	162	514	470
unbalanced	81	190	126	546	42
1989	99	186	318	372	735
simulator	13	246	48	195	416
-mu	68	201	426	560	62
in1d	42	27	349	358	244
competition	79	78	212	407	852
2000,200	44	205	46	196	252
Master	71	171	303	60	92
cohere	60	40	177	396	201
preallocating	10	188	88	573	581
SALARY	54	186	300	797	139
developmental	35	122	220	292	376
imputer	6	168	186	341	443
swaps	34	111	396	566	520
frees	29	218	447	570	450
googled	50	264	393	75	564
moon	39	149	438	93	116
ifelse	65	296	375	364	631
imputed	59	117	433	32	198
sqr	96	201	177	560	13
freed	29	188	447	570	450
try_cast=False	27	35	154	1	314
backend_gtk3agg.py	47	57	222	699	315
unmask	6	100	12	53	910
PI	95	298	419	519	38
Playing	50	264	393	75	564
dicey	76	218	118	573	959
np.double	3	291	141	266	969
discussed	35	193	220	252	371
gridpoints	39	43	279	733	301
whence	47	0	392	91	31
estimator	77	168	132	783	454
numpy.linalg.eigh	60	296	102	431	751
Seaborns	13	23	126	51	710
Verified	78	271	373	686	517
12.300000	54	186	300	797	139
curses	40	37	429	699	632
\numpy\linalg\	37	250	27	475	889
instruments	79	78	450	101	675
Cumulative	38	179	169	264	698
.to_pickle	10	272	355	323	863
rising	20	170	231	147	116
Widgets	93	154	104	537	728
Winter	99	186	318	338	300
dataset1	41	6	239	107	397
dataset2	71	256	214	98	1
24000	44	205	251	196	191
reassigns	74	233	74	212	923
there	47	48	392	630	31
Jan	99	182	318	372	519
SONG	53	123	42	250	82
ehh	50	200	114	504	469
Compute	69	31	100	264	698
edge_length	65	9	54	690	526
non-unique	43	265	75	771	921
RTLD_GLOBAL	55	132	352	215	315
ended	50	264	292	413	747
numpy.linalg.solve	60	296	102	431	751
datasets	81	21	258	203	604
offical	67	193	19	387	594
wholesale	88	152	5	257	53
colorspace	22	4	294	438	672
plt.autoscale()	5	148	253	558	844
F_i_j	68	32	13	617	744
Whilst	66	17	254	678	544
grasp	13	120	212	144	727
grass	39	126	206	322	949
creeping	10	170	355	44	576
indx_j	85	195	370	107	577
raw_name	48	144	486	787	502
measurement	81	147	206	101	949
n*2	74	6	370	586	336
n*1	85	194	370	5	192
map's	39	149	279	298	573
sym1	90	195	4	255	744
onerous	88	59	147	334	695
deserve	18	15	45	472	86
rosen	29	40	444	396	622
mpl-data	55	132	352	775	798
DateTimes	48	281	66	789	687
Dark	95	271	335	281	38
Darn	88	59	114	444	469
3.2.0	91	7	417	13	626
2015-10-05	54	69	119	158	126
4096	21	190	258	45	252
n*k	44	188	356	327	668
3.2.3	19	7	417	13	644
avg_low	27	139	51	234	945
n*n	34	194	356	88	943
n*m	44	205	356	196	668
specgram()	31	13	495	199	627
START	48	281	66	788	920
n*p	96	29	314	391	192
m.mean	44	269	403	65	598
binning	81	214	297	171	301
finaly	24	109	394	140	650
NW	95	271	277	686	340
row-first	69	111	396	369	77
to_string()	43	157	72	24	956
websites	13	193	372	75	564
directors	71	26	65	60	682
La	85	172	481	224	778
directory	67	132	352	384	305
:))	24	120	212	739	469
Maple	77	98	375	279	738
bytearray	3	291	261	312	498
roi	90	174	4	332	995
------------	54	50	368	429	449
generalize	88	229	61	306	360
denotes	78	49	239	487	702
decisions	12	183	5	257	606
glimpse	81	170	409	44	603
uint8_t	3	67	261	312	498
v3.4	91	57	167	664	230
76800	68	32	154	545	486
extraneous	57	263	452	230	298
1-99	78	298	171	338	361
piqued	11	232	232	407	950
Frequently	2	21	233	251	713
immutable	3	94	329	540	890
y_values	46	243	289	46	810
bdate_range	43	63	68	426	817
j-1	74	195	4	255	577
Headers	69	162	191	789	739
ytick	5	148	32	19	844
numpy.memmap	71	188	336	702	306
.filter	64	150	256	772	48
treating	2	116	145	573	260
adjective	18	224	5	407	852
headwidth	5	13	30	134	479
ts.asfreq	64	287	449	48	48
Testing	47	21	237	534	783
list	65	233	158	540	336
Rest	45	37	222	618	59
cluttered	88	257	181	334	714
Carlo	77	98	48	195	416
employing	4	17	393	75	612
abstracted	13	26	65	118	398
Vispy	13	26	63	118	398
translating	13	120	212	257	727
PeriodIndex	43	63	68	426	452
vmax=max	75	35	289	282	397
East	95	181	279	322	586
listbox	29	187	128	764	2
appropiate	2	48	122	91	612
sue	47	229	162	91	470
.06	96	266	324	695	421
sub	2	21	233	251	986
sun	39	149	279	298	949
sum	81	269	275	784	603
brief	57	235	342	450	950
version	91	122	156	587	230
intersect	39	43	235	733	102
Compound	13	26	126	118	765
.02	96	86	314	391	603
s=None	44	227	385	0	201
SubplotSpec	31	1	436	663	720
compresses	2	153	122	423	306
toes	24	109	229	444	870
10.5f	86	129	465	137	347
themself	2	215	233	405	713
compressed	71	153	50	423	306
line.split	86	10	376	712	261
frozenlist	65	94	329	540	890
Series.value_counts	43	14	297	171	710
equations	77	98	38	279	809
Absolutely	24	109	229	444	870
X=0	41	6	29	69	116
no-no	15	174	147	145	908
stiffness	77	42	48	722	416
Solve	77	98	38	279	809
exited	40	176	397	696	136
mul_df()	57	235	342	450	950
Python27\Scripts	37	132	386	475	305
dimention	34	77	251	88	943
pdfs	93	61	315	99	374
Eric4	40	37	222	384	305
passage	12	140	206	170	950
herring	12	152	301	504	120
Polygon	31	1	388	399	879
jan	99	140	318	109	94
SHM	77	98	48	195	416
lamba	50	120	114	35	469
xrange	75	243	81	690	311
Immediately	50	37	301	699	954
GroupBy	43	265	72	771	956
functools.partial	42	157	14	15	956
flat	34	116	145	566	694
flaw	12	152	5	552	612
presumes	81	147	270	507	603
Weibull	77	214	132	147	4
Mask	69	31	100	530	911
pairs	81	43	131	522	944
flag	45	37	334	269	625
Mass	38	206	280	722	71
pdf1	96	201	426	560	13
Laplace	20	93	248	191	989
presumed	12	59	490	14	563
candle_height	81	147	453	20	955
pandas.melt	64	47	406	683	73
caveat	12	152	134	552	908
pandas.read_excel()	71	265	50	60	108
mymodule.py	15	37	429	699	957
k=10	10	183	258	327	783
100's	21	190	258	522	42
spearman	85	270	472	467	662
rcParam	45	80	448	269	909
DENMARK	95	181	42	211	624
Process()	29	218	447	359	803
_exact_	57	235	463	37	451
ax.margins	5	284	253	757	339
You	47	0	392	678	9
dict-like	65	265	158	540	890
rather	47	0	392	91	908
multi-regression	77	168	186	341	353
occasionally	12	152	301	618	604
histogram-based	77	214	132	783	162
rebalance	29	40	444	212	923
distro	67	151	210	351	156
plt.axis	46	284	494	757	508
okay	24	200	493	504	469
df.groupby()	64	150	103	683	48
chunking	71	272	446	702	457
ArcGIS10.1	37	250	27	475	194
orbits	39	43	235	93	116
ivec	90	67	385	157	498
lighting	13	23	235	709	562
install_superpack.sh	67	112	276	57	315
Converted	65	233	158	540	336
u'b	86	129	42	211	624
concentrating	2	116	145	522	338
df2.size	27	157	148	685	637
Wiki	4	224	372	387	689
PRODUCT	48	144	195	178	637
short	57	235	342	450	950
9.744	54	50	368	331	19
Splitting	69	31	100	530	911
clean_tweet	76	277	118	225	169
fontdict	45	13	363	269	958
extrapolation	72	165	15	235	301
ufunc.at	10	202	37	313	876
numpy.astype	3	18	162	266	969
Bottom	21	160	445	127	655
get_xlim	5	13	388	558	958
closeness	81	183	131	588	783
clutters	88	59	5	419	695
Same	47	0	237	281	59
isnt	47	59	392	91	835
10:55	54	186	300	158	126
Relational	71	171	303	128	457
avenue	88	152	5	630	264
level_1	64	47	406	631	131
Underneath	2	215	233	251	338
fontname	45	230	448	767	909
#ffffff	86	129	73	211	624
clashes	2	152	181	777	195
curve_fit()	60	124	458	324	438
cross_val_score	77	168	186	705	329
bout	21	109	355	567	835
soccer	95	228	487	480	675
twitterDataFrame	53	281	68	682	390
I0	85	293	154	586	192
t-tests	47	193	19	170	371
somebody	11	173	143	763	652
diagonalize	60	194	280	431	485
Err	96	29	18	5	192
numpy.linalg.solve()	60	296	102	431	751
scipy	60	57	167	742	732
x-scales	59	52	233	621	675
memory-friendly	76	257	61	169	612
Erm	47	59	392	144	835
adventurous	35	232	232	407	53
scipt	40	141	429	697	954
instructions	67	193	372	387	732
mathematician	13	42	212	419	852
Sunday's	99	140	453	109	687
Reads	71	153	50	127	854
dfN	49	297	406	631	445
axes3d.py	55	132	475	205	173
likelihoods	20	214	275	783	238
fromiter()	3	27	14	404	235
tilted	39	149	438	298	116
weight	81	214	472	783	162
capitalized	61	49	181	86	517
40,000	21	190	166	557	42
loopy	10	202	37	534	783
Heatmap	59	52	495	209	837
loops	76	272	118	169	207
xval	41	195	289	282	810
109.95	54	50	300	158	931
errror	63	44	199	582	888
foolproof	88	257	61	675	31
OneHotEncoder	77	168	186	341	443
MultiIndex.from_product	94	222	72	771	160
display.max_colwidth	45	80	334	269	413
hill	77	183	48	195	416
Plots	69	162	191	209	837
compounding	2	116	95	18	272
NURBS	39	98	231	93	102
w_in	44	194	137	5	598
_new	2	100	95	355	272
df2.plot	46	284	348	46	430
side-effects	76	152	181	257	195
0-dim	3	220	0	404	890
\s*	86	89	163	299	66
\s+	52	89	376	121	971
numpy.bincount	42	27	297	358	244
colorbar()	31	13	294	653	271
Partial	69	179	169	281	145
Shapely	72	79	41	152	102
OHLCV	99	138	450	762	746
ptrepack	94	222	446	702	524
introduction	35	193	372	387	704
numpy.longlong	3	291	46	509	228
seperately	47	48	233	251	338
$sudo	67	112	276	499	334
Blank	69	61	237	209	54
fallen	50	200	5	210	53
Intel's	7	163	428	418	166
sys.maxint	14	86	46	325	482
seeming	50	102	301	618	564
1600000	21	223	46	196	252
struct.unpack	3	291	141	266	969
Axes	31	1	388	399	879
contributions	11	225	45	567	219
traveled	81	43	206	167	955
enlarged	59	117	433	32	714
stdlib	15	135	81	735	873
story	88	59	5	145	908
"	47	174	260	185	496
Dictionary	69	162	191	61	739
leading	61	263	452	618	501
design_info	15	220	460	514	787
storm	79	73	206	322	949
gpu	10	202	345	412	166
numpy.random.permutation	42	27	14	313	244
store	71	116	122	702	457
gps	39	73	214	766	573
test.h5	36	10	136	712	261
Mike's	4	225	490	710	81
os.path.exists	15	132	136	308	858
luckily	50	232	232	672	469
df_origin	6	47	456	212	923
versatility	13	23	138	458	394
matplotlib.pyplot.savefig	36	61	315	99	942
scipy.signal.savgol_filter	20	98	382	742	989
king	11	109	5	444	53
kind	12	48	134	630	908
psps	68	32	18	28	62
Determinant	38	206	280	722	71
train.csv	36	239	50	294	261
Rotating	39	149	495	209	177
i	74	195	4	255	577
axisartist	5	148	363	558	518
verlet	10	202	37	323	576
8:31	99	253	453	525	419
Rectangles	31	1	388	399	880
pandas.core.groupby.DataError	63	44	199	711	341
unsatisfying	88	257	61	334	363
DATES	48	281	68	107	211
did't	50	264	292	210	747
TSLA	95	181	373	686	497
headlength	59	52	32	32	479
higher-level	76	26	138	257	417
bitwise	42	111	95	18	272
memory-efficient	88	257	61	675	612
scipy.stats.gamma	72	165	15	742	438
hopelessly	12	59	232	144	53
RcppCNPy	35	57	167	697	732
DeprecationWarning	63	176	478	9	350
transactional	79	78	303	60	108
datetimes	94	63	68	426	452
conforming	81	21	131	203	563
entirety	57	235	342	450	854
scipy.stats.pearsonr	60	270	472	742	662
Difference	69	31	169	264	911
longish	12	183	409	630	950
Entering	40	37	222	699	59
populate	2	116	145	98	338
exec	36	10	485	193	261
customize	31	229	457	306	439
datasize	10	202	37	534	783
inconvenience	18	200	179	567	67
Equal	69	162	191	209	837
amat	74	100	4	586	577
RBM	77	168	186	705	646
RBG	22	4	427	438	672
RBF	72	165	15	346	529
probabilistic	77	168	186	705	646
amax	42	269	403	53	244
X.todense()	44	292	64	348	218
unsupervised	77	168	186	705	646
datetime1	99	186	318	679	997
traditional	13	257	126	203	612
Checking	69	31	237	530	911
sub-series	48	100	108	276	944
caching	76	272	118	359	959
a*a	44	194	137	704	598
a*b	44	194	137	173	598
a*c	96	201	18	173	62
lying	39	43	235	733	102
set_extent	5	148	253	558	844
pd.read_pickle	15	135	489	712	823
BE	30	212	55	136	965
numpy.einsum	42	143	215	313	368
pd.MultiIndex.from_product	64	139	256	551	199
beautifulsoup	71	153	50	423	457
stumped	11	120	114	284	727
inflexible	88	257	61	334	196
Suite	7	26	63	516	850
Poly3DCollection	31	1	388	399	879
simulating	13	246	48	195	416
ier	90	35	177	282	597
2015-03-31	99	140	453	155	256
set_array()	31	13	444	592	627
Bhajun	24	121	264	646	500
BM	99	287	449	48	817
idxs.T	44	293	4	509	228
drop-down	40	141	259	110	402
Jason	24	109	394	140	870
triangle	39	79	41	152	102
gains	10	272	118	225	990
invoke	40	187	429	777	632
precission	10	170	409	44	84
ewma	43	85	449	784	817
squareform	44	194	472	704	662
polynomial.py	15	219	330	205	869
emails	79	228	487	27	1
factorization	77	194	280	431	485
fig.canvas.draw	29	203	348	123	55
Collections	31	1	440	399	879
List	69	162	191	61	739
wrote	57	235	342	450	950
forego	76	272	457	306	439
]]	90	54	257	10	585
20million	78	100	131	522	283
defense	18	200	179	419	267
pivoted.resample	64	287	449	48	48
B^	68	201	18	617	62
cutoffs	81	214	270	171	603
numpy.concatenate()	42	30	286	313	595
visualize	81	126	495	203	177
_actual_	57	235	490	37	451
coordination	39	126	206	203	949
init()	29	40	444	236	444
matt_s	57	17	342	450	950
Colouring	59	52	495	733	177
Angles	38	298	282	519	38
scipy.spatial.Delaunay	72	165	15	152	570
auto-detect	2	57	167	499	315
gridpoint	81	43	266	733	944
newdf	53	150	455	668	779
blurb	4	200	490	567	81
soln	94	222	254	710	160
matricial	34	77	26	88	228
Could	57	235	143	37	451
attention	18	225	490	567	53
Manual	38	224	282	61	689
outfile	36	10	489	712	261
df.plot	46	14	383	505	649
subdividing	81	43	275	167	603
-D_FORTIFY_SOURCE=2	55	128	293	52	56
time.mktime	86	274	68	679	390
cumulative=True	31	14	297	171	710
unravel_index	42	30	286	358	368
paradigms	13	120	212	118	606
<=>	3	291	162	61	549
]=	90	297	13	10	744
];	90	297	13	10	585
]:	90	3	117	10	585
uglier	88	257	61	675	695
]'	53	139	272	682	199
ims	90	203	348	577	430
<=-	68	32	13	545	744
]"	90	297	260	185	496
Resulting	59	235	342	347	560
Parseval's	20	93	248	191	344
bond	79	43	206	101	675
])	90	32	13	10	585
Mpl	91	122	156	587	230
ax.invert_yaxis()	46	284	253	577	430
col+1	90	297	4	239	995
sweet	24	109	229	444	264
sweep	20	93	382	742	396
distros	67	151	210	351	156
2012-01-01	99	69	288	155	256
2012-01-02	99	69	119	155	256
unflatten	42	257	396	404	612
matplotplib	59	52	495	51	710
outdegree	85	195	239	255	192
df.values.shape	44	205	154	509	357
backends	93	80	315	435	591
anisotropic	20	126	409	709	562
LikeBeta	41	40	177	396	622
Properties	38	271	259	110	402
sys.path.insert	55	132	330	308	568
flight	71	246	206	428	949
k-1	85	195	370	617	192
+len	75	32	18	28	62
)'`	86	129	402	211	823
precision	14	86	142	325	549
Equivalently	74	100	370	522	192
-only	88	17	146	710	441
zfill	61	58	452	589	448
demand	81	78	126	203	959
Disregard	24	200	490	504	991
instructor	77	214	132	783	162
shove	2	116	145	306	986
frozen	40	187	174	764	954
scipy.fft	20	93	425	742	344
dict.keys()	65	233	476	540	526
kick	88	232	232	618	625
Biopython	84	57	167	412	732
struct_time	94	63	68	426	452
k2ij	68	201	370	617	62
shortened	57	235	342	450	950
concurrently	71	218	183	445	477
credence	12	152	134	552	908
16.0	91	108	23	579	693
smci	24	109	394	567	469
demos	13	23	372	97	704
obstacle	50	42	235	195	416
pd.rolling_apply	27	150	256	784	48
definitive	18	225	45	419	219
Checkout	76	193	19	387	439
hadoop	71	119	183	609	377
wierd	88	152	147	618	120
9	54	223	298	338	811
Mass_balance	60	40	419	396	201
prerequisite	13	26	63	697	398
higher	12	170	409	44	576
GOOG	99	268	318	762	746
GOOD	12	225	5	170	219
KDtree	76	272	65	169	730
monolithic	7	26	63	516	398
b.T	44	227	137	704	598
Item	95	271	159	547	653
SPOJ	47	37	222	699	888
kmeans2	22	168	294	705	670
Weekday	53	95	115	72	227
would't	88	59	5	419	53
noticeably	10	202	37	323	876
DESC	95	212	182	343	38
spliting	34	116	145	706	986
objecting	12	152	147	419	908
framedata	29	40	444	396	314
column_headings	74	49	4	405	577
Miller	38	298	282	102	340
unrolled	10	202	37	323	876
magnified	59	170	284	44	576
multipliying	76	40	275	566	238
machinery	76	94	147	257	417
functools.reduce	42	40	14	15	311
chosing	2	116	145	405	338
latex_template	37	250	27	475	194
burden	76	272	118	552	863
_timestamp_to_mysql	3	220	460	172	787
Seems	47	59	392	424	469
Debug	40	141	259	110	402
Wonderful	24	33	229	140	870
\pandas\tseries\	37	250	27	314	889
We're	47	0	232	144	451
questions	18	225	45	527	219
Attributes	69	162	191	61	837
continent	59	73	279	322	586
Ironically	50	264	292	210	747
hello-world	40	187	429	699	59
D'oh	24	200	493	504	991
FontManager	71	1	457	514	720
QWidgets	93	154	104	537	728
0.12.1	91	7	156	587	230
Chocolate	48	123	486	197	653
ax=ax2	46	39	73	505	649
ax=ax1	46	39	383	577	430
0.0-1.0	22	266	201	200	672
10000,100	21	223	385	196	252
problematic	88	152	301	618	120
2.16	85	174	274	297	399
prominent	59	23	138	387	394
finder	39	98	235	447	670
relevant_gages	53	139	42	250	814
as_matrix()	43	157	74	489	709
kdtree	72	165	15	152	570
question-	18	225	490	144	81
10^10	21	190	258	557	238
10^12	14	86	314	325	549
free()	3	188	447	570	450
Obvious	50	200	60	567	469
matplotlib.hist	42	14	297	171	709
verion	91	7	156	587	230
numpy-array	34	153	0	423	260
numpy.seterr()	50	37	301	618	625
knobs	13	23	138	118	394
skeptical	88	120	5	419	727
LATS	85	205	370	196	192
numpy-style	76	272	118	169	990
systematically	81	229	233	251	713
p_data	15	40	444	236	314
np.atleast_2d	42	30	286	74	263
new_spin	78	100	148	586	283
separately	2	21	233	251	338
collect	2	116	145	522	986
DOES	94	222	147	212	160
exploiting	76	272	118	633	990
Emacs	40	141	281	76	632
LagBin	48	123	486	551	779
read_sql_table	94	171	473	24	88
3x^2	96	201	18	173	13
sizey	68	32	18	28	62
numrows	34	205	251	162	927
U32	3	18	141	266	178
new-ish	84	7	2	301	321
Marek	4	121	264	252	552
matplotlib.delaunay	72	57	167	697	321
retry	67	122	156	664	376
.set_index()	43	157	72	683	73
\alpha	61	230	448	767	909
leftmost	78	263	25	122	979
minimize()	60	40	444	396	622
lowest	81	170	266	588	283
contrasting	88	23	233	203	338
numpy.random.poisson	20	93	132	396	162
Separately	57	235	392	450	451
B3	85	172	481	224	778
perpendicular	39	149	438	69	116
scipy.sparse.csc_matrix	34	292	64	348	218
refused	35	57	167	697	321
zombie	50	232	232	764	64
timespan	99	140	453	198	27
StackOverflow	18	225	45	527	509
refuses	3	215	491	699	888
exemple	57	235	342	450	927
min_85	81	6	279	766	573
pipeline	71	168	126	203	646
asserting	12	94	95	355	783
Ron	24	109	394	140	500
violins	5	13	32	19	714
Rob	4	121	264	646	500
result.params	41	174	177	396	201
MyArray	74	100	4	586	228
range	81	288	266	200	810
append_axes	5	13	388	558	518
3xNxM	34	77	0	404	943
complimentary	38	214	132	147	4
Rot	3	227	361	509	228
f.groupby	64	287	256	250	294
-dimensional	34	77	0	88	112
therein	35	193	19	387	371
32536365654	94	222	456	355	272
Downsample	34	21	275	203	694
pdfrw	93	61	315	97	537
InDays	53	139	51	455	496
restype	3	220	261	157	235
gcc4	55	128	293	52	56
ix_	42	30	286	74	368
+++	30	212	55	136	965
Pavel	4	121	394	646	500
.rebal_wgt	68	32	18	173	62
ellipse	39	149	438	93	116
rowN	68	32	154	545	62
ixj	34	188	396	404	77
impressed	13	120	212	739	727
.column2	68	32	431	67	62
rows	78	49	131	522	944
testing_matrix	44	205	154	196	357
question	18	225	490	472	81
long	47	59	392	91	604
stylesheets	93	80	315	767	909
ixs	68	195	13	617	486
lons	41	6	279	287	573
~isnan	27	269	431	28	945
twitter	71	246	303	60	92
xpt	41	35	289	200	397
deviations	81	214	132	783	454
memory-inefficient	88	188	118	334	604
beans	95	133	373	102	741
Logic	69	179	169	61	145
row0	68	201	18	67	69
row1	48	273	129	467	69
partitioning	81	42	145	203	102
row3	48	123	486	339	779
row4	78	144	195	178	637
list's	65	233	158	540	336
memmapped	10	188	122	702	450
row=	46	39	383	505	649
possition	39	149	438	93	116
diagrams	59	79	41	400	234
lon1	85	172	243	67	69
fluctuations	20	93	231	709	949
C's	14	291	142	608	549
lon2	85	172	243	67	69
Split-Apply-Combine	43	193	19	574	264
row-	47	21	131	251	694
entropies	85	172	472	467	192
\frac	61	230	448	767	909
user2	95	123	453	168	687
SimpleCV	13	57	167	697	732
well-supported	88	94	138	145	31
Attach	2	215	328	335	531
Arguments	69	162	191	61	837
Digging	50	193	393	35	564
dayPricesDf	78	49	338	276	182
steeper	39	170	235	122	116
dilated	22	126	7	709	670
rainbow	22	4	427	438	198
diurnal	81	147	450	101	675
-mtimeit	15	243	184	425	630
fun()	57	40	444	144	709
peace	57	235	342	37	451
backs	29	187	128	149	282
s.min()	85	172	481	67	221
3.25	54	108	23	315	399
Conway's	13	246	48	195	416
entrytype	53	139	51	417	775
nice	88	257	61	334	264
c.T	44	227	18	5	598
users	13	225	63	170	285
maximise	77	170	132	783	738
meaning	47	21	392	91	908
allowing	2	215	491	91	621
extra_compile_args	55	112	386	636	128
_BLOCK_MAX	3	291	141	266	969
posters	18	225	45	419	219
Audio	38	206	282	722	689
parse_dates=	52	185	28	121	793
Netbeans	40	57	301	699	954
Turned	50	264	292	210	747
departments	79	228	487	787	285
microsoft	67	163	152	241	850
pointplot	31	14	383	568	710
enpkg	67	112	276	57	51
ternary	65	111	95	18	272
33.33	20	214	425	507	176
Pyserial	40	246	429	609	600
ndarry	34	77	0	73	336
Hah	24	200	493	504	991
Forex	69	31	100	789	739
Based	4	17	416	478	552
Lattice	13	23	375	364	631
Department	30	298	368	429	428
0f}	86	129	287	479	347
cases	12	152	147	630	604
numpy.random.seed()	12	183	5	725	53
Sagemath	40	57	63	516	537
languages	13	26	65	2	730
include	57	229	457	37	451
]])]	90	54	257	10	744
49.x	20	43	231	709	562
fwiw	47	174	222	699	975
confirmation	11	225	389	567	53
mainstream	7	26	65	697	730
]]))	90	54	257	10	585
Had	50	264	292	210	747
P	85	201	370	5	192
]]);	68	54	257	10	585
IplImage	3	248	261	312	722
\xc2\xa0	52	185	443	36	209
5300	21	190	234	557	326
1063	44	292	280	5	218
_tkinter.TclError	40	187	259	764	796
MacTex	67	151	167	664	732
Killed	63	176	397	582	136
IntegrationWarning	63	44	199	582	136
img_buffer	3	90	246	0	969
Composer	7	163	152	241	850
npts	41	6	438	282	573
pd.factorize	64	150	418	72	131
disclaimer	18	225	45	419	53
concluded	50	264	292	210	747
rank-order	79	228	487	442	675
you'd	47	0	392	143	9
wrestling	50	120	114	35	727
endian-ness	3	291	85	608	44
fold	81	75	275	783	682
you'r	47	59	490	504	469
foll	78	49	233	347	927
acid	79	228	487	27	675
makers	57	40	444	32	604
XKCD	45	230	448	767	909
compat	35	122	156	292	376
unavailable	7	57	44	697	315
HDFStore.append	71	222	446	24	369
showcase	57	235	342	450	950
etime	6	68	456	276	910
alert_v	53	139	51	682	199
Image.py	37	250	475	205	461
occupation	79	78	173	101	955
chose	12	229	392	91	338
degree	39	170	231	93	116
Yup	24	200	493	504	991
wraps	76	94	491	174	417
monetary	14	86	314	325	549
explore	13	23	126	203	765
axes_grid	5	23	388	558	371
settling	50	232	232	407	769
Selection	69	162	191	61	837
numpy.random.RandomState()	31	40	444	725	720
larger	10	170	258	44	576
shades	22	4	427	438	198
shader	22	126	7	438	672
leaving	2	263	491	618	531
49.49781571	54	50	368	331	449
suggests	4	17	19	252	371
**-1	96	29	176	173	238
bias=False	45	219	334	269	709
TextBlob	86	89	163	36	838
shaded	59	117	433	32	198
suprising	10	59	118	225	863
up-to-date	67	151	210	351	104
np.tan	96	201	18	173	62
app	40	119	429	609	377
mystuff	65	27	158	648	526
StringIO()	15	135	44	735	957
apt	67	151	210	351	334
Own	48	271	337	185	502
improbable	61	152	443	355	625
api	35	23	138	9	398
Exit	30	271	128	764	954
vols	74	281	456	788	910
duck	88	94	479	145	53
pxc	78	144	195	276	944
bindings	7	26	63	2	398
DataFrame.to_csv	52	153	336	24	793
nditer	42	27	286	74	28
from	47	21	392	91	338
mllib	55	128	330	477	461
hypothetically	88	48	409	630	604
examination	4	116	342	573	59
]])	90	54	257	10	585
xx-small	86	226	448	134	906
d.DateOffset	68	287	300	679	997
df.TIMESTAMP	53	281	42	250	390
_one_	76	272	118	573	863
USERNAME	95	271	373	477	568
clever	88	257	61	675	327
Gui	93	187	104	537	105
writen	85	193	239	616	456
pdfpages	93	61	315	99	374
backslash	61	58	443	230	501
OpenSuse	84	7	167	301	321
Guy	30	271	282	102	340
Multiprocessing	38	179	169	445	145
numpy.random.choice()	42	27	14	313	709
sectionwise	39	206	495	199	71
df.max	64	269	403	65	48
raw_input	29	187	128	123	55
matplotlib.pyplot.figure	31	203	348	577	444
Dijkstra	39	43	235	152	102
columns	78	49	131	405	356
na_values=	52	185	376	85	971
finfo	14	291	142	325	549
numpy.cov()	60	219	472	742	485
centroiding	10	272	118	225	990
perms	85	172	108	5	192
re-set	5	148	457	335	844
inaccessible	2	215	181	514	720
Forests	77	168	186	705	353
Rewriting	76	272	65	169	730
cellText	41	288	162	200	906
assumptions	12	183	5	170	563
UTF-8	61	58	443	563	209
xmin	41	284	253	282	339
deepcopy	3	220	361	212	273
Scheme	13	26	126	118	398
linestyle	31	13	383	134	608
OO-style	31	23	138	97	195
Schema	13	229	126	203	260
Molly	24	121	394	140	500
struggles	50	232	301	167	769
100x100	34	77	258	45	943
23.3	54	108	23	429	931
struggled	50	264	393	75	564
data.keys()	65	233	158	522	526
restructured	34	77	328	799	187
timeframes	79	78	450	101	955
Reading	69	31	100	530	316
attend	11	225	143	170	922
tact	48	144	337	405	356
tack	6	263	456	706	36
RadViz	13	193	372	387	371
1880	99	204	338	332	995
somethin	47	48	61	424	360
aus_lacy	24	121	394	567	500
arduous	76	48	61	630	31
extremas	39	43	231	733	949
Customize	59	52	32	19	884
x_compat=True	5	148	363	558	844
d*d	44	194	137	704	598
takeaway	88	59	147	630	908
N-length	34	77	0	73	112
sanctioned	88	183	5	458	604
file-object	71	153	336	312	942
Amazingly	24	121	264	710	441
2008-08-05	54	186	119	158	126
Qobj	3	220	329	514	172
interpreted	61	215	328	98	260
numpy's	42	27	14	313	244
whilst	2	0	392	678	544
interpreter	40	141	281	76	632
unchecked	45	37	188	764	2
superior	12	17	134	552	612
split-apply-combine	43	193	372	387	219
Slicing	69	31	100	530	911
h2	92	172	481	107	211
w.r.t	81	170	462	44	576
IDW	72	165	15	235	570
holiday	99	140	318	109	94
google-api-python-client	91	122	156	587	230
Commenting	45	37	348	123	55
plt.axes()	46	203	348	577	430
medianNum	68	32	18	617	62
devel	35	151	167	499	594
3.29473	54	50	300	331	449
AutoCAD	93	61	214	571	537
d.values()	86	150	256	551	526
.arff	71	246	50	423	108
successor	7	26	63	9	398
test.dat	36	10	50	294	261
edit	57	200	490	567	81
powerfull	13	23	138	118	264
10.7.4	19	7	306	301	232
10.7.5	19	7	306	301	232
10.7.3	19	7	306	301	321
trimmed	57	263	342	618	781
softmax	77	168	186	705	646
Eliminating	69	162	191	574	739
cursive	45	230	448	767	909
20140101	99	140	453	155	687
Preferences	40	141	259	110	402
friends_df	48	144	195	787	502
seperated	61	49	452	539	501
Quantile	38	206	132	209	71
Python.h	67	176	152	696	305
initialisation	76	188	328	573	406
99.98066963	54	50	368	331	449
our	12	21	232	91	950
lookup()	10	116	145	573	863
mrcl	4	121	264	646	500
merged2	90	297	13	10	744
out	50	232	392	144	469
x_val	46	39	73	316	649
sentiment	79	228	487	480	285
sufficed	35	122	156	292	376
chaos	50	209	48	195	765
]'`	53	95	272	575	199
stratData	48	123	51	339	779
disaggregate	81	147	173	621	167
Unique	69	162	191	789	739
suffices	47	174	392	751	469
row-by-row	10	272	118	750	207
rotation_curve	41	205	177	107	397
WOW	24	33	229	140	870
get_val	48	281	486	339	779
eventname	95	174	373	185	496
Stupid	24	200	493	504	991
crop_stats.py	40	277	222	384	954
pixelated	22	61	381	99	593
Resampling	69	31	100	789	817
numpy.take()	2	37	14	15	709
BigFloat	47	57	162	699	888
N10	53	139	51	233	821
g	41	174	177	107	211
Xrange	10	160	274	323	655
.join	86	89	163	340	66
self.pca_data	74	204	251	196	336
linearized	77	98	458	324	738
Tks	24	109	229	444	870
no-index	55	112	276	57	128
hence	47	0	392	91	544
quadratically	81	170	409	44	576
]')	53	18	141	682	178
pd.MultiIndex.from_tuples	64	150	406	551	294
csc_matrix	44	292	64	348	218
value_counts	43	157	103	683	956
arange()	42	27	14	725	709
n-th	81	21	216	616	456
backend_ps.py	37	250	27	475	194
doesn't	47	0	491	143	621
RandomForestClassifier	77	168	186	705	646
priorita	44	227	228	0	357
unknown	47	21	199	91	702
priority	12	152	134	552	563
1500	21	223	234	557	252
655	54	50	368	429	428
650	21	223	154	196	252
bundling	84	57	167	697	321
Fits	2	21	328	167	338
dataseries	43	85	72	771	817
misunderstood	24	200	490	504	991
numpy-specific	88	257	61	675	612
tidbit	24	109	229	444	870
Database	71	171	303	60	88
150K	21	190	258	327	576
Trader	64	287	486	197	653
-method	31	1	388	399	879
316	54	3	101	187	158
retyping	88	257	61	334	612
succeeded	50	264	292	75	59
KDTree	72	165	15	152	570
150k	21	190	234	557	42
enought	18	225	490	739	81
list.index	65	233	158	540	640
id()	3	220	329	514	890
fstack-protector	55	128	293	52	56
.endswith	27	174	260	185	496
10-1	68	243	18	797	399
get_figure()	18	203	348	123	55
Peter	4	121	264	102	741
mathtex	61	230	448	86	909
Diego	24	271	114	407	852
tracts	79	228	487	101	167
plotQuadTree	29	203	128	236	444
clip	22	117	7	709	479
Anton	24	121	264	646	500
percall	60	193	19	429	314
Dfun	60	40	444	396	709
queryset	71	116	303	60	92
frompyfunc	42	27	14	313	244
y_coords	41	293	251	282	397
disjoint	81	43	131	546	944
clim	5	13	294	653	271
linked	4	193	19	252	552
cross_validation	77	168	186	705	646
Classifying	69	162	191	127	837
^=	27	260	431	18	945
pip3	67	151	327	232	334
pip2	67	112	276	57	137
\ufeff	61	5	443	563	209
Docs	35	193	19	738	114
^2	96	201	426	68	62
^3	96	201	356	173	62
hue=	95	39	260	505	858
scatter-matrix	2	265	342	347	356
Dock	40	141	281	764	796
ts.plot()	5	203	253	123	958
^-	68	181	42	211	624
mucked	50	232	301	618	120
unbearably	10	160	37	323	876
minor_axis	48	172	481	631	502
datafiles	71	153	50	423	108
^^	24	200	493	504	469
.as_matrix()	85	172	272	224	778
whl	67	151	470	604	104
1e14	5	148	32	19	844
Python33\Lib\	37	250	386	475	194
1e16	14	29	46	173	201
^T	85	201	426	704	62
1e10	21	190	234	391	252
^A	36	10	376	85	971
Panels	94	222	122	702	921
why	47	59	392	630	835
numpy.split	42	27	286	358	244
Gausspoints	41	6	251	107	192
libblas.so	67	132	44	499	315
untrusted	15	177	183	609	246
%reset	40	141	281	76	632
JPG	22	61	381	99	593
pipe	71	218	183	288	600
numpy.concatenate	42	30	286	74	595
hi	24	121	394	140	500
^n	96	201	426	560	142
oscillates	81	43	206	195	416
ho	86	129	117	185	262
Everybody	11	109	394	567	81
FORMAT	99	298	419	198	221
agreed	24	200	493	504	991
chapters	13	193	372	387	219
input_list	74	233	54	690	336
fear	50	59	114	630	469
axis=None	42	269	403	1	244
feat	11	109	114	444	469
pleased	11	120	212	739	727
subsections	34	116	145	706	986
nearer	14	170	314	391	84
ds2.groupby	27	297	431	234	945
150x	10	202	37	323	876
row_count	74	260	54	690	945
Beauvel	24	109	394	140	870
local	55	132	330	477	568
np.random.rand	75	243	385	425	484
Areas	38	162	191	209	837
GPL	7	163	63	516	850
cube	39	149	235	93	102
my_dataframe	27	260	431	234	945
numpy.random.multivariate_normal	77	219	132	147	4
Melt	69	162	191	789	739
GPU	7	51	345	445	166
Providing	57	235	463	37	766
GPS	39	73	279	766	573
Move	2	263	237	335	911
ITEM	48	123	486	197	502
GPy	67	151	327	499	732
avoidable	88	257	118	334	695
ascertain	88	229	392	424	563
cells	81	49	131	522	944
numeric.py	37	250	475	205	173
available	35	26	138	9	398
requirement	12	229	134	91	621
ID2	48	144	195	178	637
MplWidget	31	1	388	236	444
emulating	76	152	181	257	195
ID0	48	144	195	178	637
DataFrame.shift	43	157	403	65	709
Item_Id	48	144	195	178	637
sparsely	34	77	0	88	694
image_2	78	21	266	45	252
1.13	60	243	37	323	876
breakpoints	57	263	456	618	625
favor	88	152	5	415	606
g++	67	163	152	326	334
numpy.fromfunction	42	27	14	313	244
datacursor	46	39	363	592	649
SparseDataFrame	43	292	64	348	218
set_data()	29	13	128	199	627
bought	79	78	487	480	955
cythonising	88	17	5	458	53
ability	2	229	138	306	621
opening	71	153	50	423	364
joy	50	264	393	75	564
y_dates	90	297	13	239	995
60-90	59	288	433	32	198
DDD	95	298	335	168	497
job	88	257	61	630	264
Vector	38	206	241	743	353
joe	24	109	394	102	340
scipy.__version__	91	112	184	103	630
goal	12	21	134	203	950
df.Month	53	139	42	755	775
april	99	140	453	109	94
LCD	59	126	433	571	177
Meta	35	193	19	387	114
grounds	12	225	5	419	53
myagg	64	150	406	551	48
Misread	4	17	490	710	81
unclear	18	59	490	144	907
rpt	53	139	51	417	131
rpy	15	171	375	364	631
cxy	90	54	13	617	744
environments	67	151	210	351	137
BboxImage	93	13	388	134	54
Matplotlibs	31	154	104	51	728
11,000	21	190	234	557	42
rpm	67	151	327	232	334
D_values	74	233	54	690	526
unclean	2	49	456	405	517
1.55348	54	50	368	429	428
~2x	10	202	37	323	876
occured	63	37	301	582	769
subset=	64	47	406	631	294
decent	88	183	409	44	604
1.55344	30	50	368	429	428
responds	29	187	128	149	2
730	54	223	298	318	158
backwards-compatible	88	26	138	334	398
4000000	21	160	258	196	655
734	21	223	298	196	252
fracs	59	288	32	19	884
semaphore	40	218	183	764	625
porting	13	120	212	2	727
add_axes	5	284	255	558	518
gnibbler	24	109	394	444	469
traveling	79	78	206	407	955
general	88	257	147	630	612
IEP	40	141	281	241	632
Face	95	298	419	751	38
ensuring	2	215	134	91	621
remedied	29	215	60	799	187
iloc	43	111	115	369	227
January's	99	140	453	109	94
subsets	81	116	131	706	986
TextCtrl	61	187	328	98	260
~20	21	190	234	557	42
~25	21	160	234	557	655
stunning	12	59	222	252	908
post-hoc	2	229	457	335	338
el-get	55	132	352	477	568
columns=list	64	287	406	425	294
stats.norm.pdf	96	35	289	336	597
~	21	160	234	543	655
April	99	182	318	372	94
motif	78	144	195	27	944
ringing	20	93	231	709	562
thus	2	215	392	91	338
N*N	34	77	370	88	943
N*M	44	194	441	88	589
N*Q	90	293	13	10	744
examle	93	187	495	51	54
lightweight	88	26	138	118	959
bitwise_xor	3	44	460	15	341
perhaps	47	0	392	630	835
maddening	50	57	301	664	954
connection	71	171	473	128	88
list_list_values	74	233	54	690	486
geographical	39	73	279	766	586
df1.join	49	47	406	631	445
Insights	13	173	126	203	765
ddply	43	265	375	364	631
slave	13	119	183	609	377
T.T	85	194	280	704	485
heapsort	35	122	349	36	640
disagree	18	225	490	419	53
|Sx	86	129	465	137	178
Query	69	171	303	128	88
laborious	50	232	114	35	53
np.apply_along_axis()	42	27	14	313	244
\spyderlib\widgets\externalshell\	37	250	27	475	889
Y-values	81	43	206	167	944
two-tuple	78	233	158	27	336
correspondent	78	21	266	98	944
afplot	48	281	486	339	779
banging	50	264	114	407	64
FigureCanvasMac	63	44	460	172	787
explicilty	45	13	457	592	906
Curve_fit	77	98	458	742	438
pre-filter	43	157	72	306	36
excessive	10	272	118	334	863
heavily	76	272	416	169	394
should've	24	200	493	210	747
ax.bar()	2	215	328	592	262
scipy.linalg.lstsq	60	124	102	324	438
EDITS	30	235	342	450	560
):	47	235	342	347	560
tck	72	165	177	282	397
ax2.legend	46	226	494	46	348
pythonw	40	141	429	76	632
pythons	47	0	392	735	439
py3k	35	122	76	9	376
Google's	13	78	450	762	746
anim.save	36	203	136	123	942
jaro	85	181	373	455	496
guts	76	232	138	257	417
a.mean()	27	269	403	65	945
usage	10	127	355	159	359
host=	63	176	136	36	136
python-	71	57	233	251	732
Pearson	77	270	472	783	662
provisions	76	42	235	552	621
python*	55	112	330	477	568
element-wise	34	194	137	18	734
execute	40	37	429	699	954
python=	91	112	276	57	137
Off-topic	27	174	117	751	486
facial	39	126	7	93	670
press	29	187	188	427	2
redesign	76	272	232	306	360
python3	67	112	276	57	791
3-scale	61	230	86	86	374
))	75	32	385	425	486
check-out	78	43	195	588	283
pd.groupby()	43	265	233	251	564
safest	88	48	134	675	327
DOUBLE	61	58	443	539	119
Within	47	0	392	678	544
EDIT1	30	235	342	347	560
EDIT3	4	17	254	347	560
EDIT2	4	235	342	450	560
pcolormesh	22	13	294	199	627
EDIT4	24	109	330	567	315
Converting	69	31	100	530	316
xml-rpc	76	51	65	2	730
disposing	88	232	145	573	863
dvi	93	61	315	99	374
wonders	11	109	229	444	469
parity	4	17	254	710	741
exceed	21	170	409	44	576
Sub	48	144	195	178	475
smoothly	59	232	495	167	59
Sun	99	140	453	372	256
Sum	69	179	169	264	698
Appended	78	49	131	522	944
P.dot	44	194	137	704	598
np.bitwise_and	27	29	137	18	866
df.high	78	144	338	616	456
np.nanmean	6	269	12	53	910
subok=True	3	227	361	157	969
salutations	95	181	227	102	340
tprep	96	201	18	173	62
Preview	93	61	315	99	374
buildout	67	57	167	499	732
synchronize	71	218	183	359	959
Rectangle	31	1	388	399	879
browser	93	141	90	769	537
time_stamp	79	144	487	787	285
ripped	13	193	372	387	552
sample.txt	36	10	50	384	261
semi-random	81	21	266	546	562
acronym	95	228	373	480	852
numpy.py	15	132	352	384	305
MyDF	94	222	74	548	172
INCLUDE	55	132	352	113	137
paste	57	239	463	769	975
rare	88	152	5	334	604
carried	50	43	114	35	187
carries	12	246	206	203	765
carrier	39	228	206	322	949
constructor	3	220	329	514	720
.html	71	61	50	99	374
matplotlib.pyplot.hist2d	22	13	495	199	627
desires	12	37	222	170	621
outset	2	116	145	522	338
polished	88	59	5	334	604
strangeness	50	193	342	450	371
Gradient	38	206	282	722	71
numpy.int8	3	291	141	266	969
weather	79	73	214	60	675
promise	18	225	232	419	53
Dwell	95	138	379	789	497
Ajean	24	121	394	646	500
ind1	90	293	26	586	146
unsized	63	44	460	172	341
Ami	24	121	264	646	500
propery	31	215	388	592	879
Finance	38	78	450	762	746
suburbs	79	228	487	27	682
transfer	71	246	303	203	92
skimage.io.imread	22	248	336	141	942
spiral	39	170	231	733	301
2014-12-04	99	69	119	525	256
Amy	24	121	264	646	500
Controlling	59	52	237	209	621
Amp	96	201	426	617	597
Execution	30	212	182	343	136
0.13.2	91	7	417	587	230
0.13.3	91	7	417	587	230
0.13.0	91	122	156	587	626
0.13.1	91	122	156	587	626
writeable	3	220	447	570	450
ST.INT.ARVL_II	85	201	370	67	142
aircraft	39	73	279	322	586
my_array.dtype	3	174	147	91	835
Pseudo	57	235	342	347	560
volume	81	147	450	101	955
df.C.values	42	30	286	74	146
marginals	81	214	132	147	4
np.mod	27	100	370	509	486
Consumer	71	49	50	60	108
populates	2	215	491	174	516
myNumpyArray	74	297	4	509	228
Renderer	93	1	104	537	728
C_ClfGtLabels	65	233	158	404	526
cake	88	232	232	334	540
pip3.4	67	112	327	499	334
Descent	38	206	282	722	71
horrific	88	257	61	675	695
intimidating	13	193	138	118	371
kind=	46	14	383	505	649
remove	2	263	457	335	180
column_name	53	95	115	339	779
Geometric	38	206	282	722	71
testfun	27	100	148	772	201
d4	90	172	481	224	778
cuepos	48	144	195	178	637
Remedy	67	57	167	499	732
.add()	43	157	14	15	709
grouped-by	43	265	75	771	739
MultiIndex.from_product()	43	265	72	771	356
incredibly	88	59	114	334	604
MathSys	15	57	65	334	957
pandas.plot	5	148	383	592	844
kinds	13	152	126	118	606
lmjohns3	24	121	394	646	500
np.loadtxt	36	10	336	712	261
Future	98	122	156	9	376
Karim	37	128	52	475	194
re-installing	67	151	327	232	104
Spyder	40	141	281	76	632
cliff	39	126	235	93	949
pd.Panel	64	150	405	551	211
auxiliary	76	116	181	402	195
2015-01-23	6	18	162	682	199
u1	86	18	141	266	178
m.T	44	194	280	5	485
Site	95	271	159	519	38
activity_data	53	139	51	417	775
data-units	5	288	284	245	479
Summation	69	179	169	264	145
end-of-line	61	58	452	539	501
Laplacian	20	93	248	191	989
prefix	61	112	276	57	128
del2	60	296	382	742	59
fig2	46	203	255	577	430
fig3	2	203	348	577	430
x.tolist()	65	233	158	540	526
fig1	46	203	255	577	430
Pandas-esque	88	257	61	675	327
pandas.core.frame.DataFrame	3	220	460	514	3
60,80,100	96	266	18	8	62
payoff	10	202	258	44	576
_might_	35	232	220	292	439
length-2	34	77	0	73	336
length-1	63	44	199	317	341
unanswered	18	15	45	472	922
length-4	34	77	0	73	694
Efficiency	38	179	169	61	145
my_filename	90	95	115	239	227
valeur	96	266	4	391	192
numpy.fromfile	36	153	336	423	306
time.sleep	29	203	128	123	55
retail	79	78	173	276	955
regional	79	228	487	480	167
cilinder	39	126	438	93	177
figs	5	203	348	577	195
)]	75	32	13	545	585
differentiated	81	21	131	522	944
prize	18	225	114	407	852
reformatted	57	235	342	450	81
succession	34	21	275	167	986
reframe	18	225	490	472	81
subindex	48	47	337	276	502
Case2	78	144	419	198	944
Evidently	12	152	147	678	621
orientate	2	229	457	306	884
struct.error	63	44	199	157	341
YYY	99	268	395	198	221
budget	79	78	487	480	955
myusername	55	128	52	477	568
sklearn.cluster	15	168	186	705	353
NO2	95	298	335	168	221
MultIndex	43	265	75	771	921
this'll	88	257	61	334	469
QGIS	93	57	214	537	537
B2C	95	181	373	455	340
np's	47	59	392	144	907
negates	76	111	95	564	734
.extract	86	89	163	340	66
C-extension	76	51	65	169	730
nx.draw()	31	13	388	592	879
subframe	48	157	486	276	637
negated	61	100	95	355	702
increasing	81	170	270	44	576
erros	12	152	147	284	621
error	63	44	199	582	888
Uploading	38	246	58	428	765
interdependent	12	21	131	588	604
edges.data	27	260	431	234	945
gmres	60	194	102	431	751
%load	40	141	281	76	632
nucleotides	61	49	338	27	944
scipy.signal.correlate	42	193	19	313	371
substance	18	147	490	170	81
i's	74	195	108	522	577
i'd	47	232	232	143	338
drop_duplicate()	43	265	456	405	356
Choosing	69	31	100	555	911
NOT	94	212	55	136	965
xTickMarks	74	100	158	522	336
Alternative	4	17	254	313	9
NOW	24	200	493	504	469
Compared	10	202	37	323	876
sns.boxplot	64	95	74	551	779
re-arrange	2	116	145	566	520
c-api	76	51	65	257	417
explained	4	193	19	252	371
precincts	79	144	173	197	653
\xef\xbb\xbf	61	58	443	539	501
descending	78	144	337	708	640
txt	71	153	50	423	108
txs	24	109	394	140	870
cheating	88	257	61	334	695
.labels	31	220	444	514	172
spoke	24	200	114	407	53
u*	96	201	18	173	62
sstate	85	194	280	5	192
sub-group	78	144	195	276	944
cPickle	71	153	336	359	306
relax	12	42	409	44	563
successful	50	264	292	75	59
AVERAGE	64	287	449	48	48
classifies	81	168	239	705	162
hurt	88	272	118	334	53
OLTPSOURCE	85	212	419	467	698
tying	2	116	145	706	986
Coordinate	38	162	191	61	837
rJython	15	57	167	499	732
ActiveTcl	67	151	167	499	732
addon	7	26	65	2	730
complains	63	44	199	582	888
read_sql_query	52	171	473	24	88
up2	90	297	289	239	227
load_data	15	256	319	742	957
year-month	48	144	337	276	653
x.time()	64	150	10	772	838
table-like	71	153	122	702	457
Sigh	50	200	493	504	469
myfunc	64	150	403	65	48
organized	2	116	145	98	927
v1.5.1	91	7	156	587	230
Brian	24	121	264	102	741
interpolators	72	165	15	235	570
fromfile()	3	188	361	404	235
organizes	13	120	212	203	727
DPI	22	61	284	245	619
preferably	47	48	145	203	360
re-arranging	34	116	145	566	694
minitab	77	98	458	742	738
complaining	63	59	199	582	888
NpyIter	13	26	65	2	730
win7	19	7	432	301	644
i686	84	186	33	590	789
machine	84	119	2	410	321
df.set_index	64	287	406	631	294
methodology	12	183	389	630	834
Atom	86	174	117	751	262
keep=	48	123	486	631	82
numpy.ascontiguousarray	42	227	54	509	228
preferable	88	257	61	334	612
wolfram	22	126	495	199	627
np.unravel_index	42	30	286	358	146
v1.5.x	91	122	167	587	230
major_axis	48	123	486	631	502
input-output	57	235	131	450	783
epilib	15	135	319	777	957
diagram	59	52	495	400	177
plyr	13	296	375	364	631
os.path	15	135	319	777	873
2025	95	298	368	158	277
key_press_event	29	187	128	149	282
newax	46	203	348	577	430
marginalize	81	214	173	784	603
effective	88	257	61	675	612
wins	10	202	37	534	871
GTKCairo	93	80	315	435	591
tricontour	31	13	388	199	627
Haskell	7	51	65	2	730
specks	22	126	7	709	562
Another	47	0	134	678	9
keeps	2	215	491	174	769
wind	81	6	206	93	949
negations	61	49	50	27	854
__	15	135	181	777	195
restriction	12	229	134	552	908
Requirements	30	271	19	281	114
vars	2	174	181	777	195
_X	48	123	486	339	502
vary	81	21	416	44	576
873	54	298	298	338	221
vara	74	293	54	690	228
1-10	78	288	338	200	456
two-level	43	265	75	771	356
varb	75	195	54	690	486
diagonally	78	43	25	122	979
TRUE	6	100	291	302	522
v_i	85	201	426	560	142
80.0	96	266	324	695	252
_y	49	47	486	363	445
directional	39	149	41	93	177
rankings	79	183	131	534	783
closed=	49	85	449	48	817
_t	3	67	261	146	235
diffrent	69	21	237	61	71
_r	22	4	294	653	271
_p	68	227	385	0	969
_m	74	293	54	690	146
Harris	38	224	282	102	689
_f	3	67	261	157	622
hidden	59	152	60	618	120
_a	88	174	163	185	337
workhorse	71	26	65	423	108
var1	48	123	272	197	653
v_1	85	205	370	5	192
var3	48	123	486	197	653
var2	48	123	272	339	653
enrich	2	229	456	405	356
pyQt	93	154	104	537	728
-110	54	223	324	200	252
slicing	42	111	396	369	368
fontsize=None	46	35	73	505	649
MRI	13	246	58	428	765
ebarr	24	109	394	140	870
scipy.array	3	227	361	489	172
silver	95	150	114	480	852
structural	13	42	48	552	765
represents	81	21	239	487	702
repaint	29	187	188	149	282
queues	71	218	183	445	803
DateAr	48	144	195	787	637
_2	48	123	486	339	502
_1	48	123	486	339	497
dumps	71	153	183	359	457
\x00	61	58	443	539	501
API	35	26	138	257	398
APL	13	120	212	118	730
255,255,255	22	4	201	438	672
h5py	71	153	446	702	306
Mouse	38	162	259	291	837
misspellings	79	228	487	706	986
32x32	22	77	381	45	943
preceded	61	58	452	539	501
financial	79	78	450	762	746
250,000	21	190	234	557	42
displacement	39	149	438	93	116
swaths	12	188	122	203	863
datacursormode	60	296	375	742	631
ameliorate	59	117	235	630	177
overwrite	2	229	457	335	275
multi-threading	7	51	345	445	166
numpy.correlate()	60	26	65	742	396
2013-01-01	99	69	119	155	256
10Min	64	287	449	48	48
dst	22	90	246	141	722
basedir	55	132	352	113	568
sms	78	288	266	391	421
convenience	76	94	134	458	417
smp	96	195	370	391	192
print_fig	29	203	348	577	273
boston.data	44	205	154	196	357
0,0,255	68	90	201	200	672
OpenShift	91	57	167	664	732
sma	3	40	444	15	709
165340	78	100	216	391	283
Dummy	30	162	191	347	560
gunicorn	40	218	183	609	377
assured	12	152	147	618	908
09:30	99	253	119	525	256
x_locs	74	297	26	509	228
Lines	69	162	191	209	837
University	38	224	282	94	689
midpoint	81	159	266	104	116
inscribe	39	117	284	245	479
Paired	22	4	294	653	271
dependancies	67	151	327	232	334
sensors	79	228	206	101	675
mimic	88	23	375	364	631
auto-correlation	20	93	472	191	344
district	79	228	487	168	675
yaxis	5	148	32	19	884
Footnote	74	174	54	509	262
.to_sql()	71	171	473	128	88
ds2	74	192	108	586	681
sm2	14	291	46	325	549
heading	61	49	452	539	517
Human	95	271	335	519	858
reference_array	78	100	131	522	944
Dateutil	19	7	417	301	644
necessity	76	272	118	573	863
"))	86	129	260	455	204
")'	86	129	485	289	858
subtlety	12	152	134	552	606
Please	57	235	463	37	451
Oriented	38	162	191	61	837
instruct	47	229	457	335	338
179	54	3	340	297	158
178	54	3	298	318	158
177	63	44	199	582	858
176	54	3	298	187	158
175	54	3	101	297	399
174	54	3	274	297	158
173	54	3	101	297	399
172	21	160	274	297	655
171	54	3	298	187	158
170	21	223	298	318	252
Website	30	271	159	519	114
multiprecision	7	51	142	2	730
bottom-up	22	117	25	122	714
Amended	24	200	493	504	991
Geotiff	71	248	381	571	593
Cel	24	109	394	567	500
axhline	5	148	253	558	844
Padding	69	31	100	530	911
Item2	48	123	486	339	497
listed	47	193	19	252	371
to_sparse	10	202	88	323	581
raws	74	233	54	529	526
listen	29	218	128	149	2
collapse	34	116	145	566	986
Transformed	69	206	145	127	316
predictably	2	37	223	167	59
heterogenous	71	94	122	702	457
frowned	4	225	45	527	195
")`	86	129	260	185	496
wisdom	11	120	5	419	53
max_val	96	266	266	391	283
predictable	12	183	409	44	563
legally	47	229	392	91	835
PyTable	71	171	303	60	739
Beautiful	24	33	229	140	870
date_format	52	185	28	24	793
17M	47	0	392	91	338
point-by-point	34	194	275	588	734
iteration	10	116	118	573	207
code_obj	37	250	117	187	194
")]	86	129	260	455	496
Conjugate	77	42	458	279	905
rects	46	39	289	592	649
monkeypatching	76	94	118	257	417
recheck	18	200	490	567	81
10min	79	85	449	48	817
entail	2	116	145	573	531
MyClasses	74	220	329	768	444
1294531200000	54	50	368	158	277
aapl	48	78	486	762	746
totalIDs	78	100	131	522	944
elem	74	195	54	690	577
parsers	61	153	68	423	561
Williams	38	224	282	94	689
Optimizing	38	179	169	264	145
Dataframe2	99	140	318	109	94
company.idx	37	10	386	475	194
person	79	228	487	480	285
responsible	2	152	60	257	621
eagerly	2	59	147	91	908
Band	95	89	373	339	682
causing	50	37	301	618	120
person_id	48	144	405	178	637
pylab.poly1d	59	52	495	51	177
cv2.imread()	22	248	381	571	722
paintbrush	20	126	7	709	562
array.astype	3	18	141	266	969
Logit	77	168	186	341	443
%d-%m-%y	86	274	465	679	151
Wish	24	109	229	444	387
Tweets	79	228	159	787	502
x.replace	86	89	10	772	838
na.rm	27	260	431	28	945
letter	61	49	443	86	517
seaborn.apionly	15	135	319	777	823
retaining	2	116	457	405	531
Login	48	144	337	276	502
Ami's	4	17	254	710	441
Typical	12	21	131	347	560
%d-%m-%Y	86	274	465	679	151
Whats	47	48	445	424	835
tridimensional	85	6	251	88	943
professor	13	120	48	195	852
Kingston	4	121	264	646	500
detectors	78	43	266	391	283
lpr	45	129	136	36	906
df.duplicated	64	47	418	548	131
Client	79	271	159	519	38
max_time	27	260	431	234	945
np.arccos	96	29	137	173	598
bomb	24	232	355	444	863
.mnky	24	109	394	140	870
gauge	99	147	284	20	203
shuffling	34	116	145	566	520
ment	30	174	373	185	469
menu	40	141	371	76	402
topological	12	43	235	93	234
theme	59	52	393	51	796
horizontalalignment	5	226	30	134	348
specify	2	229	457	306	338
population	81	214	132	783	162
set_xlim	5	284	322	558	958
4.00	54	54	324	397	421
random.uniform	96	29	81	725	484
numpy.apply_along_axis()	42	27	14	313	244
width=20	46	39	73	505	649
plt.imshow	46	36	294	653	488
data.ravel()	75	205	289	196	357
fig.add_axes	46	284	255	577	430
ambigous	78	94	147	355	908
reversal	42	30	26	566	520
new	2	116	328	335	180
Piece	38	162	191	281	837
mpl_connect	29	187	104	149	282
postactivate	55	132	352	113	568
WELL01	30	50	368	429	428
hspace=	5	284	253	757	339
12125.0	54	108	23	331	931
0-indexing	24	200	493	504	991
Clearly	47	59	392	678	544
respond	18	15	128	764	2
traverse	2	116	145	522	207
mandatory	47	215	147	91	621
disaster	13	183	235	195	765
fair	88	272	5	419	53
DMG	40	57	167	697	732
Segfault	84	57	167	697	321
modelled	39	126	206	203	702
EPD64.framework	55	128	52	477	56
fail	47	37	301	699	888
best	88	48	61	675	327
multindex	43	265	75	634	736
X_train	44	256	251	668	994
Cust	48	123	486	339	779
myFunc	27	40	177	396	622
score	79	228	487	480	285
boiler-plate	88	272	5	334	604
retrive	2	116	303	706	356
edgecolors=	46	226	73	316	488
conceptual	12	183	5	419	606
preserve	2	229	457	335	621
Settings	38	141	259	110	402
carbon	39	126	206	766	949
angling	5	148	32	179	884
outcome	57	235	342	450	950
Logs	55	128	330	477	372
30mins	79	147	450	101	675
df.combine_first	64	47	406	548	73
adapter	71	171	473	128	88
conclusions	18	225	5	419	219
PSF	7	26	63	9	398
PSD	20	93	425	191	344
tidyr	76	296	375	364	631
up-front	88	188	118	702	863
MyValue	48	123	486	197	497
naics.indnaics	53	139	51	448	821
adapted	4	235	342	478	552
PST	99	140	318	109	94
vain	50	264	292	75	59
25%	21	160	37	323	176
user1827356	4	121	264	710	441
bash_profile	67	132	352	113	798
258	54	3	298	187	158
numpy.uint64	3	291	141	266	969
Ohio	95	123	148	448	821
252	54	186	298	318	811
253	54	3	298	187	158
250	21	223	234	557	252
251	54	266	298	318	158
256	21	223	46	45	252
257	37	3	135	187	158
254	54	3	398	318	158
255	22	90	201	438	672
penalize	12	183	409	44	563
contestants	76	183	258	169	734
asmeurer	24	109	394	567	500
chrome	40	141	281	769	632
12GB	21	127	355	159	359
chroma	22	93	7	438	672
R-like	13	257	375	118	612
extraction	71	168	186	203	646
returnsDf.iloc	90	297	13	239	744
pylabs	93	187	495	537	537
tutorials	13	193	372	75	704
Pipeline	77	168	186	705	646
25k	21	190	234	557	42
life	11	120	114	144	727
writting	50	120	212	739	907
na_rep=	86	129	376	85	369
catchment	39	149	279	733	573
Concrete	57	235	342	450	950
25x	10	202	37	323	876
lift	59	154	188	427	2
sub-arrays	34	77	0	522	694
truncate_colormap	81	170	294	245	576
eP_mean	53	139	42	417	775
Simplified	57	235	342	450	766
8-core	84	127	2	410	580
discretize	81	214	270	733	603
filename=	36	129	136	36	906
text()	5	13	244	558	518
a25	86	18	141	36	178
pd.unique	65	233	158	540	526
fig.text()	59	52	457	51	518
numpy.linalg.norm	60	269	403	313	598
obeying	31	13	383	592	709
code**	57	235	463	37	451
Capitan	19	7	306	301	232
Capital	95	271	373	686	517
bitstrings	76	94	122	404	863
sells	79	78	487	101	955
trusted	7	57	5	697	53
np.tensordot()	42	27	14	313	368
emergency	79	49	232	167	769
format	61	153	50	423	260
Python2.7	19	7	417	13	644
Python2.6	19	7	417	301	644
end-goal	88	59	392	630	907
X*Y	44	205	251	5	598
restaurant	79	228	487	480	285
fairly	88	59	126	334	604
0.610	54	186	300	797	139
permit	76	152	147	9	621
tops	59	117	29	32	116
filenames	65	233	489	27	854
a2d	74	100	108	586	283
file.seek()	47	232	457	306	439
scipy.spatial.KDTree	72	165	15	152	570
.drop	64	150	406	551	48
which=	46	226	494	316	348
Python2.x	65	111	81	735	311
equispaced	72	165	270	733	301
suffering	50	152	60	618	120
Dataframe	69	265	191	789	739
18.381	86	129	465	211	496
Plumbers	54	223	101	797	139
abs_val	53	281	272	339	199
GEOS	67	151	327	326	104
opinions	18	225	45	527	219
kron	42	30	286	74	598
Notebooks	40	141	281	76	632
whatnot	76	232	457	35	394
contact_id	48	123	486	197	653
Mapping	69	31	100	530	911
disguise	76	94	65	145	908
tilda	6	260	95	18	272
tilde	61	111	95	18	272
waht	74	174	117	424	835
find_inf	15	135	44	777	823
.lastqu	90	32	13	545	744
animation.FuncAnimation()	29	40	444	201	406
llcrnrlat=	46	39	189	316	649
Normalise	38	206	169	264	71
Xarr	57	225	490	37	451
Framework	84	163	63	241	850
collections	31	1	158	399	234
step2	85	174	4	751	262
matplotlib.patheffects	15	135	319	699	823
BEFORE	29	187	128	335	180
Apart	4	0	392	478	544
1158	68	35	289	46	810
total_seconds	43	63	460	172	787
1157	46	35	117	187	858
O.k.	24	121	394	567	81
1150	54	223	101	797	692
pool.py	37	250	27	475	194
possibly	47	0	392	630	338
Length	63	44	199	582	914
sorting	43	116	337	708	640
ind2sub	34	293	108	586	77
birth	48	281	486	788	687
unique	78	144	195	522	944
tupples	34	77	0	73	336
massively	10	272	118	44	576
d	74	174	177	107	211
county	79	228	487	168	675
articulated	18	225	490	419	81
MinVec	74	100	4	509	228
OI	95	298	419	467	497
CXX	55	128	293	52	56
%Y-%m	86	274	10	772	838
getsizeof	14	291	46	325	549
steps	47	21	392	167	338
multi-indices	43	265	75	706	356
Recover	38	246	495	209	54
obser	78	204	266	586	47
AC	78	204	419	168	497
geophysical	39	126	214	93	949
\xff	86	129	136	620	178
truncated	14	21	328	98	260
OC	24	109	167	697	741
klepto	71	153	183	359	457
truncates	14	291	162	325	260
Basics	35	193	19	387	114
matplotlib.colors.rgb_to_hsv	74	174	4	509	228
Qtconsole	40	141	281	76	632
left-	34	194	25	122	979
fov	27	174	117	751	262
Profiling	10	277	37	225	169
.total_seconds()	53	274	68	72	390
for	47	0	392	91	338
space-efficient	88	257	122	675	612
circumvent	2	48	60	799	360
fox	95	181	373	730	497
reptilicus	4	121	264	697	500
fog	95	117	335	36	796
particularity	59	117	235	51	177
umm	27	174	493	504	835
foo	74	174	74	185	262
Keith	4	121	264	102	741
lines.linewidth	45	226	494	134	608
Veedrac	4	121	264	646	500
SciKit-Learn	7	57	167	697	732
8.0	96	108	96	579	421
6,000	21	190	234	557	655
------------------------------------	30	174	117	751	560
Thing	88	271	5	145	695
shifting	2	116	275	566	603
sys.getdlopenflags()	45	112	276	499	315
Think	47	0	392	678	544
PSID	13	239	50	585	604
libpng-devel	67	151	327	232	334
matlab-style	31	94	147	145	195
dollars	79	78	487	480	955
summarise	79	116	145	706	356
despair	50	232	393	257	417
abig	74	195	26	212	273
.msi	67	151	470	604	104
numpy.uint8	3	291	141	266	969
store.keys()	65	233	158	750	207
pylab.legend	31	13	383	592	879
Missed	24	200	493	504	991
Qgis	91	57	167	697	732
vlookup	43	265	375	364	356
implications	76	272	134	552	606
pixel's	22	126	239	438	672
reducing	10	170	409	44	576
unambiguous	88	152	147	145	908
sigmoid_function	77	124	458	396	738
combinatorics	12	42	235	630	84
one-time	76	272	118	573	863
avail	50	264	393	75	564
width	5	288	284	245	479
adminArea3	53	123	272	448	682
physicists	11	120	5	419	53
step-by-step	11	173	143	284	237
overhead	10	272	118	225	990
panel2	31	154	233	427	2
happy	11	120	212	419	907
ecolor=	46	39	73	316	649
python26	67	132	352	113	137
quantity	81	214	275	783	603
Python27\Scripts\	37	132	386	475	305
simplifications	76	42	65	169	84
refcount	29	188	447	570	450
0-23	99	140	66	198	687
hemisphere	39	149	438	93	116
bounce	18	232	232	609	600
d.shape	90	54	257	10	744
sub2ind	60	296	375	742	631
calc	27	29	275	784	603
time-based	81	147	449	48	817
tell	47	59	143	144	835
discretized	20	93	270	147	4
Engineering	38	224	282	519	38
lays	2	215	328	98	187
panels	59	52	233	51	986
feet	81	228	266	101	675
8.6	84	7	167	301	321
proud	18	120	212	739	727
proved	88	257	5	334	612
numba.jit	76	51	65	169	915
Depending	47	0	416	678	544
tournament	79	144	487	480	285
proven	77	42	5	630	905
Keith's	4	17	254	710	81
proves	10	202	37	534	990
exist	47	229	392	91	338
Initializing	69	31	100	530	911
accounting	81	116	275	44	576
nx1	34	77	251	88	943
numpy.histogram()	42	27	297	171	542
nx3	34	77	0	73	943
nx2	34	77	0	88	943
id_col	64	150	486	551	779
rowsum	74	100	54	522	228
AM	99	69	318	525	256
actor	79	228	206	167	702
unambiguously	61	49	162	514	260
sampf	96	266	18	391	62
yefremat	55	128	52	477	568
200ms	21	160	355	323	655
ft2build.h	55	132	352	696	798
developers	35	225	220	71	106
temp_g	74	195	4	586	228
NIST	81	49	50	450	108
train_targets	74	293	4	509	228
demonstrative	57	235	463	37	607
substract	78	140	275	198	603
invested	13	120	212	35	727
Pxx	20	93	425	336	344
reorganization	76	116	145	573	612
a*x	85	201	426	560	13
re-bin	59	229	457	306	603
shape()	42	40	14	15	709
*10^7	78	204	46	391	283
nxm	34	77	251	88	943
nxn	34	77	0	88	943
ndice	44	205	370	196	192
ldata	74	233	158	540	336
elyase's	43	17	456	341	443
NetCDF4	71	26	214	60	398
np.linalg.eig	44	194	280	704	598
test_df	48	95	115	72	779
index-column	79	144	195	787	944
scipy.signal.lfilter	60	296	458	313	396
drastically	10	272	409	44	576
spaced	81	288	270	546	301
viceversa	34	100	95	566	520
dimensionality	34	77	0	73	694
ver	91	7	417	13	230
matplotlib.tri.Triangulation	72	165	15	152	570
blurriness	12	170	409	709	562
draw_networkx_edge_labels	65	233	158	592	526
Gonna	24	200	493	567	870
vey	24	200	394	567	469
sparse.csr_matrix	44	292	64	348	218
Phew	24	109	229	140	870
vec	74	293	4	509	228
scipy.stats.rv_continuous	60	48	457	306	439
vel	41	6	177	107	211
df2.ix	90	139	13	417	744
yerr	46	14	383	592	649
1294444800000	54	50	368	158	277
float96	14	291	142	608	44
two-way	38	206	282	722	71
Allows	47	59	392	91	621
matplotlib._path	15	135	319	777	823
5min	99	147	449	48	817
92.6	54	3	101	797	139
Experimental	12	183	409	44	604
07:00	99	69	119	525	256
IndexError	63	44	199	582	888
solves	4	17	38	799	81
solver	60	98	38	279	809
1-by-28-by-28	34	77	0	73	943
homebrewed	13	26	63	697	321
numpy.logical_and()	42	94	14	15	866
solved	4	264	60	799	81
Mayavi2	47	48	495	199	177
2.67	10	202	274	297	876
datenum	75	174	289	46	810
PYMC3	77	168	186	705	443
prevent	2	152	457	618	625
fff	53	123	272	250	199
missmatch	47	21	301	546	888
2014-12-14	54	69	119	158	126
Failed	63	176	397	696	136
pd.read_clipboard()	43	47	74	683	975
05:00	99	69	119	525	256
synthesis	13	224	48	195	765
educate	11	225	143	419	53
listcomps	10	202	37	323	876
cleanliness	47	229	392	91	338
current	2	215	342	335	180
u'no	63	44	199	582	814
True	27	100	95	18	866
Table1	30	212	55	136	965
np.ma.masked_where	27	259	211	41	945
dropdown	40	154	259	427	402
obscures	12	152	134	458	195
Nulls	6	49	456	789	739
StringMethods	63	44	460	172	787
Hahaha	24	200	493	444	870
Spearman	77	270	472	783	662
xpdf	45	80	315	664	315
ax.yaxis.grid	46	226	334	269	348
studied	13	120	393	75	587
wherever	47	0	392	355	338
commonly	13	26	138	118	908
Colorbars	31	13	388	592	879
Axes3D.plot_surface	46	36	294	653	627
immgen	3	220	74	157	314
StackExchange	18	225	45	527	509
studies	13	246	126	195	765
reclaim	29	188	447	570	450
inversed	2	100	216	522	283
love	11	173	389	444	53
`'	61	129	465	575	906
colorjh	90	297	115	239	227
`)	47	215	392	91	9
bloody	11	120	212	739	727
Attaching	69	31	495	209	92
ips	78	140	338	198	326
BSD-licensed	13	26	63	643	594
traversing	34	116	145	573	207
ipy	40	141	429	76	632
PsychoPy	71	248	60	571	260
2.6.x	67	57	167	499	478
b.max()	27	227	403	509	486
4.52838	90	54	257	332	744
positive	14	86	314	391	84
Zipf	38	162	191	61	837
tightly	59	117	284	245	479
ij-	86	143	215	5	37
B-1	90	297	4	239	744
value3	48	123	486	197	779
value2	48	123	486	178	637
value1	48	123	486	339	637
fallocate	76	188	336	169	306
cann't	40	37	429	699	315
Restart	40	141	281	76	632
introducing	12	152	60	618	531
``	94	222	446	293	160
afford	10	127	355	159	863
apparent	12	152	60	618	120
visual	13	23	409	51	54
degrade	10	272	409	44	576
inputData	65	233	361	404	406
behalf	18	200	490	567	81
2.6.9	91	151	167	587	230
parameterize	2	229	457	306	563
valued	63	44	199	184	183
+32	90	54	257	10	744
2.6.1	19	7	417	13	644
2.6.0	91	122	156	587	626
overloaded	3	94	329	663	890
2.6.5	19	7	417	13	902
2.6.4	19	7	417	13	644
2.6.7	19	7	417	301	644
2.6.6	19	7	417	13	644
instable	20	183	409	44	84
descriptor	36	153	336	514	942
groupby()	43	157	103	683	956
vega	38	174	90	60	314
values	81	21	131	522	283
slowness	10	272	118	225	169
believed	50	264	292	210	747
Our	13	183	124	203	852
value}	48	233	287	479	502
Zwinck	4	121	264	646	500
is_published	45	144	148	355	517
colocated	81	43	270	733	301
no-data	22	4	201	438	672
Federal	79	78	450	519	746
dat2	64	139	51	551	779
MaskedConstant	6	68	12	130	866
hides	2	215	491	174	621
True's	34	100	131	64	283
winter	99	140	453	109	94
sector2	79	144	195	178	944
K*K	44	243	370	196	876
Who	11	225	143	170	835
fps	21	160	274	323	655
Whs	53	123	51	448	821
s_high	78	144	148	67	750
parameter	31	13	444	592	709
Why	47	0	392	678	835
Weave	7	51	428	2	915
snaps	59	154	188	427	2
tick_increment	68	260	431	234	945
log-space	14	86	314	324	135
spot	11	59	235	567	469
datr	48	123	486	197	653
applications	13	26	63	118	765
date	99	281	68	788	687
Levenberg-Marquardt	77	98	458	279	438
data	2	21	392	98	338
sectors	81	126	266	571	982
mouse-over	5	154	188	427	2
stdin	71	218	183	288	942
yielding	2	21	275	347	560
dataFrame	43	265	75	771	356
frustrated	50	120	114	739	727
re-assign	2	47	328	335	923
definitions	76	40	181	742	195
upvoting	18	15	45	472	922
wavelengths	41	6	270	391	142
backfilled	78	204	456	178	637
unacceptable	10	37	301	167	84
0-20	81	288	324	200	479
rolling_product	76	42	118	169	734
unacceptably	10	272	409	44	604
PageRank	77	42	41	400	234
.all()	27	260	431	234	945
zero-crossing	12	183	409	144	563
_tried_	18	225	490	37	451
isosurface	39	126	495	199	177
konw	18	59	490	419	81
type-check	76	94	65	169	31
Direction	95	298	159	686	497
cleanest	88	257	61	675	327
r_np	90	297	26	239	744
np.nonzero	42	30	286	358	146
scipy.misc.logsumexp	60	296	102	313	244
creations	76	188	118	169	863
urls.py	93	187	90	609	537
LastName	53	139	42	417	775
index_values	74	233	26	509	228
decades	13	272	65	407	747
get_dummies()	43	47	72	771	73
07:30	99	140	453	198	361
matches	78	49	131	355	944
matcher	12	183	138	450	950
Maximum	63	206	199	264	698
records	79	49	195	787	944
arriving	12	21	131	170	219
happenning	57	37	143	699	835
runners	48	144	195	178	637
matched	78	49	131	787	944
ceODBC	71	171	303	128	88
Newest	91	57	167	499	888
revert	2	229	457	335	180
scipy.stats.mstats	60	296	65	742	396
0.056	96	266	324	391	421
outperform	76	51	118	169	990
accumulate()	60	59	14	9	709
df.to_html	86	129	465	24	906
df.tail	64	47	74	551	975
Imshow	5	13	284	245	627
breakthrough	18	15	229	472	870
int}	52	185	376	121	971
Ergo	47	100	392	91	283
pydicom	71	248	214	571	722
vsplit	42	30	286	706	595
canvas	93	154	104	427	728
container	2	94	329	514	720
timedelta	94	63	68	426	452
multiprocessing's	76	26	183	359	439
rounding	14	86	314	325	84
weights=	27	269	297	171	597
collisions	12	152	181	538	195
contained	2	215	328	98	702
Joe	4	121	264	646	500
return_counts=True	42	27	349	358	833
Detecting	69	31	191	127	837
fig.number	29	203	348	123	55
Jon	24	121	264	102	500
interactivity	93	23	90	537	537
higher-precision	3	291	162	266	969
__builtins__	65	135	181	777	406
million	21	190	234	557	42
governing	12	152	147	144	563
Sci-Kit	38	206	282	722	353
hard-code	88	229	457	306	360
Mixed	69	162	191	61	739
___	41	35	177	185	314
prefered	47	48	392	630	908
12:15	54	54	257	332	995
liberally	57	232	222	306	439
Money	48	254	373	339	497
collapsing	34	116	145	566	694
re-format	57	232	232	306	451
bothersome	76	48	61	675	612
misused	88	59	5	419	53
using_filters	27	27	431	358	244
intuition	12	183	134	552	563
16-bits	22	291	85	608	593
')"`	86	129	117	211	199
2007-01-24	54	69	119	158	126
np.angle	60	29	177	336	397
mlab.griddata	72	165	15	235	570
Lately	50	264	292	75	564
out=None	27	269	403	1	201
vote	18	15	45	472	922
1d-array	34	77	0	73	709
Repeat	69	31	237	530	911
fig.canvas.mpl_connect	29	187	348	149	282
imshow	22	36	294	653	627
indicate	12	229	392	487	702
smp2	95	181	373	168	497
2	90	205	257	196	192
pd.TimeGrouper	64	287	449	48	48
typing	40	37	222	699	632
sub-class	31	1	329	663	720
ARPACK	60	296	102	431	751
500-1000	21	160	234	323	655
Thoughts	11	48	389	763	392
set_ydata	31	1	388	399	879
mimetype	36	61	222	384	942
squareroot	60	86	275	391	238
histogramdd	42	27	297	171	244
Aj	85	195	370	617	62
padding	5	263	284	245	479
barh()	63	44	199	592	888
C-like	76	51	65	2	422
QTConsole	40	141	281	76	632
Eigenvalues	38	206	38	184	485
0,360	41	6	289	200	397
3276	52	174	117	121	262
2=	96	266	18	8	62
1921	54	186	318	338	361
00AM	99	69	119	525	256
capitalise	48	49	456	339	779
Analytics	7	224	63	319	594
AEM	99	140	453	198	221
future	35	225	232	292	53
libopenblas-base	67	151	327	232	334
f1.index	64	139	406	551	48
nicer	88	257	61	675	695
fragmented	71	218	183	359	959
tastes	13	26	5	458	398
lurking	35	122	220	292	106
NANs	6	85	12	130	910
target_vector	41	205	154	282	201
ax2	5	284	255	577	430
ax3	46	284	255	577	430
ax0	5	284	255	577	430
ax1	5	284	255	577	430
ax4	46	284	255	577	430
ax5	46	284	255	577	430
apply_over_axes	42	27	14	313	244
ax=	46	284	255	577	430
v_max	41	266	289	282	397
take	47	21	392	91	338
x-variable	41	288	335	200	884
8760	99	2	453	198	221
altered	2	215	328	335	187
Kern	4	121	264	71	552
STRAND	78	144	195	787	944
axs	46	203	255	577	430
butterworth	20	93	382	709	989
V_GS	41	6	335	621	211
Rpy	7	26	63	2	730
re-ran	50	37	292	699	59
.swaplevel	64	287	42	250	775
list_of_floats	75	129	117	211	486
df.shift	64	260	431	234	945
refining	4	225	235	567	81
set_ticklabels	5	20	363	558	844
City2	53	123	51	339	82
Attrition	53	139	51	417	199
City1	53	123	51	339	82
pystatsmodels	18	225	220	71	509
archs	59	26	63	251	398
Blue	95	4	427	438	198
walking	13	43	235	573	852
surplus	6	263	452	539	910
df.index.isin	64	260	431	234	945
usualy	40	112	276	57	315
to_timedelta	94	63	68	426	452
xml	71	153	50	423	108
x.flat	74	293	361	509	146
conduction	38	206	48	722	416
Vertex	39	79	41	400	234
HOWEVER	81	170	235	167	949
enclose	65	263	36	230	471
considerable	10	272	118	225	990
x-1	74	195	426	67	577
candidate_id	48	123	486	197	637
equipped	13	26	122	118	765
neato	93	79	41	97	234
1377565195000	54	50	300	797	139
df.min()	27	260	431	234	945
nabble	35	225	220	407	81
morphological	39	126	7	709	670
f1()	21	160	274	323	655
Products	38	271	330	281	38
string.join	86	129	117	137	172
Ajean's	4	109	394	567	500
prefixing	61	58	443	539	501
.dot	44	143	137	704	598
LGPL	7	26	63	516	850
cid	79	144	195	276	769
pandonic	88	257	61	675	327
conundrum	12	109	114	284	734
p.get_x()	96	266	289	200	421
xmax	41	284	253	282	339
liable	88	59	147	334	863
non-None	74	100	95	355	283
myClass	74	220	444	157	172
to_clipboard()	52	185	443	24	793
16th	99	140	338	109	221
dived	2	215	328	91	338
regressor	77	168	186	705	646
Specifically	47	0	392	678	544
SciRuby	35	224	220	71	594
differentiable	72	98	458	279	438
spellings	79	228	487	787	944
enlightening	18	109	229	444	264
buglet	35	122	220	292	376
dia_matrix	60	292	64	348	218
2015-01-15	99	281	453	551	687
ScalarMappable	31	1	294	653	271
Hierarchical	69	162	191	789	739
affecting	2	229	60	335	120
Quad	84	108	2	410	580
6804	81	6	270	733	943
inappropriately	61	94	138	735	260
100,100	44	205	251	196	357
.at	94	111	115	369	227
Pytable	71	265	303	771	457
PairGrid	31	14	383	568	710
data.pyc	37	250	27	475	194
Directory	30	271	259	429	428
plt.axhline	46	39	383	752	649
Matplotlib-1.3.1	67	57	167	664	732
memory-bound	76	272	118	225	990
datafile.txt	36	10	376	712	261
first()	43	157	103	683	481
cv2.so	55	128	52	477	568
1:30	99	140	453	198	27
ndarr	74	293	4	509	228
Runtimes	10	235	342	347	560
deduction	27	29	18	65	945
array()	65	220	261	15	235
Tcl	40	187	104	368	591
geom	95	174	272	168	682
Aaah	24	200	493	504	991
tsteps	96	174	385	509	486
expression	65	111	14	589	734
Python-based	76	26	61	118	612
Skyler	24	200	493	504	469
ants	29	154	188	167	769
pandas.io.sql.read_frame	71	171	473	128	88
twin	5	148	32	19	518
prun	57	277	222	293	706
anti	93	23	7	571	562
sentinel	6	68	12	355	910
combines	2	116	491	174	986
dumping	71	153	50	423	457
-by-	44	205	370	88	943
linspaces	34	6	270	733	301
breath	29	187	128	764	64
FontProperties	15	135	388	777	873
combined	2	21	233	706	986
scipy.weave	7	51	428	2	915
parser	61	58	28	539	793
confuse	88	152	5	419	53
TypeErrors	12	44	199	618	888
unsafe	76	152	199	15	625
thousand	21	190	234	557	42
Blckknght	24	109	394	140	870
antivirus	84	119	2	664	377
multirow	43	265	72	771	356
indents	57	263	452	230	451
np.unique	42	27	349	358	833
acquiring	2	116	145	573	531
new_figure_manager	37	250	475	187	173
Highcharts	93	23	90	537	537
\IronPython	37	250	386	475	194
noodling	50	264	393	75	564
misremembering	50	59	60	35	907
-70	39	288	324	200	421
inelegantly	88	48	61	799	360
1+exp	96	29	18	173	62
variances	81	214	132	783	454
Ouch	24	109	229	444	264
bit-wise	34	111	95	18	272
sub-index	69	265	75	771	356
pyhon	91	7	417	13	644
mgrid	42	30	286	74	368
XXX	86	281	395	155	221
.dfont	67	57	167	499	909
M.T	44	194	280	704	598
concatenation	34	116	145	706	520
M.I	44	194	137	704	598
13.8	54	108	23	579	931
datapoints	81	52	270	733	301
13.6	54	108	23	579	399
13.7	54	108	23	579	931
13.4	54	108	23	579	399
13.5	54	108	23	579	399
a.tostring()	3	227	228	0	969
13.3	54	108	23	579	399
__init__	31	1	483	236	444
Refer	4	193	19	387	371
R_vec	81	214	266	391	603
stockinfo	59	52	128	51	2
fractals	77	98	48	195	416
regrid	72	165	270	733	301
Alternatively	47	0	457	678	9
workout	50	264	490	144	907
cramming	88	116	5	419	531
unidimensional	34	77	0	73	694
breakdown	79	21	342	170	950
oceanographic	13	246	126	203	765
I	47	264	392	91	338
utf8	52	5	443	563	209
pymunk	40	132	429	384	305
allocation	10	188	447	570	450
bulletproof	13	120	5	144	53
calloc	3	188	447	570	450
paradox	88	59	5	573	863
2013-04-01	48	281	68	788	687
fmin_bfgs	60	124	458	324	438
2013-04-04	48	281	68	788	502
newRow	53	281	51	339	779
|S20	86	18	141	266	178
DataFrame.replace	43	157	72	589	956
undefined	15	37	301	618	120
HashingVectorizer	77	168	186	705	646
costs	10	272	118	573	863
path_or_buf	52	185	28	121	793
950	54	54	324	332	421
slow-down	76	272	118	225	169
Daniel	4	121	264	646	500
ElementTree	71	153	336	514	720
underline	59	52	32	32	54
underling	2	116	145	573	863
pivot_table	43	47	72	683	73
litte	88	257	61	334	612
photons	39	43	206	745	949
Jinja2	93	171	90	537	537
pow	96	29	18	173	238
prominently	88	59	5	334	53
cm.get_cmap()	22	215	328	98	672
sebix	40	200	394	504	991
df4.index	49	139	406	631	445
SVN	35	122	220	292	594
Dammit	24	200	493	504	991
SVM	77	168	186	705	646
SVG	93	61	315	99	374
SVD	77	194	280	431	485
SVC	77	168	186	705	646
pos	74	233	54	690	211
Rewrite	76	40	392	742	622
SVT	90	204	354	200	577
SVR	95	168	186	705	353
_exactly_	57	59	222	37	451
df.stack	43	47	72	683	73
satisfaction	18	15	45	472	922
-m64	55	128	293	52	56
95%	81	159	132	104	176
pol	60	124	177	396	201
data.info()`	57	235	463	37	975
63	54	3	298	318	811
integrals	77	98	38	279	809
Cairo	93	61	315	435	591
pylab.savefig()	29	187	128	123	54
grouping	43	265	75	376	356
66	54	3	298	318	811
qhull	72	165	15	152	570
imshow-like	22	61	284	571	54
dpi=	46	226	494	757	619
Brandon	4	121	264	646	552
left_index	49	47	72	363	445
coordlist	3	220	329	514	235
256x256	22	126	258	45	943
thinks	47	59	491	91	908
tavg	53	139	51	417	775
authenticate	40	119	429	609	377
dimensions	34	77	251	73	694
tube	11	232	232	167	852
subquery	30	171	182	574	631
node's	59	228	41	400	234
unoptimized	7	202	37	534	876
Ruby	13	26	63	2	730
xgrid	42	40	444	15	709
installable	67	151	210	351	732
unsuccessfully	50	264	393	75	564
destroys	2	215	491	573	180
accessing	2	116	145	573	531
.values()	65	233	158	540	526
np.histogram2d	41	14	297	171	397
ration	5	284	284	245	479
ratios	81	170	284	245	479
axis's	5	148	32	19	844
standpoint	76	272	5	419	612
__name__	15	135	364	777	406
float64s	21	188	88	323	506
50+	71	190	91	60	713
acc	96	29	177	336	622
nanmean	6	269	12	53	396
Sep-09	53	50	42	250	624
ewchan	24	200	493	504	991
special_object	29	40	444	236	444
pylab.pause	45	37	14	699	55
industry	79	78	173	480	653
taxon	48	123	486	788	637
acm	21	160	274	557	252
Scientist	38	224	372	94	985
Radius	39	149	438	93	177
practicable	12	42	409	44	84
act	2	215	491	174	338
non-obvious	88	225	5	419	219
Project2	53	139	51	448	821
stemlines	31	13	388	592	879
-openmp	55	128	293	52	56
flawed	12	59	490	419	563
hashability	3	94	329	663	720
image	22	248	381	571	722
idxmax()	43	157	103	683	956
Least	77	206	458	722	905
covariance_factor	60	219	444	396	162
encapsulating	2	215	328	514	720
tie-breaking	14	86	314	325	549
hstack()	42	30	396	404	595
df.rank	64	150	256	551	48
Empty	63	44	199	582	183
technically	47	59	147	145	908
how's	47	59	490	170	835
origin=lower	5	13	294	653	488
Py_Initialize	29	218	128	236	55
qt5agg	45	80	315	435	591
tick_params	5	148	363	558	844
how'd	88	59	114	424	907
.yaxis	46	148	363	46	348
Sudoku	38	206	282	722	38
recommends	4	193	19	252	371
0.9999	27	29	431	28	945
mantissa	14	86	142	325	549
np.around	14	29	314	325	549
non-rectangular	72	165	279	733	102
cloned	67	151	470	604	156
MINPACK	60	296	102	279	438
brain	50	120	114	35	64
Guido	4	225	372	619	53
clones	50	232	233	251	564
NDVI	79	298	34	621	459
Guide	38	193	372	387	704
buying	79	78	355	159	955
they're	47	0	392	91	908
wafer	81	228	206	621	675
attenuate	44	195	239	255	192
503	85	205	251	196	357
ex-ante	12	229	457	306	563
-------------	30	212	55	429	428
Python-Pandas	38	265	303	60	739
13-7-2015	54	69	368	158	126
Close	53	281	333	218	746
agree	88	59	5	419	908
nlargest	43	157	349	683	640
detailed	11	193	372	387	371
isfloat	27	40	444	396	622
ac	53	181	287	455	497
ab	86	174	117	185	262
ohh	24	200	493	504	991
ad	47	264	233	170	338
ai	85	172	442	107	778
ah	24	200	493	504	991
ak	86	181	287	730	497
aj	85	143	215	5	598
am	47	120	392	203	907
al	38	224	282	722	689
an	47	0	392	91	338
ap	41	174	117	157	486
as	47	0	392	91	338
ar	74	293	54	509	228
at	47	21	392	91	338
av	2	215	328	335	180
ay	85	201	125	560	597
ax.relim()	5	148	253	558	844
az	41	6	289	200	397
Nuitka	7	51	65	2	730
1217	90	54	257	338	585
mathematic	13	26	248	118	730
subtract_me	27	260	431	234	945
join_by	50	152	60	630	31
as_index=False	64	47	406	683	73
Radar	69	162	191	209	837
f.columns	90	297	13	551	545
get_data	31	40	444	236	444
novice	11	120	212	739	727
-Wall	55	128	293	52	56
spatial	39	126	214	733	949
SubDataFrame	47	21	392	91	338
a_	44	172	481	224	778
bizarrely	12	229	392	91	604
infer_datetime_format	52	185	28	121	793
groubpy	43	265	75	706	356
vocabulary	77	168	186	705	646
prange	76	51	345	225	915
a+	3	291	261	266	969
a*	96	29	18	173	13
ggplot	59	23	375	364	710
a1	85	172	481	224	778
a0	85	172	481	224	778
a3	85	172	481	224	778
a2	85	172	481	224	778
a5	90	172	481	224	778
a4	85	172	481	224	778
rpy2	35	122	375	364	443
a9	85	172	481	224	778
a=	75	227	385	425	484
ExpTime	95	39	335	316	649
neuter	48	144	148	276	517
start=	86	287	42	679	997
2Gb	84	127	355	159	359
impossibility	12	152	457	618	120
cpp	7	51	65	2	730
Txs	18	225	394	567	81
original	2	116	328	91	338
arb_vars	74	195	54	157	314
Canada	95	268	335	322	497
externally	71	153	50	335	59
on-the-fly	71	153	446	702	457
HMS	61	63	68	426	452
reasoning	12	59	490	630	908
improperly	59	37	328	699	120
particles	39	43	206	195	949
caveats	4	193	372	387	371
numpy.random.random_integers	12	183	409	725	162
__cmp__	3	220	329	663	866
v1.1	91	122	156	587	376
v1.0	37	122	475	475	173
v1.3	91	7	156	301	230
v1.2	91	57	167	664	230
v1.5	35	122	156	9	376
Cygwin	19	151	210	301	104
fromarray	22	90	381	141	722
np.bool	3	291	141	266	969
v1.9	91	122	156	9	376
zmq	67	119	327	368	591
rejected	18	15	490	472	922
linthreshy	5	148	284	245	479
puzzled	50	59	114	210	907
tick-marks	59	52	32	19	884
warnings.warn	63	44	135	582	858
Instantiate	34	77	0	514	720
state-machine	31	23	104	123	195
puzzles	50	59	292	210	469
scipy.cluster.vq	77	79	41	152	234
interpreting	61	215	60	91	260
manageable	21	272	258	334	781
mplstyle	93	61	495	51	54
return_index=True	42	293	349	358	833
condition	78	100	291	18	148
`	47	0	14	91	709
accompanying	69	193	19	393	114
FileName	48	281	486	339	779
plt.figsize	46	284	289	46	810
scrapping	11	232	145	35	92
numpy.array()	3	220	329	15	890
sensical	12	59	147	424	907
pseudo-code	57	235	342	450	950
ASCII	61	58	443	539	108
LOOP	30	212	131	574	944
antibiotic	79	228	206	498	675
lapack_lite.so	55	132	330	696	372
numpy.distutils	15	135	44	215	305
6L	68	32	154	30	357
penalties	76	272	118	552	990
sync	29	218	233	167	243
pull-request	35	173	220	292	106
ID's	78	144	195	787	713
recalculate	81	229	275	335	603
situated	39	126	25	122	979
do_long_fitting_process()	29	40	444	236	444
min_periods	94	85	449	784	215
section	4	193	19	387	371
-lf77blas	55	128	293	52	56
np.sum	27	269	403	65	598
file.readlines	36	10	489	712	942
Safari	84	141	306	301	232
avenues	11	225	389	35	219
seemed	50	264	292	210	747
contrast	80	215	147	91	621
installations	67	151	210	351	104
api.log	2	49	50	384	713
coverting	71	116	145	706	986
my_average	74	233	54	185	336
Notice	47	215	491	678	544
hours	99	140	453	407	326
smartest	4	48	490	675	327
VS2010	67	163	152	241	104
DY	96	201	426	560	142
round-trip	43	265	145	771	23
pchip	72	165	15	235	570
ser.read	75	174	117	751	486
Reindex	69	265	75	789	356
Constructing	69	31	100	530	911
LineCollections	31	13	388	199	879
numpy.flatnonzero	42	27	14	358	244
hitzg	4	121	264	646	500
-arr	90	293	13	509	146
pick	2	229	457	306	338
action	2	21	126	167	769
voxels	39	43	41	400	234
Alejandro's	4	202	37	323	441
verbose	88	257	61	675	695
Aug	99	182	33	34	519
summations	76	42	275	169	734
ReLU	77	168	458	705	905
excellently	4	121	264	646	500
pl.imshow	46	36	294	653	488
gdal.GetDriverByName	36	10	136	36	906
Visualizing	38	206	282	722	71
H.max()	44	194	370	649	938
coercion	3	94	162	325	470
UNIQ_IDS	21	243	46	196	192
archived	35	275	50	390	594
857	37	3	330	187	568
dtype=int64	90	54	257	10	357
858	37	3	154	187	158
85%	21	160	37	323	655
ArchLinux	84	193	167	241	594
archives	67	239	470	604	594
clabel	31	13	388	199	608
nomask	3	100	95	18	866
VEP	75	174	74	347	975
Selenium	71	246	90	60	92
Found	4	264	19	567	114
unneccessary	2	263	457	91	338
bin_range	81	214	266	171	603
numpy-groupies	35	193	19	499	594
uint64	3	291	141	266	470
evolves	20	126	48	195	949
keeping	2	116	145	573	531
science	13	120	212	118	852
temp.png	36	129	136	150	619
4:00	99	253	453	525	762
person1	95	204	373	686	361
integrate.odeint	60	124	458	382	622
indicating	2	21	491	487	702
Conference	53	139	51	339	199
impacts	12	152	134	552	563
stated	4	17	490	252	81
PYTHONPATH	67	132	352	113	137
neglected	12	200	60	210	747
accept	18	15	45	472	922
states	12	193	19	252	702
STEP	69	271	191	347	560
matplolib	59	23	495	51	710
Vera.ttf	84	127	44	384	305
Unluckily	12	59	392	144	604
FWHM	20	93	132	147	4
axis	5	288	32	19	884
information	12	193	392	170	371
__array_finalize__	3	220	329	663	720
Bins	59	14	335	621	884
equities	79	78	450	762	675
earnings	79	228	487	480	675
machine-learning	13	183	48	195	765
unattended	7	57	167	697	732
phidget	71	246	58	428	671
upto	78	140	338	616	266
numpy.pi	96	29	18	173	13
np.ma.masked_invalid	6	68	12	53	910
mapping	2	21	158	540	702
238377	68	32	154	545	486
usernames	79	228	487	27	1
pixel_output	74	174	54	522	262
state1	53	95	115	417	227
num=1	46	203	255	577	430
evaluations	60	98	458	279	438
gmpy2.mpfr	14	86	46	325	549
summarization	81	21	409	44	338
Sqlite	71	171	303	128	88
imagery	39	248	214	571	949
Variables	38	162	259	110	877
sence	88	59	147	144	908
atan2	96	29	177	336	13
rotation=90	46	148	363	46	348
ylim_changed	29	1	188	149	282
colourmap	22	4	294	438	271
geographic	39	73	279	766	573
doc_id	86	123	272	211	199
checkbox	59	154	188	427	2
Ed's	4	17	254	710	441
date-timestamp	78	86	314	391	176
mixing	12	152	60	145	120
args=	52	40	444	396	622
pane	93	154	259	427	402
org_o	48	123	486	178	637
chronologically	79	144	337	708	944
Nans	6	68	12	130	910
myarr	74	293	26	586	228
Benjamin	4	121	264	646	500
time_list	81	233	131	522	336
coarser	72	165	15	733	301
dosen't	47	57	392	699	59
param_update	2	215	328	405	406
value_count	43	157	103	376	956
travelling	39	126	235	93	416
atleast_2d	42	30	396	74	263
y-ticks	5	148	32	19	844
URL	71	239	50	769	92
propose	4	17	254	630	441
URI	71	153	50	769	108
IPs	79	228	487	27	326
srgb	14	86	314	325	84
GTK3Agg	93	80	315	435	591
00000000011100000000000000000000	90	297	272	239	995
misuse	18	152	179	739	67
IPy	40	141	281	76	632
expresion	42	111	14	212	228
np.logical_not	27	260	431	18	866
DataFrame.to_json()	71	153	303	60	457
truthy	3	220	95	18	866
IPE	36	10	136	288	314
always	47	0	392	91	338
troubleshoot	57	235	463	37	451
Newton	77	98	458	652	905
drawContours	47	40	444	742	709
fliplr	44	30	286	74	598
Pole	39	149	279	298	573
Thanks	24	33	229	667	870
experiencing	50	152	60	618	120
contourplot	59	52	495	199	177
Sounds	47	0	392	424	469
MATLAB's	60	296	375	742	631
.ravel()	27	293	286	489	146
accelerator	7	51	65	2	730
NGC	54	3	101	187	158
catalogues	81	21	131	251	944
crontab	40	132	429	384	632
iteractive	40	37	222	699	975
Setting	69	31	237	530	911
ATLAS_INFO	86	181	42	211	624
20.0	54	108	23	579	931
Picture	38	271	342	281	114
20.4	54	50	368	331	449
missed	24	200	493	504	991
mattered	50	59	292	210	747
misses	12	152	409	44	576
cm.Greys_r	22	36	294	653	488
null_index	53	139	51	417	821
numpy.ogrid	42	27	286	313	244
downloads	67	151	470	604	104
highway	39	126	235	93	949
reformulated	18	200	490	504	81
localization	13	126	126	195	765
acorr	46	13	383	592	710
pitfalls	12	152	5	257	219
imaging	13	248	381	571	593
imagine	47	59	392	630	360
bumped	50	264	220	35	564
100x9	34	77	0	73	694
feasable	71	218	328	359	187
positioning	5	148	32	19	518
100x1	34	77	0	73	694
w	85	174	177	107	192
expedient	88	48	61	675	31
NxNxN	34	77	0	88	943
reversing	2	116	396	566	520
slipped	24	200	493	567	991
girls	95	228	335	32	852
thereafter	2	37	128	167	769
number	81	21	131	251	702
cointegration	77	168	126	534	443
ix_()	34	100	131	522	694
SMALL	86	89	163	211	66
ax.quiver	46	13	444	592	709
unexplained	12	183	60	742	907
974	81	6	233	98	949
heads	24	109	411	567	64
972	37	250	330	205	194
Becomes	47	21	392	91	338
978	95	204	272	338	199
!...	24	33	229	140	870
97%	21	190	234	557	176
imdecode	3	90	336	141	942
exponents	14	86	314	325	238
QUANTITY	1	204	300	338	361
relationship	81	270	472	783	738
immediate	12	17	5	630	908
appreciation	11	15	45	472	922
numpy-refactor-refactor	37	50	386	475	931
.emacs	55	132	330	384	568
consult	18	193	19	387	371
focusing	4	17	134	458	907
locator_params	5	148	388	558	879
v0.14	91	122	156	587	230
v0.15	91	122	156	587	376
v0.12	91	122	156	587	626
v0.13	35	122	156	292	376
v0.11	91	193	393	75	564
diffusion	39	126	48	195	416
determines	2	215	491	487	702
Shuffle	69	31	100	530	911
head0	64	47	406	548	294
determined	2	215	328	98	187
KEY	30	212	182	136	965
video	71	246	58	571	600
remembers	2	215	328	174	180
Uncommenting	45	129	222	36	906
Projected	38	206	191	789	698
*data	75	32	13	545	486
basicly	74	233	394	522	469
get_chunk	45	37	222	699	906
Crude	88	59	61	334	604
0.20000000000000001	68	266	23	695	421
pyserial	40	246	429	428	600
df.index.to_series()	64	150	10	72	838
generic	88	257	61	675	612
tough	88	120	114	35	727
python.h	67	57	44	215	315
node_size	31	13	444	592	879
positionally	78	111	456	276	36
analogy	88	257	61	630	612
analogs	76	94	158	735	452
Series.map	43	157	103	589	956
numpy.may_share_memory()	76	272	118	630	783
play	50	232	232	306	439
yhat	77	256	177	467	597
effecting	2	215	328	405	187
Y.shape	44	205	228	0	357
toss2	94	287	449	682	199
df.index.apply	64	274	10	772	838
plan	13	232	126	203	765
a.mean	27	227	403	65	486
DenseVector	14	291	12	325	549
exe	67	151	174	604	104
unequal	69	21	233	546	694
exc	63	44	199	582	136
MATLAB-style	76	296	375	364	631
cover	59	229	235	32	714
StringVar	65	220	329	514	720
ext	36	10	136	36	942
Boolean	34	111	95	18	866
bodies	74	6	206	107	949
exp	96	29	18	173	13
attacking	11	120	212	35	727
rev_date	53	139	256	72	775
select()	43	157	72	24	956
wsgi	40	171	429	128	88
Explain	57	235	143	37	451
multi-variable	60	98	458	742	738
label=label	90	297	289	10	744
session	40	141	281	76	632
sudo	67	112	327	232	334
impact	12	272	134	552	990
Deprecation	63	37	199	582	888
indicator	2	21	456	355	702
group_indexes	48	95	95	355	821
1.6.2	91	7	417	13	230
failed	63	176	397	582	136
1.6.0	91	7	417	13	230
1.6.1	91	7	417	13	230
np.swapaxes	42	30	286	74	263
|u|	96	201	426	69	13
METHOD	30	212	55	429	428
2^n	10	43	356	327	668
training_set	90	297	13	332	995
out_list	74	100	108	586	577
Rectangular	39	206	7	709	670
they'd	47	94	392	143	908
synchronization	12	218	183	445	803
preparing	13	183	126	203	765
closely	12	193	19	170	590
fromfunction	42	40	444	15	709
Web-Dev	95	50	368	429	428
Minutes	99	140	66	198	687
scipy.ndimage.label	42	79	7	152	670
tumors	79	228	131	251	944
inbuilt	76	48	138	630	31
your's	4	17	254	710	441
header=False	52	10	376	121	971
update()	29	40	444	236	622
numpy.lib.recfunctions	15	135	319	777	957
select_column	94	222	72	683	160
set	2	229	457	91	338
ser	43	47	74	551	211
For	47	0	392	678	544
sep	52	185	28	121	971
overwhelm	18	232	232	567	219
line_no	64	287	406	197	8
:-))	11	109	229	444	469
sex	48	123	487	168	653
seg	29	37	301	699	954
Subroutines	7	224	282	436	689
sed	36	58	276	288	501
sec	21	160	274	323	655
migration	11	225	45	527	509
sea	39	126	279	322	764
Umm	24	200	493	504	991
sem	20	219	173	784	459
Foo	3	220	329	514	720
outward	5	288	29	122	116
umath	55	128	330	205	461
THank	24	33	229	140	870
univariate	77	168	132	147	162
topmost	59	52	495	51	177
isin()	43	157	103	683	956
libpng	67	151	327	232	334
.match	53	89	163	340	131
nope	24	200	493	504	469
optimize.fmin	60	124	458	396	438
')))`	86	129	10	772	838
np.eye	44	194	228	704	598
redesigning	76	272	118	257	417
Upload	57	239	222	335	835
Against	79	228	487	168	517
.bash_profile	55	132	352	113	798
size=500	75	243	23	425	427
selectively	2	229	457	335	180
numpy.fft.irfft	20	93	425	336	344
adressing	74	297	26	239	228
hyperlink	61	154	188	769	2
x1-x2	96	201	426	560	62
Modifying	69	31	237	530	911
cumprod	42	84	103	784	396
rose	59	52	32	19	884
long-term	10	272	409	44	959
whole	2	116	145	573	338
draw_idle	29	154	128	123	55
geolocation	21	190	258	766	42
fun1	27	269	403	65	201
allFiles	36	10	489	712	261
PyPi	67	151	470	604	594
corresponds	78	21	239	487	702
community	18	225	45	527	509
hollow	39	117	433	32	198
agents	79	246	206	203	765
stdCst	90	54	257	10	995
Matlibplot	69	206	495	209	71
PyPy	7	51	428	2	915
pycon	50	264	372	407	564
worthless	12	59	147	334	908
GitHub	35	122	220	292	106
Macs	67	151	167	697	321
APPLE	53	181	272	339	199
PyPM	67	151	167	499	732
acceptance	18	15	232	407	922
PyPI	67	151	470	604	594
\$	86	129	465	137	906
list_data	75	243	385	425	486
anwser	4	109	394	646	500
qtagg	45	80	315	435	591
timesteps	81	147	270	733	301
run.py	37	250	386	475	194
Concat	43	265	72	789	739
Hints	11	48	389	630	835
XML	71	153	50	423	108
%Y%m%d	86	274	465	679	151
fire	29	187	128	149	769
what's	11	59	143	144	835
python-numpy	67	151	327	232	334
plt.grid()	31	13	348	592	879
SFrames	43	265	186	341	353
fund	79	78	450	762	746
2^8	14	86	248	5	238
data.merge	49	287	406	631	82
scipy.interpolate.interp2d	72	165	15	235	570
func	27	40	444	396	622
adjusted_cov	44	194	280	704	598
matplotlib.axes	31	1	388	399	873
firs	78	49	338	616	456
tweaked	57	232	232	306	394
22:30	54	69	119	158	126
next-to-last	78	263	338	616	456
mainModule	30	212	55	429	560
Measure	61	49	50	539	517
Untested	57	235	342	450	950
Nx4	34	77	0	88	943
x_sub	90	297	4	617	821
Nx1	34	77	0	511	112
Nx3	34	77	0	88	943
Nx2	34	77	0	73	112
dotting	34	77	258	88	943
Strategy	38	271	191	519	38
level1	53	123	51	339	779
level2	95	181	373	339	682
vanish	29	152	301	618	582
neutral	95	117	373	32	517
level=	64	150	406	197	48
matrix.shape	44	293	286	509	146
lat_0	46	226	30	298	348
df.as_matrix	44	227	228	0	357
funny	50	152	301	424	120
scipy.integrate.dblquad	60	98	458	742	738
kills	10	202	491	573	863
choking	50	37	301	699	120
scipy.io.savemat	71	153	336	423	306
x64	19	7	432	241	644
elevated	40	119	429	697	315
2035	95	181	373	158	277
futzing	88	257	61	334	695
matrice	34	77	251	88	943
underspecified	18	225	490	170	81
Vectorz	7	26	65	118	398
2015-08-10	53	139	51	417	821
do_3d_projection	31	1	460	172	787
Vectors	38	162	191	61	837
indicies	34	111	131	522	694
levels	81	265	75	621	356
invalid_raise	45	185	334	269	793
tobacco	86	139	74	551	314
focal	39	126	206	93	949
recent	35	122	156	9	376
canned	76	264	393	75	564
set_alpha	31	13	388	134	608
Didn't	24	200	493	504	991
\D	86	89	163	299	66
Rate	95	138	159	519	38
per-column	6	85	456	341	910
NxM	34	77	0	88	943
NxN	34	77	0	88	943
Quality	48	271	159	281	502
comprise	21	228	233	487	702
Category	48	138	159	197	653
pd.read_excel	52	10	376	121	971
2001-01-01	99	140	453	155	687
mysql	71	171	473	128	88
foo()	65	40	444	212	916
hues	22	4	427	438	672
snappy	4	109	229	444	500
ellipsoids	59	52	495	51	177
location	2	21	457	335	338
relevance	12	193	134	552	219
pyplot.table	57	23	19	97	371
scipy.signal.fftconvolve	20	93	382	336	396
string.pyc	55	132	352	113	568
Longer	30	162	169	347	560
y-direction	5	288	284	245	479
demands	12	152	147	552	654
tempArray	74	233	54	690	486
figure.dpi	45	13	284	245	479
document_id	48	233	158	276	526
pertinent	57	235	342	450	1
gnumpy	7	51	345	169	166
ax.set_color_cycle	31	13	294	592	271
2008-04-08	54	69	119	158	126
exmaple	57	235	342	450	950
Spline	72	165	15	235	102
Buffers	7	51	122	702	730
Confusing	94	111	147	369	908
FIRST_NAME	95	181	287	730	497
form's	59	215	328	98	59
np.random.shuffle()	42	27	14	313	244
.mp4	93	61	315	99	374
b-	46	39	73	316	649
lanczos	72	98	382	235	438
fivethirtyeight	93	23	375	36	906
b4	85	172	481	224	778
subscripting	14	95	115	369	227
Damn	24	200	493	504	991
DEM	39	126	214	93	949
sight	50	59	114	407	469
Masking	69	31	100	530	911
b=	75	227	385	0	486
DEC	41	6	438	200	397
qpython	15	135	319	514	720
drawImage	93	61	104	537	54
getfromtxt	71	37	301	699	625
FFMpegWriter	45	176	460	36	787
efficiencies	76	272	122	203	863
artist's	31	1	388	399	879
\b	86	89	163	299	66
\int	96	201	426	560	62
machine's	84	127	2	159	359
inclination	39	149	438	93	116
bd	53	139	272	551	779
be	47	0	392	91	338
bf	36	10	373	339	502
bg	22	195	328	141	54
Look	47	193	19	387	371
bb	74	195	54	690	228
bc	74	174	4	185	262
interpreters	40	119	281	76	632
bn	85	172	481	224	778
bo	46	39	73	316	649
agreement	12	183	409	170	563
bj	90	195	4	617	744
Antonio	33	228	165	517	960
bt	47	174	222	751	128
bu	50	37	292	699	59
bw	22	205	251	196	672
bp	95	226	388	134	682
br	61	49	373	86	517
bs	75	174	385	690	486
tidal	39	126	495	93	177
seasonal_decompose()	43	265	72	771	888
bx	26	201	426	560	894
by	2	21	392	91	338
Loop	69	162	169	61	145
asymptotic	77	98	356	327	84
numpy.nan_to_num	6	68	12	130	910
np.logical_and()	42	27	95	18	866
fill_betweenx	31	13	388	592	879
hatches	59	117	433	32	608
numpy.digitize	42	27	297	171	244
maxlen	75	227	385	0	357
unsorted	34	116	337	708	640
np.char.split	42	174	14	313	244
hatched	59	117	433	199	608
b_	3	18	272	157	235
cashflows	79	78	487	101	955
ACC	53	139	272	250	199
computational	13	272	118	44	765
ACF	96	266	324	391	421
yloc	46	14	383	592	823
integral	20	98	458	191	738
xAndY	74	297	54	239	995
fractions.Fraction	3	94	329	15	235
targets.csv	34	188	355	159	863
4-tuple	22	13	294	134	672
trainData	68	29	18	28	62
re-define	2	49	457	405	338
criticisms	11	173	389	763	867
238.00	54	50	368	158	126
retrieving	71	116	303	60	92
16.18	47	174	392	751	338
.idxmax	27	100	115	178	945
specifically	47	0	392	91	371
occupy	59	188	355	454	479
Comes	7	57	63	516	732
West	95	181	373	686	497
rand_draw2	74	220	361	212	923
pandas.to_datetime	43	63	68	426	452
Reinstalled	40	57	167	664	315
compressible	10	272	409	44	959
relaxed	35	122	156	9	376
tally	79	228	173	621	944
archaic	88	232	232	630	53
link	4	193	372	387	371
10.11	19	7	306	301	232
10.10	19	7	306	301	232
line	59	37	222	699	59
step-wise	57	235	143	37	451
get-go	2	215	303	60	92
msvcr71.dll	67	132	44	384	305
Jeff	24	121	264	646	500
tcaswell	4	121	264	646	500
A.loc	53	139	115	417	227
.000000000	99	69	119	679	997
customers	79	228	487	480	285
mature	13	26	63	118	398
horner	60	40	444	396	622
PyCogent	67	57	167	499	732
MEX	7	51	65	215	957
impl	76	202	147	552	908
Married	95	181	42	250	497
supervisor	18	264	292	170	747
defined	2	215	328	98	187
nighttime	79	147	450	101	675
code\	37	250	222	384	194
side=	46	226	494	59	640
Memory	10	127	355	159	359
Manhattan	39	270	472	152	662
defines	2	215	491	487	702
phantom	45	263	284	245	479
coder	13	120	212	739	727
codes	57	49	342	27	1
Healpix	39	126	214	97	371
leftward	39	117	25	122	562
QObject	29	1	329	236	720
preventing	50	152	60	618	120
codec	63	5	443	563	209
coded	47	215	392	91	338
Plain	65	94	158	127	260
STATUS	48	144	148	178	502
New_York	99	268	318	372	221
700000	21	190	234	557	42
wrongly	47	59	292	210	747
sided	20	93	425	191	344
robots	39	43	235	167	949
__array_interface__	3	220	361	312	235
sides	59	52	25	122	979
mood	11	120	212	739	727
tailored	77	26	63	697	621
numpy.max	60	269	403	53	244
2D-array	34	77	0	73	694
kinetics	38	206	48	195	416
walked	50	264	235	167	747
equivalently	42	30	14	313	9
12.10	19	7	432	301	156
code*	57	235	463	37	451
sns.violinplot	46	39	260	505	649
code-	57	37	301	699	888
x_new	41	6	177	586	987
ax.set_ylabel	46	148	494	46	348
code	57	235	342	450	950
ypred	95	174	117	751	262
libfreetype	67	151	327	232	334
CPC	48	123	486	276	82
results	47	21	392	534	59
Healpy	38	248	214	571	108
quad()	60	124	458	742	438
reduce()	65	27	81	648	311
Gohlke's	67	151	470	219	104
CPU	84	127	345	445	580
np.array_split	27	269	74	551	945
tissot	39	149	438	93	586
send	71	246	183	609	600
Stem	59	52	495	209	837
citing	4	225	372	71	552
outwards	59	149	32	19	884
input_2	74	100	108	586	283
dislike	88	225	5	419	53
sent	2	215	328	98	92
moot	88	152	5	419	53
f.ix	53	139	42	417	775
1.5GB	21	127	355	159	359
j_sorted	47	37	301	699	888
booleans	34	100	95	18	866
input_1	74	100	108	586	18
result2	65	233	54	690	172
pd.rolling_sum	64	150	256	551	48
date_range	43	63	68	426	817
practicing	13	120	212	195	727
code_generators	55	128	330	205	461
lines.py	37	250	475	205	173
1.000000	95	181	159	429	428
MarkerStyle	31	13	388	399	879
colindex	78	204	115	339	227
sr.values	90	297	26	138	446
Related	69	193	19	387	114
np.uint64	3	291	141	266	969
Tabular	76	94	122	460	604
Talking	50	59	5	630	908
Directly	2	116	237	335	92
4X4	85	270	472	5	662
disordered	2	116	145	98	713
sorted_array	27	293	4	509	146
non-ideal	88	48	61	630	31
ptcblas	55	128	293	636	56
mysqldb	71	171	473	128	88
incidentally	47	59	392	630	371
C4163	63	176	164	582	572
keyboard	29	187	188	149	2
punctuations	61	263	452	706	986
index	78	100	216	522	356
analogously	12	48	456	630	908
Jahresgang	53	139	42	682	775
Alas	47	264	292	210	747
NVIDIA	84	127	2	410	580
sm.WLS	41	256	177	282	597
firms	79	228	195	27	1
x+1	96	201	10	772	838
bird	95	181	373	168	497
twiny	5	148	363	558	518
twinx	5	148	32	558	518
led	50	264	292	284	564
leg	46	226	494	757	348
straight-forward	88	257	61	675	612
len	75	243	54	690	486
non-linearly	10	160	258	323	576
24-bit	22	248	381	608	593
let	11	229	143	144	451
lev	79	43	206	766	675
downvote	18	15	45	472	265
openmp	7	51	428	215	915
ravels	34	30	396	404	520
Caches	55	132	330	477	568
Hamming	20	270	472	588	662
engage	12	225	147	419	658
Stream	38	271	282	519	38
x+c	96	201	426	391	13
Energy	20	149	231	322	949
polar=True	31	13	383	592	627
x+y	41	29	177	107	13
staticmethod	65	220	329	663	720
binary_dilation	60	296	14	742	709
Mountain	19	7	306	301	232
335	54	108	117	751	399
334	54	3	101	297	399
337	54	223	298	318	811
336	54	223	101	168	361
Data2D	38	205	251	196	71
330	54	223	298	318	252
333	54	3	101	797	139
332	54	223	101	297	399
v1.3.0	35	122	167	664	594
v1.3.1	19	7	417	301	230
convert_numeric	64	157	418	548	131
33%	10	160	37	323	655
Iteratively	69	31	100	789	739
numpy.any	27	260	431	18	866
standing	35	21	220	407	769
printouts	57	183	50	709	562
instantiation	2	220	329	514	720
))`"	68	227	385	211	357
<--	59	59	222	32	469
))`)	75	227	385	28	486
doubt	88	59	5	630	31
<->	86	39	73	316	417
Multi	69	31	169	789	739
Hosting	38	224	282	519	38
c_ubyte	3	18	162	404	969
labelled	81	288	335	546	884
sharply	10	170	235	44	576
R6034	63	176	397	582	136
v1.3.x	67	57	167	664	732
subscripted	59	52	32	751	835
Powerpoint	93	61	315	99	374
QTimer	29	187	128	149	282
65283	14	291	85	391	283
pythonista	88	120	114	35	727
))``	75	32	10	772	838
list_b	78	144	195	588	944
Christoph	67	151	470	219	104
insists	2	215	491	181	621
list_a	74	100	216	522	336
Python26\lib\	37	250	386	475	194
Series.apply()	43	157	14	15	709
Associating	81	21	270	546	702
drill	50	232	232	35	781
secondary_y=True	5	148	383	505	844
ax.legend()	31	203	388	399	879
streamed	71	246	50	60	92
bent	59	52	495	32	177
Lapack	7	163	428	418	166
KeyError	63	44	199	582	888
xout	74	195	370	171	283
bend	88	170	231	93	116
Several	47	193	233	251	114
np1	91	281	272	36	199
c*z	96	201	426	560	13
00,197	54	50	119	158	126
datetimeindex	43	63	68	426	452
colorful	59	52	433	32	177
NodeJS	76	51	65	2	730
numpy.tril_indices	42	27	14	313	244
00,198	54	50	119	158	126
tableau	50	120	114	35	469
uncompressed	71	153	50	423	593
skeletonization	20	93	7	709	562
.matplotlib	55	132	352	775	798
Preference	40	141	259	110	402
animal	79	228	335	621	675
as_index	43	47	334	683	73
tiago	24	109	394	140	469
stand	47	229	321	91	835
m.ndim	68	54	257	338	744
blocks	34	21	131	251	986
await	24	121	394	646	500
Request	30	271	191	281	114
surface_plot	31	13	388	199	627
blocky	22	126	7	709	562
SQLDatabase	15	122	460	24	376
Cat1	48	123	51	448	821
Cat2	48	47	406	551	779
notebook	40	141	281	76	632
npy	71	153	336	423	306
demonstrating	57	235	463	37	766
npz	71	153	336	423	306
out-of-memory	71	127	355	159	457
efficiently	34	48	145	675	360
alloc	63	37	199	699	888
discusses	4	193	372	387	371
super-fast	10	202	37	334	876
Community	7	224	63	516	850
numpy.correlate	60	296	472	742	396
Heck	88	94	147	334	695
allot	11	120	229	739	727
allow	2	229	457	91	621
plt.colorbar	46	284	255	577	430
vml	55	128	52	636	372
MACOSX_DEPLOYMENT_TARGET	40	112	276	499	315
Raise	63	86	199	582	888
bundle_files	45	80	174	289	305
comma	61	58	452	230	501
pepCN2	48	123	419	168	497
pepCN3	48	123	486	168	497
pepCN1	48	298	419	467	497
vms	53	281	51	448	821
operative	47	0	95	91	908
recreating	2	116	145	573	531
pure-Python	76	26	65	2	730
interfacing	13	51	65	2	730
designs	13	183	181	257	563
classes_	74	6	108	107	211
Excluding	69	271	66	789	739
HDFstore	71	116	303	60	457
piecing	11	116	145	706	986
x-range	5	288	284	245	755
disapear	59	52	188	209	796
annotate	5	13	30	134	518
multiprocess	29	218	345	445	803
.day	53	281	68	72	390
merge	49	265	75	706	356
scipy.optimize.basinhopping	60	98	458	279	438
sheet.cell_value	68	32	13	617	744
cythonizing	76	272	118	225	990
main.cpp	15	132	222	384	315
beginner	11	120	212	739	727
frequency	20	93	425	507	344
closed=False	46	203	348	123	55
how=inner	43	265	72	771	356
XOR	14	86	95	18	272
Cooley-Tukey	10	42	37	169	905
float16	14	291	142	608	549
bunched	59	43	25	32	714
Python.exe	40	141	281	76	632
bag	71	168	186	27	1
axises	5	52	32	19	884
bad	88	59	5	419	908
matlab-like	13	23	138	118	398
bunches	12	225	131	170	219
adc.read_voltage	75	174	385	425	486
transparent=True	45	203	348	123	619
R_x	12	229	25	122	738
R_z	39	149	438	122	979
interactions	13	26	126	203	765
d.bands	74	293	54	509	228
didntLike	90	54	257	751	486
surely	88	257	61	334	31
xcoord	81	126	206	167	949
latest	91	122	156	587	230
Firstly	47	0	392	678	544
np.amin	27	269	403	53	244
mars	59	52	32	32	796
spill	29	232	235	167	769
followings	47	49	445	699	835
quaternions	34	77	0	73	694
pathname	55	112	276	57	128
1.6.x	91	122	156	9	230
frontend	93	26	104	537	537
459	41	6	177	107	862
DOC_mg	53	139	51	417	821
blown	88	232	114	444	950
450	21	223	234	557	252
Review	18	225	45	527	509
struct.pack()	3	291	336	266	969
455	54	3	298	318	811
456	54	3	101	187	158
1e3	44	243	385	425	129
df.sort	64	150	406	548	294
1e5	14	243	314	325	129
1e4	21	160	258	323	176
1e7	21	288	46	557	129
1e6	21	243	46	557	252
image_box1	3	67	261	215	957
1e8	21	243	46	557	129
blows	10	232	491	174	14
image_box2	3	67	261	15	957
Naturally	81	170	409	44	562
reference	2	215	328	335	371
histograms	59	52	233	621	710
python+numpy	76	51	65	169	730
plt.subplot()	46	203	255	577	430
Usual	76	272	118	697	730
painful	88	257	61	334	695
HERE	30	212	55	136	965
textscan()	60	296	19	742	709
np.arrange	75	243	385	425	810
thresh	27	260	431	53	945
NumExpr	76	51	345	169	788
Sector	95	138	159	686	517
colleagues	84	119	212	697	321
OMG	24	33	229	444	870
Orientation	39	126	495	93	177
wet	79	228	206	101	717
tortured	88	257	61	675	695
OMP	7	57	44	215	957
stem()	31	13	388	592	879
iris.field	75	39	73	176	649
plotly	93	23	495	51	710
steep	13	120	231	118	727
steer	11	232	232	284	53
COMPLETE	30	212	55	136	965
large-ish	21	190	258	557	42
conciseness	12	17	134	458	606
spelled	88	59	147	145	371
Results	69	162	191	347	560
m_srcaddr	99	14	335	621	884
clearly	12	59	490	144	908
documents	71	49	41	27	1
avarage	78	49	266	198	944
studying	13	120	212	118	727
mechanism	76	94	147	359	621
HxR	15	40	444	396	406
Reordering	69	31	100	530	911
realizes	29	135	181	777	406
untar	67	132	470	604	104
Product_ID	48	144	486	178	637
one-shot	76	48	131	522	207
vectorizing	76	272	118	225	990
Ordinarily	88	0	457	306	439
United	95	73	279	322	586
ID_list	48	233	158	551	526
scipy.linalg.eigh	60	296	102	431	751
there'd	12	48	389	630	31
medal	79	78	487	480	285
latin1	52	5	443	563	209
left-over	12	263	301	618	120
.gt	27	260	95	18	866
sorta	50	59	114	504	469
you'll	47	0	232	143	9
function()	63	40	14	15	341
Accelerate	7	163	428	418	166
ymargin	45	37	301	699	120
.gz	36	153	470	604	306
EXE	67	151	470	604	104
Checked	61	271	292	281	59
test.exe	40	141	281	76	632
numpy.random.exponential	60	219	132	742	162
EXT	86	129	335	539	530
bikes	53	139	51	234	821
postcode	79	228	487	480	653
Under	47	0	392	678	544
np.busday_count	53	63	68	682	390
hops	78	43	131	167	944
out_degree()	10	202	37	323	876
MATHOPERATION	41	6	251	107	943
incident	79	246	41	400	234
Serie	43	265	72	771	3
Serif	45	230	448	767	909
there's	88	59	392	630	31
molecules	81	43	206	400	675
hope	11	225	143	144	469
exchanged	79	78	487	101	955
ezANOVA	60	57	375	364	631
BivariateSpline	72	165	15	235	570
Whether	47	0	392	678	544
menus	93	154	188	427	796
acces	71	49	328	98	260
\text	45	230	448	767	909
aa*bb	75	32	289	425	486
exchanges	79	78	450	762	746
cv2.threshold	22	90	246	141	672
pivot()	43	157	72	683	956
River	53	139	42	417	775
Phillip's	4	17	254	710	441
streamlines	39	149	438	93	177
luminosity	22	4	381	438	672
rebase	67	132	44	664	315
undergrad	13	120	212	739	852
Intensity	41	6	335	766	573
streamlined	88	257	61	675	612
test.xlsx	36	10	86	638	261
iFFT	20	93	425	191	344
Recursive	69	179	169	264	145
catastrophic	14	86	314	44	84
ky=1	41	35	177	282	397
C	7	51	65	215	730
edition	19	7	432	241	850
Handbook	38	224	282	94	689
99.91765345	54	50	368	331	449
bidders	48	144	195	178	637
interacting	13	23	126	536	195
.to_datetime	43	63	460	426	787
sys.setdefaultencoding	36	10	136	36	858
yearmonth	48	123	486	197	653
numpy.random.sample	35	122	156	725	376
email	79	239	487	390	285
classless	4	17	254	710	441
OpenEXR	7	248	65	2	730
12:20	99	69	119	155	256
pcolormesh()	22	13	294	199	627
tempfid	44	205	251	196	357
figure1.legend	75	174	117	424	314
restrictions	12	229	134	552	563
figured	50	264	292	210	747
multiprocessing.Queue	29	218	183	359	803
.readline()	36	10	136	712	261
MapReduce	13	26	126	445	765
drug	79	228	487	27	285
figures	93	61	315	51	54
Centennial	54	50	368	429	428
db	71	171	473	128	88
ci	41	35	177	176	201
ch	44	227	385	0	357
co	95	271	159	519	682
cn	85	172	481	224	983
cm	22	4	294	613	479
cc	85	195	177	107	192
Grayscale	22	4	381	438	672
ca	21	190	234	557	692
570	53	204	272	332	995
cg	60	296	102	9	398
cf	4	193	19	387	371
cd	55	132	352	113	568
cy	41	6	99	107	397
cx	41	201	99	560	13
Pygame	93	248	381	571	537
crafted	2	215	145	799	187
cs	41	39	289	282	397
cr	74	195	4	255	577
allocated	3	188	447	570	450
cp	55	128	330	477	568
cw	35	122	156	252	376
cv	15	248	246	141	722
kipp_macht	43	100	108	706	986
ct	3	220	361	157	235
pound	95	271	117	167	769
whatever's	88	263	232	573	625
Get	69	31	100	530	911
trajectory	39	149	438	93	949
non-filled	59	117	433	32	177
c_	42	30	26	74	368
2019	78	204	314	325	361
recurring	79	147	450	101	675
Gen	54	271	101	429	428
Python3.3	19	7	167	301	321
c#	7	26	63	2	730
Align	69	31	100	209	837
c=	46	39	73	316	649
2014	99	182	318	34	519
c3	85	172	481	224	778
c2	85	172	481	224	778
c1	85	172	481	224	778
c0	85	172	481	224	808
c6	85	172	481	224	808
c5	53	172	481	243	808
np.vstack	42	30	286	74	595
2016	99	182	318	372	94
laser	39	126	97	93	116
kWh	48	123	486	339	779
Pulling	71	246	303	60	92
expiration	99	281	66	788	687
2012	99	182	318	372	519
Tire	95	138	159	686	517
np.argmax	42	269	403	358	244
delaying	88	48	114	35	31
surprisingly	50	59	37	334	604
chisquare	60	219	132	742	709
489	21	160	274	557	655
PyBrain	77	168	186	705	953
Sort	69	31	100	708	911
spmatrix	15	51	65	36	957
highlighter	59	117	29	32	116
matplotlib.axes.Axes	31	1	388	399	444
np.sqrt	96	29	18	173	13
highlighted	59	117	433	32	187
df2015	48	144	337	178	502
df2016	48	144	195	787	502
XLSX	71	153	86	638	561
phi	41	6	438	560	13
ball	13	232	235	480	682
lineplots	59	52	495	51	177
forecasts	79	78	450	101	675
Rxy	90	297	257	617	744
t-3	99	147	173	67	752
php	40	141	429	76	632
Tk.framework	55	128	52	477	56
concordance	78	204	195	198	944
lib-old	55	128	52	477	56
colour	22	4	433	438	198
Julia	7	51	65	2	730
dataSet	90	297	13	10	744
otype	42	27	14	15	709
command	40	141	429	76	632
Raspberry	84	246	58	609	600
LANG=	45	80	276	269	315
hexbin	59	14	297	171	627
bananas	95	49	373	355	517
likert	95	228	218	647	285
moments	20	214	132	783	4
1.7976931348623157e	14	266	46	325	482
pyplot.hist()	31	13	297	171	710
set_size_inches	5	284	255	577	430
total_val_count	74	95	115	239	227
Emphasis	10	202	37	323	876
sub-DataFrame	43	111	72	701	36
Equivalents	38	224	282	436	689
glue	13	232	232	706	986
3-tuples	39	6	270	733	573
generous	88	109	229	444	264
])"	75	297	260	10	585
derivate	20	98	231	147	738
narrowing	11	232	235	144	781
column_with_times	53	139	51	417	775
"`)	61	129	260	575	496
STOCK	53	139	42	417	624
fluctuating	10	127	355	159	359
Unfortunately	47	0	392	678	544
Exponential	38	206	132	147	71
PyObject	3	67	261	157	498
re-think	76	272	118	203	563
pyplot.scatter	31	13	388	399	608
.items()	65	231	54	690	526
Ohh	24	200	493	504	991
test1.csv	36	10	376	712	261
1Hz	21	160	206	167	769
accelerating	10	272	118	225	990
sparsity	12	292	64	348	768
appriciated	11	173	389	763	867
replacement	47	48	392	630	31
deviation	81	214	132	783	454
indications	12	193	372	144	371
guaranty	12	111	147	355	908
habitat	81	126	206	498	675
0.15.x	35	122	156	9	376
Actor	95	123	373	339	517
rfft()	20	93	425	191	344
xtol	77	170	31	396	236
transport	71	246	183	428	600
Closest	38	206	169	264	698
ylabels	5	148	32	19	884
resolution=	46	39	189	316	624
avoid	76	48	118	573	360
cosines	20	93	425	191	344
ether	59	52	25	122	338
Figure()	93	203	104	123	728
timeit.timeit	15	243	184	425	706
leverages	13	26	138	118	609
YYYY-MM-DD	99	274	68	679	151
0.15.0	91	122	156	587	626
0.15.1	91	122	156	587	626
0.15.2	91	122	156	587	626
importerror	15	176	44	696	823
proceeded	50	264	292	210	747
stage	50	232	232	167	769
gained	10	272	118	225	990
sister	13	26	372	118	398
numpy.diagonal	42	27	14	313	244
ingest	71	153	50	423	108
seeds	81	43	206	725	162
ax.axhline	46	39	289	199	627
Tavory	4	121	264	646	500
language's	76	94	65	169	734
np.tril	44	227	228	509	566
Pedro	24	109	394	646	870
_data_	59	288	284	245	479
Opened	35	122	220	292	106
df.count()	64	150	418	551	48
plt.step	42	27	297	171	810
'''	30	174	117	751	262
recompiling	7	163	428	326	315
np.triu	42	27	88	313	244
'')	86	89	163	85	66
BeagleBone	84	57	167	697	321
95th	81	159	266	104	459
housing	21	78	450	101	955
python-3.3	91	57	417	587	230
unresponsive	29	187	128	764	954
index.names	47	37	74	699	888
naturally	47	21	62	91	612
function	60	40	444	742	709
funnel	79	78	450	101	769
Interestingly	47	0	292	678	544
Well	47	200	493	504	469
hated	50	120	212	35	727
delivery	79	78	450	101	955
construction	76	116	145	573	531
Suppose	34	77	0	98	927
''`	52	185	334	85	906
RandomForestRegressor	77	168	186	705	646
make_lite.py	7	132	65	215	957
delivers	47	37	491	699	836
.idxmax()	64	150	256	197	48
illustrative	57	235	342	450	950
count	78	144	173	376	944
C0	85	298	419	168	497
'']	53	181	424	211	199
official	35	193	372	387	594
3ms	10	202	37	323	876
Dropping	69	31	100	530	739
C4	95	204	419	168	361
bearing	39	149	438	93	116
wifi	79	228	206	480	675
ASAP	24	109	229	444	870
advertisement	88	59	5	419	53
recognize	47	229	491	91	260
exaple	78	49	338	751	456
denote	81	21	131	487	702
np.logical_or.reduce	27	260	431	509	945
pandas.Panel	43	265	122	771	356
.get_loc	94	174	115	369	227
Rigs	54	186	318	797	624
pandas.DataFrame.from_records	43	265	72	771	356
store-day	79	144	195	178	637
.dropna	64	150	406	548	48
variety	13	26	138	118	398
CL	95	298	419	686	38
Transpose	34	30	396	566	520
display()	93	141	281	76	632
outer-product	34	77	0	566	694
Volume	95	138	159	762	746
Understand	24	200	493	504	469
ps2pdf	45	61	315	99	374
CA	95	181	373	168	497
pyscripter	40	141	281	76	632
multipolygons	11	73	389	406	867
2015-05-17	54	50	368	429	428
baffling	12	59	301	144	120
metallicity	39	149	230	93	466
Noise	95	298	368	429	428
CE	67	163	210	516	850
URLs	71	239	50	390	92
Otsu	22	126	7	709	670
Page	38	271	259	110	38
South	39	149	279	322	573
matrix	34	292	280	88	218
a_values	44	227	228	0	85
0.50	85	266	23	695	421
Demo	69	162	191	347	560
lambdify()	42	27	14	15	709
1366	74	271	54	690	262
exprs	36	174	74	551	314
scipy.stats.scoreatpercentile	60	27	14	313	709
single-precision	14	291	142	608	549
cv2.waitKey	68	174	117	751	486
Sadly	50	59	393	678	544
consolidated	71	153	50	706	854
CS	95	271	212	519	852
statsmodels.api	15	135	319	364	823
Parakeet	10	202	37	225	915
setmember1d	10	202	37	323	876
165	54	3	298	187	158
Holiday	99	138	318	519	687
Locators	5	148	363	558	844
oldest	79	78	450	109	955
formating	61	58	452	86	260
pyplot.clf()	12	13	301	51	120
PercentA	53	139	42	417	624
160	21	223	298	749	158
Watch	10	188	301	618	863
161	54	3	298	373	158
Ranges	99	138	66	789	687
Changing	69	31	237	530	911
slowest	10	202	37	225	876
PRNG	12	183	181	725	162
2015-03-06	99	69	119	155	126
numpy.linalg.svd	60	194	102	431	751
blanket	94	37	334	618	625
str.extract	43	157	163	589	448
distort	59	170	284	245	394
BoundaryNorm	31	13	294	653	271
pyplot.py	37	250	475	314	173
0.6.1	91	122	156	587	626
set_value()	10	272	118	167	863
-related	15	57	44	384	957
*-dev	67	57	167	664	315
t-1	85	201	426	67	752
owning	76	188	447	570	450
.sort()	64	47	396	489	640
pandas.DataFrame.apply	43	157	103	683	956
Cl	78	204	266	168	361
upload	71	239	463	443	639
Range1	78	49	338	616	456
Quadratic	38	206	282	722	905
SNR	20	93	425	507	344
indices	34	100	108	522	283
.duplicated()	48	123	486	339	779
editted	24	200	394	567	81
pyfunc	42	40	14	313	709
como	30	174	419	429	795
29th	99	140	453	109	94
array_length	3	18	361	157	969
self.values	68	32	117	545	314
re-enable	29	232	128	335	180
codec=	45	129	136	36	858
config.py	55	132	330	205	568
established	13	26	126	118	398
Generating	69	31	100	100	911
LSB	14	291	85	325	482
LSA	38	247	282	86	38
+	96	201	18	751	62
0.3s	10	160	37	534	783
ptr	3	18	361	157	450
points_inside_poly	91	122	156	415	230
LSP	20	93	425	191	344
ptp	60	269	14	313	244
<<	68	260	18	617	62
counters	65	233	158	253	526
textures	22	248	381	571	593
extremly	88	272	118	334	863
notions	12	193	138	251	606
167197	44	205	251	196	357
cv_image	90	297	26	239	744
codecs	35	153	138	9	561
Dimitris	24	109	394	140	870
brentq	60	98	458	279	438
0.38	54	108	23	579	399
0.37	96	108	23	695	421
0.36	22	4	427	438	198
study	13	120	232	144	765
0.34	96	266	274	695	421
0.33	96	266	23	695	421
0.32	20	266	324	507	421
contourf()	31	13	388	199	627
Voltage	95	138	335	519	38
k2arr	44	205	154	196	357
aka	69	21	358	91	702
Gimp	93	23	63	97	872
Alex's	4	17	254	710	441
secure	71	171	473	128	959
Integrate	60	98	458	279	71
col_num	90	293	257	332	744
pacakge	67	119	167	499	315
-19	90	297	257	617	744
overplotting	59	52	433	32	177
OPeNDAP	71	153	90	609	959
off-site	13	224	372	527	509
glance	88	59	114	334	695
+log	68	201	18	173	62
linearly	81	170	270	733	117
experimentation	50	264	393	75	564
Configure	40	141	259	76	402
chooses	2	215	491	174	621
choosen	78	49	131	442	944
np.isnan()	42	27	14	18	866
reproducibility	12	183	409	44	990
temp.linux-x86_64-2.7	55	128	293	52	56
fractions	14	86	314	325	549
nonunique	43	111	75	771	921
adjacency	34	79	41	400	234
snarky	18	225	5	419	53
ammount	21	127	355	159	359
rootdir	7	57	446	359	957
continual	94	222	456	546	160
tariff	79	228	487	96	675
r.close	53	233	74	690	211
permits	76	272	232	552	621
elegantly	88	48	61	675	360
16gb	84	127	2	410	321
il	85	143	215	5	37
pnpoly	50	174	117	751	314
quiver	31	13	495	199	627
unstack()	43	47	75	683	73
mid-day	79	78	450	101	955
JavaScript	13	26	90	609	537
logical_or	42	30	286	18	866
pylab's	31	23	495	260	627
make-model-variant	95	228	335	168	675
df1.loc	53	95	115	72	770
indifferent	88	59	5	419	53
altitudes	39	43	279	733	573
bcast	29	218	183	359	803
v1.7.1	91	7	417	587	230
IEEE754	14	86	142	325	549
ordinary	47	94	38	91	809
fudge	59	170	284	245	576
{{}	68	32	13	617	744
historgram	59	52	233	621	884
heatmap	59	52	495	621	710
mayavi	93	23	495	97	537
usecols	52	185	28	121	971
Fonts	55	132	330	775	372
09:10	54	69	119	158	126
09:15	99	69	119	155	256
regularly-spaced	72	165	270	733	301
greek	93	230	448	767	909
345	54	3	298	318	158
green	59	4	427	32	198
Trust	50	232	114	35	469
initial_theta	44	195	177	396	201
TKAgg	93	80	104	435	591
eigen	77	194	280	431	485
parsed_json	53	174	74	185	779
plt.hold	31	203	348	123	55
zen	4	129	117	145	340
choose	47	229	457	306	338
6.7	54	108	23	579	322
6.6	54	108	23	579	322
clip_lower	27	200	493	504	469
staggered	81	21	233	546	702
6.3	84	108	23	579	322
Inner	69	179	169	574	739
6.1	54	108	23	579	931
6.0	54	108	23	579	322
mayor	85	298	408	432	807
6.9	54	108	23	579	931
6.8	54	108	23	579	399
Visually	69	162	191	209	837
1.0s	81	170	95	355	283
Finish	78	144	195	787	944
somewhere	50	59	392	210	835
adaption	4	17	342	450	552
NameError	63	44	199	446	331
iplots	13	26	63	364	398
numpy.vstack	42	30	286	74	595
quant	53	123	335	197	82
df.groupby	64	150	256	197	48
then	47	0	392	91	338
them	2	116	233	251	338
affected	2	215	60	335	187
E.g	47	21	392	678	9
fragment	57	235	342	450	451
thee	11	43	235	444	469
amenable	76	257	61	334	612
Specifying	2	31	237	91	621
they	47	0	392	251	338
*x	96	201	18	617	62
thet	47	229	456	522	835
ther	47	59	456	630	835
1.01	96	266	84	695	421
1.00	95	108	419	8	497
1.03	96	266	23	695	421
1.02	54	266	84	695	421
1.05	46	266	324	695	421
1.04	21	223	46	751	252
1.09	54	108	23	8	421
classified	79	228	218	98	882
backgrounds	93	117	433	32	54
a.ravel()	27	293	26	509	146
block-diagonal	34	77	280	88	485
MARGIN	60	296	147	742	709
classifier	77	168	186	705	646
minicube	39	149	438	69	116
occurrences	78	144	195	27	944
voxel	39	126	239	45	943
Floyd-Warshall	77	270	472	152	662
living	88	232	232	419	53
hosted	19	119	432	301	156
!!!!!	24	33	229	140	870
dialects	13	26	65	118	730
lvaro	4	121	490	567	500
forth	2	232	232	335	338
sliding	20	93	382	784	396
uWSGI	40	218	183	609	803
i2	86	18	272	266	178
P500	99	138	450	762	746
Series.interpolate	6	85	12	700	910
i4	86	18	141	266	178
putty	40	119	429	609	377
subsequences	34	146	0	522	336
people's	18	225	45	527	219
np.identity	44	227	228	0	263
incorporates	12	235	342	450	950
pandas.util.testing	94	222	14	313	160
2010-01-01	99	69	119	155	256
recovering	12	59	212	419	907
installs	67	151	210	351	104
x-axes	5	52	32	19	884
na_filter=False	52	185	376	85	971
tolist	65	27	158	589	448
futr8t	45	61	330	751	315
incorporated	4	121	264	567	552
_slightly_	10	202	37	323	876
.asfreq	64	287	449	48	48
record's	78	144	148	87	629
f.plot	46	39	406	505	649
chopped	59	263	25	122	714
10:37	54	186	300	338	139
sentence	61	49	490	27	1
A.size	27	243	431	509	945
outlying	81	117	270	733	301
Cell	69	162	20	61	402
R.dll	55	132	44	384	305
up-voting	18	15	45	472	922
ParaView	93	23	495	571	537
matplotlib.widgets	93	23	104	537	728
premultiply	34	194	280	431	485
cross-posting	18	225	45	527	509
"]')	53	181	42	455	775
''))	86	32	42	211	624
performance-wise	88	272	61	334	612
Cloud's	4	17	254	710	441
inflate	34	116	145	566	694
40th	78	204	266	391	283
histtype=	46	14	383	505	649
Census	79	73	214	60	675
enhancing	12	193	134	458	990
numpy.int16	14	291	141	325	549
lapsed	99	140	453	198	27
binned	81	214	297	171	4
basecommand.py	37	250	27	475	194
VMs	84	119	2	609	377
VML	7	51	345	169	166
Set	69	31	237	530	911
cloudpoint	39	149	279	733	573
5ms	20	147	382	784	396
Sep	19	186	33	34	519
LSODA	60	296	102	279	438
Sex	48	123	159	647	653
Seg	45	37	301	699	888
binds	29	215	181	212	406
See	4	193	19	387	371
rgb2hex	22	4	294	653	488
Sec	95	138	66	686	687
Sea	95	181	373	686	340
'')`	86	89	163	85	66
solely	2	152	60	91	621
a.max	27	269	403	65	263
pervasive	88	232	232	697	469
Easy	47	252	237	675	233
Gohlke	67	151	470	219	104
.pdf	93	61	315	99	374
manner	2	48	145	91	360
OpenCV's	22	248	381	141	722
Aptus	35	122	220	292	106
strength	81	126	206	203	949
freq_chan_unfolded	74	233	54	509	228
ypt	41	35	289	200	397
-9999	6	68	12	130	910
track_id	48	123	148	448	821
unstack	43	47	75	683	73
fname	36	10	136	712	261
conducive	88	272	118	334	604
new.map	74	233	54	699	228
400,000	21	190	252	557	42
compiler=mingw32	55	112	276	57	137
prohibitive	10	188	258	44	863
Mercator	39	149	279	298	586
cumulatively	81	214	275	522	603
Side	4	162	445	145	114
Vision	38	224	282	94	689
Mean	69	138	173	264	698
__pyx_t_npy_float64_complex	3	67	261	146	831
pd.to_numeric	52	185	418	548	131
accounted	12	43	235	44	84
2*10	44	205	251	196	192
notion	12	152	134	552	563
fussy	88	59	147	334	907
heuristics	12	183	409	458	84
sebago	27	260	431	234	945
subtly	12	152	147	145	120
-len	68	32	18	545	486
mock	57	235	342	450	950
endianess	3	291	85	608	44
7.2	54	108	23	579	322
7.3	55	108	23	579	322
7.0	54	108	23	579	322
d=	75	227	385	425	211
7.6	54	108	23	579	399
7.7	54	108	23	579	399
visualisation	13	23	126	118	765
7.5	21	223	23	329	252
CurrentDate	48	281	486	339	779
subtle	12	152	147	618	120
7.8	54	108	23	579	931
7.9	21	108	23	579	399
d2	85	172	481	224	211
d3	95	265	233	203	211
d0	85	172	481	224	778
d1	85	172	481	224	211
numpy.meshgrid	42	30	286	282	397
latent	77	42	48	195	416
alluded	4	17	264	252	552
Brand	48	89	163	339	131
appended	2	49	328	405	187
fast-path	48	281	486	178	502
back-and-forth	12	232	5	144	219
summarizing	79	116	126	203	356
setup.py	67	112	276	57	137
predecessor	60	215	65	370	957
do	47	48	392	630	360
-126	14	266	324	397	421
-120	46	35	289	200	810
dh	48	123	486	339	211
di	74	6	337	708	211
df	53	281	51	551	779
dg	48	123	486	551	779
dd	99	281	68	788	221
GetFrame	10	277	37	167	169
-128	22	4	201	438	672
dc	48	116	145	706	986
yielded	2	264	292	699	59
non-array	3	40	14	15	709
pandas2ri	15	37	60	699	625
pip3.4.exe	37	112	386	475	194
dx	96	201	177	560	142
re-construct	34	179	275	566	520
dv	96	201	177	560	13
dt	96	63	68	426	390
du	55	132	330	205	568
dr	96	201	426	560	13
ds	27	281	51	339	779
dp	14	174	314	751	406
TimedeltaIndex	99	63	68	426	390
infrequent	18	225	5	170	53
test.shape	90	297	13	509	228
file_data	36	10	489	712	261
dG	96	201	426	560	13
Fresnel	77	98	458	279	809
dE	20	93	472	191	344
dB	96	93	425	336	344
re-wrote	24	200	490	567	991
unassigned	74	100	456	355	888
dX	96	201	426	560	13
dY	20	270	472	742	738
dV	96	201	426	560	13
numRow	53	139	51	417	775
largeDoses	86	18	465	137	199
plug-in	40	187	429	76	632
BUt	12	59	392	630	835
__dict__	65	220	329	663	720
depends	12	0	416	91	563
*k	96	201	18	173	13
lowpass	20	93	382	709	989
93	54	3	298	318	158
BUY	48	281	148	788	687
BUT	30	212	55	136	965
symmetric	20	194	280	431	485
*d	85	201	18	617	62
,.....	54	54	287	338	585
N_i	44	195	370	196	192
,....,	85	172	481	224	778
props	24	109	394	646	500
o_O	24	200	493	504	469
BUG	30	235	222	170	114
channelSel	74	297	4	239	577
np.random.seed()	15	135	319	725	873
reproduction	57	235	463	37	766
n_bins	96	243	297	171	192
packaged	67	151	210	351	104
ctypes	3	67	261	312	235
id=	61	49	373	185	517
xfinish	90	54	257	617	744
packages	67	151	210	351	104
downgraded	91	122	156	587	230
cos	96	201	426	560	13
ax.yaxis.get_label()	46	148	494	46	348
kdeplot	31	14	383	568	710
cow	24	109	229	444	870
font.size	45	80	448	134	909
coz	47	264	392	310	835
Focus	95	271	335	519	38
.shp	71	153	50	423	310
Leads	63	63	68	426	452
coe	27	68	12	509	192
cod	95	228	373	450	741
requests	71	218	183	609	959
com	15	174	373	390	262
col	74	95	115	239	779
coo	34	292	64	348	218
con	36	171	473	343	88
abbreviate	5	148	457	19	664
Rebuild	67	57	167	499	732
Initial	30	271	206	347	560
dataFrames	71	265	233	706	986
np.logical_and	27	260	286	18	866
Quickest	47	48	275	675	327
polynomial	77	98	458	324	438
Angle	95	298	282	519	38
*12	68	32	257	338	486
*10	75	266	289	425	421
flexibly	88	257	61	334	612
sub-columns	48	265	75	405	356
rfftn	24	174	18	617	486
,....	95	54	260	10	585
,...,	85	172	481	224	778
19980102	54	50	300	331	449
df2.set_index	64	287	406	631	294
affinity	77	168	186	705	646
dozens	50	190	233	251	326
rv_discrete	60	124	458	306	439
print-out	47	59	392	91	59
gui=	45	80	276	269	128
families	79	228	487	767	675
Vice	95	298	373	686	517
exp()	60	29	314	784	396
coherent	13	232	232	144	765
Markers	59	52	495	209	837
629.5317666666666	54	50	368	331	19
*s	90	32	13	617	744
*m	44	201	18	173	62
Sidenote	34	265	145	771	356
formatting	61	58	452	86	260
Group1	48	123	272	197	653
records_data	53	139	51	448	821
voice	18	246	58	428	600
*i	75	32	385	545	486
Building	4	17	254	478	552
store_id	48	171	303	787	502
MyNumpy	65	220	329	514	720
output_items	90	297	26	212	273
dumped	71	153	355	423	108
np.allclose	27	29	137	313	866
ax.plot_date	46	39	289	592	649
Humedad	99	298	419	198	687
comparative	12	272	409	334	604
Falling	45	230	135	654	909
confirmed	50	264	60	210	187
2014-08-29	54	69	119	158	126
punctuation	61	58	452	27	1
*a	96	29	426	173	13
extremes	81	288	266	69	116
*b	96	201	1	617	744
Canny	39	126	7	709	670
plates	81	43	235	32	675
Querying	69	265	100	530	739
nBins	44	205	251	45	943
h*w	44	205	385	196	486
word2vec	21	127	355	159	359
high-frequency	20	147	409	507	562
read_frame	52	171	473	24	88
evil	13	152	5	284	195
hysteresis	81	21	495	733	177
matplotlib.font_manager.FontProperties	31	1	388	134	879
Y	41	6	177	107	397
,...	90	54	287	751	585
self.weights	74	40	444	157	314
kept	2	264	292	210	187
dishes	78	49	195	27	944
scenario	12	183	134	630	950
thx	24	33	493	667	870
1977	54	186	300	338	139
1976	95	223	419	519	252
preceeding	78	100	456	788	910
multi-d	34	77	122	61	694
Mind	4	17	143	567	835
thr	6	68	456	405	910
1971	53	123	51	339	779
1970	99	63	68	109	27
iminuit	18	225	5	419	53
readable	88	257	61	675	612
Proper	69	252	445	530	233
the	47	21	392	91	338
Mint	19	7	432	301	156
tha	2	215	328	91	338
Sequential	38	206	169	722	145
00.006000	54	69	119	158	126
repost	18	15	45	472	922
adding	2	263	145	573	531
Lazy	38	271	282	519	38
hills	39	43	235	709	562
flooring	76	94	147	169	734
27th	99	182	318	109	94
RAND_MAX	14	86	46	325	482
PyImport_ImportModule	15	135	44	777	823
transformed	2	215	328	98	187
zillion	10	277	83	225	169
does't	76	59	361	212	273
---------	30	128	368	429	428
behind-the-scenes	31	1	138	257	621
inv()	60	296	102	431	751
mocked	57	235	342	450	950
df.year	53	139	51	72	821
maxval	96	266	324	391	421
clip_box	31	13	388	558	879
aray	2	215	328	98	187
caps	59	159	433	32	608
xdata	41	13	177	592	397
networkx.draw_graphviz	31	79	41	97	234
2X2	34	21	131	88	943
aram	46	39	73	505	649
standardization	77	168	186	341	443
new_ids	74	227	385	0	228
terabytes	21	127	355	159	359
table's	2	265	457	405	356
arange	42	243	286	358	484
self.train_stack	27	227	54	509	228
Trading	38	78	450	519	38
*B	44	195	4	617	744
reassign	2	229	456	212	923
overfit	77	168	186	705	646
security	13	78	183	609	959
;-(	50	264	114	210	469
system-site-packages	67	112	276	598	137
sends	29	246	183	609	600
TIMESTEP	78	49	338	616	456
.tail()	64	287	449	48	48
clip_on=True	31	13	348	592	879
cxfreeze	40	232	301	697	625
critique	18	15	178	472	265
df2's	48	123	486	276	637
Leb	24	121	264	646	500
fillvalue	65	27	81	648	526
Lee	38	224	372	519	689
Relationship	47	21	65	251	730
purple	59	117	427	304	198
df.index.tolist()	64	233	74	551	526
comments	4	121	264	646	500
ParisFrance	48	144	195	787	637
Overwriting	69	162	191	789	739
Let	57	235	143	567	451
External	30	50	368	429	19
Lev	4	121	254	646	500
someway	50	48	145	630	31
emoji	93	79	41	97	732
mpl's	93	23	138	51	54
minimization	77	98	458	279	438
rescale	5	288	284	245	479
IncrementalPCA	77	168	186	359	443
yearList	46	39	289	46	649
10times	10	202	37	323	876
numpy.asarray()	3	94	162	404	235
*3	75	227	385	617	486
dtype=uint16	44	227	385	196	357
comment=	52	185	376	121	971
i.m.o	88	257	61	334	695
Increment	69	162	191	61	114
impenetrable	50	193	114	35	564
theirs	50	264	393	697	564
Image	22	248	381	141	722
opinion-based	18	225	45	419	219
cipher	61	49	158	27	1
continous	81	21	270	733	301
deconvolve	20	48	382	742	360
lolims	45	13	334	269	479
keep_default_na=False	52	185	28	85	793
Cut	69	31	235	127	911
dilemma	11	48	389	419	360
**	47	174	392	751	835
pays	10	272	118	702	863
Make	47	0	237	678	9
delighted	11	48	389	630	360
balances	81	170	275	44	576
per-user	55	132	330	499	315
work-arounds	57	152	463	37	451
balanced	21	190	258	203	950
dispersion_plot	15	57	44	499	823
searchsorted()	42	27	349	358	640
])])`	90	297	13	10	585
unchanging	12	43	131	588	283
suffice	47	229	392	630	338
Dietrich	4	121	394	646	500
fight	50	232	232	697	53
accordingly	2	229	457	335	338
150,000	21	190	234	557	42
-thanks	24	33	229	140	870
ax.set_yticks	46	148	363	46	810
Stacked	69	162	193	209	856
encodes	61	21	162	487	260
encoder	71	168	186	341	646
DYLD_LIBRARY_PATH	55	132	352	113	798
encoded	61	58	443	539	260
pseudo-random	81	183	48	725	162
days=1	99	274	68	679	390
reset	2	47	457	335	180
str.contains	43	157	163	589	448
responding	29	187	128	764	364
page_id	78	144	195	27	944
unhashable	63	44	460	172	341
read_csv	52	185	28	121	793
sklearn	77	168	186	705	646
matplotlib.colors.Normalize	22	4	294	653	271
np.dtype	3	18	141	266	178
deque	42	188	88	165	581
statistic	77	214	132	783	162
evidence	12	152	5	552	371
Functionality	71	26	122	574	457
physical	81	127	355	159	359
handmade	88	257	61	144	950
array-value	27	29	403	28	945
Running	40	37	237	699	59
interested	12	0	134	630	907
Bbox	31	1	30	399	873
catalog.logg	68	260	431	234	945
unwilling	47	59	392	170	907
s.loc	90	95	115	239	227
SHOW	30	212	182	343	965
polite	18	15	45	472	922
shade=False	41	39	73	176	649
traindata	36	10	74	712	942
brew	67	151	327	232	334
sum-of-products	76	51	65	169	730
i*j	44	195	4	255	228
balloon	59	154	188	427	203
modules	67	135	44	697	732
Mission	40	154	188	427	2
together	2	116	233	706	986
to_hdf	52	185	446	24	793
-*-	52	5	443	563	110
.flat	42	30	286	489	146
t.txt	36	10	376	712	261
numpy.spacing	14	86	314	325	549
BLAS	7	163	428	418	166
global	15	135	181	777	195
datum	39	6	279	185	573
known	12	21	60	799	702
axis-1	27	100	403	65	520
np.maximum.accumulate	42	27	349	358	244
rectangles	59	117	433	32	177
Severity	59	14	335	708	97
supposedly	47	215	491	91	59
MyList	65	94	329	514	720
dbo	30	171	473	420	88
zone	39	268	206	426	27
flask	40	119	90	609	537
graph	59	52	495	51	177
flash	40	119	429	609	374
rightmost	78	263	25	122	979
hist()	31	14	297	568	710
permanently	2	229	457	335	180
jreback	35	122	220	292	376
Zhu	4	121	264	646	500
ny_winter_dat	90	54	257	332	744
Overmeire	4	121	264	646	500
grinds	10	127	355	323	655
anonymous	65	40	181	145	195
Particularly	88	120	138	144	727
forgiving	88	152	5	419	53
responders	18	225	45	170	81
GPlot	57	235	490	37	451
bitshifting	88	257	61	630	612
altering	2	215	457	335	531
Global	38	162	181	61	195
numpy-1.6.2	67	151	152	604	104
{column	65	233	158	540	526
numpy-1.6.1	84	163	152	241	791
p	96	195	177	560	142
eventlookup	86	32	10	772	838
pylab.scatter	46	39	383	592	649
netcdf4	71	57	214	60	574
ncdump	40	37	222	384	108
repetitive	88	16	61	334	695
PCM	21	127	58	428	359
PCC	85	270	472	783	662
PCA	77	168	186	705	899
bold	59	230	448	767	909
re-sampling	99	147	449	48	817
versioned	91	57	167	499	732
SmoothBivariateSpline	72	165	15	235	438
Notably	14	86	142	325	549
noloop()	10	160	37	323	876
During	50	246	292	167	769
satisfy	12	100	291	355	148
supporting	35	94	138	9	606
unsure	11	59	392	91	907
2014-04-29	54	69	119	158	126
commandline	40	141	281	76	632
adressed	4	224	490	170	81
1-dimensional	34	77	0	73	694
cKDTree	72	165	15	152	570
apache	40	119	429	609	377
hoops	50	232	393	35	87
appears	47	215	491	174	59
change	2	229	457	335	338
a_array	34	100	251	586	336
ali_m	4	121	264	646	500
precursor	13	246	126	203	765
Debian-based	67	119	167	499	732
.exp	71	153	50	127	854
friendly	88	257	138	118	612
exiting	29	187	128	764	954
matplotlib.mlab.magnitude_spectrum	60	40	444	396	396
trial	50	264	206	167	564
.spec	67	239	44	384	305
Inc	19	163	33	590	850
.exe	67	151	470	604	104
inference	12	183	186	341	563
*A	44	194	280	704	598
9.10	67	151	167	664	732
last_received	90	297	13	10	744
id's	79	144	195	787	944
illumination	12	170	231	709	562
AKA	60	296	375	364	631
rarely	88	152	147	334	604
take()	42	27	396	358	380
test_func	94	40	444	784	709
terminal	40	141	281	76	632
pixelwise	81	43	131	522	283
.equals	94	260	431	551	160
entities	79	43	233	251	944
covariant	60	194	280	431	485
Tiger	84	151	167	241	850
concatenating	2	116	145	706	986
jam	76	232	232	306	439
marginally	10	202	37	323	876
entrance	95	298	419	519	38
*C	85	201	426	617	62
towers	81	43	131	588	283
ctype	3	48	261	312	312
hyperbolas	39	149	438	93	116
Christian's	88	257	61	334	612
postgresql	71	171	473	128	88
misconception	12	152	134	552	908
clumps	34	77	131	522	283
markerfacecolor=	46	226	73	316	649
logarithm	77	214	132	783	238
Concise	47	48	61	675	31
None's	6	68	12	130	910
y_b	96	201	18	391	13
MMM	99	281	318	686	687
labeled	81	21	25	546	884
indexed_orders	48	144	337	405	502
incidents	79	228	487	365	675
Memoryview	76	51	261	312	235
1.2.2	91	57	167	499	230
multiprocessing.Manager	65	218	183	359	803
spy	60	296	375	348	631
dedicated	13	26	126	118	765
dxx	27	260	431	234	945
expanding	2	116	145	573	531
m.shape	44	293	285	617	146
dxs	90	297	257	10	522
sub-select	94	222	72	683	36
substring	61	49	163	27	1
spl	75	174	117	211	486
purity	88	272	5	419	606
handle	47	229	457	306	621
distinguishable	59	4	433	32	198
Renaming	69	265	75	405	739
pre-defined	81	21	457	306	702
productive	88	225	5	419	219
NAN's	6	68	338	522	910
ValueType	48	144	456	178	502
bonds	95	281	373	448	814
CELL	78	204	338	347	560
multipage	93	61	315	99	374
criterion	12	183	291	588	148
1.2.0	91	7	417	587	230
allowable	12	183	409	44	563
SKLEARN-STOCKS	37	250	27	475	194
test.py	40	132	352	384	305
License	38	224	63	516	850
sp1	90	54	257	241	322
numpy.min	27	269	403	53	244
uint	14	291	85	608	969
csv.writer	36	10	489	712	261
compatibility	35	122	156	9	376
interpolation=	22	36	294	653	488
remember	50	264	292	210	747
parallelisation	76	51	345	169	166
candles	59	147	450	20	955
explicit	88	257	61	145	612
progressively	10	170	409	167	576
idiosyncratic	88	59	5	257	53
prefactor	20	170	362	44	576
tagged	18	225	490	170	81
.isin()	43	157	72	683	956
offence	50	200	114	424	469
indeed	24	59	392	210	469
cols	74	174	74	551	262
graphviz	93	79	41	400	234
coll	46	39	73	46	649
tagger	77	168	48	195	416
Chu	4	200	490	504	81
dropna=False	64	47	418	548	73
cold	79	147	206	357	955
birds	13	228	206	480	852
non-zero	78	100	131	588	283
df.convert_objects()	94	222	446	548	160
Greater	10	202	37	323	876
acknowledge	12	229	490	419	701
selves	31	1	388	399	879
loggedData.dat	71	132	222	384	854
""`	61	58	163	85	501
window	29	187	188	427	2
Cannot	63	44	199	582	136
df.loc	53	95	115	239	227
Wed	99	186	318	34	789
colB	48	123	148	178	637
colC	48	123	486	339	779
colA	48	123	486	178	637
col=	95	39	260	505	858
halt	10	127	355	159	954
thrid	2	116	145	98	531
col7	48	123	486	197	82
col4	48	123	486	656	82
col5	48	123	486	656	82
col2	48	123	486	656	82
col3	48	123	486	656	82
col0	90	260	431	234	945
dimshuffle	42	30	396	74	595
Compatible	84	163	33	590	322
equidistant	39	149	270	733	301
half	81	170	25	122	176
recap	12	235	342	450	950
x+2	41	6	289	107	397
valarray	65	233	81	735	311
halo	39	126	433	93	949
Marius's	57	235	342	450	59
wont	47	0	392	143	338
fm.FontProperties	55	174	330	205	568
ignore-installed	67	112	276	57	128
streaks	81	170	266	391	459
anti-pattern	88	94	147	334	908
"""	30	174	117	343	858
Parse	69	31	50	60	316
pycharm	40	141	281	76	632
entirely	88	59	392	630	907
feat1	53	18	272	682	199
queryable	94	222	446	702	160
feat2	3	18	201	266	199
em	95	271	233	519	986
el	74	195	408	432	807
en	86	174	408	432	807
ei	41	6	370	391	192
eh	24	200	493	444	469
trade-offs	12	183	409	458	606
Implementation	38	179	169	722	145
ed	2	215	328	91	260
nanargmin	42	27	14	313	244
p-values	77	214	132	783	162
Dude	18	200	490	646	81
Except	47	0	392	678	544
eb	47	57	167	499	315
goose	50	120	114	35	53
fires	29	187	188	149	769
vBeta	44	205	251	5	598
et	38	224	282	722	689
ew	33	218	165	167	690
mapped_function	44	293	4	509	228
eq	57	40	444	396	622
FINAL	30	212	55	347	560
8.75	41	288	324	200	252
er	60	174	65	742	908
out.h5	94	222	446	702	369
shown	57	235	342	98	59
opened	40	37	50	764	364
space	81	263	25	122	576
list-based	10	272	118	225	863
m5	85	172	442	224	778
e^	96	201	426	560	13
`'`	61	58	452	230	298
0.6.28	67	151	167	499	128
receiving	63	44	199	582	888
viable	88	257	61	334	612
shows	47	215	491	174	59
inevitably	12	152	5	630	604
singularities	60	98	38	279	809
size=1000	75	243	385	425	484
fire1	53	123	148	448	821
fire2	53	123	148	448	821
multialignment	45	226	30	134	348
line-by-line	76	277	118	225	169
e6	86	18	272	266	199
e1	74	172	108	224	778
e0	53	139	51	234	821
e3	85	172	481	224	778
e2	85	6	370	107	192
rearrangements	48	144	419	168	497
milestones	79	49	450	405	356
84.50	54	69	300	158	126
`''	86	89	163	589	66
mpl_style	45	13	457	269	338
stdout=	36	10	489	288	942
promotion	63	44	199	146	341
lambda	27	150	10	772	838
Even	47	0	392	678	544
benefited	18	225	393	407	564
1997	99	182	318	372	361
guessing	47	59	392	424	907
IOPro	71	272	345	359	457
omitted	57	263	342	618	187
Asia	95	268	373	322	497
comprised	34	21	233	98	702
Combine	69	31	100	530	911
orthographic	39	149	279	199	586
comprises	2	21	233	487	702
impossible	88	59	147	144	908
forwarding	40	119	429	607	377
Ever	50	264	114	210	469
size	34	21	284	245	479
sheer	10	272	118	44	863
sheet	71	153	86	638	561
silent	35	152	301	284	625
categorical	77	168	186	341	443
bookmark	50	232	232	407	781
implimentation	38	206	495	175	71
weekdays	99	140	450	109	94
6GB	21	127	355	159	359
Dependencies	67	151	259	110	104
\xlrd\	37	250	27	475	194
initialising	2	116	145	573	531
Domain	95	181	373	519	38
Px	41	40	177	396	622
friend	4	109	229	444	237
useage	76	188	118	169	450
Py	91	57	167	735	321
RuntimeWarnings	12	152	301	618	625
mostly	13	152	5	91	604
numpy.floor	75	174	117	0	486
plat1.csv	78	49	338	405	713
edgelist	71	79	41	400	234
transverse	2	116	328	98	835
mplCanvas	31	13	284	245	479
S.dot	44	227	137	704	598
2011.05.16	99	140	453	155	687
$10	79	78	487	519	955
ax.set_ylim	46	284	253	46	339
travis	67	57	167	697	732
f_l	96	201	18	173	62
f_i	60	40	177	396	622
f_j	85	195	4	617	577
changepoint	78	140	35	651	456
fruits	79	228	487	480	502
ylims	5	288	284	245	479
sublime	40	141	281	76	632
x=-3	39	149	29	69	116
x=-1	39	288	29	69	116
correction	24	219	394	567	454
__getattribute__	3	220	329	663	720
PhD	13	298	212	686	852
unecessary	76	188	118	573	863
Call	2	215	237	281	9
Combined	69	31	237	127	316
tick-labels	5	52	32	19	884
Calc	71	153	50	60	108
Ph	85	174	370	751	192
Phi	85	194	280	431	485
myfile.txt	36	10	136	712	261
YS-L	24	121	394	567	500
z-scores	81	214	275	203	603
Blame	18	200	490	504	53
once*	15	135	222	384	315
objective	77	98	458	396	738
lhs	94	111	468	18	160
diagonal=	46	39	73	505	649
google-fu	50	264	393	75	564
Yield_pct	53	139	51	682	199
N=3	44	205	370	196	943
AxesSubPlot	31	1	388	399	879
HEIGHT	95	181	260	185	496
S20	94	18	162	266	178
S21	86	18	272	36	178
PV	79	298	173	467	35
Markov	77	42	48	195	416
verticalalignment=	46	226	494	316	348
unmelt	48	265	75	706	356
flawlessly	24	109	229	140	124
largish	10	190	258	203	42
mydata.txt	61	153	50	423	108
idx-1	90	95	115	239	227
sunset	28	140	453	198	221
diagonals	34	77	280	88	943
nuclear	39	170	230	93	466
dispersed	81	21	233	251	713
.pivot_table	49	47	406	631	445
Incredible	24	109	229	140	870
writer.writerow	86	129	489	137	347
A.I	60	292	137	348	218
ds2.values	90	297	13	10	744
f.close()	36	10	489	712	261
miniconda	67	151	210	351	104
A.X	85	201	426	69	116
Jean	24	121	394	646	500
ground	39	126	235	42	949
224	54	3	298	318	811
ratio	5	170	284	245	479
proportion	81	214	266	783	726
texture	22	126	7	571	672
subfolders	71	132	233	384	713
worthwhile	88	272	5	334	695
nexts	44	204	370	196	252
LandUse	48	144	337	621	356
temporarily	45	218	457	335	180
\pi	96	201	426	560	679
PE	95	181	373	686	497
Trick	2	21	392	167	338
mdates	15	135	319	15	745
ENTER	29	37	222	764	769
runlengths	78	100	108	588	283
9da899b	35	122	156	292	376
mid-point	81	170	266	391	283
homegrown	76	26	393	75	564
data1.txt	36	10	50	712	261
verbosity	12	183	5	458	563
off-load	76	51	65	169	730
canvas.mpl_connect	93	187	104	149	282
100,000,000	21	190	258	557	42
matplotlib.widgets.RectangleSelector	31	23	388	97	439
sonar	39	126	58	428	949
start=0	78	204	216	616	456
3-digit	47	21	342	91	260
everything's	40	232	232	335	469
time.strptime	86	274	68	679	151
P2	85	172	481	224	778
1.98	54	54	257	332	399
Ticks	5	148	32	19	844
varibale	60	40	444	396	709
aperatureimage	74	205	251	196	228
RGB	22	4	381	438	672
set_ylabel	31	1	388	399	958
Location	95	138	159	789	653
nonstandard	7	57	65	697	730
concern	12	272	134	552	990
tackling	11	48	389	799	360
level_0	94	47	486	631	502
Xlsxwriter	69	265	303	60	739
justifies	12	272	118	552	908
datastructure	71	265	122	702	457
justified	12	183	409	44	563
ambg	74	293	4	255	577
Equations	38	206	282	722	71
endpoint=True	75	243	289	425	810
pthreads	7	163	167	418	166
style	59	23	457	97	710
interpolate	72	165	15	235	301
article	4	193	372	387	371
np.amax	27	269	403	65	244
Grouping	69	31	100	530	911
v3.4.3	19	7	417	13	644
customer_ID	78	144	195	787	944
dateTime	69	162	191	789	837
ballpark	10	170	409	44	84
1.1760001652770353	68	201	154	545	62
timedelta.total_seconds()	65	157	14	735	709
comes	50	232	491	174	781
affine	39	149	248	298	102
COW	40	271	429	609	377
characterization	12	183	409	44	563
Galois	38	224	282	722	689
mirroring	20	117	25	122	520
kdeplots	69	52	233	621	710
msvcrt.dll	37	163	386	475	194
4-D	34	77	0	73	943
parent()	42	157	14	15	709
_have_	12	59	5	630	31
COM	7	51	65	2	730
COL	48	123	486	583	779
COO	34	292	64	348	218
WebJob	84	57	167	241	321
scikits.bvp_solver	57	42	38	279	809
rebuild	2	232	167	335	180
yscale	5	148	494	639	825
record_array	3	188	361	404	211
4-d	34	77	0	73	943
covert	2	116	162	98	260
Known	38	162	191	61	837
rebuilt	67	57	167	664	732
SequenceMatcher	43	157	103	588	956
.append	74	233	54	690	526
vector-vector	76	51	345	169	166
Upgrading	91	122	156	587	230
1ms	10	160	274	323	655
MTGP	53	139	256	250	199
observers	81	100	131	588	283
LabVIEW	71	153	50	423	108
Tukey	77	193	19	387	371
covers	59	215	491	174	371
stems	12	152	60	478	120
countless	50	264	393	75	618
Nearest	72	165	15	152	570
CO2	95	49	419	751	262
4-5	21	160	234	557	326
4-6	21	160	274	323	655
developing	13	26	126	195	765
4-8	21	160	234	557	326
Continuation	30	235	342	281	114
pythonanywhere	71	171	303	128	88
TYPE	48	123	486	547	637
shift()	43	85	103	683	956
ids	48	144	195	787	944
fashioned	88	257	61	334	695
soil	79	228	487	101	675
Realizing	24	200	233	251	59
scipi	15	135	44	499	732
embrace	50	120	212	35	727
omits	78	263	456	618	769
Newton's	77	98	492	652	809
mediocre	57	183	409	630	950
borderaxespad=0	46	226	494	316	348
11.9	54	108	23	297	399
y_bar	41	201	177	560	142
11.4	84	108	23	579	322
media	40	239	58	609	212
11.6	54	108	23	579	399
11.0	91	108	23	579	322
Chart	38	162	191	209	382
11.2	54	108	23	579	399
11.3	54	108	300	579	931
epoch	99	63	68	426	27
self-answer	18	15	45	472	922
streams	71	246	58	428	600
nlogn	10	160	356	327	668
contouring	72	165	279	199	586
setupext.py	55	132	352	113	798
pedantic	18	59	490	419	908
finish	50	160	232	167	769
mukey	48	85	486	178	637
9x1	85	194	280	5	485
Maplotlib	93	23	495	51	177
trawled	50	264	393	75	564
non-sense	57	59	301	170	835
Lorenz	77	98	48	195	416
fruit	79	228	487	480	653
Shade	59	52	495	209	177
Description	48	138	159	680	653
:]])	90	297	13	10	744
traps	13	152	65	257	625
INVERNESS	53	139	42	250	131
1e-16	14	86	314	325	236
trapz	60	124	458	742	396
rder	3	227	154	30	357
0,200	75	243	324	695	252
isinstance()	3	94	329	15	235
redirects	71	153	330	384	108
merge.py	37	250	27	475	194
DSMs	4	121	264	646	500
excel	71	153	86	638	561
EPS	93	61	315	99	374
PART	48	144	486	787	502
touch	47	232	232	144	338
EPD	67	151	210	351	104
speed	10	272	118	225	990
flierprops	31	13	334	269	879
isscalar	3	220	329	663	235
struct	3	67	261	312	235
legitimately	12	86	409	325	84
Interactions	30	271	167	499	732
desktop	84	119	2	410	580
9:34	99	140	453	198	636
9:35	99	253	119	525	256
9:30	99	253	453	525	256
treatment	12	152	134	203	120
martist	15	135	319	777	823
complements	59	117	433	32	177
struck	50	59	114	284	695
momentum	2	229	181	306	338
real	12	21	409	91	563
ColorbarBase	31	13	388	97	879
tick_bars	30	281	55	198	687
itertools.permutations	75	233	54	690	526
Theodros	24	109	229	444	441
Phillip	24	164	264	646	500
Eclipse	40	141	281	76	632
usefully	88	257	232	144	81
Eric's	4	17	254	710	441
detract	18	225	5	419	53
draw_networkx	31	79	388	399	879
execution	10	218	128	225	954
Shop	78	140	419	686	955
Shot	4	17	254	709	562
Show	57	235	463	37	451
darkgrid	45	226	494	134	608
misinterpreted	18	200	490	210	81
downward	39	149	29	122	116
scipy.interpolate.RectBivariateSpline	72	165	15	235	570
Before	47	0	292	678	544
densest	59	117	433	723	177
hacky	88	257	61	675	695
findobj	31	1	388	399	879
uppercase	61	58	443	86	501
legend()	31	203	388	399	879
hacks	88	257	61	257	564
contour()	31	13	388	199	627
exporter	71	239	232	609	852
duration	79	147	450	198	955
sklearn.feature_selection.chi2	60	256	137	313	709
nonzero	34	100	216	586	283
stringio	65	153	19	514	439
recorded	79	147	206	428	949
bigdata	2	116	145	335	338
conservative	12	152	409	44	84
dies	40	127	355	624	954
Interface	38	224	282	2	730
recorder	13	246	58	609	600
putted	57	235	342	450	59
MultiProcessing	71	116	158	630	457
dtype=float	75	227	141	266	969
stdev	96	159	173	104	459
mangling	61	37	222	699	625
Modified	30	235	237	347	560
credits	18	15	45	472	892
non-index	43	47	72	683	73
Strip	57	37	222	37	451
ontology	79	21	233	621	675
keying	69	265	303	789	739
output.txt	36	10	136	712	261
central	39	126	235	709	949
easy-to-read	76	257	61	675	612
paints	59	52	128	51	977
z's	41	6	239	107	577
chol	60	194	102	704	751
Dimensional	34	77	0	73	943
numpy.linalg.inv	60	194	102	431	751
greatly	11	173	389	763	867
Forgot	24	200	493	504	991
NewData	78	204	456	522	944
ones_like	42	27	88	404	244
heater	81	170	206	167	769
researching	50	264	393	75	564
seed=None	15	219	444	725	484
operator	42	111	95	18	272
data_Y	44	100	251	586	228
logicals	76	94	131	458	734
prepare	57	229	126	203	765
bucketing	81	147	173	376	603
Downvote	18	225	490	472	81
df._get_numeric_data()	94	222	72	548	160
gridsearch	35	122	138	9	376
interpretation	12	59	134	91	908
data-point	81	21	266	391	192
pdf.fonttype	45	80	448	269	906
zeroHamming	96	266	266	391	283
x-4	96	201	18	173	62
plt.imshow()	22	203	348	653	627
training_data	48	174	272	339	262
629.508	54	50	368	331	19
matplotlib.axes.AxesSubplot	31	1	388	399	444
0-360	22	288	324	506	672
subDataFrame	43	157	103	276	956
.EXE	40	57	167	697	315
\approx	61	58	443	137	501
hire	13	225	212	170	219
5-dimensional	21	190	234	557	42
scipy.interpolate.NearestNDInterpolator	42	193	329	313	439
non_bookers	48	144	195	178	637
bucket	79	147	487	376	603
df.div	64	150	406	65	48
data_2	43	47	396	771	520
data_1	64	47	74	551	73
table_name	36	171	182	343	369
)))	75	32	385	425	486
pd.Categorical	43	122	334	269	73
Coloring	59	52	495	209	837
delimiter=	36	10	376	121	971
momentarily	29	154	188	764	2
describe	57	235	392	144	451
moved	50	215	292	210	187
sales	79	78	487	101	955
plt.annotate	46	226	30	316	348
moves	2	215	25	122	769
Jake	4	224	372	94	704
completeness	4	17	254	458	441
antenna	39	149	438	93	40
mathematica	13	98	38	364	809
storage	71	188	122	702	457
execfile	15	141	281	308	632
infos	57	193	372	387	219
Brent's	72	165	15	235	570
mathematics	13	42	38	118	809
string1	74	174	54	185	262
gaining	10	272	118	627	990
polar	39	149	438	298	177
v7.3	71	153	336	423	306
mutability	65	94	329	145	890
delimiters	61	58	452	539	501
string_	3	18	162	266	470
flattened	34	77	396	73	520
coverage	81	147	450	101	675
d.items()	74	233	54	690	526
fig.colorbar	46	284	348	577	430
FixedLocator	5	148	363	558	844
strings	61	58	162	539	260
Wstrict-prototypes	55	128	293	52	56
maturity	53	281	335	250	814
is.na	27	32	10	772	838
.savefig	36	203	348	123	942
.max()	64	150	256	72	48
pointing	24	109	394	567	991
26983	74	293	54	196	336
obss	44	205	228	0	357
mp4	93	61	315	99	942
mp3	71	246	58	428	600
country_code	79	140	453	101	326
Kronecker	34	194	280	431	485
chucks	81	116	145	706	986
C2091	63	176	164	582	572
Schmidt	38	206	282	722	71
batches	21	116	258	706	986
matplotlib.org	93	193	372	387	704
referring	12	215	60	252	907
Appending	69	31	100	530	316
nonlocal	35	40	123	145	195
rtol	96	29	31	28	236
batched	71	153	126	702	457
kernprof	10	277	222	225	169
=25	27	260	431	234	945
nodes	39	79	41	400	234
=20	27	260	431	234	945
Parallel	38	206	282	61	145
mpf	3	291	142	325	549
amplitudes	20	93	425	191	344
Guassian	20	206	382	147	71
confidential	57	239	463	37	451
very	88	59	229	334	604
mpl	93	122	104	537	591
obs2	85	6	185	586	577
1-hour	81	147	450	101	675
obs1	41	6	185	586	577
1px	22	117	433	45	198
verb	30	271	419	519	38
uncompiled	7	51	428	534	783
mpz	34	77	0	404	694
cartesian_product	35	122	138	292	376
randomness	12	183	409	44	563
NlogN	10	202	356	327	668
np.argmin	27	269	403	65	146
node1	41	9	54	690	526
node2	41	9	54	690	526
entires	78	190	131	522	944
statmodels	13	26	126	118	398
voxels2	90	293	13	545	146
append=True	64	47	406	631	369
PointInTime	78	204	430	338	361
3.14	96	266	18	391	13
pandas.read_table	52	185	28	121	793
self-contained	57	235	463	37	766
T.set_subtensor	27	297	13	509	744
answer*	18	15	45	472	922
TSV	71	153	50	423	108
parser.pyx	37	250	27	314	802
sould	47	0	232	143	835
FlowCytometryTools	15	135	44	499	823
Circles	39	126	495	199	177
Latin	61	230	448	767	909
Outputting	2	116	145	706	356
accumulator	14	291	142	325	581
citations	79	228	487	640	285
historic	79	78	450	762	702
jedi	55	112	276	308	630
fractional	14	86	314	325	253
unsurprisingly	10	202	37	323	876
friday	99	140	453	109	94
minimize_scalar	60	98	458	279	438
ma	6	269	12	53	957
rudimentary	13	120	212	739	950
my_proj_name	55	132	352	113	568
answers	18	225	45	527	219
pyplot.legend	46	13	383	592	649
ARCHFLAGS=-	55	112	276	57	128
answere	35	200	490	567	81
strong	12	183	5	419	563
colored	59	52	433	32	198
ahead	50	232	232	407	469
np.exp	96	29	18	173	13
doctest	57	152	301	618	625
permutation	34	194	280	566	485
.tolist	65	233	158	648	526
TS2	38	235	282	170	451
c-1	85	201	426	560	142
Victor	24	109	394	140	870
Nader	24	33	229	140	870
Unspecified	95	298	456	355	910
matplotlib.rc	45	80	448	435	909
vc	90	297	257	10	199
normed=True	5	14	297	171	4
add-on	13	26	63	516	398
chunks	71	153	145	706	986
spawned	29	218	183	359	803
easy-to-use	13	26	63	643	398
Creating	69	31	100	530	911
numpy.fromiter()	42	27	81	648	368
df.L.shift	68	32	154	545	62
Boosting	77	168	186	722	905
model's	77	183	186	203	765
injury	48	49	456	405	502
Rename	15	135	44	405	275
erode	20	126	7	709	670
abridged	57	235	342	450	950
descriptors	71	248	247	571	168
chessboard	81	43	266	438	562
numpy.corrcoef	60	270	472	742	396
broke	50	232	292	210	781
yyyy-mm-dd	99	63	68	426	452
hurry	18	120	114	35	727
Quantity	53	138	159	339	653
25MB	71	188	447	570	450
numpy.any()	60	296	14	15	709
Fitting	77	206	132	147	96
nine	78	21	233	251	326
infer_types	45	263	60	618	625
reshaping	34	30	396	566	520
YLabel	86	129	465	137	66
nonsingular	85	194	280	431	485
spreadsheet-like	13	94	122	702	457
f0	53	18	272	266	214
f1	41	174	272	107	214
f2	41	172	272	107	214
f3	53	18	272	339	214
f4	86	18	141	266	178
f5	53	18	272	36	214
pushes	2	215	491	174	338
f8	86	18	141	266	178
f9	86	129	272	36	214
tenor	48	281	486	339	502
f=	96	266	289	28	58
pushed	2	215	328	167	187
beautiful	88	257	61	444	264
Tuples	65	162	158	540	890
Matpotlib	59	13	495	199	371
singletons	14	94	147	145	908
exclude	6	263	456	355	338
lacks	12	152	138	118	621
C-based	76	94	65	735	957
.dtypes	53	139	74	682	199
uncheck	40	187	429	764	2
1052	38	174	117	751	38
Results.csv	57	49	50	405	108
numpy.core.numeric	15	135	330	205	823
chops	61	25	452	325	781
y_valid	77	256	132	783	994
^1	96	201	18	327	62
PycharmProjects	37	250	52	475	194
zero-order	72	165	382	235	396
fp	36	29	489	712	261
fr	48	123	272	197	82
fs	96	93	370	507	344
ft	78	266	370	391	252
fu	50	120	114	444	264
fv	85	195	251	5	192
fx	41	6	177	107	211
fy	41	172	177	107	778
9.699	54	50	368	331	19
f}	86	129	465	211	347
X.shape	44	205	154	0	357
fc	44	174	361	5	682
fd	36	10	489	712	261
ff	3	188	272	404	235
ExcelReader	94	222	446	24	160
fh	36	10	136	712	261
level=2	64	150	256	551	48
draw_artist	31	203	348	123	55
fl	53	139	42	250	199
fm	29	203	348	123	55
fn	36	174	489	712	622
fo	74	195	4	509	228
mtrand.c	37	250	27	187	194
prerequisites	67	151	327	499	732
column's	78	49	456	405	356
documentation	35	193	19	387	371
bugs	35	152	220	292	106
Deep	38	224	282	281	689
fB	10	202	37	323	876
Sometime	12	225	490	170	81
Comma	69	162	191	61	837
File	37	250	27	314	194
inline	93	141	281	76	632
pre-build	47	48	392	697	31
8640	21	190	234	557	252
width_ratios	46	284	255	577	430
feed	2	116	145	98	92
myList	74	297	54	690	228
mpldatacursor	93	23	104	97	518
image2pipe	36	112	276	288	942
useOffset	45	148	334	269	844
dsplit	42	30	396	566	595
Python-2.7	84	163	152	241	850
pyplot.subplots	31	284	255	577	430
foo1	75	243	385	425	484
foo2	53	174	74	551	211
AVAILABLE	55	128	330	477	568
non-negative	77	42	280	431	485
botched	67	57	167	697	315
GHz	84	127	2	410	580
fruitful	50	264	393	75	564
segfault	40	37	301	699	954
pandas.read_excel	52	185	86	638	561
size=1	75	243	289	200	427
sys.byteorder	12	291	37	534	783
myf2py	15	135	319	777	823
numpy.delete()	42	27	88	750	244
finer	72	165	270	733	301
Obtained	30	271	342	347	560
food	39	43	235	107	852
summaryMeansArray	78	49	338	405	456
Sebastian's	4	17	254	710	441
expDate	79	144	487	101	653
sweeping	12	183	48	195	563
Protocol	71	153	122	702	306
gcf()	29	203	348	123	55
Qt's	29	187	104	537	803
12min	95	181	368	90	428
zfit	78	204	266	391	18
Semantic	38	224	282	94	689
applymap	43	157	103	750	956
read_stata()	71	153	50	423	108
fully	12	59	392	144	908
27.82	54	266	324	200	421
-vcodec	36	112	136	288	942
capability	13	23	138	118	398
W.dot	96	201	18	173	62
.Massias	24	200	493	778	991
line-plot	59	52	495	51	714
dif	27	260	431	234	945
data.csv	36	10	376	294	261
referred	2	215	328	252	187
expanding_mean()	79	147	173	167	817
backend.qt4	45	80	448	435	591
f.cpp	55	112	276	215	128
34sec	95	181	368	90	428
wacky	57	235	292	381	59
pygame.surfarray.pixels3d	42	27	14	313	244
numpy.ndarray.tofile	71	153	50	423	108
-builtin	76	94	65	257	417
Engine	38	224	90	110	594
scipy.stats.chisquare	77	168	132	742	162
image's	22	126	7	571	670
since	47	0	392	91	544
col_id	48	123	272	339	682
half-way	81	43	266	167	769
Ironpython	7	57	65	697	730
dirs	29	132	352	384	854
pun	88	59	179	739	67
bass	20	93	425	507	344
ast	65	135	81	589	448
Nicely	24	109	229	444	870
timeline	59	147	450	621	884
Zwicker	24	121	264	646	500
asc	78	49	337	98	713
mathy	11	109	229	444	469
base	47	21	392	91	338
coastline	39	73	279	322	586
asd	86	181	272	211	199
ask	18	225	45	527	81
asn	48	123	486	197	653
bash	40	141	281	76	632
pyyaml	67	57	167	499	732
Venn	59	79	41	400	234
dip	81	116	235	203	765
Thresholding	38	206	282	722	114
caption	59	52	452	51	54
distribution's	40	113	167	697	732
\numpy	37	250	386	475	194
2**32	14	291	46	325	482
subframes	43	47	75	706	986
dis	60	296	472	742	396
habit	88	152	5	419	53
v5	85	172	481	17	645
knots	72	165	15	235	438
singleton	34	77	396	73	520
Img	44	293	4	509	228
encoding	52	58	443	563	209
end_clock	74	195	4	255	192
10^6	21	190	234	557	129
reflected	2	215	328	212	187
scrolled	93	187	188	427	2
TDE	71	153	303	60	108
.group	94	222	74	551	160
.5f	86	129	465	137	347
wx.Panel	29	154	104	537	728
0.4.0	91	57	156	587	230
northing	39	149	279	766	573
Pseudo-code	57	235	342	347	560
Py_Initialize()	15	135	44	236	957
doctests	7	94	65	697	730
bitness	67	151	167	664	315
Delta	96	138	419	396	923
skipna	45	185	334	269	793
shifted	81	21	25	122	603
SQLAlchemy	71	171	473	128	88
Helpful	24	109	229	444	264
specifiers	61	58	162	539	119
Nelder-Mead	77	124	458	279	438
recursively	2	116	145	522	338
.50	95	298	419	8	361
Oddly	47	37	301	699	544
\\	86	89	136	299	66
getter	3	220	329	663	720
jordan	60	206	248	722	71
off	47	232	232	122	781
eumiro's	10	17	254	710	441
user3666197	4	109	264	646	500
Numpy+MKL	7	163	152	418	850
kindly	11	173	143	763	867
Vertica	71	171	473	128	88
.fit()	77	256	132	218	597
enthusiasm	18	225	5	458	219
.tiff	93	61	381	99	593
deciding	50	232	60	35	769
u.T	85	194	137	5	598
1.4.x	91	122	156	587	230
Douglas	24	109	394	567	469
Current	30	271	237	347	560
juice	95	228	487	168	653
20544	78	204	201	338	361
substantial	10	272	118	225	990
karg	31	13	457	306	879
2013-08-30	54	50	368	158	428
scipy.special.binom	60	27	14	313	598
vulnerable	12	152	5	419	84
datetime.date	99	63	68	426	390
outbound	79	147	450	101	817
date_start	53	281	51	448	821
jacobian	60	124	458	324	438
Rearranging	69	162	191	61	837
1.4.0	91	122	156	587	230
1.4.1	91	7	417	587	230
medoids	81	43	41	588	234
towards	12	170	25	122	84
Thx	24	33	229	667	870
quote	61	58	452	539	501
Thu	54	186	318	34	789
filesystem	71	119	183	609	959
Installing	67	151	210	351	104
BEAR	86	181	373	185	437
inputed	71	246	342	450	950
renormalizing	81	147	206	101	949
secound	59	140	32	19	884
eaten	10	127	355	167	576
The	47	0	392	678	544
STORE	53	139	74	682	199
salary	79	78	487	197	653
1.20	91	122	156	587	230
artefacts	20	117	231	709	562
start_df	48	144	195	787	502
subgroup	79	144	173	376	459
blend	59	117	433	32	198
4-byte	14	291	85	608	44
669	54	3	101	797	139
fontManager	15	129	386	751	858
666	54	3	101	797	158
Pyplot	59	52	495	209	837
matplotlib.pyplot.plot	31	13	388	592	879
662	68	32	154	797	139
favour	76	272	5	419	990
multi-gigabyte	12	272	258	44	863
Thirdly	2	21	328	98	702
3x2	34	77	251	88	943
3x3	34	77	0	88	943
3x4	34	77	251	88	943
3x5	34	77	251	88	943
0,2,100	75	243	289	425	270
celltool	15	176	44	696	305
maxymoo	24	109	394	140	870
bias=1	44	194	403	5	598
completion	40	141	281	76	632
askewchan's	4	17	254	710	441
Mention	69	265	191	574	739
shrunken	59	52	32	19	884
pretty	88	59	114	334	604
numpy.sqrt	60	29	137	173	598
diff_a	74	100	216	588	283
rigth	59	117	25	122	979
de-couples	5	148	363	179	844
trees	77	168	186	705	646
de-coupled	5	288	32	179	884
famous	13	193	372	387	398
referencing	2	116	328	573	531
1.82	10	108	274	297	399
hassle	88	272	118	334	695
withe	22	248	495	571	722
column-major	34	30	396	404	77
3xN	34	77	0	73	943
QxQ	44	195	4	5	192
scanning	71	116	145	573	531
undergoes	20	246	58	428	949
kink	85	37	301	5	597
descriptions	57	193	233	170	371
Neither	47	0	392	678	544
DEAP	13	26	126	118	950
deploying	50	119	429	607	377
revolution	39	149	495	93	177
heads-up	24	109	229	567	870
wow	24	33	493	140	870
mkvirtualenv	67	112	276	57	137
ffill	64	85	449	700	73
Part	30	271	342	281	560
2013-02-01	99	69	119	155	126
numpy.fromiter	42	27	81	648	311
result.index	53	139	256	551	838
PIL.Image	22	248	381	141	722
backfill	6	85	449	700	817
allBlue	74	233	54	690	526
all-NA	78	49	456	405	944
Sanity	27	40	95	347	866
spectrumnoise	41	6	297	171	397
french	61	58	443	539	501
np.sum()	42	269	403	65	244
joblib.load	71	153	50	423	108
useable	76	26	126	697	31
12345	54	181	287	338	139
Xcode	67	151	210	326	104
Hard	57	239	463	37	451
0Hz	20	93	425	507	344
hbar	81	52	173	621	603
conv2d	60	296	472	742	396
liked	4	109	229	444	264
Discussion	35	193	19	387	114
each	81	21	131	522	702
motivation	12	225	134	458	81
wen	74	37	328	98	888
subgraphs	81	43	41	400	234
skips	2	263	491	174	621
likes	47	0	491	174	338
cumulated	81	147	450	101	326
mkl-cp27-none-win32.whl	67	112	276	499	128
scipy.sparse.lil_matrix	34	292	64	348	218
described	4	193	19	252	371
acheived	50	264	292	450	59
Most	47	0	392	678	544
describes	12	193	19	252	371
.whl	67	151	470	604	104
maintenance	35	122	118	257	376
wait	18	15	232	407	64
label's	59	288	32	19	884
b_i	85	195	370	5	142
partly	12	152	60	210	120
packs	2	116	233	251	986
non-intuitive	88	152	301	618	120
PyQtGraph	13	26	63	118	398
else	47	0	143	424	835
like=	86	89	163	85	66
entriesPerHourPerRain	64	139	406	250	294
rgb2gray	22	90	246	141	942
to_hdf()	10	202	37	359	169
Dont	47	59	392	630	835
scipy.spatial.distance.cdist	60	270	472	313	662
y-values	81	288	266	733	884
ex-post	77	124	457	783	738
Done	24	200	493	567	991
kdtrees	72	42	15	152	570
Issues	69	31	100	209	316
python-gtk2-dev	67	151	327	232	334
numpy.random.uniform()	60	40	14	742	709
voters	18	225	487	170	285
Furthermore	47	0	392	678	544
breadth-first	39	79	41	400	234
dim2	44	227	385	0	357
dim3	44	205	251	196	228
dim0	41	6	481	107	211
dim1	75	205	385	107	211
terminator	61	58	443	539	501
0.2.1	91	57	167	499	732
Tweepy	71	246	303	60	92
IFFT	20	93	425	191	344
anymore	47	0	392	91	338
csv-files	71	153	86	423	561
.xlsx	71	153	86	638	561
belong	78	21	131	487	702
output's	3	229	162	15	621
modification	2	17	342	335	950
.xlsm	36	10	86	638	561
.max	27	269	403	65	945
3-vectors	34	77	131	88	694
used	47	215	328	91	187
usec	10	160	274	297	399
tvec	90	37	199	332	995
loc=mu	96	35	177	176	201
.map	64	150	256	340	838
.mat	71	153	336	423	306
2d-arrays	34	77	258	73	694
dims	34	205	251	196	498
uses	2	215	491	174	621
user	2	246	429	609	2
Bendersky	35	193	372	387	704
chaning	2	263	222	335	625
dimB	44	205	251	196	192
dimA	44	205	251	196	192
75000	95	223	234	557	692
irregularly-spaced	39	149	279	766	573
segmented	39	126	7	709	670
cleary	12	59	490	144	451
kx=1	41	35	177	282	397
grins	47	21	342	534	783
wedges	59	52	32	19	884
_path	15	176	44	696	136
Visualization	38	162	282	209	837
768	21	190	251	45	252
putmask	42	30	286	53	244
Pythonic	88	257	61	675	327
quarters	99	140	453	109	94
12.400000	54	108	300	797	139
useful	88	257	5	334	264
evenly-spaced	81	288	270	733	301
$	55	112	276	57	128
png's	93	61	315	99	54
df.any()	27	260	431	234	945
2014-10-31	99	287	68	72	390
guaranteed	12	152	147	355	908
nth()	43	157	103	683	956
sphinx's	15	57	44	215	957
+pi	96	201	426	69	13
guarantees	12	152	147	552	621
transformation	39	126	248	191	738
...	47	174	392	751	469
..,	44	205	370	196	192
march	99	140	453	109	94
cusip	48	281	486	623	502
evaluate	77	98	458	396	738
xterm	40	141	429	76	632
13:03	54	69	119	158	126
tiring	88	257	5	334	604
..!	11	109	229	444	870
13:00	99	253	119	525	256
..?	47	229	392	91	835
numpy.isclose()	42	27	14	313	439
atleast_3d	42	30	286	74	595
18000	21	190	234	557	252
Simpson's	77	98	458	652	989
tinkered	50	264	393	75	564
overriding	31	220	329	663	720
pyplot.text	31	1	388	514	879
submission	4	17	254	458	950
Computing	38	179	169	264	698
interestingly	10	202	37	699	876
resorted	50	264	292	210	747
holes	39	117	235	546	301
mgilson	24	121	264	646	500
1.8.1	91	7	417	13	230
32bit	84	7	432	241	644
1.8.2	91	7	417	13	230
fig.patch.set_alpha	46	35	289	46	430
donot	67	57	167	697	732
easy-install	67	151	210	351	104
yellow-red	59	117	433	32	198
creation	2	188	118	573	531
7%	77	183	409	44	162
trends	81	147	450	101	675
random.randint()	60	40	444	725	709
electric	39	126	206	93	257
11GB	21	127	355	159	359
exceeding	14	86	409	44	576
pythonically	11	48	389	675	360
python-level	76	272	118	169	990
slash	61	58	443	230	501
cgi	40	57	429	384	305
everybody	24	109	394	646	75
np.real	96	29	18	336	13
run	40	37	429	699	954
rub	88	59	147	630	908
byteswap	3	27	334	15	439
cge	24	121	264	646	500
lakes	39	73	279	322	586
Australia	95	228	373	168	653
redundancies	78	263	456	355	944
numpy.percentile()	6	68	12	130	910
ORG2	48	144	148	178	637
ORG3	48	144	148	178	637
ORG1	48	123	148	178	637
integers	14	291	162	325	470
ill-defined	18	225	5	278	53
Scan	39	43	239	152	102
sharey=True	5	284	255	577	430
^GSPC	53	138	42	250	775
Lion	19	7	306	301	232
74	54	223	298	318	811
Overwrite	69	31	100	530	911
featureset	74	233	54	540	526
equal-sized	34	188	145	546	694
thisArray	90	293	228	509	146
seeing	12	59	60	618	907
gufuncs	35	166	372	387	398
Haswell	84	160	2	410	580
0-d	3	44	0	73	890
Their	47	21	147	9	544
offset=0	3	227	228	157	357
0-n	74	233	158	540	336
rolls	78	170	25	122	283
numdifftools	60	98	458	279	738
scenarios	79	21	233	167	765
unique_df.loc	53	139	51	417	821
Blitz++	76	111	147	169	734
eventhough	22	264	292	141	59
0-D	34	77	0	73	694
0-4	78	204	338	168	361
0-5	78	288	338	198	221
0-6	99	140	453	198	687
himself	18	225	372	670	552
0-1	22	4	324	438	672
0-2	78	288	233	251	326
tupleize_cols	52	185	28	121	793
0-9	86	89	163	299	66
key=len	75	269	403	28	486
np.trunc	14	29	314	325	549
set_facecolor	31	1	388	399	879
FacetGrid	31	14	383	568	710
Datetimes	94	63	68	426	452
denormalized	14	86	85	325	549
Unpacking	69	162	191	61	890
...!	50	200	114	504	469
truetype	55	128	330	477	372
Attribute	63	44	460	582	787
pd.DataFrame()	65	233	74	551	526
....	47	174	493	751	469
...,	90	54	257	10	585
autocorrelation	20	93	248	191	738
...?	47	0	392	424	835
outweighs	76	272	118	225	990
doesn	47	37	491	143	888
--->	54	3	117	187	823
Above	57	235	342	450	544
tomography	39	126	235	93	177
ymax=	46	226	73	316	649
color=colors	46	39	73	316	649
f.iloc	53	139	51	239	779
numpy.s_	44	293	228	509	146
Calculating	69	31	100	264	698
markevery	31	13	388	134	608
400000	90	54	13	10	744
Triangulation	72	165	15	152	570
joris	4	121	264	646	500
forgo	45	27	14	15	439
setenv	40	112	276	499	315
Speaking	13	120	212	35	727
']])`	53	139	272	250	775
forge	35	122	220	604	868
product_name	48	123	486	197	779
1.4.0rc1	91	122	156	587	230
1.4.0rc2	35	122	156	292	376
wihtout	2	116	457	402	531
visits	79	144	487	231	653
multidimensionnal	34	21	131	91	694
Thought	47	264	392	424	469
numpy.datetime64	99	63	68	426	452
codeline	57	235	342	450	950
eval	65	233	81	589	448
Trellis	59	52	495	621	177
linprog	60	124	458	396	438
-1000	96	266	324	391	13
cdict	65	4	158	540	271
required	2	215	392	91	621
hsplit	42	30	286	74	595
depth	81	21	206	91	283
heats	81	43	206	170	563
Geiger	71	246	58	609	600
requires	2	215	491	174	621
evenly	81	288	270	546	301
gt	48	260	148	339	637
gs	5	284	255	577	430
gr	53	195	4	255	199
gp	64	150	256	197	653
gz	36	153	336	423	306
gx	41	6	177	107	397
gg	53	123	335	448	779
ge	95	268	373	686	285
gd	59	174	222	751	262
gc	29	218	447	570	55
gb	21	127	355	159	359
ga	90	297	13	332	744
go	47	232	232	306	338
gi	55	176	330	696	372
gh	35	122	220	292	106
non-datetime	94	111	456	355	227
3:6	90	95	115	239	227
wizard	11	120	212	444	727
blindingly	88	59	65	334	604
nose	67	112	276	499	732
Profit	86	181	373	211	340
relocated	78	49	338	405	262
deprecation	35	122	156	415	376
g4	54	172	101	332	211
g3	90	172	481	224	778
g2	85	172	481	224	778
g1	41	172	481	224	778
g0	41	172	481	224	778
portfolios	79	78	173	588	955
SpT	53	139	42	682	199
P&L	79	78	450	101	955
scipy.linalg.solve	60	296	102	431	751
tradeoffs	12	152	134	458	606
Pyramid	71	248	90	537	537
targetpos	48	144	195	178	637
colmap	53	123	460	172	787
on_press	29	154	188	149	282
np.partition	42	27	349	358	244
in-loop	10	40	444	396	709
ArtistAnimation	31	1	388	399	879
mouthful	88	59	147	334	908
deleting	2	116	145	573	531
N-Dimensional	38	206	169	722	71
relink	67	151	327	664	334
Spreadsheet	71	265	86	60	561
titanic	57	168	186	705	443
re-structure	57	272	463	203	451
infront	61	58	443	86	501
click	40	154	188	427	2
Briefly	47	235	342	450	950
notIn	74	297	4	509	228
opaque	59	117	433	32	198
vales	78	49	173	27	459
.tsv	71	153	50	423	108
row.A	48	123	272	339	779
.axis	46	35	289	46	430
Minimizing	41	21	0	742	336
11th	78	140	338	109	456
]))]`	90	54	13	10	744
;	47	0	392	678	544
focuses	4	193	372	387	219
Cunningham	24	121	264	646	500
matplotlib	93	23	495	51	54
Greek	61	230	448	767	909
focused	18	225	45	419	219
Volumes	78	144	195	198	944
Aha	24	200	493	504	991
Ahh	24	200	493	504	991
repes	15	40	181	212	406
self.dates	68	32	13	545	744
products	34	194	275	88	734
postprocessing	88	264	292	630	31
SystemError	63	176	397	582	136
Wonder	11	109	229	444	469
examining	2	116	60	618	531
([(	75	18	287	211	585
.reg	36	132	50	769	108
return_type=	46	39	73	505	649
([:	90	297	4	509	228
([8	90	54	257	266	969
convert_object	43	157	460	172	787
1-based	42	111	26	369	77
groupbys	43	265	75	706	356
anomalies	13	126	206	195	765
manipulate	2	229	457	306	338
.get_position()	90	297	289	239	995
itk	71	248	381	141	722
onpick()	29	187	128	236	282
pd.Series.diff	10	150	256	334	48
Reminds	88	257	61	675	612
counties	59	73	279	322	586
32400	27	260	431	234	945
reflects	12	215	491	91	702
numpy.void	3	220	329	514	890
optimizing	76	272	118	225	169
df2.drop_duplicates	64	150	406	631	48
ordered=True	53	18	272	682	199
tennis	79	228	487	480	675
xytext	5	226	30	134	348
benchmark	10	202	37	534	783
index's	2	49	456	405	356
UCLA	39	73	214	322	949
donut	59	52	495	209	177
scikit-bio	12	57	60	9	120
total_img	34	77	0	404	694
-sin	96	201	426	560	13
drops	2	263	491	174	769
depricated	35	122	156	9	376
StudentID	78	144	195	405	944
]``	94	95	115	239	227
escapes	61	58	443	539	501
idxmax	43	157	103	683	956
using_tzset	10	202	37	323	876
escaped	61	58	443	230	501
multi-dimension	34	21	0	73	71
key_1	79	144	195	488	637
documenting	35	152	60	257	625
key_2	48	144	195	488	637
OFF	22	4	198	438	198
Replace	69	31	100	530	911
np.linalg.det	60	194	280	704	751
sample()	35	215	19	9	908
hesitate	18	225	45	472	53
locates	2	215	328	405	702
r^2	96	201	426	560	142
round-about	88	257	61	675	327
plot_number	31	203	255	577	430
located	2	215	330	487	702
ctypes.c_void_p	3	67	261	312	235
elliptical	39	149	438	93	949
argsorting	6	68	12	130	910
.tex	93	61	315	99	374
Q&A	18	225	45	527	509
Normalization	38	162	191	61	71
normalize	81	214	275	783	603
int16	14	291	141	266	969
]`"	74	293	4	509	228
-ish	10	190	258	630	604
Actions	79	162	191	61	739
OData	71	153	50	423	260
hashed	63	44	476	540	890
Batch	38	179	169	722	145
ccrs.PlateCarree()	46	13	388	592	879
spelling	24	200	222	567	991
pydev	40	141	281	76	632
index=None	52	185	376	121	971
rwidth	5	14	297	171	479
ller	24	200	493	504	991
prettify	11	48	61	675	31
Eigen	7	51	428	412	166
sys.float_info.epsilon	14	86	314	325	549
SAME	30	212	55	136	965
object-oriented	13	23	138	118	195
agenda	13	120	5	419	398
tilt	90	174	25	200	262
fastest	10	48	61	675	327
unsolved	18	225	490	799	81
2001-02-02	99	281	486	788	687
Patches	31	1	388	399	879
insert_image()	36	10	86	638	561
minimising	12	272	118	573	990
Smith	4	121	264	102	340
ideone	84	7	167	301	321
brittle	88	152	147	334	394
exclusion	61	263	19	618	439
Buffer	63	11	199	582	385
help()	15	277	222	499	732
159	54	3	101	797	158
np.empty	75	227	228	0	484
Luis	50	264	393	697	371
pixel	22	126	7	45	672
Execute	29	218	444	236	59
auto	45	13	284	245	479
!..	24	33	229	140	870
modA	40	187	429	764	954
iPhone	7	224	63	516	850
scipy.integrate	60	124	458	324	438
SecondData2	94	222	177	293	160
SecondData1	94	222	270	293	160
onpick	29	187	444	236	282
mods	57	235	490	450	237
uogrd	41	149	438	200	573
fundraisers	79	144	195	787	944
pathway	79	49	41	27	702
---------------------------------------------------------------------------	63	44	421	582	136
Celsius	39	288	438	310	884
mode	40	187	128	764	54
pools	29	218	183	359	803
Displaying	69	31	100	209	911
processLine	27	269	403	65	172
upward	39	149	29	122	116
get()	65	220	444	236	406
x.groupby	64	150	256	197	48
grok	13	120	212	144	727
chunk	71	188	145	167	854
inverted	59	288	25	122	520
2015-07-30	54	204	119	338	361
ec2	84	119	2	607	377
Spatial	38	206	282	722	689
ec=	46	226	73	316	649
accessors	43	63	450	426	817
PKP	95	181	419	36	497
Season	48	123	66	339	653
reboot	40	119	429	664	954
critics	79	228	487	480	285
ax.get_xaxis()	46	35	494	46	348
K-means	77	168	186	705	899
wich	47	21	392	383	702
ivisual	13	42	48	697	950
pylab_setup()	37	35	475	187	314
one's	88	232	5	91	908
.eps	93	61	315	99	374
date2num	99	274	68	426	745
terminated	40	176	397	764	954
reacts	29	187	188	149	282
diagonal	34	194	280	88	485
memoryviews	7	51	261	312	915
ect	2	174	233	751	338
advisor	50	264	292	534	783
Cunningham's	4	121	254	710	441
set_xlabel	31	148	363	558	958
seeking	11	59	212	419	907
keep	2	229	457	335	338
keen	11	120	114	35	907
show_map	37	250	489	236	314
test.out	36	10	136	712	261
x86_64-linux-gnu-gcc	63	176	397	696	136
clip_on	5	13	253	134	608
succeeds	2	37	491	699	888
solf10	75	227	385	266	486
matploblib	47	57	495	199	732
2-d	34	77	0	73	694
b**2	96	29	18	173	62
2D-arrays	34	77	0	73	694
datetime.time()	43	63	68	426	452
hyperbolic	39	98	438	93	809
adjoint	85	194	280	431	485
data_length	78	100	370	196	192
FYI	94	222	392	9	160
well-formed	61	215	147	540	260
ASC	48	204	337	547	361
attach	57	239	463	37	451
attack	11	42	389	799	360
2-D	34	77	0	73	694
pandas.date_range()	43	147	103	376	817
widgets	93	154	104	537	728
row-based	71	265	122	203	356
non-parametric	20	214	382	147	4
2-3	21	160	234	557	326
2-1	96	201	18	560	62
2-7	21	190	46	557	321
2-4	21	160	274	167	326
2-5	29	160	128	167	326
myBoundary	74	40	444	396	622
0005	95	181	373	429	428
R	60	296	375	364	631
np.linalg.inv	44	194	137	704	598
fuzzy	88	183	61	588	907
overwhelming	13	120	138	35	963
updating	2	116	60	335	531
data-points	81	288	270	733	301
achieves	10	17	37	534	950
ben	55	132	330	477	568
Thankfully	13	232	138	697	394
fscanf	71	296	375	364	631
distinguishes	12	21	147	546	606
30:61	90	297	13	239	744
beg	12	111	147	170	908
bed	18	200	493	407	64
bee	59	117	235	35	120
providing	47	0	138	91	531
distinguished	81	43	266	32	198
bet	88	0	118	630	31
exhibit	12	152	138	44	120
Information	38	224	282	519	38
19:29	54	69	119	158	126
10Gb	21	190	234	557	42
unchanged	2	215	328	405	187
msec	10	160	274	297	399
non-ascii	61	58	443	539	501
logsumexp()	60	296	102	742	957
recompute	81	195	472	255	863
0000000	54	243	101	751	252
constrained	77	98	38	279	809
border	59	117	433	32	198
_list_	65	40	444	404	622
pandas.DatetimeIndex	94	63	68	426	452
instance	31	1	328	514	720
nbconvert	93	61	315	769	374
0xef	61	5	443	563	898
rand_pos	74	37	54	522	336
xMin	74	6	216	586	995
scipy.interpolate.UnivariateSpline	72	165	15	235	438
plugging	50	232	232	567	219
nuisance	61	152	456	618	501
scipy.sparse.vstack	42	27	286	313	595
0xe2	63	5	443	563	898
consequences	12	152	60	618	120
colorup=	46	39	73	316	649
_show	37	250	27	187	194
0xe9	63	5	443	563	898
over-written	2	37	328	699	187
Expects	65	233	158	540	260
nsmallest	94	27	349	358	640
~10^6	21	190	234	557	252
canvas.draw()	29	203	348	123	55
Spectral	22	4	335	438	672
Matt	4	121	264	646	500
Python-like	7	51	65	2	730
anyway	47	59	392	630	469
_wrapit	3	227	396	157	314
Mate	24	109	394	140	870
LinearRegression	77	168	186	705	443
c_mat	21	127	355	159	359
12x	10	202	37	323	876
rec_history	74	233	54	509	228
12}	85	181	287	730	585
Math	38	224	282	411	689
5x3	57	270	258	88	943
7x7	34	77	239	676	943
envs	55	128	52	569	568
c_double_p	75	227	385	157	498
math-mode	45	230	448	767	909
12M	21	190	355	159	359
datetime's	43	63	68	426	452
np.loadtxt()	52	185	336	423	793
attained	34	188	275	566	576
]`	90	297	4	239	744
complex256	7	291	142	608	549
slows	10	272	118	225	781
findContours	22	248	7	141	670
X2d	90	195	4	617	577
quantified	12	183	409	44	84
120	21	223	298	318	252
121	54	3	298	318	158
122	54	3	298	318	158
123	54	3	298	318	158
124	54	3	298	318	158
125	21	3	298	318	158
126	54	3	298	318	158
127	54	223	201	318	158
128	21	223	85	318	252
cusips	48	281	486	339	502
shp	44	205	154	196	357
evolution	81	126	48	195	416
evident	12	215	342	252	120
falsey	3	94	95	18	890
AhmedKhalifa	55	128	52	477	56
matplotlib.__version__	91	80	184	103	630
she	18	225	143	170	741
Incrementally	79	78	173	101	698
gravitational	39	126	438	93	949
dpi	45	80	284	245	619
Masked	22	68	12	53	722
np.einsum	42	143	215	74	37
Start_Time	78	144	195	522	944
trendline	32	124	132	792	4
inkling	50	59	114	630	469
legacy	35	26	138	9	730
usefulness	12	152	5	552	53
Jenkins	71	246	429	609	92
linalg.det	60	194	280	431	485
NONE	6	68	12	355	866
Good	24	200	493	504	991
left-aligned	5	14	32	19	884
2014-09-30	95	138	373	198	687
horribly	88	59	61	334	695
arr.data	3	220	361	212	273
labled	59	52	266	621	884
scipy.stats.kurtosis	27	269	403	54	709
written	76	215	65	450	187
lue	95	4	201	438	198
correctly	47	215	392	91	59
horrible	88	257	61	334	695
lables	5	148	32	295	884
neither	47	59	392	91	59
unaligned	69	265	75	706	739
birth_year	53	139	74	682	199
sole	2	215	147	514	621
spares	88	272	118	334	863
Recall	12	183	134	252	908
Massias	24	109	394	140	870
BanditGroup	31	220	444	236	444
Race	95	271	373	168	517
precious	24	33	229	140	870
OPTIONAL	30	271	368	429	428
Rack	95	181	373	686	428
thank	24	33	229	667	870
undetermined	12	98	458	279	84
interpretations	81	43	131	170	219
permutated	78	144	337	621	944
Populating	69	31	100	530	911
uncaught	63	37	301	582	625
jersey	78	228	373	480	517
quadrilateral	39	149	279	152	102
bitwise_or	3	44	14	15	341
Struggling	43	265	450	771	921
Populate	69	31	100	530	911
addition	47	0	147	91	338
CID	78	49	456	405	944
autolabel	31	14	383	568	710
'`)	61	129	465	575	906
gradoffice	55	128	330	477	568
minimise	12	98	458	279	738
Horizontal	59	52	32	209	837
Careful	12	152	147	145	908
NLTK	38	57	167	697	353
tricontourf	72	13	495	199	627
isolating	50	116	393	75	564
username	55	132	352	477	568
0.067139	54	50	368	429	449
releasing	35	122	156	292	376
ax.locator_params	46	148	494	46	348
BigQuery	71	171	303	128	457
1000x100	34	77	251	88	943
expenditure	43	14	335	621	653
ours	12	152	60	697	394
kicks	50	232	301	534	783
Subsequently	2	57	337	335	180
pure-numpy	10	17	37	710	441
novel	88	183	5	419	606
sibling	78	49	456	787	502
contexts	13	94	147	145	734
tshift	43	85	449	48	817
example**	57	225	463	37	451
tt	85	174	272	5	211
owns	3	220	447	570	450
x.fillna	64	150	10	772	838
pad_inches	45	226	494	757	479
0,255	22	4	201	438	672
Purchase	48	138	66	197	653
resident	29	218	355	159	450
non-structured	34	94	0	73	694
neuron	81	195	239	745	949
lambd	14	86	314	391	738
tcaswell's	4	17	254	710	552
agains	47	21	275	534	783
BB\n	54	50	300	797	139
1-exp	96	201	426	560	13
Jeff's	4	17	254	710	441
orbital	39	126	48	195	416
PPA	67	66	57	499	732
missing_value	3	220	460	514	787
sparray	3	220	361	36	235
lmplot	31	14	213	568	710
PPS	4	121	264	646	552
dir()	15	135	181	795	873
Swinckels	4	121	264	646	500
PPT	93	61	315	99	374
Apply()	30	162	191	574	739
Morgan's	60	42	248	722	689
t=0	41	201	426	560	13
rightfully	12	152	181	145	195
absorb	18	232	232	567	469
4.5x	10	202	37	323	876
Netezza	71	171	303	128	88
2004-05-30	54	69	119	158	126
2004-05-31	54	186	300	338	139
transaction	79	78	450	787	955
reflection	12	183	235	195	563
Throwing	2	37	301	699	888
modeled	81	21	342	450	950
9:00	99	253	119	525	256
draggable	93	154	188	427	203
user-friendly	88	152	5	419	398
She	4	121	264	102	500
reside	71	215	122	702	457
taller	59	288	433	32	714
accurate	12	170	409	44	84
Sunday	99	140	453	109	94
markeredgecolor	31	13	388	134	608
datarr	74	195	4	509	228
low-level	76	51	65	257	417
spells	79	147	450	101	717
numpy.put	42	27	286	358	244
size=	46	226	494	46	348
fine-tune	5	229	457	780	394
26L	68	205	154	196	357
PiCloud	84	119	183	609	377
extends	2	215	491	174	479
Consult	47	193	19	387	371
warrant	18	225	5	419	53
homework	18	225	212	739	852
Continuum	7	151	210	319	594
pandas.Index	3	220	329	514	890
263	54	3	298	187	158
262	54	3	298	187	158
261	37	250	330	205	173
260	54	3	298	187	158
267	90	3	101	332	995
266	41	205	370	196	252
265	21	190	234	557	42
sequencing	13	183	206	203	765
y_test.shape	44	205	4	509	228
269	54	3	340	81	277
268	54	3	298	21	898
temp.macosx-10.7-x86_64-2.7	55	128	293	52	56
Proof	30	21	456	347	560
sizer	29	154	188	427	203
sizes	81	21	258	546	576
alternatively	47	0	457	306	9
user-defined	2	94	181	514	720
sized	34	21	258	546	986
tick-mark	5	170	32	626	884
Elementwise	69	179	169	264	145
str.replace	65	157	163	589	448
np.show_config()	7	277	184	418	166
pinging	18	200	490	567	81
extend=	46	226	73	316	488
lends	76	272	118	552	863
ax.bar	46	148	435	592	844
dstart	75	174	289	751	390
a-c	85	172	481	67	62
a-b	96	29	18	173	62
a-e	96	201	18	173	62
json.load()	71	153	50	60	92
a-z	86	89	163	299	66
np.any	27	260	431	18	866
liking	57	229	457	306	695
.abs()	27	139	431	234	945
ROI	39	126	7	709	670
df.dropna()	64	47	418	548	73
+=1	74	297	54	690	577
__contains__	3	220	329	663	866
polinomial	72	170	231	147	4
ROC	77	168	186	705	646
ROE	95	123	335	606	255
16x16	21	190	258	45	943
Bulk	76	94	122	574	734
date&time	99	140	453	310	221
ROS	29	248	90	609	600
statsmodels.tools.tools.ECDF	60	219	132	742	162
ROW	48	144	373	178	517
myFunction	44	174	117	751	314
Practically	12	170	409	44	576
chokes	47	37	301	699	59
expansion	60	42	248	191	238
2000.0	68	266	289	200	421
sklearn's	77	168	186	705	646
set.intersection	27	157	14	551	526
Maturity	95	281	338	339	687
recognized	61	215	328	539	260
all_x	75	227	385	425	486
recognizes	61	215	491	174	260
Serializing	71	153	303	60	457
Contourf	59	52	495	199	177
h9	40	239	50	384	305
?????	95	174	117	185	835
amsmath	5	230	448	767	909
Graph	38	162	191	209	837
h1	92	6	370	107	211
h4	92	49	419	405	262
h5	71	153	446	423	108
pixel_array	27	259	431	509	945
bson	3	57	44	735	957
CGI	40	141	429	609	377
Zhang	24	109	229	444	870
noticed	50	264	292	210	747
~mask	27	259	474	41	945
ndarray	3	220	329	514	235
tight_layout()	5	203	494	757	518
notices	23	37	301	167	769
axes=None	44	227	385	0	357
hz	21	190	234	507	252
value-by-value	76	94	95	18	734
FEB	95	181	373	155	687
hr	99	140	453	198	221
hs	49	116	145	706	986
FEM	13	42	5	118	563
hv	47	174	385	509	469
hw	95	271	117	519	38
administrators	18	232	232	697	53
hh	27	259	431	28	486
hierarchical	43	265	75	771	921
Posted	18	15	45	472	81
hl	27	260	431	234	945
hm	50	200	493	504	991
Theano	7	51	428	412	166
overflow	14	86	314	325	549
ha	24	200	493	504	991
he	4	59	490	252	747
Trend	95	138	159	519	941
modifiers	29	154	89	149	282
dmg	67	151	470	604	104
512MB	84	127	2	410	580
carriage	61	58	443	539	501
projecting	39	149	438	93	102
limit	81	170	409	44	576
mrdivide	60	296	375	742	631
Split	69	31	100	530	911
mechanics	60	42	38	257	809
thnks	24	200	493	504	469
tb	85	172	125	396	201
twist	12	17	134	630	120
lobes	20	170	409	709	562
Affinity	38	206	282	722	353
3d-array	41	6	177	396	622
median_diff	53	139	42	233	775
worse	10	202	37	44	876
img.ravel()	75	90	297	171	810
TkInter	93	187	104	580	591
Shall	47	0	392	143	835
x-value-window	81	214	173	104	459
ungrouped	2	265	456	405	356
DataRegression	63	174	74	551	888
Tfidfvectorizer	21	190	258	445	959
self.foo	74	40	444	236	406
standardise	81	168	186	341	443
sweep()	60	296	375	364	631
EOL's	4	17	254	710	441
my_df	48	281	74	551	779
outarray	90	297	13	239	744
expressible	14	86	147	325	734
enviroments	67	57	167	697	732
my_dt	53	139	68	72	390
pathways	2	43	131	251	944
r**	96	266	426	3	421
ast.literal_eval()	65	233	158	589	448
non-existing	6	68	457	335	625
blogs	13	193	372	387	219
pip3.3	67	112	276	499	315
clevs	41	39	289	282	397
tightest	39	117	235	152	102
as_matrix	43	157	72	24	73
memmory	71	218	183	609	959
decompressed	71	153	50	423	306
dynamic	76	229	126	203	765
np.savez	36	153	336	702	306
protest	88	152	134	630	908
extrapolated	72	165	270	733	301
bytecode	7	51	428	215	915
6pm	99	140	453	109	94
csr_matrices	34	94	158	540	694
2.8.12.1	91	7	417	301	230
findall	65	157	163	589	448
Brionius	4	121	264	387	114
python-2.7.9	55	112	276	57	791
fronts	13	120	212	195	765
np.outer	42	30	286	74	598
python-2.7.6	55	128	386	477	372
OpenSUSE	19	7	167	301	321
ciao	24	109	229	444	264
freqency	78	140	453	198	603
myscript.py	40	141	281	76	632
endianness	3	291	85	608	44
Scatterplot	38	162	495	209	837
imperative	88	152	134	334	604
accum	74	195	4	255	228
up3	27	297	289	239	945
Mystery	95	49	373	185	517
t.startswith	75	32	10	772	838
rescue	24	109	229	444	237
downstream	2	152	147	618	959
activation	77	98	458	705	162
pandas.io.gbq	35	59	138	630	371
149x56	77	168	186	705	646
affect	12	229	147	91	621
web-service	71	246	50	60	108
df2.divide	49	47	406	631	445
companies	79	78	487	27	675
solution	4	17	254	630	441
Pool()	29	218	183	359	803
optimize.minimize	60	124	458	324	438
indefinitely	29	187	128	764	2
vector	34	77	0	88	943
theta_Matrix	78	195	239	616	577
reshuffling	2	116	145	573	531
ups	10	51	118	225	990
build-up	10	218	409	44	959
pythran	7	51	428	215	915
pd.options.display.max_columns	75	174	117	751	262
concise	88	257	61	675	327
numpy.packbits	3	291	141	266	969
Item1	48	144	486	276	502
exec()	40	141	429	236	632
Negative	69	162	191	61	837
numpy.bytes_	63	44	460	172	888
Bypass	38	162	169	127	145
output.dat	36	10	336	712	261
incompatible	63	44	199	9	888
pythonic	88	257	61	675	327
neg	95	174	335	591	262
kernel's	20	93	382	709	954
PyCall	40	57	259	110	732
comparision	69	265	169	574	734
symbols	61	230	233	86	501
Put	2	263	237	678	544
os.path.join	36	10	489	712	261
net	50	264	393	75	564
37*100	74	233	54	522	986
evolving	76	272	118	419	990
centric	47	0	126	203	908
screams	13	26	5	419	53
Items	48	144	159	789	739
never	50	264	292	210	747
drew	59	52	433	32	177
60000	21	190	234	557	252
PEP	35	193	19	387	114
facetgrid	59	52	383	568	710
init_fn	41	6	177	282	397
bitrate	45	80	334	154	619
interpret	47	229	392	91	260
Vorticity	4	121	264	646	500
Correction	30	200	55	347	560
libpng15.15.dylib	55	132	352	477	372
Intraday	79	138	450	762	746
pandas.io	15	135	319	777	873
hunch	50	59	60	210	747
elaborated	4	121	490	646	500
term-document	77	292	280	88	485
.resample	64	287	449	48	48
elaborates	18	225	490	567	81
Behind	76	94	147	257	417
Romain	24	109	229	140	870
Ellipsis	65	111	26	145	890
counts	79	144	173	376	603
fixed-width	52	153	336	539	793
numpy.copy	3	220	361	404	273
Corresponding	69	162	191	61	837
X.toarray()	34	292	64	348	218
right=	46	284	494	757	339
\Scripts	37	132	386	475	305
precompiled	67	151	470	219	104
typo	24	200	493	504	991
recommend	13	0	5	630	439
_The	12	152	60	170	120
Removed	30	263	490	567	81
type	3	18	162	514	470
2048x2048	21	190	258	45	943
made-up	57	235	463	37	766
posting	18	225	45	472	81
big-endian	14	291	85	608	44
numpy.roll	42	30	286	358	368
freetype-devel	67	151	327	232	334
Already	24	200	493	567	991
count1	48	144	486	621	653
count2	48	144	486	621	653
cl.exe	37	176	386	475	194
force-reinstall	67	112	327	232	334
ExpensiveFunction	10	40	444	225	622
np.frombuffer	3	291	141	266	969
rights	67	119	152	351	786
2.66	84	108	2	410	580
non-periodic	20	93	382	191	344
2.65	84	7	417	301	321
endog	41	256	177	256	994
avgdegf	48	281	456	682	199
spec	61	239	50	539	371
Annotate	69	31	100	209	710
widths	5	14	297	171	479
alternating	81	21	131	546	562
give	47	229	143	91	451
fromtimestamp	94	63	68	426	27
df_cleaned	53	139	42	417	775
gsl_matrix	3	67	261	312	498
v1.1.0	91	7	417	587	230
v1.1.1	91	122	156	587	230
Phoenix	35	122	167	9	376
shapefile	39	73	214	322	586
auto-complete	40	141	60	252	371
re-shaped	34	205	251	196	943
stills	47	259	211	141	722
TestCase	15	135	319	777	823
stupidity	18	120	179	739	67
Jack	24	121	394	646	500
reindexing	43	47	75	771	921
hist_data	86	231	287	211	262
N25846	54	50	368	331	19
pandas.groupby	43	157	103	376	956
subdirectories	55	132	352	384	798
data_property	22	90	246	438	672
StratifiedShuffleSplit	77	168	186	705	646
hsls	74	293	4	122	979
asanyarray	44	227	154	157	314
summarize	4	229	342	170	950
team's	79	78	487	480	955
count=-1	3	18	141	266	969
idiosyncrasy	88	94	147	145	890
OSes	84	119	2	241	321
expenses	79	21	233	621	92
accumarray	60	296	375	313	631
array-creation	60	40	444	169	709
BINS	53	123	51	448	821
bytestrings	61	58	443	539	103
1xN	34	77	0	88	112
CountryAcc	78	144	195	178	361
weeknum	48	281	486	339	687
Sharpe	20	170	419	467	459
myplot	29	203	348	236	55
MainWindow	29	187	104	236	444
reimplement	76	51	65	2	730
_every_	81	214	126	203	459
scipy.optimize.linprog	13	120	212	739	727
1xn	34	77	0	88	943
__class__	31	1	388	399	720
20140103	99	140	453	109	687
np.recfromcsv	3	27	336	404	957
harmonics	20	93	425	191	344
googleing	18	264	490	75	81
plt.savefig	46	203	348	123	619
sys.argv	36	10	489	288	942
Sql	71	171	303	60	92
traces	57	37	222	699	715
mxp	34	77	0	88	943
mxn	34	77	251	88	943
academics	7	163	63	516	850
mxm	34	77	0	88	943
aborted	50	264	292	407	136
mdates.strpdate2num	86	129	465	36	906
volume_overlay3	31	13	388	592	879
outputed	2	116	328	98	338
brightness	22	4	427	438	672
conn.set_converter_class	27	40	444	15	314
calibrating	81	43	235	709	562
.findall	86	89	163	340	66
1x2	34	77	251	88	943
1x3	34	77	251	88	943
numpy.histogram	42	14	297	171	4
1x1	34	77	251	88	943
1x6	34	292	251	88	943
1x4	34	77	251	88	943
1x5	44	205	251	196	943
luck	11	264	393	75	564
interruption	40	37	429	764	954
adobe	93	61	315	99	374
Insert	69	31	100	530	911
Wow	24	33	229	140	870
Charts	38	23	90	537	537
.h5	71	153	446	702	457
taught	11	120	212	739	727
collector	29	218	447	570	450
jet_r	31	4	294	653	271
scipy.optimize.fsolve	60	124	458	324	438
condlist	27	94	95	18	866
HMM	77	168	186	722	353
1000x1000	21	190	258	45	943
surprise	88	59	37	534	876
sluggish	10	272	118	225	990
normed	27	214	297	171	4
script2.py	36	153	489	712	942
ax.vline	41	35	289	46	810
11.04	19	7	432	301	156
set_color_cycle	31	13	388	592	879
Timings	10	202	37	534	783
toeach_category	60	40	444	396	406
-function	60	157	14	742	627
DETAILS	30	212	55	429	428
rgb_to_hsv	22	4	294	438	672
ind_1	90	293	13	10	744
DTYPE_t	3	67	261	146	235
pandasql	15	171	473	128	88
messages	63	37	301	582	625
ist	2	174	392	91	262
ish	21	160	258	167	655
iso	61	129	117	36	262
isn	88	59	392	86	31
numpy.fromfile()	36	153	336	423	306
loud	50	120	212	709	562
Vibration	48	123	373	339	517
fill_between	31	13	383	199	608
2015-01-20	99	281	453	155	687
executions	29	218	128	167	769
stepfilled	46	14	383	568	710
hook	93	187	104	537	417
UTCTIME	61	49	443	539	260
x=array	90	54	257	10	585
payload	61	291	85	608	44
hood	76	94	65	169	417
ECG	20	246	58	428	765
OT	95	181	42	211	340
ECC	88	232	232	697	959
a.size	75	227	228	0	146
P.S.	47	59	490	630	371
numpy.float128	14	291	142	325	549
blasdot	55	128	293	52	56
mutate	2	220	181	212	923
lighttpd	40	119	429	609	377
medial	39	149	7	93	670
tokens	61	58	443	27	501
EC2	84	119	2	607	377
Neighbor	38	206	282	722	71
pl.draw()	29	187	128	764	954
approximation	77	98	231	279	738
keyword	31	13	334	592	793
.json	71	153	50	60	108
packed	71	248	122	423	260
normalizing	81	214	275	783	603
matter	47	59	392	91	908
Colin	24	109	394	567	870
random.choice()	65	27	14	725	709
data_set	27	260	431	65	945
bidder	48	144	195	178	637
13.04	19	7	432	301	156
n^3	10	194	356	327	668
n^2	10	194	356	327	668
Flood	38	206	282	722	71
with_default_value	3	40	444	157	314
rowNum	63	18	460	172	787
lightblue	95	39	335	168	497
CvMat	22	248	381	141	722
wipe	2	232	232	335	180
maxticks	5	13	457	269	844
point1	41	55	108	586	577
point2	74	55	108	586	577
scipy.spatial.distance	60	270	472	152	662
Instructions	67	57	167	604	732
PyOpenCL	34	248	345	312	722
df.set_value	53	139	51	551	779
xsize	31	1	388	399	879
a.columns	64	233	74	551	526
my_array	74	293	54	509	228
inconsistency	12	152	147	618	120
Green	95	4	427	438	672
crossvalidation	77	168	186	705	646
Hermite	60	98	458	279	438
medical	13	248	214	571	593
N=100	10	160	258	323	655
digress	29	187	128	51	31
points	39	43	270	733	301
pointy	81	170	266	391	576
----------------------------------------	55	112	276	57	128
one-dimensional	34	77	0	73	694
visitor	79	228	487	231	285
immutability	3	220	147	145	908
200,200	44	205	251	196	943
single-index	43	265	75	771	921
delim_whitespace=True	52	185	376	121	971
decoding	71	153	443	423	593
thirds	78	117	25	122	714
pyplot.subplot	31	13	388	399	879
.pth	71	132	352	384	798
field2	53	139	272	682	199
field3	53	123	272	682	199
field1	53	18	272	682	199
gtk-2.0	55	132	352	205	372
bipolar	39	206	48	93	949
xndrme	24	109	229	140	870
dt.date	99	182	318	72	390
integrate	60	98	458	742	738
folder	67	132	352	384	305
nanoseconds	99	63	68	426	27
revolutionary	88	26	126	118	31
SQLite	71	171	303	128	88
lst2	74	233	54	690	526
8x8	34	77	258	45	943
stop	29	263	128	167	769
np.logspace	75	243	289	425	810
next	78	21	338	167	769
pathpatch_2d_to_3d	31	13	438	199	879
CocoaAgg	45	80	315	435	591
Organization	48	123	486	339	502
Match	69	162	191	789	739
sub-folder	71	153	50	60	854
comply	12	229	147	170	563
Redistributable	7	163	152	241	850
indenting	57	263	452	230	298
fields	61	49	131	539	713
pl.plot	41	39	289	282	397
osx	19	7	306	301	232
fall-back	2	215	456	405	769
DATA_TYPE	3	67	261	157	498
rockstar	24	109	229	444	870
y-vector	60	219	444	396	283
zones	39	43	206	498	949
Epoch	99	63	68	426	27
np.diff	27	269	286	358	244
to_pickle	43	153	446	24	561
Run	40	141	259	76	402
duff	6	68	418	548	36
np.count_nonzero	27	269	431	358	945
DISTINCT	48	212	182	343	637
scrap	18	232	232	504	53
np.timedelta64	94	63	68	72	390
Interpolate	69	31	100	530	911
summaries	79	78	487	101	285
tantamount	94	222	147	145	160
1-point	78	21	25	122	702
timeframe	99	147	450	20	817
sorts	2	116	145	708	640
dtype=	3	18	141	266	969
plt.loglog	46	39	383	282	397
cleverer	88	48	5	303	53
Wellness	54	50	368	429	624
residual	77	124	132	783	738
10,100,100	44	205	251	196	598
np.rot90	90	249	180	141	980
pygtk	67	151	317	368	591
np.random.random()	60	40	444	725	709
price_data	48	281	486	762	746
modeling	77	168	48	717	765
picking	2	232	491	167	531
BoxSizer	5	154	188	427	203
tablet	84	119	2	697	321
opportunities	76	26	138	118	398
0.13.0rc1	91	122	156	587	376
df.to_clipboard()	71	239	222	769	975
distinction	12	152	147	145	606
DN	81	298	266	104	459
Akavall's	4	17	254	710	441
minimises	77	98	458	279	738
appeared	50	264	292	210	59
DateIndex	99	63	68	426	817
Snow	19	7	306	301	232
non-NaN	6	68	456	178	910
BULK	71	171	182	128	88
BULL	86	181	373	185	437
springs	39	43	235	167	959
plotting.py	37	250	475	314	173
lower-right	39	117	25	122	979
recognises	47	215	456	355	260
n**2	10	201	356	327	668
non-Nan	6	68	456	355	910
particulars	12	183	416	203	563
OS-release	84	271	2	751	321
recognised	61	58	443	384	260
Ontology	78	298	419	168	361
numpy	47	57	0	91	957
obtained	2	21	328	98	187
DE	95	181	419	686	497
rhdf5	35	122	446	292	376
quantities	81	21	233	203	738
barf	94	222	162	546	470
_loc	31	220	329	514	720
swe_vals	41	6	168	107	336
xtrain	94	256	74	668	994
Yann	4	121	264	646	500
numpy.timedelta64	99	63	68	728	452
exception	63	44	199	582	888
acrobatics	88	116	145	706	356
NAME	48	123	391	787	502
tanh	77	168	472	705	738
newest	91	122	156	587	230
pdwls	85	138	419	467	698
near	12	170	235	44	84
neat	88	257	61	675	264
Fibonacci	57	235	342	450	888
ipython-notebook	40	141	281	76	632
mangle	94	229	181	306	160
anchor	5	154	399	122	660
iy	41	293	26	107	577
ix	94	111	115	369	227
metropolitan	79	228	487	480	167
PyArray_Descr	3	67	261	157	498
ip	36	174	117	214	250
is	47	59	392	91	908
ir	74	174	272	522	262
submatrix	34	77	216	88	154
it	47	59	392	91	338
iv	85	298	419	67	142
ii	74	195	4	255	228
shame	88	59	114	419	695
ik	44	143	215	5	37
ij	44	143	215	5	37
im	47	90	246	141	835
get_figure	31	1	460	172	787
io	15	135	475	205	461
in	47	21	392	91	338
E._coli	53	139	42	417	775
vendor	79	239	330	686	959
80,000	21	190	234	557	42
ie	47	21	392	91	338
id	48	144	486	787	502
Octave's	60	296	102	364	631
if	47	0	392	91	338
Tornado	71	246	90	609	537
occupied	21	127	355	159	359
Uniformly	81	21	270	733	301
reg_per	53	139	51	551	779
i8	3	18	141	266	178
advocate	12	152	5	419	53
i=	85	195	370	255	192
i1	74	18	272	266	178
i0	90	293	26	617	146
declaring	3	67	261	146	531
mySQL	71	171	303	128	88
i5	84	127	2	410	580
ynew	41	201	426	282	142
i7	84	127	2	410	580
apt-cache	67	112	327	232	334
i+	74	195	4	255	496
waterfall	13	23	375	364	631
i-	44	195	4	5	598
potentials	81	43	206	195	416
multi-dtyped	94	222	115	212	160
fruit_type	48	95	115	442	242
+22	90	297	115	239	995
nx*ny	34	77	0	404	336
practices	11	173	389	458	219
hyperparameter	77	183	132	783	162
Duration	48	138	66	90	687
_did_	47	232	457	306	469
Vslice	90	297	115	239	227
Inverse	20	93	248	191	989
facto	7	26	63	118	398
Bitcoin	13	78	232	407	959
bandwidth	20	170	409	44	576
psyco	7	51	65	2	730
identify	2	229	131	588	702
facts	18	225	5	170	219
set_offsets	31	1	388	399	879
$x$	86	129	260	36	858
linspace()	72	165	15	73	627
)))]`	27	32	431	545	945
regarded	61	94	147	355	260
MCVE	57	235	463	37	607
initialise	2	229	328	404	338
]")	90	204	257	332	995
allele	78	144	195	178	637
munged	69	49	233	706	713
A.max()	44	227	228	0	146
nsteps	96	205	154	196	201
scipy.linalg.blas	7	51	19	215	957
designate	2	229	457	251	338
opt	55	128	352	113	568
Upgraded	91	7	156	587	230
ops	94	94	147	169	734
df_base_val	78	204	115	339	227
Genre	79	228	487	621	653
rotate	59	149	25	298	884
3pm	99	140	453	109	94
clickable	59	52	495	51	54
depicts	39	126	495	93	177
subfig	59	117	32	122	979
matplotlib.pyplot.plot_date	59	52	495	51	710
wind_speed	6	287	12	467	910
ave_data	48	49	159	405	502
1553	44	205	154	196	357
nevermind	24	200	493	504	991
drawgreatcircle	39	43	235	733	177
equal-length	34	77	0	73	336
CCNY	99	140	453	372	221
cum_edits.plot()	46	148	363	46	430
np.__version__	91	7	184	103	630
admittedly	88	257	61	334	612
Operator	38	271	191	61	38
]"`	86	129	287	211	496
cancelled	78	140	453	391	955
www	55	132	352	477	568
Klatt	76	51	65	2	730
35047	44	205	154	196	357
c-array	3	220	261	312	235
other=nan	27	35	334	1	314
rfft	20	93	425	336	344
invoice	79	228	487	442	675
tripped	50	120	114	35	781
hand-written	10	272	409	458	990
sys.float_info	14	291	142	325	482
tracked	50	264	60	407	781
notification	18	15	45	472	922
JMP	38	214	132	519	675
Nobody	18	239	143	37	451
1sigma	77	214	132	147	4
x**2	96	29	426	173	13
daytime	79	147	453	101	675
Quite	50	200	114	504	469
_last_	78	100	216	616	283
tracker	35	122	220	292	106
im.getdata()	75	227	385	0	486
matrix-like	71	153	122	702	457
self.sigma	96	201	18	173	62
plot	59	52	495	51	177
var.theta	27	260	431	300	945
Dunno	50	59	114	35	907
burn	18	232	232	407	64
Dept	48	123	486	197	17
A.dot	44	194	280	704	598
selectable	93	154	188	427	2
bury	18	225	5	419	81
interpolate.griddata	72	165	15	313	570
?!?!	50	59	301	699	835
wavelets	13	23	212	118	727
Austria	95	123	434	240	682
azure	71	153	50	423	108
islands	39	43	235	709	670
df.index.date	64	150	256	72	390
project's	67	193	372	604	594
pseudo-inverse	60	194	102	431	751
Infact	50	59	301	699	469
formerly	35	26	138	9	957
59.946000	90	54	287	10	585
SUM	30	212	182	467	965
Grabbing	79	49	131	276	944
married	95	271	373	519	522
plt.show	29	203	348	123	55
libstdc++	55	163	152	418	372
pair	81	43	239	522	944
platform's	14	67	142	325	549
python-based	13	26	63	118	398
xticks	5	148	363	19	844
Downloading	67	57	470	604	594
pandas.DataFrame.to_html()	61	235	328	98	260
df.query()	43	157	72	750	956
Pickling	71	188	122	702	306
Pylearn2	38	57	44	722	732
1-dim	34	77	0	73	78
ax.add_patch	31	203	388	592	879
SCIPY	38	206	282	722	71
+0100	99	274	119	679	997
|S10	86	18	141	137	178
Toolbox	38	224	282	108	893
Superpack	67	151	210	351	408
fork	35	218	220	359	803
pd.cut()	43	157	72	376	956
form	47	21	131	98	702
Assume	34	21	131	98	927
PerformanceWarning	94	222	199	582	350
scikits.audiolab	71	57	44	423	957
fore	60	270	472	742	60
ford	48	123	486	339	497
31st	99	182	318	109	94
Survey	38	224	282	519	689
frame.py	37	250	475	314	173
numpy.ctypeslib.ndpointer	3	67	261	312	498
volterra	55	132	330	205	461
surprising	88	152	147	334	120
CustomerID	48	144	66	787	122
15minutes	99	147	450	198	27
delete	2	263	456	335	180
high-dimensional	77	42	186	705	604
abusing	88	48	61	630	360
sticks	59	117	433	32	177
classic	12	42	134	552	908
Upvote	24	109	394	646	870
sidestep	76	232	5	799	439
some_data	64	174	74	551	779
sticky	76	94	162	257	439
0.00000000e	68	54	257	713	776
ecatmur	4	109	229	710	441
ship	35	119	167	516	594
typeset	61	230	448	767	909
shit	24	200	493	504	469
oversimplification	12	59	5	630	908
1M	21	190	234	557	42
Vectorization	76	51	118	169	990
sybase	71	171	473	128	88
QGridLayout	93	154	104	537	728
magnitude_spectrum	20	93	425	336	344
digital	20	246	58	428	562
forward=True	45	203	348	123	55
.min	64	150	256	551	48
D;	95	181	373	136	965
nibble	81	170	266	588	283
exactely	24	59	394	424	469
pasteable	57	239	463	37	975
implmentation	76	272	118	169	950
sandboxing	13	26	183	118	990
felt	50	200	114	210	747
sub-groups	21	190	258	167	986
diet	95	214	132	147	4
fell	50	232	235	407	769
exported	71	153	50	98	108
sliding_window	84	193	19	387	876
a*sin	96	201	426	560	13
transfers	71	215	342	60	92
died	40	34	281	493	954
billion	21	190	234	557	476
Logarithmic	69	52	495	209	71
allright	12	59	490	504	469
assume	47	0	392	91	338
remapped	34	205	251	196	357
t2mtr	41	6	177	282	397
argwhere	42	30	286	358	244
exponentiate	60	194	280	431	485
overplots	59	52	495	51	710
D1	85	172	419	467	497
co-occurrences	78	144	195	787	944
Vectorized	69	252	169	264	145
overplotted	59	52	495	32	177
skip	2	263	338	306	338
viridis	31	4	294	653	271
vector-matrix	34	51	137	169	734
invent	13	120	5	419	53
skim	88	232	232	306	64
skin	24	43	235	444	264
morphology	20	126	7	709	670
primes	10	42	356	327	238
primer	13	193	372	387	264
interp1d	72	165	15	235	570
misread	24	200	493	504	991
Evening	54	271	101	338	361
Thansk	24	109	394	140	870
answerer	18	225	45	472	922
SourceID	48	144	34	621	248
Exactly	24	33	394	140	870
editors	40	141	281	769	374
Broadcast	34	179	169	61	145
answered	18	15	45	472	922
monotonically	41	170	270	733	301
elliptic	60	98	458	279	809
marks	5	52	32	19	884
Atlanta	54	186	300	797	139
1991	99	182	318	372	789
Protopopov	24	121	394	646	500
string	61	58	162	539	260
Explicit	88	257	5	145	195
geometrical	39	42	248	93	102
Plus	47	0	392	678	544
io.open	36	10	489	712	261
Where	47	0	392	678	835
beanplots	35	225	372	97	509
subok=False	27	227	228	1	172
accidentally	50	200	292	210	747
magnet	12	21	235	93	84
perceptual	22	4	409	438	672
shave	10	25	118	225	990
Xlabels	31	13	388	592	879
oscillation	20	170	231	93	116
nanstd	6	68	12	53	396
load_entry_point	15	112	276	36	128
inexpensive	88	272	118	44	863
ft2font.h	55	176	397	696	572
operator.add	42	202	14	313	876
Consecutive	69	162	191	61	114
heres	57	235	342	450	950
bottom=None	46	35	494	176	348
teamID	48	123	486	197	82
template	22	61	90	571	722
urlopen	63	176	44	582	136
cython's	76	67	261	215	915
df2.merge	49	47	406	631	445
plt.show()	29	203	348	123	55
arr1.shape	68	227	385	0	357
dput()	57	235	375	364	631
df.index.month	64	150	418	72	48
here-	57	59	214	144	907
genuinely	12	225	5	419	907
ext_modules	36	112	276	57	128
Matrix	38	206	169	61	145
libiomp5	55	132	352	113	315
dateindex	99	140	450	198	687
area_size*	96	266	324	695	421
a.nbytes	44	227	228	0	357
left-most	78	263	25	122	979
Node	71	79	328	60	234
mpl.rc	46	226	494	134	348
cross-language	13	26	65	2	730
1x	10	202	370	196	192
insides	76	0	457	169	338
555	53	204	51	338	361
T.switch	27	260	431	391	945
Allowing	69	162	191	574	739
encode	61	5	443	563	209
thru	2	116	145	573	531
ax.get_legend_handles_labels()	31	13	388	592	879
Processes	38	162	191	61	145
Ben	4	121	264	102	741
splrep	72	165	15	235	438
Neural	38	206	282	722	353
IronLab	40	57	167	499	732
ool	3	227	228	138	969
ooh	24	200	493	504	991
500ms	10	202	37	323	876
cautious	88	152	147	419	908
rigid	39	126	25	122	979
oop	13	264	393	145	219
d.DataFrame	64	287	260	425	294
snapDate	48	144	486	405	502
effort	18	225	5	35	53
capturing	2	246	206	167	600
]`)	90	95	115	239	585
Scales	59	288	25	209	884
inkscape	93	61	315	99	374
Graphviz	93	79	90	97	537
Scaled	60	98	458	722	905
make_axes	60	40	444	396	709
growing	81	272	118	573	863
rc_context	31	13	334	269	879
Children	95	271	159	339	682
std_err	68	256	177	617	597
grained	59	23	457	97	394
crazy	50	120	114	284	695
76.95	54	266	324	8	221
mongo	71	171	303	128	457
1}	95	181	287	479	497
overzealous	50	232	60	618	625
multi-dtype	94	222	72	369	160
coincident	12	21	131	546	120
Dutch	13	239	212	739	852
0:9	90	297	13	239	744
YOUR	30	212	55	136	965
pink	22	4	427	438	198
regularization	77	168	186	705	646
rays	39	149	438	298	116
dt.date.today()	53	139	42	72	390
libblas3gf	67	151	327	232	334
FigureCanvas	93	1	104	537	728
functools.wraps	42	40	14	15	709
charset	61	5	443	563	209
ping	18	239	232	390	600
chemical	81	228	48	195	416
till	50	140	338	167	769
sunday	99	140	453	109	94
subfeature	78	100	456	588	283
pure	76	202	65	169	730
tile	42	30	396	74	368
sworn	50	264	493	210	747
pinv	60	296	102	431	751
pint	13	26	63	697	439
LogFormatter	5	148	363	558	844
X.reshape	44	35	154	0	357
designer	93	187	104	537	537
downsampling	20	93	382	709	562
designated	2	215	328	98	187
10GB	21	127	355	159	359
np.zeroes	75	227	385	0	484
designed	76	26	138	118	621
woud	57	244	490	37	451
guys	11	109	229	140	870
grow	10	188	118	44	576
down-vote	18	225	490	419	81
outline	59	117	433	32	177
16,000	21	190	234	557	42
maybe	47	0	392	630	835
readdata	43	157	72	750	956
Gaussian	20	214	132	147	4
fluent	13	120	212	118	727
thorny	88	152	5	419	695
verify	57	229	392	534	783
numpy.linalg.eig	60	296	102	431	751
str1	86	18	272	211	199
gesture	13	126	7	195	852
1a	78	204	239	168	801
9999.0	6	68	201	130	910
cute	88	257	61	675	695
5x4	34	77	258	88	943
5x5	34	77	251	88	943
5x2	34	77	0	88	943
unioned	34	77	131	546	694
5x1	34	77	0	522	336
pointed	4	121	264	252	500
conserving	34	77	131	566	694
5x8	34	77	258	45	943
entity	79	228	126	203	702
stability	77	42	38	279	84
cuts	2	263	491	174	781
differs	47	215	491	478	59
pointer	3	67	261	312	498
conjunction	65	23	14	97	439
mockup	57	235	342	450	159
plethora	13	193	372	118	219
encompasses	39	126	235	733	949
EXCEPT	30	49	222	185	517
plt.matshow	31	13	294	653	627
3-space	39	149	279	93	573
mismatches	12	152	199	618	888
.format	86	129	465	479	347
finance	13	78	450	762	746
np.lib.pad	42	227	286	0	263
P.S	18	225	490	170	165
killer	88	272	118	225	863
sooner	11	109	232	407	64
16:20	99	253	119	525	256
touching	59	117	433	32	714
mismatched	12	152	60	618	928
Indices	69	162	191	61	739
killed	50	127	355	764	954
14.5	54	108	23	579	399
14.4	84	108	23	579	322
14.7	54	108	23	579	399
14.1	91	122	156	587	626
14.0	91	108	23	579	322
14.3	54	108	23	579	399
pandas.io.ga	15	57	44	699	888
14.9	30	271	101	429	428
14.8	54	108	101	797	399
Gotchas	69	162	191	61	114
Charting	47	21	126	203	59
event.key	29	187	128	149	282
photometry	39	126	206	93	949
821	37	3	27	187	158
820	40	271	429	281	954
822	54	3	101	187	158
python-tk	67	151	327	232	334
Lua	13	26	65	2	730
Luc	47	21	392	91	338
yield	47	21	392	91	338
o'clock	99	140	453	658	221
np.ma.masked_array	27	259	88	53	146
width=	46	39	73	316	649
df.apply()	43	157	72	750	956
interference	20	126	206	709	796
alpha=	46	39	73	316	649
country_codes	48	123	486	339	779
.flags	3	220	361	138	273
sveDOC	65	40	444	236	406
uint32	3	291	141	266	969
rotation=45	46	148	363	46	348
earlier	50	264	292	210	747
Tkinter	93	187	104	537	728
monster	29	232	447	573	450
.column1	68	32	431	67	62
hefty	10	272	118	169	863
mechanisms	13	26	183	697	621
1-by-2	34	100	0	73	336
matplotlab	59	52	495	51	177
semi-transparent	59	117	433	32	198
alphas	22	4	294	438	271
2Hz	20	170	425	507	344
tuple()	65	94	81	15	311
np.tri	44	227	228	0	146
language	13	26	65	2	730
Invoking	40	112	276	57	315
Apr	99	186	33	34	519
reversed()	42	27	14	313	244
App	38	57	90	110	537
listings	79	228	487	787	841
Flavor_Score	48	123	173	197	459
Beanstalk	67	119	210	607	377
Api	7	51	65	2	730
unformatted	61	153	50	423	108
rewrites	76	218	65	169	854
anything's	35	122	156	292	376
os.environ.get	36	10	136	308	630
exotic	88	257	61	458	612
data-columns	2	188	122	791	863
j=	74	195	4	255	744
UNKNOWN	48	123	486	339	502
pandas.isnull()	6	68	12	355	866
Detail	63	215	199	514	888
ISO	99	63	68	426	27
carry	2	229	145	203	360
3000x3000	10	160	258	323	876
workaround	88	48	61	630	31
ind_var	48	123	272	168	653
numpoints	46	226	255	134	608
Downloaded	67	151	470	604	104
Post	57	235	463	37	451
massaged	2	116	145	98	356
errfunc	96	124	177	396	622
xlsxwriter	71	171	86	638	561
continuous	81	21	270	733	301
accurately	12	183	409	144	84
massages	76	40	65	215	957
splprep	72	165	15	235	438
rdotphi0	68	32	18	28	62
colormapping	5	13	294	399	271
pdf2ps	93	61	315	99	374
meshing	39	126	235	733	177
orgi	53	139	51	417	131
gotta	24	109	114	444	469
strs	74	95	115	239	227
full-fledged	35	26	138	118	398
venture	18	225	5	419	53
were	47	264	292	210	747
snippit	57	235	342	450	560
gigantic	21	190	258	334	863
mmap_mode	36	153	336	712	306
files	71	153	50	423	108
rstride=1	46	36	294	282	397
self.line	46	203	348	577	430
sans-serif	45	230	448	767	909
tkagg.py	37	250	475	205	173
']`)	53	95	272	339	682
fill=	46	226	494	36	906
converges	77	98	458	279	438
converged	77	170	231	391	84
personalized	81	43	41	400	234
re.escape	86	89	163	589	66
modulus	14	86	314	191	238
pain	88	232	114	334	695
Name	48	138	159	339	653
investigations	4	225	254	567	219
shapely.geometry	15	135	319	777	823
Soil_Type	78	204	257	338	361
paid	13	78	63	516	805
ordinates	41	6	438	766	573
nfft	96	201	18	336	62
contrasts	77	183	382	783	738
pyshp	35	193	19	97	594
fills	6	68	491	174	910
)]]`	90	32	13	545	585
Certainly	47	0	392	678	612
']``	94	222	115	293	160
numpypy	7	51	428	2	915
df_temp	48	281	202	339	779
minibatch	77	168	206	705	162
10x10	34	77	258	45	943
CFLAGS	67	132	352	113	798
pvalue	48	123	434	467	459
Indicator	38	206	282	519	38
Fortran-style	3	188	396	404	77
random_integers	15	243	46	725	484
-pi	96	288	324	560	13
Levi-Civita	4	193	19	670	371
cprofile	10	277	342	534	169
c-arrays	76	188	118	169	581
Geopy	71	246	303	60	92
Hours	99	138	66	198	687
df_conf	53	139	51	239	227
bar_width	46	266	289	695	421
decimal=	52	185	376	121	971
Divakar	4	121	254	710	441
re-create	2	229	457	335	180
black	22	117	433	32	198
all_treatments	53	281	68	682	390
cProfile	10	277	37	225	169
nyquist	20	170	409	507	562
Fisher	77	206	132	783	162
aggfuncs	11	265	75	706	780
X.dtype	3	18	141	266	969
pyfftw	7	296	428	2	166
PyArray_New	3	220	261	312	235
0:4	90	95	115	389	532
0:7	90	54	13	10	744
0:6	90	297	13	10	744
Scikit-learn	77	168	186	705	353
0:0	48	281	115	239	227
myArray	74	195	4	586	228
0:2	90	95	26	239	227
n_sessions	68	32	54	545	262
.columns	64	47	74	551	975
framing	18	225	490	170	907
geometric	81	42	248	733	102
r_ind_ind	53	139	51	239	227
idxmin	43	157	103	683	956
np.triu_indices_from	44	293	4	5	146
communicates	2	218	181	359	195
summary	57	265	173	376	975
fulfilling	78	100	291	588	148
922	37	250	27	187	194
923	54	3	101	797	158
communicated	18	200	490	144	81
test_y	74	188	447	570	581
test_x	44	205	46	196	581
wiki	4	193	372	387	371
kernel	20	93	382	191	989
linespace	42	30	286	313	397
List1	74	174	338	751	995
j0	90	293	108	224	778
j1	74	293	108	586	778
blurred	22	117	433	32	177
colorbar.py	37	250	475	205	173
Hopefully	11	232	143	144	652
calendar	99	140	450	109	94
patching	88	232	60	257	417
date1	48	281	486	788	920
date2	48	281	486	788	920
QGroupBox	93	154	104	537	728
df.plot()	43	14	383	568	710
date=	86	129	272	36	199
Forgive	18	120	179	739	67
behind	12	152	147	257	120
if-then-else	76	40	14	313	734
reading	71	153	50	423	108
checks	2	215	491	174	866
deletions	10	272	118	44	863
]')``	94	63	68	682	390
tup	42	293	26	74	146
31-1	14	291	46	608	482
jp	74	293	4	188	250
jq	36	174	276	288	128
js	13	23	90	118	537
jl	85	143	215	5	37
real-life	12	183	134	458	950
*len	75	32	54	690	486
ji	44	143	215	5	37
jj	74	195	26	255	228
jk	44	143	215	5	37
48000	21	190	58	428	949
trolling	11	120	114	35	727
row*	78	49	239	522	262
dates	99	63	68	426	452
parentheses	61	58	452	230	298
a.sort()	27	227	361	212	273
configuring	40	218	60	697	315
figure_1.png	36	80	136	99	619
jn	3	67	261	5	622
dated	35	122	220	407	376
13.0	91	108	23	579	322
myfile.csv	36	10	376	712	261
make_axes_locatable	5	13	255	558	518
aspect-ratio	59	52	495	51	177
decimals	14	86	314	325	549
python-dbg	40	141	44	215	315
forecasting	77	98	48	195	443
cancer	79	228	487	480	285
50,000	21	190	234	557	42
np.set_printoptions	45	148	142	137	820
cancel	12	86	275	618	84
yoff	31	174	444	592	879
CASE	30	212	182	574	965
SuperPack	67	151	167	301	408
DataFrame.to_dict	65	18	74	551	526
user1	95	123	487	448	821
shortening	12	120	5	35	907
end-point	99	140	453	198	221
*max	96	266	289	28	810
settings.py	40	132	222	384	854
borders	59	117	433	32	714
*map	75	32	10	772	838
flebool	24	121	264	646	500
offered	4	17	254	710	552
bmp	22	61	381	99	593
bmu	4	121	264	646	500
SLOW	88	257	61	334	695
those	47	21	233	251	338
RECL_PI	78	228	335	168	944
art1	85	194	370	5	192
art2	85	201	370	391	192
disconnected	59	52	433	32	714
zero-padding	20	22	425	191	344
numpy.hstack	42	30	286	74	595
chunk-based	88	272	61	675	612
EPDFree	67	151	210	351	104
numpy.polynomial.polynomial.polyfit	77	124	458	742	738
compile	7	163	152	326	915
DataFrame.to_dict()	42	157	14	313	956
23000	21	223	234	557	692
pyplot.savefig	36	203	348	123	619
Stepping	50	37	301	618	781
n's	34	43	239	88	192
tickvalues	14	288	314	391	129
margin	5	288	284	245	479
from_json	43	265	72	24	376
utf-8-sig	52	5	443	563	209
trades	79	78	450	101	955
TKOST	79	144	173	276	961
01:57	95	181	373	155	496
Transfer	38	206	282	722	71
06:00	99	253	119	525	256
Vessels	48	138	159	168	653
according	2	229	457	487	702
middle	59	263	25	122	979
plot-able	81	165	270	733	301
wisely	18	225	232	313	219
OS's	84	152	134	697	321
ndimage.zoom	22	13	284	245	562
same	47	21	392	91	59
17.2	84	108	274	297	399
authentication	40	119	429	609	556
ax.set_xlabel	46	226	494	558	348
17.5	54	108	23	797	399
intermediary	71	188	145	573	863
Salvador	4	121	254	710	552
Gnu95FCompiler	55	128	330	477	315
Message	63	176	397	582	136
10-20	21	190	234	557	176
inbetween	59	263	32	19	884
TextWrangler	40	119	429	697	321
Defaults	78	204	338	198	361
totally	24	59	493	504	469
coefficents	77	98	458	324	738
Janne	24	121	264	646	500
intermittent	50	37	301	618	120
DaveP	4	121	264	646	500
jinja2	93	61	90	571	537
amazed	11	120	212	444	264
upsert	30	265	182	574	114
decoder	71	248	381	141	722
12:05	91	186	33	34	519
numpy.ravel_multi_index	42	27	349	358	640
Hist	95	14	335	621	710
reputable	35	122	167	697	594
12:00	99	253	119	525	256
4	90	54	257	338	811
Although	47	0	392	678	544
1:9	90	297	4	239	995
presentable	57	23	342	97	54
1:0	54	266	23	8	797
TimeStamp	43	281	68	426	452
1:2	90	95	26	239	227
Personally	88	0	5	118	544
1:4	90	297	26	10	585
1:5	90	297	26	239	744
1:6	90	297	13	239	995
re.compile	86	89	163	299	66
DateTime64	14	63	68	426	452
line.set_data	31	203	348	123	55
nullable	6	68	456	130	470
newvalue	27	174	95	185	866
chamber	20	170	425	507	949
audience	13	225	5	419	219
autofmt_xdate	31	13	388	558	958
reasonably	88	183	61	334	604
specifies	2	215	491	487	702
specifier	61	58	162	15	119
multiindexing	43	265	75	771	356
pip-3.2	67	112	276	499	315
pip-3.3	67	112	276	57	334
witchcraft	50	120	114	284	64
Ned	4	121	264	646	500
u'Time	53	139	42	682	199
testdf	53	281	74	551	779
pickle.pyc	37	250	27	475	194
specified	2	215	328	91	187
New	69	271	191	281	837
Net	95	138	66	789	698
centerpoint	41	6	177	560	13
non-uniformly	72	165	270	733	301
alternates	81	170	266	391	603
gross	88	59	464	424	955
DBMS	13	26	126	419	53
matrix-based	76	272	118	169	734
datetime.datetime.strptime	86	274	68	679	151
openSuse	84	7	167	301	321
0+0j	96	201	426	173	62
inject	57	239	463	257	451
greyscale	22	4	381	438	672
lexicographically	78	144	337	708	640
models.py	57	235	342	384	950
seconds	21	160	274	323	655
Q's	18	225	490	170	81
broker	29	246	90	609	600
newMatrix	44	293	4	509	228
broken	35	232	60	618	120
on_click	29	187	444	236	282
Horner	60	296	102	279	751
refers	2	215	491	487	702
i=1	41	195	370	255	577
i=0	74	195	4	255	577
df_arbitrage_opportunities	68	32	13	545	744
i=2	78	100	216	522	944
tease	12	183	409	144	84
othe	81	43	206	487	702
island	39	43	235	709	950
previous_row	90	297	51	239	821
Maximization	77	206	132	722	71
FuncAnimation	29	203	388	236	444
regressors	77	168	186	341	646
decimated	20	170	328	709	451
TNC	60	98	458	279	438
2015-08-23	54	50	368	429	428
+A	68	32	257	617	744
set_index()	43	47	72	683	73
Degrees	95	298	419	519	361
einstein	42	30	14	74	123
jointplot	5	14	383	568	710
.to_pydatetime()	43	63	68	426	452
MacBook	19	7	2	410	580
logs	79	78	303	609	92
marray2	90	297	26	212	273
wrinkle	12	21	134	546	606
mingw32	67	163	152	326	850
georeference	39	126	279	93	573
brute	88	42	61	675	612
RectSphereBivariateSpline	72	165	15	235	570
Pname	44	30	396	509	228
seasonal	99	147	450	101	94
bb_res	44	143	215	617	37
+I	90	297	13	10	744
buggy	35	152	60	9	120
+N	74	100	108	586	283
DataFrame.corr()	60	72	472	742	396
REPLACE_EVERY_Nth	74	293	54	509	228
sitecustomize	63	176	397	696	136
client_id	64	150	256	197	48
iterrows	43	157	72	750	207
Walker	67	132	44	384	305
happier	88	232	232	334	695
belated	4	121	264	646	500
blas_opt_info	7	163	152	636	850
wasn't	50	264	292	210	747
stereoscopic	59	52	495	51	177
SHOULD	94	222	55	136	965
strawberry	61	58	443	27	1
network's	77	168	48	705	162
Blues	22	36	294	653	488
JPype	7	26	65	2	730
plt.bar	46	14	297	171	649
unicodeescape	86	5	443	563	898
corrplot	60	193	19	387	371
leaked	76	218	181	570	195
videos	93	246	58	571	704
Lengths	69	162	191	789	739
n=10000	10	202	37	323	876
importing	15	135	319	777	823
lifetime	12	218	447	570	450
Lotka-Volterra	38	206	48	722	353
toggling	93	154	188	427	203
pylab=qt	40	141	281	76	632
memmapping	71	153	336	702	306
assessing	77	183	132	783	162
arrowhead	59	117	433	32	116
takewhile	27	227	4	509	486
un-accept	18	200	490	504	991
hybrid	13	232	134	257	612
field	2	49	328	98	702
facecolor=	46	226	73	316	52
utf-8	52	5	443	563	209
denom	14	100	95	18	283
arr.strides	90	297	13	617	744
matplotib	93	154	495	51	54
transAxes	5	149	30	298	479
4,000	21	190	234	557	42
obsessed	76	120	5	257	53
k-fold	77	168	186	705	646
students	79	228	487	480	285
durations	79	147	450	101	610
vertex	39	43	41	400	234
deriving	2	116	328	98	531
numpy.linalg.det()	60	27	14	313	244
tackle	11	48	389	799	360
np.string_	3	18	162	266	969
.egg	67	132	470	604	305
pa.loc	90	95	115	239	227
Major	30	271	342	519	114
remote	40	119	429	607	377
SECOND	30	17	254	710	560
hugely	11	173	389	763	867
Firelynx	4	17	254	710	441
starting	47	21	392	167	338
facecolors	31	13	294	653	271
represent	81	21	233	487	702
....?	64	150	256	751	48
looped	10	116	145	573	207
ylim()	5	284	322	558	339
mini-language	5	148	363	86	844
bugreport	35	122	220	292	106
08:00	99	69	119	155	256
Poking	50	232	393	35	417
MxN	34	77	0	88	943
....,	52	39	287	343	369
MxM	44	194	280	88	943
Theorem	38	224	248	191	689
talks	12	193	372	387	371
unplotted	59	263	25	122	338
Euler	77	98	38	279	809
reluctant	88	120	212	419	907
Canopy's	40	141	281	76	632
strptime	52	274	68	426	745
dt.datetime.now()	53	139	51	72	390
heterogeneity	12	183	134	458	606
b=a	74	297	26	212	273
Partially	4	17	254	799	552
kNN	77	168	186	705	646
max_int	68	32	431	266	463
fall	81	21	266	733	603
bottleneck	10	272	118	225	169
extractors	12	183	126	203	646
map()	65	157	81	648	311
AFAICT	88	94	147	9	908
Mx3	34	77	0	88	943
Mx1	34	77	0	92	943
reminding	24	109	229	140	870
Course	38	271	487	519	38
InsecurePlatformWarning	55	128	330	477	372
mistaking	47	59	222	424	907
Python35\lib\	37	250	27	475	194
copy-pastable	57	235	463	37	607
titled	69	271	191	281	114
periodicity	20	93	425	507	344
winds	81	170	206	167	949
Only	47	0	392	678	544
titles	5	52	32	19	884
x.index	27	32	13	772	838
lawyer	79	228	487	480	285
val3	48	123	272	339	82
val2	48	123	486	197	82
val1	48	123	486	339	637
val5	48	123	272	339	779
centering	5	117	25	122	479
y1a	41	172	177	243	808
.sortlevel	64	260	406	551	945
vispy	93	23	63	97	537
time_string	86	274	376	679	151
1457	86	181	272	211	199
InvalidOperation	63	44	199	582	350
pickable	59	1	388	399	714
outgoing	74	195	239	200	192
fastcluster	67	151	167	664	594
1.234	53	204	272	338	995
.value	94	281	74	72	390
qiime	55	132	330	477	791
K	85	194	370	5	192
title1	41	39	335	316	649
log_upper	48	144	238	502	629
operating	84	119	416	697	321
CREATEDDATE	53	139	42	72	775
vals	74	233	54	690	526
Series.add	43	157	103	784	956
title=	46	39	260	505	649
search	47	264	393	588	371
Mann-Whitney	77	270	280	783	485
upcast	3	291	162	266	470
y_data	46	39	73	592	649
datingTestSet2.txt	30	271	50	519	108
df.values	94	256	74	489	172
narrow	59	170	409	144	781
pathological	12	152	5	458	84
7.33613E-07	54	50	300	331	299
base64	71	248	381	571	593
debugger	40	141	281	76	632
np.random.binomial	75	243	385	425	484
calcs	94	116	145	194	986
elegent	88	257	61	675	695
summary()	60	296	375	364	631
debugged	50	264	393	75	564
np.histogram2d()	41	6	270	199	397
rec.array	65	265	158	540	132
establish	2	40	444	91	709
enlightened	18	225	114	35	469
non-pythonic	88	257	61	334	695
Non-linear	38	206	282	722	71
matplotlib.colorbar.ColorbarBase	46	39	73	577	430
non-	6	68	12	130	113
aperture	20	93	425	191	344
achieving	11	48	389	675	327
OUT	30	212	419	136	965
BOTH	78	144	419	178	944
cv2.THRESH_BINARY	68	90	201	28	969
Cpython	7	51	65	2	730
random()	60	29	14	742	709
Transposing	34	77	396	566	520
controlling	2	23	457	245	394
01:50	54	69	119	338	126
FMA	7	51	428	169	166
psql	15	171	473	128	88
none	45	264	393	36	906
pip-installed	67	7	167	664	321
der	4	121	264	102	340
des	44	256	154	196	994
det	60	194	280	704	485
dev	91	122	156	587	376
arr.resize	75	227	385	0	486
September	99	182	318	109	94
num_cols	74	195	4	509	228
del	29	203	447	570	923
den	96	201	18	617	13
strategies	13	78	126	458	936
deb	67	151	167	664	732
dec	99	6	453	766	221
def	65	40	444	236	622
deg	41	149	324	200	116
purchases	79	78	487	101	285
compare	47	21	131	534	783
.iloc	94	95	115	369	227
sub-totals	81	214	173	621	435
iso-surface	72	126	495	733	60
set_autoscalex_on	31	13	334	355	709
purchased	79	78	487	480	285
ORDER_DATETIME	53	139	42	417	775
+3	78	140	453	397	326
df1.id	3	18	74	682	172
unexpected	63	44	199	582	888
NPY_NO_DEPRECATED_API	63	176	397	582	858
re-read	18	200	490	567	81
gropuby	94	222	274	751	160
minor_xs	94	222	115	369	160
np.uint32	3	18	141	266	178
1695	48	123	373	686	653
tempSheet	90	297	74	551	779
lexicographical	94	94	162	708	452
mutable	3	220	329	540	890
Stack	18	225	45	527	509
df1.ix	53	267	51	239	227
1699	90	293	4	196	995
PyYAML	67	57	44	499	732
QtProcess()	93	187	104	537	537
sim_extracted_dfs	3	220	444	15	172
pyRserve	71	26	126	203	92
PersonId	53	150	256	250	775
hardcopy	93	61	315	99	54
different	47	21	233	251	338
connectivity	39	79	41	152	234
blood	79	228	206	480	285
NearestNDInterpolator	72	165	15	235	570
Collecting	69	31	100	530	739
entry	78	49	216	522	702
coax	47	48	457	306	439
PersonID	48	144	159	787	122
basemap	59	73	279	199	586
x()	41	174	177	396	314
doctor	67	119	301	284	315
Python.sublime-build	30	271	259	281	568
250.000	21	190	234	557	42
coal	53	259	431	234	821
secs	21	160	274	323	655
npzfile	3	220	361	138	273
pleasure	24	109	229	444	870
nltk	67	57	44	499	791
What	47	0	392	678	835
\xc9	61	5	443	563	209
file_list	36	233	54	690	262
existence	12	94	134	355	31
buffer_df	64	174	74	551	262
Ranking	69	31	100	789	739
lats	41	6	279	287	573
A.values	75	227	385	0	969
energies	81	170	266	391	283
total_sent	78	144	173	197	459
17.0	91	122	156	587	626
late	18	200	114	407	64
wizards	11	48	389	675	360
*pi	96	201	18	560	13
x_id	86	129	136	150	858
return_index	42	27	349	358	833
timestamp	99	281	68	198	27
np.trace	3	40	137	15	709
Iteration	69	179	169	574	145
uhh	47	200	493	504	469
walls	59	52	32	199	177
dim_x	74	195	4	255	577
Inline	93	61	315	769	54
detach	40	187	128	764	954
stepped	50	264	145	35	986
Xubuntu	19	7	432	301	644
NavigationToolbar2QT	15	135	319	777	873
Dist	30	271	159	467	38
fancy-indexing	42	27	88	566	368
lat2	85	172	243	67	69
Statsmodel	77	168	132	783	353
right-hand	2	111	25	122	979
habits	13	135	5	419	195
Disk	84	127	355	159	359
x_lim	45	13	457	269	479
Hmmm	24	200	493	504	991
clamp	60	40	14	313	603
eigendecomposition	77	194	280	431	485
redistributable	7	163	152	241	850
everyone	11	109	394	444	53
Falses	6	100	95	18	866
low-pass	20	93	382	709	989
u-matrix	39	79	41	400	234
Strictly	12	0	147	145	908
Namespace	76	220	181	257	195
idea	11	59	389	630	469
prefilter	27	269	403	784	396
Waiting	11	109	229	444	870
Cosine	60	270	472	264	662
seniority	53	139	51	417	821
pyGame	93	248	429	571	722
Lawyers	54	223	368	797	139
buildozer	40	119	429	609	377
projected	39	149	279	93	573
holdings.date	53	150	42	250	775
logM-log_M0	96	29	18	173	13
_can't_	2	220	457	514	908
.swapaxes	68	32	228	545	744
non-uniform	81	165	270	546	301
6x6	34	77	280	88	943
6x3	34	77	251	88	943
6x2	34	77	251	88	943
pathetic	50	264	114	35	469
10cm	81	288	266	200	479
Anytime	6	0	14	15	709
minor_locator	5	148	363	558	844
pleasant	88	257	138	334	695
disposition	69	162	191	61	702
up-voted	18	15	45	472	922
wafer_number	64	150	449	197	653
gdal	71	248	381	571	722
recast	2	291	162	325	470
isUsed	48	123	486	339	502
omit	47	263	457	306	338
psd()	20	93	495	742	828
scipy.stats.norm.pdf	60	219	297	171	4
Inno	40	119	429	609	732
f.readline()	36	10	489	712	261
O'Reilly	38	224	282	94	689
N.B.	47	37	60	252	59
utilizes	76	26	61	174	612
utilized	76	218	60	697	187
Ethan	24	121	264	102	500
scoping	13	152	181	257	195
wager	88	272	5	630	53
polygons	39	73	279	152	586
np.all()	42	27	95	18	866
.tostring()	3	291	141	266	969
curvefit	60	124	458	324	438
Slight	4	235	254	567	441
twenty	21	190	234	557	692
construct	2	116	145	98	338
obligatory	30	225	490	567	81
paint	59	117	433	427	177
pains	11	120	212	144	727
s=0	72	165	15	235	570
pandas.DataFrame.groupby	43	157	72	683	956
NumActivity	53	139	51	668	779
needle	41	100	108	586	116
mentality	76	94	65	257	338
selector	43	111	115	369	227
woops	24	200	493	504	991
b	74	174	177	107	228
group-year	79	147	266	168	459
y_new	41	6	177	282	987
scalar_field	39	6	438	298	573
3.3.1	84	7	417	13	644
3.3.0	19	7	417	13	644
3.3.3	19	7	417	13	644
3.3.2	19	7	417	13	644
subfeature1	48	123	486	178	637
3.3.4	91	7	417	13	644
BioPython	84	57	167	499	732
Fortran's	76	51	65	169	730
folder1	36	10	136	751	261
objgraph	29	218	183	359	625
RPy	7	51	65	2	730
84th	78	49	338	98	456
multivalued	81	48	275	44	612
stdt	79	144	173	198	955
RPi	84	57	167	697	321
confirms	57	235	292	210	59
1.2.x	19	7	417	13	230
verson	91	122	156	9	376
paths	39	132	235	384	315
matplotlib.pyplot.contour	31	13	388	199	627
k-	46	39	73	316	649
onset	81	170	206	167	949
extracted	2	21	328	98	92
RPC	40	119	183	609	377
k0	85	98	458	396	738
folk	88	59	5	419	53
commentary	18	225	490	37	81
RPM	67	151	327	418	334
61.245.172.14	78	204	257	338	361
k=	44	243	370	391	0
folders	55	132	352	384	305
kB	21	190	234	159	359
vnc	40	119	429	609	377
multicolumn	43	265	72	771	739
significand	14	291	85	608	44
Geopandas	39	79	41	152	670
farenorth	24	121	264	646	500
medium-sized	21	190	258	203	42
depths	81	288	270	766	982
kR	60	194	458	396	142
skiprows=3	52	10	376	121	971
skiprows=2	52	10	376	121	971
significant	10	272	409	44	990
skiprows=0	36	10	376	121	971
12ms	10	160	37	534	783
df.iterrows()	65	233	54	750	207
data.view	75	227	385	266	969
kb	21	127	355	159	359
path1	36	174	222	384	315
kg	85	298	419	467	192
Reread	60	215	392	252	709
kd	12	43	131	203	563
kk	90	297	26	239	228
kj	44	143	215	5	37
ki	44	143	215	5	37
saturate	22	127	7	709	959
ko	46	39	73	316	649
km	39	288	324	200	252
kl	44	143	215	5	37
ks	42	293	294	509	28
folderA	95	298	419	751	497
chunksize=	52	185	28	121	369
kw	46	35	117	176	314
kv	86	5	117	690	898
weigh	77	183	132	783	738
ky	72	165	289	282	397
kx	96	201	370	560	142
Robinson	4	121	264	646	500
lumping	79	147	456	198	687
numpy.power	14	29	137	173	291
indexer_between_time	42	157	103	700	956
Signals	48	123	159	339	682
ExcelWriter	52	185	86	638	561
carefully	12	200	490	567	590
binsize	96	197	297	171	810
Sensor	48	49	195	787	502
per-instance	31	13	388	592	720
df.boxplot	64	14	383	568	710
best-practice	13	48	126	675	31
df1.append	64	47	406	631	445
bitdepth	45	61	315	699	54
nervous	50	37	301	284	954
data.dtype.names	74	95	74	239	995
19th	99	140	453	109	361
generators	65	94	81	735	311
Alexander's	4	17	254	710	441
backend-specific	93	1	104	537	728
FVM	12	42	5	170	563
4:5	53	95	51	239	821
notation	61	111	26	86	123
EXEC	36	174	117	343	858
cheaper	88	272	61	334	612
recombining	34	116	145	706	986
most_common()	65	233	158	522	207
np.random.choice	75	243	81	725	484
Variance	38	206	132	264	698
xlabel()	31	203	348	558	55
restart	40	141	281	764	954
Saying	88	152	147	145	908
groupby.sum	12	59	147	91	908
acessing	76	188	65	169	863
STOP	54	50	368	429	19
whitening	34	21	131	355	485
Recode	2	21	456	98	702
np.convolve	42	269	382	313	396
altura	75	18	385	509	486
MSDN	84	193	19	387	371
c=z	46	39	73	282	649
float*	34	67	0	157	336
Python34\	37	250	386	475	194
Ctrl-C	29	187	128	764	954
Create	69	31	100	530	911
=True	45	260	334	269	131
Ctrl-D	40	141	128	764	954
individual	2	21	233	251	338
nunique()	42	157	103	683	956
float4	3	67	261	312	498
Hinton	59	52	495	400	177
preformed	78	100	131	522	908
5,000,000	21	190	234	557	42
numpy-stl	67	151	167	664	315
halved	20	93	425	190	576
Indexing	69	111	100	530	911
TCP	71	218	183	609	600
halves	34	116	145	706	986
myriad	35	193	19	387	371
envelopes	81	170	266	588	176
Accepting	18	15	45	472	922
numpy-1.9.1	55	132	44	384	315
numpy-1.9.2	67	151	470	604	104
interfaces	13	26	65	118	398
Programming	38	224	282	94	689
c=1	96	124	177	396	201
Separator	61	129	338	539	262
floats	14	291	162	325	549
Filtering	69	31	100	530	911
_may_	35	229	181	697	439
.reshape()	42	30	396	74	595
if-statement	65	40	95	750	866
numpy.fromstring()	3	153	336	423	306
float_	3	18	162	266	470
alot	24	109	229	140	870
optimize.curve_fit	77	124	458	324	438
Pivot	69	162	191	789	739
Margins	69	206	495	209	837
Temperatura	99	298	419	198	687
Temperature	95	138	66	519	687
supply	2	229	457	306	338
recycling	31	23	375	145	631
alloca	35	51	65	9	439
B's	48	144	486	276	891
shutdown	40	187	128	764	954
file.txt	36	10	376	294	261
price2	78	144	195	178	419
zeta	74	195	4	509	228
throughout	2	21	206	167	713
suppressing	11	263	389	618	625
fontsize=15	46	39	73	316	649
rotatable	59	52	495	51	177
fontsize=12	46	35	117	46	430
create	2	21	233	98	338
secret	12	59	143	419	53
erfcinv	50	59	301	35	781
re.sub	86	89	163	299	66
6.12	19	7	417	301	644
6.10	67	57	167	241	644
HEX	22	4	443	438	672
understand	47	59	490	144	907
prices	79	78	450	762	746
Feed	69	162	169	264	698
missings	78	147	242	546	817
unify	2	21	233	251	338
comparator	76	40	14	15	709
Feel	18	15	45	472	922
get_window_extent	31	13	388	236	879
tolerate	12	272	118	44	863
substrings	61	49	195	27	1
avg_hr	64	150	256	250	775
price_	61	49	74	339	779
statsmodels	77	168	186	341	443
matplotlib.pyplot.boxplot	31	13	388	134	608
sub-plots	5	52	255	19	518
shoddy	24	200	179	567	67
ordereddict	2	116	145	706	356
cents	4	17	254	534	783
encountered	50	264	478	618	120
decoration	47	37	222	618	625
arenas	29	218	447	570	450
Forcing	2	152	237	9	621
CamelCase	15	94	181	145	195
28.26	47	21	392	91	338
IIRC	35	122	156	9	376
how=	49	287	449	48	445
complaints	50	225	301	419	219
emphasize	12	225	490	170	81
copying	2	188	447	573	531
1:1	81	288	284	245	479
usecols=range	86	10	376	121	971
lenient	88	257	147	334	612
mod_wsgi	40	119	429	609	377
QFrame	93	154	104	537	728
1:3	90	95	26	239	227
definitively	88	59	392	630	908
assignment	94	111	147	212	273
Mongo	71	171	303	128	88
C99	7	51	142	2	730
moment	47	59	392	630	950
Adjust	5	52	284	245	479
implicitely	47	59	147	145	908
aggregate	43	265	103	376	956
realm	88	257	61	257	612
testpixels	44	227	385	196	357
OpenMM	10	277	345	445	169
Figure	31	1	104	399	728
pyflakes	50	57	292	697	315
percentages	81	214	173	621	884
halve	10	188	355	159	581
spent	50	120	114	225	169
LimMag1.3	53	281	335	250	649
landmark	39	170	25	122	979
OpenMP	7	163	428	418	166
chemistry	13	298	48	519	852
Tools	40	141	259	110	402
np.matmul	42	30	137	313	709
v1.8.2	91	7	417	418	230
Considering	47	0	392	678	544
numpy.choose	42	30	205	358	951
np.ma.masked_equal	27	269	403	171	146
distutils	67	132	152	326	305
np.fft.fft()	20	93	248	191	344
15:16	99	253	453	525	256
pylab	15	135	319	76	632
atomic	76	94	147	169	734
Reproducible	57	235	342	347	560
Include	57	239	463	37	451
alignment	12	152	25	546	884
costListTrain	57	21	392	91	451
disappointed	50	120	114	35	727
alternate	47	48	254	630	31
32-1	14	291	46	325	482
mod	14	29	275	18	238
excited	50	120	212	739	727
rebound	15	135	181	777	406
matters	12	0	134	91	908
EXASolution	38	171	473	102	88
Position	69	138	159	789	837
apply()	43	157	103	750	956
superpack	67	151	470	604	104
precipitation	81	147	450	101	717
asof()	43	157	72	750	956
untyped	76	40	88	169	406
pyplot.hist	31	14	297	171	710
numpy.complex	3	94	162	15	890
indication	12	59	5	630	937
df.two	27	260	431	234	945
y_err	41	205	177	592	192
scrip	40	187	429	764	954
Java	7	51	65	2	730
back	2	232	232	335	180
test.xls	36	10	136	712	261
overdetermined	77	42	38	279	809
examples	57	193	372	387	704
Input	63	162	199	347	560
0:10	90	297	13	239	744
matshow	22	13	294	653	627
lightning	81	214	266	442	176
3-way	29	277	128	167	769
ontop	59	52	495	199	177
df1.date	64	281	271	548	390
para2	85	172	481	224	211
pet	13	228	218	647	852
pep	78	204	148	178	637
peq	44	195	370	617	192
per	21	160	274	297	326
pen	36	10	136	36	261
bogus	6	68	301	618	120
ellipsis	42	111	147	145	368
peg	18	232	235	764	781
notepad++	61	58	443	539	501
sub-image	22	126	7	45	562
PIL's	22	248	381	141	722
google's	13	23	90	97	537
example-	57	235	342	450	451
200x200	21	190	258	45	943
example2	47	59	392	170	371
re-order	2	116	75	706	356
Mollweide	39	149	279	199	586
json.dumps()	65	233	162	514	260
You'd	47	0	392	143	9
truck	81	228	266	64	176
string's	61	59	328	539	260
file_2	61	58	443	539	501
consequently	2	215	491	91	702
NIR_band	90	297	13	617	744
Arguably	76	188	118	334	863
skip_blank_lines	52	185	334	269	793
addtion	29	40	444	236	622
Helps	24	109	229	444	870
fileinput	15	135	336	589	439
Shared	69	162	191	61	837
mkl	7	163	428	418	166
Ooh	24	109	229	444	264
nframes	44	293	228	509	228
pared	57	235	342	450	781
infected	79	43	148	480	285
homemade	13	232	232	203	852
forward	47	85	392	630	817
paren	61	58	452	230	298
bored	18	120	114	35	53
Come	18	232	232	35	64
Github	35	122	220	292	106
adjusting	5	170	284	245	479
pre-calculate	81	43	131	588	662
unwrapping	2	116	275	618	417
nutshell	47	0	392	630	908
rejection	77	183	382	709	162
Doing	47	0	392	678	544
transaction_date_time	48	123	486	448	637
np.place	6	27	88	53	244
shopping	79	228	487	480	285
blit()	31	203	348	236	444
append()	42	27	81	750	595
engineering	13	224	212	118	852
tostring()	3	27	336	589	448
Genfromtxt	69	162	191	61	739
radians	96	149	438	298	13
Deviation	38	214	173	264	698
SIGMA	85	195	4	5	192
Gotcha	24	200	493	504	991
plugged	50	264	292	98	59
functionality	76	23	138	118	398
two-column	34	265	145	706	356
TXT	71	153	50	423	108
F_CONTIGUOUS	3	188	361	138	273
theList	90	297	51	239	995
aggregates	43	265	173	376	356
guy's	18	225	45	527	53
f2()	10	160	274	297	655
fisher	84	57	167	499	321
aggregated	79	147	173	376	356
calculates	81	270	472	174	635
Scott	24	109	394	567	469
out-of-bounds	63	111	199	369	951
Euler-Maruyama	13	42	48	195	416
discards	2	175	491	174	389
non-zeros	34	194	258	327	283
minors	59	52	29	19	884
fminbound	60	124	458	742	438
?..	47	48	301	699	835
un-comment	29	40	444	236	2
query	71	171	303	128	88
Surprised	4	121	264	464	500
successfull	50	264	292	75	564
Someone	11	225	143	630	652
reposted	18	15	45	472	932
ulimit	40	112	184	103	630
todense()	60	292	64	348	218
granular	99	140	450	101	714
striping	12	263	409	618	120
WRF	71	239	214	60	108
assay	79	298	206	498	675
mlab	72	23	138	97	398
confounding	50	264	60	35	120
i=i	75	227	54	690	486
WRT	81	86	275	588	603
putting	2	116	145	573	531
array's	3	188	361	404	235
severely	12	152	5	419	53
vectors.T	44	143	215	5	598
-0400	99	274	68	679	390
os.sep	61	58	222	384	501
choppy	20	117	235	709	562
optics	13	42	48	195	416
versioning	35	26	63	697	398
id_B	48	123	486	339	502
1085	54	3	101	429	428
id_A	48	123	486	178	502
label=each	46	35	289	176	430
1080	21	205	370	196	252
0x0	34	77	258	45	943
crop	59	117	7	571	670
cron	40	119	429	609	377
Tk.Tk()	40	176	330	205	568
read_hdf()	10	127	355	159	359
logscale	5	288	32	19	129
colors.py	37	250	475	475	173
fit_once	60	40	444	236	622
pycairo	93	61	315	368	872
tiff_files	65	233	181	236	406
giving	47	59	491	91	888
-25	54	266	324	397	421
-20	96	288	324	200	421
-23	54	108	300	8	139
gzip.open	36	10	489	712	261
secant	59	117	29	32	116
dendrogram	59	79	41	400	234
non-log	5	288	32	639	479
Suggested	30	235	254	347	560
avoids	76	272	491	573	621
consistant	10	272	118	44	576
multinomial	77	214	132	147	162
1337	30	174	117	751	262
Santiago	84	7	2	301	322
nonexistent	34	188	147	404	581
stateful	13	23	181	257	195
df.astype	64	18	141	548	969
intercept	77	124	177	324	738
mindset	11	120	114	35	996
remark	4	17	254	710	81
C1083	63	176	397	696	136
Appologies	18	225	490	567	81
M4rtini	4	121	264	646	500
id_2	71	49	131	522	795
OpenType	93	230	448	767	909
id_1	74	174	54	185	795
Northing	95	6	419	766	262
sightly	60	17	342	742	950
named	15	135	44	777	823
Ver	91	57	167	301	230
numpy-only	88	17	61	675	327
swapfile	84	127	355	159	359
private	15	135	181	663	720
SMP	84	186	33	590	789
beanstalk	67	218	183	573	377
Vec	3	67	261	312	235
np19py26_0	91	7	417	13	644
oval	39	117	433	32	198
resets	29	215	491	167	769
apples-to-apples	10	202	147	534	903
SMA	21	147	450	101	955
Status	48	123	159	339	502
.pip	55	128	330	477	568
nameB	85	172	481	730	778
Kelvin	41	288	438	200	884
distplot	31	14	383	602	710
DataFrame.describe()	43	265	275	784	603
themselves	2	21	233	251	338
x32	84	7	432	301	644
one-dimension	41	6	0	73	228
vlines	5	148	253	558	518
numpy-arrays	71	51	258	169	959
row-vectors	34	77	0	73	694
cv.fromarray()	3	220	361	141	957
windspeed	20	256	177	467	994
name2	48	123	373	168	497
ashamed	24	120	114	739	727
name1	48	123	373	185	517
PyMat	38	224	282	281	689
unimplemented	76	152	65	9	730
name=	64	287	406	343	294
pathos	65	27	81	359	311
plotting_context	45	13	334	269	879
pagination	50	120	114	334	863
gcc-4.2	55	112	276	113	315
Revenue	48	123	486	339	82
Period	99	63	68	426	817
max_columns	45	185	334	269	413
Inconsistent	69	162	169	61	837
praise	4	17	254	710	441
abcd	86	129	373	185	262
proportions	81	214	284	245	479
usign	47	57	392	699	59
.set_axis_bgcolor	46	39	73	316	649
reconstructed	2	215	328	714	187
effectively	2	0	392	91	338
_center	29	40	444	236	622
excel.py	37	250	27	475	194
date.txt	86	287	42	250	997
afm	55	230	44	384	305
numpy.frombuffer	3	67	261	312	235
EPS10	93	61	315	99	54
filepath	36	10	489	712	261
regions	39	117	235	709	670
pleasing	59	23	61	97	612
winners	79	78	173	101	459
datsets	81	21	233	203	338
buildings	39	73	279	400	586
frac	5	13	30	134	844
HUGE	12	272	409	44	863
Technical	38	224	282	722	689
varc128	37	67	386	215	194
philosophy	13	120	212	257	606
bothered	50	120	114	210	747
blkproc	60	296	375	742	631
Jblasco	4	121	394	646	500
check_finite=False	60	296	102	431	751
np.argsort	42	27	349	358	640
0.13260155	68	54	257	713	449
italics	61	230	448	767	909
serialNumber	48	123	486	339	682
gigabyte	21	127	355	159	863
plt.subplot	46	284	255	577	430
numpy.polyval	60	124	458	324	438
fallback	76	171	473	128	88
800,000	21	190	234	557	42
Huffman	13	248	7	571	765
embarrassingly	76	42	345	445	803
outermost	81	159	216	104	207
shapefiles	71	73	214	322	586
in-house	13	26	126	203	765
meter	81	147	206	101	949
lands	78	49	338	616	944
surface-plot	41	6	177	282	397
bunch	50	116	233	251	338
industries	74	144	195	276	944
sic	90	297	4	509	744
tab-completion	40	23	281	76	857
le	27	260	431	0	263
lb	74	195	108	586	577
lc	41	39	294	653	488
la	47	174	408	432	807
300,000	21	190	234	557	42
exdiv_date	53	139	51	448	821
ll	47	174	232	567	469
lm	77	124	375	364	597
li	74	233	54	690	227
resorting	76	48	145	573	638
lw	46	226	73	134	608
lt	27	40	444	589	866
lu	60	194	280	431	485
lr	96	266	18	173	421
ls	55	112	276	57	568
lp	36	176	222	384	906
latitude	39	73	279	766	573
lx	78	204	108	586	995
ax.view_init	46	284	253	577	430
__getitem__	3	220	329	663	720
cleanly	88	257	61	675	360
installers	67	151	470	219	104
1-liner	88	257	61	675	612
Filling	69	31	100	530	911
slinear	72	165	15	235	438
theano.config.floatX	3	18	141	266	969
dayflag	53	139	51	234	821
LPC	20	206	48	195	416
Ports	67	151	210	351	732
strive	76	94	118	404	863
personally	88	26	5	630	53
data_all	74	233	54	690	192
use_index=True	46	39	73	505	649
crudely	10	235	342	450	950
ax.arrow	5	13	289	592	479
l2	74	100	108	586	662
recarray	3	220	162	404	235
l1	74	100	108	690	192
l=	75	174	117	751	486
Previous	69	162	191	281	114
Table_B	79	144	303	787	502
Table_A	79	144	303	787	502
plt.text()	5	13	32	51	518
order=1	72	165	15	235	570
order=2	72	165	15	235	438
programmed	13	120	212	2	730
syntatic	74	95	26	212	227
programmer	13	120	212	739	727
pd.plot()	31	13	388	592	879
standardizing	12	264	292	210	59
rez	96	170	356	327	576
df.hist	46	39	74	505	649
7.3-2	19	7	417	301	644
res	74	195	177	690	262
rep	18	15	45	472	922
req	55	128	330	477	568
rev	95	123	159	197	653
ret	27	227	385	212	273
wholly	14	86	314	325	549
ndarray.T	42	30	14	74	709
VideoCapture	71	248	58	141	722
rel	53	139	256	197	775
rec	34	30	122	404	694
NaNs	6	68	12	130	910
ref	47	174	19	514	720
reg	47	174	74	551	779
QuickFix	40	246	429	609	600
emp	49	123	486	631	82
const_min	3	18	162	130	470
generate_value	90	235	342	509	228
triu_indices	42	27	88	358	244
retrieved	2	215	328	98	187
df.ID	53	139	42	417	775
0,111	90	54	257	332	744
likelihood	77	124	132	783	4
bleed	59	117	433	32	198
retrieves	2	215	491	174	92
s=10	46	39	73	316	649
set_clim	31	1	388	399	271
compatability	12	57	60	9	957
Stacking	69	31	100	530	911
df.date	53	274	68	72	390
arbitray	76	272	145	257	781
df.data	2	49	162	405	702
can_zoom()	45	13	334	269	866
elasticsearch	71	265	303	60	92
re-	35	193	19	571	371
retain	2	229	456	405	621
bytestring	3	18	336	266	969
Operators	38	94	191	61	890
scipy.stats	60	219	132	742	4
DF.groupby	64	150	256	551	48
Jan-Philip	4	121	490	567	81
46GB	84	127	355	159	359
ColorBrewer	22	23	294	97	271
.transform	64	150	256	197	48
embarrassed	18	200	179	739	67
hurdle	50	264	114	35	564
X11	40	119	429	368	377
numpy-way	11	48	389	675	360
SafeGuard	84	119	167	664	315
set_ylim	5	284	322	558	958
Spin2	42	27	14	313	876
it.operands	90	297	13	332	995
monkey	35	1	329	257	417
right-click	40	154	188	427	2
realistically	81	43	270	733	959
x.value_counts()	64	150	10	772	838
e2vec	44	205	251	196	228
1881	90	54	257	332	744
contour-plot	59	52	32	19	177
messing	50	232	114	35	531
NDFrames	76	94	122	702	734
bugfixes	35	122	220	9	376
Spine	31	1	388	399	879
Col_A	48	123	486	339	82
environmental	40	119	429	284	377
maturity_dt	48	281	486	788	687
subdataframe	78	49	456	588	944
slack	10	272	118	458	863
Universal	38	206	169	722	71
Cluster	30	271	191	281	837
df.unstack()	64	47	133	551	73
joris's	4	17	254	710	441
light	11	173	143	144	652
first_valid_index	43	157	72	750	956
NPE's	4	17	254	710	441
df1.drop	49	139	406	631	445
regenerated	2	116	328	335	180
w0	85	201	426	560	391
tidy	57	232	232	170	761
MyName	55	128	52	477	568
comfortable	13	120	212	118	727
tide	99	147	335	198	221
imput	61	174	117	751	262
1-minute	99	147	450	101	817
comfortably	10	272	355	159	863
itertools.izip()	65	27	81	648	311
v2.6	91	57	167	241	644
v2.7	19	7	417	13	644
pickleable	76	94	122	359	720
gravity	39	149	438	93	416
v2.0	13	26	138	97	398
cdist	60	270	472	152	662
1.33	96	108	23	695	421
1.34	54	108	23	297	399
EXTENSIONS	30	212	368	429	428
Transition	85	174	159	467	262
set_ticks	5	148	363	558	958
Deedle	35	239	303	170	451
callable	63	44	460	172	787
Without	47	0	392	678	544
eight	21	190	85	251	326
TimeSeries	43	265	75	771	817
transcript	57	239	222	37	451
data.iloc	90	297	13	239	995
RIGHT	30	37	222	751	2
enthusiastic	13	120	212	419	219
FLOAT	3	18	162	266	429
subplots()	31	203	255	577	518
__init__.py	15	132	475	205	173
callers	48	144	337	708	294
absurd	88	152	409	44	84
workspace	40	141	281	384	632
special-casing	14	86	314	699	604
supported	35	122	138	9	376
numpy.argmax()	42	27	14	358	244
one-off	88	272	61	334	612
Mutated	68	266	18	28	62
non-system	67	151	167	499	732
gcc.exe	37	250	386	475	194
misclassified	71	94	131	514	1
stamped	81	147	450	101	817
coloring	59	52	433	32	177
axarray	74	195	4	255	228
Return	69	31	100	530	911
anyone's	50	232	114	35	907
backend_bases.py	37	250	475	205	173
ambiguity	12	152	147	145	908
arcane	88	257	61	334	695
equilibrium	20	98	38	279	809
np.random.random_integers	75	243	385	425	484
list_of_objects	34	270	131	588	662
'])]`	53	139	51	417	775
nrows	52	185	228	0	793
aforementioned	2	215	233	251	338
timing	10	202	37	534	783
dtype=int32	68	227	257	10	357
vely	41	6	177	107	397
areas	59	117	433	32	198
np.ma	42	27	88	53	244
rebinning	72	193	19	387	371
1.3GB	10	160	355	323	655
cached	29	218	447	359	450
encounters	61	37	491	174	769
color-code	59	52	433	621	177
recfunctions	15	135	319	9	957
Kington	4	121	264	646	552
137	54	3	298	187	158
Tada	24	109	229	140	870
caches	10	218	183	359	959
conform	2	229	457	306	621
untrue	12	152	456	355	908
farthest	39	43	235	588	116
Area	95	138	159	168	653
df.column	94	265	72	771	160
df.reset_index	64	47	406	548	73
x_arr	74	40	0	73	228
spectrum_y	74	44	199	509	888
20GB	21	127	355	159	359
wc	36	10	222	712	261
xxxxx	95	181	373	187	568
zeros()	42	27	88	404	581
PathCollection	31	1	388	399	879
literate	13	120	212	739	727
use-cases	88	183	5	458	606
straightly	35	23	220	97	398
os.path.dirname	36	10	136	308	261
var_dump	90	54	257	332	995
X.dot	44	194	280	704	598
interpolate.interp2d	72	165	177	282	397
July	99	182	318	109	519
plugins	93	154	63	537	537
LabelEncoder	43	168	186	341	443
Padraic	24	121	394	646	500
cmd.exe	40	141	281	76	632
Fairly	50	120	114	739	727
facepalm	24	200	493	504	991
batman	95	298	419	467	38
implementing	76	42	48	35	905
Merging	69	31	100	530	911
plt.text	46	148	30	46	348
Martijn	24	121	264	646	500
Axe	31	13	388	399	879
synced	59	170	409	546	714
optional	31	13	334	15	621
tensors	34	77	137	431	694
legit	18	59	114	419	469
1000th	81	170	266	391	176
instant	50	264	301	167	769
freely	13	26	63	516	398
attributed	12	183	206	252	187
fulfilled	78	100	291	355	148
assure	47	229	392	630	31
divider.append_axes	46	284	494	577	430
attributes	2	1	329	514	720
passing	2	215	444	15	531
periodogram	20	93	425	206	344
DirViento	85	281	419	467	211
strftime	43	274	68	426	745
comment	4	121	490	646	81
x-direction	81	288	284	245	479
commend	4	235	490	170	81
pd.io.parsers.read_csv	52	10	376	121	971
laugh	18	120	114	739	469
add.reduce	42	269	103	15	709
r5j_bvnd2	55	128	293	52	325
15.10	84	7	2	410	321
numpy.ndindex	42	27	14	313	244
Toplevel	29	154	104	427	728
.show()	29	203	128	123	55
package's	35	193	372	697	594
OpenCV2	22	248	381	141	722
json	71	153	50	60	108
array.dtype	3	18	141	266	969
fp-model	55	128	293	52	56
sklearn_pandas	77	168	186	705	646
subelements	3	18	162	514	336
arises	12	152	60	618	120
perplexed	50	120	114	35	727
Center	38	206	259	110	402
generate_wind_cap_new_data	53	139	256	250	199
AxesGrid	5	23	388	97	518
climate	79	73	214	322	675
reindex_like()	43	188	72	359	73
numpy.matrix	3	292	137	348	218
ax.set_xticks	5	148	363	46	339
df_out	48	123	486	551	779
7-8	21	160	234	557	326
atmospheric	39	73	214	322	949
splits	2	49	491	174	986
data2.txt	36	10	136	712	261
__iadd__	3	220	329	663	235
df.filter	64	89	163	340	131
sharex=False	46	226	494	46	430
mat.shape	44	293	54	509	228
dtype=float32	68	54	257	0	357
Confidence	38	206	495	209	71
contraints	30	174	117	751	262
follwoing	24	264	394	699	59
numpy.amax	42	269	403	53	244
Uniform	38	206	132	147	4
respected	9	152	138	144	621
python-2.7.5.amd64	37	250	27	475	194
Tensorflow	34	77	0	722	694
prose	18	225	490	472	81
Chang's	4	17	254	710	441
.argmin()	27	293	431	28	146
bbox_to_anchor	5	226	30	134	348
Hunter	35	224	372	71	741
indistinguishable	22	4	201	438	672
Car	95	138	373	276	517
genfromtxt()	52	185	336	121	793
Pypy	7	202	37	2	876
idiomatic	88	257	61	675	327
Coefficients	38	206	132	722	71
price_trend	48	233	272	339	682
cubic	72	165	15	235	570
basemaps	79	73	233	322	675
Doug	4	109	229	444	264
df_input	79	144	131	787	944
countplot()	59	14	495	621	710
Order	69	162	191	789	739
scipy.io	71	153	336	423	306
pre-create	42	188	457	404	439
center	39	149	438	122	979
Multi-index	69	265	75	789	739
oops	24	200	493	504	991
creators	76	296	65	169	783
easy-to-understand	88	225	5	444	53
usual	47	0	392	91	621
test1	74	174	74	185	262
test3	95	181	272	168	497
test2	15	174	330	384	461
test4	95	123	335	168	497
Verify	30	176	199	347	560
open()	36	10	336	712	306
np.ix_	42	30	286	74	368
underlying	2	215	122	404	621
matplotlib.style.use	45	80	383	269	608
boundries	59	117	433	457	714
_backend_gdk	15	176	44	696	823
EMAIL	68	196	257	211	744
list_of_lists	74	297	4	509	228
senderle	4	121	264	646	500
ABAQUS	19	7	210	241	644
NX2	34	205	251	73	336
_minimum_	57	235	463	37	661
Friday	99	140	453	109	94
nastier	61	94	147	145	695
bench	10	202	37	600	783
15th	99	140	453	109	94
block's	34	188	275	522	986
KNearest	13	168	186	705	646
np.inner	44	143	137	704	598
ravel	42	30	396	74	263
tests	10	202	37	534	783
articles	79	193	372	387	219
re-arranged	24	200	490	567	991
-x1	96	201	18	243	13
testc	6	49	456	405	910
out-of-order	12	152	301	618	120
deployment	67	119	210	607	377
pivot_table()	43	47	349	683	73
numpy.where()	42	27	286	358	244
insert	2	116	145	335	338
BVP	12	42	38	279	809
11pm	99	140	453	198	687
mysql.connector	71	171	473	128	88
x1000	21	160	234	557	252
works	47	59	491	174	59
read_csv()	52	185	28	121	793
opacity	22	4	433	438	608
Scale	38	206	495	209	71
Scala	13	26	65	118	193
regularized	77	98	458	279	738
relevent	50	57	292	664	59
Editor	40	141	259	110	402
liblmdb-dev	55	112	276	477	568
pd.to_csv	36	153	50	423	108
Versus	20	93	425	507	344
Mike	24	121	264	646	500
est	85	174	408	432	807
OrderDict	65	233	158	540	908
parallelization	76	272	345	445	990
XQuartz	67	151	327	351	334
do-able	88	120	5	419	695
Pasting	57	239	222	769	451
Question2	24	281	394	198	262
panes	93	61	233	22	54
slight	4	17	134	552	441
stack()	43	47	75	683	73
VA	90	297	4	391	192
disastrous	76	272	118	169	863
10.8.3	19	7	306	301	232
worthy	18	225	220	419	106
periodically	29	218	128	167	109
simples	12	174	419	170	120
panel	59	154	233	51	356
Galt	24	121	264	646	489
re-written	57	235	342	450	187
oneminusbeta	74	195	4	255	597
Weight	48	144	159	467	268
smartly	88	229	61	546	612
.set_index	64	287	406	631	294
hold=None	46	35	73	176	649
.stack	64	287	449	48	48
decimate	20	93	382	709	562
off-topic	18	225	45	527	509
sys.stdin	36	10	489	712	942
atlas-base	55	128	330	477	372
predictor	77	168	186	341	443
as_strided	42	30	286	74	368
downvoters	18	225	490	170	53
!!	24	33	229	140	870
rendered	59	61	315	99	54
submits	57	187	188	167	2
!,	24	109	394	140	870
billions	21	190	234	557	42
!.	24	33	229	140	870
brands	74	233	54	690	975
doesnt	47	0	392	143	835
renderer	93	80	315	435	591
X_scaled	44	227	396	0	263
!?	12	59	490	419	835
1986	54	186	300	372	789
1987	38	224	282	519	689
1984	99	182	318	372	361
pd.expanding_mean	64	150	256	417	775
1982	54	69	119	155	126
legends	59	52	32	19	518
1980	99	182	318	372	361
1981	99	140	318	372	94
Element-wise	69	179	169	264	145
1988	54	186	318	471	361
ns.index	68	32	13	545	744
parse_dates=True	52	185	28	121	971
dayofyear	99	140	453	198	687
:-P	24	200	114	504	469
diagonalisation	10	292	37	169	876
Cleaning	69	31	100	413	316
AGAIN	24	212	55	136	870
Realized	4	200	490	210	81
Structured	69	162	122	61	890
2014-01-10	99	69	119	155	256
bus	84	119	206	607	377
but	47	0	392	678	544
outer_df	64	174	74	551	199
numpy.nonzero()	42	157	103	683	956
Dec	99	182	318	34	519
buf	36	10	336	712	942
bug	35	122	220	292	106
bud	50	264	114	35	53
partially	12	152	60	799	621
wise	34	272	275	566	734
Wall	10	160	274	297	655
wish	47	229	392	306	338
variations	50	264	393	75	564
149.6	96	266	324	3	421
Walk	2	116	145	573	854
to_timestamp	63	63	460	172	787
npy_float64	3	67	261	146	831
minutes	21	160	274	198	326
rabbits	74	100	216	5	192
svc	77	168	186	705	646
indate	99	274	68	155	390
Instrument	95	268	373	686	517
DecisionTree	13	168	186	705	646
histrogram	81	214	495	147	4
83	54	3	298	318	158
mysteriously	50	263	301	618	510
redder	22	4	427	438	198
Turning	69	31	100	530	316
Parameter	48	144	337	708	248
bulky	88	257	61	334	695
virtual	67	119	210	351	377
ptdump	94	222	446	293	729
tabulate	72	165	15	733	301
Altogether	47	21	342	347	560
xscale	5	148	297	639	825
11.1	91	186	156	579	322
Bivariate	72	206	132	147	71
Ack	24	109	229	444	870
PyROOT	13	26	65	118	730
errorbar	31	14	383	568	710
bundle	67	151	63	516	850
chunkshape	94	222	446	702	160
copy=True	3	220	361	1	172
seismic	22	23	381	571	562
0.15	91	122	156	587	626
Series.str.replace	65	89	163	589	448
nrow	44	205	228	0	357
-min	96	32	18	28	62
unset	67	112	352	113	269
2.5.0	91	122	156	9	230
best-practices	76	272	389	203	612
")'`	86	129	485	289	858
baked	35	26	138	118	881
matplotlib.colors.rgb2hex	22	27	14	313	439
augmented	34	111	147	212	734
Strangely	47	264	292	699	59
1.5gb	21	190	234	557	42
two-dimensional	34	77	0	73	694
Preventing	69	31	100	209	316
Fortran	7	51	428	2	730
FourVector	90	54	257	10	585
lighter-weight	13	26	138	118	612
I.E	2	263	328	167	769
hate	18	120	5	419	53
view_as_windows	42	248	7	141	722
tweet	79	281	50	27	1
Uhm	24	200	493	504	991
0.18	91	122	156	587	376
redrawing	59	154	128	123	203
Additionally	47	0	392	678	544
I.e	81	21	239	487	702
matplotlib.pyplot.imshow	22	36	294	199	465
QuadContourSet	31	1	388	399	879
idomatic	88	257	61	675	327
Partition	69	179	169	61	739
Industry	95	123	373	168	517
pandas\	37	250	27	314	802
.month	53	63	68	72	390
tostring	42	27	336	404	306
pylab.gca()	46	226	494	46	430
upstream	35	122	220	292	106
encounter	47	37	301	618	120
Restaurants	48	144	486	787	502
Origin	13	224	282	519	852
rebind	65	229	181	212	923
Redhat	19	7	432	301	156
skipinitialspace	52	185	28	121	793
supports	76	26	138	9	621
.....	47	174	117	751	262
convert_numeric=True	64	185	418	548	131
degeneracy	12	42	38	279	809
enjoy	13	272	5	419	53
obj_data	44	205	46	196	833
invariably	76	152	147	618	863
estimates	77	214	132	783	162
PyFloat_FromDouble	3	67	261	146	235
street	79	49	277	787	502
issubclass	3	220	329	157	172
Gaussians	77	214	132	147	4
3GB	21	127	355	159	359
code-wise	88	257	61	675	695
4x5	34	77	251	88	943
4x4	34	77	251	88	943
4x3	44	205	251	88	943
4x2	44	205	251	196	357
4x1	44	205	251	88	943
web-based	40	246	90	609	537
ali_m's	4	17	254	710	441
specification	61	229	457	91	621
beaten	24	109	229	444	64
.kind	3	18	460	266	172
plt.cm.jet	22	4	294	438	672
conduct	77	168	126	203	765
there'll	94	222	456	355	160
axvline	5	13	383	558	518
df.drop()	43	47	72	683	73
COUNT	48	212	182	547	965
Made	24	200	394	567	991
rhel	84	7	167	301	321
i'th	74	195	239	616	577
stared	50	120	114	407	469
hundreds	21	190	234	557	42
Colorbar	5	162	495	209	837
asymmetry	12	170	409	44	120
sys.maxsize	14	291	46	325	549
studio	67	163	152	241	850
na=False	53	139	163	340	131
np.random.uniform	75	243	385	425	484
path	40	132	352	384	315
pymodules	55	128	475	151	173
2047	90	293	201	332	995
2042	54	50	368	158	277
2040	54	50	368	158	277
auction	48	144	195	787	637
2048	21	190	258	45	252
isympy	40	141	281	76	632
fig.savefig()	93	203	348	123	55
ax.autoscale_view()	5	284	253	558	339
fmin_cobyla	60	40	458	396	438
+cos	96	201	18	173	62
8}	86	129	287	730	347
visibly	59	170	284	245	576
rstride	5	13	294	653	608
feelings	88	225	5	419	53
visible	59	117	433	32	714
lomb-scargle	20	93	425	191	344
Pretty-printing	90	193	19	387	114
Circular	38	206	282	209	71
thread's	29	218	128	764	769
m*	85	201	370	560	192
discrepancies	12	86	301	618	120
m4	85	172	442	224	778
pickle.loads	36	37	489	556	314
m1	85	172	442	224	778
m0	85	100	419	5	192
m3	85	194	442	5	778
m2	85	172	442	224	778
m=	44	227	385	0	357
tree-like	13	265	122	60	457
granularity	81	147	450	546	817
lts	21	160	274	323	252
onehotencoder	12	183	409	203	604
.3e	86	129	465	137	347
mV	96	266	426	391	142
df.applymap	27	150	10	772	838
mS	54	223	300	338	139
real-time	13	246	58	428	600
pandas.algos	50	37	301	9	120
outdated	35	122	156	587	376
p.shape	90	227	228	509	228
me	11	59	143	284	469
md	65	233	54	690	526
Crazy	24	109	229	444	870
mf	53	174	419	467	262
join	49	265	75	706	356
mc	48	123	335	339	211
mb	21	127	355	159	359
mm	99	288	284	200	221
random.Random	31	220	329	725	720
mo	21	174	232	751	221
mn	44	205	356	148	668
Alternatives	69	162	191	61	114
best-fit	77	124	132	324	738
mw	90	259	431	234	945
wit's	50	37	301	699	888
mp	29	218	444	236	803
ms	10	160	274	297	399
mr	53	139	51	417	821
cond	27	100	431	724	945
_png.so	67	57	167	664	230
my	47	235	342	450	59
mx	41	174	177	107	13
cone	39	149	438	93	116
6_6	54	54	300	338	139
pandas.rolling_mean	27	269	382	784	396
Array3	75	205	251	196	252
Array2	74	293	108	586	577
Array1	74	293	4	586	228
sns.heatmap	46	39	73	505	649
generically	47	229	147	145	612
signal's	20	93	425	191	344
file.dat	36	10	50	423	108
']"	53	181	42	417	775
']'	53	139	51	339	779
looses	2	116	491	573	621
py32-matplotlib	67	57	167	499	732
enc	86	89	42	417	775
!!!	24	33	229	140	870
!!,	24	109	229	140	469
writers	71	153	50	423	561
ent	27	260	148	234	945
env	67	132	352	113	137
2000-01-05	24	200	456	504	991
2000-01-04	78	140	453	198	361
mystr	86	129	117	211	199
2000-01-01	99	69	119	155	256
2000-01-03	99	140	453	155	687
PYTHONPATH=	55	132	352	477	568
Essentially	47	0	392	678	544
color-bar	59	288	32	19	884
mess	50	232	232	35	781
urllib.request	15	129	485	289	858
MyTable	86	129	182	343	858
demanding	10	272	118	334	863
mesh	72	165	270	733	301
str.startswith	64	139	406	551	131
']`	53	95	272	339	779
colormaps	22	4	294	438	271
np.equal	42	27	286	358	866
gluing	43	116	145	706	986
']]	53	139	42	250	775
bootstrap	77	214	132	783	162
perform	76	116	275	203	734
mucking	76	232	65	257	417
algorithms	13	42	48	195	905
Greetings	47	59	392	91	469
enter	40	37	222	764	2
ArrayA	74	293	4	509	228
writer=	36	129	136	36	858
ndimage.map_coordinates	72	165	15	235	570
extents	5	284	253	245	479
Stop	69	31	237	209	316
Alternate	47	17	237	91	9
cffi	76	51	65	2	730
thesis	13	120	212	195	852
-666	54	108	300	797	139
numpy.shape	44	227	385	0	357
deSolve	60	296	102	279	809
expectations	12	183	409	170	563
Here	57	235	342	450	950
comprehend	50	59	114	144	469
shifts	81	263	25	122	603
data.loc	53	95	51	239	779
fade	59	4	433	32	198
PyArray_NewFromDescr	3	220	261	312	235
pd.__version__	91	7	184	103	630
hourlist	78	204	298	198	995
4800x4800	81	43	131	733	192
extent=	31	13	294	592	627
misdirection	12	152	147	145	908
person2	54	54	257	332	139
1294185600000	54	50	368	158	277
echo	55	112	184	103	630
PYTHONSTARTUP	40	141	281	76	632
notified	18	15	45	472	922
Redrawing	69	154	495	209	837
filling	6	68	145	546	910
df.resample()	43	85	72	771	956
4L	90	54	154	30	357
2^64	14	127	85	608	482
notifier	5	288	32	122	479
lasting	10	160	206	167	655
itertools.islice	42	27	81	648	311
Humor	45	230	448	767	909
]]])`	90	54	257	10	585
interop	7	26	63	2	730
$\sigma$	95	181	73	316	649
band-aid	88	232	392	573	695
Regressor	77	168	186	705	353
metogram.py	37	250	27	187	194
combining	2	116	145	706	986
4000x4000	21	190	258	45	252
damped	20	98	231	195	416
hann	96	201	18	336	13
msgpack	35	171	446	292	457
Postgres	71	171	473	128	88
Holy	24	33	229	444	870
god	24	33	229	444	870
120.0	78	204	239	87	456
got	50	264	292	210	59
gov	48	144	195	787	502
scopes	76	152	181	145	195
transData	31	1	388	399	879
AFG	99	298	453	751	361
data_array	74	233	54	690	336
streamline	39	48	495	199	674
visvis	93	23	63	97	537
scoped	15	40	181	145	195
Customizing	31	23	388	97	518
acrobat	93	61	315	99	374
coloumns	78	49	131	522	944
publication	59	61	315	99	54
go-	86	129	338	185	262
degeneracies	39	43	235	733	102
.hist	64	150	256	505	48
ASTER	39	73	214	322	586
priorities	12	24	134	458	563
inefficent	88	59	61	334	604
erfc	96	29	18	173	13
TIME	48	212	55	136	965
Carry	24	200	493	504	991
someting	47	174	74	424	835
cooperating	61	57	222	497	469
takeable	47	21	392	91	338
erfi	34	77	137	5	598
Nicolas	4	193	372	387	552
already	47	264	292	210	747
sobel	20	93	382	191	989
RuntimeError	63	176	397	582	136
coding	11	120	212	739	727
common.py	55	128	330	205	461
disk-backed	76	272	118	702	959
X'X	77	98	458	279	738
categorize	79	228	487	376	653
matplotlib\	37	250	475	205	823
non-NaNs	78	144	173	616	944
1502	68	223	257	234	945
geodatabase	71	246	50	60	600
a=1	85	172	177	0	201
a=0	85	201	177	560	201
exp1	41	172	26	560	13
a=2	68	54	154	545	585
value_vars	43	47	75	683	118
matplotlibs	31	23	383	51	710
pygtk-2.24.0	55	128	52	477	56
X's	78	21	131	251	713
unmelting	43	265	75	706	356
ceiling	14	219	314	784	238
servo	39	149	438	93	949
tool	13	26	126	118	537
serve	13	26	90	609	537
took	50	160	292	323	655
Premature	12	42	5	419	53
Patterns	69	162	191	61	837
acf	60	93	382	742	396
Sunset	48	281	66	194	555
western	59	73	279	322	586
Fun	47	94	14	313	734
Decimals	14	291	162	325	549
G2	95	172	335	168	497
ax.patches	46	1	388	399	430
Features	38	224	282	519	893
expr	86	40	444	396	622
Zmin	41	6	270	733	397
0.33333333	68	54	257	713	421
.read()	36	10	136	712	261
DataConversionWarning	38	206	330	722	71
libatlas	67	163	167	499	732
2014-05-30	99	140	453	155	687
expm	60	296	102	742	751
matplotlib=	91	57	167	587	230
lib-dynload	55	128	52	477	56
Unit	38	298	419	467	698
lbs	68	223	300	797	139
fashion	34	48	131	91	338
clusterings	47	21	392	586	835
talking	12	59	5	419	907
leafs	74	195	4	255	577
affectation	12	152	147	170	835
lbl	74	293	108	509	228
"'"	86	129	117	85	66
1619	84	200	493	504	991
"')	86	129	117	211	858
firmware	2	229	233	251	713
-	47	174	392	751	338
Cython's	7	51	261	2	915
elegance	88	202	61	458	990
oriented	13	23	138	118	398
re-assigning	43	233	72	750	923
many-to-many	2	116	145	706	986
1.4030900E-06	54	50	368	331	449
vice-versa	2	21	25	355	174
np.genfromtxt()	52	185	336	121	793
effectiveness	76	272	134	458	990
coarse-grained	72	232	232	306	959
df.fillna()	43	157	72	683	956
savitzky_golay	41	40	177	396	622
masked_where	42	100	95	53	866
8.04	84	7	167	664	321
coin	81	183	48	195	416
unorthodox	10	17	61	630	612
"'`	86	129	465	137	496
peers	13	229	63	170	765
logical_not	42	111	147	18	604
treats	2	215	491	174	260
flow	39	246	206	195	949
flot	13	26	126	118	537
Anaconda	67	151	210	351	104
parallelised	76	51	345	169	730
flog	48	204	486	198	687
qPython	71	171	303	514	720
super()	31	40	444	236	444
sublimetext	93	187	128	51	54
inspire	18	225	490	472	81
ffff	86	129	141	266	969
reorganize	2	229	145	306	360
random	81	21	131	725	162
df.to_csv	36	10	376	712	261
0-length	3	18	162	355	470
Simplest	47	48	61	675	327
substituting	2	263	491	618	59
foo.loc	53	139	42	417	775
numpy.maximum	42	269	286	74	595
1-tuple	3	220	361	404	890
Simultaneously	69	162	191	61	837
RectangleSelector	93	154	104	537	728
np.polyval	60	124	177	324	597
on-screen	93	61	315	99	54
abs	96	29	18	28	13
zipping	65	116	17	706	986
photo	22	126	381	571	593
arr.ndim	27	227	431	509	228
geez	24	200	493	504	991
mixture	77	214	132	147	4
Larger	69	162	191	61	837
blinking	29	187	128	764	954
activations	81	214	173	101	162
Axes3D	31	1	388	399	879
csv.reader()	71	153	50	423	108
Quarter	99	138	66	789	687
visible=False	46	148	494	46	430
short-cut	88	257	147	145	908
countries	79	228	487	480	675
np.float64	3	291	141	266	969
3882	99	204	119	155	361
dips	20	170	266	391	949
real_name	48	144	486	787	502
twice	47	0	392	91	338
interspersed	34	21	233	546	694
hightemp_unlocked	74	100	108	586	283
-number	45	49	456	751	315
shots	22	126	433	571	562
7680	21	205	0	196	336
Axes3d	31	1	388	199	879
Rodrigo	47	21	392	91	338
nAntu	24	200	493	504	991
ruins	12	232	235	167	781
kwargs.get	46	35	117	46	486
.astype()	3	220	14	15	45
choice_txt	48	123	256	197	653
itertools.izip_longest	42	27	81	648	448
num	75	174	117	690	262
np.hstack()	42	27	286	358	595
capacity	10	127	355	159	359
tensor	34	77	0	88	694
Series.where	27	157	334	1	866
tsset	79	265	126	203	356
urllib	15	135	44	289	823
366	99	140	453	109	94
ElementTree.pyc	37	250	386	475	194
364	99	169	298	372	811
365	99	140	453	109	94
fft()	60	93	425	336	344
363	54	3	101	318	158
360	39	223	324	200	252
handwritten	38	42	48	195	416
Info	30	271	19	281	114
nneonneo's	4	17	254	710	441
confusion	12	152	490	567	120
between_time()	43	157	72	771	956
volumetric	39	126	214	571	177
boss	13	120	212	739	852
interation	78	77	216	616	456
Exp	96	201	18	560	13
Infs	6	68	12	130	910
ybound	5	288	253	245	479
y_test	74	256	54	690	994
improve	11	272	389	225	990
protect	15	135	181	777	195
upcasted	3	291	162	266	470
ranger	75	287	289	425	486
undelete	18	15	254	472	922
extracts	2	215	491	174	92
participating	78	144	131	178	944
merging	43	265	75	706	356
layered	59	52	495	51	177
We'd	11	170	409	44	53
np.finfo	14	291	142	325	549
similarities	81	270	472	588	662
n_features	44	256	251	196	930
RStudio	40	141	90	76	537
kwh	48	144	195	787	502
numpy.inner	44	194	137	74	598
multi-axis	94	111	115	369	227
testable	57	235	61	675	612
2200	44	205	370	196	192
pyTables	13	26	122	702	457
beef	10	183	409	44	576
S12	3	18	141	266	178
ropes	11	109	229	444	727
S10	3	18	141	266	178
been	50	264	393	75	747
np.vsplit	34	30	286	74	146
beer	79	78	487	480	285
belongs	78	21	239	487	702
Jepp	7	51	65	2	730
SORT	30	212	55	751	262
linker	67	163	152	326	305
stats.mode	27	150	256	551	779
pd.pivot_table()	43	157	72	683	956
values_block_0	86	18	117	211	262
_not	57	215	222	699	54
Retrieve	69	31	100	530	911
C_CONTIGUOUS	3	30	361	138	273
Upper	38	138	191	519	698
ngn_rate	3	67	261	157	498
Numpy-MKL	84	7	417	241	321
lesser	88	170	409	44	576
site.py	55	132	352	113	798
uninstall	67	151	327	232	334
Follow	4	193	19	387	552
Busy	24	200	394	567	64
"`	61	129	465	575	496
)];	68	32	18	545	62
)]=	27	32	13	234	945
Write	69	179	237	530	316
)]"	27	260	431	234	945
ramifications	12	120	5	419	907
misspoke	24	200	493	504	991
d.date_range	64	46	119	155	997
pd.Series.value_counts	64	157	103	683	956
-Thanks	24	200	493	504	469
Rectangle's	39	117	235	122	479
backend_wx.py	93	132	475	205	173
INSERT	30	171	182	343	88
containing	2	21	233	98	702
multiIndex	43	265	153	771	91
recursion	63	44	199	582	625
wound	50	17	254	413	441
complex	88	42	147	91	84
inventory	79	78	487	101	955
"]	53	150	260	455	496
several	47	21	233	251	564
DataFrame.apply	43	157	72	683	956
"'	63	44	460	614	787
""	86	129	117	185	858
mstats	60	94	14	53	957
rng	75	243	74	425	211
monotonic	72	165	270	708	301
)]`	75	32	13	545	585
BELOW	30	212	55	136	965
terribly	88	59	61	334	604
pyzo	40	57	167	735	59
prioritize	79	78	173	480	955
)]]	68	32	257	545	585
lcd	53	281	74	551	779
dtime	2	49	456	405	262
rect.so	7	132	44	215	957
greatest	78	43	266	588	283
x.price	68	32	10	772	838
fungicide	79	228	487	621	675
random.randrange	75	32	54	545	486
shadowed	15	135	319	777	957
1hr	79	147	450	101	955
savefig	45	203	348	123	619
PyQwt	13	26	63	516	398
band1	50	37	292	699	59
scipy.stats.itemfreq	65	27	349	358	640
modulate	18	194	280	567	738
Estimation	72	206	132	147	4
2013-10-01	99	281	453	155	687
OHE	61	49	456	405	260
interprete	61	215	328	699	260
darray	3	174	0	73	228
Boost.Python	7	51	65	312	730
group_by	43	265	72	771	356
Ploting	69	31	100	209	911
interprets	61	215	491	174	260
lower-level	76	26	65	257	417
y-range	5	288	284	245	755
D	85	281	419	5	192
bands	22	4	7	438	317
Taking	47	21	275	478	544
init_func	31	40	444	236	444
apart	81	21	392	251	338
gifs	93	61	90	571	54
group.index	53	95	51	572	763
ditto	50	263	224	751	54
rsuffix	49	47	406	363	445
np.polynomial.polynomial.polyfit	60	124	102	324	597
specifiy	94	222	456	771	160
conv2	60	296	375	742	631
specific	47	229	457	91	338
cooler	59	170	427	32	198
allotment	79	144	34	621	884
componentwise	34	100	131	522	694
Efficiently	69	31	100	530	911
Scitools	13	26	63	118	398
Species	48	123	486	339	82
pretty-print	76	48	65	306	31
lexsort_depth	43	265	75	771	921
C-extensions	7	26	63	2	398
numpy.isnan()	6	68	12	130	910
numpy.random.randint()	60	219	444	725	709
meters	39	149	279	766	573
pandas.datetime	43	63	68	426	452
bins	81	214	297	171	603
precautions	12	152	5	552	606
order-of-magnitude	10	202	37	225	990
markers.py	55	132	330	205	372
bbox_extra_artists	46	284	494	757	619
ico	54	50	340	81	277
student's	79	228	487	480	285
.xs	64	47	406	369	48
openGL	93	23	63	97	537
icc	7	163	428	418	166
Scikit-image	38	206	282	21	71
ice	39	126	206	790	949
429	54	3	101	187	158
firstIndex	90	32	13	545	486
sep=	52	10	376	121	971
420	21	223	234	557	252
422	44	3	101	297	158
Machine1	53	123	51	448	821
collaboration	13	23	229	444	264
ict	46	39	73	330	649
fencepost	47	48	301	618	835
core	7	128	330	205	461
ndimage	72	248	7	709	670
who	11	225	143	170	652
pypng	22	248	381	141	722
short-circuiting	76	94	95	18	866
corr	60	270	472	784	830
Project	38	271	259	110	402
limitation	12	152	134	552	120
run-time	76	272	118	552	990
pandas.melt()	43	47	72	683	956
165037	10	202	37	327	876
4-Dec-14	61	49	443	539	260
Argument	63	44	199	582	341
surround	39	117	235	32	102
undocumented	35	152	329	663	720
misleading	12	152	147	252	908
algo	12	183	409	44	138
year_month	48	123	486	276	502
pyresample	22	126	7	709	562
Machines	38	224	282	722	353
primitive	76	94	65	169	730
froze	50	37	114	699	954
matplotlib.colors.LogNorm()	46	36	294	653	488
Terrific	24	109	229	140	870
cid0	74	174	117	149	769
simillar	50	264	292	210	747
00:45	54	69	119	525	256
rely	76	152	416	630	621
categorization	2	229	131	522	603
array1	74	293	361	509	228
1-line	88	257	61	675	695
lags	20	98	48	195	738
purposely	50	264	292	210	747
head	50	232	114	35	64
medium	81	183	258	44	959
Sundays	99	140	450	109	94
polyphonic	20	246	58	428	563
cidx	74	293	251	509	228
heat	39	126	495	199	177
r'C	36	10	136	712	261
hear	11	173	389	419	53
heap	10	127	355	159	450
.bin	71	153	50	726	108
non-Python	7	26	63	516	732
re-ask	18	15	45	472	922
r's	4	17	254	710	441
Interpretation	78	49	338	616	456
trains	81	168	206	705	646
df.mul	44	269	403	65	598
1024,256	44	205	251	196	357
pos=	46	79	117	5	314
neighboring	81	43	266	588	283
np.core.records.fromarrays	3	18	162	266	969
strftime()	61	274	68	426	745
LTS	19	7	432	301	156
obfuscation	12	152	134	145	908
cross-posted	18	225	45	71	509
^t	68	54	257	617	62
nD	34	77	0	73	694
sub-module	15	135	319	777	873
.filter()	43	157	103	683	956
nnz	21	194	356	327	668
n^	10	202	356	327	668
simulations	13	246	48	195	416
idxs	74	293	108	509	146
legend's	5	13	388	134	608
_numpyconfig.h	55	128	293	52	56
ax.hist	46	14	297	171	810
ni	41	205	370	107	192
Begin	38	206	60	252	114
nk	85	143	215	5	37
nl	3	18	141	266	969
nm	21	170	370	751	527
descr	3	18	361	157	178
no	47	0	392	91	908
result.xml	55	298	330	751	568
na	6	68	12	130	910
nb	78	21	456	405	709
nc	75	174	385	690	80
nd	34	77	0	73	694
ne	75	174	117	551	262
ng	36	174	74	551	262
nx	41	205	251	196	397
ny	41	205	251	196	397
nz	44	205	251	196	357
2015-12-31	99	69	119	155	256
n}	75	243	287	730	486
staggering	11	272	118	225	990
np	15	135	319	777	823
nq	74	297	4	509	228
nr	48	233	54	690	923
values=2	48	47	74	551	779
nt	75	205	385	425	486
nu	96	201	426	25	13
EST	99	63	318	109	27
reconsider	12	225	5	419	563
MattDMo	4	225	264	646	371
preceding	78	49	456	355	944
ESD	49	47	486	631	502
scipy.odr	77	124	458	324	438
ax.scatter	46	39	73	282	649
idx1	74	172	108	224	778
bitbucket	35	193	220	292	594
n+	85	194	370	327	192
bullet	88	232	232	257	469
629.5316666666666	54	50	368	331	19
dataframe.to_sql	63	171	473	128	88
n=	75	243	385	0	486
n0	44	205	370	196	357
n1	85	205	442	107	778
n2	85	172	442	107	778
backward	6	85	456	9	376
Contributions	35	26	19	2	114
4999	99	140	453	198	361
dimentional	34	77	0	73	694
iterator	65	233	81	648	311
Title	95	138	159	519	38
equalities	12	42	95	18	563
varying	81	21	233	546	576
ouch	24	200	493	504	991
datetime.today()	99	274	68	72	390
/	55	128	330	477	568
split_at	90	297	13	10	744
M4rtini's	4	17	254	710	441
displaying	59	52	495	51	54
MacBookPro	84	127	2	410	321
Bought	95	181	373	686	517
pandas.hashtable.PyObjectHashTable.get_item	37	250	27	314	802
web.py	13	26	90	609	537
HyperJeff	35	193	19	384	594
NEVER	88	212	55	136	965
reassemble	2	116	145	306	986
town	50	120	114	407	852
FULL	30	212	55	127	560
your_data	90	297	431	509	228
Anything	47	0	392	678	835
scatter_matrix	5	14	383	568	710
sloppy	88	257	114	210	695
four-byte	14	291	85	266	969
temp_date	43	47	75	405	356
partitions	34	116	131	566	986
memoryError	10	37	301	699	954
customer's	79	228	487	480	285
makeReg	27	259	431	234	945
python-pip	67	151	327	232	334
Continuum's	7	151	63	516	850
addressable	84	127	355	159	359
sample_data	55	132	330	477	568
accumulation	76	272	118	573	863
Canonical	24	109	394	444	870
numpy.fromstring	52	27	336	589	448
2082	95	181	368	158	277
peek	57	235	342	450	950
63.51	47	21	392	91	338
group1	48	123	486	197	779
ary	74	195	26	212	273
group2	48	123	148	197	653
reinstalling	67	151	327	232	104
Rec	69	162	191	61	739
Ref	30	162	191	61	114
Reg	48	138	159	339	502
substitute	47	229	392	306	338
spectral	20	93	425	191	344
\pandas\	37	250	27	475	194
ax.set_title	46	226	494	577	348
agrees	60	296	132	235	396
525	54	3	298	187	158
527	21	223	279	766	221
520	37	250	27	187	194
521	37	3	27	187	194
528	54	3	154	318	158
529	54	3	101	297	399
costless	3	188	361	404	581
CUSIP	78	144	195	276	637
n_array	75	227	385	0	486
DOOR	54	50	368	331	19
hairs	59	232	235	51	796
realizations	81	6	206	715	949
GMMs	77	270	472	279	738
1964	99	186	453	372	361
find_nearest	90	6	4	586	228
groups	79	144	131	376	944
DEBUG	40	37	222	699	625
[	90	297	13	10	585
groupy	43	157	103	683	956
toolbar	93	154	104	427	203
GC	29	218	447	570	450
delimited	61	58	452	539	501
thirty	21	190	234	167	326
6502	20	17	382	709	989
rolling_corr()	43	85	103	784	956
non-global	2	229	457	335	338
1965	99	69	119	155	256
delimiter	52	58	28	121	501
Seed	79	271	131	787	944
weird	50	152	301	618	120
lowers	10	160	37	323	655
combs	90	54	257	338	361
gray-scale	22	4	381	438	672
non-default	45	230	448	767	533
matplotlib.finance	35	122	450	762	92
threes	78	100	338	484	456
Bakuriu	4	121	264	646	500
max_open_warning	63	174	117	751	888
1st	78	49	338	616	456
fool	88	59	114	444	469
MarketCap	86	181	42	211	775
smallish	10	272	258	44	863
DataFrame.append()	43	157	72	683	956
16Gb	84	127	355	159	359
scipy.signal.convolve	60	296	382	313	396
ping-matplot.py	55	132	330	477	568
bins=30	41	35	289	176	810
Differences	38	206	169	264	145
msk	74	95	115	239	227
msi	67	151	470	604	732
criteria	78	100	291	355	148
msg	63	44	199	582	136
mse	78	37	266	391	283
mergedmask	74	100	108	586	228
beamDeflection	31	40	444	592	709
Bond	95	181	373	686	517
epipolar	59	117	433	32	177
Calling	2	215	237	174	544
funPos	74	100	14	396	709
Time	48	138	66	789	687
misreading	50	200	490	210	907
%PATH%	67	132	44	499	315
Expression	30	162	191	61	145
Agree	4	200	490	567	81
COLUMNS	30	212	55	136	965
fuction	29	37	444	699	622
a**2	96	29	137	173	598
German	99	268	66	519	221
visualisations	13	23	126	118	765
districts	79	228	206	621	675
dcast	43	296	375	364	631
2000*2000	10	202	258	323	876
unconditional	15	37	222	699	625
corrupted	71	37	301	699	120
garbled	50	37	301	618	120
MSVCP90.dll	37	250	386	475	194
Horner's	60	98	458	652	438
A.sum()	10	202	88	323	581
stroke	59	154	284	134	479
dropped	2	263	456	405	187
_values_	74	100	95	522	734
sub-matrices	34	77	131	88	943
requirements	12	229	134	170	219
TOTD	18	200	493	504	991
eloquent	88	257	61	681	612
ravel()	42	30	396	358	263
7:00	99	253	453	525	762
speaks	18	225	5	419	53
get_color	31	1	388	399	879
kriging	13	26	63	118	398
unbelievable	24	109	229	444	870
irrational	14	86	314	325	549
get_position	31	13	388	558	958
numpy.sinh	15	135	44	777	823
pd.get_option	86	129	117	36	906
MutliIndex	43	265	75	771	356
nsamples	44	205	154	196	357
Powers	34	77	251	88	228
unbelievably	10	160	114	323	876
reposition	5	154	32	427	203
prob	94	222	456	292	160
index-based	76	257	61	675	612
compressing	71	272	355	702	306
scipy.interpolate	72	165	15	235	570
constant-width	5	52	32	19	714
annealing	77	42	48	195	416
glancing	50	263	114	35	371
superscript	61	230	448	767	123
AMD64	19	7	33	590	966
backend-independent	29	154	284	245	203
blocker	13	232	232	257	53
arm	12	43	235	195	769
Cythonizing	76	272	118	169	863
Horn-Schunck	77	42	48	195	416
blocked	29	187	128	764	954
array_a	74	100	108	586	228
rebalancing	30	147	173	347	698
chips	81	126	206	709	765
result_df	48	144	486	787	502
coordinates	39	149	279	766	573
wasting	50	272	114	573	863
pvals	74	195	4	255	262
coordinated	39	6	239	766	573
python.org	67	151	210	351	104
meridian	39	149	438	298	884
parallelizable	76	51	345	445	803
conversations	13	120	393	75	219
Python33	55	132	386	475	194
_columns_	78	204	108	522	995
radon	81	21	266	733	603
TPR	81	214	266	391	603
pandas.set_option	45	243	334	269	413
Python34	55	132	386	384	305
tarballs	67	151	327	499	732
_configtest.c	63	176	164	696	572
equality	14	86	95	18	866
scipy.cluster.hierarchy	13	79	41	400	234
Duplicates	30	162	191	789	739
_configtest.o	55	128	293	52	56
possibilities	47	193	131	630	219
vert=False	46	14	383	505	649
DejaVu	45	230	448	767	909
Updating	69	31	100	530	911
realise	24	200	493	210	747
df.size()	43	157	74	551	779
Duplicated	69	31	100	530	114
df_min	43	265	72	750	356
100M	21	190	234	557	655
100L	44	287	449	48	357
100K	21	190	234	557	42
pylab.hist	75	35	297	171	810
approximates	77	98	132	147	738
preferrable	88	257	61	675	327
set_figwidth	45	203	348	577	430
gaps	81	147	270	546	301
begun	50	120	393	75	564
Iterrows	76	179	169	169	145
approximated	72	270	472	733	738
adequately	57	229	232	306	81
'"'	52	89	376	85	971
ultimately	47	0	392	91	338
100k	21	190	234	557	42
100j	41	6	289	282	397
date_parser	52	185	28	121	793
coincidentally	47	264	292	210	747
np.power	14	29	137	173	598
'")	63	176	460	36	787
someplace	57	239	222	37	451
bin_edges	75	14	297	171	810
cripes	24	200	493	504	991
100x	10	202	37	323	876
100s	21	190	234	557	42
date_string	86	274	68	679	151
END	30	212	55	788	920
theory	12	183	147	630	563
undersand	88	59	5	630	907
clear_output	29	203	348	123	55
isotope	79	228	206	27	541
splev	72	165	15	235	438
ENV	55	132	276	477	568
non-normal	77	214	132	783	4
raster	22	248	381	571	593
100+	21	190	234	557	42
100*	96	29	18	173	13
'"`	86	129	460	172	199
tbdata	74	49	272	714	682
Julian	99	140	66	109	27
Heapy	7	51	345	169	730
impose	12	229	134	630	563
PySide.QtCore	15	135	44	696	823
1004	86	129	117	727	811
1003	54	186	318	372	361
1002	75	223	298	727	811
1001	21	223	298	318	252
1000	21	190	234	557	252
origin	39	149	438	122	979
simplifies	2	215	491	799	621
redhat	55	112	167	499	315
predictive	77	168	186	705	646
4-tuples	22	4	201	438	672
warnings.filterwarnings	45	80	334	85	350
read_fwf()	52	185	28	24	793
client-side	93	246	90	609	537
scipy.fftpack	60	296	102	742	751
awfully	88	257	61	416	695
simplified	57	235	342	450	950
Lisa	95	298	373	102	517
pokemon	48	49	487	27	1
millions	21	190	234	557	42
Griddata	72	165	15	235	71
df.index	64	281	74	72	390
SET	30	212	182	136	965
mutated	74	233	181	212	406
Pythonically	88	94	147	574	606
SEC	71	49	50	60	108
xhtml2pdf	35	122	167	499	732
convention	12	152	147	145	908
Such	47	21	131	678	544
SEM	81	21	392	91	603
circa	21	160	274	323	655
hue	22	4	294	438	672
hub	74	256	239	184	994
million+	21	190	234	557	42
huh	24	200	493	504	991
pyqt5	67	151	167	368	732
pyqt4	93	187	104	368	591
Similary	78	21	338	592	262
Syntactically	47	59	392	630	908
H5py	71	153	446	702	457
Situation	47	174	392	751	262
holder	2	188	328	405	450
intrinsically	76	272	118	169	863
INFO	30	235	274	347	114
Quicker	10	202	61	675	876
Pragmatic	4	193	19	387	114
require	76	229	392	91	621
hyperthreading	84	127	2	410	580
C_i	85	205	370	88	192
lmax	96	219	177	391	201
r	86	174	177	107	66
multithreaded	7	51	345	418	166
created_at	86	274	163	185	151
stdlib's	76	26	65	735	730
truncating	14	263	314	618	260
pre	47	215	392	9	338
file_1.csv	78	49	338	405	944
ang	41	98	177	107	622
ann	77	206	186	742	71
sq_area	68	54	300	338	139
ani	29	203	128	236	444
runtimes	10	202	37	534	783
ant	50	43	235	167	769
firelynx	24	109	394	140	870
whole-array	76	51	118	169	734
any	47	48	392	630	31
rolling_*	60	85	103	784	396
exploratory	13	26	126	203	765
bars.ix	94	222	115	369	227
transcription	13	43	206	195	852
.append()	43	157	72	750	207
xxxxxx	95	181	373	211	858
zorder=1	46	39	73	316	649
zorder=0	46	226	73	316	649
zorder=3	46	35	289	282	810
gmail	35	239	220	390	106
replicas	20	93	425	191	344
np.std()	60	219	403	784	454
falls	81	215	491	174	769
visitors	79	225	487	231	285
GOT	30	212	55	136	965
precludes	2	116	147	91	824
overlooked	24	200	493	504	991
non-blocking	29	187	128	123	55
neuro	79	228	487	621	961
considered	47	0	392	630	187
occurances	79	228	487	27	842
transform()	43	157	103	683	956
itertools.groupby()	42	157	14	313	956
peptides	65	233	54	27	336
QtCore	15	135	319	777	823
ok1	74	293	108	586	228
cbind	43	265	375	364	631
rasterization	22	61	315	99	54
timedata	48	49	456	405	502
recipe	4	193	342	387	950
timedate	43	63	66	198	452
0.48	22	108	23	695	421
0.49	96	266	23	695	421
0.46	96	266	426	695	421
0.47	54	108	23	695	421
scipy-cluster	13	79	90	97	537
dll	15	67	44	215	305
0.42	96	108	23	695	421
0.43	96	266	324	695	421
0.41	54	266	23	8	421
update_line	29	37	222	236	2
Posting	57	235	463	37	451
frame's	2	116	145	405	356
crime	79	228	487	480	675
explicitly	2	0	457	335	621
rootpy	13	26	63	516	398
points^2	31	13	284	245	479
centrally	59	52	32	122	884
narrows	50	232	301	167	781
Crosstab	69	162	191	789	739
absent	78	263	338	405	713
fsolve	60	124	458	279	438
begging	18	170	5	391	955
hist_strm	75	227	54	157	172
crude	88	257	61	450	950
pandas.read_hdf	36	171	446	702	369
ax1.set_xlim	46	284	253	46	339
freaking	24	109	229	444	469
closure	65	40	181	145	195
mapper	71	265	303	341	443
regarding	12	193	134	252	371
floods	21	127	355	167	769
AFTER	29	215	128	335	180
matplotlib.use()	15	80	317	435	591
mapped	22	4	328	438	672
Gamma	85	201	132	560	142
m^2	96	170	356	327	668
^^2	68	201	243	67	69
.67	96	160	274	391	655
reveals	50	215	491	174	59
##	86	129	117	211	262
Colonel	24	121	394	646	500
violated	14	40	458	396	622
innards	12	232	232	257	417
en_US	45	80	448	36	906
#3	30	271	254	281	560
#2	30	17	254	281	560
#1	30	271	254	281	560
#0	30	3	338	338	428
violates	12	94	147	540	908
#5	78	298	335	200	944
#4	30	271	254	281	560
Stefan	24	121	264	646	500
fails	63	37	301	699	888
invoked	15	215	444	236	187
Programmatically	59	52	32	51	479
invokes	29	215	491	174	319
system's	67	132	167	499	315
x_learn	75	227	154	0	357
Tm1	59	52	335	621	884
Tm2	59	52	335	621	884
receivers	81	228	206	766	675
fortran_order	86	181	287	211	624
#s	57	235	342	450	451
Reducing	69	31	100	530	576
subinterval	77	98	458	279	738
auto-scale	5	148	32	245	844
successes	81	214	266	64	176
region	39	117	235	32	586
convert_objects	94	185	418	548	73
sql.py	37	250	475	205	173
propagation	77	98	248	191	258
ax.bar3d()	31	13	383	592	879
authoring	13	26	63	118	398
Ransom	4	121	264	646	500
figsize=None	46	35	73	505	649
color	22	4	294	438	198
a.loc	53	95	115	239	227
Transform	20	93	248	191	989
poly	72	98	177	282	201
sampling	20	93	270	507	162
Note	47	0	392	678	544
pole	39	149	438	69	116
~unutbu	24	109	229	140	870
l_bought	53	139	460	339	787
colom	2	21	233	98	338
poll	29	218	183	149	600
Events	79	271	335	281	2
python3.x	65	27	81	735	311
squaring	60	194	275	431	238
Buy	95	78	159	686	955
swift	24	33	394	140	870
Knew	24	109	229	140	870
But	47	0	392	678	544
DataNitro	71	265	86	60	561
cords	39	6	239	766	573
hardly	12	152	5	44	604
Bug	35	122	220	292	106
index_label	52	185	28	24	793
random_sample	44	219	137	725	484
webpage	40	239	90	769	704
8])	90	54	257	10	585
numpy.linalg.det	60	194	280	704	751
mocking	57	232	232	697	451
python3.4	55	128	52	151	791
python3.5	55	128	52	477	791
python3.2	55	132	330	151	791
python3.3	67	7	432	301	791
Gnuplot.py	7	26	63	697	439
rolling_sum()	14	291	162	325	470
WAV	71	248	58	428	593
myfig.png	36	80	136	712	619
a.A	27	220	361	18	866
paying	12	272	118	419	863
shaft	59	117	284	245	479
serieses	43	265	72	771	356
Divide	69	31	499	530	911
amend	57	229	490	84	81
Python33\lib\	37	250	27	475	194
test_plot.py	57	37	222	450	59
tslib.pyx	37	250	27	314	173
df2=	53	139	51	551	779
.remove()	29	297	388	592	995
Slow	69	179	169	209	145
natgrid	72	165	15	235	570
polycollection	59	117	495	199	177
good	88	59	5	630	264
converts	2	215	491	174	260
Hidden	38	206	282	722	353
pruning	13	42	235	458	394
alphabet	61	58	443	86	1
mode=	36	10	136	712	261
Excuse	18	200	179	739	67
buys	78	144	195	178	955
g.set	5	148	363	46	844
events	79	147	206	149	769
uhm	12	59	392	630	908
Queues	38	218	183	445	803
Idle	40	141	281	76	632
arose	12	152	60	618	120
changing	2	215	457	335	531
vars()	65	220	444	15	406
implements	76	94	65	174	417
np.float_t	3	67	261	146	235
threaded	7	51	345	445	166
modes	47	21	382	729	396
df_merged	48	123	486	448	816
Woah	24	200	493	140	870
termination	40	37	301	764	954
model	77	168	186	705	646
event1	49	287	406	631	445
bin_str	71	153	50	699	942
QMainWindow	93	187	104	537	728
Loading	69	31	100	127	316
coolwarm	22	4	427	438	488
cPython	76	51	345	169	730
guided	4	121	264	646	552
python2.x	65	112	81	735	311
03:40	54	69	119	158	126
Ahhhh	24	109	394	140	870
multiprocessing.Pool	29	218	345	445	803
differentiation	72	42	38	279	809
guides	11	173	372	75	564
announcement	35	193	19	387	594
overlapped	59	52	32	32	884
values()	65	233	158	540	526
Jobs	95	123	159	339	602
math.floor	96	29	18	28	810
except	47	0	392	91	544
achived	60	194	275	799	734
wall	50	120	114	35	64
decompression	71	153	446	702	306
etiquette	18	15	45	527	922
libreoffice	61	58	50	539	501
ufunc	3	220	14	15	235
scheduled	35	122	220	292	147
match_up	48	123	486	339	502
loaned	79	228	373	407	517
touchpad	40	187	128	764	954
AJAX	71	246	90	609	600
predetermined	81	21	131	251	944
JVM	13	26	65	2	730
plt.pyplot.show()	29	203	128	123	55
lat1	85	172	243	67	69
Cramer's	77	42	38	652	809
glitches	59	117	188	709	562
stdint.h	3	67	261	215	957
ADDENDUM	47	235	342	450	371
left-hand	12	111	25	122	979
birthdays	48	281	486	339	779
read_data	60	40	444	236	709
char_id	79	144	173	197	653
UUID	71	49	158	540	336
Revised	30	235	254	347	560
diagonalise	21	190	258	557	863
coords	41	6	438	107	573
Something	47	0	392	424	544
num_dimensions	44	205	251	196	357
min_periods=1	64	85	449	784	817
linewidth=	46	39	73	316	649
non-equal	81	21	284	546	479
2xN	34	77	0	511	112
STORE_FAST	10	160	263	323	655
.jpg	93	61	315	99	593
squeeze()	42	30	286	74	244
Listed	4	17	254	534	783
df.to_records()	73	256	0	73	3
venv_test	55	132	352	113	137
wx.App	29	187	104	236	728
provided	4	235	342	252	371
o-	46	39	73	316	649
literals	61	58	443	539	501
CustomBusinessDay	43	63	68	426	817
2xn	34	77	258	88	943
Largely	24	225	490	567	81
redis	71	171	183	359	457
token	79	218	183	167	769
legal	61	152	147	145	908
f_signal	96	29	177	336	13
provides	13	26	138	118	621
provider	79	78	487	787	955
redid	50	200	292	664	747
quitting	40	141	281	764	954
LinearLocator	5	148	363	558	844
df_training	78	49	456	405	356
pestID	48	123	469	448	814
multi-column	43	265	75	771	356
communicate	71	218	183	609	600
linewidths	31	13	294	134	608
previously-included	55	176	44	696	305
onClick	29	187	128	236	282
Rock	24	109	229	444	870
site.cfg	55	132	352	113	798
embarassing	50	200	114	504	469
rearranging	2	116	145	566	520
oo	59	23	335	751	710
on	47	0	392	91	338
ol	88	257	61	589	439
ok	24	200	493	504	469
demarcation	59	117	29	32	198
oh	24	200	493	504	991
og	86	174	117	751	906
of	47	21	392	91	338
od	2	21	233	174	702
ob	46	287	449	425	262
formatters	5	148	363	558	844
mutually	12	21	147	251	908
df.duplicated()	27	260	418	234	821
cuda	7	51	345	2	166
oy	68	32	289	28	486
ox	75	32	289	28	810
2x1	34	77	251	88	943
2x3	34	77	251	88	943
ot	47	0	392	630	338
2x5	34	77	0	88	943
2x4	34	77	251	88	943
op	34	100	147	18	908
numpy.around	14	86	314	325	549
numpy.allclose()	14	86	142	325	549
dplyr	13	26	375	476	631
wasteful	88	257	61	334	695
communication	71	218	183	445	803
islice	65	27	81	648	311
SymLogNorm	5	13	294	639	825
math.fsum()	14	86	314	325	396
struggle	50	120	212	35	727
speculated	88	17	134	630	908
ommited	47	263	456	618	262
some_list	74	233	54	690	526
sparser	81	214	382	147	4
normalised	81	214	266	171	603
refinements	2	116	233	51	338
strictly	12	21	147	91	908
equates	20	93	95	507	148
Enthought's	19	7	210	516	850
from_date	48	281	148	788	637
detectable	12	152	409	44	604
Letter	48	144	195	276	653
house	79	78	487	101	675
pretty-printing	61	263	452	539	260
start_exon	53	95	51	572	763
753	37	3	298	187	158
.Martinot	24	200	493	504	49
jug	35	57	167	747	732
755	47	170	301	751	252
754	14	86	142	325	549
736	34	205	251	616	456
jun	99	186	318	155	789
snipit	57	235	342	450	950
jus	61	174	452	86	439
upcasts	3	291	162	266	470
jut	47	193	19	678	371
r_hat	85	201	426	560	142
F77	8	232	65	215	852
Assign	69	31	100	530	911
LED	39	126	58	571	949
mortals	11	109	229	444	53
multiplicity	78	100	216	522	283
Whoops	24	200	493	504	991
connect	59	187	429	609	600
strongly	13	152	5	419	53
SuperUser	18	225	45	527	509
cba	53	181	42	11	497
write_frame	52	171	473	128	88
totaling	21	190	50	557	42
Mathematica	13	296	375	364	631
mike	86	174	272	185	199
necessitates	76	272	118	552	863
rvs	60	219	132	725	4
asynchronous	29	218	183	445	803
lightly	57	235	342	450	950
Mathematics	38	224	282	387	689
stumbled	50	264	393	75	564
fuzzywuzzy	43	265	126	706	561
recfromtxt	36	10	336	712	793
Physicist	4	121	264	646	500
Slider	31	154	104	149	282
sub-dataframes	78	100	131	522	36
stumbles	18	225	143	472	652
2013-11-04	95	181	42	250	624
matplotlib.image	22	90	319	141	906
unneeded	2	263	452	618	781
2013-11-07	7	193	19	387	732
hardcoded	47	215	457	91	338
oneself	76	152	5	257	53
Vladimir	4	121	264	646	500
set_zorder	31	1	388	399	879
plt.streamplot	41	6	177	107	397
ICA	13	168	126	705	765
low_y	27	40	444	396	622
dof	96	170	409	391	454
ICD	48	49	74	339	262
self.axes.plot	46	203	348	123	55
flower	95	228	373	168	497
bounded	81	170	231	733	946
observables	81	228	206	195	675
included	57	215	342	450	187
bilateral	20	93	382	709	562
+oo	96	201	18	617	62
ginput()	31	187	383	51	710
invest	13	120	232	35	53
odds	10	214	37	534	176
curve	39	98	231	147	116
Likely	12	152	134	552	120
~80	10	160	37	323	655
Primarily	13	26	63	118	398
small_df	48	123	486	339	637
Theoretically	47	0	392	143	439
df1.mul	64	150	406	631	48
migrated	18	225	45	527	509
EXACTLY	24	212	55	136	965
Noob	13	120	212	35	852
readlines()	52	153	336	589	448
**n	44	201	18	617	62
scalar	34	77	0	73	694
predefine	2	229	457	306	338
**k	96	29	18	173	13
right_index=True	49	47	406	631	445
follow	47	229	342	252	371
_need_	47	0	392	630	908
Minor	4	263	254	145	114
polarity	79	228	487	621	675
numpy.random.shuffle	42	27	286	358	929
1.75	54	266	23	695	421
Corrected	24	200	493	567	991
acting	76	94	147	174	734
OBS	47	0	14	9	621
mktime	15	63	68	426	745
non-date	43	265	456	405	356
program	40	246	429	764	954
Unwanted	69	162	191	209	837
sgemm	60	296	137	704	751
y.astype	27	29	141	28	969
presentation	13	23	126	203	765
fill-in	6	42	409	44	84
bitrate=-1	45	80	334	269	619
**=	27	29	18	173	13
woman	61	274	465	751	151
void*	3	67	261	157	498
data_column	94	222	446	788	160
**3	68	32	18	617	62
**2	96	201	18	173	62
induce	12	86	409	44	84
ISO-8601	61	63	68	426	27
Classes	38	162	191	61	837
worst	10	272	356	327	863
***	63	44	199	582	136
hatching	93	61	433	134	608
date_range()	43	157	72	750	956
bubbles	59	117	433	32	714
NPE	4	121	264	646	500
stats.friedmanchisquare	43	265	444	771	709
plt.fill_between()	31	14	383	592	710
numpy.amin	27	269	289	282	201
undone	18	170	25	122	479
NPY	71	153	50	423	108
k.index	27	297	431	234	945
NPZ	71	153	50	423	108
B^2	96	201	426	560	676
NPV	20	170	409	391	84
datingDataMat	90	54	13	10	744
]])')	68	54	257	713	139
IMHO	88	257	138	334	908
teh	47	239	392	91	835
ten	21	190	234	557	326
EL	84	206	282	697	321
tea	18	225	373	407	852
built-in	76	94	65	735	31
tee	71	153	222	609	942
tex	45	230	448	767	909
rate	20	147	206	507	955
design	12	152	5	257	563
direction=	46	226	494	316	348
tet	74	100	108	586	336
axes.set_aspect	31	13	383	592	906
nonlinear	77	98	38	279	809
.fig	93	61	315	99	374
.fif	71	153	58	423	108
SeriesGroupBy	43	157	460	172	787
ecdf	60	219	132	742	4
deeply	11	173	389	257	867
2014-01-01	99	274	318	155	256
squished	59	52	32	19	714
piechart	59	52	495	51	177
.fit	77	256	186	668	994
memcached	71	119	183	609	377
IQFEED\	86	10	376	475	971
RepNum	64	150	406	551	48
segmentation	40	37	301	699	954
EA	48	123	486	339	779
deserialized	71	291	162	91	260
code's	57	235	342	225	783
2014-01-08	95	69	119	155	428
directions	39	149	438	93	116
up-votes	18	15	45	472	922
every	2	21	275	167	338
PreciAcu	99	298	453	198	687
.drop_duplicates	64	150	406	197	48
scikit's	77	168	186	705	646
misinterpret	47	232	143	424	835
dict.get	65	157	72	540	956
ResponseTime	53	139	42	417	775
options	47	193	457	97	371
Append	69	31	100	530	316
sticking	50	232	232	35	531
Row-wise	69	179	169	574	145
Style	95	271	287	281	114
thankfully	40	57	167	697	732
inrasters	74	174	117	690	262
screens	93	246	233	251	54
np.select	42	27	286	313	244
backslashes	61	58	443	230	501
fft2	60	296	425	336	461
D_Time	48	281	173	197	687
1900	99	182	318	372	94
in_results	44	256	154	668	994
0001-01-01	99	140	453	109	27
Alegreya	45	230	312	767	909
2000L	74	174	239	751	262
ID1s	78	144	195	178	637
converters	52	185	28	121	793
windll.kernel32	7	218	183	609	569
Intel	84	163	2	410	580
tryng	11	116	145	203	907
unworkable	88	152	5	334	604
2000+	79	147	450	101	326
__setitem__()	42	220	14	313	244
re-sort	2	229	456	405	338
Figure.add_subplot()	31	13	388	592	879
text1	61	58	452	137	501
encouragement	24	109	394	567	870
20000	21	190	234	557	42
x.columns	74	233	54	690	526
Inter	2	215	131	91	702
radviz	77	168	495	51	710
text=	46	35	117	751	323
squish	59	117	25	122	714
quantized	81	6	238	391	211
data_file	36	10	489	712	261
Expanding	4	179	254	544	875
equation	77	98	38	279	809
for-loop	10	202	118	750	207
17.1	84	7	184	579	322
pyproj	39	248	214	152	570
WRONG	4	235	342	450	59
11x11	34	77	258	45	943
PyMongo	71	171	303	128	88
crosstabs	43	265	75	706	356
Codes	95	271	159	789	739
embarrassing	24	200	493	504	991
num1	90	54	257	332	995
num2	90	54	54	690	995
num3	90	54	257	617	597
DateRange	43	63	68	426	817
zoom-to-rectangle	93	154	188	427	203
numpy.random.shuffle()	42	94	14	15	890
coerce	94	18	162	548	470
arise	12	152	301	618	120
matplotlib.pyplot.annotate	5	148	32	19	884
N156	54	50	368	158	428
p.loc	94	95	115	369	227
Bonus	47	229	143	306	360
Tufte	12	152	5	419	606
display.max_rows	45	185	334	269	413
breaking	50	232	145	35	781
replotting	29	203	348	123	203
cleansing	13	116	92	203	219
sapply	90	174	375	551	262
2.5GB	21	127	355	159	359
scipy.spatial	72	165	15	152	570
by_tz_os.size()	43	157	72	683	73
passed-in	3	220	361	404	273
Code2	48	123	486	276	82
nump	91	57	330	567	791
firstname	48	123	486	339	502
nums	74	100	216	509	228
emulate	57	229	457	450	950
Pointers	76	94	122	118	734
numy	47	57	392	499	732
trial-and-error	50	120	393	75	564
panel's	5	13	457	245	479
non-root	67	119	167	697	732
disable	45	263	457	335	625
_ndptr	3	220	329	514	235
capitalize	43	49	460	172	787
C-ordered	34	188	396	404	77
Everyone	24	200	394	504	500
footer	61	58	452	539	501
Eq	41	98	438	69	116
unzipping	71	116	470	604	854
.sort_index	64	47	406	197	48
barbs	59	52	495	199	627
specifying	2	215	457	91	531
-man	24	200	493	504	991
pairwise_distances	60	194	472	431	662
matplotlib.pyplot.hexbin	59	13	495	199	627
Arial	45	230	448	767	909
september	35	122	156	292	376
Interesting	24	200	493	504	469
mission	13	232	235	697	53
Supplied	63	44	199	582	341
pseudorandom	14	183	48	725	162
python2.7-dev	67	151	327	232	334
.resample()	43	157	103	683	956
max_features	21	160	419	730	560
concentric	59	117	433	32	177
bcolz	35	122	446	702	457
Structures	69	188	122	61	145
susceptible	12	183	409	44	84
x.strip()	86	150	10	772	838
df2.groupby	64	150	256	197	48
co-ordinate	39	149	438	766	573
regex=True	86	89	163	85	66
matplotlib.text	31	13	388	134	879
im.set_clim	46	284	294	653	810
might	47	0	392	143	439
alter	2	229	457	335	338
ax.transAxes	5	226	30	298	348
build_exe	36	112	276	499	315
z_matrix	74	18	162	514	336
largest	78	100	266	588	283
inch	5	288	284	245	479
outputing	2	116	145	573	531
smoothness	72	165	231	279	102
bigger	10	170	258	44	576
gets	2	215	491	174	769
24GB	84	127	355	159	359
t.shape	96	227	18	336	810
ynd	34	188	361	404	595
256.0	68	266	201	28	62
Environments	38	271	282	519	38
Users\Sam\AppData\Local\Enthought\Canopy\User\lib\	37	250	27	475	889
inequality	60	42	458	279	738
itertools.count()	75	233	54	690	486
12th	99	140	453	109	94
inherent	12	152	134	552	908
difficult	88	257	5	144	695
unsing	38	57	495	98	177
memoryerror	3	188	447	570	450
happends	29	37	301	699	769
formulate	18	225	490	472	360
appName	55	132	330	477	568
Sports	95	228	373	686	517
cancels	78	43	25	122	769
scratching	50	120	114	35	64
1*1	68	201	18	617	62
1*3	85	195	239	5	192
df.to_latex()	86	129	465	137	906
4pm	99	140	453	198	955
Samuel	24	200	490	567	469
fftn	60	296	248	336	461
ref1	79	144	487	276	944
health	13	152	5	284	765
W7	84	7	432	301	321
insort	76	257	356	327	612
concatting	78	222	456	405	356
DTDate	48	281	148	788	653
teach	11	120	212	739	727
Male	95	123	427	611	653
Bloch	31	1	388	199	879
Block	38	162	191	61	837
thrown	63	37	301	618	888
sys.exit()	29	187	128	764	954
product_id	48	123	486	197	82
People	18	225	45	527	219
series.loc	90	297	13	239	744
year's	79	147	450	101	94
area_size	41	288	324	200	421
numpy.resize	42	27	88	404	581
ax.set_yticklabels	46	148	363	46	844
circuit	13	42	48	195	416
throws	63	44	199	582	888
$i	90	112	276	612	128
2599	44	35	154	176	357
linking	7	163	60	697	315
pandastable	15	57	44	289	823
defects	20	170	231	709	562
blank	59	263	452	405	54
$w	95	174	117	185	858
$M	86	274	465	137	151
temperature	81	147	206	766	949
Takagi	60	42	280	431	485
sharedvector	68	32	10	772	838
rails	88	232	232	35	53
data_gen	65	40	444	236	709
Scaling	38	206	282	209	557
i-2	90	195	13	255	577
pd_data	53	139	51	417	775
Newer	91	122	156	9	376
Packages	67	151	470	219	104
$-	61	68	12	130	910
string-type	61	68	162	539	910
Datatype	69	162	191	61	739
$$	85	174	117	751	679
format_coord	31	1	388	399	958
labeled_comprehension	42	27	14	313	244
pandas.tools.plotting	60	296	375	568	710
axes.color_cycle	45	80	448	134	608
horrifically	10	272	118	334	207
PyQt4	93	187	104	368	591
A.reset_index()	64	139	256	417	160
$1	21	127	355	407	955
affiliation	48	123	486	339	199
AllAlexaAndGoogleInfo	94	256	74	548	969
instruction	47	57	429	697	732
texel	39	126	7	733	670
pip.exe	67	112	276	57	128
Num	95	138	66	185	17
by-hand	10	202	118	225	207
Oliver	24	121	264	646	500
gridspec	5	284	255	558	518
file_name	36	10	376	712	261
Foo()	3	220	444	157	444
eigvals	44	194	137	704	598
L-BFGS-B	60	98	458	279	438
hexagonal	59	126	270	733	301
16777216	44	293	4	509	228
_list	65	233	158	540	526
interferes	12	152	60	9	621
empirically	12	183	409	44	783
multiprocessing.Pool()	29	218	183	359	803
succeeding	78	263	456	405	910
added	57	235	342	567	187
warnings	45	37	301	618	625
reckon	50	59	114	630	469
measures	79	270	206	101	675
Indentation	24	109	394	567	991
tupleize_cols=False	36	10	330	751	369
measured	81	147	206	101	949
appear	59	215	392	91	338
value	78	100	266	588	283
]])`	90	54	257	10	585
Form	38	206	282	645	71
Zipline	71	78	303	762	746
Zen	4	94	5	549	890
7.1.2	67	112	167	499	230
Unexpectedly	2	21	328	405	338
convert_dates	52	185	28	24	793
Perfect	24	33	229	140	870
_before_	15	203	319	123	785
.asof	64	150	449	551	48
color=colors_dict	41	35	177	10	397
EDITE	4	174	19	567	114
uniform	81	214	270	733	301
binom	60	296	102	742	957
Chunking	71	272	191	127	959
Recursively	69	31	233	251	911
sub-list	74	233	216	522	336
penalty	10	272	118	552	990
)```	75	231	385	112	486
LaTeX's	93	230	448	97	909
clarifying	24	121	394	567	500
bfgs	77	98	458	279	438
Castro's	4	17	254	710	441
Value	48	138	159	789	698
NetworkX	93	79	41	400	234
axes.linewidth	5	226	30	134	844
treshold	81	170	266	588	283
modifed	4	17	254	710	441
thereabouts	22	248	381	571	722
THIS	30	212	55	136	965
on_release	31	154	388	236	879
Symbolic	38	206	282	108	905
tcl	67	151	174	368	591
x.year	64	150	10	772	838
Networkx	93	79	41	400	234
activity	79	228	206	101	955
sustainable	88	257	61	630	31
vincent	71	23	90	60	537
PHP	40	141	90	609	153
plt.savefig()	29	203	348	123	55
)``)	94	222	314	325	160
df_filtered	27	95	115	239	227
cond1	27	260	431	18	945
Voila	24	109	229	140	870
cond2	27	260	431	234	945
TF-IDF	77	168	186	687	646
-100	96	266	324	397	810
ARIMA	77	168	186	341	443
2.9	91	108	23	579	322
Performance-wise	10	202	37	534	604
precompile	7	57	65	462	31
1,000,000	21	190	234	557	42
Line3D	31	1	388	399	879
2.1	91	108	23	579	322
2.0	96	108	23	695	421
2.7	19	7	417	13	644
2.6	19	7	417	13	644
2.5	96	108	23	579	322
definitely	88	59	232	630	469
crunching	13	272	126	445	765
np.expand_dims	44	227	228	0	263
Cubic	72	165	15	235	905
nailed	24	33	229	140	870
numpy.linalg.matrix_power	60	86	14	742	238
np.str	86	18	141	266	969
pyodbc	71	171	473	128	88
2015-10-29	95	181	373	155	496
orbiting	39	170	235	93	949
3.3.5	19	7	417	13	972
other's	47	218	457	251	338
corruption	71	127	355	159	625
ANd	2	37	50	699	108
bottom-most	78	263	338	122	456
recently	50	264	292	9	747
Outline	81	43	235	588	177
scatterplots	59	14	233	621	710
j+1	74	195	4	255	577
succeed	50	264	393	75	564
conda	67	151	210	351	137
6672	78	49	131	27	944
ANy	11	173	389	763	867
bronze	64	150	256	197	653
AND	30	212	55	136	965
license	7	163	63	516	850
ANN	38	224	282	94	353
2.X	65	291	81	735	311
python3-numpy	67	151	327	232	334
interactive	93	141	281	76	632
ANY	30	229	291	355	965
flier	31	13	388	134	608
duplicity	43	47	75	405	73
reasons	12	152	134	458	606
deviceid	48	123	173	197	653
copy-paste-runnable	57	235	463	37	451
1-CDF	41	174	177	783	597
hadn't	24	264	292	210	747
_should_	47	152	60	261	120
pD	74	195	239	255	577
-array	74	100	216	586	577
matplotlib.pyplot.close()	29	187	375	236	720
pr	36	174	117	751	262
ps	93	61	315	99	872
pp	15	90	246	751	38
user_id	48	123	486	197	637
pw	44	205	251	196	357
pt	30	174	419	751	262
duo	84	127	2	410	375
os.walk	36	153	489	384	854
shared_array	74	40	444	396	406
px	41	90	246	200	211
py	15	135	44	384	823
exp1orer	4	225	490	567	81
due	12	152	60	618	120
succeded	50	246	50	51	54
strategy	12	183	134	203	563
pb	47	59	392	630	469
Difficulty	69	31	100	209	316
pa	90	297	272	332	211
pf	53	174	177	396	100
pg	38	224	282	94	689
pd	15	135	319	777	823
Y.ravel()	44	35	154	176	397
dup	18	225	45	670	81
pk	85	172	419	467	142
brick	13	126	235	195	949
ProgrammingError	63	44	199	582	136
pl	15	135	319	777	823
ARMA	77	168	186	341	443
R's	60	296	375	364	631
np.ma.array	75	227	385	0	969
NaTType	3	63	460	514	787
vaguely	50	59	392	424	120
for-loops	76	51	118	169	207
intercept_	77	168	186	705	646
libpng15	67	132	167	664	315
p2	41	172	481	243	808
p3	41	172	481	243	808
p0	41	124	177	396	201
p1	41	172	481	107	808
Zmax	41	6	438	200	397
p4	41	172	481	243	808
p5	46	39	73	316	649
ahah	24	200	493	504	991
RESULTS	30	212	55	136	965
multi-subsets	85	43	370	730	192
Approximation	77	206	132	722	71
SNPs	79	228	487	480	675
input_items	29	187	128	236	2
tweaking	88	23	457	306	394
set_over	31	4	294	653	271
intercepts	5	170	32	245	479
nd-arrays	34	77	0	73	694
bespoke	88	17	5	458	950
theres	88	59	232	630	31
cummax()	42	269	103	784	244
unitary	60	194	280	431	485
5210	63	174	19	751	888
daterange	99	147	450	198	817
a.ctypes.data	3	291	141	266	969
x**2+y**2	27	293	4	509	945
nx.draw_network	31	79	41	592	234
neurons	81	246	206	745	949
boxsum	4	17	382	147	989
list-of-dicts	88	272	118	334	863
matplotlib.dates.DateFormatter	86	274	465	679	151
cset	41	39	73	282	397
matrix-matrix	7	194	137	431	751
sliver	59	228	433	32	198
tst.py	37	250	27	475	194
arrives	29	246	128	167	412
x87	14	291	142	608	44
x86	84	163	152	241	850
-PhilipGehrcke	24	200	493	504	991
Cov	85	194	472	704	475
scipy.optimize.nnls	60	296	102	313	485
IND	48	204	486	339	502
linalg.cholesky	44	194	280	704	598
time-stamp	78	147	450	198	221
arrived	50	264	393	170	564
Shelve	71	153	446	702	984
nplots	44	227	385	0	357
robust	88	257	61	675	612
2.22044605e-16	14	86	314	325	482
434	37	3	101	187	158
Con	85	195	216	7	192
Examining	47	59	392	699	59
lower	81	170	25	122	979
prop.get_family()	68	32	257	545	744
STK_ID	48	123	486	606	255
bounces	40	187	429	764	954
anybody	11	173	143	763	652
file.read()	86	129	136	137	906
4MB	21	190	355	159	359
numpy.all()	60	193	19	313	371
Examples	30	193	19	387	114
device_id	64	150	449	197	653
dport	48	123	486	339	757
INC	54	50	300	338	139
library_dirs	55	128	52	636	56
client_secrets.json	55	132	330	477	568
abilities	13	120	126	118	765
Components	38	206	282	110	38
precedence	14	111	95	18	272
codereview	18	225	45	527	509
competitive	10	202	37	534	876
np.zeros()	42	188	88	404	581
inactive	79	228	487	167	769
memory_map	52	185	334	269	793
autojit	7	51	428	15	915
ORDER	48	212	182	343	965
Files	37	176	386	110	305
k3	85	172	481	467	778
loading	71	153	50	423	108
gemv	60	194	137	80	598
k2	85	172	107	224	778
grey_image_as_array	34	293	108	586	336
maxlags	60	98	458	396	201
exclusively	2	21	147	91	908
Iris-virginica	95	123	272	339	682
plateau	20	170	231	709	116
Filed	35	193	19	281	114
Initialize	69	31	100	530	911
python2	65	112	81	735	311
gemm	60	194	137	80	751
myBigArray	74	293	26	586	228
expirations	78	204	66	198	687
marker's	5	117	284	245	479
Definitely	88	200	493	504	469
num2date	31	63	68	426	745
integer	14	291	162	325	470
BSs	79	147	299	197	653
:[[	90	54	287	730	585
File2	61	49	158	27	854
File1	78	49	131	27	944
SQLalchemy	71	171	473	128	88
SQL-like	43	265	75	574	356
show_leaf_counts	45	37	334	269	625
0.999	96	29	18	28	13
0.998	77	124	132	783	738
collections.OrderedDict	65	27	158	540	526
C-Contiguous	34	188	361	404	273
output.json	36	153	50	423	108
stings	61	58	452	539	501
alignments	59	117	25	122	714
province	79	73	487	322	586
numpy.random.choice	42	27	81	725	244
understood	47	59	490	210	907
Udacity	4	225	372	527	219
3.5	91	108	23	579	322
logical_and	42	27	95	18	866
3.3	19	7	417	13	644
3.0	91	108	23	579	322
Typing	40	112	276	57	128
np.int64_t	3	67	261	312	235
Email	48	123	159	787	502
3.8	21	108	23	579	399
3.9	54	108	23	579	399
gradually	59	170	433	573	576
t_i	41	6	370	107	142
"""`	86	174	117	185	66
waveform	20	93	425	428	344
datapoint	81	140	338	198	456
tends	88	152	5	625	604
hosts	79	271	487	609	682
fragments	57	263	235	618	625
Atm	88	109	229	334	469
numpy.squeeze	42	30	286	313	244
MyMplCanvas	31	1	348	236	444
Customers	79	144	159	787	502
rolling_max	43	85	103	784	956
df.sortlevel	64	150	406	551	48
y_range	41	6	177	592	397
3.x	91	122	81	735	311
fastpath	43	220	329	514	720
standalone	40	187	429	537	537
N.sum	68	32	154	545	486
Won't	47	0	456	143	835
t_2	41	205	370	196	778
PTVS	40	141	417	241	644
t_0	41	201	426	560	142
t_1	41	6	370	200	778
pandas.apply	43	157	72	15	956
3.X	7	57	65	735	730
cygwin	67	151	210	351	104
Simon	4	121	264	646	500
skiprows=1	52	185	376	121	971
exhaustively	76	183	118	169	783
1.2.1	91	7	417	587	230
isomorphic	34	21	131	522	944
statment	45	37	222	699	262
Kivy	93	119	90	537	537
Msg	63	176	397	582	136
OPEN	53	139	51	448	821
sparse.hstack	3	291	141	266	969
shmarray	76	218	183	359	803
conceivably	76	272	118	169	783
fast	10	272	118	169	612
vendors	13	26	63	516	285
Every	47	21	392	167	702
we're	12	59	147	144	908
Evert	24	121	264	646	500
conceivable	76	26	65	169	280
mundane	88	257	61	675	695
Proj4	38	26	65	118	730
time-stamps	81	21	131	546	356
id=1	99	140	453	198	361
groupwise	79	144	173	276	356
$DISPLAY	40	119	281	76	377
Y=1	78	288	29	69	884
Y=0	39	149	29	69	116
vector-valued	60	98	458	324	438
infers	3	215	162	528	260
deployed	84	119	429	664	377
groupings	79	228	173	376	356
sns.regplot	59	52	383	51	518
platforms	7	26	63	241	850
numpy.swapaxes	42	30	286	74	368
Loan	38	224	282	722	689
type-checking	76	94	65	169	235
46.29821447	54	50	368	331	449
participants	79	228	195	27	1
Consistent	69	162	191	281	837
segregated	94	188	122	404	694
superclass	3	220	329	663	720
Pity	88	59	5	419	908
associated	2	21	233	487	702
0012	54	181	287	338	361
rainfall	79	147	450	101	717
.reshape	75	227	228	0	46
associates	2	215	328	98	702
multi-parent	78	43	41	400	234
grp	64	150	256	197	48
A12	79	147	450	101	675
employment	99	140	453	198	687
multipliers	77	42	38	279	809
gre	53	139	51	448	821
weight2	81	214	132	783	4
weight1	81	214	132	783	162
income	79	228	487	480	285
Mises	72	23	372	147	4
expand=True	64	89	163	340	448
NE	95	129	117	21	898
FITPACK	72	165	15	235	438
-200	96	266	324	397	421
pd.offsets.Day	68	32	431	234	997
join_axes	49	47	72	631	445
9216	34	77	85	45	943
8:10	54	3	101	187	158
numpy.pxd	37	250	475	205	173
suffers	10	202	37	44	120
Sequence	69	162	191	61	837
__numpy_ufunc__	4	193	19	387	371
gr8	94	222	229	292	160
Ali_m	24	109	229	140	870
declination	39	149	438	298	573
weights	81	214	132	783	162
plt.tight_layout	46	284	253	757	339
ViTables	71	171	446	128	457
Vectorize	69	179	169	264	145
new_values	48	281	74	551	779
.This	36	174	117	185	262
ggplot2	13	23	375	364	710
numpy.random.seed	15	219	444	725	484
stop=stop	86	89	163	157	314
issues	50	152	60	552	120
reinsert	6	116	456	276	559
disposal	13	26	126	118	959
stably	10	127	355	573	863
Joint	38	206	282	722	71
2darray	69	77	0	73	694
Joins	69	162	191	789	739
stable	35	122	156	587	376
non-parallel	76	51	65	169	730
Glumpy	13	120	114	35	727
anti-aliasing	22	117	7	709	318
scattered	72	165	270	733	301
numpy.genfromtxt()	52	185	336	121	793
business_id	48	123	486	339	779
readout	10	188	328	404	450
Python-compatible	3	94	261	514	235
reinterpret	3	291	162	404	470
electron	39	126	206	93	949
.save()	31	157	444	514	709
bounding	59	117	284	245	479
rad	96	266	425	391	13
Enjoy	24	109	229	444	870
redistribute	7	163	63	516	850
combine_first	43	47	72	683	73
Mozilla	95	271	259	686	38
event.artist	31	1	388	399	879
.bashrc	55	132	352	113	798
week's	99	140	453	109	94
congrats	24	234	229	444	870
semi-log	59	52	495	639	710
Xiu	85	194	472	5	598
CODE	30	212	55	136	965
Stats	38	138	159	519	698
Forward-fill	78	144	173	789	739
notnull()	6	157	72	700	956
folds	77	168	186	705	162
memset	42	220	88	404	581
self.f	29	176	117	236	314
self.z	74	195	4	586	228
State	95	138	159	519	653
self.y	41	40	177	396	622
.py	40	132	352	384	305
Stata	71	153	86	638	561
self.r	3	220	361	514	235
leave-one-out	77	168	186	705	646
ctor	43	157	72	24	956
math.sqrt()	11	48	389	763	867
pandasic	88	257	61	675	327
blobs	39	126	7	709	670
_can_	47	0	392	91	908
screenshots	57	239	463	37	451
self.A	44	205	46	196	709
lexicographic	34	116	337	708	640
self.X	27	260	431	282	201
matpotlib	93	61	495	51	54
dblquad	60	98	458	396	622
mwaskom	4	121	264	646	500
Poor	76	272	5	552	990
Impressive	24	109	229	444	870
data-frame	43	265	75	771	356
Light	30	271	259	281	38
ndimage.gaussian_filter	27	269	246	509	486
pushing	50	232	232	573	531
slated	35	122	156	292	376
desired	57	235	342	450	451
SciKits	7	26	63	2	398
roc_curve	41	256	177	705	994
separation	81	21	134	251	606
left_index=True	49	47	406	631	445
sexy	88	109	229	444	264
rolling_sum	43	85	103	784	956
tetrahedra	39	43	235	733	102
df.convert_objects	94	185	418	548	131
Ops	24	200	493	504	991
Speedup	69	179	169	530	145
mkl-cp27-none-win_amd64.whl	67	112	276	57	128
spines	5	148	32	19	518
arr.shape	75	227	228	0	357
platform-specific	7	163	63	516	850
reds	22	4	427	438	198
superuser	67	119	210	351	786
~150	21	160	234	557	655
struct_id	48	123	486	197	653
integrations	38	42	38	279	809
Treat	2	215	456	355	260
summation	34	86	275	566	734
1.0001	96	266	18	28	421
redo	76	232	232	306	394
)`	75	227	385	0	486
Hue	22	4	427	438	672
use	47	229	457	306	439
fee	88	225	5	458	606
usc	74	260	291	355	750
usb	84	246	58	609	600
&	27	260	431	234	272
Hum	47	200	493	504	469
Huh	24	200	493	504	991
multi-indexes	94	265	75	706	133
few	50	264	393	35	326
depicted	59	52	233	32	59
ust	61	174	457	306	975
usr	55	128	52	151	372
attribute	63	1	460	172	787
b*x	96	201	426	560	13
.bar	46	14	383	592	430
sort	2	116	337	708	640
fno-strict-aliasing	55	128	293	52	56
numpy.fft.fft	20	93	425	336	344
whant	47	0	392	424	835
LABEL	90	95	115	239	995
sory	24	200	493	504	991
fieldnames	74	95	115	514	227
to_datetime()	43	279	68	426	745
14.04	19	7	432	301	156
ax.xaxis.set_ticks	46	148	363	46	810
augment	47	229	392	630	360
weighting	77	214	382	783	4
ram	84	127	355	159	359
cv2.VideoCapture	36	90	246	141	942
analogous	76	296	375	364	631
wxmpl	93	187	104	537	728
df.rating	53	139	42	417	775
line_profiler	10	277	37	225	169
mask=	27	260	431	28	945
20x100	34	77	251	88	943
proprietary	71	239	63	443	639
_wrong_	88	152	5	419	695
calculation	76	272	275	169	738
mask1	74	297	4	509	228
Weekdays	53	139	51	72	779
mask3	90	297	431	234	945
mask2	90	297	4	509	228
A.sum	68	227	228	0	357
something	47	48	392	424	835
unevaluated	60	98	38	279	809
\Release\	55	250	386	475	194
united	12	48	131	630	563
LuaJIT	7	51	65	2	730
decaying	20	98	132	553	4
minlength	42	27	14	15	244
permission	67	119	352	696	786
ERI	78	204	218	178	522
640x480	22	90	16	45	593
4a-2b	96	201	426	560	62
LSOA11CD	53	95	115	239	227
sharelink	71	239	463	443	639
64-Bit	84	57	432	241	321
liblapack3	67	163	327	418	334
pyopencl	7	51	65	2	730
masks	42	100	95	18	694
pyopencv	67	57	167	499	732
distances	81	270	472	588	662
3700	21	49	234	522	252
3704	37	250	27	314	802
OCHR	53	123	42	250	82
tiles	39	126	279	571	586
chr1	78	204	373	198	221
distutils.core	15	135	319	777	823
chi-squared	77	214	132	783	4
print()	65	277	81	735	975
mean_squared_error	63	256	199	184	994
filename.txt	36	10	376	712	261
Subtracting	69	31	100	530	911
converging	77	170	231	279	84
self.mpl_connect	95	181	42	250	624
saturated	22	4	409	438	562
DataFrame.hist	31	13	383	592	879
ouput	57	235	342	450	451
%%	86	129	465	137	347
call-back	29	187	128	149	282
ax.get_yticks()	75	297	289	46	810
numpy.__init__	15	135	319	777	823
PromoInterval	53	281	51	448	821
%=	27	29	18	173	62
looks	47	59	342	424	59
new_col	64	150	51	551	779
%1	63	176	397	696	136
read_excel	52	185	86	638	561
%2	53	260	51	234	821
multi-dimensional	34	77	0	73	694
Shell	40	141	281	76	632
inexistent	63	94	199	355	625
ships	67	151	167	351	732
synology	40	57	167	697	315
my_func()	10	202	274	323	876
estimating	77	214	132	783	162
permanent	88	232	457	335	180
inspecting	2	215	60	573	531
orange	59	117	427	32	198
multithreading	7	51	345	445	166
defining	2	116	457	91	531
1.8.1rc1	91	7	417	587	230
Queens	78	43	266	168	944
%m	86	274	465	679	151
%l	86	129	465	36	906
%i	86	129	465	137	347
contention	10	272	118	44	959
step-size	77	170	458	279	576
richness	13	26	126	118	990
%e	61	58	465	137	347
%d	86	274	465	679	151
Wouldn't	47	0	392	143	835
%f	86	274	465	137	347
indexing	42	111	147	369	368
%b	86	274	465	679	151
%}	86	129	136	150	858
%y	86	274	465	679	151
satellites	39	126	279	766	982
%p	86	274	465	679	151
%s	86	129	465	137	347
%r	86	129	465	211	347
Thanks~	11	173	389	763	835
%I	86	274	465	679	151
%H	86	274	465	679	151
contourplots	72	165	15	733	301
Pro	84	7	2	410	580
unpredictably	12	152	301	618	84
%B	86	274	465	679	151
unpredictable	12	152	147	618	84
0-50	41	288	335	200	884
%Y	86	274	465	679	151
%U	99	274	68	679	151
ndims	44	205	251	196	357
erratic	12	59	301	618	120
%S	86	274	465	679	151
Weekly	38	138	66	789	698
studios	7	163	152	241	850
df_group	64	123	74	551	779
rho0	85	205	177	396	201
Geddes	47	21	392	91	338
f2py.py	55	132	386	215	305
Which	47	0	392	678	544
xlrd	71	153	86	638	561
-pipe	55	128	293	52	56
t_data.csv	48	144	195	787	502
2.35	54	108	101	297	399
5*5	34	205	251	88	943
integrates	13	26	63	118	398
y=10	39	288	29	69	116
nearest-neighbour	72	165	15	152	570
performs	10	202	491	174	734
pycogent	40	57	429	697	321
integrated	13	26	63	118	398
rewrote	57	235	342	450	81
This	47	0	392	678	544
missunderstood	57	200	490	424	81
Ghz	84	108	2	410	580
promptly	84	57	167	764	954
plt.subplot2grid	46	284	255	577	430
intersperse	59	117	433	185	517
CallGuid	53	139	376	682	971
phrases	61	49	195	27	1
blogpost	4	193	372	387	509
astropy	71	248	214	423	722
built-ins	76	94	138	169	734
2014-12-03	99	69	119	158	256
ft2font.so	55	132	330	477	372
phrased	18	225	490	170	81
l_val	78	144	216	276	118
region.Quradate	53	260	431	234	821
-500	41	288	324	200	252
proposing	35	59	220	630	907
righ	59	52	25	32	177
Increased	10	160	355	44	576
MASK	53	212	55	136	965
A.transpose()	74	293	4	5	272
between_time	43	85	72	771	817
quadratic	77	98	38	279	809
MASS	60	296	375	364	631
Tier	61	49	456	405	260
STILL	94	222	147	369	160
coordinate-system	39	149	438	93	573
printout	57	217	342	450	950
transistor	39	126	48	93	949
G.epsilon	74	100	4	509	228
datastack	78	49	338	98	108
slides	59	224	372	387	704
slider	59	154	188	427	203
np.ndarray	3	220	329	146	235
renumber	78	100	337	522	944
random.seed()	15	219	14	725	709
==>	30	271	419	281	38
boring	88	152	147	145	695
gages	53	281	469	448	814
np.insert	42	30	286	74	263
ouptut	47	174	74	699	888
patients	79	228	487	480	675
automates	76	48	118	169	621
python3-dev	67	151	327	232	334
np.savez_compressed	36	153	336	712	306
self.axes	5	284	255	577	430
factorizations	60	194	102	431	485
Folder	30	271	259	281	38
Anaconda\lib\	37	250	27	314	889
intersecting	39	117	235	32	177
positive-definite	60	194	280	431	485
log-scaled	59	52	32	19	884
series.values	75	233	74	551	526
c=c	68	32	13	617	486
.agg()	43	157	103	683	956
polarization	78	49	239	487	949
quotechar	52	58	28	539	501
lapack's	60	296	102	431	751
vegetation	39	126	7	709	670
dpi=80	46	226	136	316	619
Pysparse	7	292	64	348	164
keepdims=True	44	30	403	65	598
harmful	12	152	5	419	908
output_summary	78	233	195	522	944
Dietrich's	4	17	254	710	441
quick'n	88	17	61	458	950
return_type	31	157	444	15	709
Ship	53	281	51	250	779
discourage	88	135	5	419	53
GENE	78	144	195	787	637
refreshing	29	187	128	764	840
ete2	71	79	41	97	439
.000	86	274	465	679	151
.001	96	266	324	695	421
looked	50	264	393	75	564
site-packages	37	250	475	151	173
diagnostics	57	37	342	618	625
automated	88	48	457	306	31
ccdf	96	214	132	147	4
Coordinates	39	162	279	209	837
G.remove_nodes_from	44	35	54	157	314
quesiton	4	235	254	567	81
Document	38	271	282	519	38
QStackedWidget	29	154	104	236	728
q1	85	172	426	67	190
q3	48	204	486	339	190
q2	85	172	481	224	190
6000	21	223	234	557	252
Author	30	271	282	519	38
occures	21	37	301	699	888
Failure	63	176	397	499	136
datarow	74	204	54	332	995
RowID	48	123	486	197	653
logspaced	81	288	270	546	714
broadcastable	34	30	251	73	694
easy_install-2.7	55	112	276	57	334
THX	24	109	229	444	870
heta	61	58	443	137	501
MacHD	55	128	52	477	372
THE	30	212	55	136	965
lossless	22	248	381	571	593
reset_index	43	47	75	683	73
Rd	95	181	277	686	340
n_cols	44	227	228	0	357
qr	60	296	102	431	751
arithmetics	14	86	142	325	549
qt	93	187	104	368	591
ctypes.py_object	45	35	117	157	314
x.startswith	64	150	10	772	838
optimally	76	272	118	169	959
categorised	61	18	162	514	260
qf	41	39	177	396	100
qi	96	160	274	543	876
THe	47	193	392	678	371
600k	21	190	234	557	42
qn	4	225	394	567	81
re-indexed	2	47	328	405	356
np.divide	27	29	137	173	598
fantastically	24	109	229	140	870
Unity	38	26	63	2	730
int16_t	3	67	261	312	498
left=True	44	194	280	5	201
Units	95	138	335	19	884
0hr	53	139	42	417	775
sort-of	88	59	147	145	908
arrowstyle	31	13	30	134	608
arguably	88	257	61	334	612
platform.architecture()	84	174	184	103	630
command=	46	35	444	236	323
below	57	235	342	450	950
raise_on_error=True	27	35	334	1	172
func()	60	40	444	396	543
math.sin	27	29	137	173	13
6-byte	3	18	162	266	119
FTSE	95	181	373	429	428
weighing	20	214	132	666	162
0.13.x	91	7	156	587	230
DICOM	71	248	214	60	108
EFT	86	281	117	185	262
convertion	71	63	162	426	260
hypothesis	77	183	132	783	162
idenRows	44	293	228	509	146
_do_	47	0	143	697	53
probing	76	183	345	697	604
columns=	64	287	406	631	294
non-contiguous	34	188	361	404	694
commands	40	141	429	76	632
numpy.longdouble	14	291	142	608	549
Confused	11	109	389	567	469
coloumn	78	49	338	616	456
Unlikely	10	170	409	391	612
DBAPI	71	171	473	128	88
mutating	65	220	181	212	923
0,000	99	140	324	198	221
narrower	59	117	284	245	714
packaging	67	151	210	351	104
subscribe	18	225	45	170	219
Flattening	69	31	169	530	694
t+1	85	195	481	255	778
table	71	265	303	60	356
narrowed	50	264	301	799	487
make_df	43	40	444	15	709
provinces	39	73	279	322	586
encapsulate	76	229	181	257	417
Jun	99	186	33	34	789
e_data	27	259	54	385	526
scipy.sparse.hstack	42	292	64	489	595
tutor	13	246	126	203	765
literal	61	58	443	688	341
transformer	77	168	186	341	646
-999	6	68	201	85	910
activate()	47	40	14	15	709
ikl	85	143	215	5	37
determinant	14	194	280	431	485
Welch's	20	93	382	206	989
logchoose	96	29	18	173	62
sufficient	47	229	392	91	338
np.bincount	42	27	349	358	833
Appreciate	11	173	389	763	867
17sec	95	181	368	90	428
FRED	79	78	450	762	746
hmm	24	200	493	504	991
Unexpected	69	31	199	582	316
BETWEEN	78	21	25	546	884
y_predict	77	270	472	783	738
off-by-one	14	152	314	618	84
Force	69	31	237	530	911
unscaled	77	270	472	783	738
align	59	52	25	546	884
np.min()	27	29	356	28	486
mgilson's	4	17	254	710	441
depreciation	12	152	301	618	120
'))	86	287	256	250	997
Contour	69	162	495	209	837
.cumsum	68	32	154	545	62
apply_async	29	218	444	236	803
usefulness-useful	86	181	42	211	199
webpages	71	153	303	60	92
__import__	65	174	14	145	439
layed	2	215	328	98	177
avi	71	153	50	423	942
dual	84	127	2	410	580
snuck	50	200	490	567	81
ave	43	157	375	364	631
matplotlib.mlab.specgram	60	13	382	742	396
avg	79	147	173	467	459
dictonary	2	49	131	522	944
radiation	20	147	173	48	459
cross	77	43	235	705	738
member	2	220	329	514	720
fast2	76	30	88	169	581
non-NumPy	76	94	181	145	195
Superimpose	59	52	495	209	177
arrowstyle=	46	226	30	316	348
100,000	21	190	234	557	42
2-byte	14	291	85	608	44
ndarray.shape	44	293	228	509	146
definately	24	200	493	567	469
cursor.execute	36	171	182	343	88
beast	76	94	147	145	908
npymath	55	128	293	205	461
pandas.pyc	15	132	352	384	305
namedtuples	65	233	158	540	890
repsonse	6	37	456	405	59
1955	99	186	318	372	361
.pyc	15	132	352	384	305
.pyd	7	163	152	215	305
.pyf	15	135	65	215	957
incredible	13	109	229	444	264
Pierre	4	121	264	646	500
fighting	50	120	114	35	64
States	95	73	279	322	586
.pyw	40	57	429	384	942
Welch	10	160	274	323	162
.pyx	15	132	428	215	915
fromarrays	3	220	0	404	890
mpld3	93	23	90	51	537
emtpy	6	68	456	130	910
v0.12.0	91	122	156	587	376
beginnings	50	264	342	450	950
df.isnull()	27	260	431	234	945
2.22044605e-16j	68	54	257	713	776
rapid	13	26	126	458	765
amd64	84	7	432	241	644
ax.twiny()	5	148	363	558	518
type1cm.sty	40	176	44	384	136
R*	96	201	426	560	62
self.event_num	46	35	348	577	430
intersected	78	43	131	355	944
nickd	37	250	27	475	194
pubsub	13	23	126	51	537
np.uint8	3	291	141	266	969
ensuing	78	100	456	366	283
who's	13	120	212	739	852
np.ones	75	227	228	0	484
Below	57	235	342	450	950
T	85	174	419	5	192
presume	47	0	392	210	835
mannwhitneyu	81	270	173	621	459
Editted	18	225	490	567	81
helpful	11	173	389	763	264
Encoding	38	162	282	110	353
loses	2	116	491	335	621
sci-kit	77	168	186	705	646
Skip	69	31	100	530	911
conclusion	12	264	490	630	81
drop()	43	157	72	683	73
QVBoxLayout	31	1	104	537	728
Section	38	162	191	281	114
unsuccessful	50	264	393	75	564
Inplace	2	188	147	566	520
`"""`	61	58	452	230	501
growth	79	78	450	101	955
succinctness	76	272	118	169	990
set_data	31	203	388	399	627
Formally	85	270	472	783	738
autoincrement	43	222	456	405	73
markers	59	52	433	32	608
instantaneous	10	202	37	323	876
SOMETHING	45	230	222	269	906
,.....,	90	54	257	332	585
np.isclose	27	269	95	18	866
300000	21	190	234	557	42
x-limits	5	284	253	558	339
obey	2	215	147	91	621
Algorithm	38	206	325	722	353
22.5	54	266	324	397	421
analysed	79	228	487	519	959
0.99.3	19	7	417	301	230
7GB	21	127	355	159	359
Extrapolation	13	23	495	199	177
analyses	13	246	126	203	765
analyser	20	246	58	428	949
response_time	48	281	486	339	502
raise	63	44	199	582	888
marker=	46	39	73	316	649
colume	78	49	66	198	687
extension	7	51	65	215	730
Manually	2	116	237	335	531
column	78	49	456	405	356
color_cycle	31	1	388	399	879
columm	43	265	72	771	356
colums	78	49	195	405	944
KDE	72	214	132	147	4
autopct	5	230	32	19	222
own	47	229	457	306	439
vectorisation	76	272	118	225	990
owe	24	33	229	444	870
lenght	81	21	233	251	336
__builtin__	15	135	319	777	823
Writing	69	31	100	530	316
fundraiser	79	228	487	787	285
outdata	3	297	361	212	273
champ	24	109	229	444	870
outdate	99	140	318	109	687
negate	42	27	95	18	272
collumns	34	49	131	98	986
consecutively	78	49	131	522	944
keystroke	79	246	206	167	769
unpackbits	42	27	14	313	244
postal	81	43	266	27	944
appy	43	265	75	771	356
apps	40	119	63	697	377
Anywhere	47	21	392	251	835
debian	67	151	432	351	156
continental	39	73	279	322	586
intention	12	59	490	170	908
filesize	21	127	355	159	359
0.125	96	266	324	695	421
recurrent	77	42	48	195	809
Condition	30	138	66	789	698
-Abhi	47	21	392	91	338
triggered	29	215	60	707	187
Science	13	224	372	94	509
yeah	24	200	493	504	991
TeX	93	230	448	767	909
Silly	24	200	493	140	991
liquor	79	140	453	198	713
0.123	90	54	257	332	421
coupling	76	94	181	257	195
matplot	93	52	495	51	710
Symmetric	38	206	191	722	71
rankdata	42	27	349	358	640
rigamarole	10	272	118	225	863
WIN	78	204	419	178	361
this-	50	59	114	424	469
Tex	93	230	448	767	909
record	2	49	131	522	336
demonstrate	57	235	463	450	766
-->	30	174	117	751	790
Simulating	38	98	48	195	416
arr.real	10	29	46	336	876
combinations_with_replacement	74	233	54	509	526
---	30	0	392	678	544
np.char	76	94	329	589	448
Plot()	29	187	128	764	954
20*20	81	126	266	45	943
Data1	57	265	233	424	356
Data2	81	52	233	621	675
x-scale	5	288	32	19	884
python3-matplotlib	67	151	327	232	334
MouseEvent	29	187	188	149	282
subfigures	59	52	32	19	518
MplGrapher	29	1	104	236	728
monitors	59	154	206	427	796
Enlargement	43	162	191	771	739
other	47	21	233	251	338
Five	95	138	159	339	682
ilustrate	12	43	235	630	738
percents	61	270	409	86	260
1.7.2	91	122	156	587	230
contacting	35	122	220	292	594
Desc	48	144	195	787	502
Rotate	69	31	100	209	911
inherently	12	152	147	552	908
dominoes	81	43	131	251	714
preform	47	48	126	203	612
MATLAB	60	296	375	364	631
Panda's	43	265	72	771	356
result.columns	53	139	74	551	199
LOCAL	35	239	222	384	120
upwards	81	170	25	122	723
matrix_col	74	233	54	690	336
math.cos	65	40	14	15	622
|S3	86	18	141	266	178
pdata	15	135	181	777	406
intentionally	12	59	392	311	908
1.7.x	35	122	156	9	376
pythonX.X	55	132	352	477	568
dtype=uint	54	54	257	797	158
256L	44	205	154	30	357
SPy	13	57	63	75	398
how=sum	64	287	449	48	997
HDF5	71	153	446	702	457
biopython	67	151	470	604	104
data.x	74	174	74	157	228
advices	11	173	389	763	867
Does	47	0	143	143	652
preface	18	120	179	739	67
.COM	95	181	373	455	340
Until	50	232	232	678	544
Subplot	31	1	104	209	728
increase	10	170	409	44	576
exclusive	78	21	131	251	702
Norwegian	61	58	443	539	209
imagesc()	22	248	381	571	627
calendars	99	63	68	426	817
quadruple	14	86	314	325	549
size=10000	10	243	46	323	655
iteritems()	65	233	81	750	311
\numpy\	37	250	27	475	194
navigating	13	116	126	203	92
honking	88	225	5	145	264
hough	39	126	7	93	670
SP1	84	101	8	241	522
SP2	48	101	8	178	522
oceans	39	117	279	322	586
45.6	90	223	289	200	810
executemany	65	171	473	128	88
yellow	59	117	427	32	198
bins=	75	243	297	171	810
pd.DataFrame.from_records	64	47	74	551	526
classifications	77	168	218	705	162
retreive	74	49	145	522	986
HDFS	71	153	303	423	457
disturb	47	59	147	567	469
basics	13	120	372	387	727
Less	88	257	61	334	604
commenter	4	121	254	252	552
PRIMARY	48	144	182	787	502
2015-12-15	99	281	486	155	687
pd.apply	43	157	72	750	956
row_name	74	95	115	339	227
X-forwarding	40	119	429	607	377
Paul	4	121	264	646	500
commented	4	37	222	252	59
99999	6	68	201	130	910
SDKs	55	128	293	52	799
specially	47	0	392	91	604
p_i	41	6	177	107	808
bisplev	63	37	199	699	888
LINEST	77	124	458	324	738
.CSV	71	153	50	60	108
&c	55	268	330	751	568
pyglet	93	248	381	571	722
Uninstalled	67	151	167	664	334
2005-05-30	78	100	419	522	192
TA-Lib	71	57	0	9	888
drawables	31	40	444	236	444
conda's	67	151	167	664	732
MLE	77	124	132	553	4
marching	72	248	7	152	102
groupid	64	123	486	197	653
cull	81	43	409	44	576
Eigenvalue	77	206	102	431	905
ax1.plot()	15	40	444	236	622
&=	27	260	431	18	866
atoms	74	43	239	400	234
set_xy	31	1	388	399	879
fun	88	120	5	444	264
QCoreApplication	29	187	128	764	954
shape_pt_sequence	90	204	257	332	995
&&	27	260	431	21	773
npy_intp	3	67	261	146	498
p_1	96	201	18	617	62
cyclical	81	170	409	167	769
verify_integrity	45	200	334	269	908
elaborate	11	225	143	144	451
advantages	76	272	134	552	990
curve-fitting	77	98	458	279	809
criticism	18	225	45	472	265
Incorrect	69	31	237	209	120
geography	79	228	206	480	675
Three	69	162	191	251	837
replace	6	68	456	355	910
3D-plot	59	52	495	51	177
Z-axis	59	52	32	199	177
Py_BEGIN_ALLOW_THREADS	7	51	65	2	730
derivatives	60	98	458	279	809
subimage	39	126	7	45	670
Logins	53	260	51	448	821
DROP	71	265	303	405	561
plt.annotate()	31	13	388	592	879
cruft	76	152	181	257	195
pandas.DataFrame.describe()	6	68	12	130	910
Compressed	34	292	64	348	218
strike	48	123	486	467	821
scipy.interp1d	72	165	15	235	438
Recent	35	122	138	9	376
non-pandas	88	257	61	675	950
females	79	228	218	168	675
standardized	77	270	472	783	617
skimage.transform.rescale	72	36	15	235	627
Rule	38	179	169	722	145
adj_close	90	297	257	332	744
Reproduce	38	206	495	209	71
reversible	12	214	275	355	603
inwards	59	288	25	122	884
recommand	7	26	63	697	398
jme	4	121	264	646	500
gnomonic	39	149	438	93	573
down-sampled	20	93	425	709	562
quartic	60	98	38	279	809
pursue	12	59	5	630	53
Imports	30	271	259	281	560
LMT	94	63	68	426	452
significantly	10	202	37	323	876
df.append()	43	111	72	212	73
reword	18	225	490	472	81
shelve	71	153	122	702	306
rework	11	232	232	144	360
xth	78	144	266	616	456
LME	50	73	160	75	564
august	99	140	453	109	94
a.data	3	220	361	138	273
ax.set_axis_off()	46	203	348	46	430
df1.values	64	227	406	551	48
type=	86	129	117	211	858
currency	48	281	486	339	812
A_sorted	78	100	216	616	456
caution	12	152	134	458	908
out_array	3	67	261	146	235
type1	95	228	335	168	497
Easier	18	225	45	527	509
type3	95	228	335	168	497
type2	95	228	335	168	497
graphlab	43	265	375	364	31
unmasked	6	100	12	53	283
Docstring	43	162	19	347	114
feature	35	168	220	9	106
kernal	20	214	382	147	4
cv2.pyd	55	132	386	384	305
.callback	3	40	444	157	172
PASTE	30	212	55	136	965
tarray	74	293	108	586	577
how={	64	287	449	48	48
abstraction	76	26	138	257	417
utilise	76	94	122	203	612
interp2D	60	296	14	313	709
typed	3	67	261	146	957
Roughly	47	0	131	678	544
argA	74	293	216	586	228
minimizes	77	124	472	324	738
minimizer	60	124	458	461	438
types	3	94	162	514	470
nodata	6	68	7	438	670
Bananas	95	204	373	168	361
classmethod	3	220	329	514	172
continuos	81	229	457	306	603
fictional	57	235	342	450	950
514	54	223	298	318	158
timers	29	218	128	236	444
517	54	3	101	797	158
NotImplementedError	63	44	199	582	579
516	54	223	298	751	252
arounds	50	120	393	75	564
length-N	34	77	0	73	694
texbin	55	132	352	477	568
blind	11	120	114	739	67
Piecewise	38	179	169	722	71
sub-frame	29	116	128	335	180
drawdown	81	147	173	588	955
delx	77	124	177	324	738
Reindexing	63	44	199	582	183
cumsum	42	85	103	784	244
Machin	4	121	254	710	81
-2^31	14	266	46	325	482
uuid	64	150	256	197	653
initializations	2	215	328	251	187
Cartopy	31	23	495	199	627
.svg	93	61	315	99	374
seasonal_decompose	63	44	199	582	888
ax.set_xlim	46	284	253	46	339
__repr__()	3	94	142	735	235
Barbey	24	121	490	646	500
scipy.spatial.distance.squareform	60	292	472	348	662
pandas.date_range	99	274	449	48	817
slate	40	232	429	335	180
-axis	5	288	32	19	884
interrupt	40	187	128	764	954
IronPython	7	163	152	2	850
mimicking	13	23	375	364	631
-Abrams	24	200	490	504	991
use_index=False	5	148	383	592	844
m's	81	21	275	391	603
Picarro	99	147	453	198	221
inpaint	72	165	15	235	910
Millions	69	162	191	61	837
rU	36	10	136	712	261
Dense	38	206	280	722	485
series	81	147	450	771	356
r_	42	30	26	74	368
long-running	29	218	183	359	959
xr	41	6	438	107	397
rF	60	219	177	467	201
substantially	10	272	118	44	990
Ohhh	24	200	493	504	469
message	63	44	199	582	888
rt	95	181	373	185	517
rv	77	219	132	783	162
rp	85	195	177	255	983
threadsafe	29	218	183	359	803
rr	77	195	177	255	597
rs	74	233	74	690	923
eigsh	60	194	102	431	751
mathplotlib	59	23	495	51	537
Haha	24	200	493	504	991
ry	41	6	99	107	211
rz	96	201	99	560	62
rd	53	123	51	448	821
re	47	0	392	589	439
rf	85	219	177	396	201
rg	95	298	419	751	497
ra	41	6	177	107	397
rb	36	10	136	712	261
rc	45	80	448	269	909
rm	55	112	352	57	685
rn	85	172	177	224	983
ro	46	39	73	316	649
Super	24	109	229	444	264
ri	96	195	177	617	597
scalings	81	170	275	191	738
rk	42	40	444	236	622
foundation	13	26	63	118	398
Word	93	230	315	769	374
Extension	67	151	470	219	104
serie2	48	100	108	178	637
Plotter	29	1	128	236	444
Work	38	271	259	281	402
cmap.set_bad	22	4	294	653	488
linetype	41	39	335	32	649
Pythagoras	39	270	472	733	662
date_col	53	139	51	682	199
enormous	10	272	118	573	863
r0	85	172	481	224	778
exposing	13	220	65	312	720
r2	85	172	481	224	778
r3	74	172	481	224	778
r=	96	266	289	695	421
Separate	69	162	191	789	837
Chan	95	181	373	185	517
recursed	12	94	131	355	890
linalg.eigh	60	296	14	313	709
.gif	93	61	495	571	54
shipped	91	151	167	351	230
speedy	76	109	229	334	264
tempting	76	220	329	334	804
arccos	96	29	314	173	13
r-	46	39	73	316	649
allocators	10	127	355	159	359
speeds	10	202	37	225	876
r+	36	10	136	712	261
Duh	24	200	493	504	991
data.astype	3	291	141	266	969
xA	85	194	280	5	192
XeTeX	93	230	448	767	909
Duo	84	127	2	410	580
Due	12	152	134	552	544
channels	22	4	381	438	672
sparse_matrix	44	292	64	348	218
figimage	22	13	284	245	203
clarity	57	235	342	458	81
one-level	2	105	145	566	531
basestring	65	233	10	772	172
basketball	13	228	206	480	852
APIs	13	26	138	118	398
smallarr	74	297	26	212	273
higher-dimensional	34	94	0	73	694
Catalan	14	86	46	325	238
perturbations	39	183	231	44	84
df.reindex_axis	64	47	406	551	48
hypothetical	57	235	342	450	950
P873	54	50	368	331	19
delimiter=None	86	58	376	85	906
MKL_NUM_THREADS	7	119	345	445	803
fontext	68	32	257	545	744
channel1	41	223	324	200	252
matplotlib.plot	31	14	383	568	710
defaulted	50	215	292	210	260
_the	18	15	45	472	922
crawl	36	218	489	551	854
np.array_equal	27	260	431	18	866
showed	57	235	292	210	59
elegant	88	257	61	675	327
approximations	72	98	231	279	84
tree	71	79	41	152	234
rusty	88	120	212	35	727
penalization	77	98	458	279	738
project	13	26	126	697	765
Frequency	69	162	191	789	837
slicers	43	111	75	369	921
skimmed	50	200	493	504	991
python34	67	132	470	604	791
arrrays	69	116	145	706	986
treeview	29	154	188	427	203
dot-product	60	194	137	431	598
205.53069608827314596	90	297	385	10	995
test_out	78	49	337	405	944
one-pass	10	202	61	327	612
DEGREE	34	77	0	753	336
runner	79	144	195	787	637
libfreetype6	67	112	276	499	315
2MB	21	127	355	159	359
ANSI	61	58	443	539	330
classification_report	57	235	342	450	709
runned	47	264	292	699	59
first-order	77	98	38	279	809
recommender	38	168	282	722	353
scipy.spatial.distance.pdist	72	270	472	152	662
argmax()	42	27	103	750	244
16:53	54	50	300	158	126
six.py	15	132	44	384	305
Acceptable	78	204	324	391	421
2014-12-27	99	200	324	504	762
2014-12-22	99	104	453	109	955
recommended	88	193	19	252	31
indicators	79	147	450	101	675
instructs	71	215	50	384	942
amusing	88	257	61	675	31
doors	78	43	235	167	769
test_index	90	297	115	239	227
Ask	18	225	45	527	509
event_date	99	281	453	198	687
grips	11	120	212	35	727
math.pi	96	29	18	173	13
Jones	95	298	282	102	741
b3	85	172	481	224	778
sudoers	40	132	352	384	315
wells	71	153	50	423	108
Seaborn's	31	14	383	568	710
y	41	6	177	107	397
Coord	3	220	329	514	336
revising	18	225	5	170	81
dummy	57	235	456	341	443
jupyter	40	141	281	76	632
matplotlib.mlab.PCA	77	168	186	705	3
gridline	59	52	32	398	884
axis3d.py	55	132	475	205	173
v1.8.1	91	202	37	587	230
.convert	22	90	246	141	488
textscan	60	296	375	742	631
spend	11	120	232	35	64
|b1	68	201	18	560	62
3-column	71	265	303	60	356
AIRS	39	126	206	322	949
connect()	29	40	444	236	282
-sized	34	77	251	88	581
came	50	264	292	413	564
incorporate	2	229	457	306	360
copy-pasting	57	235	222	450	975
__str__	3	220	329	663	3
IO-bound	76	272	118	225	863
rotation=30	46	148	363	46	348
Alchemy	71	171	473	128	88
participate	35	229	220	252	371
pd.Series.sum	42	269	403	65	244
lessons	79	228	487	480	852
sliceable	65	220	158	540	890
layout	2	188	284	245	621
11111	54	181	287	429	428
output_file	36	10	489	712	906
numpy.cumsum()	60	27	14	313	439
numpy.linspace	75	243	81	725	484
png	93	61	315	99	374
tzinfo	99	63	68	426	452
0.7.4.1	91	7	417	13	230
Chartdict	65	48	74	551	526
15:15	99	69	119	525	256
Nevertheless	47	0	392	678	544
foremost	13	26	126	203	765
subvectors	34	77	131	522	694
2015-01-09	99	204	453	198	687
data.groupby	64	88	256	197	48
2015-01-05	78	144	195	178	637
2015-01-02	99	281	453	155	687
2015-01-01	99	253	119	155	256
Conversions	99	63	68	426	452
2013-06-01	99	140	453	155	687
dipping	39	149	279	93	573
arclength	72	98	248	279	71
sandwich	74	100	95	396	866
mercator	39	149	279	298	586
SymPy	60	98	38	279	809
isreal	27	233	14	509	228
Imputer	6	68	12	341	443
new_val	48	281	74	339	262
kludgy	88	257	61	334	695
padj	53	181	42	250	624
Grouped	69	162	191	209	837
pads	34	263	491	566	520
settable	31	220	329	514	720
cloning	35	283	220	573	381
pd.qcut	64	150	256	551	26
npArray	27	297	10	489	486
resigned	50	120	114	35	727
indexable	65	233	158	540	890
kludge	88	257	61	334	695
_Article	48	18	272	682	199
vmin=0	46	36	294	653	488
PyRun_SimpleString	15	135	319	289	434
rings	39	117	7	709	586
4hr	81	147	270	101	576
propagates	6	265	456	618	769
pressures	41	6	270	766	301
book's	57	235	342	567	114
Wednesdays	99	140	453	109	817
data.table	43	265	375	364	631
propagated	2	215	328	618	187
boundry	22	126	7	571	177
lmfit	77	124	458	324	438
right-clicking	40	141	281	76	632
25041	78	204	148	178	522
Budget	95	138	159	168	497
benchmarked	10	202	37	534	783
reconstitute	2	229	131	91	694
debt	81	78	206	101	765
pad=	46	226	494	757	348
pandas.parser.CParserError	63	11	296	582	25
logit	77	168	186	705	443
numpty	24	109	394	444	469
inplace=False	64	47	334	1	73
Understood	24	109	229	140	870
store.get_storer	94	222	74	293	160
time.sleep()	29	187	128	123	55
logic	12	59	147	144	734
login	79	119	429	609	377
argue	88	59	5	630	908
Trond	11	109	229	140	870
numpy.transpose	42	30	396	375	263
improvment	24	109	493	504	469
waaay	24	109	229	444	469
trickiest	88	257	134	799	781
csvstat	10	272	118	699	863
Sorry	18	200	493	504	991
iterable	65	233	158	540	890
Blocks	38	271	282	519	38
dicom	71	248	214	571	722
Mac's	40	57	429	697	321
upside-down	59	52	433	32	714
output.png	45	129	136	36	906
libblas	7	163	152	418	166
privilege	18	15	45	472	786
__doc__	31	220	329	514	720
dots	59	117	433	32	198
graphical	93	23	90	537	537
recomend	47	232	232	306	439
Tokyo	21	223	234	127	252
my_series	6	68	12	130	910
worker	29	218	183	445	803
re-open	29	15	128	764	364
light-weight	76	51	65	169	730
worked	24	264	292	140	870
misson	53	75	42	417	775
contemplated	88	152	134	630	908
-loops	42	27	88	169	207
solvable	88	42	38	799	495
NMF	77	168	102	705	646
euclidean	77	270	472	152	662
betas	77	168	186	783	738
pandas's	43	265	138	771	956
%in%	60	296	375	364	631
ridiculously	88	59	61	334	604
spleval	72	165	15	235	570
PolyCollection	31	1	388	399	271
toolkit	93	23	104	537	537
elicit	18	225	45	472	81
upscale	72	165	7	709	562
to_html()	43	157	86	24	561
violin	59	14	383	568	710
MultiIndices	43	265	145	771	356
shift	81	170	275	122	603
Riemann	81	214	275	191	603
damaged	40	37	222	384	315
p.get_height()	68	266	289	695	421
severity	81	228	206	400	675
Python	38	57	65	735	730
tslib.c	37	250	27	314	802
GUIs	93	26	104	537	537
RadioButtons	29	187	188	149	2
Numbers.app	61	58	443	539	501
Cells	69	162	191	789	837
european	61	153	50	60	221
thereof	76	94	329	514	720
pC	95	214	335	168	459
tz=	99	274	119	679	997
np.ndindex	42	27	81	648	311
INT_MAX	14	243	46	325	549
fslice	90	297	4	509	228
symmetrical	81	194	280	88	485
i'm	50	120	114	739	469
simulates	76	246	48	195	416
Logical	69	111	169	574	145
maximizing	60	98	458	279	438
cancellation	14	86	314	325	84
simulated	81	126	48	195	416
quantitative	12	183	409	783	84
-sc	24	121	394	646	991
DRY	88	257	61	334	612
Thank	24	33	229	667	870
sleeps	29	218	128	764	954
THAT	30	212	55	136	965
Subsequent	76	188	147	573	393
Destination	79	83	183	519	959
rotated	39	149	438	298	884
numpy.__version__	91	112	184	103	630
numpy.finfo	14	291	142	325	308
Thanx	24	33	229	667	870
rotates	39	149	438	298	573
yvals	41	6	177	107	397
Thans	24	109	229	444	870
previous	4	17	254	170	81
atomh33ls	24	121	394	646	500
Gigabytes	21	127	355	159	359
new_dict	74	233	54	690	526
old-fashioned	88	257	61	675	439
Basis	72	206	15	722	71
disparity	34	21	258	45	943
Surely	47	48	392	678	835
innocent	57	235	342	450	120
major_formatter	5	148	363	558	844
bnd	20	93	425	336	344
elevation	39	73	279	766	573
quirk	88	152	147	618	120
textwrap	5	58	452	539	501
allowance	78	100	266	391	283
2007-11-22	54	69	119	158	126
desire	57	229	457	306	975
specif	6	63	456	355	452
ax2.set_ylim	75	174	289	751	486
matplotlib.animate	93	23	495	199	627
obj.attr	3	220	361	514	273
TVOL_SCALE	53	139	42	417	775
str.split()	65	157	158	589	448
unelegant	88	257	61	675	695
zero-rank	3	220	361	404	235
library's	76	135	65	735	730
Unstack	69	162	191	789	739
g_l	96	201	18	173	62
+100	96	266	324	200	810
g_h	3	220	261	15	235
re-install	67	151	327	232	104
o.head()	90	297	115	239	227
creep	20	170	231	44	84
uniq	74	233	54	690	526
GCC-PHAT	20	270	472	191	738
1000.0	96	29	18	173	647
subclass	3	220	329	663	720
polluted	12	152	181	257	195
contributing	13	225	372	419	219
exposition	18	225	490	419	81
pollutes	15	135	181	777	195
NMatrix	35	122	220	292	594
Appears	35	122	60	210	376
__ne__	3	220	329	663	866
Primer's	4	17	254	710	441
substitutes	61	68	456	355	260
scipy.ndimage.filters	60	296	382	313	396
a.argsort()	27	297	26	509	146
g_1	96	297	18	617	945
substituted	6	68	328	355	187
defensive	88	152	5	257	53
losing	2	116	145	573	531
'))"	86	129	485	193	325
Amber	4	174	117	751	262
AVX	7	51	428	418	166
MPL	93	122	104	537	54
numpy.std	60	219	472	784	396
MPI	7	51	345	445	803
nogil=True	10	202	274	323	876
xVals	75	243	289	425	810
Use	47	0	237	174	9
x.copy()	42	220	361	212	273
facility	13	26	126	118	398
statsmodel	77	57	126	341	443
som	11	73	214	203	564
sol	44	195	4	617	228
well-suited	13	26	138	118	398
son	85	195	408	432	807
respectable	10	160	37	323	655
sequence_np	90	297	4	586	995
raises	63	44	199	582	888
wrap	76	232	65	306	417
''])`	86	18	272	211	199
abstractions	13	26	65	118	730
support	35	26	138	9	621
constantly	2	272	118	573	531
resulted	50	264	292	210	59
on-line	13	193	372	387	371
launching	40	141	281	76	632
.strftime	86	274	465	679	151
rotation=	46	226	494	316	348
higherZ	74	195	4	586	577
oneliner	88	257	61	675	31
non-nan	6	100	456	588	910
re-import	15	218	183	777	180
24hr	95	123	335	168	497
figsize=	46	35	348	577	430
handily	76	188	88	404	581
ndarray.flatten()	42	27	0	73	694
inside	2	215	392	91	338
docs.append	68	174	117	751	486
devices	79	246	206	285	600
start_date	48	281	486	788	920
enumerate()	65	233	81	750	526
float_format	52	185	28	24	793
151	78	3	298	318	158
150	21	223	234	557	252
153	54	3	298	318	158
152	54	3	298	318	158
155	54	3	298	318	158
154	54	3	101	187	158
157	54	3	298	187	158
156	37	3	101	187	158
Josh's	4	17	254	710	441
158	54	3	298	318	158
filename.png	93	61	315	99	619
textbook	77	42	372	94	905
get_q6	94	222	74	293	160
''	86	129	117	211	199
15%	10	202	37	323	176
'"	63	44	460	614	787
15+	21	190	234	557	326
')	86	129	42	36	199
scipy.optimize.brentq	60	296	14	742	709
0:12	90	54	324	200	252
Maya	84	26	63	697	321
Kasra	4	121	254	710	441
Trace	30	271	342	281	560
pre-made	13	248	63	97	732
Cgd	44	194	280	5	598
ourselves	57	232	463	144	451
Possibly	47	0	392	678	907
jenkins	40	141	429	76	632
0:16	90	95	115	239	227
superfluous	88	263	452	618	695
15s	10	160	274	323	655
ncols	44	205	228	0	357
models	77	168	186	705	646
15x	10	202	37	323	876
15}	86	181	287	730	199
'`	86	129	465	575	906
cleaver	88	48	61	630	31
15k	21	190	234	557	42
15m	99	147	453	198	687
99	54	223	298	318	158
98	54	3	298	318	158
unittests	7	51	65	215	915
']	53	139	51	417	775
Charles	4	121	264	646	500
Reduce	69	31	100	530	911
135x90	39	6	438	766	573
Filters	38	206	282	61	765
newarr	42	30	361	404	694
indexing=	46	143	215	316	37
beamer	59	52	284	245	54
15L	68	205	154	30	357
breadth	12	43	235	44	612
*Xs	85	172	177	333	512
Euler's	77	98	38	652	809
incurred	76	188	118	169	990
activated	40	141	429	76	137
integration	77	98	458	279	809
activates	40	187	429	764	954
hole	39	117	235	93	116
writer.save()	29	37	222	699	625
millisecond	99	147	68	198	27
92	54	3	298	356	158
keystrokes	88	257	61	334	612
yrange	41	288	297	171	810
stk_price	53	281	486	788	779
94	54	3	298	318	158
recurrence	60	42	38	279	809
x08	86	129	117	211	66
96	21	223	298	318	252
Simplex	77	42	38	722	905
Everytime	2	215	328	335	180
programmatically	2	229	457	306	338
Zone	95	181	159	168	497
.set_major_formatter	46	35	363	46	348
re.sub()	65	233	14	589	448
86400	99	140	453	198	27
Declare	2	40	181	396	406
all-zero	6	68	131	88	910
Wes	4	121	372	94	552
Rank	48	138	159	276	653
tick-label	5	230	32	767	909
-value	81	6	266	391	283
settle	47	229	232	630	338
speculation	10	202	5	419	53
Simpler	88	257	61	675	612
pd.rolling_max	53	139	256	417	775
succint	88	257	61	675	327
2090	54	50	368	158	277
siga	3	67	54	15	172
occurrence	78	144	216	522	944
sigh	18	200	493	504	991
Wet	48	123	486	178	637
log_lower	48	144	238	502	629
sign	14	86	314	86	238
on_pick	29	187	128	149	282
anaconda	67	151	210	351	137
sincos	60	296	458	742	396
zorders	59	117	433	32	714
))])	75	32	385	545	486
melt	43	47	75	683	73
2098	54	50	368	158	277
lazily	65	188	158	359	733
i-loop	29	218	128	764	954
mergesort	42	27	349	708	640
Equality	69	162	191	61	866
understanding	12	59	212	144	907
SyntaxError	63	44	199	582	341
Sharing	69	31	237	546	837
libblas.so.3gf	55	128	330	477	372
HHm-HHs	96	201	18	68	62
pandas.rolling_apply	43	157	103	784	956
rolling_min	43	85	103	784	956
frame.index	94	222	95	355	160
example's	81	21	258	450	950
))]`	75	32	431	234	945
~100000	21	190	234	557	42
transition	81	43	48	195	61
brilliant	24	33	229	140	264
Latin-1	61	58	443	539	209
ineffective	88	272	61	334	612
BLOB	71	171	303	423	457
jterrace	4	17	254	710	441
pandas.core.common.PandasError	63	44	199	24	787
dataMag	90	54	4	586	577
DOK	76	292	64	348	218
tasks	13	26	126	445	765
DOM	61	94	65	257	417
one-liner	88	257	61	675	612
Py_intptr_t	3	67	261	146	235
signifcant	10	272	118	44	863
overarching	11	152	143	144	120
logically	47	100	95	355	866
fake	57	235	463	450	766
IPython	40	141	281	76	632
DOS	40	141	281	764	632
flagging	18	225	45	170	81
tuple-unpacking	65	233	158	15	709
DOW	99	140	453	198	687
ifftn	20	93	382	191	344
.flatten()	42	227	286	489	146
moviepy	13	248	214	571	537
angry	18	225	232	170	53
paramdata	53	123	74	339	199
Xestime	44	256	54	196	994
scope	29	40	181	777	406
theoretical	12	183	409	44	738
Default	69	162	237	281	837
v1.5.0	91	122	156	587	230
ignorant	18	120	212	419	53
data.plot()	31	14	383	592	710
8min	95	181	368	90	428
labels=	45	13	383	592	906
matplotlb	59	52	495	51	177
x.reshape	44	227	228	0	263
Nasdaq	95	144	337	787	502
from_records	43	157	72	24	793
Sage	13	26	63	516	537
Extrapolate	69	31	191	789	739
Series.plot	31	14	383	568	710
numpy.dot()	60	296	137	431	751
use-case	12	183	134	458	604
x.name	90	95	115	239	779
Tentative	4	193	372	387	114
awesome	24	109	229	444	264
MacOSX	93	80	315	435	591
maplotlib	93	23	495	51	54
239	54	50	101	297	428
allowed	47	215	392	91	907
234	54	181	101	338	497
235	54	3	298	187	158
236	54	3	298	318	158
237	54	3	298	318	811
stole	4	121	490	567	552
231	37	3	298	187	158
232	78	223	298	318	252
233	54	3	101	318	158
zoomed-in	57	235	284	245	950
monitoring	71	246	206	609	959
0,400	41	288	289	200	810
ImageData	31	1	457	514	720
numpy.loadtxt()	52	153	336	423	306
s3	71	239	50	390	108
s2	85	172	481	224	211
x_axis	59	288	32	19	884
s0	74	6	177	107	211
-0600	54	69	119	158	789
s*	86	89	163	299	66
Goertzel	20	93	382	191	989
img_b	78	115	131	522	283
optimal	12	183	61	327	612
ylab	46	226	494	592	348
sY	78	77	239	88	283
sX	34	77	239	88	283
s_	42	30	26	74	368
protobuf	71	153	122	540	457
tedious	88	257	61	334	695
indention	57	235	490	37	451
str.split	52	89	163	589	448
rmax	96	201	426	560	13
client's	71	246	50	609	92
python_scripts	15	135	44	384	823
improving	11	225	389	225	990
revealed	50	193	393	387	564
sy	41	205	251	107	192
sx	41	205	370	107	192
natural	88	257	61	675	612
correlate	81	21	275	191	396
1e-05	14	266	31	1	236
ss	74	174	117	751	262
sr	96	266	289	751	810
1e-08	14	266	31	1	236
sp	15	135	319	777	823
sw	55	128	52	477	568
sv	44	205	251	5	554
su	67	112	276	57	128
st	85	174	51	467	407
subselection	78	49	338	405	356
opinionated	13	225	45	527	219
si	47	174	117	751	262
sh	55	112	276	57	128
so	47	0	392	91	338
sn	85	205	370	196	192
sm	75	195	4	255	192
cmap.to_rgba	46	39	383	592	649
sc	46	35	444	577	314
sa	44	205	361	157	357
misplaced	50	263	452	230	298
sf	96	214	132	783	4
se	12	59	392	252	908
sd	96	214	132	783	459
GridSpec	5	284	255	577	518
innocuous	2	152	301	618	625
coodinates	41	6	266	733	573
liblapack.so.3gf	55	132	330	418	372
flips	2	30	25	566	520
thread-local	3	220	447	312	235
damage	50	232	5	419	31
experiments	13	183	206	203	765
DataFrame()	89	157	72	771	956
counterclockwise	39	149	438	298	116
omitting	2	263	456	561	531
closing_price	6	68	12	130	910
tendency	81	170	409	44	176
Additionaly	47	77	392	509	228
constituted	78	49	456	355	702
avid	13	120	212	697	852
overhaul	35	122	138	292	376
scipy.sparse.csr.csr_matrix	34	292	64	348	218
interp1	72	165	458	742	438
np.genfromtxt	52	185	376	121	971
interp3	72	165	177	282	397
torn	50	232	114	35	781
nontrivial	12	42	409	44	563
suspicion	12	59	60	799	81
constitutes	81	21	266	487	702
nympy	50	57	292	75	59
isnan()	42	27	95	18	866
left=None	46	35	289	176	810
renaming	43	116	75	405	531
chaining	88	111	147	369	272
thereby	2	263	275	618	621
ApplicationWindow	29	187	104	236	728
SampleMeta	48	123	486	197	653
exon	74	95	148	572	763
30th	99	140	453	109	94
exog	77	256	123	256	443
shoudl	18	232	490	170	81
Amro's	4	17	254	710	441
Hexbin	38	206	382	709	71
interpolant	72	165	15	324	438
suffixed	61	49	456	405	502
RHS	94	111	95	212	734
establishing	39	43	235	93	949
acttemphi	90	54	257	332	744
interpn	72	165	15	235	570
cropping	22	117	7	709	562
actualDateTime	53	139	42	682	390
suffixes	49	47	406	363	445
bifurcation	77	98	231	400	102
arbitrariness	88	272	409	44	606
right=False	46	266	289	46	810
*v	96	201	18	28	62
dropna	6	85	418	700	73
GraphViz	93	23	63	97	537
Learned	24	234	229	444	870
np.absolute	68	32	18	617	62
neighbourhood	81	43	266	588	283
squary	57	37	328	405	187
np.astype	42	27	14	15	244
Added	4	235	254	567	81
mssql+	36	171	473	343	369
minimums	81	170	266	588	283
squared	77	270	472	783	738
astray	11	225	232	419	53
downhill	77	98	458	279	438
investigation	50	264	393	35	564
0.634	14	29	18	173	945
losers	79	147	173	101	955
squares	77	98	132	783	738
unifying	13	26	126	118	398
FUNCTION	30	212	55	136	965
recalculating	10	194	275	327	95
ctrl+c	29	187	128	764	954
ctrl+k	59	154	188	427	2
Smooth	38	206	495	209	71
overheads	10	272	118	225	863
reshuffle	34	100	216	522	283
yearID	48	123	486	197	82
np.column_stack	42	30	286	74	595
Either	47	0	392	678	544
bumpy	47	57	167	504	469
game_id	78	144	148	178	637
add_subplot()	31	203	388	399	518
recod	53	139	272	417	199
COL4	48	123	486	339	779
COL2	48	123	486	178	637
COL3	78	144	148	178	637
COL1	48	123	148	178	637
18:15	99	69	119	155	126
undesirable	88	152	301	618	120
np.recarray	65	233	158	540	526
micro-optimization	88	272	118	334	863
numpy.log	15	29	319	396	622
8500	21	288	324	200	252
dictionary-like	65	94	158	540	890
isnull	6	157	418	700	956
set_label()	31	13	388	592	879
np.size	27	269	403	65	48
second-level	81	147	450	101	817
ripping	11	120	114	35	64
city	79	228	487	480	653
matplotlib.text.Text	31	1	388	399	879
operable	17	187	429	764	954
fmt	52	129	465	137	347
ported	7	51	76	2	730
Hmm	50	200	493	504	991
brevity	4	263	342	458	950
df.to_string()	36	58	489	137	975
stuffed	50	232	457	697	338
definitly	35	59	490	419	908
~400	21	190	234	557	42
bits	14	291	85	608	549
cite	57	193	372	387	371
z-data	81	170	270	733	301
slashes	61	58	443	230	501
buy-and-hold	79	147	173	101	955
Timeseries	69	162	450	789	739
d.Decimal	86	129	117	266	969
x.std()	27	29	10	772	838
P.s.	11	120	212	739	67
TimeDeltas	69	162	191	209	739
fooled	50	59	60	35	907
color-coding	81	214	25	546	884
index.html	36	239	429	384	942
impractical	88	272	258	334	604
TrueType	45	80	448	269	909
favors	88	59	147	144	908
typography	9	23	138	118	219
import_array()	15	67	261	215	957
blabla	46	14	383	505	649
param2	41	6	177	107	211
param1	41	6	177	107	211
knob	81	214	457	783	54
intepreter	40	141	429	76	632
damned	88	59	5	419	53
seaborn.set_style	46	226	494	316	608
addressing	88	152	60	799	908
m.pcolor	46	39	495	200	177
$#$	90	32	13	417	821
visitor_id	64	150	256	231	653
argument	31	13	444	15	709
buried	12	152	5	257	417
py27-scipy	67	112	327	499	334
moarningsun's	10	17	254	710	441
aproach	11	173	389	763	360
acushner	4	121	394	646	500
.clf()	29	218	128	123	55
get_loc_level	47	94	460	172	787
instructed	2	57	167	335	288
masse	76	63	162	426	452
coincide	81	288	270	546	884
imgarr	63	90	246	141	942
ironically	10	59	491	167	863
Getting	69	31	100	530	911
molecule	39	126	206	93	949
LongDF	48	281	486	339	502
psfrag	93	61	315	97	371
inserted	2	215	328	98	187
Ophion's	10	202	37	323	876
average	81	147	173	101	459
drive	40	119	429	609	377
forth-coming	81	147	206	101	765
PNG	93	61	315	99	374
Array	69	162	191	61	837
wine	77	168	186	705	646
21:40	99	186	318	34	789
sda	54	174	330	751	568
v_t	96	201	426	560	13
np.intc	3	291	141	266	969
Rounding	69	31	100	530	316
merit	12	225	5	419	219
subprocess	29	218	183	359	803
23:45	99	253	119	525	256
bright	22	117	427	438	198
Roland	4	121	264	646	500
Systems	38	224	282	110	689
np.intp	3	291	141	266	969
scarce	13	193	5	387	219
findCircles	29	187	128	236	954
_Y	48	123	486	339	502
np.int_	3	67	261	146	498
PictureID	79	144	195	178	637
trans_id	48	281	456	339	199
Applied	38	206	282	722	689
directed	13	79	41	400	234
normalizations	20	183	275	191	905
0.16.1	91	122	156	587	626
_assertRank2	37	250	27	475	194
0.16.0	91	122	156	587	626
freezing	40	187	128	764	954
pre-computed	2	21	131	203	187
clang	67	112	276	326	334
complex-valued	60	93	280	431	708
Having	47	0	392	678	544
Reusing	2	116	457	573	338
biggie	88	59	147	504	908
R-style	59	52	495	51	710
resource	13	26	372	387	219
1+0j	96	266	257	391	421
200k+	21	190	234	557	42
Thereafter	71	57	65	697	92
parasitic	59	52	495	51	177
worried	12	59	5	419	907
Gauss-Seidel	77	98	48	652	416
admins	18	225	5	419	53
worries	24	200	493	504	991
.value_counts	64	150	256	551	48
np.asfortranarray	44	227	385	0	263
Barplot	69	52	495	209	837
df.pivot	64	287	406	631	294
datatables	71	171	183	609	959
STDIN	36	171	182	343	369
)`]	75	35	385	176	486
Comprehensions	38	162	19	574	114
Fraction	3	220	261	312	235
%%time	40	277	281	76	632
timestep	81	147	206	167	949
man1	55	128	52	477	568
testset	78	49	131	706	986
inequalities	76	42	38	698	809
That	47	0	392	678	544
_C	55	132	330	205	568
uninstaller	40	57	167	664	732
sites	13	193	372	75	219
\IPython\core\	37	250	27	475	889
kj-	44	143	215	5	37
)``	94	222	256	293	160
-90	41	288	324	200	573
count_nonzero	42	27	37	313	244
Than	47	0	392	678	544
BB	53	123	51	467	199
correclty	47	59	392	91	835
logins	79	140	453	101	955
smooths	72	165	15	733	102
concentrate	12	232	235	144	563
PyArray_SearchSorted	7	67	261	215	957
serialization	71	153	122	702	457
X_testN	68	35	154	545	994
many	47	21	233	251	604
_x	49	47	486	363	445
Inverted	69	162	237	61	837
)`"	75	227	385	0	357
)`)	75	227	385	0	486
np.cumprod	27	227	228	0	146
Preferably	47	48	392	143	360
minima	72	43	231	588	283
autoencoder	77	168	186	705	646
rolling_	60	296	14	742	709
hurts	12	59	5	419	53
SSHing	40	239	429	609	92
read_table	52	185	28	121	793
3000	21	190	234	557	42
ismember	60	296	375	364	631
cp34	67	151	470	604	104
alglib	76	51	65	2	730
considers	12	215	491	174	702
seeding	12	219	181	725	162
caring	12	183	5	458	563
Mayavi	93	23	495	97	537
concede	18	225	5	419	53
a.sum	27	269	403	65	263
damping	20	98	425	191	738
prototype	76	51	65	450	730
uncommented	40	37	222	699	59
obj.nonzero()	42	111	0	73	694
enable	47	229	457	335	621
gist	57	235	342	450	371
Macports	67	151	210	351	104
instantiated	2	215	328	514	720
300k	21	190	234	557	42
BC	95	268	419	686	497
to_dict()	43	157	72	24	956
300x	10	202	37	323	876
instantiates	29	1	329	514	720
fmin_l_bfgs_b	77	124	458	324	438
RUN	78	204	338	339	502
sit	59	232	232	167	618
non-issue	88	272	232	334	863
polls	40	37	429	384	108
colorbar	5	148	32	19	518
subsample	81	170	258	44	576
policies	12	183	63	170	285
mono	22	248	381	428	593
17_d	86	260	431	211	199
c-type	76	51	65	2	730
ive	50	264	393	75	564
unsupported	63	44	460	172	772
qutip	60	26	102	2	398
2011-11-03	53	69	119	155	126
ctrl	40	174	305	288	128
pandas.DataFrame()	43	47	72	771	73
scipy.special.erf	60	98	458	742	597
Calculations	69	162	191	61	933
yidx	74	297	4	509	228
trival	34	77	131	522	694
HDF4Image	36	129	136	36	906
binary	71	153	50	423	108
dragging	59	154	188	427	203
wiring	11	59	143	144	835
)]);	68	32	385	545	486
Objects	69	162	191	61	837
spot-on	24	109	490	567	81
wrappers	76	51	65	2	417
Swapping	69	31	100	566	911
trivially	47	48	392	799	238
boosted	10	183	409	44	576
unixODBC	84	119	167	241	732
structurally	71	49	131	98	944
figure's	5	154	284	245	203
22:00	99	69	119	158	126
x.lower()	27	150	10	772	838
Numpy-like	76	26	65	118	16
extern	15	67	261	215	498
DataFrame.join	43	157	72	683	956
lib-scriptpackages	55	128	52	477	56
Physics	13	224	48	195	852
my_module	15	135	319	777	873
awesomeness	24	225	490	419	53
Quiver	69	162	495	209	837
customized	2	229	457	306	439
clobber	15	135	181	777	195
+50	18	225	232	407	81
ColumnName	53	139	256	250	779
)])`	75	32	385	545	585
itertools.groupby	42	27	349	648	640
1cm	39	288	438	200	479
]```	90	231	13	112	585
aspect=	46	284	494	757	508
MRK	78	95	115	239	227
rest	2	263	338	91	338
safeguards	6	263	456	618	36
unaccepted	24	200	493	504	991
imresize	22	296	381	141	722
presumption	2	49	456	405	531
ec2-user	55	128	52	477	56
Advice	11	173	389	763	867
bfill	6	85	449	700	817
31x31	20	93	7	45	943
ax.get_xlim()	5	148	253	558	844
(:	44	205	251	5	192
(;	61	263	452	539	501
(8	75	227	385	0	486
aspects	13	26	134	118	219
around	50	232	393	35	564
aroung	81	21	355	159	576
(=	78	21	233	251	702
res2	74	63	74	404	211
darr	3	269	385	157	172
res1	94	63	68	426	452
libblas3	67	163	167	499	732
dark	22	4	427	438	198
((	75	227	385	0	486
stockData	53	139	256	417	775
Algorithms	38	224	282	94	689
(/	55	128	330	477	372
breakage	12	152	60	697	120
TODO	4	215	392	252	376
dare	88	257	232	630	53
intel	84	163	428	418	166
pre-sorted	10	272	456	546	863
hotel	79	228	487	480	517
Share	69	162	169	61	145
exploit	76	229	134	552	621
inter	81	6	266	588	459
Recognition	38	224	282	94	689
6.66	68	54	257	338	585
explaining	18	225	490	567	81
Skew	48	138	173	467	459
conditional	2	265	291	574	36
helpfull	11	109	229	140	867
Functional	69	179	169	574	734
supplementary	2	116	145	170	986
APT	67	151	167	499	732
Pivoting	69	31	100	789	739
pickles	71	218	183	359	457
pickler	76	26	65	663	720
jstart	74	195	4	690	486
lpsolve	3	94	65	9	957
may_a	27	227	385	509	486
featureExtractor.py	40	37	222	384	315
subpart	74	111	115	369	227
origin=	46	36	294	653	488
memories	50	218	301	167	769
make.py	35	57	44	384	561
4413	24	200	490	504	991
Answers	18	225	45	527	509
4410	41	243	289	282	810
DSM's	4	17	254	710	441
user_time	99	140	453	109	94
refer	2	229	19	487	702
biased	12	219	409	783	454
transformers	76	168	122	702	646
Expanded	4	17	254	710	441
LogLocator	5	148	363	558	844
biases	12	183	409	44	84
landcover	22	100	201	438	670
y_col	53	123	272	339	779
fdata4	90	297	4	509	995
origins	39	21	233	251	247
package	67	151	167	499	732
interfering	40	187	128	764	954
Analyzing	38	246	282	519	38
0.035	96	266	324	695	421
slighty	10	170	37	323	176
tight=True	46	284	348	46	430
Away	95	123	335	168	653
Duplicate	69	31	100	530	114
apologize	18	225	179	739	67
to_dict	43	47	72	24	73
Teradata	71	171	473	128	88
her	4	121	264	170	741
DIAGNOS	6	18	272	682	199
zorder=10	46	39	73	316	649
hex	61	4	443	438	672
hey	24	200	493	504	991
emacs	40	141	281	76	632
2-element	34	77	0	540	336
slopes	81	170	231	783	738
heh	88	59	114	504	469
verbatim	57	235	222	450	451
numpy.recarray	3	220	361	404	235
n_samples	44	256	251	196	930
r-value	77	124	472	783	738
beginners	11	120	212	739	727
survived	79	49	487	27	517
convolving	20	93	190	191	989
unreliable	88	218	147	334	604
utf-16	52	5	443	563	209
matplotlib-user	4	225	45	71	509
House	95	181	373	185	496
mathplotlib's	35	193	372	71	371
robustness	12	183	409	458	394
impute	6	85	12	700	910
PyGame	22	248	381	571	722
downcast	94	222	72	15	378
quit()	29	187	128	764	954
read_html	52	185	28	24	793
Latent	38	224	282	94	689
Retrieving	69	31	100	530	911
migrate	13	225	232	419	53
Thursday	99	140	453	109	94
VARMA	77	168	186	705	646
sp.stats.sem	45	37	222	699	314
dpi=300	46	203	348	577	619
fumbling	50	120	114	35	64
laboratory	84	119	429	697	321
P_it	63	44	199	582	341
allocator	7	51	447	565	450
Gridspec	31	13	255	558	518
2003	99	182	318	372	94
Putting	2	263	491	174	986
tight	45	226	494	757	619
LassoManager	31	1	388	399	879
10-50	78	204	4	391	252
incomprehensible	11	59	114	144	852
representable	14	86	142	325	549
0:20	90	95	115	239	227
LightTable	40	141	281	76	632
matplotlib.pyplot.imread	22	248	381	141	942
factorplot	31	14	383	568	710
Subset	69	31	100	789	739
Suse	84	119	167	499	321
itertools.chain	65	30	81	648	595
partitioned	21	190	258	159	986
fill_value	6	68	12	53	910
mask	6	100	95	18	670
Direct	69	179	169	61	145
mash	2	116	145	706	986
mass	81	214	266	391	603
parallelism	7	51	345	445	166
Saullo's	4	17	254	710	441
bar()	31	14	383	568	710
parallelise	76	272	345	169	360
deletechars=	52	185	334	85	793
crept	50	37	301	618	625
bothers	88	59	61	334	469
X.T.dot	44	194	280	704	598
attrs	52	185	28	712	793
restated	18	225	490	170	81
instalation	40	57	429	664	321
mnX	74	95	26	212	273
tz	94	63	68	426	452
tx	85	109	370	28	142
ty	24	33	229	140	870
tv	90	297	13	617	744
np.diag	44	194	137	704	598
tr	36	174	117	36	906
ts	64	281	74	72	211
tp	36	174	177	712	486
pylab=inline	40	141	281	76	632
to	47	0	392	91	338
tail	47	214	132	783	176
tm	86	174	287	479	858
tk	93	187	104	368	591
asterisks	61	58	452	230	501
ti	41	6	177	107	142
tf	74	174	177	551	211
td	48	123	486	339	682
te	47	174	392	751	795
homepage	35	193	372	387	594
tc	77	124	177	324	438
numcols	34	205	251	162	927
ta	85	172	125	211	201
returned	2	215	328	98	187
Chained	69	111	191	574	739
qtconsole	40	141	281	76	632
attr2	53	123	373	185	199
.get	64	89	163	340	131
attr1	48	49	456	405	502
scipy.odeint	60	98	38	279	809
t=	75	243	289	425	270
hooking	29	218	183	609	803
1.7.0	91	122	156	587	230
cable	13	218	355	159	959
althought	47	57	392	91	713
t4	95	123	159	250	497
t2	41	172	481	107	211
joined	2	49	337	706	986
t0	41	172	177	107	211
t1	41	6	177	107	211
large	21	190	258	44	604
pesky	6	263	301	618	625
Transforms	20	42	248	191	989
millimeters	41	288	284	245	479
joiner	86	89	163	85	66
interpretor	40	141	281	76	632
urandom	15	119	330	248	478
Should	47	0	392	143	835
timescales	81	147	409	101	301
crystallography	13	43	235	733	102
currind	78	100	216	616	456
mouse-click	93	154	188	427	2
example_array	90	293	26	509	228
trick	47	48	61	630	31
df.at	53	95	51	339	779
xor	42	94	95	18	272
YearLocator	5	148	363	558	844
np.sort	42	27	349	358	640
tools.py	37	250	475	475	173
t-stats	77	168	186	783	691
.assign	27	29	10	772	838
scientists	13	26	63	118	398
set's	81	170	409	44	563
escaping	61	58	443	230	501
.dmg	67	151	470	604	104
file1.txt	36	10	136	185	261
set_text	31	1	388	399	879
legend	59	52	32	134	518
pycuda	7	51	345	2	166
matplotlib.backends.backend_wxagg	15	135	319	777	823
Business	99	138	66	109	687
ublas	7	51	428	418	166
~idx	90	95	115	239	227
some_function	27	40	444	157	498
PowerPoint	93	61	86	769	374
to_string	52	185	28	24	793
chunk-by-chunk	71	153	446	702	457
Intervals	69	162	191	789	739
emulator	40	141	429	609	954
mode=None	68	36	73	316	488
tesseract	39	126	235	93	765
weirder	50	37	301	699	120
get_dummies	43	157	72	341	443
acheive	88	48	61	675	360
Placing	69	31	237	209	911
pulls	2	116	491	174	92
gosh	24	200	493	504	991
info_dict	74	220	181	514	406
Armadillo	60	296	102	431	751
6	90	54	257	338	811
batching	76	116	145	706	986
9-12	78	52	338	32	456
under-	77	42	38	279	809
ccy1	53	139	51	448	821
ccy2	53	123	51	448	821
data_columns=True	52	222	446	24	369
end_date	48	281	486	788	920
array**	44	205	251	196	357
pandas.io.sql	71	171	473	128	88
160000	21	190	234	557	252
in_progress	99	140	318	686	687
sizing	59	154	284	245	479
plt.setp	46	148	494	46	348
fatal	63	176	397	696	136
17:06	54	186	119	158	126
builtin_function_or_method	63	44	460	172	787
17:04	54	186	300	338	139
1:10	90	95	115	239	227
if's	88	48	61	675	360
Concatenation	69	188	169	574	145
1:15	90	297	4	332	995
NVidia	84	119	429	609	954
ndata	44	188	88	404	581
Your	47	0	392	678	544
11:30	99	253	119	525	256
prompt	40	141	281	76	632
scan	34	116	145	522	207
suggestions	11	173	389	763	867
ds3	57	59	342	424	469
unbiased	77	219	132	550	454
col_2	48	123	486	178	637
col_3	48	123	486	197	637
col_1	48	123	486	178	637
11:05	54	69	119	158	126
10's	21	190	234	557	326
col_4	48	123	486	178	637
xxxx	63	174	276	185	128
axis1	41	6	216	616	397
axis2	41	6	216	616	456
df.index.weekday	53	139	51	72	390
axis=	64	269	406	65	48
owner	67	132	222	384	786
doens't	45	37	222	36	59
DataFrame.pivot	43	47	72	683	73
ingesting	71	153	50	423	108
matplotlib-basemap	59	52	495	199	177
axes.formatter.useoffset	45	80	334	269	909
col_b	48	123	486	197	82
col_a	48	123	486	197	82
treatments	79	228	487	27	653
to_excel	52	185	86	24	561
col_x	75	233	54	690	975
col_y	75	227	54	690	975
Orange3	93	187	104	537	728
waves	20	93	425	191	344
transposed	34	77	396	566	520
refuse	12	152	147	625	120
dataframe.replace	6	68	12	130	910
-50	41	266	324	397	421
2.4.11	91	57	417	141	864
register	29	187	457	149	720
parameterized	39	98	38	733	738
django	93	171	90	609	537
Month-Year	48	281	337	405	502
ortho	39	149	279	322	586
fundamental	12	152	147	552	120
Hebrew	61	58	443	539	501
parfor	76	51	65	169	730
1300	21	223	234	200	252
distortion	39	126	231	93	562
retweet_count	95	204	335	168	517
Html	53	174	272	417	682
random.shuffle	42	27	14	358	244
insted	47	48	490	424	835
nifti	71	153	214	423	108
conjugation	34	194	248	191	708
wrt	12	21	275	161	738
nifty	13	257	126	675	264
Sound	13	26	138	118	398
Grammar	13	23	63	118	398
")"	86	37	222	699	858
Michael	24	121	264	102	741
train.tsv	36	153	50	423	108
funciton	60	48	375	742	31
speculate	23	59	143	37	451
Floating-Point	38	224	282	94	985
shop	79	78	487	786	955
fount	50	193	19	697	371
assemblies	13	246	206	195	416
LC_ALL=C	45	80	448	767	315
zero-crossings	20	93	425	147	344
found	50	264	393	75	564
MEAN	95	181	419	686	517
changeing	86	37	222	699	59
reduce	10	272	118	44	576
Gigs	21	127	355	159	359
slowdown	10	202	118	225	990
Quarterly	79	138	450	101	746
numpy.logspace	5	13	297	171	844
allclose	60	27	95	18	866
length_of_plateau	14	29	314	325	549
****	30	176	199	281	114
99.99294867	54	50	368	331	449
.set_position	46	226	494	116	348
POS2	78	204	195	178	283
plotting	59	52	495	51	710
belief	60	219	314	210	238
risen	99	104	453	109	955
obj_1	27	260	95	18	866
qualify	12	229	456	355	563
2-dimensional	34	77	0	73	694
conditioning	69	228	233	621	517
Historical	95	271	159	686	746
clique	38	206	282	722	71
POST	30	212	55	136	965
rises	21	160	274	167	641
testData	68	32	18	28	62
Strings	69	162	191	61	739
f.so	15	135	261	215	957
eickenberg	4	121	264	646	500
choropleth	39	73	495	621	586
PYTHONHOME	67	112	276	113	137
Years	95	138	318	519	687
matplotlib.ticker.FuncFormatter	5	148	363	558	844
Select	69	31	100	530	911
pyplot.show	29	203	128	123	55
VPython	93	248	495	571	537
0.44731685	68	54	257	713	449
integrand	60	98	458	396	622
unsatisfied	88	120	114	35	727
_lut	31	13	294	653	271
engagement	53	139	51	682	199
LUT	22	126	239	438	672
rooted	12	48	392	630	835
bsxfun	44	30	137	74	598
unusable	10	127	301	167	959
DLLs	67	163	152	604	305
serialising	71	116	145	60	92
numpy.core.umath_tests	15	135	319	777	823
guess	47	59	392	630	469
leverage	76	51	65	169	439
jet	22	4	294	653	488
jez	4	109	254	567	441
matlabs	60	296	375	364	631
vector2_y	41	6	438	107	247
vector2_x	41	6	438	107	247
RANSAC	72	126	7	152	670
elaboration	57	235	342	170	81
warmly	11	173	389	763	867
grouped.groups	94	222	158	376	160
umfpack	7	112	276	499	128
Unnecessary	10	188	118	169	863
Long	61	271	191	281	38
20*	75	266	289	28	810
build_exe_options	15	132	222	384	315
endlessly	29	218	128	167	954
dpkg	67	112	276	57	334
prettyplotlib	59	23	32	51	710
larsmans	4	121	264	646	500
aaa	48	123	272	11	82
Often	47	0	392	678	544
aah	24	200	493	504	991
seaborn's	31	14	383	568	710
0.99	91	122	156	587	230
0.98	54	108	23	8	421
0.95	96	266	324	695	421
0.94	96	266	324	695	421
plot()	31	13	383	592	879
Alexander	24	121	394	646	500
Click	38	271	259	281	402
0.92	54	108	23	713	931
]]))`	90	54	257	10	585
Movie	79	190	234	519	38
beforehand	2	229	457	91	338
defect	39	117	235	709	562
VGene	48	144	195	178	637
pedestrian	88	43	61	675	612
Industrial	95	181	373	686	497
2-column	34	77	145	88	356
generalizes	34	257	61	675	612
reassigning	74	116	361	212	923
SDE	13	225	5	419	219
self.df.iloc	90	54	257	332	995
pandas.Timedelta	31	63	68	426	452
reliance	76	179	118	574	734
plot.show()	29	187	128	123	55
Dask	13	26	126	118	457
generalized	60	42	38	431	485
Dave's	4	17	254	710	441
Logically	81	21	131	167	944
%extend	3	220	329	312	235
coursera	13	224	48	195	765
M	44	205	370	5	192
WHAT	30	212	55	136	965
pd.notnull()	6	68	12	130	910
temp_win	90	54	257	10	744
ZeroDivisionError	63	44	199	130	350
wedded	88	94	5	125	907
accepting	18	15	45	472	922
.argmax()	90	297	13	10	744
index.name	43	47	74	551	73
numpy-1.7.1	19	57	432	301	321
-24	96	266	314	391	421
Cost	95	270	159	467	698
84800000	47	174	392	424	835
dragged	59	154	188	427	203
Cloud	4	121	264	646	500
clear()	29	203	388	236	444
golf	18	225	490	419	81
gold	79	78	487	480	285
new_array	74	233	54	690	526
Trials	38	162	191	789	739
xcode	67	151	210	604	104
comand	40	37	429	699	59
sigma=	96	266	324	695	427
MySQL	71	171	473	128	88
Fatal	63	158	397	696	832
sigma1	85	219	177	391	192
RDBMS	71	171	303	128	457
Unsure	47	0	490	170	835
Service	84	271	159	281	38
writes	71	153	50	423	108
writer	36	153	86	638	561
category2	95	181	373	185	496
PATH=	55	128	52	477	568
rule3	85	204	419	467	497
factor	10	170	409	44	576
numpy.apply_along_axis	42	269	14	65	244
computer's	84	127	355	159	359
colorplot	59	52	495	199	177
plotfile	31	13	383	568	710
set_edgecolors	31	1	388	399	879
banned	18	225	45	170	285
constituent	79	21	233	251	702
LineCollection	31	1	388	399	879
Code	30	271	342	347	560
Frustrating	24	109	114	444	469
crs	74	100	239	586	283
tvals	46	35	289	46	810
progressive	81	170	409	44	576
cry	10	59	114	334	53
coord	74	6	239	586	573
25x25	22	126	251	45	943
np.fft.fft	20	93	425	336	344
DataFrameGroupby	43	157	72	514	956
xmax-xmin	96	266	289	28	810
64GB	84	127	355	159	359
startup	40	132	352	113	798
TextEdit	40	141	281	769	632
drawparallels	31	13	388	592	879
sankey	93	79	495	537	234
contour	59	149	495	199	177
U+2212	61	58	443	86	501
permuted	34	77	131	566	520
%d-%b-%y	86	274	465	679	151
50th	99	159	173	104	459
color_dict	65	233	158	540	406
pickup	2	57	328	335	92
set_figheight	45	203	348	123	55
compliment	24	109	229	444	870
knowing	12	59	5	144	563
Blitting	59	154	188	127	203
imagemagick	93	61	315	99	872
set_yticklabels	5	148	363	558	844
targeted	35	193	138	9	371
javascript	93	23	90	537	537
menMeans	41	6	177	282	397
np.int16	3	291	141	266	969
frozenset	65	233	158	540	526
dividend	79	78	450	762	746
shoe	61	232	85	251	212
d-e	96	29	18	173	62
cryptic	88	257	199	227	695
tangible	10	272	118	552	990
thou	57	235	19	630	371
500MB	21	127	355	362	655
lapack	7	163	428	418	166
1.64	54	108	23	579	399
maptlotlib	93	57	167	51	732
build-essential	67	151	327	232	334
);	75	174	385	425	486
matplotlib.pyplot.text	31	13	363	592	879
)=	96	201	426	560	13
sinh	15	135	44	777	823
]]`)	90	54	257	10	585
scipy.optimize.minimize()	60	124	458	396	622
dimensional	34	77	0	73	694
np.zero	75	174	385	522	486
SparseSeries	76	292	64	348	218
__rsub__	3	220	329	663	235
church	95	123	148	178	522
)"	75	174	260	185	858
)'	86	129	117	211	262
.between_time	53	287	42	250	997
RgbImage	68	90	246	0	486
extrema	72	170	231	588	116
Tags	30	298	419	467	262
mlab.normpdf	75	29	10	28	838
dendogram	81	79	41	621	234
__abs__	65	220	329	663	235
boston	71	168	214	60	108
Fortran-order	34	188	396	404	581
z-variable	34	6	0	733	694
champion	47	174	392	509	469
overloading	3	94	329	663	734
races	79	144	195	178	637
representative	57	235	463	37	451
systematic	12	183	409	44	84
scipy.integrate.romberg	60	124	458	742	438
She's	4	193	19	387	114
ax2.set_xlim	5	148	253	46	339
uncertain	12	59	389	630	907
dstack()	42	30	286	74	595
df1.set_index	64	287	406	631	294
straight	47	232	29	91	116
estimations	81	214	409	783	576
Misc	48	123	272	224	778
existance	12	183	147	742	563
Paraview	71	248	214	571	537
reliably	47	59	147	91	604
leaning	13	120	59	35	727
mpi4py	7	218	345	445	803
CherryPy	93	248	90	609	537
psi	96	201	426	560	13
u'2	86	129	42	211	624
0.008	96	266	324	695	421
u'1	86	129	42	211	624
Stock	48	138	450	762	746
overlayed	59	52	433	32	177
np.asarray	75	227	385	489	969
fetching	71	116	303	573	92
onscreen	93	61	315	99	54
nanosecond	99	63	68	426	27
uint8s	21	190	258	45	604
antialiased=True	46	36	294	592	488
Address	95	271	159	787	517
packagename	67	112	276	57	128
race_label	53	123	51	448	993
comprehensive	13	193	372	387	264
psuedo	57	235	342	450	950
0.200	14	266	324	391	421
algos.c	55	128	330	205	791
alert	29	239	222	149	2
ProbMatrix	74	174	54	690	262
psd	20	93	425	336	344
2147483647	14	291	46	325	482
might've	18	59	490	419	747
euro	61	49	148	86	955
ABBRV	27	260	431	234	945
PhotoImage	22	61	381	141	54
robjects.r	15	135	375	364	631
U5	86	18	141	36	178
italicized	61	230	448	767	909
PyCharm's	40	141	281	76	632
concrete	57	235	496	37	766
de	86	174	408	432	686
elev	41	149	438	298	401
normals	39	149	200	733	116
redistribution	7	163	152	516	850
dt_rng	75	243	289	425	810
18645	90	293	26	509	228
abbreviation	61	135	319	86	517
FS	96	266	425	507	344
Statement	69	162	191	789	739
amp	41	124	177	218	597
p.plot	46	29	177	282	622
sidebar	35	193	19	387	114
</s>	47	21	392	91	338
Elegantly	69	31	100	530	911
results.append	90	174	117	10	486
readers	18	225	45	527	219
fmin_powell	60	124	458	396	438
Holidays	69	138	66	789	739
y-coordinate	41	6	438	69	573
eager	11	120	212	739	727
overthinking	88	59	114	424	907
FY	99	140	450	198	94
ruled	50	264	60	210	747
self-documenting	88	257	5	334	612
2^16	96	266	201	28	482
Both	47	0	233	251	544
dtype=float64	3	205	251	266	969
Tracking	38	206	282	722	71
Faster	69	252	169	675	233
Mega	38	246	58	55	600
SQL's	30	212	182	574	631
tweaks	57	235	393	458	394
1-bit	14	291	85	325	549
diagonalizable	34	194	280	431	485
__gt__	3	220	95	18	866
corr_list	53	139	42	417	775
shading	59	208	433	199	177
ditching	88	23	383	51	756
formal	12	193	123	145	31
errobar	59	52	495	51	54
monkey-patch	88	232	457	306	439
A.data	44	292	64	348	218
case-sensitive	61	94	123	145	195
facets	59	52	233	621	978
Highly	24	109	229	444	264
continue	35	37	232	764	769
yields	47	215	491	347	59
Bank	79	78	450	519	38
names	61	49	456	405	713
clipping	59	117	284	245	479
plt.xkcd()	45	203	348	123	55
spring	13	43	48	400	765
Fahrenheit	39	288	438	310	949
wxpython	93	187	104	368	728
1294358400000	54	50	368	158	277
bicubic	72	165	15	235	570
curious	88	59	114	630	907
pale	22	4	427	438	198
resolutions	81	147	284	245	562
POLL	64	150	256	197	48
Mostly	47	120	5	35	907
transactions	79	78	487	101	285
shading=	46	36	73	316	488
Mock	71	57	342	450	957
filepaths	36	10	489	712	261
networkx.draw()	31	1	388	592	879
ax.set_xlim()	5	284	253	558	339
lime	95	181	335	168	198
256^3	21	190	258	557	42
digitized	74	100	4	690	577
NDII	79	144	34	621	459
Brady	79	116	301	167	769
2013-08-11	99	69	119	155	256
redoing	2	116	145	573	531
UPD	57	235	342	450	451
ndmin=2	44	227	228	0	263
Fr	85	298	34	467	361
ndmin=1	52	185	334	15	793
Xjv	85	194	137	5	598
plot_trisurf	72	165	15	199	627
relating	50	193	393	75	564
DataFrame.groupby()	43	157	103	683	956
analysing	13	246	126	203	765
per_df	90	95	115	239	227
Fv	95	181	419	730	102
65K	61	49	50	539	501
44.1kHz	20	93	58	507	344
unintentional	18	152	461	419	120
microsecond	99	63	68	426	27
4:6	90	297	4	509	597
numpy.empty	75	227	228	0	484
CodeReview	18	225	45	527	509
Dali	4	121	264	710	552
breakpoint	29	37	222	699	625
seamless	13	26	138	118	398
))"`	75	243	385	425	484
non-vectorized	10	202	37	534	783
NEW	30	212	55	657	965
u=	68	54	13	545	486
u8	86	18	141	682	178
u4	86	18	272	266	178
Explanation	4	235	342	347	560
wind_angle	41	6	177	282	397
u0	41	201	177	560	13
u3	78	49	85	522	283
u2	3	291	85	266	178
hover=True	46	226	494	123	348
suit	57	229	457	306	237
xpath	71	153	303	60	92
Due_Date	53	139	42	682	997
elsewhere	50	264	292	210	747
inches	5	284	284	245	479
poster	18	225	45	170	81
uS	54	108	300	797	624
HIGHLY	13	26	65	2	730
Cigarettes	95	298	373	686	517
scipy.stats.gaussian_kde	72	214	382	147	4
NEED	12	218	301	167	959
posted	4	235	490	252	81
geting	47	59	301	699	59
row-column	78	144	131	522	944
ut	75	227	385	509	486
Dynamically	69	31	237	267	911
uv	41	6	289	107	397
up	50	232	232	167	781
us	57	235	463	37	451
ur	24	109	394	567	469
um	54	108	267	8	421
un	74	174	408	432	807
ui	93	187	104	537	537
uh	24	200	493	504	991
spectroscopy	20	126	132	147	4
100milliseconds	99	147	453	198	817
ua	44	293	4	509	146
ub	74	293	108	586	577
storing	71	116	122	702	457
dateutils	67	57	44	499	732
dicitonary	74	233	54	522	526
1000000000	14	291	46	325	482
parses	61	153	50	174	260
Mars	39	149	438	69	116
comming	50	246	342	98	92
fig.get_dpi()	45	80	348	123	619
Series.str	43	157	72	589	448
graceful	88	257	61	675	612
parsed	61	49	50	98	260
python-dev	67	151	327	232	334
df.Year	53	139	42	755	775
gnuplot	59	23	495	51	54
fixing	50	200	60	567	531
955	54	50	300	797	139
957	37	250	27	475	194
b.dtype	3	18	141	266	969
Diagrams	59	52	495	51	177
retract	18	15	490	472	81
sub-pixel	39	149	279	733	573
deviate	81	170	409	783	4
row.index	74	174	74	551	975
petal	81	228	427	32	198
re-cast	6	48	162	306	470
EWMA	20	147	450	101	817
variates	77	219	132	725	162
ndimage.rotate	39	165	7	199	562
bdata	48	123	486	197	653
c=colors	41	39	73	282	649
pedestrians	79	246	206	498	675
diffraction	20	126	48	195	416
Connection	71	171	473	128	88
COLOR	95	228	335	621	517
2013-02-28	54	69	119	158	126
non-affine	35	193	19	9	371
enrolled	79	228	218	480	285
inaccuracy	14	86	314	325	84
fresh	40	57	167	664	321
CustID	79	144	487	197	653
having	50	116	60	573	531
volume_traded	48	78	173	197	955
upper-right	5	288	25	122	979
Density	38	206	132	147	71
scratch	76	232	232	257	531
informally	38	152	147	9	908
spectrograms	59	126	495	191	562
arranging	2	116	145	203	531
signatures	31	40	444	257	195
work's	24	109	229	140	870
Summarizing	69	179	169	574	739
Progress	38	206	282	519	38
Inserting	69	31	100	530	911
savetxt()	61	153	336	423	306
select_dtypes	43	157	72	683	956
Designer	93	187	104	537	728
longstanding	35	122	220	292	106
rspars	78	49	456	405	502
d2*d3	75	227	385	0	595
young	13	120	212	739	852
uniqueness	12	100	131	355	36
multicore	7	51	345	445	166
Nonetype	63	44	460	172	787
unravel_index()	34	77	396	566	694
statics	79	147	450	101	955
lapack-devel	67	151	327	499	334
g.map	46	39	73	752	649
reopened	18	15	490	764	81
gtk3	93	187	104	368	591
Graphs	38	162	191	209	837
F3	95	298	419	467	361
redefinition	5	288	284	245	479
Pandas's	43	171	473	771	956
presorted	10	272	118	169	863
tri	39	43	330	205	461
master_mask	74	293	108	586	577
magic	76	277	147	257	31
stringified	94	222	162	540	260
transmission	39	126	206	93	949
arrray	34	77	0	73	694
tre	86	174	272	211	682
Surface	38	206	495	209	71
try	47	232	232	699	439
F8	30	138	368	429	428
ONLY	94	222	55	136	160
race	79	228	487	480	242
y-dimension	81	288	284	245	479
matpltlib	84	57	167	301	321
dt.hour	78	147	275	198	603
raw_df	48	265	74	339	502
n_jobs=-1	77	168	444	705	314
A^T	85	194	280	704	485
gcc-4.0	67	151	152	326	315
+180	96	201	324	200	573
licensed	7	26	63	516	850
imply	47	59	131	91	888
licenses	7	163	63	516	850
spaghetti	59	52	335	32	714
leakage	20	93	425	191	344
SELECT	30	212	182	343	965
Rees	4	121	264	646	500
directive	45	51	261	215	915
expressed	81	21	275	98	734
consistently	47	59	301	699	59
HTML	93	61	90	769	374
violinplot	31	14	383	568	710
polluting	12	135	181	145	195
p.e.	2	248	19	571	114
expresses	12	94	147	145	908
delving	76	232	118	257	531
1400	54	223	298	318	252
equivalent	60	296	375	364	631
nan_to_num	6	68	12	130	910
version.py	55	132	330	205	305
pvalues	81	170	409	588	283
parquet	71	153	303	423	457
punch	24	200	114	444	64
Prior	2	215	292	9	376
gmpy	7	51	142	2	730
licence	13	119	63	516	850
\u2019	86	5	443	563	209
Premium	84	271	2	410	580
invented	13	224	63	516	689
MultiCursor	29	1	104	123	282
curv_typ	53	123	51	339	779
casing	12	263	452	618	734
technical	12	152	5	419	606
new_band	90	54	257	332	744
2^5	14	152	25	145	714
QtAgg	93	80	315	435	591
resulting	2	21	328	98	338
cousins	47	229	232	91	338
{	86	181	287	479	585
buffered	76	272	118	169	604
Leading	69	49	191	405	713
sub-string	61	49	443	86	1
outcomes	77	183	131	251	162
sgn	60	40	458	396	622
Draw	59	31	237	209	911
1+1j	68	32	18	617	62
yVars	65	233	54	690	526
pedagogical	88	225	5	458	264
vcv	53	139	51	85	199
Drag	69	154	188	427	2
midday	99	140	453	198	687
$20	79	78	487	622	741
zh	74	40	444	522	709
Allright	47	59	392	424	835
src	55	128	330	205	461
x_all	41	6	370	282	397
np.ravel_multi_index	42	30	286	358	146
heartily	13	225	63	118	398
rubbish	50	59	114	424	469
Regardless	47	0	392	678	544
np.append	42	30	286	74	595
challenge	13	120	134	203	765
matplotlib.patches.Ellipse	59	52	495	199	177
Library	55	128	488	741	372
itertools.izip	65	233	81	648	311
scipy.fftpack.diff	60	29	382	313	13
prompts	40	141	281	76	632
publications	59	52	372	32	54
xfit	46	39	73	316	649
self.datagen.next()	74	297	54	239	995
Police	54	50	368	429	428
Struct	71	153	336	423	957
slim	57	232	409	44	781
USAF	95	49	373	787	517
Answered	18	15	45	472	922
slit	20	93	425	191	344
slip	12	263	232	419	53
list_d	64	123	486	197	82
csum	44	205	251	196	357
ijkl	44	143	215	5	37
shuffled	34	49	131	566	520
np.random.dirichlet	75	40	444	725	201
namespace	15	135	181	777	195
delay	29	187	128	764	954
shuffles	34	30	396	566	520
class=	61	58	373	86	517
reposting	18	225	45	527	509
re-adjust	5	229	284	245	479
wolf	95	271	373	686	340
1294617600000	54	50	368	158	277
class2	95	228	335	200	675
espec	53	139	437	417	821
0.7.0.dev0	35	122	156	587	376
class1	41	228	335	200	675
np.zeros_like	75	227	228	0	263
list_2	74	293	54	690	577
list_1	74	293	54	690	577
nones	6	263	456	618	835
pd.to_csv()	36	10	86	712	942
Hive	71	171	303	128	88
timedelta64s	94	63	68	426	970
maturities	99	147	450	101	221
fits	77	229	392	306	738
variate	77	219	132	783	162
np.logical_and.reduce	42	30	286	358	244
counter	2	233	158	167	769
element	74	100	216	616	336
commodities	79	78	450	101	675
scatter()	31	13	383	399	879
unaccept	18	15	490	472	81
asserts	61	58	95	355	866
counted	78	144	195	178	944
math.pow()	6	68	14	618	709
all_regressors	53	139	51	417	775
lapack_opt_info	7	163	428	636	850
python2.5	55	132	330	477	791
move	2	232	232	335	338
lz4	71	153	122	702	457
NOAA	59	73	214	322	846
test.png	36	61	315	99	619
networkx.to_numpy_matrix	44	79	14	424	439
X	41	6	251	107	192
MODIS	71	126	214	203	301
_configtest.obj	63	176	98	696	952
Rackspace	84	119	2	410	321
decay	20	98	231	279	738
chosen	81	21	328	91	187
fast-ish	88	48	61	675	612
Congrats	24	234	229	444	870
dispose	2	116	145	335	531
12sma	78	140	453	198	456
degrees	39	149	438	298	116
choses	2	21	131	522	702
2015	99	182	318	34	519
'```	86	129	260	36	906
2017	99	182	318	372	94
therefor	2	215	328	91	187
2011	99	182	318	372	519
2010	99	182	318	372	519
2013	99	182	318	372	519
2:2	90	297	26	239	744
GPBUSD1d.txt	36	10	136	137	261
etree	75	233	54	690	526
parabola	39	149	29	93	116
docs	35	193	19	387	371
outlined	4	17	254	252	441
innermost	34	263	216	616	207
drange	43	14	383	592	710
docu	31	13	19	91	371
dock	93	187	104	537	728
mitigated	76	152	60	799	621
doco	18	225	45	527	219
-1j*inf	96	201	426	391	13
rotation	39	149	438	298	979
outlines	59	52	433	32	177
refering	57	200	490	504	835
45129-09-22	54	69	119	158	126
overwrote	2	215	457	335	180
truth	63	44	240	184	888
70,000	21	190	234	557	42
subset	2	265	456	771	36
train_X	78	204	108	27	1
writeup	11	225	372	387	264
105,105	68	36	180	545	488
jagged	34	77	0	73	694
gammas	41	98	177	282	397
tenth	21	160	338	616	456
arguements	31	13	383	592	709
Vigra	76	51	65	312	730
borderline	10	272	46	334	604
train_y	3	256	74	668	994
Cyborg	47	59	392	630	469
Weirdly	10	202	37	699	469
RECL_2007	85	204	419	67	497
specifications	61	229	457	306	260
FuncAnimation()	29	187	128	236	2
motifs	78	49	195	27	944
Trying	47	0	237	678	544
IMAGE_FILE_LARGE_ADDRESS_AWARE	67	163	167	499	315
struggeling	50	120	301	51	907
classification	77	168	186	705	646
_nx.concatenate	68	227	154	545	357
myData	74	281	74	668	779
plt.hexbin	59	14	297	171	710
myDate	53	281	51	682	390
kaggle	79	239	372	94	852
longtuple	74	100	4	586	192
numpy.distutils.core	15	135	44	499	732
shortest	47	43	131	588	662
Point	38	162	191	61	837
gc.collect()	29	203	447	570	55
exponweib	60	124	132	324	4
a.set_xticklabels	46	226	494	46	348
sql_query	36	174	74	343	975
Pause	29	187	128	764	954
df.any	27	260	431	65	945
blew	50	109	114	35	64
Program	37	176	386	475	194
Centroids	38	162	191	61	38
re.match	86	89	163	299	66
sort=False	64	47	406	197	48
backtest	13	78	450	762	955
DLang	79	144	195	178	653
los	85	181	408	432	807
Happily	47	0	392	630	469
system	84	119	167	697	321
float64's	21	190	234	557	42
_ItemId	48	144	195	276	637
MACOS	84	119	432	301	179
low	81	170	409	44	562
SArray	77	292	64	341	218
Actual	30	271	159	347	560
shorts	14	291	85	608	70
adaptor	76	111	328	514	747
gotcha	88	152	147	145	908
2009.0	54	50	300	331	931
geotiff	22	248	381	571	722
vouch	76	229	65	458	371
bother	47	59	5	419	53
sourcing	40	132	429	384	315
Grapher	38	206	259	110	38
imho	88	257	5	419	612
collecting	71	116	145	773	92
accusing	88	59	114	419	907
AAA	95	181	373	339	497
*y	68	32	18	617	62
*z	96	201	18	617	62
*t	96	201	112	560	13
*u	68	201	18	617	62
trusting	50	120	114	35	469
Patsy	38	168	126	341	443
correspond	78	21	266	487	702
gentle	11	173	212	739	67
*n	96	201	18	617	62
facecolors=	46	39	73	316	488
elsize	3	291	141	266	969
pd.set_option	45	80	334	269	413
9.74	54	50	368	331	19
9.75	54	50	368	331	19
*f	68	195	13	617	744
scipy.integrate.quad()	60	98	458	742	438
ylim	5	284	253	558	339
ylin	34	77	251	73	694
*c	68	201	18	617	62
*\	86	89	163	299	66
*X	44	227	18	5	598
4000	21	190	234	557	42
Compiled	7	163	56	215	915
Implicitly	3	94	162	9	734
normed=1	46	14	297	171	810
*N	90	293	26	617	486
2^31	14	86	46	391	482
2^30	21	160	46	557	482
2^32	78	100	46	522	283
formatter=lambda	86	35	10	772	838
400%	10	202	37	323	876
;-)	18	200	114	444	53
Compiler	7	163	152	241	850
*=	27	297	26	212	273
arr.reshape	44	227	228	0	263
Thank-you	24	33	229	140	870
*8	68	54	257	797	139
*4	90	227	385	10	585
*5	75	243	127	425	486
sqeuclidean	60	194	137	5	598
*1	68	32	431	28	945
*2	68	32	385	28	486
pitches	20	246	58	428	765
courtesy	18	225	254	710	81
400K	21	190	234	557	42
Stiffness	44	194	280	5	598
2.3.5.2	19	7	417	301	644
*$	86	89	163	299	66
segment	39	43	29	93	116
Julien	24	121	394	140	500
newcolumn	74	195	4	185	779
barcharts	59	52	495	51	177
non-string	94	222	162	355	470
multi-element	74	233	158	540	336
face	59	117	235	32	670
400k	21	190	234	557	42
mechanical	13	183	48	195	765
tickers	79	78	450	762	746
painting	93	187	495	537	177
fact	12	152	147	91	908
dbm	65	153	158	702	457
mean1	44	256	4	5	994
szl	24	200	493	504	991
Paris	99	268	318	372	256
dbf	71	153	50	423	108
_numpy_	15	135	181	777	406
bring	2	232	232	306	781
nbIds	63	37	199	699	888
WANT	30	212	55	136	965
numpy.vstack()	42	30	286	74	595
canvas.show()	29	203	128	123	55
decade	81	147	450	101	176
principal	77	42	248	93	485
redirect	29	239	90	609	942
Meanwhile	47	0	392	678	544
some_array	27	269	403	65	172
py2.7	91	7	417	587	230
should	47	0	392	143	338
buttons	93	154	188	427	203
counterStack	74	233	54	690	577
8,000	21	190	234	557	42
anneal	60	42	458	279	438
.Drew	24	200	490	504	991
meant	47	200	490	504	908
4000,400	44	205	251	196	357
listened	79	228	206	167	769
means	47	0	392	91	702
hist_kws	31	13	383	592	879
numpy.invert	42	27	14	313	244
12MB	10	127	355	159	359
generalise	34	229	61	306	360
listener	29	187	104	149	282
Percentage	69	138	173	789	698
illustrator	93	61	315	99	374
shaping	34	77	0	566	694
Once	47	0	392	678	544
smash	43	265	72	706	448
indexPositions	74	100	108	586	283
Because	47	0	392	678	544
uids	53	139	272	682	199
CircleCollection	31	1	388	399	879
wheelhouse	67	151	327	499	137
x-tick	5	148	32	19	884
])``	64	150	256	10	585
gbq	35	171	138	9	398
unfeasible	21	272	118	334	863
CRS	39	149	279	298	573
df_sum	53	139	42	250	82
argmax	42	269	103	358	244
correlations	81	270	472	783	662
end=	86	129	42	679	997
Py2.7	91	7	417	301	321
packet	50	246	58	693	600
!!!!	24	33	229	667	870
sheetname	52	185	28	121	793
dragon	78	100	266	391	283
df.divide	64	47	406	631	48
QScrollArea	29	154	284	245	54
1294099200000	54	50	368	158	277
f.index	64	287	406	631	294
yedges	41	35	297	171	397
map2	59	4	495	199	177
lf	74	233	54	185	577
ends	50	263	491	167	769
MultiIndex	43	265	75	771	921
strided	34	188	122	404	694
OPs	12	17	490	170	81
ld	55	176	397	696	536
strides	34	188	361	404	368
.mean	27	269	403	65	263
reappears	29	187	128	427	2
configuration	40	132	352	697	798
observable	47	37	222	355	908
ndim=1	3	67	261	146	498
ndim=2	3	220	361	146	235
invited	18	225	490	170	219
strptime()	3	63	68	426	745
ln	96	29	18	173	13
newbies	11	120	212	739	727
df.value	64	150	256	551	48
scipy.sparse.linalg.eigsh	60	194	280	431	485
trumps	88	94	95	18	866
lo	85	195	408	432	807
myDict	53	174	54	690	199
Contents	55	128	259	281	568
nalpha	41	205	370	200	192
h5check	71	153	65	423	457
Her	57	235	342	450	950
Hex	22	4	381	463	672
Hey	24	33	394	140	870
downgrade	91	122	156	587	230
x_te	74	195	4	255	228
winning	10	183	134	534	871
Heh	24	200	493	504	991
.contains()	65	157	163	589	448
list-comprehension	42	27	81	648	244
AxesSubplot	31	1	388	399	958
Seaborn	59	14	383	568	710
Phone	95	271	159	339	682
Kinda	88	257	61	334	695
compensating	20	170	409	44	576
HTSeq	67	57	167	499	732
utilizing	76	116	126	203	531
Reinstall	67	112	276	57	137
fence	88	59	114	35	907
pity	88	59	229	444	264
fourvector	90	297	4	239	995
lgd	46	226	494	316	619
Audacity	71	61	58	769	108
_typelessdata	3	291	361	157	172
RegEx	11	109	229	444	727
argsort()	42	27	349	358	640
sitepackages	55	132	330	477	791
x-d	96	29	18	173	62
major_locator	5	148	363	558	844
8]])	90	54	257	10	585
frameworks	13	26	63	697	537
x-y	41	6	270	733	573
x-z	39	149	438	93	949
x-t	96	29	18	173	13
ultra	88	59	61	334	604
Polygons	31	79	495	199	177
va	5	226	30	134	348
vb	44	195	137	5	598
62.5	53	139	51	332	995
ve	50	264	292	210	747
vf	96	29	18	173	925
vh	86	174	117	718	262
vi	36	246	50	384	108
insanely	88	109	229	334	523
vl	44	194	18	5	598
site	35	193	372	387	594
vn	85	172	419	17	645
x.view	75	227	141	266	969
hardware	7	119	345	445	166
vr	60	219	177	396	201
vs	47	21	237	91	908
vt	85	195	370	5	192
row-oriented	71	153	446	367	457
numpy.all	27	269	95	18	866
vx	41	6	177	107	397
vy	41	6	177	107	397
vz	41	6	438	107	397
sits	59	52	491	122	417
__init__()	63	44	444	236	444
DataFrame.plot()	31	14	383	568	710
vF	31	220	329	663	720
fminsearch	60	296	458	742	438
vectorize()	3	220	14	15	235
the_array	21	205	251	196	252
np.float32	3	291	141	266	969
x.min()	27	269	289	28	810
statuses	79	144	195	787	817
size=5	46	35	260	425	810
android	40	119	429	609	377
.median()	64	150	256	197	48
infinity	14	86	314	325	84
timeindex	99	281	68	682	452
drink	11	232	232	444	852
v0	85	172	481	17	645
v1	85	172	481	17	645
v2	85	172	481	17	645
Greg	24	121	394	646	140
v4	85	172	481	17	645
architectures	84	127	2	241	580
v6	85	172	481	17	645
infinite	20	86	314	279	84
sub-images	22	77	284	245	479
v=	75	227	385	0	357
pseudocolor	22	52	495	199	627
35%	10	160	23	323	176
workarounds	11	173	389	75	564
Weckesser	4	121	264	646	500
357	54	3	101	187	158
355	37	3	298	187	158
354	54	3	101	338	428
353	54	3	298	187	158
datetime.datetime	99	63	68	426	390
351	54	3	101	751	158
350	21	190	234	557	252
Need	11	109	237	143	835
exampe	57	235	342	450	950
drawing	59	52	495	51	177
359	54	69	324	200	421
358	54	186	298	297	811
restructure	57	229	145	706	356
flesh	18	225	232	472	81
rooms	79	228	487	480	675
scipy.sparse.csr_matrix	44	292	64	348	218
__lt__	3	220	329	663	235
invert_xaxis	45	13	383	592	55
Segmentation	63	158	397	582	832
info()	43	157	446	24	975
-values	41	6	177	282	397
.time	53	274	68	72	390
Company	48	123	159	339	82
Disable	69	162	237	209	402
clipped	59	117	433	32	479
diagonalization	60	42	38	431	485
12Gb	84	127	355	159	359
multi-step	10	116	145	706	986
np.log2	27	29	400	173	838
checking	2	0	60	573	531
\numpy\core\include\numpy\	37	250	386	475	194
Clements	24	121	264	646	500
whopping	21	160	274	323	655
Adobe	93	61	315	99	374
nvm	24	200	493	504	991
password	40	119	429	609	786
factorize	43	157	72	683	640
DateOffsets	94	63	68	426	390
alongwith	42	27	286	358	244
10,087	54	108	23	8	797
QtConsole	40	141	281	76	632
numpy.core.multiarray	15	176	44	696	331
matplotlib.font_manager	15	135	319	777	873
inexperienced	11	120	212	739	727
Addition	34	21	131	91	888
PopupMenu	29	187	128	149	282
algebraically	20	98	248	279	738
12pm	99	140	453	109	94
ucs4	67	57	167	664	315
daylight	99	147	450	109	27
pyparsing	67	151	327	354	104
asynchronously	29	218	183	359	803
glyph	59	52	433	86	177
__setattr__	3	220	329	663	720
MultimediaParams	3	220	447	570	450
in-memory	71	153	446	702	457
data.dtypes	53	95	74	239	975
numpy.logical_and	27	260	431	18	866
referential	4	235	342	450	81
Country	48	123	159	339	653
l3	74	233	54	690	228
blowing	50	232	114	456	781
Kindly	11	173	143	763	867
selecting	2	111	145	369	531
xmin=0	46	35	289	176	810
BHAR	48	123	51	448	779
Interactively	93	154	188	209	54
_minimal_	57	235	463	37	661
iris	57	168	186	705	646
msync	29	218	128	359	169
Dependent	69	162	191	61	837
np.any()	42	27	95	18	866
whistles	35	26	138	458	398
transitive	12	194	280	431	485
software	13	26	63	697	765
large_df	48	47	406	551	779
intermediates	76	188	118	275	863
1.5.x	35	122	156	292	376
cv2.error	63	176	397	696	136
rectify	11	48	389	799	360
assess	12	183	459	783	563
VOGRD	41	6	251	766	573
app.yaml	40	132	352	384	315
bottle-neck	10	272	118	225	863
retuns	71	215	328	514	260
wxWidgets	93	119	167	368	591
Bitwise	69	111	169	61	734
QThreads	29	218	183	445	803
order=0	72	36	15	235	570
restricts	47	215	392	91	621
60k	21	190	234	557	42
customising	31	193	19	97	371
Easiest	2	252	457	675	233
Specify	47	215	237	91	9
We'll	47	0	232	678	544
Generalizing	34	77	396	566	694
cumcount()	43	157	103	683	956
1.5.4	67	112	276	499	128
1.5.6	91	112	276	57	128
1.5.1	91	7	417	13	230
1.5.0	91	7	417	587	230
signal.lfilter	60	296	382	742	396
lowered	21	160	274	323	655
convergence	77	183	231	279	162
Outcome	34	77	131	347	560
valuation	79	78	450	101	955
Scatter	69	162	495	209	837
compute	81	270	472	588	738
pre-allocating	10	188	118	573	581
{1}	86	181	42	211	624
Discrepancy	38	206	169	61	145
numpy.bool_	3	44	460	172	787
convince	88	232	232	144	53
u's	78	144	266	766	944
xycoords=	46	226	30	316	348
CDATA	61	174	19	185	1
imbalanced	77	168	186	705	646
distribution	77	214	132	147	4
-IC	37	250	386	475	194
rightly	4	121	264	252	747
bool()	3	220	95	18	866
int	3	291	141	266	969
retina	84	119	2	410	321
contribute	11	225	232	144	53
inp	3	227	385	157	969
frame.groupby	53	150	256	250	82
ins	27	174	297	171	810
multi-process	10	218	183	445	959
3-letter	48	49	487	27	1
$30	79	78	487	480	955
ink	59	117	433	32	198
ind	74	293	4	509	146
pyCharm	40	141	281	177	632
inf	6	86	12	130	910
ing	2	116	145	573	531
Containers	78	204	456	355	944
inc	10	21	275	167	769
labels=False	64	157	74	551	956
np.generic	3	220	329	514	720
Centered	38	206	282	209	837
trials	21	190	234	576	326
eastern	95	268	443	322	586
Yesterday	50	264	292	210	747
lookup	65	265	158	522	207
Ashwini	4	121	264	646	500
matplotlib.dates.datestr2num	65	63	68	426	745
overwhelms	10	272	118	44	863
=-1	27	35	334	28	201
1km	39	170	266	733	562
sys.prefix	15	112	184	308	630
in0	90	297	26	212	273
in1	44	195	4	617	486
in-	71	43	131	251	959
MACD	38	298	495	209	177
noninteractive	93	203	128	123	55
vein	4	17	254	252	81
MACH	95	298	419	686	497
ghost	12	43	235	498	563
.strip	86	89	163	340	66
Py_DECREF	29	218	447	570	450
non-scientific	47	57	167	697	732
apertures	81	6	266	200	949
470	21	223	234	557	252
pytz	67	151	327	354	334
qdist	78	204	239	391	456
OOP	13	23	212	118	727
475	54	3	298	318	158
479	21	223	274	297	252
defend	13	232	65	257	53
sleep()	29	218	128	236	55
Graphlab	38	168	126	341	353
lognormal	77	214	132	147	4
downvoting	18	15	45	472	265
aliased	15	135	319	735	957
child	29	218	183	359	803
desirable	12	152	147	334	604
norm.ppf	60	219	403	725	484
your_element	6	100	456	355	888
completition	40	141	281	76	632
extrapolates	72	165	15	235	301
controversial	88	152	5	145	53
Zoomed	59	52	450	209	884
reverse=True	74	293	54	690	640
aliases	2	193	181	145	195
diag()	60	296	280	431	485
-C	85	195	13	617	597
contiguously	71	188	122	702	450
speeded	10	202	37	225	990
Vince	24	109	394	444	870
automatize	2	229	457	785	338
flu_test	64	150	256	551	48
datetime64s	94	63	68	426	452
bike	79	228	206	621	713
sped	10	202	118	225	990
df.Age	53	139	51	234	945
whack	59	52	389	143	835
coercions	12	94	393	75	564
shoot	88	232	232	35	53
lecture	13	224	372	94	689
Workbook	71	153	86	638	561
month	99	140	453	109	94
logarithmically	5	288	270	19	301
pyplot.imshow()	22	248	495	199	627
tagging	13	225	490	170	81
format()	65	40	81	15	709
non-ASCII	61	230	443	767	909
cashflow	79	78	487	101	955
pinch	39	149	235	93	102
thoughtful	24	109	394	444	867
cwd	36	132	489	384	942
red	59	4	427	32	198
fit_transform	43	256	186	341	646
reinvent	13	42	5	125	219
unsharp	22	248	7	141	670
LopNr	48	123	486	197	653
chew	50	232	232	35	863
pop-up	93	154	188	427	2
-S	55	112	330	57	568
Letters	48	123	51	339	682
find_objects	31	94	7	152	670
Squaring	14	86	275	431	238
d.csv	71	153	50	423	108
------	54	271	368	429	797
specs	57	193	342	697	371
Available	95	271	387	686	38
deliberate	12	152	147	145	908
item2	49	123	486	631	511
item1	49	123	486	448	511
consequent	2	21	275	174	702
Visual	67	163	152	241	850
roundoff	14	86	314	325	84
zoomed	59	154	188	427	203
officially	35	122	156	9	376
crunch	13	246	126	203	765
.dtype	53	18	141	682	969
module-level	15	135	181	777	406
faceting	59	23	126	51	710
-g	55	128	293	52	56
Lunum	13	26	63	118	398
Azure	84	119	2	607	377
u'index	53	181	42	250	624
LuaLaTeX	93	230	315	767	909
Matplotlib's	31	23	495	199	627
np.matrix()	3	94	14	15	235
simplecv	67	57	167	664	594
redondant	78	263	131	522	456
items	78	49	131	522	944
progressbar	29	187	128	764	954
bitmask	2	49	131	522	36
texlive	55	151	167	499	372
browsing	50	264	120	75	564
underflows	14	86	314	325	84
Bingo	24	109	229	140	870
.todense()	44	292	64	348	218
stripped-down	57	235	463	450	766
w_i	85	241	132	783	142
Jet	22	4	294	653	271
top=	46	226	494	757	339
highly	13	26	389	118	867
hindsight	24	200	179	567	67
bm	85	195	272	5	584
total	21	190	234	557	176
ftol	77	98	458	396	438
serializing	71	188	122	359	450
anti-aliased	59	117	5	32	54
-t	36	112	276	288	558
motivate	18	225	5	144	53
negative	14	86	314	391	84
Reported	53	139	256	417	775
`''`	61	58	452	539	501
self.end	90	54	257	332	995
-q	55	112	276	57	128
z-1	68	201	426	617	62
compress	71	153	145	423	457
zeroes	6	68	12	130	910
-s	55	112	276	57	128
Hamiltonian	77	42	48	195	416
stylelib	55	132	330	477	568
one-based	12	111	147	369	77
award	18	15	45	472	922
aware	12	59	134	630	907
Series.isin()	65	157	14	15	709
dirichlet	77	98	132	783	162
zeroed	34	263	25	122	979
cured	50	264	60	697	625
must've	50	200	114	35	64
3200	21	223	324	397	252
midi	85	298	419	467	192
np.isreal	3	40	14	15	172
transparency	59	4	433	134	608
to_replace=	86	89	163	85	66
Groups	69	162	191	789	739
INSTALL	67	132	352	604	798
qgrid	35	23	90	97	537
ax.set_ylabel()	31	13	383	592	709
validates	71	57	429	697	59
550	21	223	234	557	252
SIFT	22	248	7	141	670
mcve	57	235	463	37	607
\W+	86	89	163	85	66
colorcycle	45	13	457	335	879
imprecision	14	86	314	325	84
df.index.name	45	47	74	269	73
Scikit	38	168	186	26	353
iso-8859-1	52	129	443	36	906
str4	53	139	42	417	199
one-liners	88	257	61	458	612
2.2	91	108	23	579	322
rookie	11	120	179	739	67
beach	39	126	235	93	586
str_	3	94	329	663	235
after	47	37	292	699	59
x_min	41	6	289	282	810
scipy.ndimage.interpolation.rotate	39	126	7	199	907
FrozenList	3	220	329	540	890
A.indptr	74	195	4	586	228
-pthread	55	128	293	52	56
str}	52	10	376	137	971
hasty	24	200	490	504	991
Curves	38	206	495	209	71
no_data	27	259	431	28	945
encompassing	39	21	233	251	177
.diff()	64	150	256	72	390
results.csv	78	49	50	98	262
cumulative	81	214	173	784	603
set_clip_on	45	13	334	269	866
Diziet	24	121	394	140	500
x.ix	53	139	13	239	775
MatplotLib	38	23	495	209	537
tiffs	22	90	246	726	942
Tips	11	193	372	387	114
nets	13	183	48	195	765
monotonicity	77	42	38	652	738
float()	63	44	199	688	341
highlights	57	152	60	532	120
encapsulated	2	215	329	514	720
cxFreeze	67	57	44	384	305
workable	88	257	61	334	612
mydf	53	281	74	682	779
create_plot	31	40	444	236	444
encapsulates	2	193	491	174	417
versus	47	21	37	534	783
PDF's	81	126	495	203	177
Analysis	38	210	151	94	689
band	20	126	7	709	317
bang	18	232	232	407	64
docids	65	144	158	540	944
python27.zip	55	128	52	477	56
**kwargs	31	40	444	592	444
bank	79	78	450	101	955
set_powerlimits	46	148	363	558	958
one-to-one	81	21	131	442	563
pyplot.errorbar()	31	13	383	592	879
markerscale	5	13	388	134	608
rocks	24	109	229	444	870
deficient	60	194	280	431	485
improvements	11	272	389	225	990
f.readlines()	36	174	489	712	262
+C	85	201	426	560	192
+B	85	195	13	617	744
lifted	57	235	342	478	950
sandboxed	7	119	63	516	850
dtype=None	52	185	28	121	793
logp	77	98	458	783	162
.mainloop()	29	187	104	537	803
df.id	53	139	51	448	821
mangled	50	264	393	75	564
logx	46	35	289	176	810
logy	46	14	383	568	649
logg	74	100	291	448	148
mtrand.pyx	37	250	27	187	194
df.ix	53	95	115	239	227
+T	90	54	13	617	744
logn	96	29	356	327	668
logo	93	61	315	99	54
mangles	2	215	457	335	621
vmin=	46	36	294	653	488
+\	86	89	163	211	66
+c	96	201	426	560	13
+b	41	201	426	560	13
+a	68	201	426	223	62
+f	68	32	257	545	62
+d	96	201	426	560	13
+j	90	297	4	509	228
.deb	67	151	470	604	732
hooked	50	232	183	697	959
train_df	53	95	115	239	227
medicine	79	228	487	498	675
+z	68	201	426	560	62
+y	41	201	426	560	13
+x	41	201	117	751	13
vectorization	76	272	118	169	990
log2	96	75	314	173	758
pd.Series()	64	139	74	551	390
standard	47	21	392	91	338
operator.mul	34	40	14	15	709
Fiona	13	26	63	97	537
__setitem__	3	220	329	663	720
column_stack	42	30	286	74	595
palette=	46	39	260	505	858
Unalignable	63	44	199	582	39
standart	77	42	126	203	738
created	2	215	328	98	187
++	7	51	428	215	915
traceback	57	37	421	37	451
shunted	78	263	25	122	714
+-	96	160	274	751	326
dpi=600	46	35	117	751	619
creates	2	215	491	174	702
+2	68	32	289	397	810
+1	24	109	229	444	870
+0	14	291	201	266	969
+5	96	288	324	397	810
+4	96	266	324	397	421
home-made	13	246	126	203	765
Interpreter	40	141	259	110	402
+8	99	186	318	372	361
+=	74	297	26	212	273
daunting	88	120	5	334	695
1.20897E-06	54	50	300	331	299
urllib.request.urlretrieve	86	129	485	193	858
colormapped	22	4	381	438	672
meshes	72	165	15	733	301
thick	59	117	433	32	714
some_id.astype	63	44	199	582	172
Immutable	3	94	329	514	890
re-size	29	154	188	427	203
numpy.core.arrayprint._line_width	15	132	352	384	568
Clang	7	163	152	326	850
nomenclature	13	152	212	144	765
observations	81	147	173	101	675
lexsorted	94	111	75	369	921
5-10	21	190	234	557	42
11979	54	204	257	332	126
streets	79	228	487	480	285
5-15	21	190	234	557	326
happily	47	232	232	91	439
Quoting	35	193	19	478	114
inexact	14	86	314	325	84
propogate	94	155	456	405	160
Edge	38	79	41	400	234
grouped.apply	64	150	10	772	838
corresponded	74	100	131	355	283
tripolar	39	149	279	766	573
WORKED	24	109	229	444	870
Gene	48	123	486	276	502
simulation_cycles_geomean_df1	46	39	74	46	172
scenes	76	94	147	257	417
plt.legend()	31	203	348	123	55
minus	78	263	314	86	238
np.fromiter	42	27	81	648	311
scikits.cuda	7	57	167	697	732
%inline	3	67	261	312	235
navigate	40	141	429	604	632
np.datetime	3	18	162	266	470
convience	94	222	147	369	160
stalls	29	218	128	764	954
cythonized	76	202	103	225	169
Christian	4	121	264	646	500
__new__	3	220	483	663	235
plot.py	15	132	352	384	305
latter	47	0	134	91	908
np.deg2rad	15	135	319	313	957
realy	24	59	114	140	469
time-domain	20	93	425	191	344
luxury	13	229	393	306	713
transmit	71	246	90	609	600
correlating	81	21	258	203	576
reals	14	98	38	279	238
scikit	77	168	186	705	646
np.digitize	42	27	297	171	833
Temp	85	298	419	467	497
boxcar	20	93	382	191	989
np.asarray()	29	188	447	236	581
Computers	38	298	282	519	38
plt.axes	46	284	255	577	430
involving	76	48	61	630	734
exercises	13	120	126	94	727
Patient	48	123	159	339	502
Went	24	109	229	567	469
date-times	61	153	162	423	260
gridding	72	165	270	733	301
webcam	22	248	58	571	722
pyplot.subplot()	31	52	383	51	710
calculated	81	21	275	98	187
Dynamic	69	179	169	61	436
nearest_points1	78	204	195	178	637
voting	18	15	45	472	922
AttributeError	63	44	460	172	787
responded	18	15	45	472	922
returnsDf	90	297	4	239	182
Monitor	84	127	2	410	580
learner	13	120	212	739	727
df.pivot_table	64	287	406	631	294
Hadoop	71	171	303	445	457
keywords	31	13	388	134	879
co-occur	78	144	195	27	944
Anne	47	0	392	91	338
enjoyed	13	120	212	35	727
European	99	78	450	101	27
arbritrary	2	265	456	405	356
painfully	10	272	114	334	695
Released	95	271	50	686	713
implementation	76	51	65	169	950
subplot_adjust	5	284	253	757	339
hrs	99	160	274	198	326
cairocffi	93	57	167	499	732
deepest	2	218	181	167	769
hre	81	145	181	371	845
adequate	88	17	61	630	612
day-by-day	81	147	126	203	765
HDFStores	71	26	126	702	457
01.01.2011	54	69	119	158	126
Quick	4	17	254	710	237
nasty	88	152	301	618	695
prefaced	12	152	490	170	81
Rotation	69	162	191	209	837
11025	21	223	239	45	943
Warping	38	206	282	264	698
mylist	74	233	54	690	526
covering	59	117	235	32	177
idioms	76	257	138	118	730
TimedAnimation	31	1	444	236	444
idx.shape	90	293	4	586	228
strip()	52	58	452	589	240
filtfilt	20	93	382	742	396
pointers	11	173	389	312	867
Functionally	2	215	147	145	908
re-plotting	59	52	348	51	54
miserably	77	183	301	697	905
term1	20	170	425	507	344
w+	36	10	136	712	261
w*	96	29	18	173	62
w3	85	201	426	560	391
projections	39	149	279	199	586
w1	85	172	481	560	391
GBQ	38	57	303	268	92
Reply	30	218	55	646	500
w=	96	266	324	391	421
GDPs	79	144	487	276	944
Maverick	84	57	167	301	321
test_data	74	256	74	668	994
csv_read	61	49	222	539	260
Water	95	181	373	185	517
unable	50	264	393	75	564
GBs	21	190	355	159	359
fig.transFigure	5	148	30	298	348
GBy	24	109	394	140	469
we	47	21	392	91	338
wd	41	6	177	180	949
terms	12	272	134	44	908
wb	36	10	136	712	261
wa	21	188	355	64	212
wo	46	39	73	316	649
wn	20	93	425	391	344
#print	68	32	117	545	486
wl	41	6	177	107	397
wk	55	128	293	52	325
wi	41	6	177	107	142
wh	74	233	54	690	172
C-contiguous	34	188	361	404	77
wv	14	100	46	325	482
wt	85	298	419	467	653
ws	41	6	177	107	397
wp	74	6	177	107	211
convertible	3	18	162	426	470
projection=	46	199	189	16	488
linkage	60	79	472	152	662
Extracting	69	31	100	530	911
yearMonth	99	281	68	48	687
didactic	24	109	229	140	441
selective	4	17	254	630	441
Convex	38	206	282	722	71
exceeds	21	170	266	588	576
Conversely	47	222	457	306	160
.pngs	59	52	495	51	54
sigmoidal	77	98	231	147	738
offloading	7	51	345	169	990
Kaggle	71	239	372	94	852
0.1s	10	160	274	323	655
oblivious	50	152	60	697	625
ActiveState	67	151	210	604	104
bcoords	74	6	108	586	577
weave.blitz	7	277	428	215	915
np.vectorize()	42	27	14	15	709
Seemingly	38	206	282	722	353
mp.dps	14	86	314	325	549
there're	88	263	61	630	31
comprehensions	65	233	81	648	311
white-spaces	61	49	456	405	713
Disabling	50	263	301	618	625
1984-12-12	54	69	119	158	126
__len__	3	220	329	663	720
from_product	43	157	72	683	956
0.14	91	122	156	587	626
0.17	91	122	156	587	626
0.16	91	122	156	587	626
Savitzky-Golay	72	98	382	235	989
0.10	91	122	156	587	626
0.13	91	122	156	587	626
0.12	91	122	156	587	626
backfilling	43	116	456	706	356
0.19	54	108	23	579	399
newData	90	297	13	10	744
min_of_neighbors_coords	41	6	177	396	622
applied	2	215	328	98	187
zlim	5	148	253	19	479
aix	4	121	264	646	500
publicly	35	239	63	516	594
launcher	40	141	77	76	632
launches	40	141	281	76	632
repack	71	153	145	702	306
zlib	67	163	152	418	872
blue-green	39	117	29	32	116
air	39	268	206	322	949
color.py	15	193	214	384	108
numpy.test	15	112	184	103	630
Invoice	95	138	159	168	497
applies	2	215	491	174	621
aid	11	232	143	97	652
3.10	91	57	167	499	732
property	31	1	388	514	720
pykdtree	7	51	428	215	957
inspired	4	17	254	670	552
launched	40	141	281	76	632
x.sum()	27	269	10	772	838
losses	79	78	173	480	955
NotADirectoryError	15	176	44	696	823
a_list	44	195	137	5	228
.3f	86	129	465	137	347
skipping	2	263	338	616	531
paste-able	57	235	463	183	800
secondary_y	5	14	383	568	710
qgis	67	57	167	697	732
v1.10	7	163	167	418	732
caffe	71	57	429	384	791
C.shape	44	227	228	0	357
incorrectly	47	215	292	210	747
np.split	42	30	286	358	146
hierarchies	88	152	147	144	604
hhh	74	233	54	690	424
syntax-wise	88	257	61	675	612
Distance	38	270	472	264	662
multiindexes	43	265	72	771	356
disagreement	57	235	490	450	81
np.fill()	47	59	14	699	835
possible	88	48	392	630	31
Voronoi	39	79	41	152	102
multiindexed	43	265	75	771	356
SSE4.1	14	291	142	325	549
.30	78	204	148	87	522
.33	41	266	324	695	421
prescribed	81	21	266	588	283
Addressing	4	17	254	710	81
dt.dayofweek	43	157	72	683	956
new3.py	37	250	27	475	194
contact	18	246	232	609	805
pyshared	55	128	52	151	372
chr3R	90	54	257	338	361
flux_tg	75	227	385	385	486
unified	76	94	138	9	720
Conversion	69	31	100	530	316
stringent	12	183	291	458	148
data.max()	96	35	289	176	810
gods	11	173	143	739	727
FigureCanvasTkAgg	29	203	104	537	728
mandelbrot	93	246	495	571	54
datetime.datetime.strftime	86	274	10	679	151
.data	74	293	361	212	273
non-stationary	20	93	409	783	84
Spronck	24	121	264	646	500
farther	39	170	235	44	576
a.combine_first	64	47	406	551	779
average_emission	48	123	486	339	779
visualization	13	23	126	203	765
builtin	65	94	81	735	31
ax1.grid	46	35	289	592	430
utilization	76	218	183	359	169
fictive	39	48	235	199	177
board	50	232	235	91	212
marginal	81	214	132	783	4
featured	13	26	63	118	398
emphasis	4	193	372	387	219
rnk	85	201	426	560	192
boxed	59	117	433	32	714
DataFrame.loc	43	111	72	369	227
XCode	67	151	210	326	104
325	96	266	289	187	421
progressed	50	264	393	75	564
Morning	54	204	257	338	361
Try	47	0	237	678	9
boxes	59	117	433	32	714
ignore_index=False	49	47	406	631	73
progresses	20	246	206	195	949
Presuming	61	43	131	355	944
glitch	50	48	301	618	120
1-indexed	61	263	338	616	77
scipy.interpolate.interp1d	72	165	15	235	570
matplotlib.path	15	135	319	199	873
Multi-Index	69	265	75	789	921
method's	3	193	19	514	371
QT.T	44	194	137	704	598
Agreed	4	17	254	710	441
.multiply	27	292	64	348	218
glob.glob	36	10	489	712	261
automagically	2	215	457	335	621
pos2	74	6	239	67	22
dtype=complex	75	227	385	0	486
pos1	74	293	26	107	22
CANADA	95	181	373	211	428
do-it-yourself	76	257	61	169	612
N-dimensional	34	77	0	73	694
perceptron	77	168	48	195	416
Downloads	55	132	82	477	568
my_new_timestamps	81	43	238	733	629
draw()	29	203	348	123	55
read-only	71	220	447	359	450
denied	63	176	397	696	136
beating	50	120	114	35	64
100x1000	85	205	258	88	943
nonuniform	59	126	495	546	177
172.320	86	129	465	211	496
pose	18	225	490	170	81
illustration	57	235	342	450	950
constructive	18	225	45	527	265
post	57	235	463	37	451
takes	10	160	491	174	655
obj	3	220	54	157	172
months	99	140	453	109	94
accepts	2	215	491	174	709
numpy.hstack()	42	30	14	706	595
obv	47	59	392	91	469
obs	78	144	195	198	944
net.blobs	53	95	272	239	779
Canopy_64bit	55	128	52	477	568
mathtext.py	55	132	330	113	568
log-scale	59	52	32	19	884
float	14	291	162	325	549
np.r_	42	30	286	74	368
bound	12	170	409	44	576
matplotlib.scatter	31	13	294	97	271
report_date	48	123	486	339	653
REPL	40	141	281	76	632
Shouldn't	47	0	392	143	835
Judging	57	193	60	478	371
axes3d	31	13	388	205	372
pandas-specific	88	257	61	630	31
allways	50	263	301	618	625
strangely	47	37	292	210	59
wan	22	0	7	630	835
opcodes	71	218	183	359	959
memory-intensive	88	257	61	334	612
mutates	74	220	361	212	273
people	18	225	5	144	219
AxesImage	31	1	388	399	444
2.68530063	14	100	108	586	283
SHAPE	53	139	256	489	199
way	88	48	61	675	31
left=	46	284	494	757	339
axes3D	59	52	495	199	177
wav	20	248	58	428	593
was	50	264	292	210	747
decoded	61	248	443	423	593
matlplotlib	93	187	188	51	2
becoming	88	152	114	334	604
converse	12	170	409	44	562
Empirical	60	214	132	147	4
System	55	128	259	110	372
mysterious	50	152	114	284	120
decodes	61	58	336	539	260
groupby-filter	42	27	14	313	244
if_exists=	52	185	473	343	369
true	12	100	95	355	148
Left	69	162	445	122	979
bypassing	76	48	118	573	531
03:39	54	186	287	338	361
high-quality	38	23	382	722	989
SOLUTION	30	212	365	136	965
entails	12	183	5	630	371
fig.get_size_inches()	90	284	255	577	430
colorsys	22	248	381	141	722
anew	47	232	457	335	180
Dask.array	76	94	122	169	734
list3	74	110	54	690	526
emit	29	187	183	149	600
promises	76	272	118	169	612
Raster	71	248	495	209	177
syscall	29	218	183	359	803
));	75	227	385	425	486
)):	75	32	54	690	486
))'	75	32	385	425	486
lumped	34	116	131	706	986
promised	88	225	5	419	53
))"	75	243	260	425	858
Pclass	53	139	42	417	775
simplest	88	48	61	675	327
scipy.ndimage.interpolation.affine_transform	22	248	7	571	722
time-wise	78	100	95	546	283
stucked	50	120	212	284	727
commented-out	3	40	444	15	709
numpy.int32	3	18	460	172	969
truncate	2	263	162	306	260
ScipySuperpack	67	151	470	604	156
welcome	11	173	389	763	867
notepad	40	141	281	769	632
weirdest	12	37	301	699	120
GeoJSON	39	126	214	571	573
belive	76	17	134	630	31
FORTRAN	7	51	65	2	730
))`	75	227	385	425	486
Py_INCREF	31	220	444	236	444
configs	40	57	222	697	315
cpdef	3	67	261	146	498
1-mat	44	256	251	586	994
__main__.Node	68	32	460	234	624
))]	75	32	13	545	585
"])`	86	150	260	455	496
Prediction	53	123	51	448	821
pd.np.nan	53	139	51	417	821
y's	41	6	131	107	336
precedent	35	193	19	387	732
df_org	78	144	195	178	637
_Execute	30	40	444	236	314
macosx	93	80	315	435	591
brownian	39	126	48	195	416
HYRY	4	121	264	646	500
grateful	11	173	389	763	867
Sb	85	174	419	467	192
PuLP	77	42	38	279	809
certainly	88	59	5	334	604
factories	76	26	65	257	195
Bold	59	230	448	767	909
absolutly	47	59	392	210	469
np.int32_t	3	291	141	266	969
pythonbrew	67	57	167	499	732
atribute	34	49	328	514	787
compensate	12	170	284	245	576
jvm	55	128	330	477	461
Uxyz	68	54	370	617	744
execute()	65	171	473	128	88
division	14	86	314	325	238
predicate	34	100	291	18	148
ObjectId	71	153	162	60	260
RPT_Date	48	123	486	606	255
_configtest.exe	63	50	98	158	572
.bmp	93	61	315	571	593
entries	78	49	131	522	944
trilinear	72	165	15	152	102
c_int	3	67	261	157	498
np.maximum	42	269	137	313	244
perceived	22	4	433	438	198
Just	47	0	392	678	544
presented	4	17	342	252	59
jonrsharpe	24	121	264	646	500
892	61	5	338	616	898
discrete	20	214	270	147	4
.ix()	94	111	115	369	227
three-dimensional	34	77	0	73	943
']]`	53	95	272	250	775
Tableau	71	171	303	60	457
initializes	2	215	491	174	702
initializer	3	220	444	541	444
Okey	24	109	394	140	870
Infected	95	123	373	339	82
boxplot_stats	47	0	233	306	338
Finding	69	31	100	530	911
initialized	2	215	328	98	187
curse	13	120	212	697	53
pd.read_fwf	52	185	28	121	971
numpy.unique()	42	48	14	630	244
__file__=	55	128	485	193	325
havoc	2	152	301	618	120
wolfz	77	124	458	324	438
douban_info	53	139	51	339	779
irritating	88	152	138	334	695
sequential	2	21	131	708	944
Imaging	22	248	381	141	722
Imagine	47	21	258	98	927
illustrations	93	61	315	99	54
time-consuming	10	272	118	225	863
Along	47	21	233	678	544
appeal	12	225	5	458	606
Categories	48	138	159	197	653
Miniconda	67	151	210	351	104
']])	53	150	256	250	775
Brilliant	24	33	229	140	870
matplotlib.pyplot.plot()	31	13	383	592	710
math.factorial	14	29	46	408	549
5pm	99	140	453	109	94
Slope	95	298	335	168	428
incoming	71	246	58	428	600
coerced	3	18	162	15	470
INT	61	49	335	198	260
do_plot	57	40	444	396	709
coerces	3	291	162	15	470
CC=gcc	47	174	50	751	338
poisson	77	214	132	147	4
usually	47	0	392	91	604
INF	6	68	12	130	910
convertor	71	153	50	423	108
ipython-qtconsole	40	141	281	76	632
toarray	3	292	64	348	218
applymap()	43	157	103	750	956
npyio.py	37	250	475	314	173
yticklabel	59	52	32	51	884
.add	64	150	406	72	48
fig.clear()	29	203	348	123	55
bitwise_and	3	44	95	15	341
penalized	12	183	409	44	905
a.ndim	44	227	228	0	263
todayorders	74	233	88	690	526
prove	12	59	232	144	53
BSP	72	43	235	152	102
borked	67	132	301	664	315
BSD	7	163	63	516	850
selects	2	111	491	174	702
Mon	99	268	318	34	789
sklearn-pandas	60	168	186	705	646
F	85	174	419	5	192
Inspired	4	17	254	670	552
cramped	59	52	32	32	714
LOAD_FAST	10	160	263	323	655
5x5x5	34	77	0	73	943
font's	5	230	284	245	479
cax	5	284	255	577	430
isapprox	60	194	137	431	598
Dm	96	201	426	560	142
car	79	228	206	480	675
cap	59	117	25	122	979
Lien	79	140	487	686	517
cat	48	174	373	647	682
manage.py	40	119	429	697	377
hardest	13	120	114	35	727
renders	93	61	79	174	54
can	47	0	392	143	338
cam	13	246	58	609	600
cal	94	281	225	788	390
cab	44	143	215	5	37
heart	12	232	235	419	53
SCREMATO	54	108	23	8	931
ax.bbox	46	203	348	577	430
pd.datetime	99	186	257	338	390
noobie	11	120	212	739	727
topic	18	225	45	527	509
heard	50	264	393	75	747
0's	6	68	131	64	910
-like	65	94	375	145	631
unphysical	39	117	433	322	198
rescaling	5	170	284	245	479
eigvalsh	60	296	102	431	751
comma-delimited	61	153	50	423	108
redundancy	12	272	118	44	863
,.	68	266	287	730	797
,,	1	186	300	338	139
exceptional	12	152	147	458	621
freezes	29	187	128	764	954
.sum()	64	150	256	197	48
freezed	40	187	128	764	954
,?	86	89	163	299	66
dominance	34	77	396	404	694
a.flatten()	90	293	26	509	228
Always	47	225	5	567	53
residues	85	270	238	783	738
nearest-neighbor	72	165	15	235	570
pasting	57	239	463	769	975
deviates	20	170	409	783	162
Legendre	77	98	458	324	438
View	69	162	259	281	402
na_rep	52	185	28	24	793
Pareto	77	214	132	147	4
Bottle	71	171	303	609	92
myfft	96	266	18	617	597
int64's	94	63	68	426	452
EPSG	39	149	279	298	573
Opening	71	153	50	423	316
accelerated	7	51	345	169	166
400MB	21	127	355	159	359
object's	31	1	329	514	720
generalizable	88	257	61	334	612
deactivated	67	132	352	664	137
cross-spectral	20	93	425	191	344
displayed	59	215	328	98	54
np.einsum()	76	17	14	313	441
130.81	20	170	409	507	84
np.cumsum	42	269	403	358	244
statistical	13	183	126	203	765
odeint	60	98	458	279	438
prune=	46	226	494	134	348
mixup	50	200	490	210	469
\r\n	36	58	136	137	66
Mark's	24	200	490	710	441
summands	10	170	314	44	84
Compress	78	174	275	522	682
vicinity	72	165	15	733	570
Flier	95	204	373	168	361
forms	13	21	131	203	734
yaml	71	153	336	514	957
ntri	34	205	251	196	943
return_inverse=True	42	27	349	358	833
Wait	24	200	493	468	991
np.exp()	60	29	458	396	622
easly	47	57	167	499	732
pass-by-value	13	94	65	145	195
x-mean	96	201	426	173	13
1954	99	182	453	109	94
pandas.plot()	31	203	348	592	55
tails	77	214	132	147	4
1950	99	182	453	109	94
1953	99	182	453	109	94
regplot	31	14	383	568	710
ndindex	42	27	286	358	368
unused-command-line-argument-hard-error-in-future	55	112	276	57	128
organ	95	228	335	621	517
scipy.cdf()	11	48	389	763	867
january	99	140	450	109	94
.draw()	29	203	348	123	55
intrigued	50	120	114	35	727
django-celery	13	26	126	407	92
unselected	6	68	456	355	910
mailling	35	193	372	71	594
domain	20	93	425	191	344
Perf	79	49	487	480	517
arg1	3	35	154	157	314
arg2	46	35	117	176	314
subprocess.call	15	135	281	288	632
Perl	13	26	63	2	730
cross-validate	77	168	186	705	646
u'Other	53	139	42	250	624
happen	47	0	301	91	835
pills	39	126	7	498	670
album	22	4	433	32	177
shadowing	15	135	181	777	195
looking	47	59	392	424	907
minorticks	5	288	32	19	884
oldval	49	226	254	59	441
Threads	29	218	345	445	803
rational	14	86	314	325	238
side-by-side	59	52	233	434	740
random.choice	42	27	81	725	244
carr	3	67	261	146	235
cars	79	228	487	480	675
args	31	40	444	396	314
argv	15	135	319	777	406
argh	24	200	493	504	469
inputting	2	116	328	98	531
obligation	18	225	5	419	53
card	84	119	2	609	212
care	47	0	134	91	621
zig-zag	39	149	438	69	116
SnaptoCursor	50	40	444	236	444
pandas-y	88	257	61	675	327
prettyprint	45	57	162	9	906
selections	94	111	147	369	160
stacked=True	46	14	383	505	649
nMSLINK	48	144	195	787	502
gi.repository	93	57	167	697	732
as_strided()	42	27	286	358	368
Linked	69	193	233	251	114
libatlas-base-dev	67	112	327	499	334
xj	68	195	13	617	62
xk	96	201	18	28	142
xi	41	6	177	282	397
xn	41	172	481	243	808
xl	36	10	489	712	262
xm	41	172	481	243	808
xb	41	195	185	107	662
xc	3	195	4	509	228
xa	41	195	185	107	577
xf	44	30	361	5	598
cpus	7	127	345	445	166
xd	75	32	385	425	486
xe	41	6	177	107	397
xz	39	149	438	93	573
axarr	90	203	255	577	430
xx	41	6	289	282	397
xy	41	6	438	107	573
directly	2	0	457	91	439
x}	68	32	431	28	945
accelerometry	13	246	206	167	852
xs	41	6	177	282	397
xp	41	6	177	282	571
drove	50	152	114	284	120
xv	41	293	251	509	397
horizontal	59	52	32	32	884
xt	75	227	141	266	969
plot_test	55	132	330	384	568
ax.plot_surface	46	36	73	282	397
checked	50	264	292	210	59
Vertical	69	162	191	209	837
figaspect	46	203	348	577	430
crossings	20	93	231	709	562
notational	76	94	65	169	417
xD	18	200	179	739	67
_some_	13	23	138	118	264
checker	6	94	95	18	189
Notebook	40	141	281	76	632
x^	96	201	426	560	13
milage	10	202	37	323	876
libblas-dev	67	151	327	499	334
x+	41	201	10	772	838
x-	5	288	32	19	479
cup	79	78	206	407	852
workstation	84	127	2	410	580
centroids	39	43	41	152	234
x%	59	117	433	32	198
x8	41	172	481	243	808
.copy()	27	95	361	212	273
FIPS	48	123	486	339	779
Z-value	78	49	266	98	603
x=	46	39	73	505	649
x2	41	172	481	243	808
x3	41	172	481	243	808
x0	41	172	177	243	808
x1	41	172	481	243	808
x6	41	172	481	243	808
x7	41	172	481	243	808
x4	41	172	481	243	808
x5	41	172	481	243	808
100x200	22	126	258	45	943
browsed	50	264	393	75	564
']))`	53	150	256	250	775
df1.A	48	123	486	178	637
df1.B	48	144	195	178	637
#eeefff	86	129	465	36	906
decompose	34	103	280	431	485
visit_names	53	123	51	339	779
troublesome	57	57	301	697	604
np.delete()	42	27	14	750	207
N-dim	76	42	61	630	612
replace=False	75	243	431	725	484
Patching	15	135	330	205	417
anytime	35	0	232	419	53
distorted	59	117	433	32	562
Main	30	271	237	281	114
slab	39	43	266	733	949
numerics	14	94	65	325	549
vectorized	76	257	61	169	734
regenerating	2	116	50	335	180
Column	69	138	191	789	739
data_list	65	233	158	522	526
concatenated	34	49	328	706	986
Gensim	38	57	282	722	353
vectorizes	34	30	137	566	207
vectorizer	77	168	186	705	646
rationals	60	42	38	279	238
set_dashes	31	13	388	592	879
SPX	48	123	373	339	682
price	79	78	450	762	955
get_children()	31	1	388	399	879
toplevel	29	135	181	777	873
.grouper	64	150	256	197	48
exploited	76	94	158	327	734
rationale	12	152	143	257	606
successive	81	21	131	167	944
]	90	297	13	10	585
forever	21	160	234	167	655
achive	47	48	392	675	360
pool.imap	10	218	14	359	709
multiprocessor	76	218	345	445	803
Preface	50	57	292	697	59
duplication	12	152	145	524	531
typically	47	0	392	91	604
numpy.set_printoptions	45	80	334	269	913
2186	54	69	119	155	126
'"'`	52	185	28	121	793
rambling	18	120	114	419	67
ndtype	3	18	162	514	890
24x24	34	126	7	45	943
bigfile.csv	86	129	376	137	906
fifty	21	190	234	557	326
2095	54	50	119	158	277
-bravo	24	109	229	444	500
.imshow()	31	13	383	592	627
whatsnew	35	122	19	292	376
2099	95	181	368	429	277
logfile.txt	36	37	50	43	364
fifth	78	49	338	616	456
.pivot	64	287	406	631	294
pivots	43	265	75	706	356
upgrade	91	151	327	232	230
scipy.optimize.root	60	124	458	279	438
P_welch	96	266	31	391	236
DATAFRAME	30	212	55	429	965
only	47	21	392	91	338
ax.lines	31	1	388	399	879
example_df	53	139	51	417	128
phased	35	59	65	9	398
overwritten	2	215	328	405	187
scipy.ndimage.generic_filter	42	27	382	313	244
fmatrix	74	293	216	586	228
np.repeat	42	30	286	358	595
labelpad	5	148	30	134	958
truly	47	59	392	630	604
cannot	47	0	392	143	888
symmetrically	20	117	284	737	479
gensim	67	57	186	705	732
deprecate	35	122	138	292	376
pydot	35	79	167	97	732
ad-hoc	88	257	61	458	612
df_list	49	47	406	631	445
keyed	65	233	158	540	101
pydoc	65	135	81	735	439
collections.deque	65	27	81	648	311
CObject	3	220	447	312	450
unallocated	29	188	447	570	450
quickie	12	183	48	630	950
Nose	67	151	167	664	732
1.2GB	71	127	355	159	359
norm=norm	46	36	73	316	488
9.74401	54	50	368	331	19
c_id	78	144	195	178	637
physically	12	59	392	91	713
re-sample	81	147	270	733	301
numpy.ndarray()	3	220	460	15	341
2014-11-30	99	274	318	679	687
Kudos	24	121	394	646	237
hell	50	232	114	35	469
IsExpired	48	138	159	276	502
sport	79	228	487	480	757
ipywidgets	93	23	90	273	537
axHistx	46	148	494	46	430
n-array	34	77	0	73	336
palette	22	4	294	438	271
last_vec	29	215	447	212	406
figsize()	31	13	457	9	709
jdata.keys()	74	233	54	690	526
AllAlexaAndGoogleInfo.shape	68	227	154	545	486
0.16.2	91	7	417	587	626
\u0001	61	58	443	563	209
between	81	21	472	251	662
Shapefiles	11	73	214	406	867
vectorise	76	51	65	169	360
pip-build	55	128	293	52	325
scipy.interpolate.Rbf	72	165	15	235	570
Target	30	271	287	347	560
pic_1	90	233	54	10	995
ReadAsArray	34	77	0	404	694
blame	50	152	5	144	53
df.reset_index()	64	47	406	631	73
9000	21	190	234	557	252
Delaunay	72	165	15	152	570
pixels	22	126	7	45	670
np.e	96	29	18	173	13
installation	67	151	210	351	104
reinterpreted	14	291	85	325	549
varname	36	153	50	185	406
pertain	12	225	490	170	219
UNIX	99	63	68	426	27
PyArray_SIZE	3	67	261	157	498
Asynchronous	2	21	233	167	338
embedding	93	187	104	537	728
coefs	85	195	177	107	192
0.16.x	91	122	156	587	376
fromiter	42	27	81	648	244
someScores	78	204	337	405	502
Sir	24	33	229	140	870
overview	13	193	372	387	704
deviating	12	183	409	170	84
set_levels	43	47	72	683	73
PER	78	144	195	198	502
StopIteration	63	44	199	582	888
2pi	96	201	426	391	13
_points_	59	149	438	122	979
zero's	6	68	131	130	910
AutoDateFormatter	5	148	363	558	844
site.cfg.example	67	132	352	384	305
hour_list	46	35	289	46	810
2pm	99	140	453	109	94
Idiomatic	69	265	303	574	739
ddof	60	219	403	550	454
informed	12	152	5	419	53
homogenous	34	94	122	404	694
Stick	47	94	14	735	957
ax.hist()	31	13	383	592	879
linguistic	13	94	126	27	1
gaussian_kde()	60	219	458	742	738
as-is	57	235	342	144	451
Watershed	39	206	7	152	670
sourceforge.net	67	57	429	664	732
undestand	88	59	5	144	950
query()	43	157	72	683	956
ruby	95	232	487	480	682
these	47	21	233	251	338
convolve2d	60	296	382	313	396
accommodating	34	42	131	552	734
urllib2.urlopen	36	10	489	712	314
pertains	12	215	490	487	81
MATLab	2	49	131	522	262
eig	60	296	102	431	751
sub-processes	29	218	183	359	803
person's	79	228	487	480	285
2015-10-16	54	69	119	158	126
VolatilitySeries	65	220	329	663	720
modulename	15	135	319	777	823
orientation	39	149	438	93	479
zenith	39	149	279	766	573
00:19	99	2	119	525	256
sys.float_info.max	14	243	31	725	236
utils	55	128	52	477	461
MKL	7	163	428	418	166
agnostic	88	152	134	91	908
canceled	29	37	456	699	769
yj	96	201	370	391	142
loop's	10	272	118	225	863
TimeGrouper	43	85	449	48	817
asmatrix	42	220	361	404	273
edification	18	225	490	419	81
numpy.ndarray.flatten	42	27	14	313	439
key_mat	21	127	355	159	359
Line3DCollection	31	1	388	399	879
df.drop_duplicates()	64	47	406	631	48
yn	41	172	481	243	808
insidious	88	59	147	334	469
intelligently	2	229	457	306	621
figuring	11	120	114	35	727
followers	79	228	487	480	285
lite	71	171	303	203	92
dinamically	59	52	233	51	177
circulant	42	194	280	313	485
y-array	81	6	266	746	336
plt.polar	46	148	383	592	879
numerals	61	230	448	86	517
PyQT	93	187	104	537	728
closest	81	43	266	588	283
n-dimensional	34	77	0	73	694
na_values	52	185	28	121	971
Coors	53	139	42	417	775
200.000	21	190	234	557	42
np.meshgrid	42	30	286	282	397
favorites	13	26	183	609	765
e1cx	74	293	361	509	228
data_frame	53	281	74	551	975
Handle	69	162	191	127	837
validate	12	183	456	355	563
yf	42	30	361	404	709
']```	53	139	51	448	821
complained	50	264	292	210	747
PicklingError	63	44	460	582	136
dotted	59	52	433	32	714
ST.INT.ARVL	85	144	216	276	192
Offsets	69	94	233	426	452
severe	10	272	118	552	990
breeze	24	109	229	444	264
glorious	24	200	114	504	469
pool.apply_async	27	269	403	65	486
99.999	14	291	162	325	549
77	54	3	101	318	158
2.csv	36	10	50	751	262
transmitting	39	246	206	428	600
PRNGs	12	183	60	419	908
valuable	11	173	389	763	867
correspondences	78	49	131	522	944
ninja	11	120	114	35	727
np.flatten	42	27	286	313	244
data_files	45	132	352	113	315
QProgressDialog	29	154	188	427	2
76	54	223	298	318	811
Kubuntu	19	7	432	301	321
item_ids	78	144	195	787	944
rsplit	43	157	72	589	448
mirrored	20	93	425	191	344
numpy.logical_not	42	293	286	358	146
header_names	53	95	74	551	779
_want_	88	59	5	630	835
#URL	35	193	19	387	371
*sin	96	201	426	560	62
rules	12	94	147	145	734
ruler	59	52	188	427	177
repetitions	78	49	131	522	944
pandas.cut()	14	86	297	171	549
numpy.savetxt	36	153	336	137	306
opencv2	22	248	495	571	722
opencv3	63	57	199	582	59
bare_data.plot	46	148	363	46	430
listening	29	246	183	149	600
culprits	7	57	60	697	315
full-rank	77	194	280	431	485
lambda's	12	40	181	424	563
Smaller	21	190	258	127	876
autodoc	93	193	19	387	371
utterances	61	49	50	27	854
collective	76	272	118	225	863
infer_datetime_format=True	52	185	28	121	793
miracle	24	109	229	140	870
rolling_window	60	85	382	784	396
t	41	174	177	107	142
groupby-sum	76	265	145	574	356
multiplicative	77	194	280	431	485
tstOut	90	297	4	239	744
Marc	99	140	318	751	687
nlat	41	205	154	200	397
A.dtype	3	18	141	266	969
Mark	4	121	264	465	741
id_list	48	233	158	788	526
unraveling	47	263	145	566	520
Mary	95	181	419	102	741
Minimal	57	235	463	160	607
DataFrame.update	43	157	72	683	956
viral	81	246	206	428	949
venn	59	52	41	400	234
trisurf	59	52	495	199	627
views.py	40	132	90	384	92
replotted	59	154	188	32	714
JUST	30	212	55	136	965
fill=False	46	35	289	176	649
interleaving	50	116	145	706	986
ooops	24	200	493	504	991
np.percentile()	31	159	383	592	709
uneasy	88	120	114	284	727
numpy.ma.MaskedArray	3	220	329	514	235
leftover	50	263	60	618	991
16:37	54	69	119	158	126
np.multiply	42	30	137	74	598
throw	47	37	301	618	888
3.4.2	19	7	417	13	644
3.4.3	19	7	417	13	972
3.4.0	19	7	417	13	644
3.4.1	19	7	417	13	644
plt.fill	41	6	433	592	397
index_tricks.py	55	132	330	205	461
0.012207	54	50	368	429	449
piecewise	72	98	458	147	438
supervised	77	168	186	705	646
\exp	96	201	426	560	62
wold	11	173	389	143	867
sry	24	200	493	504	991
decimation	20	170	7	709	562
8.54	90	54	257	332	995
inclusion	35	183	409	9	162
non-GUI	93	187	104	262	728
numerically	77	98	38	279	809
RECL_2009	85	204	419	67	497
inverting	12	42	280	431	485
Bago	24	121	394	646	500
loc	43	111	115	369	227
log	96	29	356	639	825
Combination	76	179	169	574	145
opengl	93	23	104	97	537
removing	2	263	60	573	531
lon	39	73	279	766	573
lol	24	200	493	504	991
operator.itemgetter	42	157	81	648	526
uspind	74	6	272	107	778
binarization	77	183	409	783	162
lot	24	109	229	444	264
`)`	61	263	452	230	298
transitioning	13	120	212	364	727
multiprocessing.Pool.map()	76	272	118	169	990
0-dimensional	3	220	361	73	890
column_names	74	233	74	690	779
POSIX	71	63	183	426	27
Stale	53	95	51	339	779
scikitlearn	77	168	186	705	646
argmin	42	269	14	53	244
thicks	5	288	32	19	479
quantitatively	12	183	409	783	563
`))	44	205	251	196	357
fdata	53	139	51	612	821
get_sample_data	15	90	44	384	942
multiplications	34	194	280	431	485
Esp	11	225	389	567	371
packets	79	246	206	321	600
replicable	57	235	342	450	950
reliability	12	183	409	44	606
3-D	34	77	0	73	694
hospitals	79	228	487	621	675
BrenBarn's	4	17	254	710	441
alko's	4	17	254	710	441
numpy-1.8	94	63	68	426	452
Joran's	4	17	254	710	441
Column-1	68	266	324	67	421
brick-wall	20	93	382	709	989
coincidental	78	100	456	355	944
3-d	34	77	0	73	694
Joop	24	109	394	646	500
suites	13	183	235	697	765
open-ended	88	120	5	419	695
full_output	45	35	334	396	201
input_file	36	10	376	712	261
Fields	38	162	191	61	837
.map()	43	157	103	750	956
drift	20	170	231	709	562
Fernando	13	23	138	97	398
10:20	54	186	119	332	361
peak	20	93	425	507	344
suited	88	257	61	334	612
fiscal	99	182	450	109	94
ridden	71	218	60	697	713
lookups	76	272	158	169	207
3-6	78	140	453	198	361
3-5	21	190	234	557	326
3-4	21	160	234	557	326
Fancy	34	111	396	566	368
seberg	4	121	264	247	500
1000,100	44	243	385	196	484
unnatural	88	59	147	334	695
serializes	71	153	50	423	108
MinMaxScaler	60	168	186	705	646
-E	55	112	276	57	128
-D	85	195	370	5	192
outlining	59	117	235	32	177
-F	36	112	174	288	597
-A	68	32	18	617	128
skeleton	57	235	342	450	950
codification	61	59	60	618	260
-B	74	297	4	509	228
-M	68	201	18	617	62
-L	55	128	293	52	56
-O	55	112	386	57	128
-N	74	293	46	196	192
-I	55	128	293	52	56
-H	67	112	276	499	334
-K	68	201	18	617	62
-U	67	151	327	232	334
-T	55	174	330	477	568
-W	45	176	19	582	136
-V	40	112	276	57	630
4-fold	10	170	409	44	576
-R	68	201	18	617	62
Tutorials	38	224	372	94	689
x_train	44	256	74	668	994
-Y	40	119	276	288	128
-X	40	119	281	607	377
Powell's	77	42	458	279	905
bug-fix	35	122	156	292	376
-e	67	112	276	57	128
-d	86	112	276	57	128
libsndfile	7	163	63	499	732
-f	67	112	276	57	558
-a	40	277	276	57	128
-c	55	112	485	57	630
-b	86	174	117	617	13
-m	67	112	276	57	128
-l	55	112	276	57	568
-o	55	128	293	52	56
-n	75	112	276	57	128
-i	40	112	276	288	128
-h	57	277	222	384	630
-k	96	201	18	617	62
plt.errorbar	46	14	383	568	649
-u	40	112	276	57	128
3-level	43	265	75	771	921
fontproperties	31	13	388	134	879
-v	40	112	276	57	128
offtopic	18	225	222	419	625
-p	55	112	276	57	128
rstrip	52	263	452	589	448
set_bad	22	4	294	653	271
flattening	34	116	145	566	520
-y	96	201	18	617	128
-x	96	201	18	173	13
-z	68	201	18	560	62
attribution	4	121	394	170	500
link-only	18	225	45	472	922
supercomputer	84	119	2	410	377
Sale	79	144	487	168	653
Refresh	38	154	188	209	728
poster's	4	225	490	170	81
generalised	34	77	14	799	734
numpy.add	42	40	137	313	622
--	47	0	392	91	908
get_axes()	31	1	388	399	879
color_palette	31	13	383	592	879
-4	90	54	324	397	744
-7	68	54	257	397	744
-6	96	266	324	397	421
-1	90	297	13	509	744
-0	14	86	314	130	549
-3	90	54	13	397	744
-2	90	266	324	397	744
-=	27	29	26	212	273
maximim	14	291	85	325	549
cali_time	90	297	324	397	744
->	47	174	117	751	790
-9	68	266	324	397	421
-8	68	54	324	397	421
VIEW	94	222	74	771	160
Ymax	41	6	289	200	252
x_coord	41	6	438	69	116
sinusoid	20	93	425	507	344
Generalized	38	206	132	722	71
canvas.get_tk_widget()	46	203	348	123	55
promotes	14	263	162	566	470
cmap=	46	36	294	653	488
narray	34	77	0	73	943
F-contiguous	34	188	396	404	77
Tried	50	264	292	75	59
nano	99	160	274	323	27
inputFile.csv	41	6	279	766	573
thickness	59	117	433	32	714
nans	6	68	12	130	910
reorder_levels	43	47	75	683	73
Totally	24	200	374	504	991
2012-01	99	140	453	109	687
relabeled	48	49	195	787	502
UntransformedArray	96	29	18	173	62
loose	2	229	134	335	621
modify	2	229	457	335	180
Modelled	53	139	42	250	814
SP3	84	7	432	301	321
cmaps	22	4	233	306	271
matplotlib.backends.backend_tkagg	15	135	222	289	315
aligment	14	152	25	618	621
advisable	88	257	5	419	195
Minor_axis	95	298	335	168	497
standar	81	270	266	733	459
Stata's	61	265	375	364	561
Cant	47	57	392	75	888
invalidate	3	188	447	570	787
band-pass	20	93	382	709	989
family	45	230	448	767	909
RES	10	127	355	159	863
d.apply	27	150	10	772	838
RET	53	281	276	57	128
model_order	41	288	289	200	810
0.6745	81	214	132	783	162
aimed	12	193	19	387	219
Animal	48	123	486	197	653
de-facto	76	94	375	742	396
REF	48	144	337	787	502
RED	22	4	201	438	672
Explorer	40	141	259	110	402
probabilities	77	214	132	783	162
REs	12	42	134	458	371
daily_ret	74	293	4	509	228
contains	2	49	491	487	702
build-dep	67	151	327	232	334
DataFrame's	43	265	72	683	73
ax.grid()	31	13	388	558	879
-0500	54	69	119	158	126
np.add	42	269	137	74	598
taken	2	215	328	98	187
a+b	3	269	403	65	235
containe	22	61	381	571	593
Shortest	47	43	131	251	338
containg	61	49	50	27	260
time.time()	10	63	68	426	367
stylistic	88	152	5	458	606
temp.txt	36	10	136	712	261
yrend	64	287	406	505	294
WC_unit	15	135	319	777	957
excuse	18	120	179	739	67
next()	29	218	444	236	444
df.csv	36	10	136	294	261
impulse	20	93	248	191	989
mounted	39	126	214	571	949
.searchsorted	53	139	13	417	775
event.ind	74	6	108	586	336
Prints	63	44	199	347	560
reallocation	10	188	118	570	863
offender	12	152	60	630	625
a+1	96	201	18	560	13
accumulated	81	43	275	588	603
offended	18	15	212	472	53
hand-made	47	214	342	742	4
df.asfreq	64	287	449	48	628
fromfunc	60	40	14	313	709
fig.dpi	46	284	348	757	619
history	35	78	232	167	955
~5000	21	190	234	557	42
user_input	53	139	51	682	199
CAR	43	49	456	405	356
numpy.asfortranarray	42	27	88	404	581
.count	64	89	163	340	496
Jacobi	60	42	48	722	905
CAN	30	212	55	136	965
cows	13	120	206	407	852
20gb	21	127	355	159	359
magenta	22	4	427	438	198
species	79	228	487	621	675
CAD	38	271	282	519	38
motion_notify_event	29	154	188	149	282
acroread	93	61	315	99	374
np.log10	27	29	18	584	58
A.iloc	90	297	115	239	227
_two_	47	174	26	145	908
exponentially	81	170	270	147	4
lower-left	5	288	438	122	979
nbins=1000	10	202	37	323	876
sneak	50	232	60	35	417
parse_dates={	53	274	42	250	997
*****	4	121	254	710	114
median_price	53	39	42	250	649
unlink	67	151	327	664	334
flexible	88	257	61	675	612
-dynamiclib	55	112	293	499	315
Excessive	38	206	282	519	71
spectra	20	93	425	191	344
OGR	71	248	90	97	537
np.log1p	27	29	18	173	598
dropcols	6	49	456	405	36
negligible	10	272	37	225	990
microseconds	99	63	68	426	27
dream	13	26	229	444	264
x_array	41	6	289	282	397
y-	41	6	32	107	884
help	11	173	389	763	867
hierarchy	2	265	75	257	417
progressing	18	225	393	170	219
fft	20	93	425	336	344
sooo	24	33	229	444	264
soon	35	232	232	292	769
~10x	10	202	37	323	767
Hrm	12	59	490	504	469
held	2	215	328	98	187
y=	46	39	73	505	649
datetime.strptime	86	274	68	679	151
y1	41	172	481	243	808
y0	41	172	177	243	808
y3	41	172	481	243	808
y2	41	172	481	243	808
y5	41	172	481	243	808
y4	41	172	481	243	808
clusterize	2	21	233	203	356
y6	41	172	481	243	808
year-month-day	99	63	68	48	687
selenium	71	239	429	697	537
strpdate2num	61	274	68	426	745
Produce	57	21	342	450	702
VirtualBox	19	7	432	301	156
tz_localize	94	63	68	426	452
team	79	78	487	480	285
~10K	21	190	234	557	42
deformation	39	126	235	93	177
set1	74	144	108	586	577
yi	41	6	177	282	397
cgi-bin	55	132	352	384	568
24*60	21	223	298	318	811
ym	41	6	216	107	577
FreeBSD	84	7	2	301	321
yo	47	0	392	143	835
~100	21	190	234	557	42
ya	24	200	493	140	870
yc	3	18	201	266	969
yb	41	6	185	69	116
ye	41	6	177	107	397
yd	75	32	385	425	486
anticipated	24	200	292	210	469
yy	41	6	289	282	397
yx	90	293	4	509	228
~10%	10	202	37	323	876
yz	41	6	438	107	397
y}	41	39	73	316	649
you've	57	235	392	37	451
quiverkey	31	13	388	134	608
yp	41	6	29	282	571
ys	41	6	177	282	397
yr	41	6	272	107	211
yt	47	23	138	222	371
yv	41	293	13	509	146
slicker	88	257	61	675	327
-bash	55	176	276	696	568
ifs	57	183	131	534	783
pd.show_versions()	57	239	463	293	729
occasions	13	120	5	697	53
.dt	94	63	68	72	390
tear	29	187	128	149	781
iff	85	194	280	5	485
stopped	50	37	301	764	954
Min-Max	77	21	409	783	738
y_	41	195	177	107	201
acmnj	54	50	340	81	277
Manipulate	69	31	100	209	911
End	30	138	66	788	687
Hoogendoorn	4	121	264	646	500
positioned	59	288	32	122	479
PyArray_DATA()	76	51	65	312	730
toordinal	63	18	460	172	787
sketched	4	17	342	252	950
y-coords	81	43	266	733	884
numpy.sin	60	29	137	735	238
dominates	10	272	37	225	863
tf1	46	35	289	176	649
surrounded	61	263	452	539	501
publish	79	239	90	609	92
.applymap	64	150	10	772	838
hayden	24	121	264	646	500
9:10	68	204	257	234	361
dominated	10	299	356	327	668
2.3.1	91	7	417	13	864
............	90	54	257	10	744
index_col=	52	185	376	121	971
issue	35	152	60	799	120
reca	74	297	4	212	273
py27-matplotlib	67	151	327	232	334
recd	79	78	487	197	653
azim	41	284	438	298	401
labs	13	246	206	407	852
reason	47	59	134	630	31
recs	78	21	131	522	944
rect	5	226	494	134	479
Delete	69	31	100	530	911
opps	24	200	493	504	991
launch	40	141	281	76	632
np.isscalar	3	40	14	15	866
semilogx	5	148	495	639	710
semilogy	31	13	383	592	710
unaware	11	48	134	630	907
1000*1000	21	160	258	45	655
y-tick	5	288	32	19	884
assign	2	229	328	335	923
c_0327	53	139	51	239	821
Tables	69	162	446	702	457
UMFPACK	35	193	102	387	751
arsenal	11	232	232	35	781
Storing	69	31	100	142	316
Sybase	71	171	473	128	88
dominating	10	170	409	44	576
norm=	46	36	294	653	488
repmat	42	30	286	74	368
prohibitively	10	272	118	334	604
maple	60	296	375	364	631
Fabio	24	109	394	140	870
guaranteeing	2	152	134	573	531
pandoc	40	112	276	499	872
wonderful	13	109	229	444	264
scheme	12	183	409	630	563
Transparent	59	52	495	209	177
IDEs	40	141	281	76	632
insure	2	21	131	546	694
selling	79	78	453	167	955
k=1000	10	160	274	323	655
signaling	6	37	301	355	625
x.dot	96	29	18	173	13
authors	13	225	372	670	219
norms	44	194	137	431	598
df.itertuples()	74	233	54	750	207
Scripting	38	224	63	516	850
Qt4Agg	93	80	315	435	591
matplotlib.backends.backend_pdf	93	61	315	99	374
anticipate	88	59	301	334	604
Fillable	60	40	14	313	709
rolling_std	60	85	173	784	396
banana	95	123	373	168	497
upsampling	20	85	449	48	817
obfuscate	12	117	235	144	604
schema	71	171	473	128	88
rawData	75	174	117	551	262
2x2x2	34	77	251	88	943
God	24	33	493	140	870
Thnx	24	33	229	140	870
np.meshgrid()	42	27	14	313	439
forward-backward	20	93	382	709	989
crossfilter	81	147	126	203	959
Got	24	109	394	140	870
cumbersome	88	257	61	334	695
constructions	76	94	131	6	734
np.fft.fftshift	60	27	14	313	244
8MB	21	127	355	159	359
setp	31	148	363	558	844
on-going	35	193	220	292	106
test2.py	37	250	330	205	194
Bernier	24	200	394	504	991
loadmat	71	153	336	423	306
argument's	60	220	329	663	720
experienced	11	120	212	739	727
unstuck	11	120	114	35	564
James	95	224	373	102	340
textcoords=	46	226	30	316	348
experiences	11	173	143	35	652
Evaluating	60	179	169	396	145
position	81	21	25	122	979
draw_networkx_nodes	31	1	388	399	879
5-4	68	266	324	397	421
5-7	21	160	274	323	655
5-6	21	160	234	557	326
df.Time	53	274	68	72	390
noone	18	225	5	170	53
Einsum	76	202	37	169	876
5-9	78	204	338	338	361
unreasonable	12	183	409	44	604
unreasonably	10	272	37	334	604
2.08	68	54	257	713	449
non-flat	2	116	131	522	694
2.05	96	266	18	695	421
scilab	40	141	281	76	632
numpy.kron	42	194	137	313	598
2.00	54	108	23	8	931
2.01	14	266	23	695	421
2.03	14	266	324	200	421
humid	79	228	487	467	675
MyDialog	29	187	444	236	444
Categorical	43	265	72	341	443
Note2	4	37	490	567	81
registers	2	218	447	359	720
matrix-vector	34	194	137	431	751
pandas.rpy.common	15	135	319	777	823
randn	75	243	319	425	484
paranoid	12	152	5	419	53
assertion	63	44	199	582	888
matplotlib.use	93	80	315	435	591
4-dimensional	34	77	0	73	943
Aitoff	39	149	495	199	627
xlwt	71	153	86	638	561
regex=r	86	89	163	85	66
dominant	78	93	425	391	283
fundementally	14	59	147	325	908
Notes	30	193	19	387	114
sensible	88	257	61	675	612
eggs	67	151	63	499	732
ne.evaluate	64	150	256	551	48
While	47	0	392	678	544
df.info	57	235	342	347	975
y.ravel()	44	293	4	509	598
Noted	24	200	493	504	991
molten	2	116	145	706	356
0-axis	34	77	216	566	520
catches	29	37	491	174	769
codepoints	61	58	443	539	501
ipython3	40	141	281	76	632
model_data	90	195	4	455	496
badge	18	15	45	444	922
Conditional	69	31	100	530	911
alteration	57	229	490	567	81
Unstacking	43	265	75	771	356
recommendations	11	173	389	763	867
INDEX	53	212	55	136	965
num.signal	44	220	137	157	598
surpass	10	272	118	44	576
readshapefile	31	23	495	199	627
QPolygonF	2	215	328	404	694
imsave()	22	61	315	99	54
polymorphic	76	94	181	630	31
memmaped	34	188	122	404	450
QtGui	93	135	319	537	873
speed-wise	10	202	37	534	876
Boltzmann	96	170	426	391	142
Cylindrical	39	149	279	199	586
ax.grid	46	226	494	316	649
circumvents	76	272	118	169	863
conditions	12	100	291	18	148
Bansal	13	42	48	195	905
Obj	3	220	329	514	720
statistically	81	183	409	783	162
setup.cfg.template	55	132	352	113	798
numer	2	49	131	405	888
range_name_list	74	95	115	239	227
python3-scipy	67	151	327	232	334
distinguish	12	21	233	546	563
numpyArray	75	227	385	509	228
Obs	79	228	487	271	702
scipy.misc.comb	60	194	137	313	598
PyBuffer	7	51	65	312	957
basinhopping	77	98	458	279	438
dataTables	71	171	90	60	92
secrets	18	225	90	609	852
dftask	53	139	51	417	779
Knownvalue	78	204	456	276	603
Symbols	65	94	181	86	651
cm.jet	22	36	294	653	488
Graham	4	121	394	646	500
color=color	46	35	289	46	649
yards	95	181	373	185	517
jeff	24	200	394	567	991
autogenerate	76	40	65	742	709
complies	57	235	342	450	950
complier	7	51	412	169	730
cross-sectional	81	183	206	203	765
Traditionally	59	52	32	51	710
spotting	24	200	493	140	991
Way	69	162	366	789	739
Online	38	224	372	94	704
vessel	53	95	51	239	821
complied	7	57	167	697	166
Was	50	264	292	210	747
df_old	78	49	195	787	502
stamp	99	147	450	198	27
wasnt	24	200	93	210	747
newcol	53	95	51	448	779
tprep-1	96	266	18	173	62
damn	24	200	114	444	469
doc-string	35	193	372	387	371
Li's	4	17	254	710	441
collected	29	218	328	98	92
.ndim	44	293	251	0	357
urgently	59	52	32	19	714
generating	2	116	145	573	531
voila	24	57	167	499	128
regroup	94	222	75	771	160
MSVS	7	163	152	241	850
])`)	75	297	385	10	585
MSVC	7	163	152	241	850
zorder=100	46	226	494	316	649
assigning	2	116	328	212	923
Software	38	224	259	110	689
randomly	81	43	131	733	162
look	47	193	19	424	371
.replace	86	89	163	340	66
Window	40	141	259	110	402
rope	39	43	235	165	102
mainframe	84	119	183	697	321
Octree	76	42	248	327	905
numpy.where	42	27	286	358	244
Planck	77	98	458	396	142
loop	10	116	118	750	207
k1	85	172	107	467	778
malloc	3	188	447	570	450
10000	21	243	234	557	252
10001	21	243	234	557	252
')]	53	139	42	250	624
multi-line	61	58	452	230	298
reads	71	153	50	174	108
store.root.attributes	94	174	74	699	160
EIG	10	202	37	323	876
A_ID	48	144	195	787	502
ready	13	232	232	203	31
logsumexp	60	219	458	742	396
hyperbola	39	149	29	93	116
37,100	29	40	444	236	336
1000+	21	190	234	557	42
null	6	68	12	130	910
FFMPEG	40	248	429	609	722
train_set	36	256	74	668	994
sub-sampled	72	165	270	733	301
sliders	59	154	188	427	845
')`	86	129	73	36	906
conflict	12	152	60	697	120
Treating	81	126	275	98	562
fyi	94	222	493	504	160
1000s	21	190	234	557	42
ax.step	42	13	14	592	439
1000x	10	202	37	323	876
-m32	55	128	293	477	56
`]`	61	58	452	230	298
__add__	3	220	329	663	235
assortment	65	94	158	540	604
15.0	54	108	23	579	421
15.1	91	122	156	587	376
15.2	91	122	156	587	626
15.3	54	108	23	579	399
15.4	54	108	23	579	399
15.5	54	108	23	579	931
older	91	122	156	587	230
15.8	54	108	300	797	399
dateIndex	53	281	117	198	262
half-baked	88	257	61	675	612
')'	86	129	164	211	572
')"	86	129	260	505	858
Incidentally	47	0	392	678	544
docker	40	119	167	301	321
grossly	12	183	409	44	950
`"	61	58	465	575	496
chore	88	257	61	334	695
chord	59	117	41	400	234
*20	96	266	289	695	421
overflows	14	86	314	325	549
pywin32	91	57	167	664	732
Internet	13	224	372	387	704
tur	24	181	394	102	340
point-wise	60	194	248	191	344
confidentiality	57	235	456	170	451
subseries	79	147	173	621	356
z^2	96	28	426	560	13
Casting	14	175	135	325	389
predict()	77	168	186	341	443
np.pad	42	27	286	358	244
brand-new	2	215	233	9	702
my_project	15	132	352	384	305
trackpy	4	225	372	670	552
remaining	2	21	131	251	338
Dirac	20	93	425	191	344
lacking	12	120	212	419	907
subfeatures	48	123	486	197	653
#000000	46	39	73	316	649
game	79	246	206	195	64
wiser	50	120	114	419	907
1:1000	68	32	289	545	810
H5PY	71	57	393	60	92
wings	20	170	409	44	576
b.reshape	44	227	228	0	263
outright	88	152	5	349	625
0.91.1	91	151	167	664	230
upcasting	14	291	142	325	470
Previously	50	264	292	210	747
Fint	86	129	42	211	775
Fink	67	151	47	351	104
matplotlib.py	15	132	352	384	305
stop_times.csv	30	49	50	60	92
fig.savefig	46	203	348	123	619
Fine	47	174	392	91	262
Find	69	31	100	530	911
mathematical	12	42	248	279	738
self.x1	45	35	117	392	314
self.x0	45	174	334	392	406
metres	39	149	266	733	573
Normalize	22	4	329	663	271
28th	99	182	318	109	94
plot2	41	39	335	107	649
macs	84	119	167	697	321
il_winter_dat	90	54	257	332	744
plot1	46	39	348	577	430
py++	7	51	65	2	730
delivered	12	183	409	44	765
describing	12	21	392	91	702
arr2d	90	297	13	0	744
FILENAME	36	10	136	712	942
conditionally	2	229	456	405	286
non-resampled	59	61	495	51	54
forgets	61	232	491	699	769
minimal	57	235	463	37	766
vincenty	2	270	472	98	662
ax.contour	46	36	294	282	397
They've	13	26	138	9	398
stem	59	52	383	199	710
stes	79	265	233	621	356
step	47	21	392	167	338
hourly_date_rng	64	287	406	548	48
lastp	59	226	494	122	979
lasts	21	160	234	167	326
,,,	1	181	300	338	139
plots	59	52	495	51	54
mssql	71	171	473	128	88
shine	76	272	118	225	990
-x**i	96	29	314	173	238
delaunay	72	165	15	152	570
inline_spacing	5	13	383	134	608
reappear	59	154	188	427	2
cphlewis	24	45	394	646	68
Interpreters	19	141	259	110	402
df.quantile	27	269	403	695	945
messaging	71	218	183	359	803
shiny	88	23	138	257	727
+Inf	96	170	314	391	84
strategy=	6	68	12	85	910
Netherlands	95	298	453	168	497
")`)	86	129	260	185	858
within	2	21	233	91	338
nonsense	12	37	301	699	908
connects	59	149	29	32	116
predictions	77	168	186	705	443
d3data	48	123	335	766	459
smells	57	152	220	424	106
behaving	47	215	491	210	59
.,	54	54	257	338	585
..	47	174	392	751	469
Keys	69	162	49	789	739
.!	11	173	389	567	867
y_bins	46	39	289	176	649
diags	44	227	14	509	709
0.0531699096	47	21	392	91	338
Scipy	38	206	282	722	71
.?	47	174	233	751	835
.0	86	181	23	8	797
xsam	34	77	251	73	336
.2	54	266	23	695	797
.3	54	266	23	695	797
.4	96	266	23	695	797
.5	96	266	324	695	797
disallowed	12	152	147	145	878
prefix=~	55	112	276	57	568
.H	60	194	280	431	485
.I	47	285	117	751	262
.J	4	121	254	710	441
.M	4	121	264	5	500
Bridge	84	127	2	410	580
.A	44	292	64	489	218
.B	24	121	264	646	500
.C	86	174	117	36	199
y_true	85	256	251	467	994
.F	4	121	264	646	500
.X	85	200	493	5	469
films	53	95	51	239	682
pwd	55	132	330	477	568
properly	47	229	392	91	338
x.strides	3	293	361	509	228
fishy	88	59	301	424	835
5-1	53	139	256	250	775
.R	24	200	493	504	340
.S	24	200	493	593	991
.T	44	30	396	489	263
collapses	34	77	396	566	520
python.el	35	120	212	697	53
MultiEvent	79	94	162	787	702
.h	55	132	152	384	305
low-quality	20	170	409	144	562
persisting	2	188	447	573	31
np.median	27	269	403	65	244
.m	15	135	222	384	305
intuitive	88	257	61	334	695
.o	15	153	44	384	305
.a	7	132	44	215	305
Key1	48	123	486	276	502
.c	7	132	152	215	305
.d	55	128	330	477	568
.e	90	297	338	751	456
.x	90	297	13	10	744
.y	74	6	108	586	211
accustomed	13	120	212	739	727
polyline	39	149	235	93	102
read_json	52	185	28	24	793
df2.plot()	31	13	388	592	879
n=19	10	202	37	323	876
popularity	79	78	487	480	285
skipfooter	52	185	28	121	793
mindful	76	272	118	552	863
fftfreq	20	93	425	336	344
n=10	10	202	37	323	876
convex	72	165	231	152	102
header=0	52	185	376	121	971
header=1	52	185	376	121	971
%matplotlib	93	141	281	76	632
1899	99	182	318	372	94
unwise	14	188	118	325	863
Snap	99	140	453	198	687
event.xdata	31	1	388	149	282
LgRank	99	182	318	754	361
np.mean()	42	269	103	784	388
=[(	75	18	287	211	178
rewriting	76	272	118	225	169
eurusd	90	139	51	239	821
genome	79	228	239	27	675
index=False	52	185	28	121	369
misinterpreting	12	59	490	424	907
tmp	55	132	330	384	568
2358833	47	174	392	91	262
read_sql()	43	171	473	128	88
mongodb	71	171	303	60	457
pandas.cut	43	14	297	376	956
refrain	2	48	457	335	360
Implement	69	179	169	530	989
=[[	90	54	287	10	585
Automatically	69	31	237	209	911
independently	2	21	233	251	338
zooming	59	154	188	427	203
esp	88	272	138	334	863
wan't	47	0	392	143	835
y_2	85	201	426	560	391
REFERENCE_ID	48	265	486	363	502
a.view()	90	297	26	509	273
sounded	18	200	114	504	991
records_array	78	100	108	522	336
aggregating	43	265	103	376	356
fitfunc	96	29	177	282	201
WLS	77	168	186	705	443
parse_dates	52	185	28	121	971
series2	49	47	406	631	445
syscalls	29	277	222	699	625
np.repeat()	42	27	286	358	244
OneHotEncoding	81	21	131	64	603
aquired	2	126	233	571	177
numpythonic	88	257	61	675	327
phenomenon	12	21	301	799	120
illegible	59	52	32	19	714
excludes	6	263	456	618	910
series1	49	47	335	551	211
Pylab	93	23	495	51	54
suits	18	229	232	306	237
list.insert	42	27	361	404	146
Registry	40	141	259	110	402
excluded	6	263	456	355	187
suite	7	26	63	697	732
LARKFIELD	95	49	373	686	517
flicker	29	187	128	764	2
rollback	35	171	473	128	88
2.6.8	67	7	167	301	732
.Net	7	26	63	307	850
Newton-Cotes	77	98	458	279	738
IT.islice	65	233	54	690	526
True}	45	129	117	36	906
Jaime	4	121	264	646	500
trough	2	116	145	522	207
cellular	13	183	206	203	765
Trues	78	100	95	18	283
netCDF3	11	264	393	75	564
netCDF4	71	153	214	423	957
IN_ARRAY2	3	67	261	157	498
mercurial	67	151	167	664	732
direc	90	35	177	396	201
unusual	88	152	147	145	908
expanding_product	76	42	458	279	738
assignments	76	111	147	369	734
skipped	78	263	456	210	187
geospatial	13	126	214	571	586
OpenCV-Python	38	206	282	722	71
numpy.array	3	220	361	404	235
picker	31	187	188	149	282
zn	41	172	177	243	808
2.6.2	19	7	417	13	644
compensated	4	15	232	472	394
zi	41	165	15	282	397
za	74	195	185	586	577
+38	22	170	266	588	603
noise	20	93	231	709	562
zz	41	223	279	766	573
Theta	85	201	370	560	379
zv	90	293	13	53	397
believes	47	232	232	170	338
zp	41	6	177	282	397
zs	41	6	177	282	397
poke	50	232	232	306	417
RClass	3	220	329	663	720
Zulu	61	153	50	423	260
Label-based	48	111	115	369	227
pandas.io.parsers.read_csv	52	185	28	121	793
64x	84	7	432	241	644
America	99	268	318	322	221
invalid_raise=False	52	185	28	121	793
read_clipboard	52	185	28	24	793
redraws	29	203	128	123	55
sparse.coo_matrix	44	292	64	348	218
product_desc	48	123	337	197	82
commercial	13	26	63	516	850
BuysandSells	53	139	42	417	775
z=	41	6	29	69	397
scipy.ndimage.interpolation.map_coordinates	72	165	15	235	570
columnwise	34	116	275	566	520
z4	90	172	481	243	808
tick_size	81	170	238	391	603
z0	41	172	481	716	279
accessor	43	63	68	426	448
z2	41	172	481	243	808
z3	41	172	481	243	808
Kernel	38	206	3	722	71
Likewise	47	0	392	678	544
get_array	31	1	329	399	720
640	21	223	251	45	252
646	54	3	101	297	399
648	30	271	55	429	428
`]	42	193	19	313	439
QImage	3	248	381	312	722
simplex	77	98	458	152	276
realloc	29	188	447	570	450
wim	4	121	264	646	500
wil	65	233	158	143	896
wih	20	93	425	507	344
wit	59	23	495	51	608
Yip	24	200	493	504	469
redefining	2	215	181	573	531
ticklabel_format	5	148	494	558	958
Lena	22	248	381	571	722
scipy.stats.mode	42	27	14	313	244
10**	96	266	18	28	810
remains	2	215	491	91	59
matplotlib.collections	15	135	319	777	873
frogs	90	54	257	10	995
cheeky	88	17	147	710	441
cram	2	116	145	706	986
y-intercept	77	124	132	324	135
milliseconds	99	160	274	198	27
started	50	120	114	35	727
Ax_direction	44	201	18	704	598
im.shape	90	90	13	545	507
k+1	96	195	18	617	62
tmp=unicode	86	129	136	137	347
0.23617897201269641	68	201	154	5	62
observing	12	183	409	44	120
.legend	46	35	289	46	430
disabling	45	152	60	618	625
starter	57	235	342	450	950
getOpenFileNames	29	187	128	764	954
crosses	39	149	29	93	116
Syntax	30	221	199	61	114
crossed	50	43	235	210	102
output_notebook()	35	23	138	9	376
December	99	182	318	109	94
spyder	40	141	281	76	632
plt.xlabel	46	148	494	46	348
%paste	40	141	281	76	975
devwls	95	298	419	429	428
renderers	93	117	433	32	54
legible	88	257	61	334	612
some_func	27	40	10	772	838
y.max()	46	266	289	28	810
your_file	36	10	136	293	261
flaky	50	152	60	35	120
Middle	69	162	191	281	837
arrangement	2	21	233	546	338
temp_g.params	44	227	154	0	357
circular	39	117	235	93	177
.__name__	86	18	117	157	314
Questions	18	225	45	527	509
gobject.idle_add	29	187	128	236	55
Numpypy	2	57	392	91	338
fatigue	29	246	429	609	954
apostrophes	61	58	452	230	501
Weighted	69	179	173	264	698
re-assigned	3	220	181	514	406
averse	71	48	126	203	907
Justin's	4	17	254	710	441
callables	65	94	329	540	720
paleta	90	54	13	10	744
matplitlib	31	1	495	199	177
2**15	14	86	314	391	603
quotations	61	58	452	230	501
blit=True	29	203	348	123	55
pip-2.7	67	112	327	57	334
poking	50	232	393	257	417
astronomical	39	126	214	571	949
combinations	81	21	131	522	944
to_json	43	157	72	24	369
Final	30	235	342	347	560
Body	48	144	195	276	502
2e9	21	190	234	557	655
outer	34	263	131	574	207
parallelize	76	51	345	445	803
2e6	21	243	46	557	484
v.1600	84	186	33	590	322
LBH	95	247	373	686	428
imbalance	12	183	186	170	563
Sinc	20	93	382	191	989
sample_array	74	40	181	212	406
re-plot	29	154	128	427	2
x_n-1	96	201	426	560	201
counter-clockwise	39	149	25	122	520
hands	50	232	232	35	417
documented	35	193	19	9	371
dataset	81	190	258	203	42
dataframe.plot	59	14	335	621	710
handy	88	257	61	334	264
FIRST	30	212	182	136	965
REMOTE	35	239	222	210	120
Iterator	63	44	199	582	136
1970-01-01	99	69	68	525	27
casting=	63	44	334	36	350
N0_YLDF	48	282	486	178	82
set_ticks()	5	13	388	558	879
Nested	69	162	169	574	739
Subsetting	69	31	100	530	911
taglines	95	181	227	102	340
.Donda	50	59	493	504	469
crossing	39	117	231	733	116
Loaded	40	57	429	499	321
g()	74	40	444	396	622
front-end	7	26	90	609	537
illuminate	12	232	342	306	950
709	14	29	46	173	482
704	54	3	298	187	158
ax.ticklabel_format	46	226	494	46	348
700	21	223	234	557	692
PivotTable	69	162	191	789	739
multicolored	59	52	495	199	177
Wierd	47	57	292	699	59
computable	20	170	409	391	84
70%	21	160	234	64	176
margins	5	284	284	757	479
rebinding	3	220	181	212	923
uBLAS	7	51	65	2	730
confess	18	120	114	419	53
convinient	79	120	126	203	907
watermark	93	61	372	97	704
mDB	85	172	481	224	778
cimport	15	67	261	146	957
atleast_1d	42	30	286	313	244
completely	12	59	392	91	908
1985	99	182	318	754	361
70k	21	190	234	736	42
nvals	90	297	13	509	744
eigenface	22	4	7	438	672
unutbu	4	121	264	646	500
upper_bound	27	100	95	396	709
lone	78	170	266	391	576
1.55371	63	44	199	582	341
counterpart	60	296	65	742	631
stride	34	30	396	404	368
Ellipsoid	38	23	495	209	177
swapped	2	215	25	566	520
bijection	81	270	239	588	662
one-row	43	265	74	771	356
2018	54	186	318	158	126
Texture	35	122	447	9	376
PyDSTool	13	26	63	97	398
re-work	57	232	232	306	451
precisely	12	59	392	91	908
dictionarys	2	49	131	706	944
smstext	74	6	108	586	577
efficent	88	257	61	675	612
management	13	26	63	118	398
dove	50	232	222	210	781
NUM	75	243	201	196	486
-180	39	288	324	298	573
perfectly	24	109	229	140	870
prone	88	152	147	334	604
similary	13	264	292	75	747
re-write	11	48	232	144	360
Remote	40	141	90	209	537
plt.autoscale	46	13	334	592	430
deconstruct	60	98	458	742	738
quandl	50	120	372	284	92
reallocate	2	188	447	570	450
manifestation	12	152	60	552	120
ax.imshow()	31	13	294	653	627
matplotlib.style	15	135	319	97	873
cyl	22	4	294	653	488
TKinter	93	187	104	537	728
-log	96	201	426	560	13
df.hist()	43	14	297	376	710
defmatrix.py	37	250	27	205	173
feature_name	48	123	486	776	502
some_series	27	297	51	551	227
unwieldly	88	59	61	630	612
event_type	61	49	50	787	517
linestyles	31	13	294	134	608
buy	79	78	450	762	955
tab-delimited	61	153	50	423	108
portrait	59	117	284	122	479
754-2008	14	86	142	325	549
aresult	53	139	51	239	821
issuing	40	203	128	123	55
Rolling	69	179	169	264	698
NCL	13	26	63	97	537
Dougal's	4	17	254	710	441
562	74	21	239	98	702
lectures	13	224	372	94	852
Fabio's	18	17	254	472	81
mileage	84	202	416	444	394
Series.plot()	31	14	383	592	710
-Lagarde	24	200	493	504	49
linestyle=	46	39	73	316	649
pybrain	77	168	186	705	646
Summing	69	31	100	530	911
keyerror	63	44	199	582	888
intentions	18	225	45	472	81
Dev	95	271	282	519	38
Enter	40	141	259	76	402
Resetting	43	47	75	683	73
64-bit	19	7	417	241	644
animate.py	45	80	128	123	55
2009-01-01	48	281	449	198	687
.convert_objects	64	139	418	548	131
.all	27	260	431	65	945
snapshot	57	235	342	450	950
shaders	13	26	65	2	730
H	85	174	419	5	192
databases	71	171	303	128	88
datafram	43	48	145	771	356
add_patch	31	1	388	399	879
1.0.4	91	122	156	9	376
1.0.6	91	57	167	36	230
1.0.7	91	7	417	301	230
df.values.tolist()	90	174	117	751	262
1.0.1	91	7	417	587	230
1.0.2	55	57	330	751	568
violation	63	176	397	582	136
encrypted	71	153	50	60	108
crate	2	116	233	621	702
generate_binary_structure	44	227	382	742	396
tryed	50	264	292	75	59
deletechars	52	185	28	15	793
MUST	94	222	55	136	160
partners	78	144	195	178	944
forex	79	78	450	101	746
based	2	21	416	203	702
rolling_corr	43	85	72	784	956
(	47	174	117	751	486
hopeful	88	257	61	118	727
bar3d()	31	13	383	199	627
QUOTE_NONNUMERIC	68	54	117	338	262
bases	13	42	131	400	238
reorganizing	88	272	118	203	863
axis=axis	27	227	431	65	945
np.greater	74	297	4	509	228
format_number	64	150	10	772	838
tbh	88	200	493	504	469
FLAGS	30	193	19	387	114
tbl	48	281	74	339	779
iteritems	65	157	81	648	311
parlance	2	215	233	91	702
procedures	13	193	65	387	371
endless	50	37	114	167	769
gray	22	4	427	438	198
processes	29	218	183	445	803
hiring	79	78	487	480	285
grap	2	49	456	405	713
transposition	34	292	396	566	520
watershed	72	126	7	152	670
overflowing	14	86	314	325	549
ecosystem	13	26	63	118	398
Impossible	30	174	199	751	888
grab	2	116	457	335	92
grad	85	194	177	5	142
isfinite	63	44	199	172	341
spotted	24	200	493	504	991
adjust_price	36	10	136	343	858
terrain	39	126	279	93	177
freeze	40	141	429	764	954
desperate	11	120	114	35	64
lot's	13	120	126	118	765
ranker	64	150	256	551	48
ni_test	74	90	246	509	228
plt.close()	29	203	348	123	55
trapezoidal	77	98	458	652	738
wavelet	20	93	425	191	989
skip-broken	67	112	276	57	128
allotted	29	218	128	167	618
wspace=	46	284	289	695	339
zipped	71	153	50	423	854
comparable	10	202	37	534	876
/((	68	201	18	173	62
buckets	81	147	337	376	603
logging	71	246	183	609	625
Sry	18	200	179	504	67
comparably	10	202	37	169	876
superDuper	78	144	195	276	944
static_indices	90	297	13	10	744
THis	12	183	186	709	562
tf-idf	77	168	186	705	1
presentations	13	152	138	118	54
admit	12	120	5	419	53
Titles	69	162	191	209	837
_way_	57	225	463	37	781
Woody	24	121	394	646	500
testfile	36	10	376	712	261
DateOffset	43	63	68	426	390
Loc	48	162	66	117	739
UOGRD	41	6	251	766	573
Log	38	206	495	639	676
my_col	53	95	51	551	779
Lon	95	73	279	766	573
Lol	24	200	309	504	991
invisible	59	117	32	32	714
Low	95	138	159	762	746
Lot	24	109	373	140	340
orig	43	157	74	212	923
quit	40	187	128	764	954
build_number	48	123	486	339	502
yax	41	6	246	282	397
Vanderplas's	13	193	372	387	704
tmp_hogs	44	256	74	196	994
subsetted	2	116	328	98	92
yaw	39	149	438	93	116
Yahoo	71	78	450	762	746
938	74	195	117	690	262
slowly	10	120	114	167	727
plot_surface	31	13	294	199	627
pandas.to_datetime()	43	63	68	426	745
solve_triangular	60	194	280	704	751
matplotlob	45	13	383	592	54
"")	86	89	163	340	66
pie	59	52	32	51	710
Theft	78	3	338	185	262
quotation	61	58	452	230	501
And	47	0	392	678	544
semidefinite	77	194	280	431	485
Pandas-	69	162	191	789	739
NumbaPro's	76	51	65	742	730
Tom's	4	17	254	710	441
sort=True	64	150	256	1	48
Ant	11	173	235	93	586
g77	67	163	152	326	850
svm.SVC	77	168	186	705	646
reassembling	34	116	145	566	986
934	54	54	101	332	428
Any	11	173	389	763	392
1-y	96	29	18	173	201
1-x	96	201	426	173	13
SSE3	7	163	428	418	166
SSE2	7	51	428	418	166
Python34\Scripts\	37	112	386	475	194
demo	57	235	342	450	704
longdouble	14	291	142	608	549
vmax=1	46	36	294	653	488
myfunc()	34	77	4	88	228
vmax=3	46	288	294	200	810
os.listdir	36	10	489	712	261
memoizing	76	272	118	257	31
1-n	78	76	239	787	333
pypyodbc	71	171	473	128	88
.unstack	64	287	256	197	294
non-orthogonal	39	43	438	733	177
capture	2	246	457	167	338
shooting	13	120	114	793	64
2015-01-31	53	281	51	448	687
Beat	24	109	229	140	870
X_k	20	214	248	191	192
Bear	47	0	60	630	120
X_i	85	201	426	560	142
strange	50	59	301	618	120
quadrilaterals	39	149	438	733	102
ND_Offset	53	18	74	682	199
..!!!	11	173	389	763	867
smarter	88	257	61	675	327
Anaconda3-2.3.0-Windows-x86_64	91	112	184	499	630
newton's	10	160	37	323	655
1-D	34	77	0	73	694
1-9	78	288	338	740	456
Ensemble	76	220	329	663	720
experimented	50	264	393	75	564
unconventional	88	152	319	618	120
1-1	34	144	131	522	944
1-0	78	288	324	391	603
1-3	78	21	338	251	326
1-2	21	160	234	557	326
hist_strm.dtype	3	220	14	15	172
1-4	78	144	338	251	326
1-6	78	144	335	621	944
frequently	13	152	5	334	604
spree	18	232	232	419	53
magician	24	109	229	140	870
//	75	174	117	751	486
z-coordinates	41	6	438	766	573
1.txt	36	10	489	294	261
bootstrapping	77	214	132	783	162
well	47	0	392	91	338
y_val	46	39	73	316	649
/:	86	129	460	172	772
X_0	41	6	370	107	409
mathworks	13	193	372	387	371
case-insensitive	43	49	337	589	36
mass_range	44	205	251	107	397
Expressions	69	162	191	61	145
spherical	39	149	438	93	573
TMP	59	117	335	322	177
enormously	11	109	389	444	867
2012-12-31	99	69	119	155	256
mistaken	12	59	490	419	907
dose	47	59	143	174	835
sub-selection	88	232	114	35	469
mistakes	11	120	179	739	67
_ssl.c	63	176	397	21	136
unspecific	18	59	5	419	53
Transforming	69	31	100	530	316
z-score	77	214	472	783	454
d.Series	64	287	256	425	997
upvoted	18	15	45	472	922
df_azure	90	95	115	239	227
Despite	50	264	292	252	564
upvotes	18	15	45	472	265
accomodate	2	229	284	245	479
int32	3	291	141	266	969
Programs	55	132	259	110	402
hackery	76	94	118	169	612
pathos.multiprocessing	42	27	14	359	709
libpng-1.6.6	67	151	327	664	334
Phase	95	298	419	467	497
PGF	93	61	315	99	374
immediately	29	37	128	699	954
re-indexing	43	265	75	573	921
dictionaries	65	233	158	540	1
non-boolean	88	94	95	355	734
hazy	88	152	5	419	765
a.tolist()	65	233	81	648	172
pd.options	45	37	222	269	625
page	35	193	372	387	704
newshape	3	227	228	157	263
32pts	78	140	338	699	835
phenomena	12	183	409	44	563
984	44	205	251	196	357
985	44	205	251	196	357
husl	22	23	294	97	439
list.append	65	233	81	750	311
peter	95	181	42	197	682
98%	81	214	132	147	176
However	47	0	392	678	544
tooltip	93	154	188	427	2
appreciative	11	173	389	763	867
-ve	70	170	409	130	84
?	47	48	392	91	835
hinder	10	272	118	225	863
inaccurate	12	86	409	44	84
win64	84	7	417	241	644
journal	93	61	315	99	374
multidimentional	34	21	169	184	694
Discrete	20	93	248	642	989
bottom-right	78	288	25	122	979
variation	81	183	409	44	576
explicity	94	222	147	369	160
indented	57	37	222	236	298
freedom	77	219	132	550	454
compatible	35	57	167	9	376
LassoSelector	31	154	388	236	728
.matplotlibrc	45	80	352	775	798
equally	81	21	270	546	301
articulate	18	200	490	144	81
n-d	34	77	0	73	694
dawg's	4	17	254	710	441
original_data	10	160	274	196	192
couldnt	50	264	292	75	469
1.3.x	91	122	156	587	230
Approach	30	162	169	347	560
.applymap()	43	157	103	750	956
quotechar=	52	185	376	121	971
numpy.prod	42	27	14	15	709
n-D	34	77	0	73	694
California	95	73	279	322	586
filehandle	36	10	489	712	793
2,000,000	21	190	234	557	42
revised	4	235	254	710	81
n-2	44	201	370	617	778
n-1	85	195	370	255	192
.travis	57	235	429	450	59
0.4468177728	30	174	117	751	262
1.3.1	91	7	417	587	230
scikits	13	26	65	2	398
goals	13	26	63	458	219
15GB	10	127	355	159	359
eat	10	272	118	225	863
groupby.py	37	250	475	314	173
FFT's	20	93	425	191	738
non-parseable	61	58	443	539	501
stories	11	225	393	75	564
df.head()	94	222	74	293	729
bts_name	49	123	406	631	82
A.reshape	44	227	228	0	263
{2	54	54	287	730	585
{1	90	54	287	730	585
{0	86	89	287	186	347
arrB	44	293	4	196	357
sys.float_info.min	14	86	314	325	482
data_rgb	22	4	7	438	562
MST	30	21	419	751	38
ediff1d	42	27	14	313	244
Fortran-contiguous	34	77	396	404	77
MSN	79	49	487	787	517
newArray	74	293	4	509	228
MSI	67	151	470	241	104
MSE	77	168	132	783	162
MSD	81	170	356	327	576
MSC	19	186	33	590	966
MSB	14	291	85	566	520
MSA	69	162	191	61	145
anaconda3	55	128	52	477	56
2to3	67	57	76	735	311
onwards	78	204	338	616	456
arrs	44	205	46	196	357
Y_train	44	256	251	196	994
Besides	47	0	392	678	544
x.iloc	90	95	115	239	227
arry	44	293	26	509	228
self.fig.canvas.draw()	29	203	348	123	55
2+1	44	201	370	617	192
{{	86	58	136	150	858
{x	41	39	73	479	649
astounding	12	49	131	522	944
{}	86	174	117	230	298
y**2	96	201	426	560	13
friends	4	225	372	71	237
bar3d	31	13	294	592	271
15-minute	81	147	450	101	675
CFLAGS=	55	128	330	477	568
persistent	71	218	122	359	959
casual	88	225	5	419	53
infinite-precision	14	86	314	325	549
{A	48	144	419	276	497
extras	34	263	145	566	531
arr3	44	293	361	601	228
arr2	74	293	108	601	228
arr1	74	293	108	601	228
arr0	44	293	228	0	146
arr=	75	227	154	0	263
validation	77	168	186	705	646
REQUIRED	67	112	327	499	732
pardon	18	120	179	739	67
memory-mapping	76	188	65	359	957
OS-X	19	7	417	301	321
01:30	54	108	23	579	931
np.save()	36	153	336	423	306
whose	2	21	131	487	702
cmap.set_under	46	36	294	653	488
calculate	81	270	472	588	603
df.A.isin	90	297	54	551	779
GBPUSD1d.txt	36	239	50	384	305
Wrapping	76	51	261	312	417
Job	48	123	373	686	653
fine-grained	59	23	457	97	394
Apache	40	119	429	607	377
keylist	65	19	158	540	526
x.append	75	233	54	690	486
ax.text	46	226	30	46	348
assembler	7	51	345	2	730
upper-left	5	288	25	122	979
data.sum	64	150	403	65	48
Patch	31	1	388	399	879
suggesting	47	59	392	630	907
namespaces	15	135	181	777	195
22000	21	223	272	318	692
vast	13	272	5	118	176
x-values	81	288	270	546	884
Thomas	4	121	264	102	500
baking	13	26	126	203	765
RuntimeWarning	63	44	478	582	350
hessp	60	98	458	279	438
bla	86	129	465	185	496
Wes's	4	193	372	387	219
VALUES	86	212	182	343	858
df.index.values	27	95	115	239	227
-32768	14	291	46	325	482
10k	21	190	234	557	42
winded	11	120	114	35	695
10m	21	190	234	557	42
10x	10	202	37	323	876
quadtree	76	193	122	674	612
10s	21	160	274	323	655
implemented	76	51	65	9	417
10K	21	190	234	557	403
preferences	40	141	259	110	402
10L	44	205	154	30	357
10M	21	190	234	557	42
complexities	10	272	118	458	990
Link-only	4	15	45	644	643
10G	21	127	355	159	359
adhoc	13	272	126	203	765
nrows=1	52	10	376	121	971
.How	86	174	117	185	262
10X	10	202	37	323	876
nrows=2	46	284	255	577	430
10^	96	266	324	173	129
10T	21	222	355	167	959
coefficient	77	270	472	783	738
10+	21	190	234	557	326
Averaged	38	206	282	722	71
Greens	22	4	294	438	198
newlist	65	233	158	540	406
C-type	3	67	261	312	235
10%	21	160	266	323	176
a.all()	63	44	240	782	226
108	54	3	298	318	158
109	54	3	101	187	158
possibility	12	48	134	630	31
10=	96	266	324	695	421
102	54	3	298	318	158
103	54	3	298	603	158
100	21	223	234	557	252
101	54	223	298	318	158
106	54	223	298	318	158
107	54	3	298	318	158
104	54	3	298	318	158
105	54	223	298	318	158
dry	81	147	173	101	717
guassian	20	98	382	147	4
inefficiently	76	257	61	169	207
suitably	47	21	258	91	604
ax.set_aspect	46	284	494	757	508
economics	13	26	126	118	852
ignoring	6	263	456	618	531
credit	18	15	45	472	922
Windows\system32\	37	250	386	475	194
Serial	30	271	304	281	38
suitable	88	229	61	630	612
x=4	41	6	29	69	116
x=5	41	6	29	69	116
fsum	60	29	314	15	238
x=0	41	288	29	69	116
x=1	41	288	29	69	116
line.set_ydata	46	203	348	123	55
x=3	41	6	29	69	116
Also	47	0	392	678	544
specifics	12	225	5	144	219
axes.titlesize	45	80	448	134	906
os.environ	40	132	352	113	137
Renko	59	52	32	19	884
hard-drive	12	127	355	159	359
u.max	44	205	403	65	357
Includes	55	128	330	477	568
leaks	76	218	447	570	450
Moment	95	181	335	168	497
matplotlib.finance.candlestick	47	232	457	306	439
scipy.stats.rankdata	42	27	349	313	244
Included	4	235	342	252	552
12:14	90	95	115	239	995
X_mean	74	293	4	509	228
DIFFERENT	30	212	55	136	965
Sorting	69	31	100	530	911
x=x	41	29	177	396	13
x=y	39	117	29	32	116
wary	88	152	5	334	695
wart	88	122	147	9	172
warp	39	149	7	93	670
warn	45	152	334	269	350
__iter__	65	220	329	663	172
warm	11	232	232	444	64
adult	95	181	42	250	497
V	85	194	280	5	192
re-sized	29	154	328	335	180
semi-colon	61	58	452	539	501
aligned	2	52	25	546	884
ABC	95	181	373	168	497
A^{-1}	85	194	280	704	485
lw=	46	39	73	316	649
setup	40	57	429	697	732
akin	47	265	375	424	631
divergent	12	170	294	592	84
sinusoidal	20	93	425	709	989
dayofweek	99	63	68	426	452
non-PEP-8	9	239	138	458	606
Polyfit	38	206	458	722	71
magnitudes	20	170	425	191	84
np.memmap()	71	218	183	359	803
M1	85	172	481	671	778
incurs	10	272	118	225	990
numarray	7	51	65	2	957
Neue	45	230	448	767	909
^-1	85	194	280	704	192
boroughs	48	144	195	178	944
faults	40	37	301	699	954
weights=None	75	35	154	176	201
faulty	57	37	301	618	120
untill	21	37	128	764	954
replacing	2	263	145	573	531
Bootstrap	67	119	167	499	732
Castro	4	121	264	646	500
router	71	246	429	571	108
Apparantly	35	122	162	9	621
mGrid	90	54	13	545	744
fedora	84	151	432	301	156
np.correlate	60	269	403	784	396
attempt	57	235	342	450	59
dval	95	174	117	751	262
agregate	81	21	131	251	944
datafame	43	265	456	771	356
numpy.linalg.matrix_rank	60	194	102	431	485
test_array	74	293	108	586	228
TensorFlow	13	168	206	705	852
discriminant	77	168	186	705	738
recieves	29	246	444	236	852
Bilinear	72	206	15	722	71
cell's	2	215	328	405	2
ignore_index=True	49	47	406	631	445
Approximate	69	162	169	61	145
re-writing	76	116	145	573	531
LIMIT	36	171	182	343	88
PRs	35	173	220	292	106
banged	50	120	114	35	64
M=	85	194	280	704	192
linewidth	5	13	284	134	608
non-convex	72	42	231	152	102
scipy.sparse.dok_matrix	44	292	64	348	218
2015-03-03T18	54	181	287	158	277
Observe	78	21	25	546	560
persist	2	229	181	335	180
weeks	99	140	450	109	94
round-off	14	86	314	325	84
maximal	81	100	266	588	283
empty_like	42	188	88	404	581
plt.axis()	5	284	253	558	339
Zhenya	4	121	264	646	500
nested	65	233	158	540	207
NumPY	84	57	167	9	321
maximas	74	100	108	586	283
meas	41	205	177	107	201
meat	57	17	369	458	950
SUPP	52	185	376	85	971
Indeed	24	200	493	504	469
sorted_d	78	43	131	522	283
India	95	271	214	519	38
min_dates	3	18	162	266	470
right_on	49	47	406	363	445
re-constructed	2	116	328	405	187
Curious	4	17	143	630	835
.table	53	212	74	551	965
side	59	263	445	122	979
bone	18	232	232	170	852
mean	47	214	275	91	603
24h	99	140	453	198	221
68940742	44	227	228	0	357
sub-table	79	43	131	203	944
QString	31	1	460	172	787
stealing	29	187	128	123	2
first-class	76	94	65	2	730
eigvecs	44	194	280	704	598
readed	71	188	328	573	108
.tz_convert	86	274	68	679	997
typecast	3	220	162	312	235
1day	79	147	450	101	955
gradient	77	98	458	279	738
quantify	12	43	7	709	562
crucial	12	59	134	419	908
24H	6	85	449	48	817
reader	71	153	50	423	108
Users\	37	250	386	475	194
flashy	59	117	235	32	796
TA-lib	3	94	199	9	888
DLL	7	176	44	696	305
Cursor	31	23	388	149	282
244	54	3	298	318	158
246	37	250	386	187	194
241	54	3	298	318	158
240	21	223	298	318	252
243	54	3	298	318	158
242	54	3	298	318	158
249	54	3	298	318	158
248	37	3	298	187	158
curve's	39	170	231	733	116
003	95	298	419	751	361
cookbooks	59	21	393	75	564
Movies	95	181	373	168	497
10000+	21	190	258	557	42
np.delete	42	30	286	74	146
df.key	90	297	51	239	821
Padraic's	4	17	254	710	441
100000	21	243	274	557	42
Annoying	47	264	292	143	469
Lasso	77	168	186	705	528
features	13	168	186	705	646
np.all	27	260	431	18	866
150x150	44	205	251	45	943
00.000	99	69	119	155	221
invalid=	45	185	334	85	350
nopython=True	42	40	334	15	915
a3d	74	100	108	586	283
ditch	88	232	5	630	604
RMS	20	93	472	191	396
ARI	53	139	42	417	775
csr_matrix()	10	292	64	348	218
009903	79	228	487	231	285
annotates	59	52	495	199	177
np.take	42	30	286	358	368
SFrame	43	265	64	341	739
Producing	69	31	495	347	560
scipy.optimize.fmin	60	98	458	279	438
outputting	2	116	50	203	54
feature1	48	123	272	339	682
bouncing	50	187	235	195	64
old_simplices_array	3	67	261	157	498
post-processing	76	272	126	203	765
targetdir	36	132	222	384	568
ymin=0	46	39	73	316	339
hadnt	24	33	394	140	870
system()	29	1	128	236	444
distance	39	270	472	588	662
Consider	57	235	342	678	927
incantation	50	120	393	35	564
full=True	60	124	334	324	438
enabled	40	119	429	697	621
imputation	77	168	290	341	458
preparation	76	264	126	203	765
persuade	93	230	457	51	54
stratified	77	168	186	705	171
15.9	54	108	23	579	399
DataFrame.reset_index()	43	157	72	683	36
extracting	2	116	145	98	531
mini	13	26	126	458	950
sees	2	215	491	174	260
.set_useOffset	46	35	334	1	430
munging	13	116	126	203	457
.autofmt_xdate()	29	203	128	51	55
modern	76	26	138	169	604
mind	88	232	134	630	53
mine	4	17	254	710	441
minx	41	6	177	229	999
miny	41	6	289	229	999
paramaters	2	229	457	306	338
seed	29	183	181	725	162
5.05	68	54	257	332	361
seen	50	264	393	75	564
seem	47	59	393	75	564
mins	21	160	274	198	326
seek	36	153	336	423	306
5.00	95	181	335	168	497
estimated	77	124	132	783	4
test_set	53	256	74	668	994
MacOSX10.7.sdk	55	128	293	52	799
vecteurs	85	270	472	588	43
matplotlib-1.1.0	84	57	167	499	791
minX	41	6	289	282	810
idtolook	34	100	131	522	283
LOOPS	79	228	206	27	517
FixedFormatter	5	148	363	558	844
Inconsistency	69	31	237	264	316
QVariant	3	220	361	404	235
my_plot	15	40	444	236	444
Unfortunatly	47	42	392	630	31
newline	61	58	452	137	501
definiteness	85	100	239	586	192
translator	7	26	65	2	730
regular	47	21	270	91	301
unitless	96	170	314	391	344
CoreText.framework	55	132	330	477	568
min2	64	39	256	505	649
headers1	36	10	489	712	261
dok	65	292	64	348	218
doh	24	200	493	504	991
don	47	59	392	143	469
dob	48	281	486	788	390
doc	35	193	19	387	371
consumed	21	160	355	159	655
index.levels	42	257	115	369	227
m	44	195	370	107	192
dog	95	228	373	647	517
doe	6	48	456	143	835
principle	12	152	147	630	908
dos	30	174	117	751	262
ython	91	7	417	587	644
consumer	79	218	206	167	959
consumes	10	127	355	159	359
dot	34	194	137	5	598
1140	44	205	251	196	357
amending	2	37	222	405	835
np.linalg.matrix_power	44	194	137	704	598
pylab.draw()	29	203	128	123	55
RINEX	71	246	214	60	108
speedup	10	202	37	225	876
syntax	47	111	147	145	888
waveforms	20	93	425	191	344
post-process	2	116	145	306	260
Series.sort()	94	157	72	212	866
colobar	5	52	32	19	479
x264	93	61	315	99	54
Twister	60	42	48	725	162
Command-Tab	40	187	188	764	2
ageGrp	53	139	51	417	775
representing	81	21	233	487	702
explain	11	59	143	144	652
Free	67	151	63	516	850
sugar	65	94	26	145	207
RandomState	15	135	329	725	720
clobbered	15	135	181	777	195
folks	18	225	5	419	219
Freq	99	69	119	155	914
Remark	47	235	409	44	576
matplotlib.figure.Figure	31	1	348	399	444
patter	59	48	389	93	360
matplotlib.image.imread	22	248	381	141	722
coast	39	149	279	322	586
r()	75	243	274	690	655
np.issubdtype	3	220	162	15	172
tiled	34	77	258	45	943
Searched	55	264	393	75	564
linewidth=2	46	39	73	316	649
linewidth=0	46	39	73	316	792
linewidth=1	46	39	73	316	649
Dreamhost	7	26	63	516	594
linewidth=5	46	39	73	316	649
min()	43	280	103	784	956
chronological	79	144	337	708	944
ipython_config.py	55	132	352	775	798
Overview	38	224	259	281	114
Over	69	162	191	61	837
ioff	29	203	128	123	55
.where	27	260	418	72	131
PyArray_API	3	67	261	157	498
fitparameters	34	77	251	73	943
discs	59	52	495	400	177
architecture	84	119	2	241	321
chart1.size	68	32	117	425	486
g++-	67	112	276	499	334
compilers	7	163	152	326	850
cs.collections	90	297	4	509	995
Completion	38	271	259	110	38
decides	2	215	491	174	621
.readlines()	36	10	136	712	261
numpy.indices()	42	27	14	358	244
Recommended	76	257	61	675	612
decided	50	264	292	210	747
fnRSS	60	40	444	396	622
well-documented	13	26	138	118	398
0.0001	96	266	31	391	236
activities	79	228	487	480	285
Boost	7	51	65	2	730
subject	12	183	5	170	219
un0	75	243	385	425	484
03	99	182	318	34	789
00	99	69	119	525	256
01	99	182	318	372	789
06	99	186	318	34	789
exponent	14	86	314	325	238
reprinting	78	49	456	405	59
05	99	69	119	34	789
08	54	186	33	34	789
month_15	53	139	42	682	775
erfcx	96	29	18	173	13
system-wide	67	151	210	351	137
slighly	88	17	61	710	441
pets	95	228	373	168	517
0%	21	74	266	391	176
0-	68	266	370	200	192
+inf	96	29	314	391	13
lazy	88	59	5	419	733
triplet	34	77	239	522	336
triples	34	77	0	522	336
visualise	81	246	495	203	765
Counter	65	233	158	648	526
Wickham	13	193	372	387	264
Queue	29	218	183	359	432
381	54	3	298	318	158
382	54	50	340	81	277
383	54	3	340	81	158
384	54	3	298	318	158
0D	34	77	0	73	694
VC++	7	163	152	241	850
worksheets	71	153	86	638	561
article_id	48	123	486	339	653
ndarray.sort()	76	51	65	169	915
0L	53	139	42	250	199
0s	6	68	131	64	910
0x	86	5	443	563	898
Supported	93	61	315	99	374
against	47	21	392	534	783
0}	86	129	287	479	347
data-structure	10	272	122	702	863
und	79	49	50	60	108
0d	3	220	0	73	890
somelist	74	95	115	239	227
uni	50	37	114	699	469
0h	99	69	119	90	221
rel_time	90	297	13	617	744
0m	81	288	270	766	301
cum_sum	64	269	403	65	262
a.draw	86	35	117	751	314
z=2	41	288	29	69	116
z=3	39	149	29	69	116
z=0	39	149	29	69	116
z=1	39	149	29	69	116
z=6	39	149	438	69	116
height	5	288	284	245	479
numpy.save()	71	153	336	423	306
2194	44	205	154	196	357
window=3	64	150	449	48	48
loaded	71	153	328	98	108
iframe	93	52	90	51	54
traversals	76	272	118	169	863
replicate	57	235	342	450	766
BBBBB	78	49	338	616	456
website	35	193	372	387	704
Definition	30	35	154	1	314
item_nbr	48	144	195	787	637
suppress	45	263	457	618	625
source-code	57	235	463	37	451
numpy.genfromtxt	52	185	336	121	793
CMake	67	163	152	326	732
z=f	41	6	177	282	397
Can't	47	0	392	143	835
lmdb	67	57	429	499	732
.get_label()	46	148	494	46	348
Into	69	162	191	61	739
quadrants	39	149	438	440	116
------------------	30	271	368	429	428
melted	43	265	75	771	356
re-compile	7	232	232	664	315
Oz123	24	109	394	140	870
MemoryError	63	127	355	159	359
i-vuit	3	200	493	504	991
defeated	13	26	126	697	439
traffic	79	246	206	101	675
faked	50	235	342	450	59
enumerator	74	233	216	522	336
mouse	29	154	188	427	203
ReportLab	93	61	90	99	54
pre-allocate	34	188	88	404	581
saw	50	264	292	210	747
make	47	229	457	91	338
new.py	15	132	352	384	305
numpy.core	15	135	44	215	305
month_date	43	281	337	19	884
filtered	78	49	328	98	356
variable's	2	229	181	91	702
showing	59	235	342	450	59
bells	35	26	138	458	398
percolation	77	42	48	195	416
xbar	85	201	177	5	13
differing	81	21	233	546	120
kit	13	26	63	697	537
kij	44	143	215	5	37
supposing	2	0	392	405	923
opportunity	88	232	5	630	53
ax.set	46	226	494	46	348
butter	13	42	235	118	102
plt.clf()	29	203	348	123	55
Aggregating	69	31	100	530	911
pi3d	22	248	381	571	722
geopandas	35	122	495	199	376
LAMI	3	220	361	514	235
source_path	57	239	222	384	305
extra_args	45	185	334	36	906
materials	13	183	393	94	765
f.write	36	10	136	712	261
kiB	21	160	274	751	655
recombine	2	116	145	706	986
OverflowError	63	44	199	582	482
four-dimensional	81	126	495	93	177
Errors	63	176	191	582	136
ax.yaxis.set_major_formatter	46	39	73	505	649
versed	13	120	212	739	727
||	85	201	426	21	773
|x	96	201	426	560	142
somethings	50	232	114	35	64
transforms	39	21	248	191	371
human	61	246	409	203	604
numpy.memmap()	71	153	336	423	306
type's	14	291	162	202	549
=index	90	54	257	338	995
np.rec.fromarrays	75	18	141	266	969
Newton-Raphson	77	42	38	652	905
buyers	79	78	173	101	675
1sec	10	160	206	225	655
character	61	58	443	539	501
")]`	86	89	163	455	496
adress	2	229	392	335	338
CEST	99	268	68	426	27
Error1	40	57	429	664	315
neglecting	6	263	456	618	531
reuse	2	229	457	573	180
lexically	65	94	337	708	640
|=	90	297	26	617	744
Roberto	4	121	264	646	500
bbox	5	226	30	134	518
wanting	47	0	392	424	907
3-by-3	34	77	266	88	943
transform=	46	226	30	134	348
daemon	40	218	183	445	803
Cisco	84	119	2	301	321
numpy.searchsorted()	42	27	349	358	640
pandas.Dataframe	71	265	158	771	356
performing	76	116	275	203	734
customizations	31	193	19	97	439
unnecessary	88	263	118	573	863
arrivals	79	147	173	198	944
intermittently	29	218	301	764	625
a.txt	36	10	50	294	261
HDFStore.select	71	171	303	702	457
.squeeze()	64	47	406	489	73
Marching	38	206	282	722	905
differencing	20	93	459	191	738
Reportlab	47	48	375	742	31
interp	72	165	15	235	570
line2d	31	1	388	399	879
short-term	35	147	138	44	959
grading	13	120	126	35	765
electromagnetic	39	126	48	195	416
_everything_	18	232	5	419	53
scipy.optimize.minimize_scalar	74	40	177	396	622
line2D	31	1	388	399	879
sample_weight	41	35	154	176	201
Drop	69	31	100	530	911
meanings	61	58	443	145	501
Fortran-ordered	34	77	396	566	520
uncompress	36	153	50	423	942
exports_past	96	266	18	28	62
Daily	99	138	159	789	746
la.svd	60	194	280	431	485
matplotlib.pyplot.bar()	31	13	388	592	879
row-major	34	188	396	404	77
something's	50	262	114	419	625
.codes	53	139	51	551	779
[([	90	139	51	417	744
numpy.in1d()	42	27	14	313	244
restate	18	225	490	170	81
marshal	71	153	122	702	457
Marius	24	33	229	140	870
carbon_flux	20	93	403	336	344
bar's	59	52	284	245	479
whats	11	59	143	144	835
lapack_atlas	55	128	52	477	372
overloads	3	94	329	663	734
overkill	88	257	61	334	612
YYYYMMDD	99	63	68	426	452
c's	78	204	148	178	361
jend	74	195	4	690	486
+00	54	54	257	713	776
+01	54	54	101	713	776
+02	90	54	257	713	776
Extended	61	271	419	355	517
+04	54	54	257	713	776
df_later	42	111	361	212	273
+06	54	54	257	713	776
+07	54	50	368	713	776
+08	54	50	368	331	449
+09	54	54	101	713	428
inspected	71	37	301	31	59
counterproductive	88	257	61	334	695
frameon=False	46	284	494	577	430
plt.subplots	46	284	255	577	430
failure	63	37	301	699	625
lows	99	140	453	198	262
time_array	21	160	234	522	326
Interactive	93	141	259	209	402
25th	78	159	338	104	459
file.csv	36	10	376	294	971
bugfix	35	122	156	292	376
iterrows()	43	157	72	750	207
hex2dec	86	291	141	266	969
Grateful	11	173	389	763	867
+0j	6	68	12	130	910
originating	79	37	301	170	769
cv2.imread	36	90	246	141	942
pandas.NaT	78	204	456	130	995
semicolon	61	58	452	230	501
Parallelization	76	272	118	169	417
numpy.gradient	60	98	248	742	396
pandas.ols	77	124	458	784	443
self.unit	74	233	54	157	314
id_max	74	233	54	690	336
np.sqrt()	60	40	458	396	709
Andrey	24	109	394	140	870
discriminate	81	21	275	588	603
-lpython27	55	128	386	475	194
authoritative	13	193	372	387	371
RTFM	18	120	114	35	64
Andrew	4	240	264	646	500
ALSO	30	212	55	136	965
waitingkuo	24	33	229	140	870
Timing	10	202	37	534	783
Andrea	24	109	394	140	870
least-square	77	124	458	324	438
person_ref	64	123	256	197	82
HOG	77	168	7	705	168
Anycase	88	109	229	444	264
minimas	34	100	108	586	336
iters	10	243	46	327	655
axe	5	288	32	19	518
name_list	48	123	486	339	779
HOH	86	129	373	198	262
root-finding	72	98	38	279	809
HOW	30	212	55	136	965
hmag	90	297	13	509	446
pandas.lib.map_infer	37	250	330	205	461
phone	71	246	58	609	852
Color	69	162	335	209	837
Win	19	7	432	301	644
mappable	31	1	294	653	271
to_latex	43	265	86	24	561
zdir=	41	39	73	316	649
subsitute	61	49	456	355	262
pd.version.version	91	122	184	103	630
customary	18	225	314	170	84
N**2	10	202	356	327	668
pandas_ml	13	26	126	118	765
manager	67	151	47	351	732
manages	2	215	491	174	621
Python27\libs	37	132	386	475	194
Readings	78	144	195	787	944
37.5	41	223	324	200	252
skeletonize	22	248	7	141	722
DataFrame.from_dict	43	157	72	24	73
depend	12	229	416	91	563
fancier	88	257	61	306	439
pd.Series.nunique	42	157	103	683	956
sim_pearson	60	219	375	742	631
suffered	50	264	301	618	120
Python27\lib\	37	250	27	314	889
my_arr	48	233	74	551	336
retype	88	232	232	144	469
someValues	53	95	51	448	821
len()	63	44	460	172	787
tk-dev	67	151	327	232	334
Candlestick	59	52	495	209	837
4.7.2	84	7	167	301	321
x86-64	84	163	2	241	850
.contains	53	89	163	340	131
forked	35	218	183	609	594
irValue	46	288	289	200	810
drag	59	154	188	427	203
x_coords	41	293	251	282	397
.csv	71	153	50	423	108
iter	36	233	489	712	526
item	74	233	216	522	336
2**63	14	291	46	266	482
2**64	14	291	46	325	549
funNeg	27	100	14	396	709
df.transpose()	64	47	74	551	779
it'll	47	0	232	143	604
cetera	95	298	233	519	456
typeError	63	44	199	582	888
Grp	48	123	486	197	653
matplotlib.pyplot.ylim	5	288	253	245	810
mi	85	174	370	107	901
inconsequential	14	86	314	334	84
____	68	176	117	21	823
Mathcad	60	296	248	742	738
230	54	223	298	318	158
12:25	36	10	489	751	262
MyFrame	27	297	51	234	821
12:21	99	69	119	155	221
mu	96	219	177	560	201
adds	2	215	491	174	621
mv	85	201	226	5	838
generalizations	88	152	5	630	31
Internally	3	94	162	174	621
deriv	96	124	177	396	201
unobserved	6	85	456	276	910
Xmax	41	205	289	200	252
FLAG	78	49	456	355	944
tangent	39	149	438	93	116
kilometers	41	288	438	200	884
PyParsing	19	7	417	13	644
battling	50	120	393	75	564
SimPy	13	120	48	195	852
temporaries	76	188	88	275	581
simultaneous	12	42	55	445	734
__repr__	3	220	329	663	235
suggestion	4	121	254	646	441
conveniently	2	21	457	91	338
Tue	99	186	33	34	789
adjustable	5	13	284	245	479
BUILDING	59	52	495	51	54
Zfilt	41	6	239	200	252
Windows7	19	7	432	301	644
ignore_index	49	47	406	683	73
Performs	34	179	275	327	734
new_value	74	100	216	586	228
numpy-like	76	257	61	675	612
data.to_csv	36	10	376	712	971
4Gb	84	127	355	159	359
pandas.read_csv()	52	185	28	121	793
wealth	14	94	46	325	238
ycoord	39	126	206	167	949
np.roll()	42	27	14	313	368
DF_A	48	144	195	178	637
tears	50	232	232	407	781
connector	71	171	473	128	88
going	88	59	114	144	907
ion()	29	203	128	123	55
conformable	34	77	131	98	694
user333700	4	121	394	567	500
zeros_like	42	188	88	404	581
np.histogram()	42	14	297	171	956
pylint	35	122	174	664	315
tandem	2	232	429	609	328
np.fft	60	296	248	191	344
fig.gca	46	39	189	316	649
Montreal	54	69	119	155	221
Latest	91	122	156	587	230
maintainable	88	257	61	681	612
out-of-date	35	122	220	9	594
'])	53	150	256	250	775
reviews	79	228	487	480	285
groupID	48	100	108	276	637
*1000	75	243	385	425	486
ERBB2	48	95	115	339	779
binarized	39	126	7	709	670
permutations	34	43	131	522	944
confused	50	59	114	35	907
add_newdoc	15	135	44	205	823
Score	48	138	159	339	653
])))	68	32	13	545	744
spanning	81	147	450	101	675
Issue	69	162	237	281	114
y-value	81	288	266	104	116
2.7.6.1	19	57	417	13	644
Kalman	20	126	382	709	989
premade	13	26	126	118	398
python-opencv	67	151	167	499	732
map	22	73	279	199	586
mat	44	195	4	509	228
may	47	0	392	143	338
max	81	269	266	28	603
fed	2	215	328	98	187
Curve	38	206	282	722	71
mac	19	7	306	301	232
mae	27	174	117	509	945
mad	50	200	114	284	469
mag	41	6	177	107	211
end	2	263	392	167	769
destructive	10	202	102	431	751
journals	13	224	126	118	54
]))`	75	32	13	10	585
man	24	33	229	444	870
Trim	69	31	100	530	911
scrambling	47	263	456	618	863
neck	10	277	118	225	169
other_array	74	293	26	509	228
effecient	88	48	61	675	327
s.tolist()	65	233	54	750	526
cascade	2	232	233	51	417
131	54	3	298	187	158
right-hand-side	2	111	216	276	891
get_loc	43	157	72	683	956
Trip	95	138	335	198	687
talk	13	193	372	387	219
thresholds	81	183	409	783	162
shaky	12	120	212	419	727
wishing	13	23	212	739	907
pitch	20	93	425	507	949
beginner's	50	120	179	739	67
df.to_dict	64	233	74	551	975
8.5.9	55	112	330	368	315
clearest	88	17	61	675	327
sharey=False	46	284	255	577	430
WXPython	93	57	63	537	537
WTF	24	200	493	504	991
listing	79	49	233	405	713
Timedeltas	94	63	138	426	452
0%-100%	81	288	266	19	884
elyase	24	121	264	646	500
threshold=	46	129	334	36	906
subexpression	76	42	131	574	734
bad.sum()	74	100	4	586	995
NorthAmerica	53	123	51	448	821
pyplot.show()	29	203	348	123	55
IWWGCW	53	139	51	250	82
.column	90	297	13	234	744
Simple	69	179	169	61	560
localtime	94	63	68	426	452
settings	45	80	457	269	909
arrows	59	52	433	32	116
Simply	47	0	457	678	9
2015-09-01	53	139	51	448	821
rock	24	109	229	102	870
hijack	2	215	126	203	31
2000-01-02	99	69	119	155	256
xls	36	153	86	638	561
last_seen	53	281	486	339	82
bruteforce	34	42	131	327	234
COUNTRY	48	123	486	339	779
usethedeathstar	4	121	264	646	500
Conditionally	69	31	100	530	739
time.clock()	10	202	37	534	876
tmp1	44	194	137	5	598
tmp2	44	40	137	5	598
600141	95	123	335	606	255
emerges	12	37	301	618	120
reportlab	93	61	315	99	374
3rd	78	21	338	616	456
greeks	79	78	450	101	955
Arrays	69	162	191	61	837
emerged	29	215	328	764	2
NoData	22	248	7	709	670
decorators	76	51	65	257	915
asymptote	59	117	29	69	116
bombs	50	57	429	699	732
sideways	59	52	25	32	884
.minute	99	140	453	198	687
Imputation	38	168	186	341	171
q.base	3	188	361	212	273
org	79	228	487	390	285
ord	86	291	141	28	969
df's	49	47	75	706	356
11:59	99	140	453	198	221
or_	42	27	14	313	709
macos	40	122	167	697	321
derivation	20	98	231	279	738
Being	88	120	212	353	727
T-test	81	116	145	203	986
copy-and-paste	57	235	463	37	451
doug's	4	17	254	710	441
thing	47	59	134	630	908
40x40	44	205	251	45	943
think	47	59	392	630	908
cheese	95	59	456	355	469
PyPlot	93	23	495	51	710
Yay	24	109	229	140	870
Referring	4	17	254	296	81
1W	64	287	449	48	48
1Y	53	287	449	250	199
repelling_force_prefactor	34	100	275	522	734
1A	95	298	304	168	361
1B	78	144	304	178	361
t=t	85	174	177	107	192
1D	34	77	0	73	694
1G	21	127	355	159	359
1H	64	287	449	197	48
1K	21	190	234	557	42
6867.0	30	50	368	429	428
unique()	43	157	349	683	956
1L	44	205	154	30	357
interchange	47	229	457	91	338
1s	78	100	131	64	944
.view	3	227	141	266	969
.9	96	266	23	695	797
1y	95	147	173	198	817
autoscaled	5	13	253	245	479
Indicies	47	174	162	91	835
heroku	67	119	276	499	137
gages.txt	48	281	50	294	502
1b	78	271	239	168	801
1e	46	243	289	46	810
1d	34	77	0	73	694
1h	99	160	449	48	817
1k	21	190	234	557	42
1j	44	29	137	173	598
1m	21	147	270	557	326
subplot	5	52	255	19	518
eyes	18	225	114	144	67
isosurfaces	72	23	495	199	177
gc.collect	29	218	447	570	450
bool_	3	291	162	266	470
broadcast	34	77	251	73	694
t=1	96	201	426	560	142
todense	3	292	64	348	218
Luke's	4	17	254	710	441
butt	45	80	448	269	909
Tough	57	59	392	144	451
cleanse	71	116	145	203	986
regridding	72	165	214	152	570
coefficients	77	124	132	783	738
11	54	186	298	338	811
10	21	223	234	557	252
13	54	186	298	318	811
np.round()	14	86	314	325	549
15	21	223	298	318	811
14	54	186	298	318	811
bools	14	291	95	18	470
16	21	223	298	318	811
countourf	31	13	294	199	627
18	54	186	298	318	811
1=	95	204	419	168	497
1%	21	160	234	391	176
booted	84	119	429	301	321
1+	96	29	18	173	62
1*	68	201	18	28	62
1-	96	174	18	751	216
countours	39	126	279	766	573
$LD_LIBRARY_PATH	55	132	352	113	568
gathering	13	246	126	203	959
unqiue	78	144	195	787	944
header=None	52	185	28	121	971
He's	47	0	445	210	747
topics	18	193	372	527	219
zlist	41	6	177	282	397
SWF	71	61	315	571	537
figtext()	5	13	32	51	518
set-like	12	94	147	552	734
monochrome	22	248	7	438	722
60x60	22	126	258	45	943
speakers	13	224	372	118	765
efficient	88	257	61	675	327
isolate	57	232	232	144	338
potential	12	152	134	552	120
hashlib.md5	36	10	489	712	261
numpy.outer	42	30	137	74	598
.pop	53	233	54	551	526
so.index	90	95	115	239	227
collapsed	2	215	328	673	187
Toolbar	93	154	104	537	728
t-distribution	12	183	409	783	738
chromosomes	79	228	487	787	944
INTC	95	123	373	168	653
roster	79	78	450	101	959
INTO	36	171	182	343	88
zigzag	59	117	495	199	177
bowels	12	37	301	697	120
Expectation	77	206	132	783	738
viewable	59	154	284	245	203
circle's	39	149	438	93	116
larry	34	94	122	9	694
MI	94	222	456	405	921
klunky	88	257	61	334	695
Accounting	69	162	191	789	739
s_cols	74	95	115	239	779
maxing	10	127	355	159	359
rating	79	228	487	480	285
shot	11	232	232	407	469
show	57	235	392	37	451
Clearing	29	154	128	51	2
in-RAM	10	272	118	44	863
k=5	75	243	385	425	486
Width	95	205	251	45	943
drawings	59	52	495	51	54
corner	39	117	25	122	979
istead	42	27	14	313	439
dice	50	264	301	699	888
Hull	38	206	282	722	353
apriori	12	229	456	341	563
\right	86	129	117	299	66
img.shape	44	90	246	0	357
linefeed	61	58	443	539	501
dico	48	123	487	197	653
percentiles	81	159	173	104	459
dict	65	233	158	540	526
Services	38	271	282	519	38
Translation	12	170	409	44	604
2ms	10	160	37	323	655
Selected	30	271	222	281	315
wheezy	19	7	432	301	156
M.dot	44	194	280	704	598
scipy.stats.entropy	60	21	392	742	709
nosetests	67	112	174	57	677
8-10	21	190	234	557	326
aim	12	21	134	203	563
nearly	10	59	37	44	604
rtol=	14	266	31	1	236
secondary	59	52	32	19	884
Considerations	47	21	392	91	338
matplotlib.bar	46	14	383	568	710
a.xaxis.get_majorticklabels()	65	233	54	690	526
GaussianNB	31	220	329	514	720
answering	18	225	45	472	922
hardcoding	2	116	145	573	531
dfs.append	36	10	489	712	261
lstsq	60	124	102	324	751
Corner	38	206	282	722	38
Lesson	24	109	229	444	870
worrying	88	232	118	573	531
silently	94	222	301	618	470
__module__	15	220	329	514	720
dict.get()	65	157	14	15	866
relative	81	170	284	245	479
bitarray	65	135	158	735	957
Location_Id	48	123	486	197	637
timeit	10	277	37	534	706
registering	2	215	491	174	720
Multinomial	77	168	186	705	646
totalData.FY	46	39	73	505	649
diamonds	59	14	342	49	710
numpy.less	27	260	137	18	866
Montesano	24	109	394	140	870
betwen	22	270	7	709	562
betwee	85	270	275	391	955
time_col	48	281	456	339	502
pip's	35	151	470	604	594
Identifier	48	123	486	339	502
784	44	205	251	45	943
785	14	18	162	196	260
buffer()	3	220	261	312	235
DateFormatter	5	148	363	558	745
789	86	181	373	211	340
imread()	22	248	381	141	722
~5%	10	202	37	323	876
non-numeric	6	68	12	130	910
}$	86	129	117	299	66
exhibits	57	235	463	37	766
guesstimate	21	160	234	557	655
writing	76	116	145	573	531
multivariable	77	98	38	279	809
~50	21	190	234	557	42
MS	71	171	473	241	850
_string_to_bool	63	176	44	696	136
Luckily	35	26	138	9	544
LASException	63	37	199	582	823
sensibly	12	170	314	91	563
Z.ravel()	44	35	154	176	397
educated	12	183	5	419	53
df2.values	64	150	406	551	48
pandas.read_fwf	52	185	28	121	793
ODE's	77	98	38	279	416
}}	86	129	287	479	858
readlines	36	10	489	712	261
Vanilla	84	57	167	241	321
Cellar	55	128	488	82	423
traversal	39	126	235	203	177
GLCM	34	126	7	45	943
f90	7	163	44	215	315
~5x	10	202	37	323	876
Learn	38	168	186	341	353
encapsulation	76	26	65	257	417
PySerial	50	246	58	571	727
Ginput	47	57	301	91	888
remodmaf	53	139	51	448	199
0.0354	68	54	257	713	449
Somehow	50	264	292	210	544
__init	37	250	475	205	194
ongoing	35	193	220	292	106
Pandas.Series	43	157	72	771	956
1:35	81	288	266	200	301
ax.set_xticklabels	46	148	363	46	844
setup()	15	57	44	664	957
planar	39	149	279	93	102
conferences	79	78	487	480	852
atributes	6	68	456	98	910
apropos	15	135	181	777	873
endswith	65	157	163	589	448
pressing	29	154	188	427	2
malformed	61	58	443	539	501
p.show()	29	37	128	236	55
cursors	93	187	104	537	591
N-1	85	219	370	391	454
circularly	20	93	425	191	344
group-by	43	265	75	771	356
ODBC	71	171	473	128	313
configurable	35	193	19	9	371
mpl.py	15	135	44	384	823
speech	20	246	58	195	416
arguments	31	40	444	15	709
mean_data	74	297	26	509	474
Gotta	50	232	114	444	469
oil	79	228	450	101	675
alpha+1	96	201	18	173	62
Modules	7	57	259	110	402
res.shape	68	32	431	545	486
back-end	93	119	315	537	591
N-D	34	77	0	73	694
climbing	77	42	48	195	416
ois	24	121	264	504	908
weave	7	51	428	215	915
ILNumerics	13	26	63	97	537
largely	12	152	134	552	908
numpy.unique	42	27	349	358	833
macro	71	153	86	638	561
ax.set_position	5	284	253	46	430
roughly	21	190	234	557	655
TV	79	228	487	480	285
N-d	34	77	0	73	694
concatenations	71	116	145	706	986
solve	11	42	38	799	360
generic.py	37	250	27	314	173
numpy.eye	44	227	228	0	484
bumping	50	188	447	573	450
__format__	3	220	329	9	235
OrderedDict	65	233	158	540	526
np.ndenumerate	42	30	286	358	28
Ways	38	162	191	61	837
savethread	29	220	444	236	406
adjustments	57	229	457	546	394
TS	43	281	449	48	514
Hooked's	4	17	254	710	441
mplDeprecation	86	129	117	751	858
multiples	81	21	233	546	238
window_size	44	205	251	45	943
TO	30	212	55	136	965
e^x	96	201	177	163	13
TM	84	127	2	410	580
pile	21	218	206	167	212
heavier	59	183	409	44	604
Likelihood	77	98	132	147	162
pill	39	126	206	93	949
asof	43	85	72	683	817
grip	11	120	114	35	727
Thank's	24	33	229	667	870
slanted	59	117	495	199	177
np.max()	42	269	103	313	244
Wherever	14	291	85	325	549
Numpy-discussion	4	193	19	71	114
TF	85	298	419	467	192
grid	39	165	270	733	301
Appid	99	69	300	338	126
np.apply_along_axis	42	269	286	358	244
436	75	243	385	297	357
nodeID	74	233	54	690	526
re-implementing	88	257	5	35	695
Comparing	69	31	100	530	911
tooks	21	160	274	323	655
serves	2	215	491	174	950
server	40	119	429	609	377
facing	50	120	60	799	120
first.csv	79	144	195	635	944
missing=	6	85	418	548	443
repr()	3	94	162	15	549
Hack	47	0	392	91	835
served	13	26	183	609	959
fonts	93	230	448	767	909
chuck	71	116	145	706	986
sym2	53	95	115	239	227
left=0	46	284	253	46	339
erase	2	263	457	335	180
regex=	86	89	163	340	131
polynom	77	98	231	324	703
Multithreading	84	57	169	9	145
c.arrows	31	13	388	399	879
sym=	46	39	73	316	649
z-direction	39	149	438	199	177
14:00	99	253	119	525	256
ADDED	30	212	55	751	428
confirm	47	37	143	210	59
14:08	54	69	119	158	126
extensively	13	26	393	75	564
Conda	67	151	210	351	104
textvariable	31	1	388	514	879
copy=copy	75	18	141	266	969
numpy.matrix()	34	40	444	15	709
Irrelevant	38	224	282	519	950
.item	3	220	361	514	235
Chapter	38	224	282	94	689
Pairs	38	161	191	264	698
T2	85	172	481	224	778
bar-graph	59	52	495	32	177
arithmetical	76	94	122	169	734
16:00	99	253	119	525	256
regexp	61	58	452	589	448
regexs	61	89	163	589	448
16:03	99	140	453	155	687
16:05	99	253	453	525	256
847	54	3	101	797	139
data.items()	65	233	74	690	526
smear	78	170	266	122	47
mixes	2	215	162	174	260
lsuffix	49	47	486	363	445
mixed	94	94	162	618	470
airfoil	39	126	495	93	177
referenced	2	215	181	252	952
io.BytesIO	36	10	336	712	942
yyy	48	123	148	448	522
signing	50	232	134	573	863
vacation	50	140	394	407	64
dput	57	235	463	37	451
references	2	94	447	570	450
strip	61	263	452	230	501
Macbook	84	7	2	410	580
annoys	11	225	143	144	53
.tif	22	248	214	571	593
spline	72	165	15	235	438
needlessly	88	272	147	334	695
shells	40	141	281	76	632
plt.subplots_adjust()	5	226	494	757	619
complex128	3	291	141	597	969
Visits	79	138	173	197	35
cosine	20	270	472	191	662
virtualenv's	67	132	352	113	137
Simpson	77	98	48	652	905
Arch	19	7	432	301	156
imagesc	22	288	284	245	479
pretends	3	94	122	702	890
Yielding	57	235	342	347	560
strikes	88	59	114	284	492
sophisticated	13	257	61	118	612
hiccup	50	232	301	35	120
_new_	18	225	45	527	509
INT_PROP	36	129	473	343	369
Upvoting	18	232	232	567	469
Anyone	11	173	143	763	652
myfile2	95	49	373	185	517
myfile1	48	123	373	185	496
pandas.DataFrame.to_csv()	43	153	50	423	356
Avi	55	128	52	477	568
embed	93	61	104	537	537
Avg	99	138	66	198	687
USE	15	212	55	215	965
USD	48	268	419	686	497
pyplot.pause	31	13	348	592	879
USB	40	246	58	609	600
USA	95	298	318	168	497
maxes	21	127	208	167	326
new_matrix	44	194	280	704	598
citation	4	214	490	170	285
deep	12	59	147	257	417
IQR	14	159	266	104	459
Blog	4	239	372	387	552
deem	18	225	45	472	53
environement	67	119	167	697	315
Blob	71	171	303	61	457
planets	39	149	235	298	177
deed	24	121	264	646	500
film	18	225	206	407	852
fill	6	68	456	546	910
Resolved	24	109	222	567	469
genres	48	123	486	27	1
drivers	71	171	303	128	88
numpy\	55	176	386	696	305
_are_	47	0	457	91	908
fruitless	11	109	229	444	870
FWIW	88	17	254	630	908
pysqldf	30	212	182	343	35
max_value	27	266	289	46	810
keys()	65	233	158	540	526
df_compare	53	139	256	682	199
df.to_dict()	57	239	463	37	975
numpy=	91	7	417	13	230
important	12	152	134	552	908
3-byte	3	18	162	266	119
dropbox	71	239	463	443	639
decorated	65	40	444	15	709
concat	49	47	75	706	73
cv2.cvtColor	22	90	246	141	722
imprecise	12	183	409	44	84
assignin	40	141	281	76	632
parser.c	37	250	27	314	802
.reset_index()	64	150	406	548	294
hypotenuse	39	149	438	69	116
numpy.subtract	27	29	14	751	486
alright	50	200	301	504	469
98.x	81	43	231	709	562
np.array()	65	27	158	15	235
funcs	76	94	103	169	734
duplicates	78	144	456	405	944
temp.macosx-10.6-intel-3.3	55	128	293	52	56
forbidden	2	152	60	618	625
SAGE	13	26	63	118	398
worms	76	232	232	35	863
Station	48	138	140	197	653
Centroid	38	206	438	209	837
shorthands	65	94	181	145	195
duplicated	6	49	456	405	944
hspace=0	5	284	253	757	339
prefixed	61	58	330	86	568
chunk-wise	71	116	145	706	36
unpickling	71	218	183	359	959
Overlapping	69	31	100	209	837
prefixes	65	233	158	86	526
24.35	54	50	300	158	139
fig.add_axes()	31	203	255	577	430
numpy.allclose	60	29	137	313	866
joblib.dump	71	153	336	702	306
Physician	48	49	148	276	517
line_code	79	228	487	101	675
returning	2	215	491	174	888
Bytes	86	18	272	682	199
x.data	74	293	361	509	228
domain-specific	13	26	63	458	765
difference	12	21	134	552	606
pngs	93	61	315	99	374
splitter	29	134	348	123	55
Hold	59	271	335	281	796
np.linalg.solve	60	194	102	704	751
re-scale	81	288	275	391	603
applicable	88	229	147	630	612
x.count()	68	29	18	173	62
Kill	40	246	206	498	769
stderr	40	37	222	288	625
splitted	78	49	328	98	986
assignement	94	222	115	369	160
portable	7	26	63	2	730
new_z	41	6	177	282	397
grabs	2	215	491	174	92
-5	96	266	324	397	810
QSTK	55	57	330	205	372
1294012800000	54	50	368	158	277
lvls	90	266	289	397	810
ValueErrors	88	157	114	15	469
Gave	24	109	394	567	870
subscripts	61	143	215	86	123
90s	50	232	232	407	64
dict1	48	144	486	178	637
pandas.lib.Timestamp	3	220	460	514	3
dict2	48	123	486	178	497
consumptions	41	6	177	107	622
Sorted	24	200	493	708	469
Windows\SysWOW64	37	250	386	475	194
public	35	239	181	257	195
bifurWidth	31	13	294	592	271
height_ratios	46	284	255	577	430
compilation	7	163	152	326	915
component	20	126	425	191	949
dabbled	50	120	114	35	727
NFW	77	124	132	147	4
Contact	21	298	206	519	38
NFS	40	119	429	609	377
Unevenly	38	162	191	209	837
GCN	57	235	342	450	709
two-tailed	77	214	132	783	162
Dimension	38	162	191	61	698
902	54	3	101	318	158
900	21	223	234	557	252
907	90	54	101	332	995
dicts	65	233	158	540	526
harddrive	71	127	355	159	359
issubclass()	63	44	199	582	341
90%	81	170	266	44	176
\displaystyle	93	230	457	51	54
Date-Time	52	185	376	121	971
line_vec	96	201	18	173	62
GCV	60	270	472	431	485
emptied	29	218	128	167	769
pl.gca()	46	226	494	46	649
readily	13	26	138	91	371
Europe	99	268	318	155	27
ECDF	60	214	132	783	4
superimpose	59	52	495	621	177
df.query	64	260	74	185	131
PyObject_GetItem	3	220	261	146	235
wiped	50	264	292	664	747
two	47	21	233	251	338
comparing	47	21	275	534	783
splash	29	187	128	764	2
astr	90	174	117	690	262
iteratively	2	116	145	706	986
wipes	2	263	491	699	59
ax.clear()	29	203	348	123	55
District	95	138	159	519	502
read_table()	52	185	28	24	307
sequence.apply	74	100	10	772	838
A.ravel()	44	293	228	138	146
np.linalg.svd	60	296	102	431	751
train_data.ix	90	297	13	509	744
col2_0	21	223	234	557	252
g.get_group	64	150	256	551	48
vectorizations	10	272	118	169	207
frustratingly	13	120	212	334	727
paragraph	4	225	490	170	81
transaction_id	48	144	195	276	944
McKinney's	4	224	372	94	689
abandon	76	232	232	125	439
Hessian	60	98	458	279	485
multiindex	43	265	75	771	921
-latlas	55	128	293	52	56
approved	35	225	372	686	340
200.6	41	288	266	200	884
200.0	68	266	289	46	810
Do:	55	112	276	57	128
sphere	39	149	438	93	116
attain	20	246	206	203	765
8)]	68	32	257	338	139
AXLES	48	144	195	276	118
clf_nb	74	195	54	690	424
Raymond	24	109	394	140	870
awkward	88	257	61	334	695
13.2	84	108	2	579	322
dydx	90	297	4	239	744
Meaning	47	0	392	678	490
three-line	88	257	147	334	908
13.1	91	7	417	587	322
ensemble	77	168	186	705	646
Doh	24	33	229	140	870
pandas.DataFrame.plot()	31	13	388	568	879
Don	18	109	232	444	53
B-tree	71	188	122	702	457
.stack()	64	47	406	551	48
Doc	38	193	19	387	114
advice	11	173	389	763	867
scipy.signal.detrend	81	170	409	44	738
Dog	95	123	487	686	682
csvfile	36	10	489	712	261
group's	78	144	195	276	559
rasterized=True	31	13	383	592	608
row_sums	44	227	228	509	263
30x30	39	79	41	45	943
Dow	79	78	450	762	746
Dot	34	179	169	264	145
sse2	7	163	330	418	461
that'd	11	59	232	143	469
8))	75	243	385	425	484
T.inv	85	194	280	5	485
to_latex()	43	265	375	24	710
erfj	44	77	137	5	598
interpolates	72	165	15	235	301
1470	37	3	117	187	158
responsibility	88	152	181	257	195
Alignment	69	162	191	209	521
redirecting	40	37	222	384	954
Trivial	4	17	147	458	908
playing	50	264	393	75	564
that's	47	59	392	504	469
excepted	47	37	392	699	59
lib.linux-x86_64-2.7	55	128	293	52	56
re-assignment	2	188	145	573	923
ANOVA	77	214	132	783	162
get_datetime_from_string	37	250	117	187	314
Haffner	4	121	264	646	500
filters	20	93	382	709	989
sin()	20	29	425	191	344
suffer	12	272	118	552	990
24	21	223	298	318	811
25	21	223	298	318	811
26	54	186	298	318	811
27	54	186	298	318	811
20	21	223	234	557	252
algorithm's	12	183	409	44	563
22	54	186	298	318	811
23	54	186	298	318	811
mpltools	35	23	63	97	398
final_dict	53	233	54	690	779
system-installed	67	151	167	351	732
28	54	186	298	318	811
29	54	186	298	318	811
2%	10	160	37	323	576
2-	69	21	237	751	216
2*	96	201	18	560	13
2+	21	190	234	557	42
2T	96	201	18	507	62
Transposed	22	205	251	98	672
Installation	67	151	167	604	104
2R	95	181	272	211	497
2^	14	194	46	327	482
home-brew	67	57	167	697	732
2X	10	202	37	323	876
noticing	24	200	493	567	991
2D	34	77	0	73	694
humans	88	257	5	144	451
2G	21	127	355	159	359
2A	54	298	304	338	361
2B	95	298	304	519	361
filter2	44	77	251	73	228
2L	44	205	154	30	357
formulating	18	225	45	527	219
2N	44	205	370	327	192
complain	50	37	301	699	888
association	2	116	337	374	606
2u	85	298	239	168	801
10-100	21	160	274	323	655
Saving	69	31	100	530	316
2s	78	190	195	64	801
"))`	86	129	260	455	496
2}	85	181	287	730	497
MacOsX	84	7	2	301	321
2x	10	202	37	323	876
2y	96	201	18	560	62
FinalCSVFin.csv	36	10	376	185	261
2d	34	77	0	73	694
conic	39	149	438	93	573
2a	85	43	239	168	801
2b	39	43	235	400	234
2c	94	222	490	504	160
2m	21	147	370	200	252
2n	96	201	356	327	668
2h	24	200	493	504	469
2i	3	291	85	266	969
2k	21	190	234	557	42
harm	88	152	5	618	990
UCS2	67	151	155	664	732
Built	55	57	167	499	732
.cumprod()	27	260	431	234	945
freq_chan	75	227	54	690	486
energy	20	170	206	507	949
hard	88	59	5	144	695
Build	69	31	100	530	911
fist	2	215	338	405	59
it.I	47	57	167	51	835
XLS	71	153	50	423	108
orient	52	185	28	24	793
np.minimum	42	269	403	53	659
y_size	68	54	300	797	139
Medium	95	181	373	686	497
=B	90	297	13	509	744
discouraging	13	120	212	419	53
transposing	34	116	396	566	520
print	47	174	74	699	975
foreground	22	4	433	438	198
circumstance	12	152	5	144	604
gridspec_kw	46	284	255	577	430
Equation	38	206	282	722	71
x2*y1	96	201	426	617	421
s_low	48	144	148	67	750
1293840000000	54	50	368	158	277
Leaving	47	0	491	678	544
members	2	21	233	514	720
item_id	48	123	486	197	653
AMIs	7	119	63	697	732
cheers	24	33	229	667	870
DataReader	71	78	450	762	746
computers	84	119	2	697	321
0.02	96	266	324	695	421
conducted	10	183	37	534	783
Pythagorean	39	149	438	93	102
additonal	57	263	456	405	986
copper	22	4	233	571	177
y-limit	5	288	284	245	479
dont	47	0	392	143	835
unmanageable	21	190	355	159	359
matplotlib.path.Path	31	1	388	399	879
done	47	48	328	799	187
par2	5	148	255	577	974
par1	5	148	255	577	974
df.time	53	139	68	72	390
csv1	36	10	376	712	971
csv2	48	138	66	789	653
quads	76	51	65	169	730
Precision	38	179	169	108	145
least	47	0	392	91	338
trainY	74	195	54	690	577
182	54	3	298	318	158
183	54	3	298	187	158
180	96	223	324	200	252
assumption	12	183	134	552	563
186	54	3	298	187	158
187	37	3	27	187	158
184	54	3	298	187	158
185	54	3	298	187	158
188	54	3	101	187	158
189	54	3	101	318	158
header=	86	129	376	137	347
piecewise-linear	77	98	458	279	809
pare	57	116	145	706	781
para	68	32	257	617	744
get_paths	31	13	495	199	879
Interval	38	162	191	519	698
park	11	109	229	444	469
116.33	54	50	368	331	19
116.32	54	50	368	331	19
part	57	59	342	91	950
believe	47	59	392	630	908
unreadable	88	257	61	334	695
csvs	71	153	50	706	854
sparse.rand	44	292	64	348	218
bookId	48	212	182	547	965
PyQt	93	187	104	537	728
2024	54	50	368	158	277
18s	10	160	274	543	655
pd.pivot	43	157	72	683	956
2020	99	182	318	372	94
supposed	47	59	392	91	835
2023	54	50	368	158	277
declare	3	229	261	146	406
~x	68	32	13	617	744
PyInstaller	67	151	174	604	104
window_length	10	202	37	323	876
~~	90	174	117	751	128
jitted	76	40	444	215	915
Custom	69	162	100	209	837
categorized	79	228	487	787	702
~a	44	174	385	751	486
orders	10	202	37	323	876
polyval	60	124	458	324	438
notebook's	40	141	281	76	632
downsample	20	147	270	709	817
Confusion	69	162	169	61	837
PointY	74	297	338	616	995
majority	13	272	126	225	176
Series.fillna	6	85	418	700	956
~A	6	260	95	18	272
grouped.get_group	64	95	115	551	779
~8	10	160	274	323	655
~9	21	160	274	323	655
~=	96	201	426	208	142
arrtup	74	293	361	404	228
Admin	55	128	330	477	568
~1	21	190	234	557	42
~2	21	160	37	323	655
~3	10	160	37	323	655
~4	21	190	234	557	42
Anybody	11	173	143	763	652
~6	21	160	111	323	655
most	88	48	392	630	604
order=	44	143	396	74	263
Common	69	162	169	61	145
Poisson	77	214	132	147	4
~$	67	112	276	57	137
inlined	76	51	65	225	915
branching	76	272	118	169	734
corrupts	2	116	145	51	59
compressor	71	153	50	423	959
.attrs	94	222	446	702	160
script's	40	218	181	777	195
Barnes-Hut	13	272	48	195	765
Series.to_dict()	43	265	72	771	956
expN	90	293	26	617	744
sector	79	228	487	621	675
pandas.DataFrame.from_dict	64	233	74	551	199
Transformations	13	193	19	387	371
summer	99	140	318	109	94
.order()	64	95	51	551	227
minimizing	77	98	458	279	738
networkx	93	79	41	400	234
contorted	88	257	61	334	695
manifold	77	206	231	722	461
networks	13	79	41	400	234
Tr	41	172	481	333	170
distributed	81	214	270	733	301
unhappy	47	59	392	144	907
gridata	72	165	458	742	622
networkX	93	79	41	400	234
override	31	220	457	663	720
8	21	223	298	338	811
distributes	2	57	233	251	321
Generate	69	31	100	530	911
Survived	53	139	42	250	775
sub-matrix	34	77	108	586	943
numpy.log()	60	296	102	742	751
multiplcation	34	194	280	88	485
RegularGridInterpolator	72	165	15	235	570
wonky	88	152	25	122	695
sill	47	59	284	245	479
np.row_stack	42	30	286	74	595
Anyway	47	0	392	678	544
np.fromstring	36	291	141	266	969
1.1.1rc	19	7	417	301	230
common	88	21	147	251	604
allocations	10	188	447	570	450
distribute3	35	122	167	664	376
matplotlib-	93	57	495	51	54
locating	2	21	457	588	338
fledged	35	122	138	9	376
-Hypothesis	18	200	490	504	991
summed	78	77	275	522	603
irregularly	72	165	270	733	301
lion	19	7	306	301	232
\br	68	260	431	234	945
changeable	35	57	429	697	732
forthcoming	35	122	156	292	376
materially	10	202	37	23	990
epoch_time	53	139	256	551	779
Unix	84	119	68	697	27
2-tuples	34	233	158	540	336
fans	95	271	487	519	852
imsc	18	225	490	472	81
Printed	21	223	298	318	252
pandas.isnull	64	260	418	548	131
readme	67	193	470	604	594
errored	4	37	222	699	81
weekly	99	147	450	101	817
transfered	71	246	328	98	959
')]`	53	139	42	417	775
seeded	81	43	206	725	162
popup	93	154	188	427	2
complementary	81	214	297	171	4
dividends	13	78	232	44	959
complement	34	111	95	18	272
Estimator	77	206	132	722	353
colorbar's	5	148	253	558	844
globals()	65	233	181	540	406
Dang	24	200	493	504	991
Makes	24	109	229	567	870
Thats	24	33	493	140	469
Redefine	2	215	444	514	709
folding	12	183	409	44	563
reverse	2	229	337	708	520
16.21	47	174	392	751	262
np.random.normal	75	243	385	425	484
relabel	5	52	32	19	884
')])	53	287	42	250	624
SO's	18	225	490	419	53
bin's	81	214	266	391	176
boreholes	81	228	206	621	675
simple	88	48	61	450	950
months_to_maturity	48	123	486	178	637
scipy.ndimage.morphology.binary_fill_holes	72	126	7	709	562
eviction	79	49	131	355	944
simply	47	0	392	91	338
adaptively	59	52	457	32	177
kernels	20	93	382	191	989
consuming	10	272	118	225	863
maptplotlib	59	52	495	199	177
quantisation	22	4	294	438	672
np.clip()	47	48	457	306	835
dataframe's	43	265	72	771	356
z1	41	172	481	243	808
bgcolor	31	13	388	134	879
dropping	6	263	456	405	531
redrawn	29	154	188	427	203
reformat	57	116	145	706	356
jpype	7	57	330	697	791
monodimensional	34	77	0	73	336
kalman	13	193	382	387	989
Origin_Zip	86	89	163	339	682
25,000,000	44	205	18	8	62
gau	46	39	73	505	488
scale=stddev	96	35	289	176	201
gas	79	228	206	519	675
df2.to_csv	36	10	136	712	261
gap	81	170	266	546	884
-------------------	30	271	55	429	560
gam	77	98	458	742	443
gal	99	186	318	372	811
gah	24	200	493	504	991
gae	55	128	52	477	568
unnecessarily	88	257	61	334	695
WRITEABLE	3	220	361	138	273
replaces	6	68	491	174	910
Ordered	38	162	191	789	739
out_file	36	10	117	712	314
outperforms	10	156	37	534	876
tetrahedron	39	149	438	152	102
convn	60	296	102	313	631
kernel=	46	39	73	505	488
Bayes	77	168	186	705	646
npred	3	18	141	266	969
replaced	6	215	328	98	187
pre-compute	81	272	258	327	301
ts.index	64	150	256	551	48
lingo	12	215	147	145	908
Recreating	2	116	145	98	560
mystic	60	42	102	279	809
*100000	90	297	257	332	744
real-valued	20	93	425	191	708
antialiased=False	46	39	73	316	488
xaxes	5	52	32	19	884
verticalalignment	5	226	30	134	348
the_func	29	40	444	396	622
Receiving	63	44	199	582	888
OWN	57	239	330	384	315
fmincon	60	42	458	279	809
gtkagg	45	80	315	435	591
RMSE	77	124	472	414	738
"]]	64	150	260	455	496
im2col	60	296	375	742	631
whereis	67	112	276	57	334
pip.log	55	132	330	477	372
relatively	88	272	118	334	604
nonscalar	94	94	122	702	457
np.linalg.lstsq	60	124	102	324	597
non-repetitive	81	48	131	675	604
dereference	3	220	329	514	235
MayaVi	93	23	495	97	537
sym	74	174	117	36	262
sys	15	135	184	308	630
purpose	12	48	134	630	950
Activity	48	138	159	668	653
"])	64	150	260	455	496
tstate	63	158	397	582	832
Detailed	57	235	342	450	114
matplotlib.backends.backend_qt4agg	93	187	104	289	591
memoization	76	51	345	169	990
yum-builddep	67	112	276	57	334
ax.axis	46	284	494	757	508
swiss	78	49	131	522	944
lda	44	194	280	5	192
flow_pramB	3	40	444	396	622
ldd	55	132	184	418	166
matplotlib.matplotlib_fname()	45	132	352	113	798
distracting	18	225	5	419	81
ax=ax	46	39	383	505	430
re-used	29	215	181	573	187
zipcodes	48	49	50	405	502
letting	47	232	232	573	531
superficial	76	40	361	404	709
Theory	38	224	282	519	689
graph()	29	203	128	236	55
matlib	60	296	102	742	751
sub-array	34	77	0	88	694
deliberately	88	152	147	145	908
uninstalled	67	151	327	232	104
1675	78	37	338	167	769
x*y	44	205	251	196	192
x*x	96	29	18	173	13
profile_default	55	132	352	775	798
Icon	93	154	259	110	402
matrix2	74	100	108	601	228
manage	47	229	457	306	360
matplotlib_venn	59	79	495	51	54
doACalculation	76	272	118	225	990
dleng	90	54	257	10	744
lexsort	42	27	349	358	640
Sophos	84	119	167	664	315
np.random.sample	75	243	18	173	484
displace	5	52	32	135	884
judgement	18	225	5	419	53
smallness	14	170	409	44	84
.strip()	86	89	163	340	66
semi	2	263	457	91	338
Omega	96	201	18	560	13
disks	39	126	258	93	177
---------------------------------	30	271	55	429	428
Whatever	47	0	392	678	544
mismatching	12	152	60	618	120
flux	41	6	206	766	949
arr.imag	96	29	18	173	876
-command	45	80	167	499	315
neatest	88	48	61	675	327
accelerations	39	43	206	44	949
Implemented	47	59	342	407	469
54.5	96	266	18	28	421
30x	10	202	37	534	876
obliged	11	33	229	444	870
dict_values	63	44	460	172	787
30s	10	160	449	323	655
30k	21	190	234	557	42
instantiating	29	188	447	573	720
pricing	13	78	126	762	746
mirror	20	93	25	122	562
timeits	50	264	393	35	564
Whoa	24	109	229	444	870
acquaintance	13	26	63	697	730
view()	42	30	88	404	581
30T	86	287	449	48	997
connecting	59	52	235	32	177
30M	21	160	234	557	655
308	54	108	23	579	931
309	54	3	101	797	139
stripplot	31	14	383	568	710
Sobolev	24	109	394	140	870
patient	79	228	487	480	285
numpy.core.ma	15	135	319	777	823
taxing	88	232	232	35	959
300	21	223	234	557	252
301	54	223	298	338	361
302	54	3	101	187	158
303	54	3	298	318	158
e_data.csv	48	144	195	787	502
305	54	3	298	187	158
O	10	272	356	327	668
307	54	223	298	797	139
accesing	2	116	19	98	531
542401	21	205	258	196	943
30+	21	190	234	557	326
.2e	86	129	465	137	347
ERROR	63	176	397	582	136
crap	18	200	493	504	991
triangulated	72	165	235	733	102
30%	10	160	37	323	176
constrains	12	42	458	279	84
Bars	69	162	191	209	837
goods	79	228	487	480	653
N=100000	10	160	274	323	655
Dump	71	153	50	60	108
constraint	12	42	38	279	738
'])```	53	139	42	250	775
Linking	38	163	167	499	732
justs	71	153	122	702	457
extensions	7	163	152	215	730
fmin	60	124	458	396	438
look-ups	34	94	131	522	734
re-edit	57	225	490	567	81
__future__	15	135	319	777	823
.plot	46	39	383	505	649
steady	77	98	48	195	416
framed	18	200	490	170	81
datatime	43	63	68	426	452
Blaze	35	26	63	702	457
frames	71	116	145	706	986
lambdify	60	98	458	313	438
lesson	24	120	114	739	727
histogramming	81	214	297	171	603
euclidean_distances	77	256	186	705	646
frameB	49	47	406	631	445
Where's	57	37	490	37	835
Meshgrid	69	179	169	61	145
Excellent	24	33	229	140	870
compilable	57	235	463	450	766
opponent	48	144	487	276	637
straight-up	88	272	118	334	612
Float64Index	94	222	147	426	309
mean2	81	256	335	200	994
gauss	77	124	458	147	4
-type	43	265	158	540	631
boys	79	228	487	686	675
frame3	53	139	260	455	496
frame2	48	123	486	339	779
frame1	48	123	148	178	637
yyyy	99	274	318	679	221
vmin	5	36	294	653	271
ffill()	6	85	12	700	73
np.seterr	45	80	334	85	350
np.count	43	157	103	784	956
carefull	12	152	147	697	908
exploration	13	23	126	458	765
resampling	43	85	449	48	817
unflattening	76	94	145	573	207
partition	81	116	145	522	986
bheklilr	4	235	254	710	81
Perhaps	47	0	392	678	544
calories_list	74	293	95	509	228
Cross	38	206	282	722	353
Terminal	40	141	281	76	632
C_idx	44	30	26	74	228
quoting=3	52	185	28	258	971
necks	10	277	235	225	169
formally	9	183	5	144	219
tiling	34	77	396	88	943
A's	2	144	131	276	891
barplot	59	14	383	568	710
two-sided	77	214	132	783	162
cmake	67	151	167	499	732
Mat	3	90	261	312	722
fontdict=font	86	174	117	250	814
May	47	173	389	143	835
priors	12	183	409	705	563
cohesive	2	116	122	203	713
EVERYTHING	15	37	222	384	854
Mac	19	7	306	301	232
priori	12	229	409	552	563
Proxy	31	193	19	97	114
Mag	77	214	132	783	162
Joe's	4	17	254	710	441
Trouble	69	31	100	530	316
Extremely	24	109	229	444	870
Man	50	120	114	444	469
brushing	13	26	63	697	398
os.path.abspath	36	10	489	712	261
data_df	48	47	486	551	779
conventionally	31	215	444	236	879
enterprise	84	119	2	241	850
Cash	48	49	456	405	502
prepared	13	26	126	203	765
Cast	3	18	162	426	470
;P	30	212	55	429	428
mixed-types	94	222	162	355	470
prepares	2	215	491	174	3
depicting	81	126	266	438	177
animation.py	37	132	475	205	173
Unclear	57	59	490	424	907
negating	34	111	95	18	734
mldivide	60	296	102	431	631
X.Y	55	128	330	477	568
Asian	53	123	51	448	821
data_str	88	153	409	334	604
coef_	77	168	186	705	646
initiating	2	215	222	699	942
Detect	69	31	100	530	911
ColorMap	31	13	294	97	271
R^n	60	296	248	742	738
x.minute	86	150	10	772	838
15,000	21	190	234	557	42
schema's	35	171	473	128	88
clickstream	53	139	51	551	779
meta-data	71	153	446	702	457
factoring	81	183	409	44	84
df.idxmax	64	150	256	65	48
helps	11	109	143	144	469
MacOSX10.8.sdk	67	132	352	664	315
holdings.groupby	53	139	42	250	775
columns=1	48	123	486	276	502
scipy.linspace	75	243	385	0	484
AAPL	99	281	453	762	746
8]]	90	54	257	332	995
identically-shaped	34	77	0	73	694
labels	5	148	32	19	884
a^2	96	201	426	560	13
R^3	39	126	41	400	162
R^2	77	124	132	783	162
Region	48	123	159	339	653
23rd	99	182	453	109	94
rogue	61	263	456	618	120
master_df	43	265	72	771	356
Stuff	53	260	51	448	821
paraboloid	39	149	438	93	116
heat-map	59	52	495	199	177
False	27	260	95	18	866
Recipe	48	123	159	787	340
sort_index	43	47	349	683	73
columns={	64	150	406	631	294
.any()	27	260	431	234	945
prototyped	71	26	303	609	765
imgur	18	239	463	443	639
ddd	95	123	272	11	497
Aug-09	53	123	42	250	624
newrow	74	233	54	690	526
Nonlinear	38	206	282	722	71
3^	96	194	356	327	668
meshgrid()	72	165	15	282	397
Vehicle	95	298	159	168	497
rank()	43	157	103	683	956
object1	29	220	181	212	406
object2	29	220	95	212	406
3M	21	287	449	48	692
3L	44	205	154	30	357
recursions	12	42	458	799	360
3A	20	298	304	198	361
Memcached	13	26	183	359	959
3D	39	77	495	199	177
Python-	69	162	237	209	837
3x	10	202	37	323	876
3}	86	181	287	730	585
3s	78	160	274	64	655
pipes	71	218	183	609	803
cicle	74	195	444	699	622
3k	79	246	206	519	959
3j	44	29	137	212	598
clipboard	71	239	86	769	975
3m	95	298	419	168	497
3c	55	128	330	477	568
3a	30	271	419	281	38
Matrices	38	162	191	61	837
piped	71	153	183	359	839
exercise	13	120	212	419	727
date-time	43	63	68	426	452
Identical	2	265	122	574	739
numpy.tile	42	30	286	74	595
FTW	30	181	287	244	428
---->	30	271	117	21	858
443	37	250	330	205	568
442	44	205	251	196	357
441	54	54	101	332	995
440	54	223	101	297	252
spacing	5	288	32	245	479
446	54	3	101	751	158
jointly	47	21	233	251	338
python2.4	55	128	330	477	568
Python\	37	250	386	475	194
objects	2	94	329	514	720
-----	30	271	419	429	560
preamble	45	230	448	767	909
implicit	76	94	38	145	809
39	54	3	298	318	811
38	54	3	298	318	811
Chinese	61	58	443	539	501
33	54	3	298	318	811
Intelligence	38	224	282	94	689
31	99	186	318	372	811
30	21	223	234	318	811
37	54	3	298	318	418
36	54	223	298	318	811
35	54	223	298	318	811
34	54	186	298	318	811
3+	47	21	392	735	769
3*	96	266	18	56	421
weekday	99	140	68	109	687
3-	38	206	282	21	38
axisbg	46	226	494	577	430
Bid	53	123	159	250	82
3%	10	160	37	323	655
object_	3	18	162	266	969
formulated	18	225	490	170	81
_specific_	18	225	45	37	81
colors=	46	39	73	316	488
QHull	60	296	102	742	905
Pcolor	69	52	270	209	301
bond.to_cash_flows()	43	37	74	405	59
decrease	10	170	409	44	576
KNOW	30	212	55	136	965
ii-	44	143	215	5	598
HOME	55	132	352	113	798
orderings	34	43	131	251	694
12.600000	54	108	300	797	139
MSFT	48	123	486	339	653
links	4	193	372	387	371
externals	54	50	98	158	572
asteroid	72	165	495	199	177
dt64.astype	68	18	141	266	463
normalizes	2	215	491	174	603
normalizer	22	4	294	199	271
upcoming	35	122	156	292	376
trait	12	94	329	514	890
dupes	64	47	406	683	73
convolve()	10	202	88	169	31
trail	39	149	235	93	116
transient	2	263	491	618	769
normalized	81	214	266	783	603
c_float	3	67	261	157	498
python-dateutil	67	151	327	354	334
iii	38	43	41	692	38
Lambda	30	179	169	574	145
account	2	229	275	91	603
f	41	174	177	396	622
Frame	69	162	191	789	739
val_2	77	219	275	783	454
chisq	96	219	132	783	454
obvious	88	59	114	630	907
3960	44	205	251	196	357
rsquared	77	214	132	783	738
FeatureHasher	60	94	186	421	709
test()	15	40	444	725	954
rolling_apply()	43	40	444	15	709
X_test	44	256	186	668	994
value.values	65	233	54	690	526
sought	78	100	131	588	283
reserves	10	127	355	159	359
fsolve()	60	124	458	279	438
proof-of-concept	11	225	232	35	219
ascension	39	288	438	298	116
data.plot	46	14	383	505	710
pyplot.scatter()	31	13	388	399	879
curving	59	52	32	32	884
ideia	11	173	389	763	867
boxing	76	188	447	573	863
pyplot.ion()	29	203	348	123	55
r=0	39	149	29	93	116
r=1	96	266	370	391	192
forest	77	168	186	705	223
NP-complete	12	42	38	799	809
Eigenvectors	38	206	280	431	485
revs	65	233	54	690	526
bin1	96	266	324	391	421
bad.any()	88	59	95	18	866
bin3	74	266	431	391	421
bin2	96	266	297	391	421
onefile	40	141	174	76	632
3-4x	10	202	37	323	876
indixes	78	49	456	405	944
Iterative	38	206	282	722	905
factored	77	98	280	783	738
OHLC	99	147	450	762	746
wikis	13	193	372	387	219
ambiguous	63	44	240	184	888
scipy.signal.lti	60	94	65	9	720
scipy.integrate.ode	60	98	458	279	438
3859676.9971	30	50	368	429	428
bind	2	229	457	149	282
optimised	76	51	65	169	730
codebook	71	43	41	400	234
self.canvas	29	1	348	236	444
expanding_apply	43	157	103	784	956
fig.canvas.copy_from_bbox	29	203	348	123	55
numpy.array_split	42	27	14	358	244
Jinja	61	61	90	769	54
_dotblas.so	55	163	152	418	305
a.shape	44	227	228	0	146
Hooked	4	121	264	646	500
b.shape	44	227	228	0	357
Upgrade	91	122	156	587	230
pylab.errorbar	31	13	383	592	709
charting	13	26	90	118	537
agricultural	79	228	206	519	675
dat.Date	90	297	54	10	744
.str	53	89	163	340	131
SPSS	71	171	303	364	765
Pressure	39	149	279	322	573
willing	11	225	5	419	53
.cumcount()	64	150	256	197	48
typemap	3	67	320	312	498
pd.read_sql_query	52	185	473	343	88
4.768	54	54	257	713	776
spdiags	60	27	14	15	709
greater	78	100	266	588	283
spell	43	229	232	144	956
spelt	74	233	54	690	262
off-line	13	246	126	203	765
all-in-one	13	26	63	516	398
dbus	40	37	301	699	625
blazing	7	51	118	169	863
reloading	71	116	145	573	531
df.get	53	139	51	448	779
scrollbar	59	154	188	427	203
ratings	79	228	487	480	285
SEND_MSG	53	139	51	448	821
numpy.in1d	42	27	349	358	640
parties	13	26	126	203	765
b'Hello	86	129	465	36	172
pandas.DataFrame.plot	31	14	383	568	710
Lite	78	160	338	251	456
matB	44	40	54	5	622
matA	74	293	54	509	228
select_as_multiple	94	222	446	128	457
matplotlib.ticker	5	148	363	558	844
matt	24	109	373	102	852
mats	34	291	85	73	336
tab_C	90	297	13	10	744
DataFrames	43	265	75	706	356
c-extensions	67	151	152	664	732
farm	79	218	183	609	986
mate	24	33	229	140	870
color_threshold	5	4	294	134	608
Joel	24	121	264	646	500
math	76	86	65	86	238
586	35	174	19	9	114
585	90	223	298	318	995
dmag	41	6	108	107	211
580	54	3	101	187	158
hyperparameters	77	168	186	705	162
d-dimensional	44	205	251	88	192
dmat	44	195	370	196	192
myseries	53	139	51	551	779
dmax	96	201	426	560	201
afterward	2	116	457	335	180
interaction	12	152	60	203	120
I.E.	41	6	177	107	336
mat1	44	205	251	509	228
bidirectional	78	43	131	400	944
DataFrame2	48	144	486	787	502
DataFrame1	48	144	486	787	502
[((	68	32	431	234	945
dtype={	52	185	376	121	971
TextFileReader	52	185	28	24	793
0.0933237513	47	21	392	91	338
pgf	93	80	315	435	909
/(	96	201	18	173	62
fleshed	18	225	490	37	81
pgm	22	248	381	571	108
strategic	13	183	126	203	765
pandas.crosstab	64	150	256	551	48
Continuous	38	206	191	61	71
Dickinson	4	121	264	646	500
')))	86	32	42	211	624
sockets	71	218	183	445	803
stencil	20	93	382	191	989
.set_visible	46	148	363	46	430
unspecified	2	229	147	91	621
PathCollections	31	1	388	399	879
nut	50	120	114	739	727
x.month	64	150	10	772	838
completed	50	264	292	167	92
'))`	86	287	256	772	997
Per	4	121	254	252	552
completes	29	37	128	764	954
resist	18	225	490	419	81
pysparse	7	57	102	697	957
10^-5	96	288	324	391	129
10^-7	81	170	177	783	142
overplot	59	52	433	621	177
10^-1	96	288	324	19	129
time-weighted	81	147	173	784	817
10^-3	96	266	324	695	129
10^-2	5	288	324	200	129
amplitude	20	93	425	507	344
flashes	29	187	128	764	954
3.2GB	21	127	355	159	359
0.025	96	266	324	695	421
symmetries	12	42	38	552	84
fluctuation	81	214	409	783	562
plt.xticks()	5	148	363	558	844
Machine	38	224	282	94	353
unlikely	12	152	5	334	604
Performance	69	179	169	61	145
Sphinx	93	23	90	97	537
apparently	50	264	292	210	747
paramiko	71	171	303	609	600
acceleration	7	42	48	195	416
copy-n-paste	57	235	342	37	451
mil	21	190	234	557	326
xtile	12	193	126	387	371
folloing	57	235	342	450	950
Couple	24	109	394	567	469
Pushing	76	257	61	169	876
mid	81	170	266	122	198
df.notnull()	27	260	431	234	945
Diagram	39	79	495	400	177
mix	47	94	147	91	260
list_comp_values	75	205	370	196	486
plt.xticks	5	148	363	46	844
lnlike	60	40	444	15	709
signifying	61	246	50	167	769
plt.title	46	226	494	505	348
C++	7	51	65	2	730
where's	88	232	143	257	417
Printing	69	31	237	347	59
propagate	6	68	456	355	910
on-demand	76	94	65	169	959
c.InlineBackend.rc	45	80	448	269	906
gurus	11	173	389	763	867
afresh	40	232	429	764	954
ImageQt	15	90	246	141	942
%Y-%b-%d	86	274	465	679	151
Some	47	0	342	678	544
filelist	36	10	489	712	261
graphs	59	52	495	51	54
ax.format_coord	31	13	388	558	879
comma-separated	61	58	50	539	260
artificially	20	170	409	709	562
numpngw	35	153	336	97	594
skinny	59	117	433	32	714
normally	47	0	392	91	338
Saturday	99	140	453	109	94
v0.16.1	91	122	156	587	376
octave-3.6.4	68	32	18	545	486
sorted_data	75	150	297	171	810
.corr()	53	139	51	417	775
elimination	77	42	186	652	905
Semaphore	67	151	167	290	732
convolved	20	93	382	191	989
Worth	35	152	220	292	106
staff	79	246	206	480	852
textual	71	49	50	60	108
grabbed	71	215	328	98	92
pos_0	74	100	361	212	273
sigmoid	77	124	458	324	438
prepended	61	49	443	539	501
controls	31	13	284	245	621
plt.interactive	45	80	334	269	55
:])	90	297	13	10	744
York	95	268	318	686	497
Few	69	162	191	61	114
inferior	47	59	147	618	769
:]]	90	95	13	10	545
lobe	39	43	235	322	979
coworker	50	264	393	407	564
recoded	4	264	254	210	81
chromagram	20	93	58	428	949
MultiIndex'ed	71	265	303	60	457
3000000	21	243	274	751	252
integrate_iter	29	40	444	236	622
cycled	81	4	457	167	608
count_ones	27	150	256	772	838
2.4.4	91	57	167	9	230
set_1	65	233	158	540	1
cycler	31	13	388	592	608
361	68	223	324	200	806
monochromatic	22	4	251	45	672
Weka	38	26	282	697	353
constructing	2	116	145	573	531
plt.ioff()	93	203	348	123	55
CCDF	20	214	132	147	4
values_	81	21	131	251	702
17:52	54	69	119	158	126
enhanced	35	122	19	9	371
5-20	21	160	234	557	655
17:59	99	69	119	525	256
pyfits	71	248	336	423	663
Dan's	4	17	254	710	441
pattern	61	49	131	91	944
g.apply	64	150	10	772	838
GridSearchCV	77	168	186	705	646
))))	68	32	18	259	62
semitransparent	59	117	433	32	198
sub-optimal	88	17	61	675	612
940	54	3	101	797	139
thumbnail	59	154	284	51	203
_merge	48	144	195	276	502
)))]	68	32	385	545	486
event_name	64	233	74	551	526
f1-score	14	86	142	325	549
emitted	29	187	128	149	769
transpose	34	30	396	566	520
numpy.interp()	42	27	14	313	244
Ophion	4	121	264	646	500
MySql	71	171	303	60	92
vstack()	42	30	396	74	595
ts.groupby	64	150	256	772	838
plugin	93	141	90	537	537
taking	10	116	275	573	531
.mul()	79	94	126	771	783
values=	64	287	42	250	294
Yikes	24	200	493	504	991
indptr	34	292	64	348	218
pd.groupby	64	47	256	551	48
Design	38	271	282	519	38
set_under	31	4	294	653	271
15min	99	147	449	48	817
futher	71	42	126	203	765
)))`	75	32	385	425	486
swallow	65	94	158	404	694
values*	12	59	311	170	656
temporal	81	147	206	101	675
tree.query	75	227	289	282	486
aa	74	174	4	185	211
relevant	57	235	342	450	371
unnormalized	81	214	206	101	603
gone	50	264	393	210	564
.read_csv()	52	185	28	121	793
WXAgg	93	80	315	435	591
no-cache-dir	67	112	276	57	334
-02	55	176	276	215	315
arguement	45	40	334	15	793
basing	47	263	445	478	907
unearthed	50	109	114	35	81
gona	90	297	54	690	744
ctypes.c_double	3	227	361	157	498
DataFrameGroupBy	43	157	72	172	787
RAW	71	248	381	571	593
Nan's	6	68	12	130	910
n_classes	44	205	370	196	192
certain	81	21	233	91	702
curtain	59	232	235	32	781
proposal	35	17	220	292	106
columnar	71	265	303	423	457
16-bit	22	248	381	608	593
faced	50	264	393	75	564
finishes	29	37	128	764	954
1350	90	297	257	332	995
np.int32	3	18	141	266	969
tranform	60	48	248	742	998
numpy.random.randn	44	243	228	0	484
s_A_approx	44	205	251	196	357
finished	29	218	128	764	954
Honestly	88	59	5	419	907
bull	11	109	394	567	852
bulb	11	246	206	167	852
volunteer	13	120	212	35	53
divisions	14	86	314	325	238
multi	2	265	75	771	921
Sine	38	206	169	722	71
file-reading	36	153	50	423	781
hand-drawn	59	23	235	51	950
pyplots	93	187	104	51	728
Examine	2	263	275	566	338
cv2.imdecode	36	90	246	141	942
?!!!	47	59	222	699	835
df.index.freq	94	222	456	334	817
inherits	3	220	329	663	720
site's	4	225	490	567	81
det()	10	202	37	327	485
cherrypy	40	141	429	76	632
manually	2	229	457	335	180
almost	47	59	392	630	604
2015-05-22	78	204	373	198	687
contiguity	34	188	361	404	450
y.append	68	32	289	28	486
ax	46	203	255	577	430
non-diagonal	34	43	131	566	576
dfstacked	53	123	51	339	199
regression	77	168	186	705	443
X_new	44	205	154	196	170
SOA	61	58	443	137	501
read_pickle	15	171	446	128	88
SOF	18	120	45	35	564
SOM	13	126	495	364	537
testimage	44	205	385	196	357
SOR	77	98	38	279	809
iPython's	40	57	167	499	732
truediv	43	157	329	663	956
GAE	35	57	167	664	732
infer	2	229	162	91	260
np.complex	3	291	141	266	969
thing1	90	297	148	239	821
listdir	65	233	272	27	682
reporting	50	152	11	407	120
Bucket	71	153	86	638	561
quad	60	98	458	396	438
spitting	50	37	301	699	854
weekday()	43	265	72	771	817
numbered	2	263	338	405	713
YYYY	99	274	318	679	221
flann.knnMatch	68	227	385	0	486
ax.autoscale	46	284	348	757	430
arising	12	152	60	618	120
preallocate	34	188	88	404	581
deltas	99	63	68	426	452
myplotlib	93	187	128	51	2
deltax	44	205	251	196	357
necessitate	2	21	126	203	702
runner_id	48	144	195	178	637
unary	3	94	95	15	866
lossy	22	61	381	99	593
pandastic	88	257	61	675	327
Analyze	38	206	282	519	38
numpy.show_config()	7	163	184	418	630
Gill	45	230	448	767	909
deltaT	99	147	453	198	817
ads	79	183	487	170	285
Aman	4	17	254	710	441
plot_surface()	31	13	294	53	627
mathematically	12	42	248	191	738
add	2	229	457	335	338
adc	15	135	319	777	823
ohhh	24	200	493	504	991
adj	74	195	333	218	597
dt64	3	274	68	679	390
match	47	229	131	91	338
delta1	90	297	13	10	744
delta2	27	29	137	509	598
delta3	85	194	137	5	598
Freetype2	67	132	167	664	315
someones	18	232	232	170	53
take_last=True	49	47	406	631	445
bfill()	6	85	12	700	73
Throws	63	44	199	582	888
.as_matrix	64	150	74	551	48
xydata	31	149	438	200	573
-----------	30	50	368	429	428
matplotlib.cm.ScalarMappable	31	1	329	514	720
left-click	29	154	188	427	2
accessible	2	215	181	98	187
discontinuities	72	117	231	709	84
res.x	74	195	4	586	201
Pickled	71	162	122	702	457
-Lbuild	55	128	293	52	56
proper	47	229	392	91	338
standardize	25	229	313	341	603
idealy	18	232	232	306	81
subjects=	45	13	334	592	835
aesthetically	88	23	138	97	398
nonempty	61	49	162	355	336
0.25	96	266	23	695	421
0.26	96	266	324	391	421
0.27	96	266	324	8	421
0.20	46	266	289	695	421
0.21	96	108	23	695	421
0.22	91	108	23	579	399
0.23	96	108	23	695	399
2.00GHz	84	108	2	410	580
X.mean	27	269	403	65	598
masked	6	68	12	53	910
assuming	47	0	392	91	338
datestart	53	139	42	250	775
pepper	95	181	427	168	682
measurment	81	147	206	203	765
sub_df	48	144	195	178	637
pylab.plot	46	39	383	505	649
Cross-correlation	20	270	472	783	396
stellar	13	26	138	118	604
Forgetting	47	0	392	335	338
SDSS_local_AGN	36	10	272	712	199
(((	68	32	18	28	62
about	12	59	392	630	907
actual	57	235	392	91	451
boards	50	264	393	75	564
DataFrame.groupby	43	157	103	683	956
RGBD_Crop_file	54	108	23	8	624
Generation	38	162	191	61	698
certainty	12	183	409	225	563
0.2s	21	160	274	323	655
LRU	76	272	118	630	439
\s\s+	52	10	376	121	971
scipy.io.loadmat	71	153	336	423	306
row_index	90	95	115	239	227
0.2f	86	129	465	137	347
powerpoint	59	52	90	51	54
functional	13	257	5	257	612
gen_data	65	188	158	750	207
fit.params	68	54	257	617	744
708	21	243	234	557	252
gleaned	13	193	372	387	219
ridge	77	168	186	705	646
Explanations	88	59	389	630	908
self-explanatory	57	235	342	450	695
joaquin	24	109	394	646	870
bc_arr	42	27	14	404	709
biggest	10	272	134	588	576
np.nanmin	27	269	12	53	244
glib	18	120	5	419	53
v1.10.1	84	7	2	410	321
4-core	84	127	2	410	580
repeated	78	21	131	522	944
K-Means	77	168	48	722	353
logical-and	42	27	95	18	272
Ive	50	264	393	75	564
Multiplying	69	31	499	530	911
non-adjacent	34	188	122	546	694
heatmaps	59	52	233	621	710
Ivo	13	225	229	444	219
log1p	96	29	18	173	238
Ivy	84	127	2	410	580
bandpass	20	93	382	709	989
a_k	96	201	18	173	62
excruciatingly	10	272	118	225	169
colum	78	49	195	405	356
memmaps	76	272	122	702	863
numpy.random.RandomState	15	135	444	725	720
internals	76	94	138	257	417
PandasError	63	44	460	582	369
stackoverflow.com	50	264	393	75	564
ax.transData	5	148	30	298	879
separating	61	116	452	539	986
int64_t	3	67	261	312	498
in-between	81	147	206	546	603
proceeds	2	37	491	699	59
transitions	81	4	206	438	562
48	54	223	298	318	811
mu-sd	41	256	335	668	994
LOTS	21	272	118	573	863
47	54	3	298	318	811
44	54	223	298	318	811
45	54	223	298	318	811
42	54	3	298	318	811
type()	3	40	444	15	172
40	21	223	298	318	811
41	54	186	298	318	811
MVCE	57	235	19	387	114
variable-length	61	94	122	702	890
4-	38	201	370	21	192
4*	96	29	18	173	62
Know	30	224	19	387	985
4%	96	266	494	695	176
pandas.core.groupby.DataFrameGroupBy	43	265	460	172	787
4X	10	202	37	323	876
time=	99	69	119	155	256
LIDAR	39	126	279	766	573
diff()	43	85	103	784	956
4M	21	190	234	557	42
uncommon	88	152	147	334	604
full()	10	202	37	323	876
trackback	57	235	463	37	451
readline	15	258	44	288	305
4}	85	181	287	730	585
4x	10	202	37	323	876
stepsize	96	170	31	391	283
x86_64-linux-gnu	55	128	52	477	568
4r	85	298	239	168	801
4s	21	160	234	323	655
cpu	10	127	345	445	580
ENVI	71	248	157	571	593
4m	95	298	239	519	801
4k	21	190	258	159	359
-msite	40	112	276	57	630
old_a	3	220	361	212	273
accidents	79	140	453	198	687
Techniques	38	206	282	722	38
limited	12	152	409	44	604
linebreak	61	58	452	230	501
Lead	48	138	159	519	502
20130825	90	297	54	239	995
go.matrix	7	26	63	118	398
label_param	86	89	136	137	66
hitch	50	37	301	699	954
facilities	76	26	126	118	398
20130827	90	297	13	239	995
poorly	12	59	490	419	604
1.16	10	160	274	297	655
1.17	21	160	274	323	655
1.14	54	108	274	297	399
1.15	14	86	314	325	549
1.12	21	160	234	391	655
violate	12	229	147	170	563
1.10	91	122	156	587	376
1.11	54	108	23	579	399
chthonicdaemon	24	121	264	646	500
Naive	77	168	186	705	646
sklearn.preprocessing	6	256	186	341	443
jmcnamara	24	109	394	140	870
MUCH	24	109	229	444	264
10,343	54	108	23	8	797
under	47	215	392	91	338
79.73	54	186	318	372	789
AutoMinorLocator	5	148	363	558	844
conjecture	18	120	5	419	53
xaxis	5	148	32	19	844
X-Axis	5	288	32	19	884
XlsxWriter	71	153	86	638	561
Workbench	91	171	473	128	88
ticklines	5	13	32	134	608
Henry	24	121	264	102	500
stat_table	36	185	473	36	369
interleaved	34	21	162	546	260
10Qs	79	228	487	510	675
divisor	77	219	314	783	454
pytables.py	37	250	475	314	173
look-up	2	4	158	522	672
1.1f	86	129	465	137	347
state-space	77	42	38	279	738
multiprocessing.pool	76	218	118	169	863
py27-ipython	67	112	276	499	334
json.loads()	65	153	158	589	260
bicycle	79	228	487	480	675
throught	2	51	261	215	957
consistent	12	152	147	91	621
argpartition	42	27	349	358	244
fabulous	11	109	229	444	264
siunitx	45	230	448	767	909
VLN	53	139	51	448	821
VLA	7	248	65	9	439
VLC	71	246	58	571	593
introspect	71	239	181	144	625
df.new	90	297	115	239	227
B.shape	44	227	228	0	357
pandas.TimeGrouper	64	287	449	48	48
zach	30	174	117	751	262
representer	2	215	328	405	187
set_label_position	5	148	32	558	844
])))`	68	32	13	545	585
represented	81	21	328	98	702
finders	13	42	235	279	905
Animate	59	52	495	209	177
dlopen	55	176	397	696	372
Theres	88	116	145	706	356
symlinks	67	132	352	113	137
anycase	47	248	342	91	950
Beginner	38	206	282	519	504
Tabs	61	58	452	539	501
dificult	88	59	147	144	908
Surprisingly	10	202	37	323	876
precede	61	263	452	355	501
Andre	24	109	394	567	469
precip	79	140	450	101	675
genfromtext	65	153	336	423	793
allready	50	59	114	504	469
fourier	20	93	248	191	344
get_text_width_height_descent	37	250	475	205	173
stray	50	263	452	618	625
Studying	35	193	19	387	371
index-value	78	49	337	708	356
julia	47	57	429	51	54
Book	38	245	282	519	332
Bool	48	123	159	197	653
mysqldump	71	171	303	60	108
pd.Timestamp	99	274	68	679	390
months=1	99	274	39	679	997
histogram-like	81	52	495	621	177
swings	59	170	235	507	116
approxPoly	29	40	444	396	622
Juno	19	7	417	301	644
hospital	79	228	487	480	675
Express	67	163	152	241	850
June	99	182	318	109	519
noting	88	152	147	9	908
preview	93	61	315	769	54
assessment	4	225	490	419	81
v1.4	91	122	156	587	230
.translate	86	32	10	772	838
df.drop_duplicates	64	47	406	631	294
Float64	14	291	162	325	470
freetype-dev	67	151	327	232	334
*IQR	96	159	324	104	421
v1.6	7	163	167	9	594
]')`	53	18	68	682	390
grief	50	152	301	284	120
correspondingly	2	21	233	91	338
gammainc	76	94	181	169	709
x.any()	27	260	431	234	945
np.concatenate()	42	30	286	74	595
error's	57	37	222	37	451
Incanter	7	51	65	2	730
tremendously	11	109	229	444	781
.wav	71	153	58	428	108
.nbytes	44	227	46	157	357
install	67	151	327	232	104
top-left	39	288	25	122	979
)]'	68	32	257	590	322
delim-whitespace	52	37	222	36	888
Sqlalchemy	71	171	303	128	88
)])	75	32	287	545	585
scipy.io.wavfile	71	153	336	428	942
draw_networkx_edges	31	79	388	592	879
set_column_sequence	64	150	10	772	838
AutoDateLocator	5	148	363	558	844
OSError	63	176	397	696	136
IIR	20	93	382	191	989
vagrant	55	128	52	477	568
rpy2's	35	122	220	439	376
Jordan	38	224	282	722	689
column_indexer	90	95	115	239	227
eyeballs	18	225	45	472	922
multi-level	43	265	75	771	921
matplotlib.pyplot	15	135	319	777	823
matplotlib.imshow	72	165	495	199	627
jumping	50	232	114	35	531
conf.py	55	132	352	113	798
Climate_type	43	144	337	708	73
.tar	67	151	470	604	104
Epochs	86	281	373	185	199
complexity	10	272	356	327	668
includedir	55	132	276	477	568
ultimate	12	21	134	203	563
decreasing	81	170	409	44	576
1500x1500	10	190	258	323	655
annotate()	31	13	244	558	879
alternation	20	93	382	191	562
jpeg	22	61	381	99	593
Array_1	74	100	108	586	283
get_ipython()	40	141	281	76	632
integrands	20	98	231	279	84
automating	13	246	126	203	765
2082-05-03	54	69	119	158	126
fittings	38	206	282	722	905
cli	40	141	281	76	632
clf	46	203	348	577	430
first-level	78	144	195	276	944
compelling	88	152	5	419	606
strand	95	298	373	168	801
kwargs	31	35	388	176	879
dateutil.parser.parse	53	274	256	682	390
cls	3	220	329	157	172
Matplot	93	52	495	209	54
Main.py	15	49	50	384	108
list1	74	110	54	690	526
arraysize	52	185	473	269	793
tofile()	3	153	336	423	306
list2	74	110	54	690	577
df.irow	27	260	431	234	945
get-pip.py	67	112	470	604	137
shadows	15	135	181	777	195
eigenvalue	60	194	280	431	485
relevant_data	53	139	42	250	814
spsolve	60	194	102	431	751
potatoes	30	271	369	519	517
set_figsize	15	135	319	777	823
odbc	71	171	303	128	88
tvtk	13	26	63	97	398
author's	4	235	342	450	59
CustomFrame	3	220	329	663	720
scipy.signal.find_peaks_cwt	4	193	19	387	114
refcounting	76	188	447	570	450
trainset	81	21	131	251	986
fraught	12	152	60	552	120
although	47	0	392	678	544
N^3	85	194	356	327	668
N^2	10	194	356	327	668
poly1d	77	124	458	324	438
B=A	90	293	26	509	228
norminv	60	296	375	742	631
numpy.interp	72	165	15	235	570
")	86	174	260	185	496
antialiased	31	13	433	134	608
pandas.read_sql	71	171	473	128	88
.get_figure()	90	297	13	10	744
BTW	47	0	392	678	544
speedups	10	202	37	225	990
DatetimeIndexes	94	281	456	789	739
BT\	86	129	386	475	194
correctness	12	183	134	458	783
x.T.dot	85	29	18	704	598
columnname	48	123	486	551	779
hopeless	88	120	114	334	53
BTC	53	281	335	631	82
differnt	2	105	233	203	59
onto	2	116	279	335	177
.grid()	29	203	444	236	444
rand	75	243	385	725	484
rang	96	266	324	397	421
get_xticklabels()	5	148	363	558	844
einsum()	10	202	37	313	876
rank	78	194	280	431	485
hearing	11	120	389	35	727
restrict	47	229	457	306	338
rant	18	225	490	419	53
matplotlib.dates.date2num	31	63	68	426	745
magics	55	128	330	205	461
rowp	65	233	54	690	526
box-forced	46	226	494	757	508
tox	40	57	167	697	321
toy	57	235	463	450	766
rewritten	76	17	342	799	187
top	59	52	25	122	979
indeterminate	34	265	131	574	734
tow	79	21	233	251	944
tot	85	298	419	751	192
tou	18	200	490	567	81
gridlines	59	52	32	19	884
os.path.isfile	36	10	489	712	261
ton	24	109	229	444	264
too	88	59	114	334	604
tol	27	124	31	396	236
tom	24	121	264	646	500
toc	21	160	274	323	655
inconvenient	88	257	61	334	695
ONCE	29	218	355	159	359
urban	79	228	487	480	675
.sort	64	287	406	197	294
folded	81	170	206	203	959
extra_link_args	53	139	42	636	775
wrapped	76	215	65	257	417
pre-generated	39	126	214	571	537
segfaulting	76	59	143	697	908
numpy.__config__.show()	60	296	184	347	709
f-list	85	270	239	88	192
roles	2	215	233	91	338
to=	53	150	10	772	838
divisible	34	205	46	433	603
bloated	88	272	5	334	604
wx.Frame	93	154	104	537	728
flame	39	126	495	93	949
15:30	99	253	119	525	256
.18e	86	129	465	137	347
10th	78	140	338	616	456
legibility	12	23	134	458	606
Cassandra	71	171	303	203	457
Dougal	4	121	264	646	500
np.interp	72	165	15	235	397
np.clip	27	269	403	28	244
bs4	52	171	44	36	88
numpy.clip	42	27	14	53	244
Prepend	43	265	72	771	356
n=6	10	160	274	323	655
n=4	34	160	370	88	943
n=5	75	269	403	65	201
n=2	78	266	370	391	192
advising	18	225	5	419	53
n=0	85	195	370	560	749
n=1	96	201	370	560	749
n=8	21	100	370	391	192
interpolated	72	165	270	733	301
numpy.char	76	94	65	735	957
smooth	72	165	231	709	301
1966	54	186	300	372	361
1967	54	186	300	331	299
1960	99	182	318	109	94
snow	19	7	410	301	232
Sym	53	95	51	551	779
Let's	47	21	342	678	927
Appendix	38	224	282	519	689
l-1	68	205	18	196	62
clunky	88	257	61	334	695
capitalization	57	225	179	567	195
though	47	59	392	630	908
pandas.merge	49	47	406	631	445
SciKit	76	26	65	118	398
preset	2	229	457	98	108
plenty	13	193	372	387	219
chunk_size	52	185	28	121	793
16bit	22	248	381	571	593
lifesaver	24	109	229	444	870
Wang	4	121	264	102	741
file_2.csv	78	49	195	178	944
truncatevalue	74	100	95	18	866
reputation	18	15	45	472	922
Want	47	116	237	143	435
listi	74	233	54	27	336
pd.options.display.float_format	86	129	465	479	347
radix	10	202	37	327	405
getattr()	65	157	14	750	956
out_c	90	54	257	10	995
reductions	76	272	268	169	887
manipulation	13	116	126	203	765
sage	13	42	38	279	809
rst	61	193	86	769	561
radii	39	149	438	93	116
radio	29	246	188	427	2
solutions	11	17	389	630	219
COMMENT	30	212	55	136	965
row_num	90	95	54	239	682
cholesky	60	194	280	431	485
Christophe	67	57	167	499	732
delays	20	53	301	167	954
Matplotlib	93	52	495	209	837
band2	50	37	292	699	59
plt.boxplot	31	13	383	592	879
zarray	44	195	4	617	228
.set_color	46	226	73	316	649
Turns	50	264	292	210	747
watch	40	232	232	167	769
fluid	39	126	206	195	949
Optimally	57	235	342	305	451
report	35	122	220	292	106
permute	34	30	396	566	520
reinstall	67	151	327	232	104
REGION	95	298	335	168	497
z-dimension	81	6	216	391	283
Jupiter	39	126	235	93	949
automatic	88	152	457	618	621
plt.acorr	60	296	375	364	631
above-mentioned	40	57	429	384	315
thrashing	10	127	355	159	359
presuming	47	0	392	91	907
electrodes	81	43	206	101	675
2-norm	60	270	472	431	662
re-initialized	2	215	233	251	338
str.join	65	27	81	589	448
roadmap	35	122	138	9	398
detection	20	126	7	709	670
dev's	12	152	5	257	908
corrupt	71	153	50	423	108
Second	47	0	392	678	544
index.c	37	250	27	314	802
gridsize	81	170	284	245	479
by_country	53	139	434	240	779
fig.autofmt_xdate()	5	148	363	558	844
keypresses	29	187	128	764	2
catalogue	81	228	214	203	1
plt.hlines	5	148	289	592	844
Sieve	10	202	37	327	876
approach	88	17	61	630	612
+0000	54	69	119	158	126
x^T	85	194	280	5	485
vaues	10	21	131	522	783
1945	99	140	453	198	687
weak	12	120	212	257	219
my_protein	90	95	115	239	227
s.ix	90	95	115	239	227
predates	35	26	63	9	398
df_right	49	123	406	631	82
irregular	72	165	270	733	301
Chances	47	0	392	697	604
spanselector	93	154	188	427	203
amortized	10	272	356	327	668
28x11025	78	126	239	442	943
x.split	86	89	10	772	838
Computes	34	270	472	264	662
Computer	38	224	448	767	985
games	79	228	487	480	285
havn't	50	264	393	75	564
.values	64	95	74	489	227
variance	77	214	132	783	454
Regex	61	58	443	539	501
numpy.arange	75	243	385	425	484
system-provided	67	151	210	351	478
Hadley	13	193	372	387	264
.grid	46	203	348	123	55
i+j	74	195	4	255	577
trust	12	183	5	419	53
i+n	90	32	13	617	744
3-band	22	248	381	571	672
simplification	57	42	342	458	950
Darwin	84	57	167	499	321
quickly	88	232	232	334	604
matplotlib.units	31	63	138	426	745
16,777,216	21	190	234	557	326
Animations	93	52	495	209	837
expected	47	235	342	91	59
i+2	74	195	4	255	577
i+1	74	195	4	255	577
sprite	39	126	7	571	177
30-day	79	78	173	101	955
skew-t	81	170	232	144	727
drugs	79	228	487	27	1
percentile()	60	40	444	742	709
pd.DataFrame.from_dict	64	150	406	631	48
UnicodeEncodeError	63	5	443	563	209
set_major_locator	5	148	363	558	844
im_rois	74	233	54	540	228
no-deps	67	112	276	57	128
get_schema	43	157	72	24	439
.npy	71	153	336	423	306
.npz	71	153	336	423	306
1600x1200	22	248	381	45	593
dept	84	271	2	686	741
taste	88	257	5	458	695
deps	55	112	330	21	791
stopping	50	37	301	167	769
procedure	47	48	392	630	338
imagination	88	232	232	144	394
subnormal	14	86	142	325	549
pyramid	59	52	433	32	177
mp.rcParams	45	80	448	134	906
validation.index	68	32	289	545	486
experts	11	225	212	527	219
exterior	39	117	235	257	102
pics	57	239	392	450	451
interacts	13	26	491	118	537
flatiter	3	220	361	404	890
thusly	57	235	342	450	356
bigfloat	14	291	142	325	549
circumventing	76	218	345	445	803
suggest	47	0	143	630	360
algorithmically	12	42	38	799	604
df.mean	64	47	406	65	48
unrecognized	61	58	443	539	260
Gabriel	4	121	264	646	648
dimensionless	14	261	38	279	809
np.tril_indices	42	293	286	358	146
satellite	39	126	279	766	949
suburb	48	123	486	691	82
positives	12	183	409	355	148
insisted	67	57	167	664	732
formated	61	153	50	423	108
figure_manager	29	203	128	123	55
savings	10	272	118	44	863
mother	71	228	122	60	720
scipy.curve_fit	60	264	458	742	438
ndgrid	72	165	15	282	397
testfn()	74	100	95	18	866
matplotlib.pyplot.figure()	31	203	319	577	873
Console	40	141	281	76	402
Lots	11	193	393	444	264
5V	95	298	419	751	340
5M	21	190	234	557	42
5L	44	205	154	30	357
200,000,000	85	6	239	391	192
bugged	35	122	301	9	120
thumbs	24	15	229	444	870
5D	34	77	0	73	694
5}	86	181	287	730	585
5x	10	202	37	323	876
ell	85	195	177	255	192
numpy.float32	3	291	141	266	969
Assignment	69	162	191	61	739
5s	10	160	449	323	655
ele	74	260	54	690	945
5m	39	147	270	766	301
misprint	24	200	493	504	991
tring	47	116	145	424	907
5d	34	77	0	88	943
tolerable	10	202	37	323	876
elt	75	32	10	772	838
spanned	81	288	270	733	301
pyplot's	31	14	383	568	710
judge	12	183	409	170	563
Embed	93	31	104	209	728
detector	39	126	7	709	670
N*log	10	194	356	327	668
59	54	3	298	187	811
58	54	186	298	318	811
55	54	223	298	318	811
54	54	3	298	318	811
parallelising	10	272	118	225	863
56	54	223	298	318	811
51	54	223	298	318	811
50	21	223	234	557	252
53	54	3	298	318	811
52	54	186	298	318	811
5-	96	201	18	751	62
normalization	77	214	275	783	603
bug-report	18	225	220	292	106
5+	84	271	419	21	38
arbitrary	2	229	457	91	621
hung	50	232	114	35	64
X.astype	3	18	141	266	969
frustrations	50	120	114	35	64
fill_between()	31	14	383	199	710
successfully	50	57	292	75	59
PostScript	93	61	315	99	374
Much	24	109	229	444	870
Python-only	76	51	345	169	730
non-NDFrame	63	44	199	172	341
tutorial	13	193	372	387	704
.zip	67	151	470	604	305
proceeding	2	116	328	335	813
totaly	50	59	301	167	769
MNP	15	135	375	364	631
markerfacecolor	31	13	383	134	608
deploy	67	119	429	607	377
Derived	3	220	329	514	720
totals	79	144	173	376	435
str.strip	52	89	163	589	448
everything	47	232	392	91	338
Dave	4	121	264	646	500
dt.datetime.strftime	86	274	10	679	151
Chris	4	121	264	646	500
MNE	71	246	214	428	108
buildin	43	157	14	15	709
NAMEUI.ui	40	187	429	76	632
1420	54	50	368	429	428
disappeared	50	37	292	210	59
discount	12	183	456	170	563
Elements	69	162	191	61	837
permitted	12	111	147	355	148
chapter	38	224	372	94	689
Yocto	67	57	167	697	732
ucs2	67	57	167	664	732
grouby	43	14	103	376	956
Clip	59	117	433	32	177
luftb_hydgr_add	43	100	108	706	986
x.diff()	64	150	256	72	838
plus	47	21	392	91	338
guest	79	49	148	480	285
runtime	10	202	37	225	783
sm.add_constant	27	32	10	218	838
wildcards	15	135	222	504	469
-99999	6	68	12	130	910
age_groups	78	49	233	376	986
nopython	76	51	428	169	915
obtaining	2	21	131	98	531
Smoothing	38	206	282	722	71
Hummm	50	174	222	699	469
inclusive	78	140	324	397	603
Joining	69	31	100	530	739
In-place	34	94	122	482	734
center-aligned	5	288	284	245	479
existed	24	264	292	210	747
git	67	151	470	604	594
gis	13	239	214	322	586
transform	20	93	248	191	603
Illustration	30	235	342	347	560
gallery	93	23	372	97	704
gig	21	127	355	159	359
gif	93	61	315	99	593
gid	31	13	388	269	879
ax.draw_artist	46	203	348	577	430
continent_codes	53	123	51	339	779
Peak	69	179	169	632	640
questionable	88	257	138	257	417
attempted	50	264	393	75	564
Decimal	14	291	142	325	549
15.07.2015	86	274	68	679	151
ADX	99	85	453	109	817
HW	84	119	2	170	786
ADF	30	271	342	347	560
ADD	30	212	182	787	965
illuminating	18	225	372	387	264
satisfactorily	18	15	45	472	922
nepidemix_runsimulation	36	176	136	696	136
enumerating	65	233	158	522	207
BeautifulSoup4	63	176	44	582	136
cylinders	39	43	235	400	102
HK	54	298	419	155	437
tnew	74	100	108	586	577
42000	21	223	258	45	252
paging	10	127	355	159	359
simplifying	13	120	212	458	950
decorate	76	40	444	306	439
submitting	35	225	220	292	106
z-coordinate	41	6	438	69	397
gdalwarp	72	165	15	235	301
mtrx	90	297	13	239	744
Linearly	6	229	456	546	603
Vista	19	7	432	301	644
squeeze=False	45	13	334	269	430
SMA_22	53	139	51	682	199
escape	61	58	443	230	501
indx	74	293	4	586	577
shines	76	94	65	169	734
annoying	88	152	114	334	695
indirect	88	257	349	675	640
faithful	57	183	342	630	950
galois	38	224	282	722	38
whereas	47	0	491	678	544
df.copy()	94	47	74	212	923
pyGTK	93	23	104	537	537
readonly	3	188	447	359	450
isclose	60	27	14	313	244
b_array	59	288	25	546	479
Export	69	31	100	769	316
pymongo	71	171	303	128	88
Inverting	34	77	169	91	485
node	39	79	41	400	234
superposition	59	117	433	199	177
Effective	38	138	282	519	38
index_data	53	139	51	448	821
tkAgg	93	80	315	435	591
miscellaneous	50	264	393	697	564
')`]	64	287	256	36	597
ridges	39	43	231	152	102
sql	71	171	473	128	88
stride_tricks	42	17	286	358	368
-std=c99	55	128	293	52	56
old-style	61	230	329	735	720
binmin	41	266	289	171	810
Day1	99	140	453	198	221
unittest.py	15	135	44	384	305
well-designed	88	152	138	334	604
Hs	85	298	419	467	221
Dummies	38	271	495	281	837
m_ind	44	293	228	509	146
b-c	68	32	18	617	62
focus	12	232	232	144	781
min_37	81	6	279	766	573
leads	12	152	301	618	120
llh	96	195	4	617	597
Ht	85	298	419	467	361
1.80	84	186	298	579	322
0.11rc1	35	122	156	292	376
1.0.0	91	7	417	587	230
x+10	41	35	289	282	810
izip_longest	65	27	81	648	311
discern	12	117	409	144	714
df.columns.name	48	47	74	405	779
time-steps	81	288	206	766	982
environment	40	119	210	76	137
charge	12	26	63	516	959
y-labels	5	148	32	19	884
promoting	3	291	162	325	470
discovering	50	120	114	35	727
multilinear	72	206	495	733	71
Raspbian	84	119	429	609	321
-pedantic	45	37	222	215	625
plat-darwin	55	128	52	477	56
matplotlib.pylab	15	135	319	777	823
nesting	65	94	158	257	207
hard-disk	71	61	90	571	54
cook	50	232	232	306	781
.head	64	150	256	551	48
little	88	59	114	35	695
Commented	57	235	342	450	451
cool	24	109	229	444	264
4.5.1	19	7	417	13	644
425	54	3	101	297	399
Allowed	30	162	191	61	739
-bundle	55	128	293	52	56
python-nose	67	112	327	57	334
install_requires	67	151	174	232	334
np.sign	27	29	137	18	866
obsolete	35	122	138	9	376
rv_continuous	31	219	329	663	720
Optimising	76	272	118	169	863
log-likelihood	77	98	132	783	738
bacteria	39	43	206	498	949
datalogger	79	147	450	167	769
-LC	37	250	386	475	194
numpy.bincount()	42	27	14	313	244
NxMx4	22	4	294	438	672
np.gradient	42	269	286	313	396
NxMx3	22	4	381	438	672
sharex=True	46	284	255	577	430
long-standing	35	122	60	9	120
Buy_He	64	39	74	505	649
lfilter	60	93	382	235	396
fmap	34	77	251	73	943
concat()	43	157	72	683	480
))```	75	227	385	545	486
fmax	6	100	266	588	283
Psi	95	18	272	36	199
skip_header	52	185	28	121	793
runable	57	239	94	37	766
noticeable	10	272	118	44	990
healthy	59	127	235	167	212
Tweak	31	13	457	51	371
overrides	31	215	491	174	621
guilty	50	120	114	35	727
overriden	31	220	329	663	720
Replaced	4	235	254	567	59
Floating	14	86	142	325	433
np.ascontiguousarray	3	227	361	138	273
alldata	74	297	54	690	228
emerge	12	152	409	44	219
Said	2	49	145	405	713
convolution	20	93	382	191	989
level=None	27	35	334	1	314
time.strftime	86	274	10	772	151
Member	30	174	117	149	858
np.savez()	36	153	336	423	306
dual_coef_	77	168	186	705	646
iam	77	174	394	102	340
baby	79	120	212	739	852
handled	2	215	60	799	187
10:15	54	186	119	377	811
10:11	90	54	257	332	995
10:10	54	186	119	338	139
sports	79	228	487	647	285
---------------	30	50	368	429	428
handles	2	215	491	174	621
handler	29	187	188	149	282
reorder	2	47	337	708	520
Numpy-based	10	202	37	169	876
census	79	228	487	101	675
joelfred	55	128	330	477	568
vmax	22	36	294	653	271
freetype-2.3.11	67	151	327	232	334
Procedure	30	271	373	281	560
autumn	79	140	453	101	675
sheds	18	225	220	419	106
os.path.expanduser	36	10	489	712	261
Bitstream	45	230	448	654	909
PLEASE	30	212	55	136	965
Toolkit	93	26	63	537	537
H2	85	172	481	224	538
non-singular	77	194	280	431	485
placements	5	148	139	19	884
ticker.FuncFormatter	46	35	494	46	348
Min	95	138	66	789	687
sense	88	59	147	144	908
mydist	45	37	334	36	906
Mid	95	123	335	168	517
x.size	44	227	228	0	357
Mix	69	162	191	61	739
500000	21	190	234	557	42
counting	78	263	131	522	944
qualifiers	61	58	50	539	501
order=None	75	227	154	157	172
scipy\numpy	88	48	5	630	31
BONUS	30	109	229	444	114
rosen.py	40	112	276	57	791
GnuCash	71	26	63	516	594
MiB	21	127	355	159	359
S32	86	18	141	266	178
1	90	54	257	338	192
Inputting	71	21	303	60	92
cardinal	12	43	235	170	563
ax.xaxis.grid	46	226	494	269	348
begs	12	59	490	630	908
ifort	7	163	428	326	915
paramount	10	272	118	225	863
crashes	40	37	301	764	954
Average	69	138	173	264	698
Usable	47	59	222	144	907
crashed	50	37	292	699	954
xorg	27	100	431	234	945
ndarray.tofile	3	153	336	423	306
unidiomatic	88	94	61	574	695
dynamical	39	126	48	195	177
doSomething	27	260	431	234	945
h3	92	298	419	467	497
a-priori	12	229	38	350	563
droplevel	43	47	72	683	73
version-specific	91	57	167	499	230
ax.boxplot	46	14	383	505	649
plt.gca	46	203	348	577	430
panel.mean	27	174	117	751	262
White	95	298	427	438	198
applys	43	265	103	771	956
Views	2	188	122	212	273
vtk	13	248	214	97	537
gtk	93	187	104	368	591
offers	13	26	138	118	398
Using	47	0	237	678	544
bargraph	59	52	495	51	710
happened	50	264	301	210	747
lonely	39	126	235	588	670
c_types	76	51	65	2	730
loadtext	36	153	336	423	306
cross-entropy	77	270	472	783	738
histogram2d	22	14	297	171	627
underneath	59	52	25	122	884
conquer	77	42	275	327	905
accommodate	2	229	284	245	479
term	12	42	248	86	738
pd.DatetimeIndex	64	63	68	72	390
name	15	49	181	405	406
rmse	60	40	444	396	709
y-axis	5	288	32	19	884
ValueError	63	44	199	582	341
awayTeam	3	18	74	157	172
plt.set_cmap	46	39	73	653	488
list.remove	63	44	199	582	888
OpenOpt	7	26	63	2	730
Perron-Frobenius	60	42	280	431	485
individually	2	116	233	251	338
=([	90	54	13	10	585
populated	78	49	328	98	187
hiccups	50	57	292	664	625
Parallelizing	76	265	126	574	734
parent's	29	188	447	570	450
Distributing	7	26	65	2	730
NetCDF	71	153	214	423	108
'])`	53	139	256	250	775
pyplot.savefig()	36	37	222	384	942
TEMP	30	37	328	405	187
display.max_columns	45	80	334	269	413
'])]	53	139	42	250	775
\theta	61	58	438	86	501
shouldn't	47	0	392	143	908
```]	75	231	19	112	486
ploted	59	288	32	32	884
processed	71	246	328	98	187
subtracts	78	49	367	276	635
problem's	50	59	114	35	469
LinearSegmentedColormaps	81	4	342	450	950
```)	75	231	385	112	486
10.04.4	91	7	167	301	321
libxft-dev	67	151	167	664	334
Record	69	162	191	61	739
df.replace	6	89	418	85	131
staircase	81	43	25	709	562
'])"	53	139	42	250	775
RFE	77	168	186	341	443
']))	53	139	256	250	775
add_constant	88	257	138	630	31
base=	75	35	289	46	810
scipy.integrate.simps	60	296	458	742	438
matmul	60	296	375	431	631
preprocessing	71	168	186	341	646
place	47	0	392	91	338
=((	68	32	385	545	486
swing	21	170	453	507	176
myDF	40	37	74	551	843
row_id	48	204	195	178	637
2d-histogram	39	126	495	93	949
non-interpolated	22	126	409	709	562
abcissa	34	77	0	73	694
mdates.DateFormatter	86	274	363	679	151
un-binned	81	214	132	147	4
Hertz	20	93	425	507	344
Start	30	271	237	281	9
array	34	77	0	73	694
sound_info	21	205	370	196	252
engineer	13	120	212	739	852
Separated	69	162	191	127	837
given	81	21	131	91	702
necessarily	12	0	392	91	908
copy-on-write	76	218	447	570	450
ser3	48	123	486	339	687
HOUR	48	281	486	405	502
ser1	99	281	335	155	687
COLUMN	48	212	182	136	965
Bernoulli	77	98	48	195	416
returns	2	215	491	174	709
terrifying	88	152	181	145	195
bounty	18	15	45	472	922
SepalLength	48	144	195	276	118
iat	43	111	115	369	227
independant	81	21	181	396	195
gives	47	37	491	174	59
Keeping	2	31	237	530	911
specifc	74	95	115	369	227
CLI	40	141	281	76	632
releases	35	122	156	292	376
cope	47	229	392	799	360
CLD	95	268	198	168	198
Question	30	235	254	281	114
released	35	122	156	292	376
TfidfVectorizer	77	168	186	705	646
scikit_learn	67	112	167	499	791
copy	2	188	361	212	273
CLR	7	163	65	2	850
countour	59	52	495	199	177
unfortunately	50	59	392	630	469
colorscale	22	4	294	438	672
sqft	81	126	266	621	573
theta=0	39	149	438	298	116
1970-1-1	99	63	68	426	27
BOOLEAN	61	94	162	355	429
OSX's	67	57	167	664	315
aesthetic	88	23	134	458	606
wrap-around	14	263	25	122	84
SkewT	13	23	126	203	537
df.idxmax()	48	95	115	239	227
WSGI	35	218	183	445	803
00:22	99	69	119	525	256
00:27	99	69	119	155	126
fc=	46	226	73	316	649
generalization	4	17	134	630	612
rank-2	34	194	280	88	485
GrowCut	10	183	37	225	169
rent	79	78	2	101	377
Reformat	69	162	191	789	837
2005-5-31	48	123	486	339	779
klib	55	128	330	52	461
ideas	11	173	389	763	392
ideal	88	257	61	334	612
names=True	52	185	376	121	971
Operating	84	179	169	61	145
a2=	75	243	385	425	252
blunt	88	17	25	122	612
urge	88	232	5	419	53
-element	34	77	0	88	943
rereading	18	200	490	504	991
shure	88	59	5	424	907
clearer	88	257	490	144	81
multi-processing	76	218	345	445	803
800x600	22	61	284	45	943
ax.plot	46	39	73	505	649
cleared	29	203	128	764	2
probes	81	170	409	44	84
Jan-Mar	99	140	453	101	687
_and_	12	59	490	170	908
adopt	88	229	134	145	360
hungry	10	188	118	334	863
markeredgecolor=	46	226	73	316	488
Seconds	99	63	68	426	27
df2.reindex	64	287	406	548	48
r'D	36	10	136	36	261
non-empty	6	100	95	355	336
OpenGL	93	248	104	537	537
csv_file	36	10	376	85	971
Comments	4	224	254	102	114
my_csv.csv	36	10	376	712	971
lib.c	37	250	27	314	802
carray	34	49	131	522	694
IMPORTANT	30	212	55	429	440
44.1	21	223	274	507	252
invocation	10	277	444	699	709
Byte	54	204	85	338	898
B-A	68	201	18	28	62
1-100	22	288	324	200	479
set_aspect	5	284	494	757	508
ax.figure.canvas.draw()	29	203	128	123	55
reveal	12	183	5	170	563
sklearn.feature_extraction.image.extract_patches	60	193	19	313	371
VVm-VVs	96	29	18	68	62
MICRO	61	58	335	539	501
dictreader	71	153	50	423	108
i386	55	128	293	52	56
tupline	74	37	222	699	684
convolve	20	93	382	191	396
498	54	3	101	297	158
discussing	18	225	45	527	219
499	78	195	4	255	192
Abaqus	19	7	417	241	644
imposing	77	98	38	279	738
bids	79	144	148	178	955
2011-04-18	99	69	119	155	221
closures	88	94	181	145	195
connections	39	79	41	400	234
college	13	120	48	195	852
apologies	24	200	179	739	67
collects	71	218	183	60	92
uncorrelated	77	214	132	783	162
__all__	15	135	319	777	873
subsequent	2	215	328	167	769
definite	60	194	280	431	485
floc=0	45	124	334	324	201
491	90	3	101	332	995
hist	31	14	297	171	710
outside	2	215	457	335	338
r'c	36	10	376	712	971
reproducible	57	235	463	37	766
sig_a	96	40	444	396	622
enddt	78	144	173	198	955
Natural	38	206	282	722	353
Determining	69	31	100	530	911
desireable	88	257	147	334	612
overwriting	2	116	181	573	923
densely	81	117	258	45	943
dmin	96	266	426	391	421
Sparse	38	292	64	348	218
Diff	53	281	51	72	775
collect2	63	176	397	582	536
ez_setup.py	67	57	167	499	732
Monte	77	98	48	195	416
subfigure	5	52	255	577	518
OMP_NUM_THREADS	7	119	345	445	137
20101220,245	30	50	368	429	428
trace-back	57	235	421	37	451
Month	48	138	66	339	653
Individual	69	162	191	61	837
Truncating	2	265	233	546	356
defaultreallimits	45	13	19	36	906
NZEC	63	37	199	582	136
regressions	77	168	186	341	443
Monty	38	224	282	722	689
duty	13	246	48	195	416
Guess	24	200	493	504	469
jitter	20	170	409	44	562
afterwards	2	116	457	335	180
colons	61	58	452	230	501
We've	50	264	292	210	747
novices	11	120	212	444	727
en_US.UTF-8	45	80	184	269	906
pop	29	232	128	764	769
60	21	223	234	557	252
61	54	223	298	318	811
62	54	3	298	596	158
ndarray.resize	42	188	361	404	273
64	84	7	2	241	644
65	54	223	298	318	811
iterations	10	160	37	323	655
67	54	3	298	318	811
68	54	3	298	318	811
69	54	3	298	318	811
endeavor	88	257	61	630	612
Sniffer	71	153	336	514	957
Var1	48	172	486	467	653
tensordot	42	30	137	74	598
Var2	53	139	51	417	775
50%	21	160	234	323	176
trie	47	174	14	424	228
256,256	44	205	251	196	357
509	37	3	298	187	158
506	54	3	298	318	158
caplines	31	13	388	592	879
504	54	223	298	318	158
505	54	3	101	187	158
502	44	205	251	196	357
valueerror	63	44	199	582	888
500	21	190	234	557	252
501	78	174	419	5	192
engine	71	171	473	128	88
50M	71	218	145	127	863
50K	21	190	234	557	42
Phil	4	121	264	646	500
6m	21	190	234	557	252
Together	69	162	191	61	837
.virtualenvs	55	128	52	477	56
6s	78	160	234	64	944
Beg	48	138	66	197	653
6x	10	202	37	323	876
6528	14	291	85	325	549
pyplot.ion	29	218	14	359	709
careful	12	152	147	419	908
irrelevant	12	263	134	618	120
Anyhow	47	0	392	678	469
.to_csv	36	10	175	712	261
myself	50	120	114	35	727
50k	21	190	234	120	42
mount	84	119	429	609	321
Nest	67	57	167	499	732
Vary	59	52	495	209	177
6M	21	281	449	48	692
premature	88	272	5	225	53
admin	67	119	210	351	786
zorder	5	13	388	134	608
50x	10	202	37	323	876
2.49	54	108	23	579	421
weave.inline()	42	111	14	15	235
confusions	63	44	199	618	888
50s	21	127	355	159	655
col11	53	150	256	197	82
Slice	69	31	100	530	911
coupled	76	42	38	279	809
discrepancy	12	152	301	552	120
couples	41	6	0	107	336
numba	7	51	428	225	915
bins=50	46	39	297	171	649
numticks	46	35	289	46	810
np.vectorize	42	27	14	313	244
Voil	47	21	392	91	338
erroneously	2	215	60	210	120
dithering	22	61	381	709	318
numpy.size	42	30	396	74	709
new_order	74	49	373	185	517
trip	50	264	126	35	564
html	93	61	90	769	374
360deg	39	149	438	322	586
plt.tricontour	41	6	289	282	397
127.5	96	201	18	28	62
font.sans-serif	45	230	448	767	909
nest	65	233	158	540	207
plt.clabel	31	13	383	592	879
nj	41	6	370	107	397
np.datetime64	94	63	68	426	390
Soup	71	232	90	306	439
TFIDF	77	168	186	705	646
vowel	13	246	48	195	949
footprint	10	188	355	159	904
cartoon	57	235	342	450	950
df_concat	49	47	406	551	779
json.load	36	10	489	712	942
TikZ	93	23	315	97	54
nn	72	165	15	235	486
img_bw	3	90	201	157	969
dt.datetime.strptime	86	274	10	679	151
magical	88	257	61	334	695
color2ind	74	233	54	690	577
reward	18	15	232	472	922
Physical	95	271	373	519	38
Through	50	116	393	75	564
actions	79	21	233	167	285
sqrt()	60	29	137	396	622
DFFT	20	42	409	191	738
numpy.ones	44	227	228	0	484
ax.pcolor	31	13	294	592	271
multi-threaded	7	51	345	445	166
incurring	76	272	118	257	990
halfway	81	288	25	122	116
signal-to-noise	20	170	409	709	562
alphabetical	2	49	337	708	713
https|	47	193	19	91	371
widest	12	170	138	44	394
.So	41	174	117	751	262
aggregator	43	265	72	771	956
seems	47	59	392	143	621
reccomend	13	26	5	118	53
Gauss	77	42	248	652	905
apache2	84	119	429	301	791
re-creating	2	116	128	573	531
disrupt	12	263	409	355	563
$date	86	181	373	185	496
x|y	46	35	289	46	649
IPC	71	218	183	359	803
explosion	94	152	301	618	32
confines	59	170	25	122	979
30-50	21	190	234	557	42
preinstalled	67	151	47	351	104
shapes.csv	30	235	342	450	560
df.name	53	123	51	339	682
Ooops	24	200	493	504	991
confined	81	170	275	391	603
accepted	4	15	45	472	922
vanished	50	57	292	664	230
ns	94	63	68	426	452
Produces	69	162	191	347	304
reduces	10	272	491	174	576
reducer	71	218	183	359	92
sanity	76	142	222	534	783
mpmath	14	86	142	325	549
dummyvar	34	296	375	566	631
call-backs	29	187	128	149	2
reduced	10	21	258	44	576
2003-10-24	54	69	119	158	126
3.0.2	19	7	417	13	644
np.random.shuffle	42	30	286	358	263
3.0.0	91	7	417	587	864
userid	79	144	195	787	637
numpy-1.10.2	67	112	276	499	128
numpy-1.10.1	55	112	386	477	791
shortcoming	76	152	138	334	604
multi-target	77	42	186	705	905
Employee	48	144	195	787	502
ShuffleSplit	60	40	444	514	709
df.resample	64	287	449	48	48
complib=	36	10	446	712	369
assert_allclose	60	296	177	742	640
scipy.interpolate.LinearNDInterpolator	72	165	15	235	570
error-checking	76	17	134	534	783
imshow()	22	13	294	199	627
protocol	71	153	336	312	306
Complicated	69	265	145	706	356
byte-order	61	291	85	608	44
Supplying	57	235	342	450	260
Quradate	64	150	256	250	48
mergedMatrix	74	293	108	601	146
d.assign	27	29	10	772	838
y_value	41	6	177	107	397
1am	99	140	453	198	687
data_BS_P.plot()	46	39	222	592	649
thresold	81	170	266	588	283
runfile	37	250	27	475	194
yay	24	174	117	185	469
_	86	174	117	185	262
input_b	42	100	95	18	244
input_a	6	100	216	18	283
interchangable	88	94	147	145	908
HTH	24	109	229	444	870
informing	11	109	394	567	867
Lastalda	47	21	392	91	338
obeys	12	229	147	145	563
equalize	59	52	284	245	479
all_files	36	174	489	712	262
annoyances	35	225	45	527	219
SUBDIVISION	53	139	51	340	131
bleeding-edge	91	122	156	587	376
-80	96	288	324	397	421
accounts	79	21	134	170	285
idx2	74	195	108	586	577
theoretically	12	59	147	630	604
Edition	84	163	152	241	850
Infinity	14	86	314	325	549
np.float	3	18	141	266	969
Infinite	38	206	169	722	71
transparancy	31	13	294	134	608
HD\	86	181	42	211	624
Remember	47	0	392	678	544
shamelessly	4	17	254	478	552
regard	12	152	147	552	908
ELF	63	176	397	582	136
distutils.cfg	55	132	352	113	305
amongst	79	228	487	251	285
x_data	46	39	54	592	649
Error	63	44	397	582	136
promote	2	215	162	335	470
DataFrame.replace()	43	157	14	313	956
1025	96	223	266	200	252
1024	21	205	258	45	252
scimath	15	135	44	696	331
1026	90	54	257	332	744
1020	44	205	251	196	357
1023	14	266	85	391	482
adjustable=	46	226	494	757	508
touple	3	233	158	514	336
Viktor's	4	17	254	710	441
arpack	7	296	102	418	461
nunique	43	157	103	683	956
fig.close()	29	203	128	123	55
diverges	96	98	458	396	622
Layout	31	162	19	97	837
Space	38	206	282	519	38
Consultation	53	139	51	339	199
column-wise	43	157	103	566	520
corresponding	78	21	131	487	702
encompass	81	117	284	245	586
X_train.shape	44	205	154	196	357
.plot()	64	14	383	568	779
t-2	96	201	426	67	752
Optionally	47	263	457	306	9
seg_image	74	100	4	509	228
t-5	85	201	426	67	752
two-element	65	233	158	669	336
Sums	69	179	169	264	698
multiclass	77	168	186	705	646
100,100,100	44	205	251	196	357
-infinity	96	201	426	391	13
SGD	77	168	186	687	353
newdates	74	233	54	690	577
briefly	4	59	490	144	371
collaborative	13	168	126	203	765
scipy.weave.inline	76	51	65	169	730
unindexed	43	265	75	771	356
_UpdateCanvas	29	40	444	236	323
recognise	47	229	328	91	260
update_figure	29	1	444	236	444
n3	85	205	442	88	778
t-t	96	201	18	617	62
n4	85	172	442	224	778
np.expm1	27	297	13	509	486
ImportError	63	176	397	696	331
disp	75	174	117	545	486
all	47	21	233	251	338
dist	85	195	177	107	192
chinese	61	58	443	539	501
pth	15	132	330	384	406
pd.read_clipboard	52	185	376	121	971
RECL_LCC	78	228	195	168	944
abit	11	232	232	144	64
ala	2	111	237	369	531
unweighted	81	43	41	400	234
new_list	74	233	54	690	526
disc	21	127	355	159	359
dish	79	228	487	498	675
alt	41	6	279	766	573
disk	71	153	355	159	306
pts	75	227	289	282	397
als	40	141	281	76	632
alp	68	195	13	617	744
hmmm	24	200	493	504	469
98.49113721	54	50	368	331	449
0000-00-00	99	69	119	155	256
os.getcwd()	36	10	184	308	630
requirements.txt	67	151	327	232	137
BMP	22	248	381	571	593
group.to_frame()	53	95	74	551	779
5GB	21	127	355	159	359
PITA	7	51	65	169	730
stochastic	77	42	48	195	416
.name	43	95	115	239	227
Logarithm	38	206	275	264	71
code_x	53	139	51	417	775
buildpack	67	151	167	499	732
GIS	13	248	214	571	593
x-min	96	266	289	28	810
Calculated	69	31	100	789	739
pcov	44	124	177	324	201
GIF	22	61	381	99	593
awful	88	257	114	334	695
GIL	7	51	345	445	803
lapack_lite	7	163	428	418	461
a.__array_interface__	90	95	272	138	199
hamiltonian	85	194	280	431	485
Class	95	271	159	519	38
-shaped	44	205	251	196	357
programme	40	37	429	697	954
tag1	48	144	195	787	502
$PYTHONPATH	55	132	352	113	137
Interest	95	138	335	621	653
full_arr	10	188	88	404	581
Circle	31	1	388	399	879
remarkably	88	17	138	458	604
what	47	59	392	424	835
ticks	5	148	32	19	844
Worker	30	271	183	519	803
overload	3	220	329	663	235
whay	57	59	392	37	451
Waterfall	95	271	335	519	682
DataCursor	4	1	388	399	552
kindof	24	200	493	504	469
POSITION	86	18	272	211	199
Worked	24	33	106	140	870
_full_	57	239	421	37	451
multitude	13	26	126	118	219
ppl.scatter	46	35	289	176	430
Pull	35	232	220	292	106
condensed	34	270	472	152	662
nordev	24	121	394	646	500
tags	61	49	490	170	1
behaviour	12	152	147	618	120
d.T	44	194	137	704	598
condenser	43	233	68	198	262
hashtable	15	135	44	696	331
Rust	7	51	65	2	730
numbapro	7	51	65	2	957
12:2	90	297	13	10	744
scikits.timeseries	35	26	138	9	398
matplotlib.pyplot.close	29	203	348	123	55
1940	99	140	453	198	687
elongated	39	117	433	32	714
proxy	31	1	388	399	879
paired	81	49	131	522	944
180.0	68	32	42	211	62
Toy	57	235	342	347	560
-arch	55	128	293	52	56
reduced_df	53	95	51	239	821
Top	69	162	191	281	837
DataFrame.drop_duplicates	43	47	72	683	73
use_cols	52	185	28	121	793
.47	54	50	300	797	139
1947	99	140	453	109	687
Instance	30	271	159	281	38
semester	13	120	212	480	852
plonser's	42	27	14	313	244
Too	63	59	199	582	469
Tom	24	121	394	646	500
myvirtenv	55	132	352	113	568
essentialy	2	215	375	777	417
pnts	61	58	452	539	501
proceed	11	173	389	763	360
faint	59	117	433	32	562
Overall	88	59	392	678	604
pctresults	90	297	13	332	744
tought	47	200	493	143	469
Multiindexed	69	265	75	789	739
interp_2	10	202	88	323	876
interp_1	10	202	88	323	876
CountVectorizer()	77	256	186	705	646
minor	5	148	32	19	884
ax.set_title()	31	13	457	592	518
1-axis	34	6	216	616	520
knows	11	59	143	630	652
chararray	76	94	14	630	31
basically	47	21	392	91	338
im2arr	14	291	85	325	549
nitpicking	18	225	5	419	53
ground_truth	53	139	51	668	597
hashmap	65	233	158	540	526
glad	24	15	229	667	922
.4f	86	129	465	137	347
????????	86	181	373	211	340
.ttf	67	230	352	775	798
homography	34	77	248	431	943
Int	94	138	66	789	429
DecisionTreeClassifier	77	168	186	705	646
v	74	195	177	107	192
Ind	48	144	486	276	502
/[	90	89	330	477	372
nparray	3	233	162	756	172
df_name	36	49	328	405	406
E's	4	17	254	710	441
n=1000	21	160	274	323	655
dsp.stackexchange.com	18	225	45	527	509
1-a	85	195	426	617	597
dfBig	43	144	195	276	356
quadmesh	31	13	388	399	879
pd.options.display.mpl_style	45	80	383	269	906
WIth	71	153	50	127	959
Norm	81	270	472	197	662
influenced	12	183	409	44	394
chaco	13	23	63	118	398
.to_string()	64	150	74	551	975
1-d	34	77	0	73	694
Lyapunov	77	98	248	722	597
influences	59	170	409	44	576
np.hstack	42	30	286	74	595
explains	4	193	19	252	371
619	54	3	298	187	158
Correlate	34	77	0	73	71
algebra	7	42	38	431	809
610	53	139	42	250	624
weaknesses	13	26	63	118	219
Matteo	24	200	394	567	469
614	54	3	298	332	158
catalog	71	246	214	60	92
Experimenters	48	144	195	787	502
131GB	21	127	355	159	359
APNT_NA_ACTN	53	139	272	339	199
Figuring	88	152	5	144	625
??,	95	174	373	185	340
prefers	2	215	147	91	621
??.	30	174	419	751	262
virutalenv	67	112	167	499	315
fitFunc	60	40	444	396	622
N=4	21	190	258	557	252
N=2	81	21	370	450	950
discretisation	12	170	409	44	84
shade	59	117	433	32	198
N=1	42	17	14	313	439
igraph	93	79	41	97	234
???	47	174	117	751	835
prefere	74	297	26	212	273
EdChums	4	17	254	710	441
essence	12	21	147	203	950
)")`	86	89	163	299	66
np.bytes_	86	129	465	36	906
vector-based	93	61	315	99	374
reconnect	29	187	128	764	2
1.99	68	266	257	695	421
1.96	96	214	132	783	162
1.95	96	266	324	391	421
signed_val	53	95	272	339	779
developer	35	26	220	71	594
50000	21	190	234	557	252
50001	44	205	251	184	696
typedef	3	67	261	146	831
Full	57	235	342	347	560
Hash	68	174	46	751	192
misspelled	61	37	222	699	991
DataFrame.to_html()	43	265	138	24	561
axvspan()	31	1	388	399	879
resort	88	48	61	630	360
tz=tz	68	32	385	545	997
Losing	69	31	100	530	316
X_r	27	100	46	391	283
Estimate	38	206	132	264	698
Illustrator	93	61	315	99	374
yval	41	195	177	282	397
communities	81	43	41	400	234
sympy.cosd	96	40	444	396	622
Anaconda3-2.4.1-Windows-x86_64	91	57	184	499	230
Brownian	38	206	48	722	416
random.py	15	135	44	384	305
characterized	81	43	266	733	702
Defines	78	159	266	104	283
ogrid	42	30	286	74	368
HurricaneName	48	123	486	197	82
inflates	71	153	122	702	457
Platform	84	119	167	301	321
expect	47	0	392	91	835
datframe	2	265	456	405	356
organised	2	116	328	98	187
synchronised	2	21	233	251	884
Were	47	0	392	143	835
More	47	193	19	678	371
killing	29	218	447	573	954
wondered	50	264	292	210	747
induces	2	152	301	618	120
adhere	12	152	147	145	621
A.astype	3	18	141	266	969
flipud	42	30	137	74	598
.to_sql	52	171	473	24	88
dying	84	57	429	699	321
induced	12	170	409	44	576
appearances	79	78	487	27	955
new.csv	36	10	50	43	261
.describe	94	222	72	376	160
60min	79	147	450	101	955
homebrew's	67	112	276	499	791
data_type	3	153	162	423	260
1-5	21	190	234	557	326
wave_tg	75	227	385	385	486
data()	3	220	336	514	957
1e-9	14	86	314	325	236
1e-8	14	86	31	391	236
reconfigure	40	232	457	335	180
1e-1	96	266	370	196	192
b^2	96	201	426	560	13
YTD	48	138	173	198	653
1e-2	96	266	31	695	236
1e-5	14	86	31	391	236
1e-4	96	266	31	695	236
1e-7	14	266	314	391	129
1e-6	14	266	31	325	236
requests.get	36	10	489	712	314
silhouette_score	15	135	319	777	823
obscuring	59	117	433	32	714
e.g	47	21	233	251	9
algo1	60	40	444	396	314
-zhu	24	109	229	140	870
Past	69	162	191	789	739
Pass	69	31	237	174	316
consequence	12	152	147	252	908
ding	24	200	493	424	469
Huge	21	190	234	127	863
feel	18	225	490	419	53
Hugo	24	200	114	504	469
Hugh	4	121	264	646	500
well-known	13	42	126	118	604
dint	24	200	292	699	469
notify	18	15	220	472	922
slower	10	202	37	323	876
Higham	38	224	282	722	689
ma.median	42	27	14	15	709
255.0	14	291	201	28	358
Models	38	206	282	722	353
pm3d	72	165	15	235	627
hangs	40	187	128	764	954
Making	69	31	237	530	911
steals	95	117	25	122	979
kilobytes	21	127	355	159	359
key2=	68	201	426	684	62
twinx()	5	148	32	558	518
recovered	2	215	328	98	187
pipelines	13	168	126	203	765
pump	71	153	303	60	92
checklist	18	225	45	527	509
VTK	13	23	63	97	537
file2.csv	36	10	50	294	502
.subplots()	31	13	388	592	879
85345	78	204	338	338	361
optical	39	126	48	195	416
VTU	71	246	50	423	108
MAPE	77	98	458	396	738
pmf	77	214	132	783	4
aims	13	26	138	118	950
_which_	57	263	456	355	451
pairwise	34	270	472	264	662
risks	12	152	183	552	959
C++11	7	51	65	2	730
Keywords	2	49	233	98	702
scipy.interpolate.splrep	72	165	15	235	570
openopt	7	57	38	279	791
risky	88	152	181	334	195
datastructures	76	94	122	257	417
column-by-column	76	116	145	706	734
jsut	59	232	32	32	714
suspicious	88	59	60	424	120
7k	79	190	234	557	326
Jane	95	181	373	102	340
7s	10	160	274	543	655
7x	10	202	37	323	876
sixteenths	59	117	433	32	2
7D	99	287	449	48	817
month=11	99	181	318	679	997
unprocessed	22	49	381	571	672
precalculated	81	21	131	522	944
7L	68	205	154	30	357
.It	68	174	117	751	128
Finished	30	176	397	21	136
Germany	95	73	373	322	586
Red	95	271	427	590	322
finding	12	116	235	588	531
donor	79	144	487	787	285
1.8.6	91	122	156	587	230
1.8.0	91	7	417	13	230
15x15	14	205	85	45	943
UCI	71	246	214	60	92
functionaility	35	122	220	292	376
775	54	3	101	318	158
NumPy-based	76	51	65	169	31
777	54	54	257	332	139
770	74	205	272	196	336
773	10	160	274	323	655
IndexSlice	43	111	72	369	956
user's	2	246	328	609	92
A.ndim	44	293	26	509	228
778	54	3	101	297	158
jst	50	120	114	739	469
index_col=None	52	185	28	121	971
75	21	223	298	318	811
Vega	43	265	86	519	561
73	54	3	298	318	158
72	54	223	298	318	811
71	54	3	298	318	158
70	21	223	298	318	692
nothing	50	59	301	699	835
Workarounds	35	122	220	292	106
b*d*f	96	201	18	173	62
79	54	3	298	318	158
78	54	3	298	318	158
Restore	59	52	237	209	54
Euclidean	39	270	472	152	662
7.475	90	54	257	332	995
binarize	77	168	186	341	646
1.8.x	91	7	417	587	230
0.13rc	91	122	156	587	376
notch	20	93	382	709	989
Speed	69	179	169	530	145
cdf	77	214	132	147	4
BrenBarn	24	121	264	646	500
13:35	54	69	119	158	126
py27-numpy	67	112	327	232	334
rth	4	121	291	646	500
scatterplot	59	52	495	51	177
cdv	71	153	50	423	108
multiplicities	34	116	145	573	863
.encode	86	89	163	340	209
NODES	41	6	177	107	211
_repr_html_	31	23	222	592	439
dilation	22	126	7	709	670
inflection	72	165	231	152	102
rebooting	40	57	167	664	321
NEXT	30	49	456	405	262
re-reading	18	200	490	567	81
data.columns	53	95	51	239	779
IAM	96	201	426	300	62
one-column	43	265	72	771	356
spurious	6	117	231	618	84
compiled	7	163	428	215	915
libx264	45	129	136	36	906
all-NaN	94	222	75	706	356
xticklabels	5	148	363	19	844
reply	24	109	394	140	870
critically	76	272	118	44	959
compiles	7	163	428	215	915
compiler	7	163	152	326	915
typos	24	200	493	567	991
ln.remove()	46	203	348	123	55
continuum	13	26	63	516	594
center=True	94	85	449	784	215
-150	96	266	324	391	421
investigate	12	232	232	630	469
y.dot	44	201	18	704	598
StataReader	71	153	50	60	561
Skimage	22	248	381	141	722
converters={	86	10	376	772	971
hairy	88	257	61	334	695
achieved	2	48	328	799	187
z-levels	59	52	433	32	714
pyplot.errorbar	46	129	73	36	906
constant_memory	52	185	117	36	906
2001,101,100	54	186	300	797	139
TIF	71	248	381	571	593
Accessing	69	31	100	530	911
TOC_mg	53	139	51	417	821
Air-Pressure	45	263	222	269	114
matplotlib.mlab.griddata	72	165	15	235	570
profiling	10	277	118	225	169
creating	2	116	145	573	531
h=10	10	160	37	323	655
counter-productive	18	225	45	472	81
Optimization	38	206	282	722	353
competent	18	120	212	739	727
Friends	95	49	419	751	262
relying	76	94	416	257	417
f2c	7	163	428	215	461
prescription	79	140	450	101	702
hesitant	88	225	5	419	53
interrogate	39	13	235	51	177
quantization	22	4	7	438	672
roman	45	230	448	767	909
context	12	152	5	144	908
intra-group	79	144	195	442	356
baseball	79	228	487	480	675
multi-class	77	168	186	705	646
string.zfill	47	40	444	15	709
re-draw	29	203	128	123	55
NVI	41	256	177	391	994
span_y	74	100	108	586	283
v0.15.0	91	122	460	9	787
.tail	64	150	256	72	838
fn()	43	265	173	276	356
np.float128	14	291	142	325	289
asdf	61	174	222	424	262
Updated	4	235	254	567	81
java	7	51	65	2	730
incomes	79	228	173	480	326
political	39	126	7	322	586
Naively	47	48	392	424	360
Updates	30	271	191	281	560
tgD	68	201	18	560	62
W-MON	86	287	449	48	906
low-frequency	20	147	450	709	817
refered	12	215	328	487	187
dist_matrix	44	293	4	509	228
toggles	29	154	188	427	2
transferring	71	246	58	423	108
v2.7.3	19	7	417	13	644
Inelegant	88	59	61	630	31
Academic	84	151	63	516	850
matplotlibrc	45	80	352	775	798
input.csv	78	49	50	787	262
empty()	42	27	88	404	581
Winston	24	109	229	140	870
2*len	74	233	54	690	486
Sales	48	138	159	339	653
evaluated	41	40	177	396	622
.repeat	75	227	228	0	357
distribute_setup.py	67	57	167	499	732
Eh	12	59	490	630	451
Update2	47	235	342	450	560
.carstensen	24	200	493	504	991
KeyboardInterrupt	29	37	128	764	954
evaluates	27	100	95	18	866
axes_leave_event	29	187	128	149	282
19.5	54	108	274	297	399
arctan2	96	29	458	336	13
19.7	54	108	23	579	931
19.0	54	108	300	797	139
19.2	54	108	23	8	931
19.3	54	108	101	297	399
program's	10	218	183	225	169
19.9	54	108	23	579	399
df.Date.apply	86	129	10	772	838
disappointing	88	59	114	246	695
2.1.9	40	141	281	76	230
5AM	99	140	453	109	94
MlPy	13	57	167	697	732
2.1.0	19	7	417	13	972
Matplotlib.pyplot	93	162	495	209	837
))])`	75	32	385	211	486
windows7	19	7	432	301	644
-15	96	266	324	397	421
deletion	2	188	122	573	531
peoples	18	225	45	527	219
sqlite3	71	171	473	128	88
advise	11	173	389	763	867
windows8	84	7	417	13	644
matvec	44	194	280	431	485
891	44	205	154	196	357
About	47	0	392	567	835
literature	13	42	393	75	219
e_id	48	144	195	787	502
INFINITY	47	100	95	355	866
flows	38	147	450	762	746
holidays	99	140	450	109	94
Traditional	71	272	122	203	959
-14	96	266	324	397	421
YOU	24	33	55	136	870
Seem	11	109	464	567	867
stateless	31	1	181	145	195
cudamat	7	51	345	169	730
Luminance	13	246	206	571	765
Describe	63	44	199	582	888
aList	74	195	239	255	577
YOu	47	0	392	91	338
stating	63	44	199	582	297
throwaway	65	174	181	145	195
subsampled	81	116	131	29	944
///	48	233	272	522	262
subsamples	81	190	258	400	675
colorbars	5	52	32	19	518
plt.scatter()	31	13	388	399	879
HAVE	30	212	55	136	965
cctools	55	176	330	499	315
np.shape	44	205	154	0	357
forloop	76	48	145	750	207
tables	71	265	303	706	457
dashdot	95	226	73	316	649
look_up_list	74	297	54	690	227
workers	29	218	183	445	803
shape-	44	227	228	0	357
revenue	79	78	173	101	955
')`)	86	287	449	36	906
hermite	60	98	458	742	738
reinstate	46	203	348	46	55
shape=	75	227	385	0	486
associations	2	49	456	405	713
complaint	12	152	301	699	120
Last	30	271	456	281	560
amended	57	235	490	567	81
dtyped	94	222	401	798	470
label-based	94	111	115	369	227
Air	84	7	2	694	580
Aim	30	225	5	444	114
dtypes	94	222	162	266	470
df_original	48	123	51	339	779
pd.read_excel()	52	171	86	638	561
entangled	76	26	65	697	730
Binaries	67	151	470	219	104
table2	48	123	486	339	637
table1	48	75	51	448	682
Links	57	235	342	450	371
shaped	34	77	251	73	943
array.tolist()	65	27	158	404	581
shapes	34	77	251	73	694
image.cmap	45	80	294	653	271
x**3	96	29	18	173	13
hypot	60	27	14	313	396
')``	94	287	449	48	160
your_array.shape	42	227	286	74	263
Conceptually	47	0	392	678	544
self._cachedRenderer	63	44	199	582	314
essential	57	235	463	37	371
pkg-config	67	151	327	232	334
Time=	21	160	274	127	655
Time1	95	204	66	198	687
Time2	48	281	66	339	687
unmaintained	7	224	63	2	730
Ahhh	24	200	493	504	991
row-1	68	260	431	234	945
infile	36	10	489	712	261
bicg	60	296	102	313	751
String	69	162	191	61	739
Randomized	77	168	186	705	646
parms	71	246	90	609	92
glibc	7	163	428	418	166
seller	79	78	450	101	955
-shape	44	205	251	5	357
Intersection	69	162	191	61	837
20140104	99	140	453	109	361
Timer	29	40	444	236	709
Times	45	230	448	767	909
4.10.4	91	57	167	499	230
Command	67	112	259	326	104
Param1	48	123	486	339	637
2009,200	54	69	119	158	126
Square	38	206	169	264	698
non-scalar	76	94	95	15	734
firing	29	187	188	149	2
125k	77	168	186	705	646
kind-of	88	59	147	697	31
Numba's	7	51	428	534	915
axes.py	37	250	475	205	173
dialog	29	187	128	764	2
df2.B	53	139	51	417	821
wanna	47	0	392	143	338
gamma	77	219	132	783	13
ndimage.find_objects	76	43	7	152	670
file2	36	10	489	712	261
file1	36	10	489	712	261
Enum	38	162	191	61	38
D_idx	44	30	4	74	598
x-value	81	288	266	588	884
Bokeh	59	23	90	51	710
042711_U.nc	36	37	222	384	942
pl.figure	46	203	348	123	55
data.min()	96	266	289	28	810
Attempted	63	174	199	582	888
file-	71	153	50	423	108
df.reindex	64	47	406	548	296
diameters	39	126	206	93	949
Lists	69	162	191	540	890
capacitance	20	93	231	428	935
prettier	88	257	61	334	695
Variable	69	162	191	61	837
analyze	71	246	126	203	765
sections	47	21	233	251	986
ax.twinx()	5	148	255	558	518
filer	81	229	457	306	338
Details	69	193	19	281	114
z.shape	68	227	154	545	357
filed	35	122	220	292	106
-wthread	40	141	281	76	632
junior	11	120	212	739	727
raising	63	37	301	618	888
df.columns.tolist()	64	47	74	683	73
consist	2	21	233	487	702
characteristic	20	214	132	147	4
file_	36	10	376	712	261
barring	18	120	114	739	67
List2	74	297	54	690	995
full-blown	62	23	61	458	612
VECTOR	14	86	280	431	238
16GB	84	127	2	159	359
consise	88	257	61	675	327
confusingly	12	59	147	145	908
highlight	59	52	433	32	177
x-ray	22	126	266	438	949
libblas.so.3	55	128	330	477	372
fread	71	296	336	312	631
]]]`	90	54	257	10	585
problem-	12	183	5	170	563
pl.scatter	60	256	177	742	397
Qt-console	40	57	167	368	732
1.9.0	91	7	417	587	230
99.29547499	54	50	368	331	449
my_ndarray	74	293	26	509	228
df.country	68	181	431	455	496
KeyErrors	50	37	301	567	888
self.ndim	63	174	117	211	314
dimensioning	50	59	301	618	888
GEXF	71	79	90	60	108
bug-fixes	35	122	156	9	376
figsize	46	284	255	577	430
cell-centered	22	36	25	122	488
muddled	50	59	60	144	907
Datasets	38	193	191	61	114
generates	57	235	491	174	59
blah2	53	139	42	417	775
Recipes	38	224	282	94	689
problems	50	152	301	618	120
.to_frame()	64	150	256	551	526
workon	40	112	276	57	128
array_size	44	205	370	196	192
helping	11	109	229	140	870
generated	2	215	328	98	187
probleme	47	59	392	630	31
python27\lib\	37	250	27	475	194
bcoz	47	174	222	665	262
pinpoint	50	59	301	144	360
QUOTE_MINIMAL	61	204	334	338	361
.dshwshr	24	109	394	140	870
q_date	48	281	68	339	779
vice	2	215	25	91	174
NOTE	47	235	342	347	560
scipy.stats.percentileofscore	60	27	14	313	709
narrative	18	225	490	567	81
intentional	12	59	147	504	120
once	2	0	392	167	338
hooks	93	187	104	537	591
resistance	50	170	206	167	949
EFFICIENT	30	48	55	136	965
011	54	181	419	730	361
480,640	44	205	251	196	357
screen	93	154	188	427	2
get_proj	31	40	444	236	406
loglog()	5	148	363	558	958
pydata	35	239	372	387	594
kurtosis	60	219	132	783	396
Object	3	162	191	61	890
~2000	21	190	234	474	42
Carsten	24	59	114	504	469
archlinux	67	151	167	499	732
20964	10	160	370	327	192
my_file.csv	36	10	222	712	261
prev	74	260	431	234	272
optimize.py	60	40	330	205	461
dramatically	10	272	118	44	576
data.txt	36	10	376	294	261
groups.mean()	43	95	115	551	227
octets	78	49	195	787	944
2015-07-05	54	50	368	429	428
re-sizing	59	154	284	245	479
special-case	76	94	14	306	439
refactored	35	122	138	9	376
py2app	67	151	174	368	104
pdf's	93	61	315	99	374
polling	29	246	206	167	769
scipy.signal.convolve2d	60	296	14	313	396
subsampling	81	147	275	566	603
stratify	79	228	487	480	675
someday	11	120	232	407	53
loffset	43	85	449	78	817
smaller	81	170	258	44	576
Brien	24	200	493	504	991
DTM	39	281	214	519	38
goodies	13	26	63	118	398
lightest	22	4	427	438	672
Brief	4	193	19	496	371
non-strict	34	94	147	257	694
longitude	39	73	279	766	573
ssno	53	123	256	197	82
usemask=True	42	27	334	15	793
bdf	45	36	334	36	906
developed	13	26	63	118	398
2PM	79	140	450	101	675
PyAudio	71	248	58	428	722
ca_map	22	77	0	88	943
man's	12	183	409	458	950
concisely	88	257	61	675	360
b.csv	36	10	50	539	511
datetime.datetime()	3	63	68	426	452
capital	61	58	443	86	517
Acrobat	93	61	315	99	374
multivariate	77	98	132	147	4
value_to_find	78	174	456	551	262
kdb+	43	265	375	364	631
Obviously	47	0	392	678	544
index-array	34	111	396	404	520
n.x	90	297	26	239	273
Definitions	76	21	275	169	783
win	84	78	2	167	955
shutil.py	37	250	27	475	194
barb	41	178	438	621	573
numerator	14	86	314	391	454
Parallelize	69	179	169	61	145
df.dot	44	227	74	551	486
Moments	38	206	132	722	71
unefficient	88	257	61	334	695
99th	81	159	266	104	176
headless	93	119	429	435	377
DF.loc	53	139	51	417	775
slightest	12	59	301	630	625
df.columns.values	64	47	406	217	526
simpliest	76	48	61	675	327
Binary	38	162	191	61	114
Zelazny7's	4	17	254	710	81
CO_Num	95	49	373	787	502
df.a.iloc	27	260	431	234	945
`""`	61	58	452	539	501
mpld3.show()	29	232	128	699	55
ml	77	168	186	705	646
Jacobian	60	98	458	279	438
mpl3d	31	23	495	199	177
consumption	10	127	355	159	359
playerID	95	181	42	250	497
2-step	47	48	145	306	360
non-inclusive	78	204	338	397	283
df.to_json()	36	10	489	24	975
aGrid	90	293	13	545	744
unequally	81	288	270	546	301
Lane	95	181	287	730	497
Land	38	271	159	519	38
equity	79	78	450	762	746
editable	61	61	50	571	54
%lprun	10	277	37	225	169
build_clib	55	112	276	57	137
detects	2	215	491	174	621
sh()	31	40	444	396	622
xvals	41	6	177	107	397
ALL	2	49	456	251	713
1460	68	205	370	196	357
anywhere	47	59	392	75	835
stabilizes	96	170	266	391	201
equate	85	98	38	279	809
endian	3	291	85	608	44
performed	76	215	328	169	187
p-1	96	201	356	173	62
Parts	38	162	191	61	38
US	99	268	318	686	687
22050	20	93	425	507	344
Step-by-step	78	263	342	522	338
pd.Grouper	64	287	449	48	48
overfitting	77	168	186	705	646
sir	24	33	229	140	870
vderivs	76	40	458	396	622
sip	67	151	317	368	591
Mondays	79	140	453	101	675
subdirectory	55	132	352	384	305
tamper	47	229	457	306	31
get_rgba_bitmap	31	203	348	577	444
six	47	57	167	251	732
100.000	21	190	258	557	42
dependent	12	21	416	251	702
.rank()	64	150	256	197	48
sig	96	219	177	396	454
left_on=	49	287	406	631	445
sid	79	144	487	787	719
instead	47	0	392	91	338
sin	96	29	426	560	13
sim	85	174	117	467	262
numpy.percentile	60	269	103	784	396
_does_	47	0	361	699	273
UK	95	268	487	322	675
p-s	60	98	472	70	738
demonstrates	57	235	463	37	766
counter-intuitive	88	152	147	284	695
abuse	88	152	5	145	695
binmax	41	6	297	171	810
X12	86	181	373	185	496
data-processing	13	26	126	203	765
12-bit	22	248	381	571	593
test_generate_correlation_map	4	202	490	534	783
Missing	69	162	191	530	837
f.apply	64	150	256	772	48
24787	90	95	272	239	199
honestly	50	59	114	419	907
pandas.tslib.Timestamp	53	63	423	426	390
goog.index	43	63	68	426	452
0.000000000000000000e	54	50	368	713	776
Hammer	39	149	279	199	586
polar()	31	13	388	199	627
0-indexed	78	263	338	616	77
13%	10	160	37	323	655
Geany	40	141	281	76	632
Z-values	72	165	15	235	570
knowledgable	11	120	212	144	727
133	54	3	101	187	158
132	54	3	298	318	158
iloc()	43	111	147	574	734
130	54	223	298	318	811
pulses	20	93	270	191	989
136	54	3	298	187	158
135	54	223	298	318	158
134	54	3	298	318	158
plot_dataframe	31	13	388	306	271
139	54	3	101	187	158
138	54	3	298	318	158
fromarray()	3	90	336	141	722
horizontally	59	52	25	122	884
longitudinal	39	52	279	766	884
healpy	22	248	7	199	722
tempfile	15	135	319	777	823
Howto	34	77	0	530	336
previously	50	264	292	210	747
scipy.sparse.linalg.spsolve	60	194	280	431	751
clusters	81	43	41	400	234
append_fields()	34	77	0	404	694
describe()	43	157	103	376	956
Datareader	79	78	450	762	746
re-enter	15	37	44	699	625
bernoulli	77	219	132	725	162
material	13	193	372	387	852
oranges	95	204	373	18	467
Cat	95	123	373	168	682
13s	10	202	37	323	876
ananconda	67	57	167	697	732
Can	57	0	143	37	451
Cam	59	23	495	199	177
beeing	29	215	128	764	2
freemat	14	59	314	504	469
Help	11	173	389	763	867
random_sample()	96	40	46	396	201
worlds	13	26	63	118	398
LinearSVC	77	168	186	705	646
.imag	90	297	13	617	744
.net	71	26	90	2	537
Restrict	47	21	275	91	338
fuzz	47	59	392	751	835
lorentzian	77	214	132	147	4
8*	96	266	31	695	236
8(	68	32	18	196	62
8)	75	223	385	196	357
8/	99	186	318	372	361
3.45	68	108	23	579	399
related	12	152	60	799	120
Next	47	0	392	678	544
88	54	3	298	318	158
89	54	3	298	318	158
interplay	12	152	138	552	606
82	54	223	298	318	811
relates	12	229	491	487	702
80	21	223	298	318	811
81	54	3	298	318	158
86	54	3	298	318	158
87	54	3	298	318	811
84	54	3	298	318	158
85	54	3	298	318	158
0.73517866	90	54	257	713	776
obvs	78	144	173	547	356
human-readable	61	153	50	423	108
frontier	39	43	235	93	102
geos	67	57	167	697	732
f2py	7	163	428	215	915
polylines	39	248	495	199	102
NavigationToolbar2TkAgg	93	1	104	537	728
date-like	99	63	68	426	452
behaviours	50	152	301	618	120
double-check	57	37	222	699	625
n-h	10	194	356	327	668
exporting	71	153	86	423	561
okey	12	232	5	144	53
plural	12	49	123	355	517
size()	43	157	103	683	956
vlen	34	153	336	404	306
8b	22	291	85	608	33
maintains	2	215	491	174	621
my_file	36	10	376	712	261
8d	86	5	443	211	898
8x	10	202	37	323	876
axes.clear()	31	203	348	123	55
8s	10	160	37	323	655
8p	54	223	298	200	252
obscure	88	152	147	334	695
get_data()	31	1	328	514	720
2+2j	96	29	18	173	62
100GB	21	127	355	159	359
o.O	24	200	493	504	469
latitudes	39	6	279	766	573
Successfully	67	112	44	499	315
8G	84	127	2	410	580
8[	3	18	141	682	178
birthday	99	140	373	109	687
8\	86	129	136	211	199
8]	90	54	257	10	585
UI	93	187	104	537	728
lti	3	174	117	157	314
tacked	2	265	75	706	356
plainly	12	170	409	144	908
22.7	54	108	300	797	399
intuitively	88	257	61	144	520
Accordingly	13	193	372	118	734
overdrawn	59	117	433	32	714
df2.iloc	90	95	51	239	227
DataFrame.columns	31	233	72	734	879
boolvec	42	293	95	509	228
df.to_excel()	43	185	86	24	561
North	39	73	279	322	586
AppData	55	132	330	477	568
circleMap	90	293	4	509	228
TheBlackCat	88	59	490	144	907
x2-x1	96	201	18	560	62
HOWTO	38	193	19	387	114
PMF	77	98	132	147	4
VIM	40	141	281	76	632
their	2	21	233	251	338
numpy.lib.stride_tricks	42	30	286	358	368
boil	57	235	463	37	781
']]`)	48	123	486	339	82
shell	40	141	281	76	632
Success	30	109	389	281	867
tuple	65	233	54	540	336
shelf	13	43	61	675	871
reversed	2	215	25	708	520
SSD	84	127	2	410	580
reflecting	81	215	328	546	59
interactively	93	154	188	427	203
july	35	122	156	109	376
reverses	2	111	396	566	520
picked	50	215	292	210	187
isolation	61	152	222	144	625
see	47	0	392	252	371
limiting	12	170	409	44	576
filehandles	84	127	355	159	359
chardet	52	37	222	699	315
occurences	78	49	131	27	944
80MB	21	127	355	159	359
bins=5	75	243	289	171	810
gzipped	71	153	446	423	306
blit	93	203	348	123	55
itemsize	3	291	141	608	44
11528	78	204	195	178	361
angle	39	149	438	298	116
rearranged	2	205	328	107	187
After	50	264	292	678	544
Coursera	38	224	282	94	689
P_rec	63	44	199	582	888
Stefano	4	17	342	710	552
rearranges	34	77	396	566	520
which	47	0	392	91	544
searchable	18	225	45	527	219
re-opening	61	37	60	764	364
PyFITS	34	77	0	404	694
clash	2	263	456	405	275
Simultaneous	38	179	282	722	145
stair	81	170	206	167	769
Games	95	138	373	185	340
histogram	81	214	297	171	4
class	31	1	329	514	720
Locb	74	100	239	586	456
Lock	7	51	345	445	803
autoscale_view	31	13	388	592	879
Pop	2	49	233	167	769
_in	2	229	457	306	563
Extras	55	128	488	741	423
inheritance	76	94	329	663	720
two-line	88	257	61	675	950
_id	48	123	163	339	682
Oops	24	200	493	504	991
Libertine	45	230	448	767	909
pandas.DataFrame.hist	31	13	444	592	709
chances	12	225	5	419	219
sceptical	11	120	114	35	727
big_array	75	227	228	0	357
hhmmss	99	281	66	58	687
darkest	22	4	427	438	198
it_IT.UTF-8	40	132	222	113	315
OpenBLAS	7	163	428	418	166
subtracting	81	116	275	588	603
eigenspace	34	77	280	431	485
.to_dict()	64	233	74	551	975
z-order	5	13	433	134	608
?...	47	0	392	143	835
surroundings	59	117	433	709	562
dayPricesDf.iloc	90	297	13	239	744
bogged	50	120	114	35	781
combo	47	232	457	167	338
piano	81	228	206	101	949
Legend	31	154	388	209	518
###	36	37	222	384	262
predeactivate	55	132	352	113	568
pl.colorbar	46	39	494	505	649
klmn1	48	144	486	276	559
watching	50	120	114	407	64
pypm	67	151	327	232	334
midnight	99	253	453	109	27
pypi	67	151	470	604	594
cov=True	60	124	334	324	201
subrecord	78	49	338	616	456
6}	54	204	287	730	361
pypy	7	51	428	2	915
queried	71	171	303	98	92
500,500	44	205	251	45	397
stitching	59	116	145	706	986
bisect	42	27	349	648	657
AWESOME	24	109	229	140	870
Beats	71	153	37	127	457
queries	71	171	303	128	457
fit()	77	124	186	324	646
Multi-dimensional	34	94	122	61	694
modulo	14	86	314	325	238
Tnx	24	33	229	667	870
Script	30	271	191	281	560
acquired	71	246	58	428	600
Monte-Carlo	76	42	48	195	416
module	15	135	44	777	873
myVar	27	260	95	355	866
Explicitly	47	0	14	15	709
geometrically	81	288	370	391	192
HTTP	71	246	90	609	600
zero-padded	99	140	453	86	221
acquires	13	246	58	609	600
readerId	48	144	182	547	637
out=array	68	54	257	545	744
Rescale	69	288	32	209	837
FancyArrowPatch	31	1	388	399	879
y-y0	96	201	18	173	62
rendition	88	152	138	334	908
cvxopt.matrix	3	220	137	663	235
data.data	27	260	431	509	228
counterexample	18	225	490	170	81
variability	81	170	409	44	576
exam	24	232	232	407	64
a.b	74	100	177	212	228
.replace()	43	157	163	589	448
NumPyPy	7	51	428	2	166
array_b	74	100	108	586	228
z_col	34	77	0	621	927
xup	74	40	444	396	622
np.linspace	75	243	289	425	810
webapp	13	26	90	609	537
leg.get_frame()	41	288	19	703	884
Server	84	171	473	128	88
a.x	27	174	177	157	622
succesful	50	264	292	251	564
AA.Axes	46	35	348	577	430
x-location	81	43	266	733	944
kwds	37	35	475	176	314
J.F.	4	121	264	710	552
RNG	29	218	183	725	803
a.T	44	30	137	74	263
utilising	76	23	138	118	398
RNR	30	144	419	467	637
code.I	57	235	495	51	177
Axis	5	162	191	209	837
ABCD	95	181	419	168	497
{3	90	54	287	730	585
x_b	96	201	370	391	192
x_n	41	201	370	560	391
x_j	85	195	370	107	192
chmod	55	132	352	113	798
walk	81	43	48	195	416
Finally	47	0	392	678	544
suboptimal	88	272	118	334	695
sequences	61	43	131	27	944
seperator	61	58	443	539	501
x_{	85	201	426	67	752
Preserve	2	215	237	174	621
i.e.	47	21	392	91	338
arrA	44	205	4	509	357
MYDATA.csv	36	10	376	712	971
Timestamp	99	63	68	426	452
charts	59	52	495	51	710
fprime	60	124	458	396	201
matrix_rank	60	194	102	704	751
Active	95	271	159	240	682
bewildering	50	264	114	35	469
2010-10-01	54	69	198	525	256
x1.shape	44	205	154	0	357
sensor_data	78	49	337	98	567
mark_inset	59	52	433	32	714
dictionary.values()	27	227	54	509	486
crappy	10	202	37	450	950
x_2	85	172	426	560	391
DataFrame.apply()	43	157	103	750	956
x_0	41	6	370	560	391
Nvidia	7	51	345	2	166
RdBu_r	22	4	294	653	488
pinv2	60	296	102	431	120
matshow()	31	13	294	653	627
present	2	215	328	355	702
CDF	77	214	132	147	4
abandoned	50	264	114	407	64
unlike	2	215	491	174	621
numpy.lib	15	135	319	777	823
outer_df.ix	53	231	287	211	497
RHEL	19	7	432	301	156
CDS	78	144	195	787	456
Rutger's	4	235	254	710	441
rename	43	47	75	405	923
T-1	85	172	481	67	211
fmt=	86	129	465	137	347
offending	57	37	222	699	625
{%	95	129	373	150	858
refs	11	170	389	44	576
DataFrame.lookup	42	27	72	750	439
surface's	39	149	29	93	116
FacetGrid.map	31	13	444	592	709
wind_dirs	90	195	13	255	744
bigint	14	291	162	349	470
spots_B	78	144	456	178	559
strucutre	59	52	233	621	986
barchart	59	14	495	621	710
enumeration	69	233	158	540	531
add_axes()	31	13	388	514	879
unity	96	214	297	391	4
non-matching	6	263	456	700	36
getp	31	203	388	577	879
.T()	42	220	14	514	709
incl	13	271	233	751	38
PERFECT	24	109	229	140	870
function's	2	40	444	396	709
Third	30	0	445	281	560
escape=False	45	157	334	24	439
matricies	34	292	64	348	218
CClass	63	44	460	172	787
interval_id	48	144	195	276	637
automation	13	26	126	609	765
dsize	34	40	284	245	479
student	79	228	487	480	285
pdf	93	61	315	99	374
Deleting	69	31	100	761	911
9:40	99	69	119	525	256
from_param	3	220	329	663	235
NpzFile	3	220	329	514	720
banded	77	42	280	431	485
item_list	74	233	54	551	779
unit=	86	274	68	679	390
MEMORY	71	272	122	127	863
firstly	47	116	337	708	59
12-Jun-13	54	54	300	338	139
realised	50	200	493	210	747
load	71	153	50	423	108
Never	24	200	493	504	747
self.axes.cla()	29	203	348	123	55
obtain	2	21	131	91	338
?????????	86	181	386	211	340
nanos	94	63	68	426	452
recollection	50	152	60	35	120
biologist	13	120	212	739	852
isinstance	3	233	10	772	172
rowvar=0	44	194	280	704	598
console	40	141	281	76	632
copyable	57	235	463	37	451
smith	95	181	373	686	517
attractive	13	26	138	118	398
26.1	78	204	373	185	517
self.tz	68	35	289	176	810
jython	7	51	345	2	730
IWWGDW	53	139	42	250	775
a.__iadd__	27	29	26	509	273
autoscaling	5	148	253	558	844
.And	78	281	338	339	262
out_index	90	297	143	509	835
denser	72	170	270	733	301
A_ij	85	194	4	5	192
getMaxDeflection	31	40	444	396	622
ax.set_axis_bgcolor	46	226	494	316	608
unique_x	74	100	108	586	228
animation.FuncAnimation	29	203	348	236	444
LinearOperator	60	292	102	431	751
Parameters	38	162	123	396	71
kde	72	14	297	171	4
scared	50	120	212	35	727
postion	39	288	438	200	116
Chiquita	95	268	373	686	517
iterrow	43	157	72	750	207
export	71	153	50	423	108
racking	50	120	114	35	64
float128	14	291	142	608	549
econometrics	13	26	126	118	765
Saullo	4	121	264	646	500
array_1	74	293	108	586	146
dfg.index	90	95	115	239	227
14th	78	140	338	616	456
array_2	74	293	108	586	577
Manipulation	69	162	191	61	145
total_length	14	174	314	391	603
customer_id	48	144	405	178	637
set_style	31	13	383	592	608
EOFError	63	37	199	582	136
dangling	2	263	181	618	625
pd.merge	49	47	406	631	445
Range	69	162	191	789	837
27.0	68	54	257	211	585
-9223372036854775808	6	68	201	130	910
27.5	54	108	274	579	399
pd.tseries.offsets.DateOffset	99	287	449	72	997
b*y	96	201	426	560	13
])")	90	297	13	509	744
missing_values=	6	68	12	85	910
toolchain	67	163	152	326	104
oversaw	24	200	493	504	991
universe	21	42	409	44	765
ndf	74	100	74	339	779
Zero	69	86	191	264	698
swear	50	264	292	210	747
customizing	5	23	32	97	771
nds	90	297	13	239	744
setup_plot	29	203	181	236	406
Hawks	54	186	300	797	139
overcomplicated	88	257	61	424	695
weighted	81	214	472	783	662
estimators	77	168	186	705	646
Col1	48	123	486	339	637
hitting	50	37	60	35	120
van	4	224	372	71	689
val	74	233	54	690	526
artifacts	39	117	231	709	562
Basemap	39	73	279	199	586
explict	65	27	14	589	439
*	47	174	392	751	835
add_newdocs.py	37	250	27	475	194
z-values	39	4	270	733	301
kidding	24	200	493	504	991
Thks	24	109	229	140	469
Train	48	168	186	705	646
hdfstore	71	211	446	702	457
var	15	174	330	751	568
function1	3	40	261	146	622
re-do	50	232	232	144	53
pyplot.text()	59	13	457	51	469
simplejson	15	135	65	735	957
unwrap	2	49	131	306	260
Kanade	38	206	282	722	353
kHz	20	93	425	507	344
_correct_	18	225	45	472	695
tasked	13	120	212	739	727
substraction	6	100	275	522	603
Following	4	17	254	478	552
can_pan()	31	13	334	269	879
squeeze	42	263	396	566	520
2.5s	81	160	270	323	655
iterates	2	116	491	174	207
made	50	264	292	210	747
\pip\	37	250	27	475	194
Projection	39	149	279	322	586
temp	2	174	74	573	211
whether	12	0	392	355	563
MEDIA_ROOT	55	132	352	150	568
2.5x	10	202	37	323	876
.iat	94	95	115	369	227
Depends	47	0	416	678	563
ruling	50	232	232	573	531
iterated	2	215	328	522	207
va=	46	226	494	316	348
Python34\lib\	37	250	27	314	889
DataFrame.set_index	43	265	72	771	956
firm	79	78	206	519	38
column.values	94	63	74	682	390
inadequate	12	183	5	458	563
Writer	36	271	136	36	262
calc_MI	57	235	342	450	451
loc=mean	68	266	289	617	427
Caffe	71	57	214	609	353
interchanged	41	288	25	200	884
id_vars	49	47	406	363	294
mya	75	227	385	509	486
trailing	61	263	452	539	501
mutual	79	270	472	762	662
Save	69	31	237	530	316
pandas.index.IndexEngine.get_loc	37	250	27	314	802
calibration	39	126	7	709	949
calcField	60	40	177	396	622
inset	5	154	32	19	518
Strides	34	188	251	61	694
annonate	59	117	433	32	198
Tick	69	162	191	209	837
clicks	29	154	188	427	2
diagnosis	79	239	487	27	1
muchness	10	272	118	334	863
uint8's	21	188	258	159	863
Spanish	61	120	443	86	852
categories	79	228	487	621	1
100m	81	73	279	766	573
im.size	68	174	117	751	252
SciPy	7	26	63	722	398
29.5	54	54	257	797	139
'""	54	50	300	797	139
29.1	54	204	23	338	361
29.0	14	291	85	608	44
Compressing	71	116	145	203	108
sns.distplot	46	35	383	176	314
Garbage	38	162	191	61	114
ranks	78	144	337	708	944
profit	79	78	173	167	955
SciPY	7	57	167	241	732
Dry_bulb_temperature	53	139	51	551	779
volumes	81	78	450	101	675
convolute	20	93	248	191	989
Andreas	4	121	264	71	552
0.000000	54	181	419	8	428
0.000001	96	266	18	28	236
USRECQ	48	281	148	178	637
marray	48	233	272	540	682
my_matrix	74	293	4	509	228
LHS	94	111	95	369	734
Rearrange	69	31	100	530	911
typeerror	47	94	147	145	908
xts	43	296	375	364	631
Minimization	38	206	169	722	71
eligible	18	15	232	355	922
Starting	69	31	342	478	927
aggregations	43	265	173	376	356
wizardry	11	173	143	424	53
ColC	53	139	51	417	775
superficially	76	26	65	118	621
QScintilla	93	151	210	516	104
Stackoverflow	18	225	45	527	509
lord	24	109	229	444	870
collate	2	116	145	706	986
digit	61	49	338	86	501
subwindow	39	126	328	98	949
Frankly	88	59	5	419	53
scipy.optimize.minimize	60	124	458	324	438
'	86	129	272	36	906
EPOCH	53	281	68	682	390
cuBLAS	7	51	345	2	166
experimentally	35	122	292	9	747
SourceForge	35	151	470	604	594
elevations	39	126	279	766	949
Reproducing	57	235	342	450	59
Presumably	47	0	392	678	544
internally	76	94	65	9	621
.slice	53	89	163	340	66
customizable	13	23	138	97	371
bugging	50	120	114	284	64
piling	50	116	145	706	986
memory-mapped	71	188	336	702	306
eqnarray	42	27	14	313	439
Edchum	24	109	394	140	870
df_train	53	139	51	417	199
prepending	2	132	222	384	531
useOffset=False	5	148	363	558	844
Sandy	84	127	2	410	580
POSIXct	71	63	162	426	260
tired	50	200	114	35	469
DOEClient	86	89	163	185	66
pulse	20	93	425	191	344
Duplicating	69	265	456	771	739
Matthew	4	121	264	102	500
second	78	21	338	616	456
%y-%m-%d	86	274	10	679	151
reliability_table_2.csv	15	132	44	384	305
Enthough	67	151	210	351	104
match()	76	265	375	574	631
contributed	11	173	143	407	285
fingers	18	232	232	407	53
invert_yaxis	11	59	143	144	469
${PYTHONPATH}	55	128	52	477	568
Wrong	63	44	199	582	837
1Min	99	287	449	48	817
neworder	75	148	289	46	810
contributes	79	82	283	480	176
:]))	90	32	13	545	744
specialist	11	120	212	739	727
Coderunner	40	57	167	697	321
hero	24	109	229	444	870
:])]	90	297	13	10	744
interrupting	29	187	128	764	954
np.load()	36	153	336	423	306
here	57	193	19	387	371
reported	35	122	60	252	120
lineSphericalDist	10	160	118	396	622
Precise	91	7	167	301	230
initial_value	63	131	199	582	341
nulls	6	68	456	130	910
reports	35	37	301	699	59
travis-ci	7	57	167	697	732
cut()	43	14	297	376	956
falsetru	24	121	394	646	500
status-events	74	233	54	690	526
Rico's	4	17	254	710	441
pairings	79	144	131	787	944
attractor	39	43	48	195	416
1's	78	100	131	64	943
magically	47	229	392	91	621
matlab's	60	296	375	364	631
ndimage.interpolation.zoom	72	165	15	235	570
datestring	43	63	68	426	452
brought	50	264	292	210	781
9x	10	202	37	323	876
unix	40	63	68	426	27
assert_frame_equal	6	157	12	683	866
Basic	38	162	191	61	114
9s	10	160	37	323	926
Messing	50	59	114	35	120
unit	81	21	275	91	603
hoping	11	48	114	35	907
9L	44	205	154	30	357
non-int	63	44	199	172	341
PyArray_ENABLEFLAGS	3	51	261	312	957
occupying	21	188	355	454	359
backing	76	188	447	570	450
rollapply	60	296	375	742	631
np.tile	42	30	286	74	146
until	50	37	128	167	769
2012-01-31	99	140	453	109	94
myLabel	78	100	108	586	283
brings	50	232	491	174	781
Q^N	12	42	275	588	863
9%	10	202	37	323	576
2**31	14	291	46	325	482
mdates.drange	14	37	301	391	968
Person	48	123	373	787	502
91	54	223	298	318	158
90	21	223	324	200	252
midst	13	246	126	203	765
hold	2	229	328	91	338
95	54	3	298	318	848
Upland	53	139	42	417	775
97	54	3	298	318	158
Sklearn	38	168	186	687	353
Text	31	1	388	281	879
true_divide	63	44	478	582	350
MaskedArrays	76	94	65	169	957
temperatures	81	147	206	101	675
EDT	99	186	318	34	789
concepts	13	120	212	118	219
100%	12	59	392	44	907
gnureadline	55	128	485	193	325
subplot2grid	5	284	255	577	518
Positive	95	298	419	168	497
SINGLE	61	49	50	539	965
smth	47	48	389	424	31
reviewing	18	120	393	35	564
set_position	5	148	30	558	518
df_percent.index	99	287	449	72	390
gargantuan	21	190	258	203	959
hog	21	195	355	159	863
hoc	76	272	126	306	612
syntactic	65	94	26	145	207
hoo	43	265	74	551	356
Pos	64	139	74	551	199
revisit	50	232	232	35	64
how	47	59	392	91	835
hot	22	4	294	438	672
T_4	48	144	419	787	502
hop	74	100	131	522	283
significance	12	214	132	783	606
anaconda\lib\	37	250	27	475	194
classify	77	168	186	705	646
A	47	21	131	5	192
dlopen()	55	132	44	384	315
cgohlke	4	121	264	646	500
beauty	88	59	134	552	908
np.str_	3	18	141	266	178
int()	63	44	199	688	341
reader.next()	36	174	222	751	262
Yields	30	271	342	347	560
read-write	71	218	183	359	450
Rob's	35	17	19	387	371
10ms	10	160	274	167	655
c-code	76	51	65	169	730
numpy.reshape()	42	30	396	0	263
np.round	27	29	10	772	838
alias	15	135	319	777	195
AIC	77	214	132	783	162
Sequences	69	162	191	61	739
recvd_dttm	48	281	486	339	779
kd-tree	72	165	15	152	570
ID_y	48	47	486	363	502
numpy.linalg.lstsq	60	124	102	324	438
feedback	11	173	389	763	867
xlim	5	284	253	558	339
point-in-polygon	12	43	235	152	102
Edits	4	17	254	710	560
pmap()	29	218	444	236	803
calculate_something	76	40	444	169	709
NumOfDaysSinceLastWin	78	204	456	355	361
fidelity	71	246	58	428	959
pd.crosstab	64	150	74	551	48
pd.date_range	99	287	449	48	997
_why_	24	59	143	144	835
draw_artist()	31	203	388	236	879
regress	77	256	177	467	597
aindices	74	195	108	586	577
distinguishing	12	117	433	32	563
answerers	18	225	5	419	219
Seth	24	121	394	646	500
Edit1	4	235	342	347	560
Edit3	57	235	342	450	81
Edit2	4	17	254	347	560
Sets	65	162	158	540	890
resample()	43	85	449	48	817
130,000	21	190	234	557	42
clobbering	29	232	181	573	195
pandas-generated	59	52	233	51	884
noticable	21	170	234	44	604
debug	57	37	222	144	625
Clustering	38	206	282	409	353
Plot	69	31	100	209	911
_think_	35	122	392	407	376
mdf	48	281	51	339	779
spider	40	141	281	76	632
contracting	44	293	4	509	228
mollview	5	13	294	199	627
we'd	47	0	392	143	338
plot3D	47	23	495	199	177
date_index	64	287	449	48	390
path_to_file	36	174	117	712	262
v0.13.1	63	44	199	582	888
whit	47	174	233	251	59
whis	5	159	297	104	810
trending	20	126	231	709	461
inplace	94	222	334	212	273
george	95	181	373	686	340
ofcourse	24	200	394	140	469
OpenBlas	7	163	428	418	166
df.iteritems()	65	233	158	750	526
injecting	76	94	181	257	195
surveys	79	228	487	480	675
-DNDEBUG	55	128	293	52	56
encountering	50	152	301	618	120
pd.options.display.max_rows	45	174	334	269	906
md5	65	291	158	735	959
ate	21	127	355	167	359
subtractions	94	86	275	706	734
piecemeal	71	153	183	359	457
ata	53	174	272	551	211
axes.prop_cycle	45	80	334	269	858
atm	88	59	114	334	695
on-disk	71	153	446	702	457
today's	99	63	68	426	27
resetting	43	116	75	573	531
FRA	99	140	453	198	687
image-like	81	52	270	546	301
unfilled	59	117	433	32	198
LU	60	194	280	431	485
AxesDivider	4	17	342	97	439
spinning	50	246	188	167	954
mingw	67	163	152	326	104
Voted	18	15	45	472	922
customization	31	23	138	97	710
Porting	13	26	65	2	730
Windows\System32	37	250	386	475	194
output_file.txt	36	49	50	712	108
bitten	50	264	60	35	625
similarly	47	21	233	91	338
JoeKington	4	121	264	646	500
defaulting	45	215	334	269	621
xin	81	21	270	733	301
densify	34	292	64	521	218
fancy-index	42	27	216	358	146
ranging	81	288	324	200	252
Floats	14	291	85	325	549
.unique	53	139	51	417	821
pandas.DataFrame.groupby()	43	157	103	683	956
9.7499	54	50	368	331	19
dawg	24	109	394	140	870
peril	18	232	232	567	81
itertuples()	65	27	158	750	207
myfile	36	10	376	712	261
acquisition	71	246	278	428	600
unintended	88	152	60	618	120
d.sales	90	297	13	332	744
numpy.savetxt()	52	153	336	423	306
FNAME3	44	205	251	196	357
plt.gca()	46	148	363	46	430
glass	93	154	188	427	796
Jianxun's	4	17	254	710	441
u'8	54	50	300	797	624
u'3	86	181	42	211	624
Regr_magic()	60	40	444	396	709
fasta	61	49	50	27	108
u'0	53	181	42	211	624
u'6	53	181	42	250	624
Spacing	59	52	284	213	479
x_vec	34	40	0	73	709
Series.str.extract	43	157	163	589	448
absorbed	50	117	235	93	81
season	79	228	487	101	675
Mixing	69	162	191	145	316
Exemple	57	235	342	450	950
2015-09-30	54	69	119	158	126
scipy.ndimage.measurements	42	48	14	313	439
shall	47	0	392	143	835
screwing	50	232	114	35	120
u'a	86	129	42	211	624
object	3	1	460	514	787
u'e	86	129	42	211	624
near-zero	78	86	216	616	283
data.dat	36	10	376	294	261
100.2	54	108	101	8	421
12ema	99	140	453	109	94
100.0	96	266	324	397	810
macbook	84	7	2	410	580
iterating	2	116	145	573	207
emailing	35	225	220	71	106
Deleted	4	200	490	567	81
FFTPACK	60	296	102	431	166
numpy.load	36	153	336	423	306
10-fold	10	183	37	44	990
luminance	22	4	7	594	672
cmin	5	284	253	757	339
Union	38	265	191	61	739
testArray	74	297	26	509	228
OBJECT	30	212	55	429	965
main()	15	40	444	236	406
np.arange()	42	27	81	648	244
sparse=False	52	256	74	341	443
zero323	18	121	490	646	81
3,000,000	21	190	234	557	655
690	37	250	27	475	194
busy	50	120	114	407	64
696	37	250	27	187	194
698	54	223	101	318	158
user-agent	30	271	50	751	262
touched	50	264	292	210	747
#DIV	6	68	12	85	910
pandas\io\	37	250	27	187	194
testdata	36	256	74	668	994
Account	48	123	159	339	653
.itemsize	3	291	141	266	969
pass-by-reference	76	94	65	145	730
Pycharm	40	141	281	76	632
cumsums	78	100	216	522	283
volatility	77	98	48	783	738
_Amod.pyd	55	128	293	52	56
.startswith	53	89	163	340	131
greens	22	4	427	438	198
textbooks	13	42	248	94	905
M.shape	44	297	4	617	744
Pascal's	78	43	239	616	456
boxcox	31	40	444	592	709
cvimage	36	90	246	141	942
pandas.series	43	265	74	426	3
release	35	122	156	292	376
transistors	13	246	48	195	765
10*	96	266	18	8	421
axis=-1	27	269	403	65	263
inner-most	76	263	118	573	207
unexpectedly	63	158	301	764	861
h5py.File	36	10	489	712	261
Overlaying	69	31	100	209	911
result	47	21	392	91	59
John	95	121	264	102	741
hammer	59	117	495	199	586
dataframe.hist()	71	153	50	423	108
sigma^2	96	219	132	391	201
wikipedia	77	193	372	387	371
stamps	99	147	450	198	27
ax.set_xticks()	5	148	363	558	844
wts	60	269	403	65	598
parallels	59	52	279	199	586
rolled	50	232	232	407	699
personalize	5	52	32	19	664
parallely	34	116	145	706	986
openning	36	37	222	699	942
wth	2	265	233	621	356
pandas.to_sql	71	171	473	128	88
topology	39	126	48	195	416
pair-wise	60	270	472	588	662
accident	50	200	60	210	699
sacrificing	76	272	118	44	990
2-dimension	34	77	0	73	694
triggers	29	37	491	174	886
asker	18	15	45	472	81
demanded	50	57	292	664	732
data.py	37	250	475	205	173
asked	18	225	490	170	81
Closer	12	59	114	284	469
and	47	21	392	91	338
stk_list	53	139	51	417	199
2nd	78	21	338	616	456
x.dropna()	64	150	10	772	838
Closed	30	271	373	686	340
blending	22	4	381	438	672
diff	27	157	103	784	603
Method	38	206	169	722	560
Columns	69	162	191	789	739
x^n	96	201	426	560	13
datetime.now()	99	281	68	72	390
40000	21	190	258	719	42
holdings	48	138	66	467	687
ColumnA	48	123	486	631	637
ColumnB	48	123	148	448	637
restarts	29	37	128	167	769
pro	84	7	2	410	321
multiarraymodule.c	55	128	330	205	461
matplotlib.collections.QuadMesh	31	13	388	399	879
200-300	21	190	234	557	326
pd.set_printoptions	91	122	156	587	230
Dijkstra's	77	43	356	327	905
ZERO	61	58	443	539	898
#ts	75	32	385	425	486
Canopy	40	141	210	351	104
Column1	48	123	486	547	637
Column3	48	144	195	547	637
Column2	48	123	486	547	637
Apple-supplied	67	151	210	351	104
.isnull()	53	260	418	233	131
reverted	91	122	292	587	230
#set	5	288	32	19	479
symbolically	77	98	38	279	809
flooding	12	43	235	709	562
SPYDER	84	119	432	241	179
lombscargle	20	93	425	336	344
remembering	47	0	392	91	439
LOC	95	228	335	168	653
LOG	95	298	419	467	497
LOD	14	86	314	391	935
played	50	264	393	75	564
equator	39	149	438	69	116
ans	74	174	177	509	228
LON	39	149	279	766	573
LOL	24	200	493	504	991
weirdness	14	86	314	325	120
characterize	77	98	231	783	738
LOW	53	139	51	448	821
LOT	21	272	355	444	863
init_guess	27	40	177	396	622
matplotlib.pyplot.savefig()	93	61	315	99	54
thingy	24	109	232	567	439
things	88	232	232	35	781
np.matrix	44	292	137	348	598
Image.open	36	90	246	141	942
Acttemplow	90	54	257	332	744
templates	71	56	90	571	537
Runs	10	160	274	323	655
Dirichlet	77	214	132	126	4
indentation	57	37	452	230	298
SparseEfficiencyWarning	44	292	64	348	218
numpy.ndarray.shape	34	77	0	73	694
LinearNDInterpolator	72	165	15	235	570
zquality	53	123	272	448	821
Contrary	47	215	222	252	59
ownership	3	220	447	570	450
templated	76	51	65	2	730
adopting	4	17	342	450	950
tune	77	229	409	306	394
subgroups	81	214	173	621	356
two-point	20	270	472	191	738
off-the-shelf	76	42	5	630	31
thing2	48	100	148	18	821
thing3	90	54	257	332	995
psuedocode	57	48	342	424	950
centos	84	7	432	301	321
urlparse	15	135	44	735	957
API's	35	26	138	9	398
gzip	71	153	336	423	306
echoes	61	37	222	699	625
pseudo-python	47	21	275	98	108
maxima	39	43	231	588	283
Non-ASCII	61	58	443	539	501
PySpark	43	265	375	364	439
distribute	67	57	167	697	732
plt.title()	29	203	128	123	55
xelatex	45	230	448	767	909
memoryview	3	67	261	312	235
0-255	22	4	201	438	672
enters	29	187	128	149	2
plt.yticks()	5	148	363	592	844
ease	13	26	126	458	606
mobility	81	126	206	621	949
df_mean	48	49	456	276	559
Rather	47	0	392	678	544
easy	88	257	61	675	31
string.format()	43	265	72	735	260
placeholders	61	49	456	355	517
east	39	149	438	298	10
mlabwrap	7	26	65	2	439
75th	81	159	266	104	459
set_major_formatter	5	148	363	558	958
x=7	78	204	266	391	361
dihedral	39	270	472	93	662
iso8601-formatted	78	281	456	198	687
np.unwrap	47	48	14	306	439
posed	18	225	45	472	81
=y	68	28	426	617	13
callbacks	29	187	104	149	282
x=2	41	288	29	69	116
~60	21	160	274	323	655
Animating	59	52	495	209	837
Addendum	4	235	342	450	552
poses	88	152	5	334	604
6:00	99	140	453	109	94
occurring	12	37	301	618	120
NumbaPro	7	51	345	2	730
zorder=2	46	39	73	316	649
deal-breaker	71	153	122	702	306
remind	18	232	232	472	53
misled	18	200	490	210	907
groundwater	39	126	214	93	949
Follow-up	4	17	254	710	81
Further	47	0	392	678	544
GridSizer	59	154	284	245	796
single-column	43	265	122	771	356
Warren	4	121	264	646	500
picklable	35	94	138	9	720
right	47	59	445	122	469
old	35	122	292	335	376
np.int	3	291	141	266	969
pd.TimeSeries	43	63	68	426	390
Application	40	187	259	537	402
ols	77	124	186	341	443
Suspect	47	0	60	697	439
mask.nonzero()	90	297	4	509	228
vfiax_monthly.open	90	297	18	617	744
animate	29	187	495	199	627
np.inf	6	68	12	130	910
math.sqrt	96	29	137	173	13
matplotlib.nxutils.points_inside_poly	72	27	14	313	570
speed-up	10	202	37	225	876
creative	88	257	61	675	695
.asc	71	153	214	423	108
tertiary	59	52	32	19	884
timestamps	99	63	68	426	452
x_idx	74	195	108	586	577
mpl_toolkits	55	132	352	151	372
func_ranges	74	195	216	255	577
oscillating	20	170	409	44	84
Crypto	30	174	274	751	262
24-hour	99	147	453	101	27
06776500	54	50	300	331	299
emits	29	246	58	428	600
First	47	0	392	678	544
terminators	61	58	443	539	501
o	86	129	73	36	906
Ffisegydd's	4	17	254	306	441
second-to-last	34	30	216	616	520
np.packbits	3	291	85	404	969
fwrap	7	51	65	2	730
lacked	61	49	456	355	260
eps	93	61	315	99	374
slightly	88	17	254	710	441
1322	78	21	456	355	283
consulting	50	193	393	75	564
statements	15	37	222	699	406
Calculate	69	31	100	264	911
last_price	53	281	74	551	211
Korean	61	49	50	60	108
StartDate	48	281	486	788	920
Hann	20	93	382	191	989
Hang	12	225	490	567	81
triplets	34	77	131	522	336
Hans	4	121	394	646	500
unquoted	61	58	443	539	501
center_of_mass	60	27	14	313	396
MatplotlibWidget	93	187	104	537	728
offer	11	173	389	630	31
understandably	88	257	61	334	695
forming	2	116	145	573	531
1:230	43	265	72	771	356
np.atleast_3d	42	30	286	74	263
pagerank	60	79	41	400	234
understandable	88	257	61	334	695
b*	96	29	18	173	62
reinventing	88	257	5	125	53
concatenates	34	30	396	706	520
Seeing	47	0	392	678	544
Requirement	67	112	70	57	334
Vips	22	248	381	571	722
b5	85	172	481	224	778
coeff	41	124	177	396	597
equalization	22	248	7	141	722
out-of-range	22	4	294	438	672
rerun	40	37	429	699	954
.__doc__	3	220	329	514	720
powershell	40	141	281	76	632
b1	85	172	481	224	778
tickmark	5	148	32	19	884
Jose	4	121	394	102	500
b2	85	172	481	224	778
a.base	3	220	361	138	235
qid	48	174	256	197	653
Six	67	57	167	664	732
Josh	4	121	264	646	500
pathnames	71	153	50	735	439
z-array	41	6	270	107	336
py3.4	91	57	167	587	230
py3.3	67	57	167	516	732
Sin	96	40	177	396	13
matplotlib.mlab.csv2rec	71	153	336	423	108
non-singleton	34	77	25	659	520
floor	14	29	314	325	238
1D_array	74	297	108	586	995
0.6778734	90	54	257	713	776
flood	81	147	206	167	949
ambitious	13	120	212	739	53
Wouter	4	121	264	646	500
becuase	61	37	147	355	451
smell	88	152	5	419	695
covariances	77	214	132	783	162
asterisk	65	40	14	15	709
tag_id	48	144	486	787	502
10378	53	139	74	551	779
other_df	64	139	51	551	779
rolling	81	85	173	784	817
ax.plot_surface()	72	165	15	592	627
hexagram	81	214	266	733	459
mpl_toolkits.mplot3d	15	135	319	777	823
serialized	71	153	183	359	457
Numerically	60	98	38	279	809
coastlines	39	73	279	322	586
laplace()	60	40	382	630	709
FileSize	53	139	42	250	775
time	10	147	392	167	769
push	2	232	232	335	781
*10000	86	139	42	755	775
y_predicted	34	21	233	621	694
ctypes.POINTER	3	227	361	157	498
serializer	3	51	65	312	439
aslo	47	174	392	170	274
slope	77	124	29	324	116
:/	55	132	330	50	568
newbie	11	120	212	739	727
:)	24	109	229	444	870
reviewers	18	15	45	472	922
Desktop	55	132	82	477	568
country	79	228	487	480	653
16:30	99	253	119	525	256
::	3	67	261	312	498
equalized	22	248	381	571	562
orientation=	46	226	494	505	649
ward	79	270	472	276	662
Metropolis	77	98	458	279	162
ware	88	48	134	630	31
Peel	24	121	264	646	500
Javascript	13	23	90	537	537
=i	90	195	4	255	744
ax.get_xticks()	5	148	363	46	844
accelerometers	39	43	235	400	949
:o	24	109	467	444	870
VAL	48	281	486	467	687
:d	86	174	287	479	262
low-quality-posts	55	128	52	477	372
:b	90	95	26	239	682
:|	24	200	493	39	991
orientations	39	126	41	400	234
VAR	77	168	186	341	443
fullest	76	51	65	169	612
my_index	43	233	158	551	172
:p	18	174	117	504	469
1700	21	223	234	557	692
:O	24	109	394	140	870
85.00	54	69	119	158	126
np.arrays	34	77	0	73	694
:D	24	109	229	444	870
1.10.2	91	7	417	587	230
1.10.0	91	122	156	587	230
1.10.1	91	7	417	13	230
:\	37	250	386	475	194
:]	90	297	13	239	744
4.3.2	67	57	167	664	732
4.3.3	67	57	167	499	732
4.3.1	84	7	417	301	321
:P	18	200	493	504	469
Kevin	4	121	264	646	500
np.Inf	6	68	12	130	910
GUI's	29	187	104	537	728
findings	11	173	143	567	81
insignificant	10	272	24	225	141
prediction	77	168	186	705	646
Label	95	138	159	209	837
candlestick	59	14	383	51	710
missing_vals	48	123	486	339	637
Nodes	39	79	41	400	234
tex.cache	55	132	352	113	568
ba	90	297	4	211	821
0.45	96	266	324	695	421
DateLocator	5	148	363	558	844
vector1	44	205	251	196	879
m*n	44	194	356	327	668
axes	5	148	32	19	518
rolling_max_dd	10	202	88	323	876
8736	79	140	453	198	361
falling	2	232	235	91	769
m*x	41	201	426	560	13
file_path	36	10	376	712	971
CVXOPT	7	51	102	9	957
bi	85	172	177	107	778
22.06	54	54	101	332	139
splice	34	49	145	706	986
alone	47	229	392	91	338
along	2	21	25	616	520
NOV	86	281	68	339	199
tickmarks	5	148	32	19	884
Computational	13	224	372	527	509
day-of-week	69	265	450	789	739
.mul	64	150	256	551	48
vectors	34	77	0	88	694
h5dump	71	153	50	423	108
filepath_or_buffer	36	10	136	712	314
Travis	67	151	351	71	594
loop-based	88	17	61	630	667
GIFs	93	61	495	51	54
np.triu_indices	42	293	286	358	146
SWIG	7	67	320	312	498
v0.8.0	35	122	156	9	376
Rome	99	268	318	686	27
Angstrom	84	230	448	767	909
NUMPY	30	162	191	61	965
src=	36	90	246	150	942
8192	21	205	46	196	655
one-line	88	257	61	675	31
dmvianna	4	121	199	252	888
convert_to_r_dataframe	15	63	460	735	787
np.polyfit	77	124	177	324	597
pyzmq	67	57	90	499	732
loving	11	120	212	739	727
sort_idx	90	293	4	509	146
subfeature2	48	123	486	168	497
validity	12	183	134	552	563
appendix	93	61	315	99	54
+308	14	86	46	325	482
mahotas	22	248	381	141	722
Retain	69	162	191	281	837
series.py	37	250	475	314	173
Constraints	69	162	191	61	739
anything	47	59	392	630	835
temp_array	74	297	4	509	228
exaggerated	57	170	409	458	950
printing	2	37	222	699	59
Monkey	95	271	373	686	682
START_DATE	53	281	51	682	199
on_clicked	29	187	444	236	282
BAD	30	212	55	136	965
stereographic	39	149	279	298	586
Objective	30	49	342	98	560
offense	18	225	45	419	53
BAM	78	49	131	27	944
evidently	47	59	292	210	908
pre-process	71	153	50	306	108
pd.get_dummies()	88	48	61	630	31
haClose0	86	129	256	36	906
divided	81	21	275	391	603
multi-columns	43	265	75	771	356
astype	3	18	141	266	470
df1.reindex	64	287	406	551	48
orginal	2	264	328	450	29
divider	5	148	32	19	518
divides	81	21	275	174	603
remap	2	229	457	335	338
explorer	40	141	281	76	632
np.ceil	75	29	385	28	810
nnls	60	42	102	660	751
row2	90	273	129	239	69
explored	50	264	110	75	564
SGDClassifier	77	168	186	705	646
such	47	21	392	91	338
suck	88	255	114	35	30
\pandas\io\	37	250	27	314	889
Naming	69	162	191	61	739
predictors	77	168	186	341	443
stress	12	232	235	203	563
varieties	13	26	233	251	713
four	78	21	233	251	326
circuiting	88	272	5	419	990
excelfile	33	10	165	638	275
searchsorted	42	27	349	358	657
darkened	39	117	433	32	198
divide=	45	129	334	85	350
int64	3	291	141	266	470
www-data	40	119	429	384	377
Resample	69	147	100	530	817
joblib	76	218	345	445	803
ssh	40	119	429	607	377
unsolicited	18	225	490	170	219
Barnes	4	121	264	646	500
ttk	15	176	44	289	823
course	47	0	392	630	338
width=1	46	39	73	316	649
numpy.sort	42	27	349	358	640
Numpy	38	179	169	61	145
ttf	55	132	352	775	798
f_prog	90	54	257	10	585
Widget	93	154	104	149	728
derive	81	229	472	783	738
thumb	12	152	134	552	219
itertools.repeat	74	293	54	690	228
1x20	34	77	0	88	943
decreases	81	170	409	44	576
939	86	129	117	211	66
entitlement	71	57	429	697	92
decreased	10	170	284	44	576
931	54	54	257	338	361
930	54	223	101	21	361
937	36	129	117	751	262
instantly	29	218	128	764	954
csplines	59	117	433	32	198
pd.pivot_table	64	47	406	631	294
RidgeCV	12	183	186	170	646
BASE	30	271	337	429	82
compelled	18	15	45	472	922
subscribers	74	233	54	448	682
width*height	75	205	385	196	357
1.000	54	223	324	8	421
servers	84	119	2	609	377
maintaining	2	116	145	573	531
Executed	40	112	222	57	315
-MichaelAye	24	200	493	504	991
full_code	53	139	51	631	82
win32	19	7	417	241	644
python-pandas	67	151	327	232	334
scipy.spatial.ConvexHull	72	165	15	152	570
altinstall	67	57	167	499	791
%3	75	297	385	509	486
16-byte	14	291	142	325	549
primarily	13	26	134	118	908
csv.DictReader	36	10	489	712	261
np.argsort()	43	27	349	210	640
DataFrame.to_csv()	43	265	72	24	793
.fonts	55	132	352	775	798
predefined	2	21	233	91	702
two-fold	88	17	61	630	950
blt	67	112	276	57	128
Welcome	18	225	45	527	509
Leopard	19	7	306	301	232
melt()	43	47	72	683	73
multiprocessing.Process	29	218	183	359	803
CheckButtons	29	154	104	537	728
mpl_toolkits.natgrid	72	57	167	499	570
._collapse	44	194	137	704	598
rnd_truck	90	297	13	239	744
formula	77	98	472	783	738
.tofile	36	227	141	266	969
xlim=	46	284	253	46	810
folowing	57	235	342	450	59
scipy.optimize.curve_fit	77	124	458	324	438
dask.dataframe	76	265	446	784	457
Traceback	63	41	421	582	136
2007-11-01	53	95	51	339	779
quite	88	59	114	334	604
interoperate	76	51	65	2	730
besides	47	0	392	91	31
Correlation	38	270	472	264	698
quits	40	187	128	764	954
unnamed	43	265	75	405	356
remainder	78	263	338	391	238
training	77	168	186	705	646
dunno	47	59	493	504	469
pool.map	29	40	444	359	803
F_cont	78	100	216	522	944
programming	13	120	212	739	727
xlims	59	154	284	245	479
punt	12	59	147	144	908
separator	52	58	452	539	501
massive	10	272	118	44	863
vtk_to_numpy	60	220	0	404	709
routes	39	43	235	400	234
timelines	69	31	233	209	911
matfile	36	233	74	551	975
__not__	31	152	147	145	908
jumbled	59	52	32	32	714
np.lexsort	42	27	286	358	595
.format()	61	58	452	589	448
file's	71	153	50	423	854
.66	54	223	324	200	421
clause	65	171	182	343	625
ATM	94	222	446	292	160
popSize	75	243	385	425	486
reopen	18	15	45	472	922
computing	81	270	275	203	738
identically-labeled	63	44	149	582	183
spanish	61	58	443	539	501
2880	21	147	453	198	326
structured	34	77	122	404	694
2014-07-16	54	54	257	332	126
draft	57	235	342	450	950
realization	81	214	132	783	162
structures	76	94	122	702	457
userIDs	79	228	487	27	944
buffering	29	218	118	445	863
Patrick	24	121	264	646	500
proving	50	120	114	284	695
artifact	12	152	301	618	120
ridiculous	88	257	61	334	695
Install	67	151	210	351	104
rot90	60	30	396	298	368
-sf	55	112	276	57	128
distill	18	225	45	472	81
numpy.column_stack	42	30	286	74	595
Xtest	74	174	74	509	228
Aspect	95	52	284	209	479
recieved	50	264	292	699	59
resamples	81	147	450	101	817
fullname	36	174	489	690	314
linalg.py	37	250	27	314	173
10-12	21	160	234	557	326
sam	95	123	487	480	682
10-15	21	160	234	167	326
pandas.tseries.offsets	15	63	68	426	873
demodulation	20	93	425	191	344
Submit	30	271	282	102	38
sad	18	120	114	407	53
TimeStart	48	144	148	87	637
woah	24	109	229	444	870
say	47	21	392	91	338
DateDpt	48	144	486	787	637
pconv	90	297	4	617	744
sas	71	153	50	423	561
sklearn.svm.SVC	60	296	102	742	888
DF's	48	281	486	706	502
y_bytearray	96	201	426	617	945
sat	95	140	373	185	687
intersect1d	42	27	14	313	546
[[8	54	54	257	338	995
list-of-lists	65	233	158	540	526
unsuitable	12	152	147	91	621
aside	47	0	392	437	908
#6	78	204	370	338	192
note	47	0	134	252	908
numpy.genfromtext	71	153	336	423	260
csr_matrix	34	292	64	348	218
Important	30	229	134	458	114
[[(	90	54	287	481	585
RGBA	22	4	381	438	672
destroy	29	187	128	570	450
handing	47	0	60	573	260
46.7	54	54	203	713	251
[[[	90	54	287	10	585
angles=	41	149	438	316	397
knew	24	200	493	210	747
numpy.reshape	42	30	396	74	263
plt.grid	46	203	348	46	430
now-deleted	4	121	254	710	500
remarks	4	225	254	170	219
pages	13	193	372	387	704
peice	57	37	222	699	59
SomeColName	53	95	272	239	199
Jackknife	77	183	409	783	162
sale	79	78	487	109	955
defeating	76	188	447	404	450
rewiring	81	43	41	400	234
testcase	4	17	382	534	783
SOLVED	30	200	55	567	114
30,000	21	190	234	557	42
salt	79	228	487	480	107
accented	61	230	443	767	501
pserve	29	218	128	764	954
numpy.mgrid	42	30	286	358	368
datetime	43	63	68	426	452
4GB	84	127	355	159	359
figure.py	37	250	475	314	173
slot	2	147	206	167	769
Multivariate	38	206	132	147	71
slow	10	272	118	334	863
virtualenvs	67	151	210	351	137
mydata	48	281	74	668	211
%debug	40	277	281	76	169
multiply()	60	194	137	431	598
np.convolve()	60	194	280	431	598
PolarAxes	5	13	438	298	879
tolerance	14	170	31	588	236
uppermost	2	215	328	405	187
copy-pasteable	57	239	463	37	766
d.flat	44	293	26	509	228
ARCHFLAGS	40	57	429	335	315
sum_j	85	195	4	617	192
dissimilar	79	43	131	574	944
digitize	42	27	297	171	859
embeds	93	187	104	537	728
ctypedef	3	67	261	146	498
streak	78	170	266	391	283
outlet	11	170	232	588	769
keys=	64	287	406	631	294
embedd	18	225	5	51	54
prime	10	42	258	327	238
artist	31	1	388	399	879
raveling	34	77	396	566	694
svdsolve	15	174	117	777	823
borrow	76	17	382	478	439
absurdly	88	59	258	334	604
end_time	99	140	420	788	687
zip_code	79	49	456	787	502
where	47	21	392	91	702
libpng12-dev	67	112	327	232	334
elemets	34	100	275	588	283
10100.0000	30	50	368	429	428
#i	78	49	337	522	603
linalg.solve	60	194	102	431	751
top-level	15	135	181	777	873
no-one	18	225	220	472	53
Ordinary	77	206	169	722	905
Followup	4	17	254	710	81
pm	99	253	453	525	256
jumped	50	200	493	504	991
GDB	40	141	128	764	954
x2=	41	266	289	200	810
python3-tk	67	151	327	232	334
fig.axes	5	148	255	577	430
jobs	79	218	183	445	803
non-numpy	65	94	158	540	612
suppresses	45	152	222	618	913
gratefully	11	173	389	763	867
10.2	54	108	23	579	322
spare	11	272	232	144	863
spark	71	171	303	60	457
suppressed	35	37	60	764	625
Guessing	57	37	301	618	451
figure.facecolor	45	80	388	134	608
UserWarning	63	176	135	654	372
laplace	60	93	382	191	396
10.9	19	7	306	301	232
parsers.pyc	37	250	27	475	194
paramter	31	13	294	592	608
cat3	95	123	335	168	497
setters	31	1	388	663	720
work.stock	27	260	431	234	945
PRN	95	129	117	36	858
x_max	41	35	289	282	810
.value_counts()	64	150	256	197	48
multiplier	14	86	314	86	238
coma	61	65	162	539	260
rsparid	61	49	456	405	356
Wordpress	93	61	90	769	54
single-version-externally-managed	55	128	485	193	325
crew	13	78	232	407	604
boat	61	58	443	32	517
cities	79	73	487	480	675
stretch	59	288	284	245	479
tranpose	34	48	14	566	520
15ms	10	160	37	323	655
locally	40	119	429	697	377
reduceByKey	27	174	10	772	838
DIM1	3	67	261	157	498
capind	85	6	370	107	778
reflective	20	183	409	147	563
np.nan_to_num()	6	68	12	130	910
np.nextafter	14	86	46	325	549
Identity	85	194	275	5	192
Whenever	47	0	392	678	544
i+10	74	297	4	509	146
grayscale	22	4	381	438	672
movies	79	228	487	480	285
observe	12	37	301	44	120
Graphics	38	224	259	110	402
spillover	81	288	266	391	603
regimes	81	183	231	706	986
Suggestions	11	173	389	763	392
new_x	41	293	289	282	397
new_y	41	6	289	282	397
invoking	29	215	128	699	531
735881.0	41	35	289	176	810
new_a	90	297	13	509	228
method()	65	27	14	313	709
mesh.x	27	260	431	509	228
fork()	29	218	447	570	803
glanced	50	264	114	35	564
blas	7	163	428	418	166
canon	71	246	58	428	593
DIA	99	292	64	348	218
Looking	47	193	19	678	544
blah	86	174	117	185	281
regularity	81	147	270	733	301
DIY	88	257	61	675	612
Daan	24	109	394	140	870
numpy.count_nonzero	27	269	14	313	244
Anzel	24	109	394	140	870
Towards	81	21	275	167	338
multi-page	93	61	315	99	374
scientifically	81	183	409	391	84
helpfully	59	288	25	122	884
ydiff	90	297	13	617	744
freq=None	53	139	42	682	199
chained-indexing	94	111	147	369	273
underestimate	10	170	409	44	576
44100	21	160	58	428	949
_at	47	37	292	167	59
VIPS	13	120	212	35	765
matrix_multiply	44	30	137	74	598
reverts	43	63	68	426	452
births	79	228	487	27	955
timepoint	81	147	206	745	949
_data	3	1	460	172	787
periods=4	99	287	119	679	997
_date	53	281	51	551	779
Says	15	135	460	735	787
nzEntries	75	293	4	509	486
data.frames	69	265	375	574	739
216	21	3	357	318	862
217	95	3	117	187	262
214	54	3	101	338	361
215	54	3	101	797	361
212	46	3	331	297	862
213	54	223	298	318	158
210	54	3	298	318	158
211	46	35	331	577	430
pyh5	13	26	138	118	398
modifiable	88	94	181	145	195
218	54	108	23	579	322
219	54	3	101	187	158
gdb	40	141	429	288	625
scrape	71	239	303	60	92
np.allclose()	60	296	95	534	783
lib2	40	57	292	664	954
gdk	45	80	315	435	591
Chaudhary	4	121	264	710	500
deceiving	88	59	147	334	695
\infty	96	288	289	200	810
fig.text	31	203	489	236	55
1.40309E-06	54	50	300	331	299
instrument	79	246	206	428	949
273.15	41	6	289	200	945
actors	79	78	487	480	959
relavent	57	37	222	699	835
LOWESS	77	98	382	147	4
libc	7	51	261	215	915
Tmax	99	140	453	198	687
text.usetex	45	80	448	767	909
unedited	35	122	220	292	376
backend_qt4agg.py	15	132	181	335	315
Simplifying	47	235	342	450	59
nocue	78	43	266	391	517
pandas.read_clipboard()	36	37	74	699	975
libs	67	151	152	697	732
219812	44	205	154	196	357
mydict	65	233	54	690	526
vague	18	225	490	419	81
correlated	81	270	472	783	662
xCoo	34	77	131	566	694
symbols_list	48	281	486	339	779
stranger	50	37	301	699	625
1e-20	14	86	314	391	84
event-loop	29	187	128	764	2
discarded	2	215	328	98	187
Doesnt	47	37	301	699	888
.vimrc	55	132	352	384	568
colon	61	111	452	230	298
stationary	20	93	53	195	949
;p	15	135	250	103	630
no-use-wheel	67	112	327	232	334
;b	75	227	385	0	486
;d	57	174	222	751	906
df.apply	64	150	10	772	838
pyplot.contour	39	149	29	199	116
MONTH	95	298	66	168	653
;o	75	174	117	751	486
IdentityTransform	15	135	319	777	873
whould	24	200	389	143	818
X.T	44	194	280	704	598
noob	11	120	212	739	727
set_xticks()	5	148	363	558	844
noon	99	140	453	109	955
bitshift	76	272	118	334	863
ddt	90	54	13	10	744
X.A	44	227	251	0	969
def()	29	40	444	699	709
deallocation	3	188	447	570	450
exit	29	176	397	764	954
;D	30	212	375	364	631
PREV_TIME	68	196	257	338	361
nanmax	6	269	12	53	244
BufferRegion	31	1	388	399	444
avgs	78	100	266	586	283
scientific	13	26	63	118	398
power	20	93	425	191	238
Versions	55	128	488	741	423
;;	54	108	300	797	139
X.ravel()	44	35	154	176	397
pre-sort	2	116	145	522	986
msys	7	163	167	499	732
;)	18	225	232	444	469
;(	24	200	493	567	469
stone	13	120	212	407	852
NumPy	76	51	65	2	730
favorite	13	26	134	306	237
hierarchal	13	265	126	771	356
tumor	79	49	233	251	944
stipulations	47	229	32	546	884
dam	39	126	206	195	949
neighbor	72	43	15	152	570
Bus	63	37	301	582	625
unpacks	2	215	491	174	336
non-transparent	59	117	433	32	198
dependancy	7	51	65	697	730
*df	53	139	256	417	775
accumulates	10	160	491	167	576
-size	68	205	257	751	192
dict_keys	3	18	460	172	787
.........	99	186	318	155	199
tz_convert	94	63	68	426	452
wade	57	272	463	37	169
Increasing	81	170	409	44	576
set_x	31	1	388	399	879
monotone	77	214	132	147	4
Collection	31	1	440	399	879
plotted	59	52	433	32	177
today_date	53	139	51	682	199
broadcast_arrays	42	30	286	74	368
futile	50	264	393	75	564
italic	61	230	448	767	909
GridCode	79	144	487	276	653
ds1	74	192	108	586	681
typecasting	3	18	162	618	470
newwords	48	265	158	706	502
to_rgba	63	44	199	559	341
complete	57	235	463	37	451
furthest	81	170	266	104	116
ctrl-c	29	187	128	764	954
random.random()	96	243	46	725	484
event.y	46	35	289	236	282
event.x	41	149	279	236	282
Reshaping	69	31	100	530	911
Small	30	162	191	127	560
technologies	13	26	126	118	765
viewport	5	154	284	245	479
darken	22	4	433	438	198
onepoint	63	174	444	185	406
ctrl-C	40	141	429	764	954
set_2	65	233	158	540	1
somearray	42	293	26	509	228
set_*	31	1	388	399	879
18:36	54	186	119	158	126
dependents	12	100	456	355	563
advantage	76	272	134	552	990
categorial	94	265	162	341	443
eigenvector	85	194	280	431	485
darker	22	4	427	438	198
ExpTime1.3	53	95	335	239	779
linear-time	76	272	356	327	668
uid	48	47	486	197	653
Iterating	69	31	100	530	911
exhausted	50	120	393	573	863
collections.py	37	250	475	205	173
accents	61	58	443	539	501
awry	50	37	301	284	781
*sh	63	44	54	690	311
uin	41	205	251	196	357
How	47	48	237	678	835
Hot	38	271	282	519	353
Criterion	48	138	159	276	653
x_np	44	227	385	0	357
clauses	65	94	61	574	207
HoG	34	248	381	571	168
memory-wise	10	257	61	327	612
mode.chained_assignment	45	129	334	85	350
Periods	99	63	68	426	452
Swig	7	51	261	312	730
reverse-engineer	47	59	392	144	907
graduate	13	120	212	118	852
1111	54	204	298	338	361
1110	54	3	298	187	158
unfiltered	20	93	425	507	975
view's	2	215	328	573	187
Wide	69	162	191	789	739
Alex	4	121	264	646	500
\xb0	52	5	443	563	209
indice_90_percent	48	95	486	339	779
biogo	35	193	372	9	398
=(	75	35	385	425	486
Practical	38	224	282	722	689
isinf	3	40	14	15	341
unbound	63	44	444	15	444
Libell	53	18	42	682	199
PyCon	4	224	372	407	552
Pablo's	4	121	254	710	441
acids	79	228	487	27	1
hello	86	99	373	185	262
Qunused-arguments	55	112	276	57	128
Street	95	181	159	686	497
findfont	55	230	135	654	372
2015-12-02	53	69	119	155	199
string.py	15	132	352	384	305
splicing	34	116	145	566	694
B=1	78	144	195	178	637
consider	47	0	392	630	439
dict()	65	233	158	540	526
python3.1	67	112	167	499	732
numpy.test()	67	112	184	394	630
trigonometric	60	98	458	279	809
Unable	63	176	397	582	136
PyObjC	67	151	167	368	732
interconnected	59	52	233	51	714
gdbm	50	57	44	699	59
hunting	50	232	232	35	53
prettytable	71	153	86	423	561
hasattr	27	233	334	772	172
NCAR	13	224	63	97	689
smile	18	200	490	567	562
128x128	22	126	381	45	943
a.append	75	227	54	690	486
serialise	71	153	122	423	260
A*v	85	194	280	5	598
MultipleLocator	5	148	217	558	844
specialised	76	51	65	169	730
1,500	54	223	234	155	692
TLabels	74	100	108	586	228
tax_id	61	18	443	539	199
cblas	7	163	428	636	166
picloud	7	26	183	359	803
laying	11	120	114	495	727
numpy.unpackbits	42	291	14	15	969
1024,102	44	205	385	196	357
adjust	5	229	284	245	479
pygal	93	57	44	97	537
display.width	45	80	334	269	413
Must	63	44	199	143	888
105x105	22	126	239	442	672
np.load	36	10	336	712	306
Recursion	38	206	191	61	145
chocking	50	37	301	699	907
odd-length	88	109	229	444	264
32GB	84	127	355	159	359
markets	79	78	450	762	746
size=None	96	266	324	695	427
startdate	48	281	68	788	687
per-pixel	77	42	48	195	765
centers	81	270	266	733	662
reshape2	43	296	375	364	631
Abuse	30	157	456	276	956
succinct	88	257	61	675	327
Y.T	44	194	137	704	598
tslib	15	135	44	205	823
matplotlib.dates.num2date	43	63	68	426	390
method	47	48	14	630	709
revealing	47	225	5	444	219
cubehelix	22	4	294	653	488
org-mode	93	37	301	51	54
2760	44	205	154	196	357
Frameworks	55	128	488	741	423
sklearn.ensemble	15	135	319	777	823
concluding	2	215	60	335	364
ascending	78	49	337	708	640
245	54	3	101	332	158
reshaped	34	77	396	73	520
introductory	13	193	372	387	704
re-invent	13	26	5	125	53
brutal	50	264	114	618	531
nlines	75	174	117	425	486
reshapes	34	30	396	566	520
infrequently	6	263	456	167	769
pstricks	93	230	90	97	439
social	13	246	41	400	852
would've	50	264	292	210	747
ginput	29	187	188	149	282
day's	99	147	450	101	955
via	2	215	457	335	338
shorthand	43	111	375	675	327
sem()	60	219	403	270	635
tokenizer	61	58	452	539	501
obviate	76	232	232	35	360
integrator	60	98	458	279	438
lsoda	45	80	102	279	438
np.intersect1d	27	260	431	358	244
vim	40	141	281	76	632
tokenized	79	49	131	27	1
vis	13	135	44	102	852
np.logical_or	27	260	431	18	945
viz	2	21	233	19	884
shape_id	74	195	4	332	995
decrement	29	188	447	573	769
select	2	229	291	522	36
catch-all	3	94	147	514	890
cx_Freeze	67	151	174	604	104
objectives	76	48	233	170	360
Step	69	31	237	281	560
rdenes	4	200	490	504	991
pandaic	88	257	61	675	695
.dropna()	64	150	418	548	131
emission	20	246	206	428	949
n_par	21	160	258	557	655
typemaps	3	67	320	312	498
sens	88	59	147	212	273
np.where()	42	27	95	358	244
list-like	65	94	123	540	890
DataFrame.query()	35	122	156	9	376
clutter	59	232	5	618	714
male	95	228	218	647	653
xvalues	75	243	289	690	810
to_char	99	281	335	250	687
CLOB	71	171	473	128	88
x's	81	6	131	733	336
latin-1	52	5	443	563	209
tabular	71	153	122	702	457
unzip	67	151	470	604	854
12000	21	223	234	200	252
3065	75	174	117	751	486
NP.array	75	227	385	509	486
1.csv	36	10	376	712	261
tmp_file	40	141	281	764	632
mu+sd	41	256	335	668	994
path.py	35	57	167	499	732
MinGW\bin\	37	250	386	475	194
functioning	57	235	342	450	59
CUDA	7	51	428	412	166
freshly	84	119	2	664	321
bit	88	59	114	35	695
-215	68	176	397	21	773
arrowprops	5	226	30	134	608
plant	81	228	132	783	675
plans	35	26	138	9	398
\beta	61	230	448	86	909
plane	39	149	438	93	102
conveniences	13	94	138	118	606
periodindex	43	265	75	771	921
KmeansMiniBatch	76	40	444	236	444
bitwise-and	14	100	95	18	866
result1	74	100	54	690	211
Adapted	4	17	254	478	588
_same_	59	52	233	51	177
argparse	52	185	276	288	793
github	35	122	220	292	106
RSI	20	147	450	101	675
rank-3	34	77	0	73	694
RSA	13	26	48	195	765
rank-1	34	77	0	73	694
numpy.dtype	3	18	141	266	969
numpy.f2py	15	135	319	777	873
broadcasting	42	30	286	74	368
super-useful	35	232	220	387	53
10:32	78	204	453	155	361
RSS	20	127	355	159	344
python-matplotlib	67	151	327	232	334
3*1	85	201	370	5	192
clarifications	18	15	45	472	922
blosc	71	153	446	702	369
reminded	24	59	114	210	469
origin_lon	53	174	177	467	199
trade	79	78	450	762	955
IOError	63	176	397	696	819
attitude	18	232	232	419	53
6-10	81	147	335	621	326
vec2	27	269	137	509	598
10:35	54	186	119	338	811
vec1	44	29	137	5	598
all_	12	117	409	44	562
496	54	3	101	187	158
its	2	215	392	91	338
492	90	3	101	332	995
scipy.sparse.dia_matrix	42	292	64	313	218
rapidly	10	170	409	44	576
verticies	31	1	388	399	879
Incompatible	63	44	199	582	888
blurring	20	117	7	709	562
00:30	99	69	119	525	256
ruining	2	263	445	573	531
mealarray	3	18	251	196	172
aframes()	29	40	444	592	709
read-in	71	153	50	423	108
it-	50	232	393	35	264
pathologically	12	183	409	44	563
vect	44	195	370	196	192
vecs	34	77	0	73	694
designation	14	59	147	145	908
coping	10	188	355	573	863
all-	7	26	63	516	850
loosely	13	193	372	387	371
number-crunching	13	272	118	225	765
labeling	5	52	32	19	884
99.93779431	54	50	368	331	449
floors	81	4	427	438	198
neccessary	88	152	147	9	621
all=	45	80	334	85	350
low-dimensional	34	77	0	73	694
downside	88	272	134	552	604
32768	78	223	85	196	898
HDU	61	153	50	539	108
initialised	2	215	328	98	187
librairies	7	26	63	697	730
DataMatrix	43	265	337	771	376
contiguous	34	188	361	404	450
is_null	53	95	115	239	227
32767	14	291	85	608	482
index=True	52	185	376	121	369
HDF	71	153	446	702	457
HDD	21	127	355	159	359
blues	22	4	427	438	198
bluer	59	4	427	438	198
Team	48	298	66	276	653
really	88	59	392	630	469
ftp	71	239	50	390	108
repeat=False	29	203	128	167	55
noobs	88	257	5	144	606
vectorial	39	126	409	44	562
Signal	38	224	282	519	38
densities	81	214	132	621	4
col_list	53	95	115	239	779
driver	71	171	473	128	88
jezrael	24	33	229	140	870
drives	12	246	58	284	600
np.asanyarray	3	220	361	157	172
CET	99	268	318	155	27
Chang	4	121	264	646	500
urllib.urlretrieve	86	129	485	193	858
annotated	59	52	342	32	884
fontsize=20	46	226	494	316	348
driven	13	246	206	195	765
HD5	71	153	446	702	457
Multiindex	43	265	75	771	921
retained	2	215	328	405	187
Heffernan	4	121	264	646	500
TBH	88	48	5	630	360
Shape	63	44	154	582	357
alphachannel3d	68	32	13	545	744
yticks	5	148	363	19	844
do't	47	229	65	630	360
clump	81	43	266	588	283
exhibited	35	152	60	252	120
major	5	148	32	19	884
forwards	6	85	456	700	817
6.00	95	298	419	751	340
JGene	48	144	195	178	637
444	90	3	298	318	995
4431	44	205	251	196	357
fluxes	81	6	270	733	301
histogrammed	41	6	25	616	494
differ	2	21	233	251	338
multi-dim	42	30	396	404	694
fuller	57	235	342	37	451
.first_valid_index()	53	95	115	239	227
newValue	27	157	115	750	227
__array_priority__	3	220	329	663	235
molecular	13	246	48	195	765
Iy	90	195	4	617	744
infered	61	58	452	539	260
c_array	90	297	13	10	744
ProductCategory	48	123	486	339	779
Press	40	141	305	110	402
ydata	41	6	177	282	397
minor=True	46	148	289	46	348
streamplots	59	52	495	199	177
spacings	5	170	270	733	301
unrealistic	12	183	409	334	563
serializable	63	44	460	172	890
jpg2000	61	153	222	215	957
prebuilt	67	151	470	219	553
-Ipandas	55	128	293	52	56
numpy.loadtxt	52	185	336	121	793
multiplicate	77	21	258	203	738
col_start	74	293	4	509	577
maintainability	13	183	5	458	606
Nowadays	76	26	65	118	439
0.015	99	266	324	695	421
datelike	94	63	68	426	452
locals()	65	233	181	540	406
containig	21	21	233	251	108
numpy.version.version	91	7	184	103	630
le8	59	288	32	122	884
size=100000	75	243	385	425	484
plt.pcolormesh	46	36	294	282	627
Equity	95	271	159	519	38
feature2	95	123	272	339	497
]]])	90	54	257	10	585
py2exe	67	151	174	604	305
restore_region	31	1	460	172	787
hyperplanes	85	43	239	586	192
accumulative	81	21	275	522	192
Math.NET	7	51	65	2	730
wxPython	93	187	104	537	728
directives	7	51	428	215	915
brace	61	58	452	230	298
CLASS	79	144	195	787	517
json.loads	36	10	489	589	448
np.fabs	74	195	54	690	228
perfomance	10	202	37	225	990
15:00	99	253	119	525	256
Count	69	138	66	789	653
unused	2	263	181	618	625
deleteLater()	29	203	348	123	55
df.to_json	36	10	163	85	369
polylist	31	1	388	399	336
colliding	50	232	235	170	796
ax1.twinx()	46	284	255	577	430
Google	13	193	372	387	371
FROM	30	212	182	343	965
Boost.NumPy	13	26	65	2	730
in-built	88	48	61	630	31
IIUC	43	47	72	683	956
artistic	88	117	5	630	562
decimal.Decimal	3	291	142	325	549
HDF5Store	71	153	446	702	457
compare_images	60	40	177	396	622
Brute	81	48	131	588	612
arr.transpose	44	227	228	0	357
file2.txt	30	271	373	185	858
D50	22	4	7	438	672
Datetime64Converter	3	40	444	15	314
superceded	13	26	126	9	398
stepwise	81	43	173	621	71
Jakob	24	121	394	646	500
button_release_event	31	1	388	149	282
autocorr	60	219	177	396	599
sample.csv	36	10	50	294	502
df.get_values()	3	269	361	404	172
left_freq2_index	68	54	13	617	597
L2-norm	60	194	403	65	598
9-12-25	54	69	119	158	126
set_xticklabels	5	148	363	558	844
beams	20	126	206	428	949
fig.tight_layout	46	284	494	757	430
adheres	60	94	375	91	621
Bounding	39	117	235	32	102
np.percentile	27	269	403	53	244
PlayTennis	79	144	487	197	653
inFile	36	174	117	36	314
0:00	99	253	453	641	762
df1.to_csv	36	10	489	712	261
one-minute	79	147	450	101	675
disregarding	6	68	12	130	910
quotient	81	86	275	391	603
river	39	117	97	322	586
approaching	11	48	389	799	360
manger	67	151	167	499	732
reindexes	43	265	75	771	356
unicode	61	58	443	539	209
creator	35	26	372	71	594
tsdata	47	264	292	210	336
signature=signature	68	201	117	617	486
reindexed	43	47	75	771	73
manged	47	37	392	699	59
.copy	64	47	361	551	273
1-element	3	220	0	404	890
#	30	174	117	751	262
movie	79	246	206	571	54
currently	47	21	392	203	907
rejecting	81	183	409	709	563
Behaviour	69	162	191	209	837
Optimized	38	179	169	61	145
4096x4096	21	190	258	45	576
captured	2	246	328	98	187
deserialization	71	218	183	359	803
respectively	78	21	233	251	702
feedforward	77	168	48	195	416
heuristic	12	183	409	44	84
1050	96	223	324	200	252
disallow	76	152	147	257	908
7.3f	86	129	465	137	347
sum()	42	157	103	15	956
interface	13	23	65	118	398
LiClipse	40	132	352	384	137
xlab	31	13	123	134	271
enables	76	23	491	174	621
improved	4	272	118	799	990
Verifiable	57	235	463	160	607
barely	10	264	37	44	604
numpydoc	67	57	90	215	732
improves	10	272	118	225	990
data_train	53	256	51	668	779
GTPE	24	109	394	567	500
tstop	78	204	453	788	361
approve	18	15	45	472	922
pdb	40	277	281	76	632
Series.unique()	42	27	349	358	244
wim's	4	17	254	710	441
markdown	93	61	90	769	374
pendulum	77	98	48	195	416
4's	78	204	338	526	513
loan	79	78	487	480	285
one-at-a-time	2	116	145	750	207
re-paste	57	235	463	37	451
parametrization	39	98	231	93	102
bject	3	18	141	266	969
cMap	90	297	13	509	486
noncontiguous	34	77	131	522	694
-loop	10	202	88	750	207
list()	65	233	81	648	526
numpy.matrixlib.defmatrix.matrix	3	18	251	157	172
devil	4	152	372	387	219
publishing	13	225	126	480	852
nx.draw_circular	46	174	177	592	622
monthly	99	147	450	101	817
Col4	48	123	486	339	779
Col2	48	123	486	339	637
Col3	48	123	486	339	779
intricacies	11	120	212	739	727
numpy.sign	42	27	14	313	244
azimuthal	39	149	438	298	573
numpy.load()	71	153	336	423	306
tensorflow	7	57	345	742	732
blob	71	248	7	571	108
Special_Tab	29	1	444	236	444
ColZ	48	123	486	339	637
samples	81	214	270	783	162
ColX	48	123	486	178	637
ColY	48	123	486	178	637
max()	43	280	103	53	956
.info	3	220	361	514	720
quarterly	99	147	450	510	817
ColB	53	123	51	448	821
EXAMPLE	30	212	55	429	428
.transpose()	42	227	286	489	263
ColA	53	139	51	448	779
Johannes	47	59	490	567	81
numpy.random.randn()	76	152	60	9	625
handling	76	152	138	618	621
Old	4	17	254	281	114
Oli	24	109	229	140	870
Colt	7	51	63	2	730
mln	21	190	234	557	655
Cols	95	204	272	339	497
forgetting	18	200	493	504	991
optimization	76	42	458	279	905
Postcode	53	181	42	417	775
evaluating	60	98	458	279	738
5:00	99	253	453	525	256
np.mean	27	269	403	65	48
appengine	7	132	330	384	315
.intersection	75	233	54	690	486
interate	2	116	145	706	207
sizeable	21	188	355	159	863
<3	27	260	431	234	945
<>	75	174	117	751	262
calculator	38	224	248	722	689
<=	27	260	431	234	945
1D-array	34	77	0	73	336
triple	74	195	239	522	207
beautifully	24	109	229	140	870
T_3	48	144	195	178	502
ArCityArCountry	95	144	373	787	497
<-	47	174	19	143	835
24bit	22	248	381	571	593
chase	50	232	114	35	64
sounding	18	120	179	739	67
636	54	3	101	297	158
mint	84	7	2	410	156
shorten	57	257	61	306	360
u_n	85	201	18	5	192
shorter	88	257	61	675	612
MonthEnd	99	63	68	109	94
reachable	13	246	63	697	732
virtually	76	188	147	169	863
Fully	76	179	169	127	145
Newton-CG	60	98	458	279	438
string.format	65	185	14	15	150
nextafter	63	174	460	172	613
Ambiguous	63	44	199	582	888
lineitem	3	18	141	266	969
np.object	3	18	141	266	969
v0.13.0	35	122	156	9	376
unlabeled	79	49	338	405	702
Lomb-Scargle	20	93	425	206	344
viewing	93	61	315	571	54
unpickle	71	218	183	359	803
11991	68	32	154	176	357
p.map	65	40	444	396	622
stack	2	116	145	706	986
find_peaks	53	139	51	551	779
.upper()	86	89	163	340	66
picky	88	59	5	419	907
DataFame	71	153	50	60	108
picks	2	215	491	174	769
tight_layout=True	46	284	348	577	430
non-optimal	88	272	118	630	612
concats	43	265	75	706	986
T_T	24	109	229	444	469
11:24	54	186	298	332	811
scheduler	13	218	183	609	959
json_normalize	43	265	74	551	526
oposite	81	170	266	32	176
50.0	54	266	324	695	421
unto	81	21	233	251	986
Landuse	86	18	272	682	199
Gentoo	84	7	432	301	321
surprises	88	152	414	284	606
signals	20	93	425	191	344
canvas.print_figure	36	203	136	36	619
input	47	21	392	91	338
submissions	81	21	206	783	738
Eulerian	39	43	235	195	949
surprised	88	59	114	210	907
datetime.time	99	63	68	426	390
ataFrame	64	10	74	551	779
1090	54	3	154	187	158
1092	54	3	117	187	158
Distributed	10	218	183	359	959
quest	11	225	134	458	53
Requests	38	162	191	789	38
enumerable	81	21	123	514	336
projects	13	26	126	118	765
WarrenWeckesser	4	121	264	646	500
plot_data	46	40	444	592	622
0.98631	30	50	368	429	428
imposed	12	183	409	44	563
plot_date	31	148	383	558	745
__array__	3	220	329	663	235
main_df	48	281	486	339	779
utf-16-le	36	10	376	712	261
JArray	34	77	0	73	694
to_list	65	157	460	514	787
-30	99	288	324	200	811
consensus	35	225	220	292	219
communications	13	246	58	609	959
signal1	75	29	289	28	810
imposes	12	152	477	552	621
iPython	40	141	281	76	632
stylish	13	23	138	118	695
__init__.pyc	55	128	52	151	173
pertaining	2	264	393	75	564
Input_File	36	10	136	712	261
originalArray	78	100	216	522	944
Andy	24	121	264	646	500
.where()	94	157	72	369	956
Pig	84	119	167	609	377
virtualenv	67	151	210	351	137
RFECV	63	168	460	514	787
M*N	44	205	251	88	943
--------------------	30	50	368	429	428
newdate	78	144	195	198	687
Numpy-array	3	265	64	514	3
.shape	44	227	228	0	357
newdata	2	49	233	405	262
single-channel	22	90	246	45	593
P_fft	96	266	31	391	236
Insertion	34	77	122	702	694
inlining	10	202	37	225	876
dictates	34	100	95	355	336
Kepler's	85	98	248	722	416
nowhere	50	59	114	75	564
code-block	57	37	222	699	262
wget	67	239	470	744	594
dictated	2	21	131	98	187
aswell	47	17	254	567	562
Pack	84	271	2	241	321
data.size	75	227	385	0	486
1,200	21	190	234	557	252
1,201	54	69	119	338	361
zip	65	233	81	648	526
coexist	2	57	233	697	321
verbose-debug	40	112	184	57	630
mmap_mode=	36	10	336	712	306
cholM	14	194	280	431	485
Thing2	79	138	335	621	653
cmap	22	36	294	653	271
transients	20	147	275	191	603
cmax	5	284	253	757	339
2-tuple	74	233	216	669	336
repair	63	37	301	618	625
12,000	21	190	234	557	42
garbage	29	218	447	570	450
min_periods=0	64	139	256	551	48
recreate	57	235	463	450	451
locus	81	43	239	522	603
LNK2019	63	176	98	696	952
appropriate	47	229	457	91	338
troubleshooting	11	173	389	284	625
usetex	45	230	448	767	909
scipy.optimize	77	124	458	324	438
sneaky	24	200	493	504	991
spending	50	120	114	35	169
duplicate	69	49	456	170	114
submit	35	15	220	292	106
custom	2	229	457	306	439
map_coordinates	72	165	15	235	570
3:7	90	293	13	509	146
doen't	3	67	261	312	957
:	47	235	342	347	560
Regarding	4	0	254	228	81
3600	96	29	18	173	620
subgraph	81	43	41	400	234
friendlier	76	26	138	118	439
atop	59	117	495	32	177
dfNew	49	47	144	631	779
atol	14	29	31	28	236
atom	63	43	239	522	336
drop=True	64	47	406	548	294
drop=False	64	47	406	631	294
atof	27	174	274	543	876
GDP	48	228	487	480	653
url_for	36	80	136	36	942
suptitle()	31	203	350	577	518
Office	38	271	63	686	38
arbitrary_function	10	272	118	225	863
bins=range	75	35	297	171	810
weibull	77	214	132	783	4
Africa	39	73	279	322	586
Pascal	13	120	212	2	730
verification	30	235	342	534	783
Scratch	50	200	493	504	991
continuously	29	246	128	167	769
GDK	93	61	315	435	591
alarm	45	37	334	269	888
.mdb	71	171	303	609	92
Supposedly	47	57	495	51	59
extra_shapes	81	73	206	442	675
reconcile	59	52	233	251	59
oddity	50	152	60	257	669
likewise	2	174	272	751	338
pandas.core.series.Series	3	63	460	172	3
scipy.cluster.hierarchy.linkage	60	270	472	742	662
Outside	69	116	237	251	92
skimming	18	225	490	407	371
.nonzero()	90	293	431	509	146
Chaining	2	94	162	355	470
all_data	74	233	54	690	994
invalid	63	44	199	582	341
occasional	12	152	409	546	604
np.broadcast_arrays	42	30	286	74	595
parakeet	76	51	37	534	990
Background	13	246	214	571	537
Squeeze	84	7	432	301	321
elements	34	100	131	522	336
pickle.HIGHEST_PROTOCOL	36	153	336	423	306
left_on	49	47	406	363	445
gene_id	95	144	373	787	517
occurred	50	37	301	167	769
cm.ScalarMappable	31	1	294	653	271
np.char.mod	86	129	465	137	347
Modeler	71	246	303	60	92
ago	50	264	292	407	747
date_time	64	281	406	551	779
agg	43	157	103	683	956
age	79	228	487	376	653
ironpkg	67	57	167	499	732
feature_value	86	181	256	197	653
pre-requisites	67	151	167	697	732
carrying	2	116	235	203	531
plt.margins	5	284	253	757	339
oracle	71	171	473	128	88
2014-03-31	99	140	453	198	687
bool_array	90	297	289	282	486
partial	47	42	38	279	950
illustrates	57	235	342	450	766
ufuncs	42	51	137	313	734
laziness	12	120	212	419	53
existing	2	116	457	335	180
illustrated	4	235	342	252	950
semicolons	61	58	452	230	298
unmatched	61	263	452	230	298
clearify	57	200	490	567	81
dicing	76	111	122	203	734
add_axis	74	297	4	509	228
symbol_list	57	49	50	405	713
subproblem	12	42	5	630	907
2013-12-22	99	104	453	155	687
concerned	12	59	134	419	907
0.17.0	91	122	156	587	626
0.17.1	91	122	156	587	626
dvips	45	80	315	288	872
postings	50	73	393	75	564
manipulates	2	188	491	404	417
Date_Time	49	281	486	363	82
continues	29	37	128	167	769
Twisted	93	187	104	537	537
manipulated	2	215	328	98	187
s.replace	86	89	163	211	66
Fixed	24	200	493	567	991
continued	50	264	393	167	769
timely	13	246	232	167	2
.99	35	122	220	292	376
OPR_DATE	53	139	51	417	775
plotter.py	37	250	27	475	194
lasso.alpha_	77	219	132	783	162
they've	35	264	292	9	747
.95	68	266	289	695	421
pullback	79	78	173	101	955
pout	96	195	4	617	597
dish_name	53	260	51	234	821
on-topic	18	225	45	527	509
Primer	24	109	394	140	870
yvalue	46	39	73	316	488
linalg.eig	60	194	102	431	751
edgecolor	31	226	294	134	608
visuals	13	23	126	51	765
Mainly	12	272	41	170	234
odr	77	124	132	324	738
Currently	47	0	392	678	544
-400	46	243	289	46	810
alphanumeric	61	58	452	539	501
enclosed	61	58	452	230	501
1}^n	85	172	481	224	778
odo	71	171	446	128	457
.xml	71	153	50	60	108
odd	88	59	301	618	120
ode	60	98	38	279	809
Tooltips	59	154	188	209	203
reproduce	57	235	463	37	766
Microsoft's	7	163	63	241	850
-Ubuntu	54	186	33	34	789
range()	65	233	81	648	311
half-hourly	79	147	450	101	817
s.groupby	64	150	256	197	48
Anaconda\lib\xml\etree\	37	250	386	475	194
inspect	47	229	457	306	338
numpy.exp()	60	27	14	15	709
.first()	64	150	256	197	48
gathered	50	246	206	98	92
octave	60	296	375	364	631
ubuntu	19	7	432	301	156
consideration	12	21	134	458	338
deduced	50	215	60	210	187
to_stata	43	265	460	514	888
great	24	109	229	444	264
ctr	68	32	18	617	752
receive	63	37	199	582	888
involved	12	152	147	552	908
auto-completion	40	37	222	699	315
pkg_resources	15	176	44	696	823
rdd	71	246	183	609	600
rdf	64	281	74	551	3
.yml	67	132	429	384	377
y-position	5	288	32	245	479
defeat	76	272	118	573	207
81.75	96	266	324	28	421
opinion	88	225	5	419	908
bookkeeping	76	272	118	257	863
Organizing	69	31	100	60	316
timezone-aware	43	63	68	426	452
involves	76	116	491	174	621
firefox	40	141	281	769	632
cbrt	60	40	458	313	439
Dataframes	69	265	191	574	739
.toarray()	44	292	64	348	218
remove()	31	1	388	399	879
equals	78	100	419	487	192
UPDATE2	4	17	342	450	439
Eelco	4	121	264	646	500
UPDATE1	47	0	392	91	338
tools	13	26	63	118	398
Counters	65	94	158	574	439
celery	71	218	183	359	803
Tesseract	22	248	381	141	722
Test.py	37	141	281	187	194
certificate	63	176	397	582	136
minval	90	297	13	617	744
illegal	63	44	199	582	888
testing.csv	57	235	222	347	560
Quaternion	3	220	329	312	235
bottom-left	39	288	438	122	979
doubling	2	188	447	573	531
result.to_csv	86	129	136	137	906
ODEs	77	98	38	279	809
Dataframe1	99	140	318	372	687
Copies	69	162	191	61	739
reloads	40	187	429	764	954
CANNOT	47	152	457	242	621
aapl_old	43	47	108	683	36
gladly	11	173	143	472	705
delegating	76	51	261	312	235
structs	3	94	122	312	235
Wedge	31	1	388	399	879
UPDATED	30	212	55	136	560
balls	10	272	258	44	576
animals	79	228	487	480	292
Feedback	35	193	220	387	371
portability	7	26	63	458	990
this	47	48	392	630	360
straightforwardly	77	42	41	306	439
UPDATES	30	260	431	234	821
fulfill	2	229	291	355	148
1.47	96	201	18	173	13
1.42	91	122	29	587	230
weaker	59	117	409	44	562
purposes	13	183	126	458	765
pieces	57	116	145	706	986
d.read_csv	36	10	376	712	971
pieced	50	264	393	75	564
Copied	4	200	493	567	991
x-data	5	288	32	19	884
Christmas	11	109	229	444	870
font_manager.py	37	132	475	205	173
Notation	69	162	191	61	837
non-interactive	93	80	315	435	591
destroying	2	116	145	573	531
RdBu	22	4	294	653	488
Wave	38	206	282	61	837
createArray	65	40	444	15	709
overridden	31	215	329	663	187
OP's	4	17	254	710	441
Disease	48	47	486	631	82
tied	2	215	60	91	702
Q	85	194	280	5	192
pigs	95	204	373	168	361
Y_k	20	93	425	336	344
preferring	88	257	61	675	688
ties	12	183	456	708	640
ou	47	132	222	384	315
server-side	71	246	90	609	600
2x2	34	77	251	88	943
Apple	67	151	210	241	850
os	19	7	184	301	630
redundant	2	263	456	618	908
or	47	0	392	91	338
naxis	74	293	4	188	250
Denis	24	121	264	646	500
pyramids	22	126	7	709	562
Apply	69	179	100	530	911
CRAN	35	26	63	516	594
2x6	78	77	131	88	943
retval	3	90	201	157	969
2014-01-31	99	281	66	155	687
ZoneName	48	123	148	787	517
erasing	2	263	447	573	531
producer	71	218	183	359	959
produces	57	235	491	174	59
markeredgewidth	31	13	334	269	879
negation	65	111	95	18	272
produced	2	215	328	98	59
b0	85	172	481	224	778
arr.tolist()	65	233	54	690	526
Translate	69	179	237	98	631
2004-02-05	54	69	119	158	126
Voting	18	225	45	472	922
Colormap	31	1	294	653	271
tabbed	71	215	328	98	959
user_agent_string	86	174	376	185	262
DESIRED	30	271	342	347	560
s.map	65	157	81	648	526
mongoDB	71	246	303	60	1
.min()	27	269	403	72	48
cusp	12	170	235	391	84
names=	86	39	308	85	971
cust	48	123	486	276	637
nside	22	206	7	21	71
SimHei	45	230	448	767	909
0.222	41	39	73	200	649
separators	61	58	452	539	501
np.sin	96	29	177	173	13
bothering	11	120	179	739	907
transparent	59	117	433	32	198
left-right	59	117	25	122	979
San	33	228	165	517	960
Sam	4	121	264	102	500
undertaking	76	272	118	334	730
traced	50	264	60	799	781
Pekar's	4	17	254	710	441
3.5.1	19	7	417	13	644
3.5.0	19	7	417	13	972
Say	81	21	131	98	927
pyplot.draw()	29	187	128	123	55
documenation	35	193	19	387	114
accompanied	57	37	328	98	54
beneath	2	215	338	405	456
Saw	24	200	490	567	81
tracer	39	149	279	93	573
Iterable	3	18	460	172	172
text.py	37	250	475	205	173
Network	38	206	282	722	353
doing	47	48	392	424	907
seek()	22	232	381	306	439
temp2	41	6	108	107	211
temp1	41	6	481	107	211
idiosyncrasies	12	152	301	697	321
static	93	23	90	571	537
developer's	35	152	5	257	53
blackbox	76	40	458	169	738
csv's	71	153	303	706	561
x-labels	5	148	32	19	884
Float32	36	153	336	712	593
Very	24	109	229	444	870
Mongodb	38	206	282	60	38
singular	77	194	280	431	485
Vera	45	230	448	654	909
X-server	93	119	315	435	591
foo.png	36	61	315	99	619
Alpine	67	57	167	697	732
mydataframe	36	233	74	712	975
docstring	31	193	19	387	371
Spent	11	120	114	407	64
temps	81	116	275	522	603
BINDATA	48	49	486	339	502
Ryan	24	121	264	646	500
cdefs	47	0	484	15	439
thrust	4	193	14	313	371
Spend	53	138	256	250	775
occuring	78	170	301	618	769
scary	88	257	147	334	695
specifiying	5	13	284	245	479
-matrix	85	205	370	196	192
Xeon	84	127	2	410	580
Ananconda	84	57	167	697	179
prime_max	75	243	274	695	399
non-python	7	26	63	697	398
Simon's	10	17	254	710	441
Pros	47	21	392	91	114
matplotlib.colors.LogNorm	31	13	294	653	271
a.csv	36	10	50	539	511
order_array	2	49	456	405	338
Prob	47	0	392	91	338
dispersion	39	126	495	93	177
fascinating	24	224	372	444	264
strict	12	152	147	145	621
behaves	47	215	491	174	908
detailing	4	193	372	387	371
Bachelor	37	250	52	475	194
decorations	5	117	32	245	796
travelled	39	117	266	32	116
behaved	60	296	231	742	604
pandas.dataframe	71	153	50	60	108
+df	53	139	42	417	775
fit-function	77	124	132	783	738
2092	54	50	368	158	277
unbuffered	76	84	345	169	734
haven	50	264	393	75	564
not_equal	27	174	74	509	945
subroutine	76	51	261	312	957
ITK	71	248	90	571	722
autotexts	31	1	388	399	879
extraordinarily	11	109	229	444	870
ODE	77	98	38	279	809
appealing	88	23	138	97	695
brewer2mpl	13	23	372	97	537
stricter	12	94	142	552	621
metaFrame	53	139	42	417	775
\xe2	86	5	443	563	209
Discriminant	38	206	282	722	353
viewer	93	61	315	99	54
abomination	12	183	409	630	563
sysadmin	18	225	5	697	53
750	21	223	234	557	252
intersted	57	235	342	450	451
Correctly	69	179	169	61	837
seaborn.boxplot	43	265	72	771	956
one-letter	61	49	131	27	1
viewed	2	215	328	98	187
756	54	204	119	338	361
c2p0001c054.asc	53	181	42	211	624
re-post	18	15	45	472	81
BIG	53	139	74	668	779
linalg	60	296	102	205	461
reloaded	40	218	429	664	180
BIC	77	168	186	467	443
incorporating	50	116	145	35	666
Particular	69	162	191	61	739
BIT	48	49	373	787	517
persistence	76	94	122	702	457
calculus	13	98	48	195	738
02	99	186	318	34	789
758	54	3	101	297	158
valueList	74	233	54	27	197
may_share_memory	42	111	95	18	866
xarr	74	293	0	509	228
.!!	61	263	452	539	469
device	71	246	58	609	600
Asked	47	264	392	252	81
07	99	186	318	34	789
cke	61	58	443	85	209
amortize	10	272	118	44	863
04	99	182	318	34	789
1-alpha	96	201	18	617	62
some_val	45	18	334	682	969
non-consecutive	81	147	456	546	817
stronger	20	170	409	44	562
pandas.DataFrame.replace	42	157	14	589	956
scipy.stats.ttest_ind	60	40	403	742	709
atmosphere	39	126	279	322	949
09	99	186	318	34	789
=p	46	39	260	505	649
=|	68	174	117	617	192
terminate	29	218	128	764	954
=x	41	28	426	560	13
=d	64	287	256	551	294
persistance	71	218	183	359	959
=a	90	297	13	239	744
=b	27	227	228	509	969
unconnected	74	195	4	255	577
=o	3	18	141	266	969
=n	96	201	370	617	62
plt.contour	72	36	294	282	397
=j	90	297	13	617	744
freq=	64	287	449	48	997
plt.xlim()	5	148	253	558	844
=P	30	174	117	218	314
pausa	85	40	177	396	192
=]	24	109	394	140	870
=\	85	174	117	751	128
forward-filling	6	85	456	700	910
Modify	69	31	237	530	911
=X	53	139	51	417	821
=[	64	174	287	10	585
=D	64	174	74	185	262
=A	90	297	13	509	744
.But	44	205	251	196	888
numpy.delete	42	30	286	358	146
pad_inches=0	46	226	494	757	619
=N	85	194	370	560	192
=5	27	260	431	234	945
=4	68	260	293	52	56
=7	90	297	13	509	744
=6	27	260	431	234	945
=1	27	260	431	234	945
=0	27	260	431	234	945
=3	27	260	431	234	945
=2	27	260	431	234	945
==	27	260	431	234	945
familiar	13	120	212	739	727
=>	68	174	404	751	790
cranky	50	120	114	407	64
%%cython	40	141	281	76	632
wiggle	59	23	409	203	765
X**2	44	205	4	282	397
=-	68	266	324	200	421
applying	2	116	275	566	531
=/	55	112	276	113	568
doubtful	88	59	5	419	907
=)	24	109	229	140	870
memcpy	3	188	447	312	581
=+	90	297	4	617	744
Specially	12	0	392	697	31
a.item()	63	44	240	782	226
freqs	20	93	425	336	344
bezier	72	117	231	199	102
multi_df.ix	90	297	26	239	744
Werner	50	121	394	646	500
main.exe	40	37	429	699	954
24hrs	18	147	232	407	81
stations	79	228	450	101	675
intervening	2	116	145	251	986
btw	47	0	392	504	469
matplotlib.pyplot.subplots	31	13	19	592	879
plt.imsave	22	90	336	141	942
configured	40	119	429	697	377
qty	48	144	486	547	653
Paulo	24	200	394	646	991
Source	30	271	159	281	560
Central	38	268	282	519	38
Setup.py	67	57	167	499	732
electrode	78	147	206	198	949
qth	60	214	316	431	485
isnan	6	68	12	53	866
wire	71	246	183	93	600
funclist	74	40	444	396	622
player's	79	228	487	480	285
hyperlinks	93	61	315	99	54
quickest	88	48	61	675	327
unravel	34	77	396	566	520
62844	14	291	201	266	969
greatful	11	173	389	763	867
qt4	93	80	104	368	591
qt5	93	80	104	368	591
interchangeably	47	94	14	15	210
second-order	77	98	458	279	809
plt.subplots_adjust	5	284	253	757	339
covar	96	256	132	336	597
interchangeable	76	94	375	364	631
Powershell	40	57	167	76	321
380	54	223	101	318	700
np.cov	44	256	403	704	598
np.cos	96	29	18	173	13
Preserving	69	31	100	530	911
ramp	20	93	382	709	989
df.update	64	47	406	548	73
tlc	35	222	138	9	376
etc	47	21	233	251	338
itertools	65	27	81	648	311
0A	54	3	101	318	158
reusing	2	188	447	573	531
QPointF	2	215	328	91	338
w.r.t.	12	21	134	396	738
theta2	41	6	117	107	192
theta1	39	149	438	560	192
Caveats	30	162	191	61	114
Would	11	173	389	143	835
13:55	54	69	119	158	126
recompile	67	163	152	326	104
387	54	3	101	297	158
taylor	96	98	177	560	738
CParserError	63	11	296	582	25
ds1.values.ravel()	90	297	26	509	744
8.1	19	7	432	13	644
Fortran77	7	51	65	2	730
8.3	21	160	23	492	421
8.5	54	108	23	579	322
8.4	84	108	23	579	322
8.7	54	108	23	579	399
powered	13	26	126	328	765
8.9	54	108	23	579	962
Outputs	30	235	342	347	560
distributional	77	183	132	147	563
Boxplots	69	162	233	209	837
waste	88	272	232	573	863
A\b	60	296	102	279	751
Expand	69	31	100	530	911
thetas	41	6	177	107	397
.NET	7	163	63	241	850
unq	74	100	108	690	833
pd.resample	64	287	449	48	48
#rows	44	227	46	196	357
Tom10	24	121	394	646	500
thetaf	96	201	426	560	13
graphics	93	61	315	99	54
Slightly	4	17	254	710	441
datalon	41	6	177	282	397
float32_t	3	291	162	699	470
pandas.set_printoptions	45	80	334	269	413
2-by-2	34	77	258	88	943
accesible	71	162	191	61	114
Hehe	24	200	493	504	991
isdigit()	43	157	72	750	956
aesthetics	59	23	138	51	710
This'll	47	0	392	143	469
cpsd	20	296	425	336	344
KDEs	72	165	382	313	396
5th	78	140	338	616	456
antiderivative	20	98	458	279	738
minimizers	77	98	458	279	438
-sum	44	201	18	5	486
excessively	88	272	258	334	604
optimistic	88	183	409	44	907
scale=1	96	35	289	176	201
conserve	2	188	447	404	450
0.0482X	96	266	324	751	421
dilate	39	126	7	709	670
iopro	91	7	417	587	230
cusv	55	128	276	477	128
intra	79	147	450	101	817
python	47	57	65	735	730
print_figure	37	250	475	205	173
digging	50	264	393	75	564
GEN_TICKER	53	95	51	612	821
glaring	11	173	389	552	990
conflicting	12	57	60	697	315
urls	71	49	50	27	92
pd.tseries.offsets	69	63	68	426	940
pandas.PeriodIndex	43	85	449	48	817
upon	2	215	60	335	338
4.7	91	108	23	579	322
pandas.DataFrame.where	42	27	14	313	244
parametrized	39	149	438	93	102
0j	96	184	18	173	13
df.as_matrix()	43	157	74	489	3
4.1	54	108	23	579	322
pd.read_table	52	10	376	121	971
decimals=2	96	29	18	173	838
expand	2	229	145	306	338
error-message	63	44	199	582	888
Greys	22	36	294	653	488
highcharts	59	23	90	51	54
numpy_array	44	205	251	196	228
odd1	48	123	486	197	653
Quote	35	193	19	387	114
Violin	59	52	495	209	710
Matching	69	31	100	530	837
asymmetrical	59	52	495	51	710
lest	18	225	232	170	769
inconsistently	61	152	162	210	260
mlab.csv2rec	71	153	336	423	108
.update	64	174	74	551	923
less	88	257	409	44	604
downvotes	18	15	45	472	265
downvoter	18	15	45	472	265
des1	68	227	385	0	486
des2	68	32	385	545	486
Access	69	31	100	61	316
Hayden	24	121	264	646	500
predicts	77	168	186	705	162
Total_Data	53	139	51	448	687
NFFT=256	46	35	289	751	201
autocompletion	15	135	281	735	398
idiom	88	257	61	675	327
lattice	39	43	41	400	102
Reason	12	152	392	210	908
combine	2	116	145	706	986
optimising	76	272	118	225	990
combing	50	264	292	75	564
Assumed	2	215	328	405	338
.Lott	24	200	493	504	991
rectilinear	72	165	15	733	301
#define	54	176	397	21	136
~df	53	139	51	417	775
pre-compiled	7	151	470	219	104
Hits	95	271	335	519	38
increased	10	170	409	44	576
hpaulj's	4	17	254	710	441
Launch	40	141	429	76	632
dest	42	30	216	566	520
increases	10	170	409	44	576
five	78	21	338	251	326
Interpolating	72	31	100	530	911
desk	50	264	114	407	64
loader	71	153	44	384	305
Picking	69	31	237	478	911
desc	48	123	486	339	82
resid	78	204	373	168	361
numpy.__file__	15	112	184	308	630
cv2.cv	15	135	319	777	823
parasite	5	148	32	558	518
priori*	12	0	147	145	908
Warning	63	176	397	582	136
explaination	4	109	229	444	867
ranksdf	48	123	486	197	653
toimage	22	90	381	141	722
There's	47	0	392	678	544
Sad	24	109	114	444	469
500x500	21	190	258	45	943
4800	44	205	251	196	252
divide-by-zero	6	37	301	618	625
sufficiently	12	170	409	44	604
zpos	41	35	289	176	397
literally	47	0	392	91	835
counts.keys()	47	174	14	91	709
Borini	24	200	490	504	991
interdependencies	38	270	375	742	398
__getattr__	37	220	483	663	720
.start()	29	174	444	236	314
does	47	0	491	143	835
pre-processing	77	168	186	203	646
blurry	22	117	7	709	562
currentArray	74	174	338	616	262
schedule	79	78	183	609	959
whiskers	5	159	433	104	608
Inside	2	215	444	236	406
symlink	67	132	352	113	137
DeviceUsed	85	181	182	197	35
geom_boxplot	31	23	383	51	710
zips	65	233	158	522	207
includes	2	215	491	174	702
loans	79	78	487	787	320
hiding	59	152	32	51	417
25.0	54	108	23	713	421
25.5	54	108	23	579	399
asks	18	225	490	170	81
25.9	54	108	300	797	399
25.8	54	108	23	579	399
n_points	41	35	289	282	397
.seconds	94	63	68	426	390
QPixmap	93	248	104	537	728
insufficient	12	152	60	170	81
Sat	99	268	318	372	687
revise	18	225	490	567	81
array-wide	34	188	275	404	694
contractions	76	94	118	169	734
base-2	14	86	314	431	238
kmeans	77	168	186	705	899
interpolate=True	46	39	73	316	649
roads	39	73	279	322	586
merc	46	39	189	316	624
mere	21	59	5	167	655
embarassingly	50	120	393	75	564
stocks	79	78	450	762	746
nanometers	81	288	266	391	479
spots	81	117	433	32	198
trigger	29	187	128	149	769
9.8	54	108	300	331	449
9.9	54	108	23	579	322
frustration	50	120	114	407	64
troubling	50	59	301	284	120
9.7	84	127	2	159	359
9.0	54	108	386	579	322
9.1	54	108	23	579	399
9.2	96	266	23	695	421
9.3	21	223	274	332	692
NaN's	6	68	12	130	910
-df	53	139	51	72	775
overlapping	59	52	32	546	884
first_type	78	204	338	391	361
transcript_id	48	144	195	276	653
np.squeeze	44	30	286	74	263
y-velocities	41	6	251	107	336
basin	79	228	206	101	675
UTF-16	61	58	443	563	209
bounds_error=False	72	165	15	282	397
chained	94	111	115	369	227
Mandelbrot	22	4	294	199	177
decays	20	98	231	279	738
Blas	7	163	428	418	166
sscanf	10	277	274	543	876
rechecked	50	37	292	699	888
slowing	10	272	118	225	781
FUN	95	40	419	396	314
replica	57	21	490	170	451
banal	88	257	61	334	695
.head()	64	150	74	551	48
deeper	50	232	232	257	781
P_n	77	98	458	279	738
_very_	88	59	138	334	604
ravel_multi_index()	42	27	14	15	709
P_i	90	195	4	255	228
P_g	48	138	34	621	248
w-1	68	195	13	617	744
forests	77	168	186	705	646
Else	30	271	291	281	36
multiarray	15	135	44	696	461
gaussian_kde	77	219	132	147	4
fclusterdata	60	270	472	152	662
DAY	99	140	453	198	687
00000	75	243	385	425	486
Loss	38	179	169	61	145
maxlag	60	219	458	1	201
Lost	2	21	126	203	108
zypper	67	151	327	499	334
np.histogram	42	14	297	171	244
chance	11	232	232	630	31
grouped.agg	64	150	256	772	48
Context	57	235	342	281	114
inspiration	4	193	372	478	79
eog	45	61	315	36	942
2014-03-03	99	69	119	155	428
INSIDE	81	43	131	522	207
rule	12	183	147	630	908
99.99	81	288	289	200	810
win32com	71	26	86	638	561
trims	59	117	284	122	479
savez	36	153	336	423	306
valve	85	195	239	391	192
#CODE	47	235	342	450	950
type_id	79	144	195	178	637
AGG	93	61	315	435	591
saver	24	109	229	444	870
saves	2	215	491	174	59
subsetting	43	111	75	771	356
descartes	31	57	167	199	230
numpy.minimum	60	100	95	742	866
timespans	81	147	450	101	817
saved	71	61	328	98	54
ufloat	15	135	44	777	823
relationships	79	228	487	203	675
votes	18	15	45	472	265
const	3	67	261	157	865
endings	61	58	443	539	501
Overloading	47	94	147	145	734
walks	81	43	48	195	416
voted	18	15	45	472	265
xgboost	77	168	186	705	646
plt.rcdefaults()	45	80	348	269	55
Excel's	60	296	375	364	561
R-squared	77	124	132	783	162
df2.reset_index	64	47	406	631	294
Concretely	81	21	233	251	59
my_list	65	233	54	690	526
columnName	53	95	115	551	227
find-links	55	112	276	57	128
00:01	99	69	119	525	256
easygui	40	187	429	609	2
tickets	79	78	450	101	955
MAP	77	214	132	783	162
we'll	47	232	232	144	950
MAT	71	153	214	98	108
MAY	30	181	368	429	428
MAX	78	144	173	67	603
y.shape	44	205	251	0	357
unpack=True	36	10	376	121	971
MAC	19	7	306	301	232
MAE	85	172	370	224	778
delegate	76	51	65	663	730
298	54	3	101	187	158
299	54	3	101	187	158
296	55	3	330	187	461
297	54	54	257	797	139
y_list	74	6	177	107	577
295	54	298	101	429	428
292	54	3	101	187	158
Panda	69	265	191	789	739
Sunrise	48	281	66	194	555
5000x5000	21	127	258	45	359
set_limits	31	40	444	236	444
shut	40	187	128	764	954
Strange	50	37	301	210	120
rigorous	12	183	332	144	84
S2	85	172	419	224	497
Booleans	3	100	95	18	866
voids	72	165	15	733	794
matplotlib.pyplot.draw()	29	187	128	123	55
interger	94	111	162	355	470
Ones	47	0	131	251	338
14.04.1	84	7	432	301	156
skipna=False	27	260	431	234	945
Zone14	95	181	373	686	517
consisting	2	21	233	487	702
Bigger	21	271	258	127	560
told	50	264	292	210	747
simultaneously	2	21	233	251	338
xticklabel	5	288	32	19	884
wrapping	76	94	65	257	417
rowname	74	95	115	339	779
Profiler	10	160	355	407	169
yeilds	63	174	199	582	888
PyObject_CallObject	3	67	261	157	498
placeholder	6	68	456	355	910
kudos	24	109	229	444	870
non-duplicate	74	100	456	355	283
glm	77	168	186	306	738
tol=	96	266	31	1	236
pd.Series	64	150	256	551	48
pinning	13	26	126	697	398
pooling	81	21	275	167	603
cogent	55	128	330	205	568
keymap	40	187	457	335	2
eventplot	31	23	457	51	371
img_manip	68	32	257	234	357
pessimistic	12	42	5	419	53
CTR	99	138	66	762	746
DON'T	30	212	55	136	965
discontinuous	59	117	29	546	301
neutrons	39	43	206	93	949
Health	95	123	373	168	653
Trees	38	206	282	722	353
achievable	88	59	61	799	360
ymax-ymin	96	266	31	28	236
fixable	88	59	147	9	908
removal	2	263	457	335	338
DefSize	90	297	13	617	744
Star	47	94	329	514	720
infer_types=False	36	47	74	551	539
START_TIME	99	281	453	198	687
insult	18	225	490	170	81
PyObject_Call	63	176	199	582	136
arr_3D	90	293	4	509	228
rollforward	99	63	68	426	817
lable	81	288	32	19	884
multiarray.pyd	15	132	44	384	305
0.11-dev	35	122	156	292	376
haha	24	200	493	504	991
curvature	39	149	231	93	116
Etiologic	95	298	34	168	459
siblings	78	228	266	621	944
Docker	13	26	63	609	377
overrun	2	170	456	391	603
.item()	3	220	361	514	235
20150826120000	54	50	42	713	624
word	61	49	487	27	1
1-second	81	147	453	198	603
work	47	229	392	91	338
eclipse	40	141	281	76	632
refusing	29	218	447	570	157
ORM	71	171	473	128	88
libc.math	60	135	319	742	957
ORG	30	298	368	429	428
interactiveshell.py	37	250	27	475	194
missing_values	52	185	28	114	971
ORB	13	193	372	387	371
HHMM	61	49	50	539	27
quintile	78	214	266	588	459
min=0	27	266	289	28	810
cited	4	193	372	252	371
Hurricane	59	73	433	32	586
belonging	81	43	131	487	702
Virtual	84	119	2	110	377
n=100	10	202	37	323	876
matplotlib-users	35	225	220	71	509
Swap	69	31	100	530	911
Digital	38	224	282	722	689
cites	4	193	372	71	219
prettyplot	5	148	363	558	518
1190	54	54	257	338	421
Journal	38	224	282	722	689
m-dimensional	34	77	0	88	943
AxesHostAxes	63	44	460	172	787
ref_rgb	22	4	7	438	562
residuals()	60	40	444	396	622
rewind	29	37	128	335	625
schools	79	228	487	480	675
0.9.1	91	122	156	587	626
0.9.2	35	122	156	292	376
0.9.3	35	122	156	292	376
transforming	2	116	145	566	531
lag	81	147	450	101	817
analagous	53	95	115	551	227
possiblity	79	147	450	101	817
lab	13	246	126	609	852
Ocean	84	119	2	410	321
Will	47	0	232	143	835
QTAgg	45	80	315	435	591
over-write	2	215	456	335	923
anaconda's	40	141	281	76	632
Wild	13	109	65	444	264
df.mean()	43	157	103	700	956
lap	2	174	117	751	262
Carlos	24	109	394	567	870
las	47	37	222	699	59
occurence	78	100	216	522	944
train_cols	53	256	74	668	994
30000000	75	243	46	196	876
filter_list	6	100	95	355	866
pre-processed	71	246	50	571	108
.TX0	71	153	50	60	108
Qtdesigner	93	187	104	51	728
xlate	48	123	486	339	779
pd.rolling_mean	64	150	449	551	48
order	2	21	337	708	338
triggering	2	37	60	618	625
numpy.abs	27	29	18	336	598
objectID	61	49	50	787	517
ax.xaxis.get_ticklabels()	46	148	494	46	844
functools	65	27	81	589	448
"")`	86	89	163	340	66
~200	21	190	234	557	42
satisfied	47	229	291	355	148
proportionate	59	170	284	245	479
pascal	7	51	65	2	730
executemany()	11	232	232	630	439
~20%	10	202	37	323	876
satisfies	74	100	291	586	148
.invert_yaxis()	5	148	363	558	844
-O3	7	163	428	326	915
-O2	55	163	293	326	915
-O1	7	163	293	52	56
-O0	7	51	428	215	915
top-k	78	100	216	588	283
np.float16	3	291	141	266	969
Evan	4	121	264	102	340
wxversion	67	151	44	368	104
Optional	40	57	167	499	315
Raising	11	59	60	567	469
eventually	50	232	232	167	338
unfortunate	88	152	147	145	908
ZIP	71	153	50	423	306
454	54	3	298	187	811
mixtures	81	126	48	195	416
Longitude	95	298	66	766	221
Ignoring	12	263	456	618	563
break	2	232	232	618	781
refactoring	76	232	232	257	781
owned	55	132	447	570	568
Arrow	31	1	388	399	879
President	95	181	373	686	340
bread	13	42	235	118	612
Control	38	271	259	281	402
np.empty()	10	188	88	404	581
alternately	2	263	457	306	673
.1	54	266	23	695	797
text.csv	21	235	258	450	451
1e2	81	288	324	391	176
misbehave	12	152	409	618	84
eryksun's	4	121	264	646	500
371	54	3	101	158	126
370	54	160	274	297	399
373	44	205	154	196	357
entitled	30	271	342	281	707
375	54	223	298	318	158
374	54	3	298	318	158
377	74	293	54	690	336
zdata	31	13	388	592	172
yerr=	46	39	73	505	649
fin_dat	74	233	54	690	779
meets	78	100	291	355	148
SOME	30	212	55	136	965
Aside	88	0	5	678	908
PdfPages	93	61	315	99	54
1e9	14	291	46	325	482
Heroku	67	151	432	607	156
ommit	45	263	222	751	568
thorugh	2	40	444	750	207
BEGIN	36	174	117	751	262
network	77	246	41	400	234
gridded	72	165	279	766	301
cameras	13	246	58	709	562
CPUs	84	127	345	445	580
lib64	55	128	52	151	372
pythonxy	67	151	210	351	104
np.lib.index_tricks	31	94	329	663	720
Originally	2	264	292	210	747
admits	60	40	14	313	709
nth	78	100	216	616	456
ctables	43	265	145	706	439
Pdf	93	61	315	99	54
contour3d	72	23	495	97	537
Pdb	68	32	256	545	486
wavefile	71	248	58	571	942
row_stack	42	27	14	313	595
conflicted	12	183	5	419	563
np.resize	42	30	286	0	263
WolframAlpha	96	201	177	560	13
SublimeREPL	67	151	167	499	732
National	95	268	427	519	746
zAcc	27	269	403	65	598
lousy	50	120	114	35	727
delved	50	264	393	35	564
sub-classing	31	1	329	663	720
guesswork	18	225	5	419	219
fig.canvas	31	1	388	399	444
benchmarking	10	277	37	534	783
.6	96	266	324	695	797
I.e.	47	0	392	678	544
theano.config.blas.ldflags	45	174	222	699	315
Stuck	59	52	233	209	837
Going	4	232	232	678	544
self._data.distance_matrix	90	297	4	617	744
pandas.io.parsers	15	135	319	777	823
comic	93	230	448	767	909
Perfectly	24	33	229	140	870
1024x1024	22	126	258	45	943
commodity	79	78	450	101	955
agriculture	48	123	486	339	199
df_list.append	36	10	489	712	261
rejects	71	215	491	91	260
Simplify	30	179	169	61	560
compromise	10	272	118	630	990
upshot	12	272	134	552	950
purposefully	12	94	134	630	908
kid	18	232	232	407	53
A*x	85	194	38	704	809
1417982808753	95	181	287	479	277
my_column	53	139	74	682	199
pandas.read_sql_query	43	171	473	128	88
unorderable	63	44	199	711	341
np.subtract.outer	42	269	286	313	244
numpy.frompyfunc	42	27	14	15	235
Gene.Symbol	53	139	51	417	821
Cloud9	84	57	167	697	321
Velocity	99	268	206	198	221
mercy	13	120	212	697	53
Test2	48	123	486	339	502
target	2	21	392	91	702
df.fillna	64	85	418	548	131
programs	7	26	63	697	730
Allan	4	121	264	646	500
tackles	50	264	393	75	564
irow	42	111	115	378	77
kth	74	195	216	255	577
iron	71	246	214	60	92
unconditionally	47	0	392	335	338
tackled	13	48	126	799	360
A*B	44	194	137	704	598
powers	14	86	314	325	238
youre	47	200	493	504	469
importable	15	135	183	777	803
rewrite	76	48	65	306	360
30.0	41	266	324	200	252
longitudes	39	149	279	766	573
2.7.10	19	7	417	13	972
2.7.11	19	7	417	13	644
inherit	15	220	329	663	720
x.hour	64	150	10	772	838
__main__	15	135	364	777	406
Instead	47	0	392	678	544
overlays	59	52	495	51	177
sub-object	29	188	447	570	450
y-1	68	201	426	67	62
forced	2	0	392	91	621
ponder	88	272	5	257	606
customise	5	23	457	306	608
genuine	94	152	147	145	908
Declaring	34	77	0	73	336
Vectorizing	76	179	169	264	145
indexer	94	111	115	369	160
indexes	78	100	131	522	944
np.nonzero()	42	30	14	358	244
Vs	38	162	191	61	837
text's	5	148	284	245	479
forces	2	215	491	174	621
indexed	2	265	328	98	356
Vt	85	270	472	467	597
matplotlib.basemap	39	52	495	199	177
circles	59	117	433	32	177
optimizer	77	98	458	279	438
optimizes	76	51	65	169	730
distracts	18	225	5	419	81
singly-indexed	43	265	75	771	356
supress	47	48	392	251	835
extending	2	116	145	91	417
Python27\lib\matplotlib\	37	250	27	475	194
0-based	42	111	216	369	77
phase	20	93	425	191	344
4.1.2	84	7	33	590	322
2013-10-16	53	69	119	155	775
2013-10-17	54	69	119	158	126
fitter	77	124	458	324	438
incomplete	57	235	342	450	548
natsort	43	265	72	683	956
inferred	2	215	328	514	187
newcomers	18	225	229	444	264
wildcard	15	135	319	777	823
xlim_changed	29	1	188	149	282
B-splines	72	165	15	235	570
fitted	77	124	132	324	4
decidedly	88	272	5	419	604
matplotlib.artist	15	135	319	777	823
triang	46	36	294	653	488
yeh	24	200	21	504	991
ambiguously	94	94	147	514	890
stats.f_oneway	90	297	13	10	146
respectfully	18	200	490	504	991
.dot()	60	292	137	348	751
a.copy()	42	227	361	212	273
horizontalalignment=	46	226	494	316	348
Powell	60	124	458	324	438
toast	90	297	26	145	228
10,100	75	243	385	425	810
index_col=1	53	139	42	250	775
Dark2	46	39	294	653	488
600000	21	160	234	557	655
pursuing	18	225	5	419	53
Sven's	4	17	254	710	441
300x300	21	205	251	45	252
Level	30	271	159	582	38
CULA	60	296	102	450	751
preferred	88	257	61	675	327
kinks	72	117	231	235	102
2.3.10	35	122	156	9	376
Reputation	18	15	490	472	623
ax.contourf	46	203	348	46	430
to_sql	52	171	473	128	88
mainwindow	29	187	128	236	954
ytes	3	291	141	266	103
pearson	77	270	472	784	662
numpy-ish	88	48	61	675	327
2:10	90	297	257	332	995
font.serif	45	230	448	767	909
417	37	3	27	187	194
410	21	223	234	196	252
411	54	3	101	297	158
412	54	3	101	297	158
analytical	77	98	38	279	809
Perez	13	23	138	97	398
implication	12	59	5	419	908
pd.value_counts	64	157	418	683	48
explanations	11	173	389	763	867
steam	59	48	126	51	360
3:00	99	140	453	525	762
bfield	41	35	177	282	397
erroneous	6	37	301	618	120
A_array	74	37	361	699	273
Branch	79	271	159	519	653
askewchan	4	121	264	646	500
scipy.cluster	81	270	472	203	662
shared-memory	76	26	65	169	730
observed	81	21	409	44	162
analytics	13	26	126	344	377
complex64	3	291	141	597	969
-lgomp	7	163	276	326	915
axis.py	37	250	475	314	173
haOpen0	86	129	256	28	48
Auto	38	168	186	341	353
keep_default_na	52	185	334	269	793
scipy.interpolate.griddata	72	165	15	235	570
%len	90	195	13	255	744
45K	21	190	234	557	42
block_size	75	227	385	0	486
cax.get_yticklabels()	46	226	494	46	348
pd.DataFrame.plot()	59	23	19	97	371
clued	4	225	490	567	81
26min	95	181	373	90	517
maximums	81	100	266	588	283
read_json()	43	265	28	24	793
time_text	29	203	348	236	444
custom.css	55	132	352	113	798
borehole	79	228	487	27	1
preprocessor	76	51	65	257	730
unfold	2	265	456	405	356
clues	11	173	389	763	867
tupled	74	233	328	98	336
intelligent	88	257	61	675	31
negatively	77	183	231	783	738
received	63	264	292	582	888
ill	24	200	232	567	469
param_1	15	40	181	777	406
pd.dataframe	69	265	303	574	739
param_2	15	40	181	777	406
Scalars	38	162	191	61	890
60.8	90	297	26	10	744
misunderstand	47	200	490	424	835
receives	2	215	491	174	92
receiver	81	246	58	428	949
unlinked	5	288	32	449	884
60.0	96	266	324	695	421
widen	59	52	32	19	884
timescale	59	147	233	101	394
ind_pos	90	297	13	10	995
oa_ndim	27	260	431	21	773
inc()	3	67	261	15	235
df.low	78	204	338	616	456
wider	59	170	284	245	714
ETH	48	144	335	621	502
dataframe.to_csv	52	10	28	712	261
ETL	13	26	126	203	765
speak	13	120	212	144	53
numpy.mean()	60	40	103	784	709
trickery	76	94	118	169	734
engines	71	171	126	128	959
itertools.cycle	31	1	81	648	608
list-comp	65	233	81	648	526
comb.ix	90	297	13	239	227
3-12	81	21	266	621	603
3-10	21	160	338	167	326
canopy	67	151	210	351	104
thrice	21	190	338	557	326
39906	44	205	251	196	357
90th	99	159	173	104	459
concerning	50	264	60	252	371
subset_b	27	260	431	234	945
subset_a	27	100	95	18	866
savez_compressed	71	153	336	702	306
Arbitrary	69	179	169	61	63
reobsmaf	53	139	51	448	199
apply_along_axis	42	27	14	313	244
*exp	96	201	18	173	62
ident	90	54	257	332	995
engine=	52	185	28	121	971
pd.MultiIndex.from_product()	43	265	72	771	439
B.T	44	194	137	704	598
with-python3	67	112	276	57	334
ax.set_ylim()	5	148	457	558	844
reedit	18	200	490	567	81
cv2.fitEllipse	41	6	251	200	397
mistake	24	200	179	504	991
single-dimensional	34	77	0	73	694
h_x	3	67	261	146	498
Googling	50	264	393	75	564
10-digit	78	42	131	64	944
brake	57	229	457	306	439
setdiff1d	42	27	286	358	244
b'a	86	129	136	211	66
b'c	86	181	272	211	199
Around	21	190	234	127	42
pyconfig.h	55	132	352	384	305
b's	78	204	338	616	456
descend	50	37	25	122	769
ANOTHER	30	212	55	136	965
accumulating	2	116	145	573	531
memory-hungry	10	272	409	334	604
decibel	20	93	275	191	344
outter	10	263	131	522	207
infeasible	10	42	409	44	612
perimeter	39	149	279	733	102
independent	81	21	233	251	702
emphasise	12	183	5	630	563
nil	10	202	88	323	876
somethign	47	59	392	424	907
obfuscating	88	257	61	334	612
swell	40	246	355	167	92
outperformed	10	202	37	169	876
input_image.T	44	256	154	668	994
nix	40	119	429	288	478
HTML5	93	23	90	537	537
feature_matrix	68	32	154	545	486
trucks	79	160	173	64	326
nit	47	174	117	751	262
centred	81	288	266	122	884
hopping	50	48	126	630	31
final_df	48	204	74	339	502
ColumnDataSource	31	174	74	592	172
ragged	34	77	122	73	890
b'1	86	18	141	211	969
N=10000	10	160	37	323	655
centres	81	43	266	733	479
msvc9compiler.py	37	132	475	384	305
AppEngine	7	57	167	241	730
|#	86	89	163	211	66
long_scalars	63	86	478	582	350
quoted	61	58	443	539	501
Conclusions	47	21	392	91	338
1.37275	54	50	368	429	428
Ricardo	24	121	394	646	500
quotes	61	58	452	230	501
Zeros	69	162	191	61	837
my_structured_array	3	18	361	404	228
matplotlib.colors	31	135	294	97	873
clamped	81	170	266	391	283
bookmarked	24	109	229	444	264
2012-03-01	54	69	119	158	126
decomposing	60	194	280	431	485
plt.get_backend()	15	80	184	103	630
Preparing	13	26	495	203	537
Gah	24	200	493	504	991
evidenced	2	215	328	252	187
fixed-size	76	94	122	702	890
Unutbu	4	121	264	646	500
microcontroller	71	246	58	428	600
osname	15	135	184	777	823
ComplexWarning	63	175	135	130	389
sympy's	60	98	458	97	439
DBSCAN	77	168	186	705	899
set_xbound	5	148	253	558	844
dset	34	77	0	45	943
reusable	76	257	181	257	195
column_of_ints	53	139	51	448	821
hackish	88	257	61	675	695
texts	59	52	41	27	1
unfortunatly	10	272	118	44	863
colnum	53	123	51	339	779
536	54	3	101	429	862
535	54	3	101	187	428
533	37	250	27	187	194
532	54	50	101	429	428
530	54	3	101	429	399
invaluable	24	109	229	567	870
one-step	88	48	61	675	31
janky	88	48	61	799	31
539	54	50	368	429	428
538	54	3	101	429	862
dtype.type	3	220	329	15	235
City_2	54	3	101	187	158
exit()	29	187	128	764	954
IDL's	60	296	375	742	631
35133032	68	32	13	545	449
humor	45	230	448	767	909
cumcount	43	157	103	683	956
np.mgrid	90	293	286	74	146
Quandl	67	151	44	762	732
unavoidable	88	272	118	334	604
Ising	77	126	48	195	416
geocoding	71	116	50	60	92
School	95	268	318	686	517
plt	15	135	319	777	823
pls	57	222	463	293	729
repository	67	151	470	604	594
core.py	37	250	475	205	173
np.void	3	291	361	266	969
testers	35	26	63	516	285
plz	11	173	143	763	867
ply	57	37	222	699	451
Geodetic	39	149	279	298	573
binomial	77	214	132	147	162
taskset	45	112	276	499	315
sorce	15	174	222	36	262
OSTOP	53	123	42	250	82
properties	31	1	388	514	720
qcut	43	265	297	376	956
rmagic	40	141	375	364	632
__mul__	3	220	329	663	235
horizon	38	147	450	101	955
min_period	6	147	456	167	817
converterd	52	185	28	15	793
PyCUDA	7	51	345	2	730
beacuse	47	174	222	36	888
treble	20	93	425	507	344
considerations	12	183	134	552	783
xys	74	293	216	509	228
xyz	41	6	279	766	573
haskell	13	51	65	2	730
vline	31	1	388	236	879
pl.legend	46	226	494	316	649
spring_layout	31	79	41	400	234
C2059	63	176	164	582	572
.i	36	153	50	712	108
compression	71	153	446	702	457
subwindows	81	100	266	522	283
Matches	48	111	115	178	227
nodal	81	6	270	733	573
0,500	46	266	289	46	810
slowdowns	10	272	118	225	863
quirks	13	152	138	118	398
inset_axes	5	148	388	558	518
editions	84	57	167	241	321
chi2_contingency	60	296	102	742	709
xy1	34	293	0	107	228
xy2	96	201	426	560	13
sqlalchemy	71	171	473	128	88
lowess	72	124	382	742	438
same2	53	139	51	339	199
.............	90	54	257	332	995
parametrize	39	229	235	93	102
Been	11	173	393	75	564
emulates	60	296	375	742	631
astonished	50	120	114	35	907
pre-set	2	215	162	514	621
SAWarning	63	171	473	128	88
normalising	20	214	275	191	603
atbvec	44	205	251	196	357
mtx	41	6	216	200	336
Automating	69	21	233	251	71
pandas.core.series.TimeSeries	63	63	460	172	3
n_jobs=1	45	37	301	699	50
crystal	12	59	490	533	469
mth	41	6	177	107	13
perpetuity	81	147	450	101	145
Odo	35	171	303	128	457
unusually	12	152	409	144	84
Odd	50	215	292	210	120
text_factory	3	291	141	266	103
1.1.1	91	7	417	587	230
fulfills	12	183	291	170	148
1.1.2	84	57	167	301	321
Euclidian	39	270	472	264	662
1.1.7	91	7	417	13	644
abstract	13	257	5	257	612
TWO	30	212	55	136	965
Core2	84	127	2	410	580
conserved	78	117	131	32	944
weave.inline	7	51	428	215	915
score1	95	204	272	338	361
distributions	77	214	132	147	4
archive	71	153	470	604	306
Relative	38	162	191	61	837
CPython	7	51	428	2	730
stake	10	272	118	327	990
reality	21	190	258	557	604
Extending	69	179	169	478	145
holding	2	215	328	98	702
shrink	5	170	284	245	479
scored	79	228	487	480	285
Latex	93	230	448	767	909
T1.csv	78	144	195	765	502
Edit	4	17	254	710	560
Later	2	0	328	678	239
convincing	88	183	5	144	53
write-up	4	225	439	444	264
JoeCondron	4	121	264	646	500
scorer	77	168	487	480	285
Py3k	35	122	156	9	376
omega	96	201	177	560	142
LateX	93	230	448	767	909
DataFrame.query	65	174	14	751	262
abscissa	81	288	270	733	603
float-like	14	94	162	325	470
s.astype	64	18	163	548	172
datetime-like	94	63	68	426	452
np.random.seed	75	243	385	725	484
_method_i_do_not_have_access_to	34	40	444	236	709
data-coordinates	5	288	32	122	884
numpy.cumsum	42	269	403	784	244
EOF	63	11	199	582	136
switched	50	264	292	210	747
dance	50	264	301	407	120
EOM	99	140	453	198	687
EOL	24	121	264	646	500
switches	2	215	491	335	621
numpy.ravel()	42	30	396	566	595
Python26	67	132	152	384	305
Python27	55	132	386	326	305
keras	76	218	183	359	803
2011-01-10	99	253	453	525	419
devoted	18	193	372	387	219
x_test	27	256	74	668	994
DIRECTION	48	144	195	178	637
629.5080666666667	54	50	368	331	19
somthing	47	48	392	424	835
random_matrix	65	291	46	157	172
hovers	59	154	188	427	2
32bits	84	7	2	241	644
infinitesimally	81	170	266	391	176
take_last	6	47	334	269	73
Present	95	162	191	519	38
brown	95	117	427	32	198
subtrees	81	43	41	400	234
alpha=0	46	13	294	134	608
seemingly	50	152	301	618	120
alpha=1	46	39	73	316	198
foo.py	40	141	281	76	632
trouble	50	120	114	35	727
cPickle.dump	36	10	136	712	942
Quantal	91	122	167	664	230
aggressively	88	232	232	144	6
suprised	50	59	114	35	907
WILL	94	222	55	136	160
setitem	3	220	361	212	273
George	4	121	264	102	741
upper	81	288	25	122	979
hte	2	145	457	371	845
pd.concat	49	47	406	631	445
regret	24	200	114	504	53
gene1	78	204	195	178	944
8601	99	63	68	426	27
discover	50	232	232	144	53
hth	47	59	490	567	81
Rico	4	121	264	646	500
higher-order	60	98	458	742	782
Pyhton	57	57	342	450	59
Orange	71	26	303	60	92
rough	57	183	342	450	950
plt.hist()	42	14	297	171	956
LaTex	93	230	448	767	909
~500	21	190	234	557	42
trivial	88	257	61	334	612
assistance	11	173	389	763	867
rollup	13	120	126	407	765
_configtest	55	128	293	52	56
~50%	10	202	37	323	876
1016	37	250	27	187	194
1010	54	3	101	187	158
events_per_week	99	281	453	198	687
subdivided	81	43	270	733	301
predicting	77	168	186	705	646
350363	44	194	280	704	426
genes	79	144	195	27	944
Quiet	38	206	282	519	38
gawk	36	277	117	288	261
PEP8	18	225	5	145	195
Itertools	4	109	254	574	114
pause	29	187	128	123	55
0.16666667	90	54	257	713	744
rainflow	13	26	48	195	730
11000	21	266	370	391	252
Sobel	22	126	7	709	670
Timespan	99	138	66	789	739
ax.pcolormesh	31	13	294	653	271
avconv	93	61	315	571	872
Tomorrow	18	183	232	170	81
weakref	29	220	329	514	720
Dear	24	33	394	140	870
np.int64	3	291	141	266	969
complevel=9	36	10	446	36	369
country's	79	228	450	101	675
pancreatitis	95	181	373	686	340
GLM	77	168	132	249	443
__getslice__	3	220	329	663	235
0.11	91	122	156	587	626
marked	4	15	490	252	81
customised	31	23	457	97	9
sincerely	24	109	394	419	53
marker	59	52	433	134	608
data_lvl1	99	140	453	155	221
value=	86	287	260	85	496
skip_header=1	36	10	376	121	971
market	79	78	450	762	746
sys.exit	29	37	301	699	954
flavors	71	171	473	128	88
httpd	55	128	330	477	568
.cla()	5	203	348	577	430
Straightforward	2	17	254	91	621
dish_specific_perf	27	260	431	234	945
Si	77	183	487	783	162
pandas.Series.apply	47	174	392	424	262
https	40	141	281	390	632
lower_bounds	74	100	108	586	228
angels	81	147	270	733	301
reduceat	42	84	103	313	244
heart.groupby	53	123	51	197	199
club	79	228	487	480	675
pyqwt	93	23	63	537	398
Required	63	271	199	347	560
envelope	20	93	231	709	562
clue	11	173	143	763	652
clip_on=False	46	226	253	134	608
MultiIndex.from_tuples	43	47	72	683	526
Requires	91	122	156	664	230
numpy.real	60	29	14	313	396
frame_query	52	171	473	128	88
standings	79	78	75	706	356
flavor=	52	171	473	343	369
scipy.linalg.toeplitz	42	194	280	313	598
Down	38	271	282	281	38
.unstack()	64	150	256	197	48
matplotlib.mlab.rec_groupby	43	264	14	424	956
1234567890	3	174	162	355	549
f.e.	22	248	233	571	54
concatenate()	42	30	286	74	595
pyplot.subplots()	31	1	388	399	879
cygdrive	55	128	330	477	568
pauses	29	187	128	764	954
re-implement	76	51	65	663	417
paused	29	187	128	149	2
abort	40	37	301	764	954
posing	18	225	45	472	922
refine	57	17	254	306	81
ipython_notebook_config.py	45	132	352	775	798
fortunately	24	200	493	210	747
non-business	99	140	453	109	27
write	47	229	232	306	439
??	47	174	392	751	835
.base	3	220	361	138	273
=9	85	174	419	751	192
sampled_vec	34	100	108	404	694
southern	39	149	279	322	586
=8	44	205	370	5	192
?.	47	168	186	705	835
0.71	54	108	23	8	399
?,	47	174	392	91	835
0.75	96	266	324	695	421
0.79	54	108	23	8	399
0.78	54	108	300	8	139
annotation	59	154	32	19	518
?!	47	174	392	751	835
400x400	34	126	258	45	943
whenever	47	0	392	335	769
futures	99	78	450	762	746
doc's	88	152	5	419	53
#include	55	176	44	215	305
automatically	2	215	457	335	621
TitleLevel	48	123	486	197	637
msvcr90.dll	67	132	152	664	206
yhat's	13	23	393	75	371
McKinney	4	224	372	94	689
typical	12	21	342	203	950
submatrices	34	77	131	88	943
(-:	24	109	229	444	469
generic_filter	60	27	382	313	396
.1f	86	129	465	137	347
a.item	68	227	385	617	486
my_img	75	90	246	0	357
ALLOWANCE	78	204	46	391	361
tending	10	202	314	391	876
1831	54	170	266	391	361
curly	61	58	452	230	298
arduino	40	246	58	428	600
Delhi	21	223	234	557	252
scipy.interpolate.interp1d()	72	165	15	235	301
NaturalNameWarning	94	211	74	36	160
multiline	61	58	452	539	501
2400	81	288	266	200	949
refbase	78	49	456	355	260
m_2	85	6	370	5	192
m_1	85	6	370	5	192
.tolist()	64	233	74	489	526
inefficiency	10	272	118	552	863
.12	91	122	156	587	626
.13	91	122	156	587	626
linalg.lstsq	60	296	102	324	751
Ghostscript	67	61	315	99	872
.16	68	266	324	8	421
disparate	10	188	258	169	863
.15	91	106	23	695	797
Looked	50	264	393	75	564
gufunc	76	51	65	169	915
identically	2	21	233	251	694
key=itemgetter	75	32	54	545	486
superset	76	94	329	514	734
provision	61	51	65	697	31
discuss	18	225	220	144	219
freqz	60	296	375	742	631
subf	78	40	181	396	406
m_i	85	201	370	560	142
splines	72	165	15	235	438
slurp	71	153	50	423	108
james	55	128	330	477	568
anonymize	57	239	463	37	451
.to_timestamp	64	287	256	250	997
DT	64	281	68	551	390
orthonormal	85	194	280	431	485
set_xdata	31	1	388	399	958
Cursors	59	52	32	51	884
run_code	37	250	27	475	194
colororder	5	13	383	592	879
last	78	263	338	616	456
s=500	46	39	73	316	649
cairo	93	80	315	435	591
snapshots	40	187	429	609	537
PyArrayObject*	3	67	261	157	498
backport	35	26	63	516	594
u'Open	53	139	42	250	199
operand	63	44	460	172	772
wavelength	20	6	425	336	344
expanding_mean	43	157	103	784	956
dirname	36	10	489	712	261
accomplish	11	48	389	675	360
numpy.repeat()	42	292	88	404	581
parallelogram	39	149	438	733	116
f*x	14	86	314	391	84
test.jpg	36	90	246	141	942
PandasSQLAlchemy	35	122	156	9	376
lt.get_cmap	46	36	73	653	488
grid-like	2	21	328	98	177
GNUplot	13	26	63	118	410
_collapse	63	44	460	15	709
512*512	21	223	258	45	252
+03	90	54	257	713	776
data.head()	57	37	74	37	975
array-based	76	257	61	675	612
+05	54	54	257	713	776
x*	96	201	18	173	62
numpy.i	7	67	320	312	498
couldn	50	264	393	75	564
honest	88	59	5	419	53
inverts	34	100	95	18	414
w_avg	68	186	318	8	775
numpy.take	42	27	205	358	951
2013-02-03	99	69	119	155	256
initial	12	21	409	91	563
625	78	204	338	616	456
624	21	243	46	196	484
_never_	42	232	232	306	439
variables	2	21	181	251	195
There	47	0	392	678	544
yourself	47	232	232	306	439
Implot	59	52	32	51	884
DEPENDENCIES	30	212	368	429	428
column_c	95	138	335	168	653
column_a	79	138	173	621	459
qtr	48	281	486	185	779
angular	20	93	425	191	344
Qt4	93	80	104	368	591
Qt5	93	122	104	368	591
set_xticks	5	148	363	558	844
dayfirst	52	185	28	121	793
traction	13	232	5	257	874
up-down	22	117	25	122	979
column_A	53	139	51	417	821
plot-directive	93	57	90	537	537
IPython-notebook	93	187	495	51	59
theano's	47	21	392	630	835
Av_density	95	138	335	168	497
column_1	86	18	141	682	199
that	47	0	392	91	338
variable1	48	123	486	339	682
thay	88	59	493	504	469
eliminates	2	263	491	174	621
ax.get_yaxis()	46	148	363	46	430
Magnitude	38	206	231	783	738
savetxt	36	153	336	137	306
than	47	0	392	91	612
semantics	76	94	147	145	908
Btw	47	0	392	678	544
thumbnails	93	23	90	97	537
accordance	4	235	342	252	552
numpy.average	60	269	103	784	396
Annoyingly	50	232	232	407	469
sfcube	74	293	0	509	228
Qty	48	138	159	178	637
accessed	2	215	328	98	187
180000	21	205	251	196	252
xcorr	20	93	425	336	344
remained	50	264	292	210	59
ticklabel	5	148	32	19	844
departure	79	78	450	101	955
Concentration	95	49	456	281	517
invalidates	18	43	232	170	81
recover	2	229	328	98	338
Boxplot	69	14	191	209	837
symmetrized	60	194	472	391	192
lumpy	81	206	495	147	71
pixel-by-pixel	22	126	7	709	670
computationally	76	272	118	334	612
0-th	34	77	216	616	520
callback	29	187	128	149	282
terrific	24	109	229	444	264
nuances	13	23	212	118	606
ascending=0	64	150	256	250	775
online	50	193	393	75	564
similiar	47	264	393	630	564
ORIGINAL	30	212	55	136	965
MxNx3	22	4	381	438	672
begin	47	232	392	91	338
Linux	84	7	432	301	156
cogroup	43	157	14	574	734
algebraic	76	42	38	279	809
a.transpose()	44	30	137	5	598
script1.py	36	10	489	712	942
Winpython	67	141	210	351	152
down-sampling	22	126	7	709	562
thousands=	52	185	376	121	971
linecache	76	272	81	306	439
professional	13	120	212	739	852
matplotlib-1.3.1	84	57	432	301	791
filing	35	122	220	292	106
clustermap	31	14	383	568	710
end-up	81	170	266	391	769
right-handed	39	149	438	122	979
notations	60	296	26	74	123
line.split()	75	233	54	690	526
Role	38	271	282	519	38
Describing	69	193	450	387	114
Roll	48	144	337	276	637
crashing	40	37	301	764	954
aint	47	59	392	630	469
GetPos	31	1	444	514	444
title	5	52	32	19	518
disables	29	154	491	174	621
WARNING	63	176	397	696	136
threefold	12	235	342	552	950
nonzero()	42	27	95	358	244
TransformedBbox	15	135	319	777	873
oscilloscope	20	246	58	428	600
read()	36	58	336	589	942
Python-Numpy	76	272	429	697	169
.iloc()	94	111	115	369	227
c_col1	78	144	195	178	944
word-topic	79	214	131	170	1
gist_rainbow_r	22	4	427	438	198
differentiating	81	43	409	709	562
MiniBatchKMeans	77	168	186	705	646
re.search	86	89	163	340	66
Pardon	11	120	179	739	67
textpath	15	135	44	777	823
Felix	4	121	264	102	500
reorganized	2	116	337	405	356
iqt	78	204	419	198	361
decompressing	71	153	336	702	306
pyplot.figure()	29	203	348	123	55
parenthesized	65	233	95	15	890
HDFView	71	153	50	423	457
matplotlib.interactive	45	203	348	123	55
color-mapped	22	4	266	438	672
SMSx	29	40	444	236	406
namely	47	21	392	91	702
transpose()	42	30	396	74	520
re-drawing	59	154	188	123	203
scrolls	59	154	188	427	2
LDA	77	168	186	705	899
dtype.names	3	18	162	514	470
workbooks	71	153	86	638	561
dst_ds	86	174	117	211	486
ascending=True	64	150	406	631	294
3	90	205	257	196	357
jth	74	195	216	255	577
mpl.dates.date2num	65	63	68	426	390
yte	14	291	85	608	103
notice	47	0	392	210	120
benchmarks	10	202	37	534	783
Johnson	4	121	264	102	741
prettiest	88	257	61	675	695
analyzer	20	246	58	428	949
analyzes	7	51	65	2	730
QualityIssue	53	123	51	339	779
random.sample	75	243	81	725	484
capstyle	31	1	388	134	608
analyzed	79	246	206	98	187
March	99	182	318	109	94
Arno	84	230	448	767	909
non-printing	61	58	443	539	501
discernible	12	170	409	44	576
non-Chinese	61	49	456	355	517
Give	57	235	463	37	451
dgesdd	60	296	102	431	751
Primary	30	271	373	281	38
wheels	67	151	470	219	594
groupby	43	157	103	683	956
df.diff()	27	29	431	234	945
nearby	39	43	235	733	102
Interactor	78	144	195	178	637
x-x1	96	201	426	560	62
df.index.time	53	139	256	72	390
np.errstate	45	68	334	85	350
SNR2	29	40	444	236	622
couldn't	50	264	393	75	564
MulitIndex	43	265	72	771	356
attendframe.yes.str.split	53	150	10	772	838
cycling	81	116	145	573	531
gboffi	4	121	264	646	500
cares	18	59	5	419	53
invert	34	194	280	431	485
oder	47	229	392	91	338
cared	47	0	14	630	439
Beta	77	214	132	467	162
outweighed	10	272	118	44	576
multi_line	2	265	233	771	356
critieria	2	111	95	771	36
specgram	20	93	425	191	627
self.fig	29	203	348	577	444
two-liner	88	48	61	675	612
external	71	119	90	609	537
InvalidIndexError	63	44	199	582	183
Browsing	50	193	393	75	564
matrixlib	55	128	330	205	461
animate()	31	40	444	236	444
13:45	99	140	453	198	687
Jianxun	24	121	264	646	500
Kenneth	38	246	282	60	92
className	29	187	117	751	434
right=1	46	284	253	46	430
ArcPy	38	206	48	722	353
coolest	88	257	5	419	612
suse	84	57	167	241	321
stdout	40	187	489	288	942
valgrind	40	277	429	225	169
100th	21	160	234	391	176
Override	3	220	329	514	720
datetime.combine	43	63	68	426	452
awhile	50	264	114	407	64
worry	12	152	5	419	53
Complete	57	235	463	160	607
colormesh	72	13	29	199	627
cc1	63	176	397	582	136
scipy.stats.sem	15	135	319	777	823
eta	96	201	177	560	142
Supposing	47	21	131	98	927
CSV's	71	153	50	60	108
xticks()	5	148	363	558	844
\matplotlib\	37	250	27	314	889
investigated	50	264	393	75	564
per-se	10	272	118	169	863
Series.diff	42	157	103	683	956
initialization	2	40	444	514	957
ACCEPTS	95	174	117	751	262
L	85	174	419	5	192
pwfs2Dates	78	233	216	522	336
matplotlib.pyplot.hist	31	14	297	171	710
mytest.csv	48	49	74	339	502
charges	41	6	239	107	949
Complexity	10	272	118	127	863
tar.gz	67	151	470	604	104
agreeing	50	59	114	272	907
data_mat	44	256	251	196	994
coordinate	39	149	438	766	573
defers	3	220	329	663	461
itertools.accumulate	27	29	403	65	486
ccc	53	181	42	11	497
charged	39	246	48	195	416
heaps	24	109	229	444	870
You're	47	0	445	678	908
heapq	76	27	349	327	657
Number	95	162	191	789	698
audioop	76	59	65	630	31
knowledgeable	18	225	45	419	53
heapy	40	127	355	159	169
milestone	35	281	220	292	106
adjusted	81	170	284	245	479
bitmap	22	61	381	571	593
libfreetype6-dev	67	151	327	232	334
groupby.apply()	43	157	103	276	956
mayavi2	13	23	63	97	398
range_list	90	54	13	332	744
powerset	76	116	131	522	207
np.add.reduce	27	269	403	65	598
answerable	18	225	45	527	219
numpy.arrays	65	94	14	404	694
staging	71	119	303	609	377
OPENED	54	50	368	331	19
thinking	50	59	114	35	907
unpickler	3	94	329	9	720
improvement	10	202	37	225	990
subversion	71	26	63	697	594
inner	76	263	131	574	207
600,300	44	205	251	5	357
cb	46	35	289	577	430
.14	91	7	156	587	230
unpickled	29	218	183	359	803
571	54	3	101	187	158
np.setdiff1d	42	27	286	358	146
seams	12	59	301	618	888
item-by-item	76	94	118	750	207
pyplot.plot()	31	13	383	568	710
eventlist	2	218	328	335	180
allocates	3	188	447	570	581
early	35	122	220	407	769
warehouse	79	246	126	203	959
60GB	84	127	2	159	359
EDIT	4	235	254	347	560
velocities	39	126	206	93	949
interleave	34	116	145	566	986
benefit	76	272	118	552	990
ts_placed	48	123	486	197	653
Anyways	24	200	394	567	469
animating	93	23	495	199	177
endorsed	4	193	19	387	114
Ram	84	127	2	410	580
900000	21	190	234	557	42
sp500.index	75	150	454	218	597
filled-in	6	263	7	709	670
RRmeanArray	74	297	4	255	835
questionnaire	79	78	487	60	285
Annotations	59	162	191	209	837
dfrand	6	68	12	130	910
jaccard	60	270	472	742	662
lu_solve	60	194	102	704	751
20x20	21	77	258	45	943
GroupByError	63	44	199	711	341
forks	29	218	183	359	803
0,1,100	96	29	289	282	810
axes()	31	226	348	577	508
1421	37	250	27	187	194
business	99	140	450	109	817
asap	24	109	229	667	870
tdf	74	95	74	690	779
Drive	55	239	259	769	568
1935	54	50	300	797	139
explicitely	2	0	457	335	621
np.isinf	27	260	431	234	945
Q-DEC	86	287	449	250	997
Mathematical	38	179	169	722	145
comparison	76	94	95	534	734
tailor	57	235	463	144	451
matplotlib.tri	39	149	495	199	627
journey	11	120	212	144	64
cbar	46	148	294	653	430
8.8	54	108	257	579	399
processor	84	127	2	410	580
side-note	4	121	264	252	552
colorConverter	31	13	383	592	608
plt.close	29	203	348	123	55
PyLint	35	120	220	697	53
you~	24	109	229	444	870
Add	69	31	237	530	911
Storm	40	119	429	609	377
elementary	18	120	179	739	67
yout	47	174	394	567	262
Adj	53	281	333	218	746
your	47	0	392	91	338
pylab.subplot	46	203	348	577	55
get_cmap	22	4	294	653	271
Worksheet	99	49	338	638	94
forwarded	40	119	429	697	732
area	59	117	433	32	177
assumed	47	215	292	210	747
unmodified	2	215	328	335	180
.cache	55	132	352	775	798
cats	79	228	206	480	852
-fPIC	55	128	293	52	56
non-math	45	230	448	767	909
Shifting	69	31	100	530	911
x.unique()	27	269	10	772	838
assumes	2	215	491	174	621
Manufacturer	53	139	256	250	775
fixture	79	228	487	101	675
J	85	195	419	5	192
paraphrase	57	235	342	170	950
Experience	81	228	233	621	702
non-float	3	94	162	130	470
posterior	77	214	132	783	175
single-label	76	111	26	369	734
Autocorrelation	38	179	169	264	698
factorized	2	215	131	251	187
ffast-math	7	202	428	215	915
nd.array	34	220	0	514	235
hash-based	76	94	122	169	734
Geo	95	138	159	519	428
cat1	48	123	335	647	653
cat2	95	123	335	647	653
one-character	61	58	443	539	260
df_all	90	174	74	239	995
Uncomment	47	37	338	592	888
tones	20	117	7	709	562
Loops	76	179	169	574	145
gibberish	61	58	301	401	501
ImageGrid	5	148	255	558	518
matplotlib.path.Path.contains_points	91	122	156	415	230
WinPython	19	7	210	241	644
scanner	39	246	206	428	949
win_amd64.whl	67	151	470	604	104
pseudo	57	235	342	450	950
fArray	90	67	257	157	498
np.sort()	47	59	396	699	640
1200	21	223	234	196	252
aplpy	93	61	381	571	54
scanned	50	264	393	75	564
blanked	2	264	292	210	747
Strike	53	123	51	339	779
gradients	20	98	231	709	989
Numerical	38	224	282	722	689
yob	43	49	456	355	908
Lab	22	4	381	438	672
prepend	61	263	452	539	9
Preprocessing	38	48	495	281	2
Lat	95	73	279	766	573
you	47	0	392	91	338
Law	77	98	248	652	738
src.linux-x86_64-2.7	55	128	293	52	325
yor	18	239	232	444	852
waitKey	22	90	128	200	2
Great	24	33	229	140	870
dynamically-named	12	152	181	145	195
np.histogramdd	42	27	14	313	439
whitespaces	61	58	452	539	501
set_clip_path	31	1	388	399	879
multidimension	34	77	0	73	694
Shift	69	31	275	281	769
grouped_df	64	150	256	551	48
plt.fill_between	46	39	383	505	649
s.t.	85	195	370	5	192
Pickle	71	153	122	702	306
2000-03-01	99	140	453	155	687
building	76	116	145	573	531
neighbour	72	43	15	152	570
Modern	7	230	448	767	909
plt.ylim()	5	148	253	558	161
PETSc	50	264	457	697	469
flush()	88	48	118	630	31
from_datetime	24	200	493	504	469
signalling	6	68	12	355	910
Elegant	69	252	169	574	233
Practice	24	109	229	444	469
.combine_first	53	139	256	455	496
unicodes	61	18	162	339	199
corret	81	21	392	91	835
datenums	31	63	68	426	745
np.cumsum()	42	157	14	313	956
RectBivariateSpline	72	165	15	235	570
fftpack	7	296	102	418	166
df_new	64	150	256	551	779
messy	88	257	61	334	695
managed	50	264	393	75	564
FFT-based	60	296	382	327	989
carpet	59	52	495	51	177
iconv	45	58	136	288	315
megaball	78	204	338	38	502
array-oriented	76	51	118	169	990
icons	93	154	188	427	796
.raw	71	61	315	99	593
graphicx	45	80	334	269	909
d_0	44	30	251	74	357
d_1	44	205	251	88	943
arbitary	81	286	270	733	301
ngrams	77	168	186	705	646
equivalency	76	94	95	18	866
nogil	76	67	261	312	915
c4	48	172	481	224	82
I'v	50	264	292	75	59
I's	4	121	264	646	552
ascending=False	64	150	406	197	48
Amount	48	138	159	467	653
I'd	47	0	392	143	338
balancing	77	42	126	44	765
new_ids_mat	90	54	257	10	585
1+3	96	201	426	560	13
1+2	68	54	257	397	744
I'm	47	59	392	630	907
I'l	24	109	394	444	870
Incomplete	38	206	191	61	38
new_name	64	150	256	551	48
assertAlmostEqual	14	86	314	325	549
df.index.astype	86	274	256	682	390
XYZ	39	6	279	766	573
Weighting	69	206	191	789	739
Const1	78	204	173	376	603
Const2	78	204	173	376	361
inversions	60	42	280	431	485
scipy.ndimage	72	165	7	235	570
i'll	24	200	232	567	469
GREAT	24	109	229	444	870
value's	78	43	266	466	283
precalculate	81	43	275	588	603
enhancement	35	122	220	292	106
Stochastic	38	206	169	722	145
qnames	86	129	117	211	66
snippets	57	235	342	450	451
df.columns.names	74	174	74	551	172
*100	75	32	10	425	838
pivot-table	81	265	126	203	356
consumers	76	218	183	445	803
Ofcourse	47	126	7	709	562
twos	74	100	216	484	228
math.log	27	29	10	173	838
Nth	81	21	275	616	456
S_xx_fft	96	201	18	173	62
lt.gca()	46	39	383	505	430
edited	4	200	490	567	81
logspace	72	219	297	171	810
PyObject_RichCompareBool	65	94	329	313	866
modular	76	42	61	458	238
cStringIO.StringIO()	47	48	457	306	54
trunk	35	122	156	292	934
i.e	47	21	233	251	702
.tight_layout()	46	203	348	123	55
trunc	14	86	314	325	549
StringIO	36	153	336	712	942
re-merge	12	232	232	306	563
df.sum()	64	150	74	551	48
exceptionally	88	120	114	35	727
experimenting	50	120	393	35	564
amount	21	272	355	44	863
filter()	65	157	14	15	709
uniquely	48	144	456	787	183
pd.Dataframe	48	281	74	551	779
colourmaps	13	23	495	199	371
shuffle	34	77	396	566	520
like-indexed	43	157	103	683	956
ressources	35	26	63	697	398
cosmetic	12	152	134	552	606
activity_month	64	281	337	197	82
analyzing	13	246	126	203	765
trained	77	168	186	705	646
y_int	41	6	177	282	201
flaws	12	152	5	552	606
-ld	55	128	330	477	568
_dotblas.c	55	128	293	52	56
generate	2	21	233	98	338
.hist()	64	14	256	551	779
%M	86	274	465	679	151
assessor	79	228	487	480	285
LEFT	49	271	182	379	502
libpng-1.5.9	67	151	167	664	230
=None	45	80	334	269	906
Mathtext	93	230	448	767	909
preallocation	10	188	88	750	863
freq_177	34	100	361	404	336
np.flatnonzero	27	293	286	358	146
sns.lmplot	59	14	383	568	710
numpy.float64	3	18	460	172	787
single-file	47	57	167	697	732
index_col	52	185	28	121	971
cm.coolwarm	46	39	73	282	488
Height	95	138	159	519	38
outstanding	18	225	220	407	106
01-01	99	140	453	109	221
01-04	99	140	318	372	221
%%timeit	10	277	281	534	706
n+m	10	194	356	327	668
set_position()	5	13	388	558	879
row_indexer	90	95	115	794	227
snipped	57	235	342	450	59
np.piecewise	42	40	14	396	622
rowspan	78	13	216	405	518
processors	84	127	345	445	580
b-spline	72	165	15	235	570
PGM	22	248	381	571	593
spreadsheet	71	153	86	638	561
stayed	10	264	292	210	747
snippet	57	235	342	450	950
LDFLAGS	55	132	352	113	137
\pandas\core\frame	37	250	135	475	194
textview	71	187	457	335	180
tried	50	264	292	75	564
rude	18	200	490	419	991
Multiplicity	78	100	216	616	456
derived	2	215	328	98	187
1900-01-01	99	140	453	155	687
n+1	75	195	370	255	192
tries	2	215	491	174	621
derives	76	215	181	514	720
col_idx	75	293	4	509	146
a	47	21	392	91	338
contrived	57	257	342	450	950
x_percents	41	6	177	107	577
3118	3	67	261	312	957
Sweet	24	33	229	140	870
Sweep	38	206	191	789	739
scipy.ndimage.measurements.label	72	79	7	152	670
bashing	50	120	114	35	64
egg	67	151	210	604	305
MIN	53	139	51	682	199
MIA	59	117	433	32	714
restored	2	215	328	335	180
annoyingly	88	59	147	334	604
ndimage.generic_filter	60	40	14	554	709
committed	35	122	60	9	376
minmax	79	193	19	519	38
numpy.savez()	71	153	336	423	306
MIT	38	224	282	94	689
dummies	79	228	487	341	443
a.reshape	44	227	228	0	263
nbagg	93	80	315	435	591
varies_in_dim	44	205	251	196	994
_ref_locs	63	18	460	172	787
lateral	39	170	235	733	562
sqldf	15	135	319	777	823
ticklabels	5	148	32	19	884
optimisations	7	51	428	225	915
actually	47	59	392	91	908
fig.canvas.blit	29	203	348	123	55
Python+Numpy	7	51	65	2	730
1000's	21	190	234	557	326
recombined	34	116	145	706	986
motivated	18	225	5	220	53
data.replace	53	139	42	417	775
autocorrelations	79	147	173	101	675
model.predict	90	256	74	668	994
YlGnBu	46	39	73	316	488
df_p	64	39	256	551	649
motivates	18	225	490	419	81
view_as_blocks	34	193	382	313	396
Pillow	22	248	381	141	722
image.jpg	86	90	246	751	858
decimal	14	86	314	325	549
resized	29	154	284	245	203
semiannual	20	147	450	48	817
JyNI	35	26	63	2	398
Entire	30	162	191	127	38
-name	55	128	330	477	568
Handling	69	31	100	530	316
size=20	46	226	494	316	348
_dotproduct	44	195	177	5	598
quantum	13	42	48	195	416
beyond	12	170	409	91	394
todo	18	225	114	407	64
event	29	187	128	149	282
v0.16.2	91	122	156	587	376
Timedelta	94	63	68	426	452
forward-fill	43	85	75	700	73
regexes	61	94	5	589	439
np19py27_p0	91	7	417	13	644
Davidmh	24	121	394	646	500
A.shape	44	227	228	0	146
0.8.1	91	122	156	587	626
multilabel	77	168	186	705	646
Hour	48	138	66	198	653
TIFF	22	248	381	571	593
According	47	193	19	387	371
Ignore	50	263	490	618	991
Line2D	31	1	388	399	879
earliest	79	78	450	101	955
stock_name	48	123	486	339	682
glumpy	13	23	63	97	398
mathlab	57	235	342	450	108
numpy.arctan2	60	40	444	396	622
scipy.io.netcdf	15	135	336	735	957
datarame	6	49	456	405	356
scaley=False	46	284	253	757	430
dist-packages	55	128	52	151	372
expecting	47	59	392	424	907
non-answer	88	257	5	419	386
undergo	35	122	138	9	376
interact	93	187	188	51	2
sacrifice	88	272	118	458	990
ecatmur's	4	17	254	710	441
Cytoscape	71	79	19	97	234
misc	55	128	330	477	568
Maps	38	206	282	277	689
prepends	61	215	162	269	260
re-ordering	12	48	118	566	863
miss	50	59	301	424	835
decimals=3	68	54	257	545	744
i-1	74	195	4	255	577
perturbation	20	98	458	279	738
np.reshape	44	227	228	0	263
keypoints	71	248	381	141	722
pinned	2	188	447	570	450
overlaying	59	52	433	32	177
mosaic	95	14	335	647	710
dt=	85	201	426	560	192
Offset	69	162	191	789	837
dt2	48	281	486	788	211
dt1	48	281	272	788	211
Improved	4	17	254	710	81
mipmap	2	154	25	122	2
Greets	47	21	392	91	338
blindly	47	232	392	144	451
scipy.interpolate.splprep	72	165	15	235	438
translation	12	42	248	191	238
OUTCOME	30	271	342	347	560
dataframe_one	78	49	131	405	356
std	60	219	173	784	454
_my_func	42	40	444	396	709
stl	47	48	261	312	957
dta	71	153	336	423	561
answer's	4	121	254	710	441
intensities	22	4	7	438	672
str	86	18	163	682	172
rroowwllaanndd	24	121	264	646	440
Tkinter.py	37	250	475	475	173
alongside	2	215	233	98	702
svds	60	296	102	431	751
Regions	22	117	7	709	562
=100	53	139	51	417	821
numpy.ufunc	3	220	329	514	235
INPLACE_ARRAY1	3	67	261	157	498
pytable	71	153	446	702	457
concentration	81	73	279	621	675
GraphCanvas	31	1	284	245	444
Switching	2	215	237	335	59
mpl_toolkits.axes_grid1	5	148	363	558	518
rebin	72	165	270	733	301
Users	55	128	82	477	568
lib	55	128	52	151	372
unicode()	61	58	443	15	260
lil	34	292	64	348	218
lim	81	288	266	391	176
speculative	12	183	5	144	493
JointGrid	31	14	383	568	958
x_i	85	241	370	107	142
posarray	78	49	239	616	995
Generated	38	162	191	789	837
np.add.reduceat	42	27	286	358	244
method=nearest	6	68	12	130	910
useless	12	152	5	334	908
lis	74	233	54	690	577
extrapolating	72	165	15	733	301
sve2_all	53	139	51	417	821
With	47	0	392	678	544
boxplot	59	14	383	568	710
np.fft.fftfreq	20	93	425	336	344
Head	69	138	191	789	739
diferent	69	21	233	251	713
alpha	22	4	294	438	672
4.6.3	84	163	33	590	322
Called	30	37	55	699	888
i3	84	127	46	196	322
mobile	13	246	58	609	852
performances	10	272	118	225	990
clear	88	59	490	144	907
pyqtgraph	93	23	104	368	537
snapping	59	170	284	245	479
unstacked	59	265	75	771	97
clean	88	232	61	675	31
hyper	39	126	235	733	102
non-invertible	60	194	280	431	485
commas	61	58	452	230	501
x_t	85	201	426	560	142
buy_groups	48	233	158	787	502
impressively	10	202	37	710	876
.scatter	46	39	73	316	649
9.751	54	50	368	331	19
parameters	77	124	458	396	738
verison	91	122	156	587	230
nonposy=	45	226	334	269	906
Marcin	24	121	264	646	500
flights	74	95	108	239	995
separetely	2	116	145	706	338
subsection	2	116	145	573	531
df.ffill()	6	157	72	683	956
circle	39	149	438	93	116
darwin	55	128	33	590	56
Guys	24	109	394	567	870
savefig()	93	203	315	123	619
new_df	49	47	406	551	445
__file__	36	10	485	193	261
sub-classes	31	1	329	663	720
scipy.ndimage.uniform_filter	60	202	382	313	396
10:43	99	186	318	34	789
10:40	99	186	33	34	789
reorganise	2	116	145	405	356
-Wl	55	128	293	52	56
np.trapz	42	269	103	784	396
parameter1	48	123	486	197	779
Random	38	168	186	705	353
function_base.py	37	250	475	205	173
coincidence	50	59	147	210	908
np.lib.format.open_memmap	36	90	336	712	942
DEM_filename_list	74	174	392	424	835
MathJax	13	26	138	118	537
x	41	6	177	107	397
logical_and()	42	27	14	313	866
subscriptable	63	44	460	172	787
site.id	53	167	51	682	779
redefine	2	229	457	306	338
i-j	85	144	173	197	192
throwing	63	37	301	618	888
x-label	5	148	32	19	884
15Min	64	287	449	48	48
plausibly	88	17	232	334	81
plausible	88	152	409	334	84
s_id	48	118	195	178	637
np.random.random	75	243	385	425	484
numpy.linalg.inv()	60	296	102	431	751
Converters	52	185	28	121	793
ESRI	84	57	167	241	321
gravitation	77	42	48	195	416
DatetimeIndex	43	63	68	426	452
probable	12	183	5	170	84
min_coords	74	100	4	586	228
familiarity	13	120	212	419	727
Plz	11	109	229	444	870
downvoted	18	15	45	472	265
t^2	96	201	18	173	62
incompatibility	91	122	156	9	230
probably	88	0	392	630	908
Sans	45	230	448	654	909
intending	47	0	147	424	907
pdftops	93	61	315	99	374
4.8.2	19	7	33	590	322
dane	53	139	42	417	775
both	47	21	233	251	338
delimit	61	58	452	677	501
mega	21	190	258	127	252
Argmax	69	162	191	61	698
items()	65	233	81	648	311
i*	90	195	4	255	744
sensitive	12	183	409	44	84
preferrably	76	48	126	203	31
megs	21	190	355	159	359
quick-and-dirty	0	257	61	675	612
Scroll	59	154	188	427	781
np.fliplr	44	227	286	0	263
inverses	60	42	280	431	485
-2000	96	266	324	391	252
headed	48	49	25	86	502
UserID	48	123	486	197	653
manners	18	225	45	170	219
whatever	47	0	392	91	338
rename()	43	47	72	683	956
header	61	49	50	539	108
errors=	52	185	334	548	350
linux	84	119	432	301	156
data-frames	43	265	75	706	356
patch_artist=True	31	13	383	592	608
Broken	63	176	397	696	136
quantile	43	159	173	104	459
hold()	29	203	348	236	55
skewing	59	170	409	709	562
measure1	53	150	256	250	775
2014-02-24	99	274	68	679	221
territory	11	120	212	739	53
0004	54	50	368	429	428
numpy-based	76	17	254	534	783
dialogue	93	187	188	427	2
0000	54	3	340	297	399
0001	61	181	71	137	347
wx.Button	29	154	128	236	2
series.apply	43	157	103	683	956
imag	20	93	425	336	344
maxiter	96	35	177	396	201
0008	95	50	368	429	428
pct_change()	43	85	103	784	583
xTicks	68	32	289	28	810
determination	77	124	132	783	738
point's	39	43	239	733	573
???????	86	181	117	211	340
imap	65	27	81	648	311
nlayers	39	6	266	766	949
ReadTheDocs	93	57	90	604	537
Parray	3	220	329	514	720
inplace=True	64	47	406	548	294
animates	29	187	188	427	2
|Anaconda	19	7	33	13	972
sphericalrefraction	39	43	41	400	102
packbits	34	48	0	73	694
animated	93	52	495	51	54
clobbers	2	215	491	174	621
canvas.blit	46	203	348	123	55
TimeStamps	94	63	68	426	452
trading_days	49	281	486	631	82
Tkagg	93	187	104	368	591
scipy.sparse.block_diag	88	292	64	348	218
skype	18	225	143	170	852
np.linspace()	42	27	14	313	709
remapping	34	116	337	566	520
gimp	93	61	315	571	54
np.cross	42	30	137	74	263
pd.isnull	27	260	418	548	131
Jython	7	26	63	2	730
disutils	67	132	429	499	732
matplotlib.dates.YearLocator	5	148	363	558	844
reshape()	42	30	396	404	595
8:00	99	253	453	525	256
2014-07-01	99	69	119	155	256
FAR	30	212	55	136	965
5j	90	54	26	10	744
FAQ	35	193	372	387	704
Understanding	69	179	169	530	145
undirected	77	79	41	400	234
Hadn't	24	109	5	630	264
lat-long	39	149	279	733	573
Anand	24	121	264	646	500
.drop_duplicates()	49	47	295	631	73
axzoom	74	220	181	212	406
bonus	4	17	61	630	505
cleaning	50	116	145	573	531
superpose	59	52	433	32	177
C*D	85	194	272	5	598
Strongly	4	17	254	710	441
Distances	81	270	472	588	662
database	71	171	303	128	88
get_window_extent()	31	13	388	399	879
anxious	88	120	114	35	727
ext_data	78	49	222	252	315
RC1	91	7	417	587	230
paramters	20	214	132	783	575
savvy	13	120	212	739	727
colomns	43	265	337	771	356
gsl	7	163	428	215	915
scouring	11	173	393	75	564
line's	39	149	438	93	177
cout	86	129	117	185	262
CCW	39	149	438	298	116
CCM	54	50	300	158	139
ArcMap	40	57	167	697	321
CCD	39	126	58	45	949
DataFrame.from_records()	91	122	156	9	888
CCC	48	123	486	339	497
utctime	64	281	68	551	779
self.figure	46	35	348	577	430
un-pythonic	88	257	61	334	695
parray	74	195	4	509	725
0.70135	96	201	177	560	597
motivating	57	235	342	450	950
finalize	29	277	444	236	169
-isysroot	55	128	293	52	56
yourlist	90	174	117	751	262
contacts	79	228	206	480	682
verbosely	88	257	61	145	612
nginx	40	119	429	609	377
foo_list	74	195	54	690	577
crisp	59	43	41	32	234
plt.axvline	46	39	73	316	649
translucent	59	117	433	32	198
2015-03-20	99	140	453	198	687
2015-03-25	99	281	68	155	687
bisect_left	42	27	14	313	709
2015-03-28	54	69	119	158	126
translates	2	215	491	174	621
restack	48	265	75	706	356
translated	2	215	328	98	187
MAIN	30	212	55	136	965
numpy.arcsin	63	40	444	15	709
Little	38	271	282	519	517
scipy.stats.linregress	77	124	472	742	443
pool.map()	76	40	14	169	709
some	12	152	392	203	338
MKL_NUM_THREADS=1	40	132	352	113	315
urgent	11	225	5	419	53
Choose	38	206	237	281	71
*zip	75	39	289	46	486
voxel_matrix	90	297	13	545	744
groupby.sum()	10	292	64	348	218
23571	44	292	64	348	218
lineterminator	52	185	28	121	793
pyplot.quiver	59	52	495	199	177
id2	48	123	486	631	502
id1	48	123	486	631	82
two's	14	291	85	325	549
by()	78	204	338	338	361
train_length	81	219	314	391	603
bw_method	60	296	382	742	709
eating	10	127	355	159	863
.so	15	132	152	384	305
GeoTiff	71	248	214	571	593
.index()	42	27	95	18	244
PKG_CONFIG_PATH	67	132	352	113	137
infinitum	79	228	487	167	326
SciPy's	72	296	15	235	570
subtract	78	21	275	588	603
Comment	30	271	222	281	560
concretely	18	225	490	170	24
tracing	39	43	235	284	781
_read	37	250	27	314	194
.tofile()	60	296	336	742	942
in-depth	11	225	143	387	219
simulation	13	246	48	195	416
idm	85	194	356	224	15
matchesdf	53	139	51	448	821
idk	24	200	493	504	991
izip()	65	27	81	648	311
idf	64	123	74	197	779
ide	40	57	167	301	796
block	2	188	328	167	338
disclosure	35	235	220	450	106
Eli	4	193	372	387	704
dude	24	33	229	140	870
encircling	41	195	29	69	116
14.10	84	7	432	301	156
seasons	79	228	450	101	675
TclError	40	176	397	696	136
statistics	79	214	173	203	285
PythonQt	40	57	429	697	732
Subtraction	69	179	169	61	145
k-th	34	100	216	586	577
-Reina	88	17	490	630	469
add_artist	31	1	388	399	879
registered	35	215	188	149	187
KMeans	77	168	186	705	646
runnable	57	235	463	37	766
pympler	50	232	232	35	781
newer	91	122	156	587	230
numpy.isnan	27	260	418	18	866
Categoricals	94	222	446	702	160
crosstab	43	265	103	376	956
info	57	193	19	387	371
utc	99	63	68	426	27
compactly	88	257	61	675	612
restarted	40	141	281	76	954
stumbling	50	120	114	35	727
Terminal.app	40	141	429	76	632
Excerpt	38	193	19	387	689
argtypes	3	220	261	157	235
DataError	63	44	199	711	341
gevent	71	218	183	445	803
Perspective	38	224	282	94	689
infs	6	60	12	130	910
1048	99	69	318	155	256
extrapolate	72	165	15	235	301
D3.js	93	23	90	537	537
scipy.ndimage.gaussian_filter	20	93	382	191	396
beginpoints	48	281	449	276	817
matchTemplate	22	90	7	141	722
expand_dims	42	30	361	74	273
codecs.open	36	10	136	712	261
polygon	39	149	279	152	102
Wheezy	84	7	432	301	321
objection	12	152	134	552	31
nah	12	59	490	504	908
cmap=cm	46	39	73	316	649
nan	6	68	12	130	910
accross	50	264	275	167	603
A1	85	172	481	224	778
nas	47	0	392	335	835
-the	81	43	275	588	283
SecurityID	79	144	407	787	944
electrical	13	246	206	203	765
A4	85	223	207	45	943
.ps	93	61	315	99	374
A=	44	227	385	0	484
pandas	43	265	72	771	356
AA	85	204	419	467	497
draw	59	52	495	51	177
AB	85	194	419	5	497
Reverse	69	162	396	708	520
row-order	34	27	396	566	520
AF	3	18	74	266	969
AI	13	224	48	195	852
AH	24	200	493	504	991
AK	95	298	335	168	497
Lanczos	77	42	280	431	485
fewest	81	170	409	44	576
AN	30	212	55	136	965
AP	85	228	487	480	285
AS	30	212	182	136	737
AR	77	168	186	341	443
your_list	65	233	54	690	526
AV	50	232	222	697	315
Output	30	162	191	347	560
AZ	95	298	373	168	361
structure	71	116	122	203	457
cryptographic	12	183	48	725	162
Ab	44	194	280	5	485
Ad	48	144	195	178	653
practically	47	59	392	630	604
Ai	85	195	239	255	192
Ah	24	200	493	504	991
multi-type	34	188	122	404	694
JPEG-LS	22	248	381	571	593
youtube	13	224	372	94	704
math.h	7	51	428	2	915
An	47	0	342	678	544
Ap	21	190	131	522	944
As	47	0	392	678	544
neighbouring	39	43	7	733	670
At	47	0	392	678	544
Aw	24	59	394	567	469
Av	85	201	481	5	598
...........	68	174	117	690	262
Az	46	39	73	316	649
incrementing	2	116	275	573	531
Sell	48	298	419	178	637
stones	13	117	235	519	852
Timeit	10	202	274	534	783
co-author	13	43	41	400	234
GLIBC	7	163	152	241	850
replot	59	154	188	51	203
Rails	13	224	90	609	537
Connector	13	171	303	128	457
NumPythonic	42	257	61	675	327
proposition	24	17	254	710	441
salaries	79	256	487	480	994
Graphical	38	224	282	241	850
Returning	69	31	100	530	911
dy()	57	40	444	450	709
Benchmark	7	193	19	347	560
df.index.get_level_values	64	150	256	72	131
funcanimation	59	52	495	51	627
db_rating	53	95	51	239	821
GiB	21	127	355	159	359
0-60	99	140	453	198	687
non-gui	93	80	315	435	591
bidhigh	53	139	51	417	775
ISI_LOC	86	129	42	250	624
expert_level	48	49	337	405	502
unstructured	72	165	15	235	301
facebook	13	228	487	60	852
apt-get	67	151	327	232	334
matrices	34	292	280	431	485
y.iloc	90	54	13	10	744
to_csv()	52	185	28	24	793
libjpeg8-dev	67	151	327	232	334
exits	29	187	128	764	954
stiff	60	98	38	279	809
gender	79	228	487	647	653
button	29	154	188	427	2
hive	71	171	303	128	88
ndarray.view	3	220	361	404	235
2.29	10	160	274	323	655
Morphology	38	224	282	722	689
fit_transform()	43	256	186	705	646
inspection	12	37	301	618	371
set_dashes()	31	13	388	592	879
2.25	54	108	23	713	421
pylab.ion()	29	203	128	123	55
blitz	76	51	65	169	730
date_format=	52	274	465	679	369
Equipment	48	138	159	789	653
plt.get_cmap	46	36	294	653	488
preprocess	61	48	145	306	439
liner	88	257	61	675	327
out=c	44	227	137	0	598
out=a	75	227	385	0	598
coupon_test	53	123	51	339	779
plays	13	232	491	174	417
invertible	60	194	280	124	485
asfreq	43	85	449	48	817
ax.autoscale()	5	148	253	558	844
ELEM	79	49	239	514	702
unhelpful	18	225	490	284	120
Properly	69	162	191	209	837
poles	39	149	109	69	116
numpy.roots	60	98	458	396	622
data.json	36	10	136	712	261
_path.so	55	132	152	664	791
Volatility	76	94	329	514	720
block-by-block	76	272	118	169	863
.set_aspect	46	226	494	757	508
matlibplot	59	52	495	51	710
filings	79	228	450	510	675
Created	69	271	159	281	739
Creates	69	31	237	530	911
.size	27	269	54	690	172
df.drop	64	47	418	548	131
optimizers	77	98	458	279	438
scipy.ndimage.map_coordinates	72	165	15	235	570
vba	40	153	86	638	561
mpimg.imread	75	90	246	266	969
.......	95	298	373	686	340
ISO8601	61	63	162	426	260
dominators	78	100	148	522	283
=False	45	80	448	269	909
weren't	47	264	292	210	747
Arabic	93	79	41	400	234
hexagon	39	43	266	733	586
addresses	4	225	490	170	81
danger	12	152	60	799	120
numpy.ix_	42	30	286	74	368
Construct	69	31	100	530	911
Genius	24	33	229	140	870
addressed	35	225	60	799	81
boolean	42	111	95	18	866
........	30	174	117	751	858
ckdtree	10	202	37	152	570
.count()	64	150	256	197	48
MEETING	53	281	68	72	390
14s	10	160	274	323	655
metaphor	12	59	5	419	563
np.NaN	6	68	12	85	910
=len	68	32	54	545	577
vehicle	79	228	195	27	675
exhaustive	88	257	61	630	612
popped	29	187	128	764	954
becomes	2	21	491	174	338
mismatch	63	44	199	582	888
Wednesday	99	140	453	109	94
DictWriter	71	153	336	423	439
1th	78	204	216	616	456
25.4	54	108	101	297	399
detrending	77	93	382	191	738
Highest	69	162	191	61	698
LIKE	30	212	182	136	965
ride	78	263	338	588	456
)]``	64	32	431	234	945
subregion	79	214	487	480	167
Video	38	271	282	519	38
retried	91	122	156	587	230
ridx	74	293	54	690	146
Vote	18	15	45	472	922
ax.legend	46	226	494	46	348
painless	13	26	63	334	398
control	2	229	457	306	621
TOP	59	154	25	122	884
TOW	78	144	173	621	356
TOT	78	204	338	616	456
cross-section	43	265	75	771	921
TOO	88	257	61	334	604
idiomatically	88	48	61	675	327
1690784	95	204	373	168	361
confuses	88	59	491	145	621
stemmed	61	271	222	539	501
n_comp	10	170	409	44	576
uchar	74	174	145	522	228
Ensuring	2	215	392	91	621
FICO	79	228	487	621	675
2.675	14	29	314	173	549
re-use	76	272	457	306	195
Opportunity	30	212	182	136	965
4-element	34	77	0	73	336
OWNDATA	3	220	361	138	273
n.b.	47	200	490	567	81
Figured	50	200	114	210	747
ani.save	36	129	136	36	942
Alexis	24	109	394	140	500
Figures	93	154	104	537	728
Figure.add_subplot	31	13	388	558	879
pyplot.figure	46	203	348	577	430
-length	42	100	95	18	520
Dataset	69	162	191	127	837
735872.0	41	35	289	176	810
myFrame	64	139	406	551	779
hid	59	52	32	51	54
pandas.DateRange	43	63	72	426	390
bipartite	39	79	41	400	234
Py++	13	51	65	2	53
superimposing	59	52	32	122	479
parallelized	76	51	345	445	166
chrisb's	4	17	254	710	441
won't	47	0	392	143	338
cruise	39	170	206	93	949
Usage	30	162	191	127	560
converting	2	116	145	573	260
facilitates	76	94	65	169	734
Developers	38	224	372	387	689
WITH	30	212	182	136	965
Recently	50	264	292	75	747
Exchange	18	224	45	527	509
masses	81	43	266	27	336
notebooks	93	141	281	76	632
Display	69	31	100	209	911
\left	86	129	465	137	66
np.ndarrays	34	94	95	404	694
%timeit	10	277	274	534	706
subpanel	2	154	188	405	2
s_true	64	139	256	417	775
ALWAYS	94	222	147	369	160
Ids_cutoff	27	260	431	509	945
CV_32F	68	32	18	21	773
np.product	44	205	251	5	598
numpy.append	42	30	286	750	595
CV_32S	68	176	397	21	773
scipy.stats.norm	60	219	458	324	396
cohere()	29	40	444	15	709
front	2	263	25	122	338
Python27\Lib\	37	132	78	475	305
masters	13	120	212	35	852
x_value	41	6	438	107	116
nfl_frame	53	139	74	551	779
magnitude	20	170	425	191	576
midpoints	81	288	270	733	301
globe	39	73	279	322	586
144	21	223	298	318	158
encodings	61	58	443	539	501
numpy.get_include()	55	112	276	57	128
Selecting	69	31	100	530	911
list.sort()	65	27	349	15	640
strokes	59	117	433	134	54
plt.set_xlim	46	13	289	592	958
E712	12	152	95	18	866
JITing	76	51	65	169	990
inputted	61	49	328	98	713
PyOpenGL	7	57	65	2	730
high-performance	13	26	63	643	730
Embarked	53	139	51	668	779
np.ma.corrcoef	27	297	4	509	597
show()	29	203	128	123	55
undo	18	242	232	335	699
CPU-bound	76	272	345	445	803
attending	79	228	487	480	285
rdata	41	6	177	282	397
encoding=	52	10	376	121	971
149	54	3	298	187	158
20,000	21	190	234	557	42
FiPy	13	26	63	722	730
Python26\Lib\	37	250	386	475	194
set_visible	31	1	388	399	879
deprecated	35	122	156	415	376
C-array	3	188	162	514	235
Networks	38	224	282	94	689
dereferencing	2	48	445	61	187
mannually	59	229	457	335	835
hexadecimal	61	58	443	539	260
5-tuples	81	147	131	522	944
start_point	34	77	251	196	336
input.txt	36	10	376	294	261
ndim	3	220	361	404	235
JIRA	71	246	50	60	108
Gtk	93	187	104	368	591
arr	74	293	26	509	228
args.avg_window	46	203	348	46	172
array_agg	65	233	158	540	526
qcut()	6	157	456	376	956
quality	12	183	409	44	562
.pxd	7	132	330	215	957
)]`)	90	32	272	10	585
privacy	57	239	463	37	451
bears	12	225	490	170	563
adopted	4	264	372	252	552
Image.open()	22	90	381	141	942
')])`	86	18	272	682	178
99.9	86	174	117	185	262
Removing	69	31	100	530	911
Vals	48	123	486	197	362
99.5	81	266	266	104	176
final	2	21	342	91	338
]))]	90	32	13	545	744
Exception	63	44	199	582	183
fine-tuning	13	23	409	51	394
weekofyear	99	63	449	376	817
exactly	47	59	392	91	835
apologise	18	120	179	739	67
!	24	109	229	140	870
fontsize	5	230	448	134	608
MagViento	53	139	42	250	775
kpTrain	75	227	385	0	486
9.5	54	108	23	695	421
that'll	88	200	232	143	469
Sign	63	44	199	582	888
internals.py	37	250	27	314	173
Ants	13	224	282	195	765
2.8	21	108	23	579	322
99.x	20	170	231	709	562
Connect	38	206	495	732	71
Val2	53	123	51	339	779
Val1	48	123	486	339	779
group.TYPE	53	260	51	572	763
behaviors	12	152	147	257	606
cgohlke's	4	17	63	697	31
Span	78	147	453	198	687
Richard	4	121	264	646	500
Spam	3	67	261	312	720
tabs	61	58	452	539	501
pandas.DataFrame	43	265	74	771	3
py3	91	122	330	477	568
PyScript	67	57	167	664	315
2.3	91	108	23	579	322
user.id	79	271	373	787	517
need	47	0	392	91	338
Development	55	271	259	110	568
instrumentation	12	246	206	44	959
microphone	20	246	58	428	600
57	54	3	298	318	811
quartile	81	159	266	104	459
able	47	229	392	143	338
groupBy	43	157	103	376	956
vertica	71	171	303	128	88
np.memmap	71	188	336	702	306
singe	2	49	328	405	944
numpy.gradient()	60	296	458	742	438
dictionnary	65	233	158	540	526
FASTA	71	153	50	423	108
numpy.cos	42	29	137	15	709
numpy.cov	60	219	280	431	485
pyx	15	135	44	215	305
Amro	4	121	264	646	500
zcopy	90	297	26	212	273
fullscreen	93	187	188	427	796
aws	84	119	429	697	377
.clear()	31	203	348	123	430
awk	36	10	222	288	261
Benchmarks	84	57	167	697	732
tall	59	117	284	245	714
#QO	63	44	199	211	341
pyc	15	135	44	384	305
pyd	15	132	44	215	305
stereo	20	248	58	428	593
topographic	39	126	495	199	177
d+1	85	194	280	5	314
eachother	59	43	25	251	884
upset	50	120	114	63	727
DataFrame.to_sql	71	171	473	128	88
GTK2	7	26	63	537	537
GTK3	93	187	104	368	591
scrambled	12	183	341	170	563
distinctive	59	52	433	32	714
64x64	34	77	258	45	943
numpy.array_split()	50	264	393	359	564
Iam	47	235	392	450	59
impression	50	59	292	210	747
objs	65	233	54	690	526
Ian	4	121	372	444	552
order_no	53	139	42	417	775
numpy.tensordot()	42	30	286	313	244
unreachable	35	193	19	387	315
dgesv	60	296	102	431	751
formatted	61	49	50	98	260
1_2	78	204	195	706	502
1_1	78	204	272	168	497
join=	49	47	406	631	445
high-level	13	26	65	118	730
mprof	40	37	429	699	888
x_1	85	172	370	560	391
Balance	95	298	453	519	38
MacPorts	67	151	210	351	104
matplotlib.backends.backend_qt4	15	135	319	777	873
winner	10	202	37	534	741
1.41421356	90	54	257	332	449
employer	79	78	487	515	713
employee	79	228	487	480	285
b.base	42	220	361	138	866
ax.tick_params	46	226	494	757	348
dodge	95	14	335	168	714
hassles	11	232	375	364	398
mini-batch	77	168	186	705	353
flattens	34	77	396	566	520
spreadsheets	71	153	86	638	561
joint	81	214	132	783	4
Yarr	57	225	490	37	451
legitimate	12	59	5	630	120
joins	2	116	145	706	986
buyer	79	140	173	109	955
scrolling	59	154	188	427	203
+mkl	67	151	470	604	104
Matthias	4	225	254	252	552
-wise	6	157	103	197	653
instantiate	2	220	329	514	720
chain-indexing	94	111	147	369	273
contain	2	49	131	487	702
L's	4	174	254	91	114
x.dayofweek	27	150	10	772	838
python3.4.3	40	57	167	664	732
norm.cdf	27	29	403	173	201
shake	50	232	393	75	564
gotchas	35	193	372	387	219
computes	60	270	472	174	635
computer	84	119	2	410	321
.get_group	64	150	256	197	48
REALLY	88	59	118	334	604
time-efficient	10	272	118	675	612
stats	79	214	173	376	285
user-specified	81	21	233	251	702
Memoryviews	76	51	65	169	734
realign	2	116	456	405	923
state	12	183	181	170	195
beautify	88	257	61	334	695
stata	71	153	86	423	561
masking	6	68	7	566	244
indeces	34	77	131	522	336
importance	12	183	134	44	606
Barchart	59	52	495	209	177
tidier	88	257	61	675	612
zero-filled	34	188	0	404	581
efficiency	10	272	118	225	990
batch_size	44	205	444	196	994
matplotlib.pylab.plot	31	13	383	592	709
VirtualEnv	67	57	167	499	732
reallocated	29	188	447	570	450
threading.Thread	29	40	444	236	444
python.exe	40	176	386	696	305
colorscheme	22	4	294	438	198
stat=	46	39	73	505	649
.If	47	174	117	751	262
minds	24	109	229	444	870
X_trainN	68	256	154	545	994
do_something	74	297	4	509	228
2.x	65	58	81	735	311
np.may_share_memory	27	227	361	138	273
Result	30	162	191	347	560
reallocates	88	188	447	570	450
interesting	88	59	5	630	264
matplotlib.text.Annotation	31	13	388	558	879
np_array	74	233	54	690	228
single-dtyped	94	222	122	369	160
self.coordinates	44	205	4	196	228
harmonic	20	98	48	195	416
sub-elements	34	77	0	522	336
maximize	77	98	458	783	738
normalisation	20	93	294	191	271
3,100	90	205	257	196	995
small-sized	20	170	258	44	562
tread	65	94	158	514	720
aligning	2	116	25	546	884
scipy.ndimage.filters.convolve	20	93	382	191	396
5*	96	266	31	695	236
treat	47	229	162	91	260
tactic	88	152	5	257	781
sklearn.preprocessing.normalize	60	219	14	742	709
ts.plot	46	203	383	577	430
fig.gca()	46	203	348	577	430
random_array	90	297	26	332	995
diversity	13	17	126	458	950
That'd	24	109	229	143	867
subspace	34	77	251	88	520
pie-plot	79	49	233	60	92
matplotlib.dates	5	148	363	558	745
sensed	22	126	7	141	722
Allotment	79	144	34	787	248
csv2rec	52	153	336	423	108
~2GB	71	127	355	159	359
shameless	13	193	372	387	371
That's	47	59	493	504	469
glossary	3	94	19	514	890
iris.target	74	100	108	586	336
np.ndarray.astype()	11	109	143	144	469
harder	88	257	61	334	695
Hanning	20	93	425	191	344
180,000	21	190	234	557	252
6:8	90	95	13	239	744
pgfplots	93	23	495	97	710
1511	37	250	27	429	194
same-length	34	77	0	73	694
ax1.set_ylim	46	284	253	46	339
Granted	47	0	392	678	544
deliminated	61	153	50	539	108
foo.readline()	90	54	257	332	995
emailed	35	264	372	407	594
ax.text()	5	148	30	558	518
35086	5	148	32	19	844
apipe	60	40	444	15	709
idxmin()	43	157	103	683	956
hierachical	43	265	75	771	921
began	50	264	292	407	747
schematic	57	235	342	450	950
pandas.to_csv	61	153	50	423	260
Comprehension	69	162	191	61	739
right-aligned	61	49	452	539	501
ax.vlines	46	148	363	46	844
a.any()	63	44	240	782	226
Rodin	24	109	229	140	870
x-axis	5	288	32	19	884
item()	42	157	14	683	956
effect	47	0	392	91	338
non-copying	76	218	183	359	803
Sandbox	84	7	167	301	321
discouraged	88	152	5	145	195
-ing	42	27	14	18	244
polymorphism	11	120	5	118	264
DTYPE	3	67	261	146	498
obstacles	13	26	126	203	765
Idea	11	48	389	504	469
matplotlib.get_py2exe_datafiles()	47	174	117	751	262
Looping	69	31	100	530	207
Have	47	193	19	678	371
rcParams	45	80	448	269	909
ls2	74	233	54	690	262
GotoBlas2	7	163	428	418	166
WindowsError	63	176	397	696	136
restore	2	229	457	335	180
BA	85	100	419	355	821
imageData	22	90	246	141	722
grpah	59	52	495	51	54
BL	95	174	419	730	192
1,100	75	243	289	425	810
)']	53	287	42	250	775
BH	77	298	419	722	905
sources	13	26	63	697	732
BW	22	90	381	438	672
BP	48	123	486	168	497
BQ	79	147	449	48	817
BR	95	298	487	168	653
BS	79	78	181	480	285
read_excel()	52	185	28	24	793
skill	13	225	212	739	53
BX	85	238	280	5	485
BY	30	212	182	547	965
Be	47	0	147	678	908
Mixture	77	214	132	721	4
sumOfDiagonal	75	54	54	690	585
logged	79	246	206	609	769
Bi	4	121	254	710	441
r_value	68	32	426	617	597
Bu	11	225	490	567	469
2015-12-22	99	104	453	109	955
sns.kdeplot	46	39	383	505	649
setup=	75	243	385	425	823
Bs	78	144	195	178	637
logger	79	147	450	762	746
ought	88	257	61	143	695
Bx	85	201	426	560	13
By	47	0	392	678	544
ample	11	109	394	444	219
devised	50	42	393	35	905
start_time	99	281	420	788	687
crushed	47	59	301	699	835
atol=	14	266	31	1	236
source2	53	139	42	417	775
ldconfig	55	132	330	477	568
ZODB	71	171	303	702	457
unseen	58	68	456	341	910
data_columns	94	222	446	702	160
crushes	10	202	37	323	876
martix	74	205	4	509	228
k-d	72	165	15	152	570
England	95	271	373	519	38
EMERGENCY	54	50	368	331	19
sub-strings	78	49	195	27	1
flattest	20	117	382	709	562
B4	85	172	481	224	778
x.shape	44	227	228	0	357
B0	48	181	272	339	497
B1	85	172	481	224	778
B2	85	172	481	224	778
SQL	71	171	473	128	88
setups	7	51	65	697	730
B=	44	227	385	5	778
All-Share	95	181	373	429	428
)')	86	129	256	250	775
sys.executable	15	112	184	308	630
shed	11	173	143	763	652
on_key	29	187	444	236	282
--------------	30	212	55	429	428
nanmedian	60	269	14	313	396
belonged	48	49	373	686	517
Googled	50	264	393	75	564
mkl-cp34-none-win_amd64.whl	67	112	276	499	128
warmer	12	59	235	391	907
xplusy	41	6	270	522	944
read_stata	52	185	28	24	793
pH	79	228	487	168	653
skimage	22	248	7	141	722
Clever	24	109	229	140	870
monday	99	140	453	109	94
H.transpose()	24	109	394	140	870
index_column	48	123	486	197	653
bottom_depth	53	123	42	250	82
.info()	43	47	74	293	975
rewarding	13	120	212	118	219
axes.plot	46	203	348	592	55
datecol	53	139	51	417	775
65159576	90	32	13	545	744
LLA	39	126	279	766	573
intersections	39	43	235	733	102
pull-requests	35	173	220	292	106
coders	11	225	5	419	53
duh	24	200	493	504	991
15:45	99	69	318	155	256
complication	12	152	134	618	908
fftfreq()	94	222	14	784	160
Sci-kit	77	168	186	705	353
randint()	60	40	444	396	709
set_title	31	148	388	592	879
17,000	21	190	234	557	326
offset	81	288	25	122	479
instinct	88	59	61	630	695
pv	4	121	264	646	500
Microsoft	7	224	152	241	850
timeit.Timer	75	174	385	425	486
replots	29	154	128	427	2
cleans	71	153	491	174	854
woks	24	109	394	699	469
23.5	54	108	23	579	399
23.4	54	108	23	579	931
np.tile()	42	27	88	358	581
23.1	54	108	101	297	931
23.0	95	181	272	339	497
scipy.linalg	60	296	102	431	751
discretization	20	170	231	191	84
5-element	34	77	0	522	694
IDX	78	144	195	522	944
python-3.4.3.amd64	37	250	386	475	194
IDS	40	204	338	664	92
IDL	13	296	375	364	631
artists	31	1	388	399	879
additions	10	272	118	169	863
IDE	40	141	281	76	632
utility	71	26	65	697	439
networking	13	246	48	195	765
tidied	57	235	342	35	781
pc	84	119	429	699	321
Assistant	30	271	182	110	38
IDs	79	144	195	787	944
self.resultingArray	3	67	184	157	172
s.apply	27	29	10	772	838
z_list	34	94	0	73	336
HYRY's	4	17	254	710	441
wraparound	14	263	314	95	625
data.reshape	75	227	228	0	263
frame.apply	27	150	10	772	838
subjective	18	225	5	419	53
pj	85	201	370	560	577
manifests	12	152	301	799	120
dur	75	174	256	67	211
1.55358	63	44	199	582	341
truncation	14	86	314	618	84
Shorter	88	257	61	675	327
pi	96	201	426	560	13
ax.collections	31	1	388	399	879
converter	61	58	162	15	260
One-liner	47	174	392	91	560
auto-adjust	5	48	32	19	479
hosting	84	119	63	516	377
signed	14	291	85	608	44
ID1	48	144	195	178	637
Offshore_Umgeni_Deep	54	204	257	338	361
converted	2	215	328	98	260
720	54	223	298	318	158
Exclude	81	31	245	530	911
piece	57	235	342	450	950
virtualenv_directory	55	128	52	477	568
intersects	39	149	29	388	116
devise	11	48	232	306	360
oversample	20	170	409	733	301
_different_	12	183	147	355	563
MathGL	13	26	63	97	537
set_cmap	31	13	294	653	271
salesPandas	53	139	42	72	390
Defining	69	179	237	174	71
chromosome	48	144	195	787	502
Measuring	81	170	409	44	576
Mining	38	224	282	94	689
sel_id	27	297	4	509	228
~30	10	160	274	323	655
new_vals	27	174	4	509	486
Genes	48	123	486	197	502
offensive	18	225	490	419	53
121:03	54	69	119	158	126
suspiciously	61	49	456	424	517
Bottleneck	13	26	63	118	398
df_grouped	64	150	256	551	779
Like	47	0	392	678	544
Kaggle's	50	168	186	705	646
lineplot	59	52	495	51	205
upsample	20	147	449	48	817
Remove	69	31	100	530	911
SimpleITK	22	248	381	141	722
fig.set_size_inches	46	284	348	757	619
cut-off	81	170	266	245	479
mathtext.default	45	80	448	269	906
~3x	10	202	37	323	876
sphinx	93	230	90	604	732
Ouput	30	271	342	347	560
Gene1	78	144	195	787	517
portion	2	263	342	450	338
GPUs	7	51	345	445	166
rebuilding	50	283	60	664	531
f77	7	163	152	636	850
np.add.at	42	27	286	358	368
secondly	47	0	392	91	338
samething	90	293	4	509	228
todays	79	78	450	101	955
pd.to_datetime	64	274	68	72	390
NoSQL	71	171	303	128	457
similarity	77	270	472	783	662
aggfunc=	64	150	256	197	294
LATER	30	212	55	429	560
sparse-matrix	76	193	138	9	371
update2	57	235	490	567	81
update1	29	37	128	699	954
datetime.timedelta	99	63	68	426	452
**2+	96	201	18	68	62
ones()	44	30	26	5	228
segments	81	43	235	733	102
suplots	59	52	335	405	884
presents	12	215	491	174	712
N+1	44	205	370	88	192
unroll	76	51	118	169	207
mingw-w64	67	163	152	241	850
teaching	11	120	212	739	727
ndarrayobject.h	55	128	330	205	461
Bren	24	121	394	646	500
updated	4	235	490	567	81
misunderstanding	12	59	490	424	907
Django	71	171	90	609	537
updater	29	1	181	257	444
updates	29	215	128	335	2
matplotlib.patches.Polygon	31	1	388	399	879
Brew	67	151	327	499	315
matplotlib.pyplot.show()	29	203	128	123	55
\pandas	37	250	386	475	194
Classification	38	206	282	722	353
skills	13	120	212	739	67
\x01	61	58	443	137	906
tifffile.py	71	248	381	571	872
.any	27	260	431	234	945
2013-01-03	53	139	51	682	199
2013-01-02	99	69	119	155	256
groking	11	120	114	35	907
2013-01-06	99	140	453	109	94
n_jobs	77	168	186	705	646
force	2	229	457	335	338
phyton	50	120	212	739	727
warns	35	193	147	9	371
Makefile	67	132	352	113	798
phstab	78	144	195	276	690
batch	71	218	126	167	959
Version	91	7	417	587	230
p=	96	266	289	28	421
goto	76	51	65	169	730
even	47	0	392	91	338
asin	27	29	10	772	838
tipo	53	139	42	417	821
plat-mac	55	128	52	477	56
ax.set_autoscale_on	45	203	348	269	55
evec	90	297	4	509	744
multiplot	59	52	495	51	728
lights	11	263	389	618	120
tips	11	173	389	763	867
ever	47	0	392	630	835
np.random.RandomState	3	220	329	725	235
compactness	76	272	118	169	990
deemed	18	225	232	407	769
Flip	41	6	438	200	979
Decimal()	50	264	292	210	747
refinement	72	165	15	152	570
deposition	13	43	235	195	765
active	29	187	188	167	2
Comparisons	30	162	191	61	739
aren't	47	0	392	251	908
last_valid	4	17	254	799	441
visualised	39	126	495	93	949
asi8	3	63	460	426	787
ft2font	15	176	44	696	372
numpyarray	34	248	0	141	722
dA	96	201	426	560	13
re-render	29	203	128	123	55
VBA	71	26	86	638	561
\t\t	95	298	419	751	497
campaign	79	228	487	231	285
.clip_upper	53	139	256	417	775
VBO	2	188	235	573	417
elude	50	120	393	35	564
pylab.show()	29	203	348	123	55
moral	12	152	497	552	908
armB	39	149	438	298	116
landscape	59	61	315	99	54
armA	39	149	438	298	116
fontsize=	46	226	494	46	348
arms	88	152	409	334	781
tabulated	61	153	50	423	108
paramater	31	13	284	245	479
pairplot	31	14	383	568	710
call	29	40	444	236	709
calm	12	59	147	170	908
map_async	29	218	183	359	803
python27	55	132	352	113	791
TABLE	30	212	182	343	965
keep_observers=True	46	203	348	577	430
arma	3	67	261	312	498
Std	85	298	173	467	459
np.empty_like	75	227	228	0	484
advance	11	173	197	763	72
composite	2	116	145	571	986
Y-axis	59	288	32	19	884
MATPLOTLIB	59	52	495	51	54
Assignments	2	271	181	212	923
log-log	59	52	29	639	825
root.mainloop()	29	187	128	764	954
eternally	11	173	389	763	867
SettingWithCopyWarning	63	216	199	369	350
pivoting	43	265	75	706	356
2014-12-10	99	69	119	155	256
pd.rolling_min	53	139	449	48	48
fontsizes	5	148	284	134	479
socket	71	246	58	609	600
ax2.bar	46	39	289	505	649
Borough	48	123	486	168	653
np.isfinite	27	260	431	53	945
orignal	2	116	328	335	180
defer	13	232	5	257	53
DateTimeIndex	43	63	68	426	452
Lib	55	132	352	113	305
Lin	30	174	264	396	217
originates	71	215	491	98	92
involve	76	272	118	334	612
hline	31	13	388	199	879
degenerate	77	42	231	431	102
Installed	67	151	470	604	104
cursory	50	296	102	35	371
vcvarsall.bat	67	176	152	326	104
EndDate	48	144	195	788	920
x.Date	86	150	10	772	838
currents	39	73	279	322	586
answer	4	15	254	472	81
1750	39	6	279	766	573
title()	31	203	350	236	518
crowding	59	52	32	19	884
undergoing	76	94	118	169	734
m-1	85	195	370	560	142
lengthy	57	235	342	334	695
from_csv()	52	185	334	15	793
m-2	44	293	370	196	192
NumPy's	76	51	65	313	734
thankyou	24	33	229	667	870
UDFs	71	171	183	609	803
Pairwise	81	270	472	264	662
curiosity	24	59	114	630	469
cursor=	45	80	104	435	591
data.split	86	129	117	211	66
normal()	42	40	14	725	709
purchase	79	78	487	101	955
All	47	0	392	678	544
1280	54	223	298	196	252
Ali	24	121	394	646	500
stand-alone	57	235	463	450	766
follwing	57	57	342	450	59
Executing	63	37	199	347	59
maintain	2	229	457	91	621
frequent	79	49	456	170	285
panda's	43	265	72	771	956
Alt	30	271	373	281	38
operations	76	94	118	169	734
.PNG	71	246	50	571	108
Hide	59	154	188	209	837
withing	2	116	233	522	338
my_data2	44	256	251	196	555
set_xscale	5	148	363	639	825
numba's	7	51	428	225	915
assert_array_almost_equal	14	291	142	9	549
responsive	29	187	128	764	99
Pixel	22	248	381	45	672
scoring	77	168	186	705	646
x-coordinate	41	6	270	733	573
Automatic	69	162	237	209	402
denoted	85	21	239	86	702
toolbars	93	154	104	537	728
,	47	174	392	91	338
better	88	257	61	675	612
Cutting	2	263	491	618	781
differently	47	215	147	91	908
Birth	48	281	486	339	682
overcome	12	48	389	799	360
donors	79	144	195	787	944
zero-dimensional	34	77	0	73	694
fixation	81	100	270	167	283
weakness	13	26	65	257	730
downs	10	272	118	167	863
station_id	79	228	173	101	459
type1cm	67	151	44	33	315
Steps	38	57	282	281	560
non-overlapping	81	117	270	546	301
cc1plus	63	176	397	696	136
resizing	29	154	284	245	203
singularity	14	86	314	279	84
-set	85	172	481	224	778
-ser	24	200	490	504	991
decorator	76	40	444	15	915
resave	71	153	86	638	561
grammar	13	23	179	739	67
newMean	90	297	4	504	744
_set_scale	63	1	460	172	787
Allan's	4	121	254	710	500
Pandas.DataFrame	43	265	72	771	356
blas-devel	67	112	327	499	334
ordinal	61	5	443	563	898
validated	77	168	186	705	646
scipy-0.10.0-py2.6-linux-x86_	55	128	52	477	372
went	50	264	292	210	747
nx.draw_networkx	46	203	348	592	55
inserts	2	263	491	174	621
ncoord	74	195	4	586	577
successively	78	43	131	522	944
principles	13	225	5	257	219
drop_level=False	64	47	406	551	48
Python-level	76	272	118	169	207
doug	24	109	394	140	500
humidity	79	147	206	101	675
extract	2	21	145	98	702
sounds	88	59	392	424	469
contend	18	225	5	419	53
NLP	13	26	126	118	765
rcparam	45	80	448	269	798
cartridge	84	57	167	664	791
numpy.random.uniform	14	219	46	725	484
grid()	5	13	253	558	518
restricted	12	21	147	91	908
start1	74	195	148	448	821
df2.index	49	281	406	72	390
content	2	49	50	405	108
y_pred	74	256	177	509	994
numpy.recfromcsv	36	10	489	712	261
find_peaks_cwt	60	296	15	742	438
apply_func	31	40	444	201	406
turning	2	116	145	573	531
linear	77	98	38	279	738
voltages	81	126	206	428	949
1min	99	160	449	48	817
pandas.Series	43	157	72	771	3
OCTAVE	34	162	191	61	77
yesterday's	99	140	453	198	955
-Inumpy	55	128	293	52	56
libopenblas-dev	67	151	327	418	334
starts	2	215	491	167	769
290	54	3	101	318	158
Computation	38	206	282	722	71
signature	3	40	444	15	709
291	54	3	101	187	158
laggy	59	59	114	51	264
url's	71	116	50	60	854
grade	79	228	487	480	285
Problems	69	31	100	530	316
cp1252	52	58	443	563	209
peculiarity	2	21	131	251	336
disappearing	59	154	32	764	796
enumerate	65	233	54	690	526
Bessel	60	98	458	191	809
pragmatic	88	183	61	458	612
vm	84	57	167	499	321
anyone	11	173	143	763	652
tensordot()	10	202	37	313	876
model.params	74	174	117	185	262
twisted	50	232	301	697	765
Col	48	123	486	339	502
-th	74	195	216	255	577
zeros	6	68	88	130	910
rcsetup.py	55	132	330	205	415
horrendously	10	202	37	334	604
Converter	38	171	191	61	38
myfun	29	40	444	236	349
ontype	29	203	128	236	282
new_positions	74	195	4	196	228
time-indexed	79	147	450	101	675
virtualenvwrapper	67	191	210	351	137
.sort_index()	64	287	406	551	294
somewhat	88	152	61	334	695
peculiar	88	152	147	618	120
symptom	50	37	301	699	120
VOLUME	99	140	453	109	687
1x10	34	77	239	88	192
ActiveX	93	187	104	537	728
xtimesy	41	6	233	522	944
Craig	24	121	394	102	340
Cyber	99	121	449	646	500
bigrams	79	228	487	27	1
silly	88	200	114	424	469
spoiled	13	120	212	35	727
gnuplot-py	13	26	63	118	398
usages	13	26	183	118	959
x^2+y^2	96	201	426	560	13
abcde	64	150	260	185	496
scipy.stats.nanmean	60	219	14	313	244
Decode	63	176	199	582	136
7th	78	140	338	616	456
df.index.dtype	3	18	162	682	3
churn	79	228	239	442	285
inefficient	88	257	61	334	695
data-	59	52	233	621	92
miliseconds	21	63	68	426	27
threading	76	218	345	445	803
dep_3	6	256	12	130	994
POS	48	144	486	788	920
data=	75	10	260	425	484
chess	59	117	433	32	586
POI	78	298	233	168	944
0.375	90	54	257	713	421
data1	48	281	335	107	555
data0	48	281	335	185	555
data3	48	281	335	751	555
data2	74	281	74	668	555
LLVM	7	163	428	590	915
STRING	94	18	162	426	429
x-ticks	5	148	32	19	884
nonzeros	34	70	88	522	283
data\	36	10	376	712	971
dataY	74	293	108	586	577
dataX	74	6	108	586	577
Caching	11	109	60	127	531
iterate	2	116	145	522	207
Alabama	95	181	373	686	497
typ	86	129	272	36	199
unknowingly	12	152	5	552	990
Bernie	24	264	394	646	500
itemset	12	183	126	170	765
group_keys=False	64	47	406	683	48
scipy.fftpack.fft	60	86	314	431	84
main.py	15	277	281	384	632
dataf	53	139	51	551	923
dict{k	3	40	444	157	314
Crop	69	126	7	209	177
??????	86	129	117	211	340
Single	69	162	191	61	837
t=3	41	6	108	586	283
nbytes	3	188	336	312	306
parenthesis	61	263	452	230	298
mailing	35	225	220	71	509
FuncFormatter	5	148	363	558	844
datas	41	6	214	98	211
20-30	21	160	234	557	326
activity_df	53	139	42	155	775
Illegal	63	176	397	582	136
Day2	99	140	453	109	221
ending	78	263	338	167	769
attempts	50	264	393	75	564
MPLCONFIGDIR	45	132	352	113	798
stepping	50	116	145	573	531
02:00	99	69	119	525	256
get_legend_handles_labels()	31	1	388	399	879
marshalling	7	51	65	2	730
downscaling	22	126	284	245	177
pythonnet	7	51	65	2	730
d.month	53	139	256	417	775
AWS	84	119	2	607	377
cross-platform	7	26	63	516	398
nanmin	6	269	12	53	244
AWK	71	246	303	60	92
libary	13	57	126	697	732
__call__	31	40	483	663	444
17th	78	49	338	616	456
exports	71	61	86	423	108
Measurements	95	138	159	686	38
establishes	2	215	60	91	621
compounded	20	147	173	391	817
intervall	99	140	453	109	94
Days	99	138	66	789	687
scipy.fftpack.rfft	3	291	142	336	969
12	54	186	298	318	811
tf.reduce_mean	68	29	18	617	486
WHERE	30	212	182	343	965
"]]`	53	95	260	455	897
df.D	27	260	431	234	945
bat	50	263	445	122	979
bar	59	14	383	621	710
17	54	186	298	318	811
baz	48	123	335	168	653
microscopy	22	248	214	571	593
19	54	186	298	318	811
microscope	71	248	58	428	593
rockssep	37	250	27	314	194
duck-typing	3	94	329	663	890
notches	81	159	266	104	479
flagged	18	225	60	355	187
datetime.datetime.now()	86	129	117	211	390
pyside	93	151	104	368	591
total_seconds()	43	63	68	426	452
df2.columns	49	47	406	631	445
df.L	68	32	154	545	62
01:15	54	108	300	158	126
sinks	12	43	235	709	562
said	47	59	392	252	747
enthought	67	151	210	351	104
inappropriate	12	152	5	419	53
constant-time	34	188	118	566	863
shaved	10	202	37	323	576
filename	36	10	489	712	261
reassigned	2	215	328	212	923
shaves	10	25	37	323	655
dcts	21	188	355	159	359
reddit	18	15	45	472	81
programatically	2	229	457	306	338
bincount	42	27	349	358	833
restricting	2	116	275	144	531
ignorance	18	120	179	739	67
segID	79	228	487	787	502
ellipticity	81	214	132	783	4
Yours	24	17	254	710	441
mplot3D	59	52	495	199	177
eyeball	12	183	409	783	563
TomAugspurger	4	121	264	646	500
restarting	40	141	281	76	954
mdurant	4	121	264	646	500
contribution	11	109	229	567	922
inferring	94	63	162	426	452
confronted	50	152	60	697	120
Given	47	21	342	678	927
exemplary	57	235	342	450	950
:::	63	44	199	582	858
cax=cax	46	35	348	577	430
foobar	59	49	335	405	502
cobble	57	232	232	144	781
16x	10	202	37	323	876
Forest	77	168	186	705	646
Speeding	69	179	169	530	145
test.cpp	30	57	330	751	315
16s	21	160	234	557	655
df.d	27	95	115	234	227
targeting	13	26	126	697	765
C-	7	51	419	2	730
C#	7	26	65	2	730
16G	84	127	2	410	580
three	2	21	233	251	702
Early	30	224	282	519	689
geocode	71	73	303	60	92
C=	85	194	370	5	201
C3	48	123	486	339	502
C2	85	172	481	224	778
C1	48	172	481	224	778
PyGnuplot	24	109	229	444	870
over-ride	2	94	329	514	720
threw	50	264	292	210	747
CI	84	119	351	462	732
CH	68	54	257	338	585
slX	65	233	158	522	336
CN	85	172	419	467	497
CM	85	247	448	86	909
plt.ylim	5	284	253	757	339
CC	95	298	419	686	361
CB	95	204	373	168	361
.get_paths()	90	297	13	332	744
df.c	53	139	51	417	945
CG	38	206	419	722	905
CF	85	172	419	467	497
itertools.zip_longest	65	233	54	690	526
CD	20	126	206	428	562
multithread	7	51	345	445	166
2012-03-31	99	69	119	155	256
168	54	3	298	187	158
169	54	3	101	187	158
164	68	3	274	297	399
CR	18	225	45	527	219
166	54	3	298	318	158
167	54	3	101	187	158
CW	18	200	490	567	81
CV	38	168	186	705	353
162	54	3	101	187	158
163	37	3	27	187	431
distorts	20	126	495	709	562
gracias	24	109	229	444	870
persisted	50	232	232	407	954
is_monotonic	43	157	349	683	640
Ca	95	172	419	467	497
originate	12	152	301	618	120
slr	47	21	392	91	338
asign	78	49	239	487	702
numPythonic	88	48	61	675	327
np.roots	60	124	458	324	438
suppose	47	0	392	630	338
ode15s	60	296	102	279	809
Cs	27	233	199	424	888
stash	71	218	183	359	180
balance	79	78	206	101	955
employees	79	78	487	480	285
spawn	29	218	183	445	803
Cholesky	77	194	280	431	485
Nah	88	59	5	419	53
factorize()	6	17	254	710	441
Nan	6	68	12	130	910
Ideas	11	173	389	763	392
Nar	24	109	229	140	870
Ideal	30	271	342	347	560
kwarg	31	13	388	134	608
QuadMesh	31	1	388	399	879
string-valued	43	265	72	426	452
WC_class.py	15	135	319	777	873
grown	13	246	355	609	959
mediumseagreen	46	4	73	316	198
{{{	31	40	123	236	578
CREATE	30	212	182	343	965
NaN	6	68	12	130	910
Variation	69	174	419	751	262
speculating	88	272	5	419	907
Snape	24	121	264	646	500
hahah	18	200	490	504	991
NaT	6	68	12	130	910
grows	10	188	355	573	576
3rd-party	67	151	210	351	732
index_tricks	42	30	286	358	368
col_name	53	139	418	551	779
declarative	13	23	126	118	765
bloomberg	71	211	303	762	746
Home	84	271	2	410	321
thoughts	11	173	389	763	392
Cdd	85	194	18	704	598
stimuli	79	228	206	480	675
store.select	53	211	51	551	131
nlog	77	194	356	327	668
claims	47	193	292	9	371
paradigm	88	257	61	675	612
nlon	41	205	154	200	397
left	59	263	25	122	979
CPPFLAGS	67	132	352	113	315
just	47	0	392	91	338
diameter	39	149	438	93	116
Fixing	50	264	237	252	120
3's	78	100	85	526	513
fft's	20	93	382	191	989
unfair	12	152	5	552	908
O-bound	88	272	118	675	31
shocked	50	59	114	210	747
agg()	43	157	103	784	956
component-wise	34	77	275	88	238
psychopy	40	57	167	664	321
candidate	35	122	220	292	376
infinitely	39	64	235	167	604
short-circuit	10	202	95	18	866
Hankel	60	194	248	431	485
macport	67	151	210	351	104
locationid	53	123	51	448	821
EAFP	88	193	19	387	371
News	95	271	373	686	340
axisbg=	46	226	494	316	488
119	54	3	298	318	158
datestr2num	99	63	68	426	745
whichever	47	0	457	335	338
seperate	2	116	233	251	986
background	59	117	433	32	198
latCondition	27	260	431	234	945
ajcr	4	121	264	646	500
p_value	48	172	54	690	597
-_-	50	120	114	35	727
isomorphism	81	42	472	400	662
manual	47	193	19	387	371
Levenshtein	79	270	472	588	662
switching	50	232	60	35	531
detections	81	21	409	44	84
2008-01-01	99	140	453	198	687
notorious	84	127	167	697	321
SURF	39	126	7	709	670
201	54	223	298	318	252
SURE	30	212	55	136	965
df.index.hour	64	150	256	48	48
MaskedArray	3	220	329	53	235
Valid	61	239	443	539	260
paragraphs	18	225	372	170	219
precomputed	34	270	472	522	662
dense	34	292	64	348	218
DataFrame.eval()	94	157	14	9	376
PTA	68	298	354	338	361
209	54	3	101	187	158
uniform_filter	42	27	88	313	396
PTS	85	172	419	467	170
localhost	55	119	429	609	462
.apply()	43	157	103	750	956
pandas=	91	122	156	587	626
colormap	22	4	294	653	271
before-hand	2	229	457	306	338
statistician	11	120	212	739	727
sift	71	248	131	522	722
bid_price	78	204	148	178	637
super	88	59	114	334	604
unbinned	81	214	297	171	4
"]`)	95	181	260	185	496
Gunicorn	84	119	429	359	377
Abstract	38	94	282	519	38
Parser	30	271	50	281	38
Series.astype	3	18	162	266	172
jsonpickle	71	153	50	423	108
paraview	93	57	495	571	537
commit	35	122	220	292	376
sprites	39	126	235	93	177
definetely	21	160	234	334	655
lied	12	152	60	170	120
carrot	95	181	373	185	199
cascaded	34	77	0	88	943
parsing	61	153	50	423	260
lies	12	215	235	799	120
lieu	65	157	134	630	439
chime	11	15	220	292	106
Stay	35	26	138	458	394
annoyance	88	120	114	697	53
pandas-	69	265	456	771	739
amazingly	24	109	229	444	264
imin	14	100	201	586	283
subdivide	81	126	270	733	301
approximate	72	98	231	279	738
influencing	59	288	25	310	979
v.index	46	39	383	592	649
timestamped	79	97	450	101	746
maxVal	68	259	431	28	945
DNA	61	43	239	27	849
offering	13	120	212	419	219
build\	37	250	386	475	194
speed-ups	76	272	118	225	990
229	36	129	136	36	906
228	75	227	385	196	486
227	99	223	453	198	252
226	37	3	298	187	158
225	37	3	298	187	158
Z	41	6	177	107	397
223	54	3	298	318	811
222	54	3	298	338	811
221	54	3	298	187	811
220	21	223	234	557	252
grid_forget()	31	13	388	592	879
3.6	54	108	23	579	399
Grotrian	59	52	495	400	177
builds	35	57	167	174	732
3.7	54	108	23	579	399
NavigationToolbar2	93	1	104	537	728
attached	57	235	342	450	54
np.random.randn	75	243	385	425	484
Numpy's	60	296	14	313	709
buildd	55	128	52	52	56
gdf.aggregate	27	150	403	65	598
\d+	86	89	163	299	66
3.2	91	7	417	13	322
attaches	2	215	328	335	180
matplotlib.pyplot.contourf	72	193	19	387	371
df.age	53	223	431	234	945
diagnose	57	239	463	37	451
obtainingparams	29	40	444	236	709
Series.order	43	157	349	708	640
blocksize	44	205	284	245	479
numpy.convolve	60	296	382	742	396
TargetID	48	144	337	708	248
mulitply	34	194	275	88	238
mulitple	69	21	233	251	702
OffsetImage	5	61	284	245	479
sub_array	34	227	14	404	228
errorbar()	31	13	383	568	710
floating	14	86	142	325	549
1e-10	14	266	31	695	236
1e-12	14	266	31	28	236
1e-15	14	86	31	325	236
1e-14	27	266	31	1	236
1e-17	14	86	314	391	84
y=f	41	6	177	107	397
y=k	74	233	54	690	526
tossing	12	183	409	618	84
handed	88	120	5	257	781
.rank	64	150	256	197	48
y=x	41	288	29	69	116
speedsList	46	35	289	282	810
RK4	10	202	37	323	876
a11	41	172	481	107	778
a10	3	18	141	266	178
a12	64	123	272	551	779
boundscheck	76	51	334	95	915
Gives	63	44	199	347	560
voodoo	88	257	61	334	695
.fillna()	6	47	418	700	73
Constant	38	206	282	722	698
apology	18	200	490	567	81
daily	79	147	450	101	817
x_order	31	14	383	568	956
y=1	41	6	29	69	116
y=0	5	288	29	69	116
y=3	96	266	29	69	421
y=2	41	159	29	752	116
y=5	78	288	29	69	116
y=4	95	288	29	69	116
Ellipse	31	1	388	399	879
eumiro	24	121	264	646	500
df1.index.time	68	32	431	234	945
Puzzled	47	59	392	630	888
my_dict	74	233	54	690	526
mangle_dupe_cols=False	6	47	456	405	73
subindices	81	21	14	546	338
TEXT	61	171	473	343	88
recalculation	59	154	128	32	2
peruse	31	193	19	97	371
mild	84	152	2	697	321
mile	11	160	232	407	64
RBGA	22	4	294	438	672
Dendrogram	38	79	495	209	71
mill	24	109	394	140	870
abundant	12	183	5	144	604
5.67	96	266	23	8	421
np.poly1d	60	124	177	324	597
filling_values=	86	129	376	85	971
50826113000	54	50	42	713	624
technique	12	48	134	630	765
_that_	29	1	128	123	879
amaze	24	109	229	444	870
finally	50	264	292	210	747
unpleasant	88	152	147	334	695
overund	53	174	51	448	821
Migrating	38	206	282	60	316
FIR	20	93	382	191	989
Func	63	40	460	514	787
.dylib	55	132	330	477	372
permissive	35	152	138	9	53
index.get_level_values	64	47	406	683	48
FIX	30	152	55	552	625
math.exp	96	29	18	173	13
request_type	79	160	453	101	176
1620	78	140	453	198	955
FID	95	298	373	519	38
tridiagonal	60	292	280	431	485
ts.head()	57	37	199	424	888
materialize	34	188	361	404	863
dim	44	205	251	196	357
ghostscript	67	151	315	664	872
Statements	69	162	191	61	114
Nicer	47	48	392	630	31
Exponentiation	10	29	137	169	238
did	50	264	292	210	835
die	29	218	128	764	954
subprocess.PIPE	36	10	489	288	942
dig	50	232	232	35	417
dia	44	292	64	348	218
dic	65	233	54	540	526
Heuristica	45	230	448	767	315
overlain	39	149	438	93	177
Serialization	71	162	191	61	457
div	94	222	103	683	160
overlaid	59	52	433	32	177
dir	15	132	352	308	568
Multindex	43	265	75	771	356
varf64	44	67	261	215	314
thin	59	117	433	32	417
maximization	77	98	458	279	905
Efficient	69	252	169	530	233
max_len	75	243	385	690	486
circle-like	39	117	279	733	177
Sympy	60	98	38	279	809
bacterial	39	43	206	498	949
re-add	29	203	348	335	180
ptf77blas	55	128	293	636	56
UPD2	57	235	342	450	59
Explore	57	235	342	450	783
ampersand	47	263	452	230	272
p.draw()	29	203	128	123	55
completness	57	193	19	423	371
cla()	5	203	348	123	55
3.j	68	54	257	713	65
Changed	4	200	490	567	81
ax2.plot	46	39	494	577	649
asarray()	3	220	329	15	235
RESULT	85	212	419	467	965
elses	11	225	143	170	219
decipher	50	59	114	144	727
Changes	69	162	191	61	837
earthquake	39	73	214	93	949
softwares	13	119	63	697	765
non-performant	88	272	118	573	863
.astype	64	18	141	682	131
institute	84	119	2	697	321
20ms	10	160	274	323	655
percentile	81	159	173	104	459
broken_barh	5	52	383	546	745
usol	90	54	13	10	744
massage	71	116	145	98	986
dataframe.index	43	265	72	771	779
spatially	81	126	270	709	562
fig.tight_layout()	46	203	348	757	55
xerr	46	14	383	568	710
When	47	0	392	678	544
layouts	93	23	104	97	518
flexibility	76	23	138	458	606
licensing	12	183	5	697	219
perc	48	144	195	178	637
.place	74	95	115	612	821
comps	74	233	54	690	526
Operate	69	179	169	61	145
additive	20	98	48	783	738
perf	10	272	118	225	990
sharper	20	117	425	709	562
'``	94	222	446	293	160
perm	44	293	286	5	146
perl	13	26	212	118	852
YYYY-MM	99	140	68	198	221
stylesheet	93	80	448	134	608
Studio	67	163	152	241	850
NYSE	79	78	450	762	746
checkout	35	122	19	292	439
sympy.sin	14	29	314	325	238
----------------	30	271	55	429	428
sharing	11	109	233	444	264
fine-tuned	10	272	37	225	990
appending	2	116	145	573	531
acceptable	12	229	409	630	612
mtrand.cpp	54	108	386	187	931
numpy.ndarray.flat	42	27	14	313	439
----	30	212	55	429	560
Dependency	67	132	44	384	305
3:8	90	297	13	10	744
xAxis	5	148	289	46	810
maxfev	45	40	334	396	622
3:2	90	297	4	239	228
3:3	90	297	13	10	744
3:1	90	205	284	245	479
slurping	71	272	118	573	863
.canvas	29	203	348	123	55
3:4	90	297	26	239	744
3:5	90	95	115	239	744
fly	2	116	416	335	180
rotational	39	126	235	93	949
tokyo	7	51	65	2	730
deformed	39	126	279	93	102
avoiding	76	272	118	573	531
soul	11	120	212	739	727
Pacific	99	268	318	679	27
soup	15	135	489	343	823
quivers	39	149	495	93	303
Initialise	34	77	0	73	336
9th	78	140	338	616	456
arrive	47	21	392	170	338
bites	84	232	2	407	321
linregress	60	40	14	742	709
_any_	12	152	181	257	417
claim	12	59	490	252	908
input1	78	204	338	616	456
Builtins	40	141	259	110	402
drawed	59	154	188	32	351
predict	77	168	186	705	646
agent	79	246	182	609	285
mylist1	74	100	95	18	866
your_array	75	233	74	690	975
mylist2	27	100	95	18	866
Openshift	84	57	167	664	321
berak	4	121	264	252	500
Coefficient	38	270	472	264	662
exaggeration	88	257	5	334	604
Yahoo's	13	78	126	762	746
non-interactively	29	187	128	764	954
over-fitting	77	183	409	783	563
plist	90	32	13	10	585
21:56	54	50	368	429	19
square-root	60	219	458	391	454
inputs	47	40	131	15	709
staying	88	116	145	573	531
df.Date	86	274	10	72	390
array.reshape	44	227	385	0	357
testfunction	27	233	54	690	838
np.nansum	27	269	403	53	244
Performing	69	179	169	530	145
InvalidDocument	63	44	199	582	341
Nessi	84	57	167	697	321
arr.flat	74	293	26	509	228
deallocate	76	188	447	570	450
Runtime	63	176	397	347	560
refcheck=False	29	188	361	570	450
23:59	99	253	119	525	256
theano.scan	42	27	14	404	694
6th	78	140	338	616	456
Py2	91	57	222	735	230
Py3	91	57	162	735	230
borrowing	4	17	254	478	552
23:56	54	186	318	338	361
23:55	99	69	318	155	256
go-to	13	26	63	118	398
q	85	195	177	107	142
switch	47	232	457	335	338
get_label()	31	13	388	592	879
0\n0	86	129	465	36	906
Blender	67	26	63	516	732
hermval2d	74	40	177	396	622
cutoff	81	170	266	588	283
gradual	12	183	409	44	84
copy=False	3	227	361	404	273
generator-based	10	202	37	169	876
simplier	88	257	61	675	612
Ellipses	38	23	495	209	71
argued	12	152	147	252	908
init=	45	40	444	396	201
'])``	53	139	42	250	775
single-level	43	265	75	771	921
n-by-m	44	194	280	88	192
n-by-n	34	77	0	88	943
self.update	53	139	51	417	775
np.invert	27	260	431	18	945
low_memory	52	185	28	121	793
y1-y2	96	201	426	560	13
LogNorm()	5	36	294	653	825
xrange()	65	27	81	648	311
gen	65	233	81	735	311
LONG_MAX	14	67	142	325	549
Incident	53	138	159	250	199
blends	59	288	25	32	714
thanx	24	33	229	667	870
tweets	79	228	487	27	1
mail	18	15	220	71	594
main	29	218	128	236	338
Scenario	95	271	335	347	560
views	34	188	361	404	450
impulses	59	13	495	199	54
matplotlib.patches	31	1	388	199	879
fileName	36	10	376	339	261
yticks()	5	148	363	558	844
'])`)	53	281	51	682	779
Closing	30	271	128	281	364
Cookbook	4	193	372	387	704
developments	13	26	126	118	398
possess	2	229	126	203	863
outweigh	76	272	118	169	990
obviates	34	222	147	566	694
directories	67	132	352	113	305
proteins	79	228	487	27	1
decrementing	14	170	275	391	576
Measurement	79	138	159	519	38
redraw	29	154	188	123	203
Event	30	271	159	149	837
n-by-2	34	77	0	73	943
num_points	44	205	251	196	357
0.9.0	91	7	156	587	626
classifying	77	168	186	705	646
abnormal	79	43	206	167	769
inhomogeneous	34	94	122	540	890
gird	59	52	433	32	177
Contours	39	126	279	322	586
morning	50	264	114	407	64
doable	88	257	61	334	695
RTD	40	57	167	697	732
ax1.plot	46	39	73	505	649
U*V	85	194	280	704	485
7.0-2	19	7	33	590	322
streamplot	39	149	438	199	627
work_done	65	233	54	540	526
dominate	10	272	409	44	990
correct	47	59	392	91	835
MAD	77	214	132	783	162
Responding	29	187	128	764	954
8GB	84	127	355	159	359
DMatrix	63	44	199	15	888
Sigma	44	194	280	704	598
Options	38	271	259	110	402
forbids	3	67	261	312	235
8Gb	84	127	2	410	359
DAYS	54	186	300	338	139
script.py	40	141	281	76	632
geo\time	61	58	452	539	501
out-of-the-box	13	26	138	118	398
lay	59	232	235	122	338
How's	2	48	445	566	835
annotation_clip	31	13	19	592	879
lat	39	73	279	766	573
handletextpad	5	226	30	134	608
Probably	47	0	392	678	544
parsers.py	37	250	27	314	889
law	77	98	132	147	4
meaningful	12	183	409	144	563
col_indexer	90	95	115	794	227
numpy.complex64	3	291	0	404	235
numpy.zeros()	34	100	88	404	581
df.dropna	64	47	418	548	131
Completely	24	200	445	504	991
make.osx	67	132	352	113	798
sys.modules	15	135	319	777	406
AxisSubplot	31	1	495	199	879
pcolor	31	13	294	199	627
mining	13	26	126	203	765
time.time	10	277	37	225	169
np.amax()	6	157	14	313	709
subregions	13	126	126	203	394
Mahalanobis	77	270	472	783	662
Unsigned	14	291	162	325	470
blacklist	47	0	392	306	439
Miles	95	138	335	168	497
xp_int	90	297	289	10	486
np.savetxt	36	10	336	712	306
undoubtedly	18	225	5	419	53
here's	57	235	342	450	950
Replacement	69	162	191	789	739
plt.clim	46	203	289	282	55
trainingData	57	49	233	251	451
Avaris	4	121	264	646	500
Qhull	72	165	15	152	570
LIST	74	233	54	690	336
pandas.read_json	52	185	28	24	793
protected	15	218	181	359	406
table=True	94	222	446	24	369
t_id	78	144	195	787	502
DO	94	212	55	136	965
DM	13	248	65	571	730
DK	48	123	486	197	653
DF	48	265	75	771	356
DD	99	274	318	679	221
occupies	21	127	355	454	359
DB	71	171	303	128	88
DC	20	93	425	507	344
quadratic-time	10	272	118	327	863
DA	95	181	419	429	428
dash	61	58	452	134	608
winding	12	49	456	355	944
dask	76	265	345	702	457
dtu_topic_split	53	123	272	339	682
DV	48	212	159	467	502
pd.options.display.encoding	45	5	443	36	906
])```	90	54	257	10	744
DR	38	206	375	722	71
albedo	20	170	206	503	949
Do	47	0	392	143	835
stopgap	6	68	131	618	910
1-character	61	58	162	539	260
Di	54	50	368	429	428
Df	48	123	486	339	559
De	38	224	282	722	689
upgrading	91	122	156	587	230
centroidsm	74	195	54	255	228
boost.python	7	51	65	2	730
Dx	81	298	173	621	459
trade_date	74	63	68	682	452
Dr	95	57	375	102	741
Ds	96	194	18	5	192
channel	22	4	381	438	672
Kutta	77	98	458	279	809
.lt	27	260	431	234	945
trace	57	37	421	37	451
normal	47	21	392	91	338
track	2	232	232	573	531
libsvm	77	168	186	705	646
linalg.inv	60	194	280	704	485
matplotlib.collections.LineCollection	31	13	388	399	879
satisfying	88	100	291	355	148
trTab	90	293	13	586	744
tract	79	228	487	480	167
_as_parameter_	3	220	329	514	235
COPY	71	171	182	343	88
index_col=False	52	185	28	121	793
in-situ	3	220	361	212	273
especially	88	152	5	334	604
ConvexHull	72	165	15	152	570
foo.csv	36	10	376	712	261
gracefully	12	152	301	618	621
info.get_g_type()	68	174	117	429	428
D=	30	212	419	136	965
D:	30	271	386	281	568
itemgetter	65	27	81	648	526
D8	95	181	373	185	496
Amsterdam	95	268	318	686	497
D4	95	298	419	178	497
D2	85	172	419	467	497
D3	93	298	90	519	537
conditionals	76	94	95	18	734
precise	12	183	409	170	84
inputing	2	116	145	405	356
moderator	18	225	45	472	509
Wondering	11	173	389	763	835
Test	30	271	237	347	560
SSCCE	57	235	463	37	607
Reorder	69	162	191	789	739
labes	59	52	32	51	177
FigureCanvasBase	15	1	329	663	873
office	79	78	487	407	249
ranking	48	144	337	276	285
Unresolved	15	135	44	777	823
x_lims	68	32	13	545	744
6.50	54	69	119	158	126
contracts	79	78	450	101	955
0:200	90	297	13	10	744
reps	42	160	46	323	655
repr	3	18	74	137	975
tricked	50	200	490	210	469
repo	35	122	220	292	594
Turn	69	31	100	530	911
repl	40	141	281	76	632
distinctly	59	117	433	32	198
Hmmmm	18	200	493	504	991
HAS	30	212	55	136	965
numpy.random.normal	20	219	132	725	4
Methods	38	206	191	61	353
median	81	159	173	104	459
6.5	84	108	23	579	322
4402	41	32	289	234	945
tfidf	77	168	186	705	646
subtype	3	18	329	514	3
stupid	50	200	179	739	67
finishing	50	264	128	407	64
6.2	84	108	2	579	322
declarations	7	51	261	215	915
set_title()	31	13	388	592	518
Storage	38	271	259	110	38
.xaxis	46	148	363	46	348
Noting	74	174	370	196	192
Inventory	38	138	191	789	698
years=1	75	174	117	751	486
envisioning	13	59	114	35	907
HTSeq-0.6.1p1	55	132	276	477	568
enumerates	48	144	75	276	356
mean()	43	157	103	784	956
forecast	99	147	450	101	94
gage	79	228	299	198	814
pd.Timedelta	99	63	68	72	390
0.023	96	266	324	695	421
Selective	69	31	100	530	316
enumerated	78	49	131	522	944
numpy.histogram2d	72	14	297	171	627
parens	61	58	452	230	298
rolling_mean	43	85	103	784	817
parent	29	218	181	359	720
kool	24	109	229	140	870
merged2.fcast.plot	46	39	348	577	430
signaled	78	204	456	198	955
condensing	57	235	342	450	451
Uninstall	67	151	327	351	104
reporting_periods	75	35	289	46	810
drop_level	43	47	334	683	73
tractable	88	257	61	675	612
trader	79	78	173	101	955
video_id	48	47	486	631	502
approximative	12	17	342	450	950
pandas.core.index.Index	43	265	460	514	3
0.02s	10	160	37	323	655
etopo	59	117	495	199	177
remake	2	229	328	335	180
PDFs	93	61	315	99	374
traded	79	78	450	480	955
GotoBLAS	7	163	44	418	732
pickled	71	153	336	359	306
generalisation	34	77	131	91	694
stretches	59	52	25	122	884
maintainer	35	122	220	71	594
12:01	99	253	453	525	256
12:02	99	69	119	155	256
12:03	99	140	453	338	361
terse	88	257	61	334	695
unittest	15	135	319	359	957
3000x	96	202	18	173	876
maintained	35	215	60	9	187
grants	79	78	183	101	959
stretched	59	288	284	245	479
numpy.select	27	260	95	18	866
fromnumeric.py	37	250	475	205	461
dendrograms	59	79	41	400	234
hd5	71	153	50	423	108
Sure	24	200	493	504	991
1e-3	96	266	31	695	236
SOURCE	78	144	195	787	637
encryption	71	119	2	697	457
0010	95	50	368	429	428
pandas.DataFrames	21	94	258	557	734
mark	18	15	45	472	922
numpy.dot	44	194	137	704	598
Modeling	38	224	282	94	689
Subtract	69	31	499	530	911
mary	95	181	373	102	741
matplotilb	93	57	167	697	439
SMAs	81	147	450	101	817
pd.read_csv	52	10	376	121	971
30000	21	190	234	557	692
Andrew's	76	17	118	169	441
word_list	65	233	54	27	1
Equally	2	188	147	546	604
pre-allocated	10	188	88	404	581
optimality	77	98	458	279	738
bayesian	77	168	48	705	162
reinitialize	29	40	444	236	444
3000+	79	228	41	400	234
new.pyc	15	132	352	384	305
calculate_duration	57	235	342	450	59
stacked	59	52	233	621	710
quantification	81	214	132	147	4
profiles	81	21	233	51	177
profiler	10	277	118	225	169
Detection	38	206	282	722	38
hdf	71	153	446	702	457
warning	63	37	301	618	625
shear	39	126	7	709	670
profiled	10	277	37	225	169
Causes	69	162	191	127	316
lon_0	39	149	30	298	586
scores1	65	233	74	690	172
scores2	27	174	74	690	172
characteristics	81	183	206	203	563
ZipFile	36	10	489	712	942
elems	86	129	117	211	486
from_tuples	65	157	158	540	956
re-combine	2	116	145	706	986
dangerously	88	152	5	419	53
obnoxious	18	120	114	35	53
everyday	79	78	450	101	852
movements	79	43	206	167	769
bags	71	49	233	251	1
par	10	202	37	323	876
pas	18	59	490	567	469
pat	61	233	489	589	262
harsh	18	200	493	504	53
paw	4	17	232	630	360
resize_event	29	187	128	149	282
sketchy	88	257	138	334	695
thinning	20	246	48	195	765
pad	6	263	25	122	910
struggling	50	120	212	75	727
y_array	41	6	289	107	397
pan	93	154	188	427	203
meaningfully	81	0	147	546	908
exhaust	29	188	447	573	450
tickerList	65	27	158	540	336
)")	86	129	117	211	858
Zooming	5	154	188	427	203
Expr	35	193	19	387	371
numpy.pad()	60	296	14	742	709
third-party	7	26	63	516	398
malloc()	10	188	447	570	450
running	40	57	429	699	321
df1.value	27	29	431	685	945
Gist	57	239	342	450	594
linearize	72	42	38	279	809
parantheses	61	58	452	230	501
markup	61	239	90	769	975
tentative	4	193	342	387	371
multi_index	42	27	286	358	28
fmin_slsqp	60	124	458	324	438
bottle	10	277	118	225	169
draw_if_interactive()	15	135	319	236	873
cstride=1	41	36	289	282	397
2**r	75	32	385	545	486
subplots=True	5	14	383	568	518
Lookup	69	162	191	789	739
aspect	5	284	284	245	479
.dll	7	163	152	215	305
starmap	65	27	81	313	311
Inefficient	76	179	169	574	145
behzad.nouri	4	121	264	646	500
itertools.product	42	27	81	648	207
param	52	185	28	121	793
extensive	13	193	372	387	398
pegs	59	117	235	32	714
matplotlib.pyplot.yticks	5	148	363	558	844
numpy.clip()	5	148	457	306	439
fspecial	60	296	375	742	631
README	55	132	330	384	594
pd.Series.mean	64	150	256	772	48
pearsonr	60	219	472	784	396
matplotlib.get_configdir()	40	112	222	384	315
aiming	12	120	212	419	907
Moler	38	224	282	722	689
1Gb	21	127	355	159	359
left-join	49	47	456	631	36
numeric_only=True	64	150	256	65	48
win32.whl	67	151	470	604	732
x.ravel()	41	30	286	282	263
latencies	79	214	132	101	176
Streaming	69	206	303	60	739
para1	85	172	481	276	211
London	99	268	318	686	687
laughing	50	109	114	35	64
np.dot	44	194	137	704	598
1GB	21	127	355	159	359
vectores	85	6	408	432	807
fulfil	78	100	291	170	148
0.006104	54	50	368	429	449
Confirmed	35	122	156	292	376
matplotlib.pyplot.contour()	72	21	495	199	177
octant	39	149	438	93	177
.A1	44	227	228	0	357
organizing	13	116	126	203	765
error-prone	88	257	61	334	695
solution's	11	272	232	444	469
overly	88	59	5	334	604
ArcGIS	84	248	214	516	321
critical	12	272	134	225	990
Selectively	69	153	50	127	316
expressing	88	257	61	458	612
JohnE's	4	17	254	710	441
moderate	10	278	258	44	871
bessel	60	98	458	742	438
measuring	81	170	206	44	949
Solver	38	206	282	722	71
manufactured	24	147	450	198	817
xlwings	40	141	86	638	561
notable	12	236	147	552	606
fig2.add_subplot	46	35	255	577	430
notably	12	152	138	9	604
Solved	24	109	394	799	870
Assembly	78	144	195	787	944
finicky	88	152	147	129	120
read_csv's	52	185	28	121	793
conducting	13	246	48	195	765
372	54	3	298	318	158
crabtree	55	128	293	52	56
np.average	27	269	403	53	396
instantaneously	10	127	355	159	954
xnx	4	121	264	646	500
scriptable	88	257	65	334	612
practical	88	257	134	630	604
xnd	34	188	361	404	595
376	90	54	257	332	995
road	50	232	232	284	781
100,110	90	297	4	239	995
quietly	2	37	301	618	625
Heads	81	170	409	167	769
numpy-thonic	88	48	61	675	327
whites	39	117	433	32	177
spreading	81	43	275	101	603
ATOM	95	181	373	168	497
whiten	77	168	186	341	646
,,,,,	1	3	300	338	139
to_period	43	63	68	426	956
Week	48	138	66	686	653
ymax	5	284	253	757	339
Though	47	0	392	678	544
css	93	239	90	769	439
Kolmogorov-Smirnov	77	214	132	783	162
3th	95	159	335	168	459
styling	31	23	138	97	710
decode	61	5	443	563	209
compliant	71	171	303	60	457
Plenty	50	264	393	75	564
paramether	77	124	458	324	738
matplotbib	40	57	167	664	321
Python's	76	94	65	735	730
chats	79	228	487	480	285
Head1	85	172	419	224	778
apis	13	120	212	257	53
gory	13	193	372	387	371
numpy.lib.stride_tricks.as_strided	42	27	286	358	368
Statsmodels	77	168	186	341	443
df.H.shift	68	32	154	545	62
RESTful	13	26	90	118	537
subclassed	3	220	329	663	720
subclasses	3	220	329	663	720
multipled	71	49	50	98	108
fellow	11	173	212	739	852
non-deterministic	12	152	147	44	120
Lets	47	21	342	678	927
allocating	10	188	447	573	581
add()	10	202	137	574	876
-60	68	266	324	397	421
recognizable	61	215	328	91	187
wave_flux	42	227	286	385	595
Algebra	38	224	282	436	689
Mismatch	63	44	199	582	888
cleanup	50	232	232	618	625
.get()	3	220	14	514	235
WebAgg	93	187	104	368	591
dates_input	53	139	74	682	390
+range	75	32	13	545	744
temp.py	71	271	50	60	108
0th	78	49	216	616	456
10.8.5	19	7	306	301	232
10.8.4	19	7	306	301	232
set_xlim()	5	203	253	123	958
10.8.2	19	7	306	301	232
ansi	36	10	136	712	261
re-build	67	57	167	499	732
sharedmem	3	188	447	359	450
awkwardly	88	59	61	334	695
delineate	81	43	235	32	177
laptops	79	228	206	480	675
subdivision	38	126	235	722	71
unload	71	218	183	359	959
casts	3	291	162	325	470
fh.write	86	129	465	137	347
Yeah	24	200	493	504	991
matplotlib.cm	22	4	294	653	271
35000	21	223	234	557	252
Points	69	162	279	209	837
week	99	140	453	109	94
Yeap	47	174	392	91	469
Year	48	138	66	339	653
resolution	20	170	284	245	562
list.append()	65	220	361	15	235
SIR	41	40	177	396	622
Canvas	93	1	104	537	728
SIP	67	151	210	368	104
Van	38	224	282	722	689
forget	18	0	232	419	53
Val	48	123	486	339	502
f95	67	132	152	384	305
install-record.txt	55	128	485	193	325
SID	48	144	148	178	637
Var	85	201	173	467	955
children	31	1	388	399	879
pyplot.imshow	22	36	294	199	627
pymedia	67	57	167	697	732
M-1	85	195	370	5	192
+col	90	54	13	10	744
result.append	27	233	54	690	526
issued	29	37	60	699	625
cityblock	60	270	472	152	662
a()	29	40	444	236	444
premium	84	127	2	697	321
distorting	59	170	25	44	576
straightforward	88	257	61	675	612
scipy.signal.correlate2d	42	27	19	313	244
Minimize	60	98	458	742	438
translations	39	149	438	107	365
util	55	128	330	477	461
JIT	7	51	428	2	915
get_majorticklabels	75	174	117	157	314
Scipy.org	60	193	19	387	371
Validation	38	168	186	722	353
.isin	53	139	51	417	131
M-x	40	141	429	288	632
np.pi	96	29	18	173	13
TMax	53	139	51	417	821
worded	18	225	490	170	81
is_good	43	157	103	276	956
Omitting	61	129	465	137	906
plot_trisurf()	72	165	15	152	570
biological	13	246	126	203	765
CARD_NO	48	144	148	178	637
Needs	61	162	191	61	114
neighborhood	81	43	266	588	283
Mathworks	13	224	372	2	730
Actually	47	0	392	678	544
burger	86	181	117	211	858
numpy-discussion	4	193	372	71	509
further	11	232	232	630	338
scipy's	60	296	102	235	570
ribbon	59	117	495	199	177
abc	95	123	373	185	682
abd	84	7	417	301	321
opted	4	17	254	710	441
diag	44	194	137	704	598
group.nth	78	265	173	522	739
magnifying	93	154	188	427	203
pure-python	76	202	37	735	612
onselect	29	40	444	236	622
abt	24	109	229	444	870
clevs1	5	288	216	586	844
notnull	6	157	72	700	956
random.randint	75	243	81	408	484
movement	39	126	206	93	949
Undefined	15	135	319	777	823
ranged	41	6	239	200	192
wrangling	13	120	126	203	765
Accelerating	2	21	126	203	765
ranges	81	21	270	546	603
favourable	10	17	37	534	783
Arthur	4	109	229	567	500
cylindrical	39	149	279	298	573
investigating	50	120	60	35	503
DBAPI2	71	171	473	128	88
Whole	71	162	342	127	114
numpy.diff()	60	48	458	742	738
generalizing	88	257	61	566	612
stretching	59	117	25	122	562
farhawa	24	109	394	140	870
numpy.ndarray	3	220	460	172	787
np.argwhere	42	30	286	358	146
published	35	193	372	387	594
time_size	44	205	46	196	357
deterministic	12	183	409	725	162
buses	81	272	409	203	959
filetype	57	239	222	571	451
fftshift	20	93	425	336	344
aptitude	67	151	327	232	334
0-index	74	100	4	586	995
linear-algebra	76	51	65	169	730
reproject	39	149	279	571	573
deg2rad	76	135	65	735	957
Core	84	127	2	410	580
test.iloc	90	297	13	239	995
distinct	81	21	131	251	944
scipy.optimize.newton	60	124	458	742	438
destination	2	116	328	91	338
RedHat	19	7	432	301	156
XtX	44	297	13	617	744
0.82	96	266	257	695	721
dispatching	76	218	353	359	803
0.80	54	50	368	8	449
0.81	91	122	156	587	376
0.87	54	266	23	8	421
0.84	54	108	23	8	421
0.85	96	266	324	695	421
swaplevel	49	47	75	683	73
0.88	96	266	324	695	421
0.89	68	266	324	695	421
genfromtxt	52	185	336	121	793
non-logarithmic	5	148	32	639	825
get_label	31	1	388	399	879
diamond	59	117	433	32	198
numpy.sum()	60	27	14	15	709
with_labels=False	46	39	494	36	649
cmap.set_bad()	22	4	294	438	271
event.ydata	31	154	188	149	282
ain't	88	59	61	334	469
particular	47	21	392	91	338
LTI	13	26	48	118	720
format=	86	274	465	679	151
David's	4	121	264	710	441
7:9	90	95	115	239	227
pylibtiff	35	193	19	387	371
Xt2=	90	249	180	200	718
Intermediate	30	271	159	281	38
jdx	90	297	13	690	744
2015-05-24	54	50	368	429	428
Funny	50	200	493	504	469
libpng16.so.16	55	132	330	696	372
stacking	34	116	145	566	520
SLSQP	77	98	458	279	438
share	2	239	233	251	338
primitives	76	94	65	169	417
.RData	71	153	50	423	108
sharp	20	117	231	709	562
X-axis	59	288	32	19	884
csd	20	93	425	336	344
2-dim	34	77	0	73	78
csc	34	292	64	348	218
skip_footer	52	185	28	121	793
716	78	3	298	297	158
csv	71	153	50	423	108
Focal	78	144	456	787	944
csr	34	292	64	348	218
Easily	35	122	147	9	376
pylab.savefig	36	80	315	99	619
Lisp	76	51	65	2	730
leastsq()	60	124	458	324	438
.strides	44	227	228	0	357
MCMC	77	98	48	195	416
0,150	41	35	289	200	810
response	24	121	394	567	500
flatnonzero	74	293	4	509	146
randomised	81	21	233	98	702
k-means	77	168	186	705	899
eats	10	127	355	159	359
np.asscalar	3	18	162	266	172
x_ticks	5	148	363	558	844
tval	53	139	51	417	775
retrieval	71	116	122	702	457
-column	48	144	486	276	559
ok0	74	293	108	586	228
infant	11	228	143	122	852
rounded	14	86	314	325	549
bracketed	65	233	452	230	262
Python-2.7.2	55	128	293	52	56
organize	71	116	145	203	986
CDFs	81	214	132	147	4
Income	48	138	159	339	502
Finite	38	206	282	722	689
Texas	95	271	373	339	682
2.4.10	91	57	167	697	732
edge_color	31	13	294	134	271
>>	30	174	117	751	262
np.ones()	34	40	88	396	581
stacktrace	57	239	421	37	451
thnx	24	33	493	395	991
MATLABs	60	296	375	364	631
LONG	95	181	373	90	437
detected	12	215	60	709	187
initializing	2	188	88	573	531
semesters	79	228	233	251	675
LONS	85	205	370	196	192
week_num	64	281	256	551	779
goog	36	10	489	712	262
hurting	88	272	118	334	863
someone	11	173	143	144	652
Bar	69	162	191	209	837
Bas	4	121	264	646	500
.avi	29	61	128	573	54
EURUSD15.csv	53	10	376	682	971
detour	13	26	138	118	398
Bad	30	271	237	281	888
Bah	24	200	493	567	469
easily	47	229	457	306	439
cols=	64	287	406	250	294
check_build	15	176	44	205	823
.wasowski	24	121	394	646	500
df.stack()	43	47	75	683	73
pnas_class	74	100	4	355	228
ports	67	151	152	241	732
subsystem	12	218	183	445	765
scipy.optimize.leastsq	77	124	458	324	438
FFT	20	93	425	191	344
mental	12	120	5	257	727
underscores	61	58	452	230	501
obtains	2	214	456	783	738
PanelOLS	43	265	375	742	631
vtkPoints	2	21	233	98	177
plot.I	59	14	233	621	710
phi_1	41	6	29	200	397
Flat	88	94	147	574	517
phi_2	41	6	29	200	397
CHAIN	94	212	419	339	262
Viktor	24	121	264	646	500
to_frame	43	157	72	683	73
halo_positions	31	220	444	514	720
v0.14.0	91	122	156	587	376
v0.14.1	91	7	156	587	230
1.74	54	108	23	579	399
Desired	30	162	346	347	560
Flag	48	123	218	448	522
Construction	69	138	191	789	837
python2.7	55	128	52	151	372
1.71	84	7	2	410	321
E1	85	172	481	224	778
607	54	3	101	187	158
E2	85	172	481	560	192
EM	77	168	186	722	353
ygrid	3	40	14	15	709
2014-01-04	53	123	42	155	497
2014-01-05	99	69	119	155	256
2014-01-02	99	69	119	155	256
2014-01-03	99	69	119	155	256
offsets	2	21	457	546	479
EE	38	298	282	519	38
commits	35	122	220	407	376
EG	47	174	26	509	228
EF	41	6	335	766	573
ax.dist	5	288	284	245	479
Tests	84	271	2	410	560
PyGTK	93	151	104	368	591
EB	67	151	210	351	732
geared	13	26	138	118	398
difficulty	50	120	393	75	727
terminals	57	37	342	450	59
rated	79	228	487	480	285
EX	99	140	453	198	221
EU	95	268	282	519	221
decompress	71	153	50	423	306
ES	48	281	486	194	779
ER	79	78	450	101	955
El	19	7	306	301	232
benefits	76	272	134	552	990
sublists	34	100	131	522	336
Helper	53	281	51	185	779
hulls	72	42	231	152	102
Haar	38	126	7	195	670
Ed	24	121	394	140	500
Eg	47	21	392	678	9
nonnegative	34	100	280	88	485
Helped	24	109	229	567	469
Ex	78	49	233	347	560
1.7s	21	160	274	323	655
Et	24	109	394	444	870
_plot	41	35	289	200	810
1.7x	10	202	37	323	876
Er	90	200	493	504	991
cv2.findContours	31	13	388	592	397
mistakenly	24	200	292	210	747
40ms	10	202	37	323	876
disregarded	78	68	456	355	283
_was_	18	200	490	504	991
instances	2	1	233	514	720
abs()	14	29	314	15	709
cups	14	140	85	391	361
build_ext	55	112	276	57	137
Okay	24	200	493	504	991
smoothes	72	165	270	733	301
smoother	20	165	382	709	562
Cheers	24	33	229	667	870
Sven	4	121	264	646	500
statement	47	37	222	699	406
smoothen	72	87	382	709	301
rates	79	147	450	101	746
family=	45	230	448	767	909
smoothed	20	93	382	147	4
pl.show()	29	203	128	123	55
self.a	27	40	444	396	622
Language	38	224	282	94	689
tresholds	74	233	131	522	336
excels	13	23	138	118	130
FFTs	20	93	248	191	989
sizable	71	272	126	203	457
favorable	88	152	147	334	908
sold	79	78	487	480	955
myclass	74	297	26	239	228
Problem	30	271	301	281	120
oscillate	20	170	231	391	84
peaked	20	170	409	507	176
np.std	27	269	403	784	396
LC_ALL=	45	80	222	269	315
gotten	50	264	393	75	564
FFTW	7	51	428	2	166
865	54	3	101	297	262
864	54	3	117	187	262
RdGy	46	36	73	316	488
866	36	174	117	751	262
Intro	38	271	282	519	38
contrary	88	152	147	145	908
sub-plot	5	154	32	19	518
get_group()	43	157	72	683	956
treated	61	215	328	355	260
pre-existing	2	116	328	486	338
Boud	24	121	264	646	500
ages	21	190	234	407	326
to_datetime	52	63	68	426	452
B	85	172	419	5	192
headings	61	49	338	405	502
twiddle	50	21	342	450	950
.axes	31	203	348	577	430
with=F	90	54	257	332	744
mountain	39	73	279	301	321
2.5Hz	20	288	25	122	979
reinstalled	67	151	327	232	104
built	76	26	65	9	398
dancing	93	187	429	51	54
zipcode	48	123	486	339	653
build	67	57	167	499	732
minm	74	100	108	586	283
plt.ion	46	203	348	699	55
df.isin	27	260	431	234	945
theano.function	60	40	444	396	622
hourly	99	147	450	101	817
medians	81	159	173	104	459
#do	27	174	117	424	835
2th	78	6	216	616	456
ma.masked	90	297	4	509	228
coercing	3	44	162	172	470
rollReturnRandomDf.iloc	90	297	13	617	744
.to_latex()	43	265	72	24	793
easing	76	21	275	742	338
matplotlib.pyplot.scatter	31	13	294	199	627
fluctuate	20	170	409	44	84
.local	55	132	352	113	137
13:30	99	253	453	525	256
numpy.linalg.linalg.LinAlgError	63	44	280	582	485
reprojection	13	23	126	203	453
unevenly	81	147	270	546	301
4.4.7	19	7	33	590	322
.ebextensions	55	132	352	113	798
df.unstack	64	287	406	631	294
Sample	30	271	191	347	565
organise	81	116	145	203	360
azimuth	39	149	438	298	573
xstart	41	6	289	200	486
organism	79	144	195	787	944
joining	43	116	75	706	986
particularly	88	59	138	334	604
disturbances	10	246	58	428	959
prepackaged	84	26	63	516	850
filtered_df	53	139	51	417	821
fink	67	151	210	351	127
relation	12	270	472	783	738
Hill	24	59	114	424	469
fine	47	37	491	699	59
find	47	229	392	588	338
backtracking	12	232	232	588	360
month's	79	78	450	101	955
multichannel	22	248	381	141	722
giant	2	116	145	573	986
depended	84	57	416	697	321
dividing	14	86	275	325	603
convoluted	88	257	61	334	695
money	13	78	63	515	805
fft.fftfreq	96	93	425	336	344
Pool	29	218	345	445	803
reimplemented	76	264	65	169	31
g.agg	64	150	256	772	48
matplotlib2tikz	40	187	429	51	54
some_value	53	260	51	448	821
numpy.rollaxis	42	30	396	74	368
relocate	2	263	457	122	338
plt.style.use	46	80	383	97	906
results.reset_index()	64	287	256	551	48
ax.fill_between	46	39	289	282	649
resolve	11	229	389	799	360
redefines	31	215	181	236	879
glorified	76	94	122	169	730
Suddenly	21	59	301	618	120
redefined	29	40	181	236	406
ph	90	54	257	332	744
back-ends	93	119	429	697	591
pre-sorting	10	272	118	44	863
set_fontsize	31	1	388	399	879
prod()	42	40	14	313	709
250MB	71	153	50	571	593
Inspecting	61	49	491	98	260
genomic	81	43	206	251	944
QCentralWidget	31	1	284	245	444
initial_val	34	77	251	396	694
flavor	52	171	473	128	88
keep_date_col=True	52	185	28	121	793
plt.hist2d	46	14	297	171	627
visiting	13	193	372	231	594
please	11	173	143	37	451
splendidly	24	109	229	140	264
smallest	78	100	266	588	283
supersedes	2	215	491	9	621
aditional	50	264	114	35	469
Kind	11	225	464	419	53
dgemm	60	296	102	431	751
responses	11	225	394	170	219
Dictionaries	65	265	158	574	739
Limiting	21	160	409	44	576
4gb	21	127	355	159	359
vanishing	12	170	409	44	576
ipython	40	141	281	76	632
lightness	22	4	427	438	672
alters	2	215	491	174	621
cubes	39	126	235	400	102
Deaths	53	95	115	239	227
tipping	81	43	206	44	949
annual	79	147	450	101	817
Numbering	69	162	191	789	739
1294272000000	54	50	368	158	277
checkboxes	59	154	188	427	728
-file	71	153	50	423	108
SciPy.org	35	193	19	387	371
loffset=	95	287	449	48	687
upgraded	91	7	156	587	230
consume	10	188	355	159	863
_rvs	4	225	490	170	81
sln.x	90	293	108	586	744
asymptotically	10	202	356	327	668
string-based	34	21	131	546	734
upgrades	35	122	167	664	376
TVol	53	139	42	417	775
xkcd	93	230	448	767	909
headaches	88	152	5	284	53
transformations	39	116	126	203	734
2560	21	205	251	196	252
TRX_DATE	48	281	66	788	687
laplacian	77	98	382	191	989
Regards	24	109	394	102	822
axes_grid1	5	23	388	97	518
scripttext	36	10	485	193	261
ahhhh	24	109	493	140	469
meeting	78	43	291	588	148
math.ceil	75	29	403	28	486
Princeton	38	224	282	94	689
sourceid	78	204	195	178	637
cyborg	4	121	264	646	500
Months	99	182	318	109	94
NDX	53	139	42	250	775
500,000	21	190	234	557	42
arr.T	44	30	396	404	263
Conveniently	65	100	216	355	336
Studios	84	163	152	241	850
967	54	204	298	338	700
960	54	3	298	318	898
961	21	204	298	318	713
Classic	84	271	2	519	38
solid	59	117	433	32	198
OCaml	13	26	65	2	730
cluster	81	79	41	400	234
superposed	59	117	433	32	714
equals()	6	94	95	18	866
Validated	13	224	372	527	509
n_colours	3	220	361	514	235
key=	64	150	349	772	640
key3	48	123	486	178	637
key2	48	123	486	178	637
key1	48	123	486	178	637
drawbacks	12	272	134	552	606
itself	2	215	392	91	338
calender	99	140	450	109	955
Tiago	24	109	394	140	870
DataFrame.from_items	94	233	74	551	526
Returned	63	271	74	185	199
open	36	153	50	712	364
Inspect	2	49	328	405	713
Hermitian	60	194	280	431	708
Correct	47	59	445	567	907
greyed	59	154	188	427	203
QT4Agg	93	80	315	435	591
latency	10	160	118	225	176
keys	65	233	158	540	944
appreciably	10	202	37	323	876
leopard	19	7	410	301	232
yesterday	50	264	292	407	747
index=1	48	47	486	339	779
appreciable	11	295	389	763	867
Nancy	53	181	42	250	775
poitns	81	43	270	733	301
cstride	5	13	294	653	608
TextParser	43	265	72	24	314
.real	96	201	18	617	597
23:30	99	69	119	155	256
index=2	78	144	338	616	456
flags	45	51	334	215	915
organization	2	116	122	203	765
avaiable	81	21	450	9	702
parametric	72	98	38	147	809
map-reduce	76	272	126	203	765
winsorized	77	214	132	783	738
lottery	59	228	206	480	852
regularly-gridded	72	165	15	674	301
randomly-generated	44	100	258	45	943
sql.read_frame()	71	171	303	60	88
impetus	13	120	5	419	53
submodule	15	135	319	777	873
06459175	54	186	300	331	299
fitpack	7	51	65	215	461
subfolder	67	132	352	384	305
snag	50	264	114	35	564
Series.values	3	220	72	514	172
within-group	77	270	472	264	662
snap	5	13	284	245	479
Chips	78	144	337	787	502
Robert	4	121	264	646	552
bin	55	214	297	171	568
re.findall	86	89	163	340	66
varchar	61	171	473	128	88
np.abs	27	29	18	28	62
vertically	59	52	25	122	884
Did	47	0	392	143	835
big	10	272	258	44	863
bid	48	78	66	762	955
np.nanmax	27	269	403	53	244
collectively	81	21	233	621	177
PlateCarree	39	149	279	298	573
half-precision	14	291	85	325	549
YEAR	95	298	66	168	653
Div	53	123	51	339	779
Dir	48	138	159	197	653
scaled	81	288	284	245	479
follows	2	235	342	347	560
jsonify	71	233	158	699	888
zero-pad	81	170	25	546	603
Bradley	24	109	394	102	340
1410	37	50	368	429	428
pointwise	34	194	137	431	598
google	13	239	372	387	564
often	88	152	5	334	604
10,000,000	21	190	234	557	42
numpy.arange()	65	40	14	15	709
prototyping	13	26	126	458	765
newby	18	120	212	739	727
strongest	12	170	231	44	563
nextday	27	40	444	784	622
accelerate	7	51	345	169	166
oscillations	20	93	231	709	562
co-occurence	81	21	131	522	1
cv2.matchTemplate	22	90	246	141	942
pronounced	10	170	409	44	576
x.astype	3	291	141	266	969
scale	59	288	284	245	479
euclidian	39	270	472	152	662
scala	13	26	65	118	730
affects	2	215	491	174	621
store.select_column	53	139	42	417	775
pre-written	76	48	65	742	31
eliminate	2	263	457	618	360
Nothing	50	59	301	699	469
class's	3	220	329	663	720
either	47	0	392	91	338
remembered	50	200	493	504	991
continuing	50	37	301	167	769
ypos	41	6	481	176	397
David	4	121	264	646	500
restrictive	88	152	147	334	604
")])`	86	129	201	211	858
feb	99	182	318	109	94
A_L	74	297	108	690	577
Typically	47	0	392	678	544
tripping	50	59	114	210	908
new_index	64	47	406	551	48
optimized	76	51	65	169	730
A_y	48	123	486	339	82
A_x	48	123	486	339	82
seaborn.heatmap	45	13	334	592	709
pick_events	81	43	206	167	675
Precisely	24	109	229	630	264
Albania	95	181	373	168	497
A_i	85	195	4	255	192
pollution	15	152	181	777	195
_really_	47	0	392	630	835
gouraud	22	36	294	653	488
subaxes	59	154	188	427	2
pythonpath	67	132	352	113	137
circled	59	117	433	32	116
262144	21	190	234	557	42
proportional	81	170	266	44	576
yvalues	41	288	289	200	810
ftheader.h	55	176	397	696	305
myfunction	64	150	256	551	779
subsl	75	227	54	690	357
subsm	46	35	117	562	348
infomation	11	109	394	567	867
scipy.stats.ks_2samp	60	296	375	742	398
Fastest	69	252	100	530	233
Wanted	4	235	254	347	560
subfields	78	49	162	98	260
errant	6	37	301	618	625
User_ID	48	123	486	178	637
BoolArray	3	227	46	266	969
python-sympy	67	112	276	57	334
usp	78	49	338	616	456
hoped	88	264	61	210	747
sdd	53	95	51	448	821
serie	79	147	450	198	687
serif	45	230	448	767	909
multilevel	43	265	75	771	921
hopes	50	232	232	35	81
migrating	13	120	212	739	727
sdk	84	57	167	499	321
I'll	18	232	232	567	469
originals	78	204	456	405	356
mavericks	19	7	306	301	232
gstreamer	71	248	381	571	593
Amazing	24	33	229	140	870
Reviewed	74	281	54	67	577
clips	14	263	301	618	59
tomorrow's	79	147	450	101	675
regedit	40	141	429	384	92
y-x	96	201	18	173	13
Reviewer	95	123	335	250	82
autonomous	12	42	38	279	809
planing	50	25	232	35	469
units	81	288	284	245	479
200K	21	190	234	557	42
Answering	18	225	45	472	220
WxAgg	93	187	104	435	591
to_replace	52	89	163	85	66
images	22	248	381	571	593
df.T.iloc	90	297	13	10	744
scipy.signal.welch	20	93	425	336	344
numpy.core._dotblas	7	163	428	418	305
\numpy\random\mtrand\	37	128	386	475	194
streamlining	13	26	389	225	990
%	86	129	465	137	347
200k	21	190	234	557	42
Martelli	4	121	264	710	143
df2.apply	64	150	403	65	48
200m	54	223	419	338	361
train_index	43	111	115	239	227
Scripts	55	132	386	475	305
200x	10	202	37	323	876
v.1500	19	186	33	590	966
January	99	182	318	109	94
lena	22	90	246	141	722
llvm	67	163	152	326	334
raveled	34	100	216	522	336
accidental	18	200	490	504	81
lend	11	173	143	419	53
favourite	13	26	63	458	237
liners	11	257	61	444	264
polynomials	77	98	38	279	809
lens	39	149	438	733	116
z_min	41	288	289	200	810
Formatting	69	31	100	530	316
24:00	99	274	68	679	151
layout-algorithms	12	183	409	44	563
200+	21	190	234	557	655
vehicles	79	43	206	788	944
Spectrum	38	206	282	722	71
Accept	18	15	45	472	922
2002	99	186	121	372	361
tradeoff	10	272	409	44	990
2000	21	223	234	557	252
2001	99	182	318	372	94
2006	99	182	318	372	94
2007	99	182	318	372	361
2004	99	182	318	372	94
2005	99	182	318	372	519
failures	12	183	301	284	404
2008	99	182	318	372	519
2009	99	182	318	372	519
rinse	10	232	232	167	180
re-phrase	18	174	490	567	81
intricate	13	26	126	118	765
Plotting	69	31	100	530	911
d+	86	89	163	299	66
df.info()	94	222	446	293	729
Phrase	95	138	159	787	653
500th	78	21	338	616	456
45129-09-19	54	69	119	158	126
45129-09-15	54	69	119	158	126
2.962492	90	54	257	332	744
intensive	10	272	118	225	863
plt.Axes	46	1	348	577	430
data.apply	27	150	10	772	838
blaze	71	171	473	128	457
atlas	7	163	428	418	166
decomposition	77	194	280	431	485
enlightenment	11	109	229	444	870
ingredient	65	233	158	27	1
uninitialized	2	188	447	791	450
lenghts	81	21	270	546	301
set_gid()	59	52	495	621	710
DF.ix	53	139	51	417	775
tiebreaker	48	138	159	339	653
%memit	10	202	37	323	876
Fourier	20	93	248	191	344
arrange	2	116	233	98	986
frobenius	85	194	280	431	485
itertools.imap	65	233	81	648	311
EXPLANATION	30	212	55	429	428
shock	20	189	206	507	949
Mex	7	51	90	215	730
CArray	71	188	446	702	306
7.1	84	108	23	579	322
min	81	269	266	28	603
stddev	81	159	173	104	459
7.4	54	108	23	579	931
bleeding	35	232	220	292	376
application-specific	76	94	65	145	730
replicates	57	235	342	450	950
MasterArray	2	188	145	573	923
uncomfortable	88	257	5	334	695
replicated	57	235	328	799	187
html5lib	67	176	44	696	136
fonction	47	48	457	630	360
formats	71	153	50	423	260
+001	68	266	324	713	449
wireframe	59	52	495	199	177
Triangular	38	206	282	722	71
+000	95	181	419	211	199
anther	47	48	145	306	612
rowwise	34	116	145	566	986
loglog	5	14	383	639	825
0.00000001	90	297	4	617	744
body	57	174	143	170	451
justification	12	86	314	630	84
C-code	76	51	65	169	957
pseudoinverse	44	194	280	704	485
down-sample	20	147	409	709	826
low-hanging	76	272	118	257	606
1-to-1	81	21	131	522	944
sink	39	43	235	167	769
xnew	41	6	177	282	142
others	47	0	392	170	219
sine	20	93	425	191	344
sinc	20	93	382	191	989
extreme	81	170	409	44	84
x.dtype	3	18	141	266	969
alaska	86	181	287	211	199
contradiction	12	152	311	145	120
df1.combine_first	49	47	406	631	445
Null	6	68	159	355	910
guidance	11	173	389	763	867
FP	12	183	409	170	84
FR	95	298	335	168	497
index_col=0	52	185	376	121	971
FT	20	93	248	191	344
tau	96	201	177	396	142
FX	84	298	214	519	38
lims	81	288	266	733	116
2^24	14	266	201	391	482
Nick	4	121	254	646	500
FB	95	123	373	686	517
FC	68	266	370	751	192
divmod	27	29	385	173	486
FF	54	186	198	34	789
16:01	99	69	453	155	256
limb	50	232	114	144	469
FI	85	298	419	467	361
clockwise	39	149	438	298	116
valueError	63	44	199	582	888
Nice	24	109	229	444	264
Growing	76	272	118	573	863
sklearn.datasets	15	135	319	777	823
zscore	43	219	173	784	459
Fs	20	93	425	507	344
clocking	10	202	37	323	876
Fx	53	174	272	682	199
test.pdf	36	80	136	99	619
DF1	48	144	195	787	637
DF2	48	144	195	178	637
Basically	47	0	392	678	544
MDS	77	168	186	705	646
MDP	13	57	167	697	398
right=None	46	35	289	176	201
matplotlibwidget	93	187	104	537	728
ax1.scatter	46	39	73	316	649
WEIGHT	95	228	335	168	517
out1	49	172	481	631	445
Geometry	71	57	44	499	732
DFT	20	93	248	191	344
getters	31	1	388	663	417
DFS	39	43	206	609	959
Feature	95	168	159	705	229
tstArr	90	297	13	239	744
eccentricity	39	149	438	93	116
whitespace-delimited	61	153	50	423	457
tearing	50	120	114	35	64
DFA	53	139	51	339	682
subscription	79	78	63	515	285
F1	85	298	419	467	994
F2	6	298	419	467	910
tkagg	45	80	315	435	591
F5	40	141	281	764	954
F6	40	141	281	76	632
F7	30	212	55	429	428
tunnel	40	119	429	609	377
F9	30	271	259	429	428
dfnew	43	63	68	771	3
DFs	79	116	145	706	986
16.03	54	3	257	332	995
F#	7	51	65	2	730
cap.read()	74	174	74	212	262
Combining	69	31	100	530	911
multivariate_normal	60	124	102	324	438
unpacking	65	233	158	145	890
dn	85	201	370	560	142
e.g.	47	0	392	91	9
gamma0	10	170	409	44	84
Condor	84	119	167	697	321
gamma=	54	108	23	695	427
vectorising	10	202	118	225	207
dl	15	135	319	777	823
per-row	6	85	173	784	459
Written	47	215	342	347	108
employs	76	94	65	169	734
bones	57	235	342	450	950
g.filter	27	260	10	772	945
expandable	71	153	122	702	457
DrV	24	121	264	441	500
-undefined	55	128	293	52	56
10.04	19	7	432	301	156
native	76	94	65	735	730
gca	31	203	348	577	958
Fwiw	47	57	375	364	631
gcc	67	163	152	326	334
gcd	60	270	472	742	662
gcf	31	1	348	236	444
+00j	68	54	257	713	776
line3	95	181	335	168	497
line2	46	233	335	690	649
line1	46	39	335	577	649
2:6	90	95	26	239	227
2:5	90	297	26	239	744
2:4	90	297	26	239	744
2:3	90	95	26	239	919
attachment	40	239	192	390	108
2:1	90	288	284	245	479
stock	79	78	450	762	746
Overriding	2	215	329	514	621
ndimage.label	22	13	7	152	670
ABI	7	163	152	241	850
collection	2	1	233	91	177
scalable	88	257	61	334	612
scipy.stats.chi2_contingency	77	168	186	705	162
2003.04.08	54	69	119	155	361
multiplication	34	194	137	431	734
libifport.so.5	55	132	352	113	305
da	75	174	116	425	486
unique_ids	48	123	486	339	779
replace_nans	6	157	88	313	244
memorize	2	246	145	167	769
25,000	21	190	234	557	42
.ipython	55	132	352	775	798
lines	59	52	433	32	177
numpy.linspace()	42	27	14	313	244
data.tolist()	36	174	74	699	942
chief	12	120	5	419	53
10-day	99	147	150	101	955
ssize_t	3	67	142	146	549
dz	41	6	177	107	142
lined	59	52	25	546	714
Technically	47	0	147	678	908
Monary	71	26	183	359	457
3.1.2	91	7	167	499	732
3.1.1	91	122	156	587	626
3.1.0	91	7	417	13	626
pd.rolling_std	64	150	449	48	48
dy	41	201	177	560	142
block-averaging	6	263	396	566	520
dbus-daemon	55	112	276	57	128
bridges	59	43	41	400	234
ext3	76	272	118	359	959
scipy.griddata	72	165	15	199	627
userID	79	144	487	197	653
labor	13	120	212	35	727
Director	95	138	159	686	517
12.04	19	7	432	301	156
tstart	48	204	456	788	211
6320	95	181	427	8	198
MovieWriter	93	1	90	537	537
<	27	260	431	234	945
.merge	49	47	406	631	181
skilled	13	120	212	739	727
junction	39	126	206	93	949
descriptive	88	265	181	144	195
LoadLibraryW	40	37	222	444	625
sortlevel()	43	47	337	708	73
dat	36	174	74	712	262
mention	47	59	490	252	908
cutting	2	263	25	122	781
dap	15	132	44	696	305
datetime64	94	63	68	426	452
insisting	11	264	389	35	907
kindness	18	109	179	739	67
day	99	140	453	109	94
synaptic	67	151	327	232	334
pgal	53	260	272	448	821
verifying	12	37	60	567	120
warned	88	152	147	419	908
sas7bdat	71	171	473	128	88
identified	2	215	60	98	187
dF	81	147	370	198	211
webagg	93	122	104	435	591
disregard	12	229	456	170	563
identifies	2	215	491	487	702
identifier	48	49	195	787	502
uninteresting	76	43	235	709	562
constraints	12	42	38	279	809
activate	40	112	352	113	137
From	47	193	19	678	544
.notnull()	53	139	51	417	821
))))`	75	32	385	425	486
where_dealiased	74	293	4	586	228
PBL_AWI	53	123	42	781	775
FAQs	35	193	19	387	371
calibrate	39	246	58	195	949
.splitlines()	36	10	136	712	261
sk-learn	55	128	330	477	791
PyEval_RestoreThread	63	158	397	582	832
ShiftScheduledEnd	53	139	51	448	821
aggfunc	43	157	103	376	956
trickier	88	257	61	334	695
Altering	2	215	457	179	844
type-casting	94	94	162	426	470
stead	47	21	233	91	338
Stage	85	144	173	197	653
CSI	94	222	446	702	160
coef	85	256	177	668	976
Reliable	76	48	61	675	31
UPDATE	30	212	254	347	560
CSC	34	292	64	348	218
hazard	77	183	132	783	162
CSV	71	153	50	423	108
CSS	93	230	90	769	374
CSR	34	292	64	348	218
indent	57	263	452	230	298
logilab	35	122	220	664	315
steal	18	232	232	306	81
28000	21	223	234	196	252
cname	68	32	385	211	486
dataPoints	57	205	251	196	59
barriers	13	183	235	118	185
womenMeans	41	6	289	282	810
facilitate	13	26	126	118	621
unrolling	76	51	118	169	915
south	39	149	438	322	10
Developer	55	128	293	477	799
_regen	48	123	486	339	406
Occasionally	13	152	126	203	765
puppet	67	232	167	697	732
Exercise	13	193	372	387	689
sadly	50	59	392	630	469
observer	95	271	373	686	653
fromat	47	49	50	98	108
performance-critical	76	51	65	169	730
readline()	61	58	336	589	240
triplot	31	13	388	199	627
Association	95	224	373	102	340
.size()	64	150	256	197	48
gear	84	119	429	697	377
minVal	68	259	18	28	62
Rutger	24	121	394	646	500
Earth's	39	149	438	93	116
documentations	50	193	393	75	564
one-hot	77	168	186	341	646
content_type	36	61	315	712	942
while-loop	57	37	222	699	625
GPU-based	7	51	63	2	730
np.diff()	6	157	103	18	244
loved	13	26	63	697	398
Referenced	55	128	368	429	428
prune	5	148	25	122	844
hists	59	52	233	51	710
geostrophic	20	170	438	93	949
inversely	81	214	266	286	4
pool.close()	29	37	222	699	55
subsequence	78	100	108	586	283
References	4	193	19	387	114
ZMatrix	74	293	4	509	228
loves	88	225	5	145	53
histc	60	296	297	171	631
Pay	12	152	301	618	120
curves	59	52	231	32	177
milion	21	190	234	557	42
Compiling	7	163	56	326	915
Pad	6	263	456	130	910
dictate	12	229	457	306	563
curved	39	149	29	32	116
demonstration	57	235	342	450	950
Pan	93	154	188	427	203
misaligned	2	52	25	546	884
minimally	57	235	342	450	766
haywire	50	232	301	167	769
32-	84	163	210	241	850
322	54	3	101	187	158
323	54	108	23	8	399
320	37	3	298	187	158
321	37	3	101	187	862
326	54	3	101	187	158
327	54	108	23	8	931
324	54	3	298	187	158
Requester	53	139	42	417	775
unless	47	0	392	678	908
OpenPyXL	91	57	156	587	561
32K	21	127	355	445	959
Factor	95	138	123	514	443
rearrange	34	116	145	566	520
co2	99	147	453	198	687
preliminary	76	272	118	169	990
suprisingly	88	257	61	334	612
pygraphviz	93	79	76	97	537
barebones	57	235	342	450	950
OpenPyXl	91	7	156	587	230
strace	40	277	43	699	954
32k	21	205	258	45	252
gather	2	21	145	203	92
Donald	61	271	419	86	517
date_list	74	281	54	690	995
32x	84	127	2	241	321
axvspan	31	13	388	399	879
--------	54	69	119	158	126
selection	2	111	147	369	36
brute-force	88	257	61	675	612
confirmed_settings	48	144	195	276	502
absorbing	12	43	235	195	563
text	61	52	50	539	108
scipy.convolve	60	296	382	313	396
cross-validation	77	168	186	705	646
portfolio	79	78	173	101	955
pd.DateOffset	64	274	39	679	390
subarrays	34	77	0	522	694
expenses.csv	53	10	376	85	971
0630	53	139	256	417	775
q=0	85	100	266	391	283
numoy	15	57	44	664	315
Mod	68	260	431	234	821
photographs	22	126	7	709	562
namedtuple	65	94	158	540	720
peptide	85	298	239	237	326
pyspark	40	57	429	364	791
beat	10	202	37	225	876
lower_bound	41	100	177	107	709
FacetGrids	59	23	495	51	710
stripes	59	117	433	32	198
bear	11	120	212	739	727
13ms	29	160	206	167	769
beam	39	126	48	93	949
striped	59	117	433	32	198
fct	74	40	444	396	622
Cleaner	88	257	61	675	327
cursor.fetchall()	65	171	473	343	88
calling	2	40	444	236	709
.to_list()	64	139	74	551	779
backend_tkagg.py	37	250	475	314	173
Distributions	81	206	132	147	71
pacman	67	151	327	232	334
update_r	29	40	444	236	55
omission	24	200	490	424	991
exists	47	215	392	630	31
pyOpenCL	76	51	65	2	730
df.iterrows	43	157	118	750	207
Wikipedia	38	193	372	387	371
writable	55	132	352	113	798
imsave	22	90	246	141	722
Various	38	206	282	722	353
scikits-learn	77	168	186	705	646
DataFrame.resample	94	63	449	426	817
2d-numpy	2	49	216	522	128
df.rename	64	150	406	551	294
pre-allocation	76	188	118	169	863
phases	20	93	425	191	344
df1.groupby	64	150	256	197	48
clearing	29	203	348	573	55
.time()	53	281	68	72	390
plt.xlim	5	284	253	757	339
routing	39	126	48	195	416
routine	60	296	65	742	709
progress	50	232	232	35	64
Sending	71	218	183	609	600
01-30	99	69	119	155	256
df.index.names	94	95	115	551	227
halo_pos	3	220	444	514	406
Study	30	271	282	429	38
Positioning	59	52	284	209	479
algorithms.py	63	3	330	187	158
S	85	174	419	5	192
float64	3	291	141	266	969
moderators	18	15	45	472	922
sexes	79	228	487	101	675
Kullback-Leibler	85	270	472	467	662
otherwise	47	0	392	91	338
.set_xticklabels	46	39	494	46	348
venv	67	132	352	113	137
ax.right_ax	31	1	388	399	879
np.fromiter()	65	27	14	15	31
invasive	88	232	61	334	695
Solving	77	98	38	279	809
ISIN	61	224	373	686	517
aA-zZ	68	32	42	455	775
X-values	81	170	266	588	283
sort()	43	157	349	683	640
compile-time	3	67	261	146	235
monstrosity	88	257	61	334	695
array-like	3	94	329	514	890
Smart	24	109	229	444	264
unutbu's	4	17	254	710	441
OLD	30	49	55	405	965
tremendous	76	272	118	225	990
actualize	59	154	188	51	2
Hint	47	193	19	387	371
copies	34	188	447	212	450
Oranges	79	228	487	480	653
%precision	45	80	334	269	913
OLS	77	168	186	341	443
copied	2	215	328	98	187
outliers	81	214	266	104	176
filling_values	52	185	28	114	793
358.5	39	149	324	200	421
define	2	229	457	306	338
CPU's	7	218	345	445	166
1.3.1-4	91	7	417	587	230
465	54	3	101	187	689
460	21	127	102	431	535
assert	27	260	95	18	866
player	79	228	487	480	285
cor	46	203	255	577	430
angles	39	149	438	298	116
jtaylor	4	121	264	646	500
resultant	2	21	328	98	338
Toyota	79	228	487	621	675
solve()	60	98	458	431	485
maxed	50	127	355	159	359
angleA	39	149	438	298	116
angleB	39	149	438	298	116
plain	47	94	392	735	260
dstack	42	30	286	74	595
cov	60	219	280	324	454
appearance	59	52	433	51	54
gridspec.GridSpec	46	284	255	577	430
promoter	78	49	456	787	36
rectangular	39	149	270	733	102
zlib-1.2.8	67	151	327	664	334
promoted	3	220	162	317	470
revisited	50	264	131	522	944
725	90	18	272	682	199
zlib-1.2.7	67	151	327	664	334
grasped	76	120	393	75	727
stock_id	43	47	72	771	73
array_csv	34	153	336	423	108
file	71	153	50	423	108
helper	76	40	444	306	439
guiqwt	13	26	63	118	398
helped	24	109	229	140	870
openCv	47	57	392	697	888
Fetch	69	162	191	789	739
claimed	50	264	292	252	747
inspector	93	187	104	537	728
numpy.equal	42	27	14	313	866
%h	86	274	465	679	151
begining	2	263	328	167	769
Product	48	138	159	197	653
PyArray	76	67	261	312	417
landmarks	39	149	438	93	102
%j	99	274	68	679	151
arr_a	27	260	95	53	273
openCV	22	248	7	141	722
arr_b	27	100	361	212	273
capped	79	78	266	167	955
pkgs	55	132	352	113	568
set2	74	100	108	586	577
arr_f	27	29	431	28	945
finite	20	42	38	279	84
matplotlib.cm.jet	22	4	294	653	488
%g	86	129	465	137	347
openblas	7	163	428	418	166
right=True	75	266	289	171	810
Marcus	4	121	254	710	441
practice	88	152	5	419	908
setA	68	32	370	545	192
setB	68	32	431	545	945
2.3.0	19	7	417	13	972
%a	86	274	465	679	151
2.3.2	19	7	417	301	644
2.3.3	91	122	156	292	376
2.3.4	91	7	417	13	644
2.3.7	19	7	417	13	644
ion	29	203	128	111	55
write.csv	36	174	222	712	262
set_	31	13	388	134	879
pandas.read_csv	52	185	28	121	971
tighter	88	257	61	257	612
byteorder	3	291	85	608	44
arr_1	3	18	272	266	262
arr_0	36	18	272	266	969
matrix()	3	67	137	15	235
{-1	85	194	370	560	391
thought	50	264	292	210	747
Sincerely	24	109	394	567	500
plt.arrow	46	13	253	592	608
sets	81	21	233	251	338
alko	24	121	264	646	500
single-segment	3	188	361	404	694
CBLAS	7	163	428	418	166
barking	50	232	114	35	64
v0-v8	12	42	38	279	809
iterator=True	52	185	28	121	793
evince	93	61	315	99	374
voltage	20	147	206	428	949
symlinked	55	132	352	113	568
pHYs	71	239	50	571	942
YYYY-mm-dd	99	281	68	198	221
~1000x1000	21	90	258	45	252
conjugates	20	93	425	191	344
Advantage	76	183	147	169	563
my_autopct	31	40	444	236	444
YouTube	4	224	372	94	704
lake	95	228	206	168	949
bitmaps	93	61	315	99	54
_metadata	94	222	329	663	720
numpy.testing	60	193	65	313	371
Country_Name	49	123	486	631	82
c11	53	123	272	339	199
resize()	42	188	88	404	581
optimizations	76	51	428	169	990
everthing	40	37	301	699	59
excelfiles	33	204	165	405	690
Z's	81	43	270	733	301
Formatters	5	148	363	558	844
cnts	75	227	385	690	833
skinnier	59	52	433	32	714
qualitative	59	52	335	621	710
rollStocks	48	144	486	547	779
CountryName	95	265	159	789	739
fiddly	88	257	61	334	695
Matploblib	59	52	495	51	177
minute-level	99	147	450	101	817
np.newaxis	44	30	26	74	263
soft	13	239	330	609	765
audible	20	170	58	428	562
Documents	37	250	82	475	194
Excel	71	153	86	638	561
alive	29	218	447	570	450
queryid	48	100	108	522	637
convey	12	183	490	170	563
stuffs	13	120	212	118	53
conver	47	229	392	91	338
highlighting	59	23	134	51	606
Zeitstempel	53	139	42	682	775
economical	10	272	61	675	327
2011-01-03	99	69	119	155	256
transmitted	39	246	58	428	600
2011-01-01	99	69	119	155	256
pandas.notnull	27	260	74	313	945
chains	76	43	131	257	959
2011-01-06	30	186	373	155	340
openBLAS	84	57	167	664	321
regain	29	218	128	764	954
textfiles	21	49	131	522	944
multi-core	7	51	345	445	166
expiry	79	140	453	198	687
host	84	119	183	609	377
concreteness	81	77	0	88	943
approximating	77	98	458	652	809
pValue	3	138	159	197	498
noisy	20	93	231	709	562
collinearity	77	183	409	44	84
PyData	35	193	372	71	594
pd.ExcelFile	36	10	376	712	261
mencoder	93	248	315	571	872
glade	93	187	104	537	728
input_data	57	235	74	531	451
hexbins	59	52	383	568	710
STFT	20	93	425	191	344
discard	2	263	456	355	338
addendum	4	235	490	37	81
Subject	30	271	191	61	38
FPS	10	160	274	323	655
\VC	37	163	386	241	850
downgrading	91	122	156	587	230
FPR	96	214	266	391	603
zooms	59	154	188	427	203
sidenote	4	17	134	630	908
guard	12	152	232	257	625
Scientists	38	224	282	722	689
column-name	78	49	456	405	356
autoscale_None	63	1	460	172	787
signify	78	49	338	487	702
_tkinter.create	29	187	128	123	434
schart2	29	187	128	236	55
awarded	18	15	229	444	922
typesetting	13	230	138	767	909
1.9.1	19	7	417	13	644
maze	39	126	235	93	949
1.9.3	91	7	417	13	230
1.9.2	91	7	417	13	230
You've	57	264	292	37	451
569	54	3	101	797	139
new_series	48	281	74	551	779
$LANG	45	112	184	103	630
560	21	223	234	557	158
561	37	250	475	187	194
brand	2	120	212	739	727
564	68	223	101	797	399
565	37	3	101	297	862
reminds	24	109	493	284	469
Queries	69	265	303	281	114
editing	18	200	490	567	81
Compare	69	31	237	530	911
-w	40	112	276	288	128
scipy-user	18	225	45	71	509
rasterize	93	61	315	99	54
dangerous	88	152	181	179	195
j	74	195	4	255	577
avaliable	47	57	167	499	732
trapezoid	20	93	382	191	989
svc.coef_	90	297	13	234	945
%apply	3	67	261	157	498
to_series	43	157	72	683	956
day=1	99	181	318	679	997
pij	44	293	228	509	228
pil	22	248	381	141	722
pandas-like	88	257	61	675	612
pin	50	232	235	284	781
pic	59	239	433	32	54
pid	29	218	444	149	769
LMEs	39	73	214	152	586
pig	71	246	429	609	92
pix	75	90	246	141	357
last_valid_index	42	27	19	313	244
pip	67	151	327	232	334
Therefor	47	111	95	18	866
pit	78	43	266	588	283
IPython.parallel	76	218	183	359	803
PyTables	71	153	446	702	457
ncols=2	46	203	255	577	430
ncols=1	46	284	255	577	430
claiming	47	59	301	699	907
2012-12-30	53	139	42	250	775
patsy	77	168	375	341	443
ellipses	59	117	433	32	177
QLabel	93	154	104	537	728
array.cumsum	68	54	154	545	62
resembles	57	235	342	450	950
account_aggregates.groupby	86	150	42	211	624
enlargement	43	111	75	369	921
dytpe	63	44	460	172	787
ndarray.dtype	31	220	388	514	371
most_common	65	27	14	313	709
astronomy	13	225	214	118	852
df_upper	48	144	195	178	816
all_argmax	90	293	13	358	146
Thus	47	0	392	678	544
Private	30	271	259	281	38
-r	67	112	276	57	128
yell	18	59	143	419	53
cookbook	35	193	372	387	704
8th	78	49	338	616	456
deep=True	27	297	74	551	273
name_map	48	123	486	339	502
exponentiation	14	12	137	431	238
assembles	2	215	131	98	702
comparatively	10	202	37	44	604
DateTime	48	281	66	426	452
save()	71	153	336	24	942
sleep	29	160	128	167	64
assembled	2	215	328	98	187
1025222400000000000L	68	274	385	679	997
feeding	2	116	145	98	531
G3	95	181	272	250	497
patches	31	1	388	399	177
G1	95	123	335	168	497
G0	90	297	4	617	597
whereever	55	112	276	57	315
patched	35	122	220	292	376
mwe	57	235	490	567	81
GT	84	127	2	410	580
GS	95	298	419	467	497
risk	12	152	5	552	563
Keyword	48	123	486	339	502
GP	38	206	282	722	353
dollar	61	58	452	86	501
rise	12	170	231	44	769
msvcp71.dll	67	132	44	384	305
vectorize	76	51	118	169	360
linecollection	47	23	19	97	371
GF	38	224	282	722	689
GE	99	140	453	198	687
matplotlib.backends.backend	15	80	184	103	630
GB	21	127	355	159	359
GA	84	119	90	94	377
str.format()	65	233	81	589	526
GO	30	212	55	136	965
GM	4	121	264	646	500
GL	93	187	104	537	2
servlet	40	246	429	609	92
GH	35	122	220	292	106
crit1	27	260	431	234	945
Campaign	48	123	486	339	637
PyQT4	93	187	104	537	728
retry_count	36	10	136	343	858
browsers	93	61	315	769	374
Gb	21	127	355	159	359
guiding	11	173	389	170	219
enclosing	65	263	181	230	195
Go	40	271	259	281	402
04:00	99	69	119	525	256
venus	59	52	433	32	177
some_name	53	95	115	339	227
DatabaseError	63	176	397	343	136
np.append()	42	27	88	750	244
submodules	15	135	319	777	873
1-dimension	34	21	147	91	694
Ewert	4	121	254	710	500
surrounding	39	263	235	733	670
WxPython	93	154	104	537	728
expressive	88	257	61	334	612
n_examples	44	205	251	196	357
sub()	43	157	103	750	956
dictionary	65	233	158	540	526
nx.spring_layout	85	79	41	5	234
chrisb	4	121	264	646	500
abrupt	59	117	301	32	120
sfmath	45	230	448	767	909
{0}	86	129	465	211	347
seeks	10	272	118	169	863
Adash	74	95	26	212	273
kicked	50	232	232	35	781
a_sub	74	297	54	509	228
Labeling	38	162	191	209	837
kicker	21	190	50	557	108
<---	63	44	117	582	858
logarithmic	5	288	32	639	825
x.get	86	129	272	36	199
digits	14	86	314	325	549
cv2.__version__	15	135	44	103	823
cdef	3	67	261	146	498
intead	47	135	319	777	823
changed	2	215	328	210	187
Rendering	38	162	495	209	837
2012-03-01T00	54	69	119	158	277
analysts	13	26	126	118	765
changes	2	215	328	335	338
changer	76	232	232	169	338
numpy.searchsorted	42	27	286	358	244
2.0.2	91	57	167	499	732
2.0.1	19	7	417	13	972
2.0.0	91	7	156	587	230
Support	38	224	282	722	353
bashrc	40	132	352	113	137
bi-dimensional	34	77	0	73	4
Raschka	4	193	19	252	114
ymin	5	284	253	757	339
forums	50	264	393	75	564
numeric_only	45	157	334	269	73
none-zero	78	100	266	586	283
scaffolding	57	232	235	458	950
-coordinates	41	6	177	200	397
tupline2	63	37	222	699	684
codereview.stackexchange.com	18	225	45	527	509
asset	79	78	450	101	955
set_yticks	5	148	363	558	844
parallel.py	38	57	44	205	315
annotations	59	52	32	19	884
opensource	13	26	63	516	852
munge	71	116	145	706	986
"]))`	53	181	373	455	496
naive	10	17	61	675	612
np.prod	42	269	403	65	263
_solved_	18	15	45	472	922
sting	61	49	162	539	260
selectors	94	111	72	369	36
HTTPError	63	176	397	582	136
read.table	36	153	336	712	261
That'll	88	59	232	143	469
must	47	0	392	143	888
Claim	30	271	419	519	38
MyDataFrame	48	220	329	514	3
Anaconda\Scripts	55	132	386	384	305
hideous	88	59	5	630	695
subtler	12	183	409	419	606
daft	40	37	301	699	625
Specified	69	162	191	61	837
climatology	99	147	173	101	817
Discipline	53	139	51	448	199
FreeType	67	151	152	664	305
on_motion	31	203	388	592	879
two-sample	77	214	132	783	738
scheduling	76	272	345	445	959
non-commercial	7	163	63	516	850
Banana	95	268	373	686	517
guarantee	12	229	147	552	621
Currency	48	123	486	339	502
Dell	84	127	2	153	580
numpy.square	60	296	137	313	751
adjacent	81	43	131	588	944
gate	95	126	206	519	682
widespread	13	26	63	118	398
basedirlist	55	132	352	113	315
multi-indexing	43	265	75	771	921
Laurent	24	109	394	444	870
Arrows	38	162	191	209	460
fig.clf()	29	203	348	123	55
whittle	57	232	232	144	781
spectrometer	39	246	58	428	400
descent	77	98	48	279	416
Verbose	47	59	147	15	709
acknowledged	35	152	60	552	908
hypotheses	12	183	409	170	326
Fisher's	77	206	132	147	4
correlation	77	270	472	783	662
Regression	77	168	186	687	353
2.7.8_1	55	128	52	477	56
executed	40	37	429	699	187
k=3	41	6	370	282	397
k=2	60	194	280	431	485
k=1	44	194	370	704	201
k=0	44	194	18	5	62
self.__dict__	65	220	329	514	406
over	2	21	275	573	207
casted	3	18	162	266	470
expects	2	215	491	174	260
executes	40	37	491	699	464
cmap=cmap	46	39	73	316	488
decision_function	77	168	186	705	646
dist_	74	100	108	586	577
digest	50	120	114	35	727
textbox	93	154	188	427	2
Bubble	59	52	495	209	177
set_3d_properties	31	13	388	199	627
ACML	7	163	428	418	166
destroyed	29	187	128	764	2
edits	18	200	490	567	81
1376	54	3	475	187	158
SAS	71	26	126	364	561
250000	75	243	370	196	252
_also_	35	152	138	145	908
suptitle	5	203	348	558	518
q=50	78	219	266	104	459
Firing	13	26	63	118	398
2.4	91	108	23	579	322
beggining	61	263	222	539	501
JAN	53	123	373	155	687
Strassen	10	194	356	327	668
JAB	24	109	394	140	870
V^-1	85	194	280	431	485
plt.bar()	5	14	383	568	710
A.take	44	293	4	509	228
Don't	47	0	392	143	53
explode	2	229	118	573	863
NeuroDebian	67	151	167	499	594
edit3	4	17	254	710	81
edit2	4	235	254	710	81
hash1	74	195	272	224	778
bbox_inches	45	226	494	757	619
train_data	90	256	115	668	994
Kuwahara	22	248	7	709	722
DataTime	43	265	450	771	356
15.09	30	271	419	429	428
hanged	40	127	429	764	954
Copying	69	31	100	530	316
Latitude	95	298	66	766	221
15.05	30	298	419	429	428
15.04	19	7	432	301	156
reused	29	188	447	570	450
Gini	77	214	132	783	738
plt.draw	29	203	348	123	254
driving	11	120	114	284	727
column-first	34	188	361	404	77
.split()	86	89	163	340	66
datarray	24	109	229	444	264
William	4	121	394	567	500
reuses	34	188	88	404	581
resistor	20	93	206	191	949
indweight	64	214	238	197	459
Vazquez-Abrams	4	17	254	710	441
GCC	84	163	33	590	850
perception	22	183	409	709	562
re-created	43	265	328	771	356
monte-carlo	76	183	48	195	416
num_images	44	205	251	196	357
Picamera	38	248	65	2	730
free	18	225	63	516	53
pickle.load	36	10	489	712	942
groupby.apply	43	157	72	683	956
formation	81	43	235	621	177
rain	99	140	453	198	687
log=True	5	14	383	171	825
freq	99	147	449	48	817
wanted	47	0	392	210	747
.cumsum()	64	150	256	72	48
Via	69	57	237	209	837
dataframe.groupby	64	150	103	784	48
TIFFs	22	248	381	571	593
_imp__PyExc_RuntimeError	37	250	386	475	194
openssl	67	151	327	664	334
Vim	40	141	281	76	632
np.genfromtext	36	153	336	712	793
corrections	11	173	394	567	867
basic.py	37	250	27	475	194
PROC	13	26	375	364	631
category_code	48	123	486	339	637
mpl.use	45	80	315	435	591
WORKING	30	212	55	136	965
makefile	57	235	429	450	237
,..,	90	172	481	338	585
philosophical	88	225	5	419	606
Asking	18	225	45	527	509
broadcast-able	44	205	251	196	357
0.08	96	266	324	695	421
0.09	96	266	23	695	421
.std()	64	269	103	784	48
ax.set_yscale	46	39	383	639	825
0.03	96	266	324	695	421
0.00	95	266	201	8	421
0.01	96	266	324	695	421
0.06	96	266	324	695	421
0.07	96	266	324	391	176
0.04	96	266	324	695	421
0.05	96	266	324	695	421
partial_fit	77	168	186	705	646
0.20.1	7	51	428	2	915
timeSeries	43	63	68	426	452
wildly	12	170	409	44	231
toolset	13	232	126	444	264
percentage	81	214	173	376	459
matlab	60	296	375	364	631
Search	69	271	237	281	371
centered	59	288	32	122	884
esoteric	88	152	5	458	606
downsize	21	127	355	159	359
abandoning	50	17	60	630	907
imgarray	74	293	361	509	273
classed	95	298	373	787	517
thy	12	109	5	444	53
cummax	43	157	103	683	956
gabor	20	93	7	709	670
MongoDB	71	171	303	60	457
numpy.sin()	60	40	14	313	439
plt.cla()	5	203	348	123	55
plt.figure()	29	203	348	577	55
reconstructing	2	116	145	566	531
classes	13	94	329	514	720
verts	41	6	438	690	336
glueing	88	257	145	706	986
18.1	54	108	274	297	399
18.0	54	108	23	579	931
18.2	54	108	23	297	399
18.5	68	266	257	297	399
self._args	41	35	444	176	314
1974	95	271	373	519	38
re-label	81	21	25	546	603
tripcolor	72	13	294	199	627
ran	50	264	292	210	59
recurse	31	1	329	514	720
Base64	71	248	381	571	593
Mine	47	59	392	534	59
raw	71	239	50	423	108
128MB	21	127	355	159	359
scipy.mean	3	227	385	157	969
Gert	47	21	392	91	338
Optimal	77	206	169	264	698
unaffected	2	215	328	98	187
.27	54	50	300	797	139
.25	54	266	324	695	421
ray	39	149	438	93	116
tho	47	59	493	504	469
data-space	5	13	388	199	879
python-devel	67	151	327	232	334
isolated	2	38	235	697	338
isolates	57	79	41	400	234
count()	43	157	103	683	956
diff2	90	195	4	509	228
over-thinking	88	120	114	35	907
shallow	34	111	26	212	420
Fault	63	158	397	582	832
glob	36	153	489	589	854
denominator	14	219	314	391	454
.2g	86	129	465	137	347
.2f	86	129	465	479	347
__builtin__.any	65	233	14	15	866
Transparency	93	61	315	209	54
epd	55	132	330	477	791
brackets	61	263	452	230	298
metal	39	117	427	32	198
regards	11	152	134	419	822
inaccuracies	14	86	314	325	84
Its	47	59	392	678	544
E-e	96	201	426	173	62
Fedora	19	7	432	301	156
contacted	50	264	292	697	747
Flask	13	26	90	609	537
_NDFrameIndexer	31	220	329	663	720
Flash	13	224	90	387	537
get_offsets	31	1	329	399	787
pops	40	187	128	764	954
Angelica	86	129	42	36	199
popt	41	124	177	324	201
earth	39	149	279	93	586
availability	13	246	126	203	765
Bin	69	162	191	789	837
Bio	15	135	44	696	823
proximity	81	43	131	588	283
2-level	43	265	75	771	921
Thereby	2	61	194	99	54
Big	38	109	282	127	264
dateline	39	149	279	650	586
09:00	99	253	119	525	256
pyton	57	235	342	450	59
09:03	54	204	257	338	361
fill-between	57	235	29	532	47
beacause	81	147	450	546	603
Bit	84	7	2	410	321
Qwt	13	26	63	697	398
oct	99	182	318	372	754
mpl.__version__	75	174	184	103	630
label=	46	39	73	505	649
Pytables	71	171	446	702	457
label1	41	39	335	339	649
label2	48	123	335	339	497
scipy.test()	15	112	184	394	630
5-minute	99	147	450	101	817
Collapsing	69	31	100	789	739
90k	21	190	234	557	42
reconstruct	2	116	328	98	180
1.37272	54	50	368	429	428
left-hand-side	78	111	216	276	283
\AppData\Local\Continuum\Anaconda2\lib\	37	250	27	475	194
Outstanding	24	109	394	102	340
idiotic	50	120	114	739	727
occurance	78	49	216	616	456
RdYlGn	22	4	294	438	488
ineffecient	88	257	118	334	695
cv2.calcOpticalFlowPyrLK	39	126	7	141	670
mock-up	57	235	342	450	343
lo360	39	6	279	766	573
sporadic	30	212	456	355	965
ndarray.take()	3	220	14	15	235
instance's	31	1	388	399	879
KS	77	214	132	783	162
interactor	78	144	195	787	944
temptation	18	152	5	144	53
iirc	35	122	156	292	376
overridable	7	94	65	565	734
sort_index()	43	157	349	683	640
temp.csv	36	10	376	712	971
xlabel	5	148	32	19	518
table.index	43	281	182	547	965
under-the-hood	76	272	134	630	606
u'Food	53	50	368	429	624
fugly	88	257	61	424	695
delim_whitespace	52	185	28	121	793
backgroundcolor	31	13	388	134	879
INPUT	30	281	50	347	560
dish_relative_perf	27	260	431	234	945
adapting	4	235	254	478	552
non-constant	81	188	409	44	863
AxesStack	31	1	388	399	444
Datum	95	49	373	185	517
Unsupported	63	44	199	172	772
facet	59	14	383	621	710
players	79	228	487	480	285
faces	39	117	433	400	234
2sec	95	181	373	90	517
Heimdall	55	128	52	477	568
1.4	91	122	156	587	230
reconstructs	34	77	131	522	694
betting	12	59	5	697	907
1.6	91	122	156	587	230
pygobject	93	57	167	368	732
comprehension	65	233	81	648	207
Samples	81	223	370	519	252
straighforward	88	257	236	334	612
lw=0	46	39	73	316	649
1.0	96	266	23	695	421
lw=2	46	39	73	316	649
lw=3	46	39	289	316	810
power-law	77	214	132	147	4
1.1	91	108	23	695	797
array_split	42	27	14	313	244
IPython.display	15	135	319	777	823
incomparable	14	94	162	325	470
Lambert	39	149	279	298	573
nearlyequal	14	86	314	325	236
Predicting	38	206	282	519	353
alchemy	71	171	473	128	88
03:00	99	69	119	525	256
confident	88	59	5	419	907
maxsize	74	174	272	551	262
spread	81	170	270	546	603
0_y	43	47	456	405	356
containers	76	94	122	118	417
YieldCalc	43	40	444	396	622
numpy-MKL	84	7	2	241	644
Wasn't	24	200	493	567	991
np.save	36	153	336	423	306
craft	12	42	235	195	563
__raw_data	94	220	181	663	720
catch	24	200	301	504	625
maximally	81	21	258	44	576
.keys()	65	233	158	540	526
70000	44	205	251	196	252
SelectFromCollection	31	1	388	399	444
row_product	75	227	385	0	486
strangest	50	37	301	699	888
sample_size	94	243	256	551	160
blazingly	10	51	37	169	876
penultimate	6	263	338	616	456
cracked	50	264	114	567	64
container1	3	220	361	404	273
ENCLOSURE	54	50	368	331	19
container2	3	220	361	212	273
Menu	40	141	259	110	402
__array_prepare__	3	220	329	663	235
pounds	79	204	148	480	361
Libraries	38	162	259	110	402
brewed	67	151	210	351	104
Trimming	81	214	409	546	176
36000	21	223	234	557	252
lasagne	55	128	330	205	791
assigment	94	111	95	369	272
in1d()	42	27	14	358	244
file1.csv	36	153	50	294	108
df.std()	27	260	431	234	945
0.0000i	68	50	368	8	449
Py_BuildValue	3	67	444	157	314
platform-independent	71	153	65	359	31
paddings	59	263	284	245	479
MetaData	52	185	473	24	369
Ivanov	4	121	264	646	552
arr.astype	3	18	141	266	969
trajectories	39	43	235	93	102
Alice	95	123	487	102	741
characters	61	58	443	539	501
ravelled	34	100	95	404	694
workings	76	120	5	257	417
Root	38	206	282	722	71
RNGs	76	272	118	169	604
cycle	59	4	457	167	608
mentioning	88	200	134	567	908
charlie	55	128	52	477	568
uploading	71	239	50	443	600
refresher	88	42	5	630	264
gps_data	49	47	486	631	502
pandas.HDFStore	71	153	303	423	108
1million	21	190	234	557	42
A|B	85	201	370	560	192
tldr	47	21	233	91	604
zipline	35	122	167	762	746
laptop	84	127	2	410	580
numpoints=1	46	226	494	757	348
correspondance	12	21	131	91	908
np.frompyfunc	42	27	14	313	709
])])	68	32	13	10	744
functionally	42	30	14	74	631
y-label	5	52	32	19	884
ohlcv	99	147	450	762	746
df.to_hdf	36	10	446	712	369
parse_cols	52	185	28	121	971
monitored	50	218	355	407	769
UID	30	271	159	519	38
IOW	94	222	147	678	160
explanatory	57	235	123	341	443
boxplot()	43	14	383	568	956
X^2	85	201	426	684	676
pdist	60	270	472	152	662
shx2	4	121	264	646	500
Philip	4	121	264	102	500
disadvantage	76	152	134	552	31
%Y%m%d%H%M%S	86	274	465	679	151
Decorator	31	220	329	514	720
casting	3	291	162	266	470
advances	29	40	444	167	769
scipy.linalg.solve_triangular	60	296	102	313	751
file.sav	57	239	463	450	451
])]`	90	297	13	10	585
Invalid	63	44	199	559	341
ax1.axis	46	117	284	32	479
advanced	13	111	147	369	368
scipy.linalg.lu	60	194	280	431	485
a-zA-Z	68	89	117	299	66
=	75	174	385	425	486
informative	88	109	229	567	815
non-table	94	222	446	702	457
np.random.poisson	75	243	385	425	486
0.63	90	54	257	713	776
.nouri	24	121	264	646	500
n*log	10	202	356	327	668
HR	79	224	303	519	852
HP	84	206	2	410	416
point_labels	31	13	383	592	844
re-ordered	78	144	337	522	944
Pivoted	69	265	303	771	739
empties	10	218	447	167	863
HH	99	274	68	679	221
HI	24	33	394	140	870
circumvented	50	152	60	799	625
HA	68	298	419	467	62
HF	30	174	291	751	148
HD	84	127	2	410	580
Hz	20	93	425	507	344
securities	79	78	450	762	746
Life	38	224	48	195	416
Hy	47	235	222	735	371
cnp	15	135	319	777	823
seaborn	59	14	383	568	710
exhausts	2	218	447	573	854
cnx	36	171	473	343	88
Hi	24	121	394	646	500
Hn	68	32	18	545	62
Ho	59	52	392	751	835
Hm	24	200	493	504	469
Hc	68	201	426	617	62
Ha	24	33	493	444	870
norm()	42	27	14	15	709
booking	50	264	292	198	747
He	4	264	490	252	747
algorithmic	88	272	118	327	990
widget	93	154	104	537	728
Titanic	79	168	126	60	675
43200	21	205	370	196	252
Loadtxt	69	57	191	61	316
stereonet	39	149	235	93	604
comb_sorted	90	297	13	10	744
eye	88	232	235	122	53
non-homogeneous	76	152	38	618	809
Clojure	7	51	65	2	730
ths	50	264	114	630	360
Fair	18	200	490	504	991
JoshAdel's	57	17	254	534	441
H3	85	172	137	224	15
H0	95	298	419	168	497
H1	85	172	419	467	778
H7	86	174	260	562	858
H5	71	153	446	423	306
Converts	69	162	162	540	890
steadily	10	160	37	323	576
Fail	30	271	74	281	262
efforts	11	225	463	37	451
Best	88	252	237	675	233
*cos	96	201	426	560	13
Provided	47	0	342	678	927
Cythonized	65	202	14	589	876
respondent	79	228	487	480	285
presence	12	49	456	355	702
puzzle	11	120	232	35	781
Assertion	63	176	397	21	773
finely	81	183	409	44	394
Provides	47	21	392	91	59
Bests	47	174	392	751	262
igavriil	4	121	264	646	500
df.sort()	64	47	406	683	73
rounds	14	86	314	325	549
Haven't	50	264	393	75	564
.last()	64	150	256	197	48
lead-in	20	93	425	191	344
plt.suptitle	46	226	494	46	348
5x10	34	77	275	88	943
df_train_fly	49	123	486	631	82
GEMM	76	51	118	169	166
x-coordinates	5	288	270	733	479
max_result	27	269	403	65	192
differences	12	21	134	552	606
removes	2	263	491	174	621
Rocks	55	128	52	477	568
END_TIME	99	281	453	198	687
solar	81	147	206	503	949
GObject	76	94	65	514	720
sustained	20	147	453	101	955
boosts	76	51	345	225	990
removed	2	263	292	210	187
differenced	43	265	75	771	356
r-squared	77	124	132	324	738
versions	91	122	156	587	230
cross-tabulation	43	265	173	771	356
prematurely	18	152	5	419	625
trigonometry	39	270	472	733	738
trim	57	263	232	306	781
tril	42	292	88	348	218
joblib.Parallel	10	218	345	359	803
Introduction	38	224	282	94	689
trig	76	98	458	169	238
4^13	34	77	131	522	336
Potential	69	162	169	61	145
ssp-buffer-size	55	128	293	52	56
triu	42	27	102	313	244
data_B	95	204	419	751	361
check	47	229	392	91	338
constructed	2	215	328	98	187
blatantly	57	235	490	450	81
data.median()	53	139	51	695	421
radically	10	202	37	534	783
tip	24	109	394	140	870
vanishes	29	187	128	764	954
tis	24	200	490	504	991
til	47	232	232	167	769
tim	90	297	13	612	744
tid	79	78	487	480	955
tie	81	21	233	588	603
tif	22	248	381	571	593
tic	5	288	32	122	479
permitting	76	188	447	570	450
nuance	88	48	5	257	907
Double	47	179	415	281	402
uniformly	81	214	270	733	301
SymPy's	77	98	38	279	809
matplotlib.pyplot.hist()	47	13	297	171	810
timeseries	43	147	450	771	817
SQLite3	71	171	303	128	457
sub-sampling	81	170	270	733	301
hashing	76	183	409	44	563
longer	47	0	392	91	338
359.89	79	298	34	168	653
American	95	268	373	185	496
serious	88	272	118	552	990
stacks	34	116	233	174	986
neighbors	81	43	239	588	283
remarkable	10	272	37	44	765
16:02	99	140	453	155	687
|EPD	19	7	33	590	972
datedif	53	281	51	682	199
alternatives	11	48	389	630	31
barfs	2	37	491	699	888
snip	30	235	342	226	560
msvccompiler	15	176	44	696	823
graphing	13	246	126	51	765
computation	76	272	118	169	863
extremities	81	170	266	733	116
Pride	24	121	394	646	500
Today	50	264	292	210	747
randrange	75	243	385	425	484
sub-cubes	81	43	131	522	944
1949	99	140	453	155	687
essentials	50	152	342	618	781
Singular	63	194	280	431	485
1943	95	181	373	686	262
Dan	4	121	264	646	500
1946	78	100	148	355	283
all()	42	27	95	18	866
Standard	38	206	169	264	698
mainloop	29	187	104	537	728
managable	50	114	145	706	986
Assigning	69	31	100	530	911
Day	99	138	66	198	687
Secondary	69	162	191	209	837
.parse	36	10	489	712	314
percentileofscore	27	269	403	784	396
resample	43	85	449	48	817
interpolator	72	165	15	235	570
1496	44	172	481	224	778
y_max	41	35	289	282	397
python's	76	94	65	735	957
r.shape	44	205	251	0	357
brother	13	120	212	444	852
Unofficial	67	151	470	219	104
GeoSeries	69	270	41	264	662
planning	13	0	126	203	907
crosshair	59	154	188	427	203
quick	4	109	61	630	237
Seemed	88	59	114	246	469
says	47	193	19	252	888
subprocess.Popen	36	10	136	288	942
numpy.linalg.lstsq()	60	98	38	279	809
superimposed	59	52	495	32	177
slowed	10	272	118	225	781
df.shape	75	297	74	239	227
re-casting	2	116	275	566	603
readability	88	272	134	458	606
stands	47	59	392	252	908
generate_correlation_map	10	202	37	534	783
64bit	19	7	432	241	644
IJulia	93	187	90	51	54
T_SLR	47	21	392	91	338
orient=	52	47	406	24	369
testing.py	37	250	27	475	194
subimages	39	43	258	45	943
.Wouda	24	200	490	567	991
1234	61	18	74	779	262
1230	54	54	257	338	361
Agg	93	80	315	435	591
Age	95	123	159	647	682
pyuic4	40	187	429	384	728
undeleted	18	200	490	504	81
water	39	126	206	322	949
fluke	50	264	292	210	747
to_excel()	52	185	86	24	561
ONSET_TIME	48	123	486	168	637
800x800	22	126	381	45	943
cross-over	39	48	235	588	177
supplying	2	215	457	91	621
hashable	65	220	158	540	890
reformatting	2	116	145	799	531
expressly	2	152	147	618	625
restructuring	76	272	118	257	531
timings	10	202	37	534	783
enties	78	43	266	588	944
resonance	20	170	231	147	949
.describe()	64	150	74	551	48
navigation	93	154	104	427	203
output2	90	204	257	332	995
tweak	47	229	457	306	394
output1	90	204	257	332	995
Visit	53	139	51	551	779
F2PY	7	51	428	2	730
modifying	2	116	328	212	531
$pip	67	112	276	57	334
Import	69	162	44	696	316
optimize.leastsq	60	124	458	396	438
non-standard	88	152	457	697	439
MT19937	60	296	65	725	957
UTF8	61	58	443	539	501
RandomizedPCA	77	168	186	705	646
MyColumn	53	123	51	339	633
wait=True	4	203	348	123	55
memory	10	188	355	159	450
candidates	79	43	131	473	944
unwarranted	12	152	5	419	908
October	99	182	318	372	519
Benefits	43	265	75	771	921
reworking	10	202	37	225	950
parser_f	37	250	27	475	194
sessions	40	119	183	609	377
clicking	29	154	188	427	2
outputs	57	21	342	98	59
SettingWithCopy	94	222	147	369	350
2000x2000	21	190	258	45	943
mathtext	93	230	448	342	909
Summary	30	271	191	281	38
Round	69	31	100	530	911
end-points	81	170	270	546	283
df_train_csv	48	281	486	339	199
ax.yaxis.set_major_locator	75	35	289	46	810
insights	11	173	389	763	867
index()	65	220	14	15	172
ahve	50	37	444	699	59
contradicts	60	59	147	252	908
Measured	95	138	335	250	814
modified	57	235	342	450	187
sub-tables	2	116	145	706	986
row's	78	144	148	502	629
.txt	36	153	50	423	108
modifies	2	215	361	212	273
modifier	45	187	188	149	259
pyviz	11	48	389	630	360
150000	21	190	307	557	42
7395	68	227	154	187	357
mpl.rcParams	45	80	448	269	909
wxFrame	59	154	188	427	203
Xaxis	41	288	289	209	884
stream	71	246	58	428	600
Media	53	281	51	339	682
quacks	88	232	479	257	53
conversely	14	268	266	325	517
my_fun	27	40	444	396	622
Terms	95	271	159	686	340
pyplot.close()	29	218	128	764	55
z_max	39	288	289	69	116
differente	59	52	433	32	338
alway	13	232	232	35	765
Fruit	48	123	159	197	653
differents	47	21	233	251	338
NotImplemented	3	220	199	15	172
category1	53	181	373	185	496
str.slice	43	157	72	589	956
diagnosing	11	152	301	35	120
Ctr	99	140	453	109	955
clone	67	151	470	604	594
needs	47	215	392	91	621
998	95	268	318	751	811
Ugly	88	59	74	551	695
4th	78	21	338	616	456
typestr	3	37	14	15	957
branches	76	43	235	195	272
a*c*e	96	201	18	173	62
stupidly	50	200	114	352	991
fromstring	42	27	336	589	448
2081	54	50	368	158	277
np.searchsorted	42	27	349	358	640
devs	35	122	220	292	106
Sources	30	193	19	281	114
k-Nearest	77	168	186	705	353
networkx.draw	31	1	388	399	879
flatten=True	22	90	246	141	942
imagining	88	59	235	424	907
trim_right	27	260	431	234	945
comfort	76	272	118	169	730
Zip	69	271	191	281	316
dashes	59	58	452	134	608
constituents	34	116	145	522	694
Amazon's	84	119	63	607	377
Breaking	57	232	491	174	781
mainly	13	152	134	458	606
-oo	96	201	426	560	62
motions	39	126	206	93	949
size_t	3	67	261	146	498
Q_true	63	37	95	699	888
""')]	86	181	42	211	624
Inputs	63	44	199	73	888
he's	4	59	5	419	908
organisation	57	235	342	450	950
likeability	78	204	266	391	283
he'd	50	232	232	697	53
Sepi+1a	54	108	23	579	931
gdp	78	140	338	198	687
Moving	69	31	237	264	911
downsampled	20	147	323	709	562
tillsten	24	121	264	646	500
curr_g	74	227	4	509	228
backported	91	57	167	9	376
pd.melt	43	47	75	683	73
postgres	71	171	473	128	88
eccentricities	39	149	438	93	116
ActivePython	67	151	210	351	104
qs	75	227	385	425	486
as-needed	71	119	429	609	732
above	57	235	342	450	59
sqlAlchemy	71	171	473	128	88
corners	39	149	438	122	979
numpy.fft.rfft	20	93	425	336	344
Obtain	69	162	191	61	698
realistic	12	183	409	44	604
C2054	63	176	164	730	572
check-in	78	43	206	588	283
sigLinZ	60	40	444	396	622
rethinking	76	272	118	799	360
output.csv	36	10	489	712	261
setup_requires	15	135	44	664	957
numpy.putmask	42	27	14	335	244
There're	6	263	131	618	944
tofile	3	153	336	423	306
betweeen	99	140	453	198	221
distributor	95	271	159	686	682
mysql+	36	129	136	36	314
sunrise	28	140	453	198	221
MatrixXd	3	67	261	157	498
exclamation	61	58	222	539	501
frequencyLIST	12	37	181	699	406
factors	81	42	409	44	238
factory	65	220	329	514	720
pyhton	11	109	212	739	727
triangles=	41	39	289	282	397
gaussians	20	214	132	147	4
hacked	50	264	342	210	950
PyObjects	7	51	65	215	957
attended	79	228	487	480	285
bolts	13	26	212	284	53
hull	72	165	231	152	102
GUI_openCV()	15	40	444	396	314
unfriendly	13	120	5	697	53
meshgrid	72	165	15	282	397
minindex	74	174	74	551	262
np.lib.stride_tricks.as_strided	42	30	286	313	368
Doe	95	181	373	102	340
qk	51	18	403	266	172
Isn't	47	0	392	678	835
PyObject*	3	67	261	312	498
factor1	48	144	486	276	653
os.system	36	80	136	288	942
motion	39	126	48	195	416
trues	78	100	131	522	944
n_rows	44	227	228	0	357
view	2	188	361	212	273
high-resolution	21	126	381	571	959
discontinued	35	57	326	697	732
programing	13	120	212	739	727
.config	55	132	352	775	798
fetched	71	171	303	609	92
libagg	67	151	327	499	334
-index	34	100	216	616	520
pseudocode	57	235	342	424	950
symbolic	60	42	38	279	809
display.display	46	203	348	123	55
clumsy	88	257	61	675	695
fetches	2	215	491	174	92
doenst	43	265	72	405	356
enrollment	81	147	450	101	675
trillion	21	190	234	557	655
eArray	4	200	490	504	991
whith	47	21	233	251	338
Date	48	138	66	339	502
white	22	117	433	32	198
Data	69	162	191	789	739
Debian	19	7	432	301	156
RunSnakeRun	35	193	19	387	371
exploring	13	120	126	35	727
pythonXY	67	57	167	499	179
np.transpose	44	30	286	74	263
discretised	41	6	370	391	949
xcoords	42	220	329	514	720
Hispanic	48	144	218	178	522
sub-lists	34	77	0	522	336
Enterprise	19	7	432	301	156
PDF	93	61	315	99	374
PDE	20	42	248	722	809
PDB	71	153	50	423	108
wide	81	21	233	546	326
Love	24	109	229	444	264
\d+\	86	89	163	299	66
crowded	59	52	32	19	714
framerate	29	218	284	245	959
deduplicate	71	49	145	706	986
act_code	12	49	456	355	1
MYSQL	71	171	303	128	88
exacly	24	200	394	140	469
cm.hot	46	39	73	316	649
subprocesses	29	218	183	445	803
generality	76	272	134	458	990
emulated	76	94	329	663	720
m+1	96	195	370	560	142
blunder	50	59	114	35	120
mislead	18	15	490	472	81
conversion	3	94	162	426	260
silhouette	22	248	7	141	722
tillsten's	72	17	254	710	441
strengths	13	26	122	118	606
MLB	53	139	42	417	775
multiple	2	21	233	251	338
.to_period	64	287	449	48	997
tornado	67	151	90	368	383
MLK	7	140	2	109	166
sagemath	72	126	214	571	177
barycentric	39	149	438	152	102
MLR	77	39	73	316	649
Anaconda3\lib\	37	250	27	314	889
multiply	34	77	275	88	603
white-space	61	58	452	539	501
bar.py	47	37	222	167	625
Photoshop	22	61	7	99	562
closet	78	100	108	588	283
discarding	2	263	145	573	531
color_list	46	233	294	653	373
readjust	5	154	188	245	2
cluttering	13	232	232	573	195
numpy.pad	42	27	14	313	368
senior	13	120	212	36	852
Principal	38	210	151	94	899
detective	24	109	229	444	870
PyArray_SimpleNewFromData()	3	220	329	514	235
pre-installed	67	151	47	351	104
to_pydatetime	43	63	68	426	745
hack	88	257	61	334	695
\Lib\	37	250	475	205	173
diverge	81	170	235	167	84
np.fromfile()	52	153	336	423	793
LMDIF	76	188	447	570	581
ItemID	79	144	195	276	517
Netlib	7	163	428	418	166
subpackages	15	135	319	777	873
reindex_axis	43	47	72	683	73
Continuing	57	17	342	478	781
v3	85	172	481	17	645
tuples	65	233	158	540	336
wood	11	120	114	444	64
a.min()	27	243	289	28	810
parabolic	20	126	231	93	949
dreaded	50	152	199	618	625
data_dict	86	233	74	185	262
mkl-cp34-none-win32.whl	55	112	386	475	194
tKinter	47	232	457	697	338
viewpoint	5	13	284	245	479
k-space	20	93	425	191	344
expectation	12	219	132	783	162
sss	41	174	177	751	262
ssl	35	57	167	9	732
df1.reset_index()	49	47	406	631	445
lighter	59	117	433	32	198
sse	77	183	458	697	738
ssd	81	270	472	588	662
plt.imread	36	90	246	712	942
Similar	4	17	254	252	544
qqplot	77	214	132	147	4
seq	74	233	54	690	526
matplotlib.collections.PathCollection	31	1	388	399	879
radar	39	126	214	93	949
Kong	54	223	101	751	252
naked	65	94	14	15	709
currentIndex	90	32	13	545	744
SMA_45	78	140	148	87	742
s.shape	44	293	4	509	357
obfuscated	88	152	5	334	695
ignored	2	215	60	618	187
0:512	90	293	26	509	228
encourages	13	225	138	145	370
([[[	90	54	257	10	585
arbitrary-precision	14	86	142	325	549
random.rand	68	243	46	617	484
Re-reading	47	229	490	170	81
Spread	69	138	191	264	698
ignores	2	215	219	174	621
obfuscates	57	152	147	212	273
lng	95	73	279	766	682
Orginal	96	29	18	28	62
encouraged	18	225	45	527	219
7:11	90	54	13	10	744
ways	88	48	61	630	219
review	18	225	45	170	81
fig.show()	29	203	348	123	55
textcoords	5	226	30	134	348
Aggregate	69	138	173	789	739
toying	50	264	393	75	564
unappealing	12	152	147	334	604
arrival	79	147	450	101	675
multiplied	78	77	275	391	603
.join()	65	47	163	589	448
controllable	31	23	138	97	621
originated	71	239	60	98	187
comp	65	233	158	540	526
U.S.	79	268	450	101	675
queueing	29	218	183	445	803
matplotlib.pylot	59	52	233	51	884
detrend	20	93	275	191	738
fiddling	50	264	393	75	564
r0_array	41	195	177	107	622
multiplies	34	194	275	615	485
1-row	34	77	145	88	356
ignore=	36	10	136	712	261
comb	74	174	14	18	207
come	50	232	393	75	564
plotData()	29	40	444	236	709
21	54	223	298	318	811
reaction	79	228	206	170	285
vimrc	57	235	222	450	81
normcdf	96	201	426	560	13
optimisation	76	272	118	225	990
voronoi	39	43	41	400	102
scattermatrix	43	265	72	771	356
gantt	59	52	495	51	710
utterance	79	228	487	27	1
1.1.0	19	7	417	587	230
continuation	4	5	443	563	898
Matlabs	60	179	169	742	631
~4000	21	190	234	557	42
dispatch	76	51	65	169	160
rr_quality	53	139	51	448	821
assertions	47	0	147	534	783
homebrew	67	151	210	351	104
reworded	18	225	490	472	81
bizarre	88	59	301	284	120
skeletons	39	126	235	400	102
Truncate	99	140	453	198	687
meshgrids	34	30	14	313	694
cut-n-paste	57	235	463	37	451
pd.set_options	45	18	334	269	906
*dy	74	195	4	67	577
Excess	43	265	191	789	698
df_lower	48	144	195	178	816
#defining	30	271	368	429	858
asbytes	86	129	465	137	347
followup	4	225	490	646	81
decimating	20	170	409	44	576
Amazon	84	119	2	607	377
.interpolate	64	287	449	48	48
zdir	41	13	294	653	397
100MB	21	127	355	159	359
FAIL	30	212	55	136	965
new-line	61	58	443	539	501
Sympy's	60	98	38	279	809
Colors	69	162	191	209	837
dfIx	68	32	13	545	945
shops	79	78	487	786	955
unsatisfactory	18	59	490	170	835
hit22	47	174	131	522	944
Additional	30	193	19	281	114
handlelength	5	226	30	134	608
einsum	42	143	215	74	368
telephone	12	183	409	44	84
scipy.sparse.linalg.eigs	60	194	102	431	751
Content	30	271	50	519	38
grey-scale	22	4	381	45	672
df.columns	64	95	74	551	779
subpackage	15	135	65	777	873
capping	12	170	409	44	769
2012-10-10	99	274	68	679	390
PyCuda	76	51	65	630	31
Division	69	86	499	264	698
10:39	54	69	119	155	221
Format	69	162	191	61	716
~25%	10	202	37	323	876
3*2	34	205	251	196	943
3*3	44	205	370	88	943
I3	34	126	248	191	943
I2	85	194	239	5	192
locking	29	218	183	359	803
10:36	54	54	257	338	361
3*4	44	205	251	196	357
10:34	99	253	119	525	256
attributing	12	59	14	15	907
~250	21	190	234	557	42
distilled	50	264	342	799	781
solid_capstyle	31	13	388	134	608
reminder	24	109	394	567	870
sub-region	39	117	284	245	586
IX	43	157	14	15	709
pandas.DataFrame.merge	42	27	14	313	709
screenshot	57	235	342	450	54
disadvantages	76	272	134	552	990
pandas.factorize	43	157	14	313	956
IP	48	281	486	787	502
IS	30	212	55	136	965
IR	39	126	58	428	949
nparrays	34	116	0	522	336
IT	30	212	55	136	965
IV	95	298	282	519	38
II	38	271	282	519	38
Etc	69	162	191	281	837
pandorable	88	257	61	675	327
IO	71	272	118	359	959
IN	30	212	55	136	965
IA	48	204	272	787	502
IC	77	98	177	396	416
50km	39	43	266	733	949
IE	47	0	131	251	272
ID	48	144	195	787	502
IF	30	212	55	136	965
scipy.stats.binned_statistic_2d	81	214	266	522	336
Ix	90	297	4	509	228
3*x	96	201	18	173	62
circos	59	23	495	571	54
minimize	77	98	458	279	738
Is	47	48	392	678	835
It	47	0	392	678	544
safezip	75	35	117	187	314
Im	47	120	392	739	727
components	81	21	131	191	702
In	47	0	392	678	544
Ia	3	18	162	266	178
3*a	44	188	137	107	598
Ie	47	21	131	251	835
Id	48	144	195	787	502
If	47	0	392	678	544
sampleD	6	263	338	130	910
SQLITE	69	162	303	60	739
captures	57	183	382	450	950
WITHIN	2	229	456	405	713
style=	46	39	73	316	649
kill	29	218	128	764	954
2M	21	190	234	557	42
Arithmetic	38	224	169	61	985
blow	10	232	118	44	781
sampled	20	147	270	733	301
hint	11	173	389	763	867
pd.notnull	27	260	418	772	131
we've	50	264	292	210	747
x.max()	46	36	289	28	810
everyone's	11	109	229	444	867
re-generate	57	229	457	306	338
blog	4	193	372	387	704
Applications	55	128	259	110	372
shell=True	36	112	276	57	128
set_facecolors	31	1	388	399	879
sampler	77	183	132	725	162
Referencing	69	179	169	61	145
multi-row	43	265	145	706	356
Change	69	31	237	530	911
samplez	78	100	266	588	18
styles	59	23	433	97	608
.argsort	27	293	403	65	146
32,000	21	190	234	557	42
styled	59	52	495	51	710
PiR	47	21	392	91	338
correcting	24	109	394	567	81
double-quotes	61	58	452	230	501
Came	50	17	254	413	552
particle	39	43	206	93	949
Pie	69	162	191	209	837
oddly	50	59	301	699	120
from_dict	43	47	72	24	73
sample1	21	190	234	557	252
sample2	95	266	419	695	421
Pip	67	151	210	351	104
single-row	34	77	0	73	694
deduct	78	204	266	391	603
rms	60	98	275	742	738
Since	47	0	392	678	544
plt.ticklabel_format	46	148	494	558	348
Shown	57	235	342	98	59
deduce	47	229	162	605	260
gist_rainbow	22	4	427	438	198
rowid	48	144	486	197	653
respect	81	21	233	91	702
min_time	27	260	431	234	945
International	95	298	318	686	38
to_keep	48	95	486	339	779
intact	2	116	145	405	531
JoshAdel	4	121	264	646	468
Knowing	47	229	392	678	544
slice	34	111	26	566	694
CURAND	76	152	147	257	606
slick	88	257	61	675	327
stops	29	37	301	764	954
reallocating	10	188	447	573	863
Windows	19	7	432	241	644
EURUSD	99	147	450	101	746
.loc()	94	111	115	369	227
Ng's	38	224	282	94	353
Maths	38	224	282	519	689
ubuntu's	67	151	327	351	334
liquid	79	78	450	101	955
A-C	48	144	486	198	687
A-B	27	194	403	65	598
myarray.astype	86	18	141	266	969
C-loop	10	202	37	169	876
A-Z	48	89	163	299	66
VALUE	48	123	486	787	502
sourcecode	57	235	342	450	732
_iLocIndexer	3	220	460	514	787
baffled	50	120	114	35	907
Memory-mapped	71	153	122	702	306
widgets.py	37	250	475	205	173
worksheet	71	153	86	638	561
stop1	90	195	4	255	577
2012-06-10	54	69	119	158	126
min_itemsize	94	222	446	702	160
baffles	50	59	292	284	59
concentrations	79	228	206	498	675
numpy.double	3	227	141	266	969
DELETE	30	212	182	343	965
Image.fromarray	22	90	246	141	942
scores	79	228	487	480	285
bbb	95	181	272	11	497
Jul	99	186	33	34	519
determine	2	229	457	588	702
lastly	47	0	392	335	338
Pandas	69	265	191	771	739
UCS4	67	57	155	664	732
parseable	61	153	50	423	260
Opposite	2	174	261	312	957
distinctions	12	152	147	170	606
ODR	77	124	102	742	738
Jamie	4	121	264	646	500
disposed	29	218	447	570	450
copy()	42	220	361	212	273
valley	39	43	235	709	562
fish	11	225	232	480	852
one-element	74	233	0	73	336
.add_legend()	46	39	260	505	858
RDS	71	171	303	128	88
fundamentals	11	120	212	739	727
FormatterWarning	37	61	135	205	372
RDD	71	265	303	60	457
read_hdf	94	211	446	128	88
numpy.ndarrays	3	220	261	312	890
LogisticRegression	77	168	186	705	646
EXIF	71	61	381	726	593
data.append	86	174	117	211	262
max_colwidth	45	80	334	269	413
Gephi	93	246	90	609	537
Special	38	162	191	61	402
intergers	34	233	131	522	336
contributors	18	225	372	527	219
concating	43	47	145	706	531
suspecting	50	59	60	618	907
eval_legendre	60	29	177	173	201
np.extract	42	27	286	358	244
intro	13	193	372	387	704
99.95351796	54	50	368	331	449
spends	10	277	118	225	169
.tz_localize	86	274	68	679	997
incorrect	12	37	301	699	120
4.4	54	108	23	579	322
fiddles	2	152	181	257	195
4.6	91	108	23	579	322
%20	45	58	452	539	906
4.0	54	108	23	579	322
4.3	54	108	23	579	981
4.2	84	108	23	579	322
log-binned	20	214	132	147	4
4.9	91	108	23	579	322
4.8	84	108	23	579	322
matrix-multiplication	42	30	137	74	598
5	90	223	257	338	811
fiddled	50	264	393	35	564
python+pandas	88	272	126	203	604
trash	61	37	222	699	954
0.951182	95	298	419	751	262
XXXXX	53	18	272	682	199
tqdm	15	135	319	735	823
requested	4	235	342	252	187
CNT	53	139	51	339	779
separate	2	116	233	251	986
plot_implicit	60	193	19	313	371
symbol	61	230	222	86	952
font.family	45	80	448	767	909
_both_	59	117	29	32	116
CNN	13	168	48	195	353
complications	88	152	5	257	398
covs	60	67	261	157	498
MacOSX10.6.sdk	55	128	293	52	56
df_two	48	123	486	631	82
calls	76	40	444	174	709
Credit	4	121	264	102	552
PRICE	1	204	300	338	361
exhausting	10	218	355	159	863
grayzone	29	40	444	236	444
numpy.vectorize()	42	27	14	15	709
C_number	53	139	42	417	775
.decode	36	89	136	340	209
STATA	71	153	126	423	561
Stretch	81	52	270	546	177
00:05	99	69	119	525	256
lack	12	152	134	419	67
00:03	99	69	119	155	256
00:02	99	69	119	525	256
21.298	96	266	324	391	129
00:00	99	69	119	525	256
executing	40	37	429	699	954
AVG_HR	53	139	42	417	775
.argsort()	90	297	13	489	146
Words	48	271	159	787	502
pygsl	7	51	65	2	730
synthetic	57	235	422	37	766
3-dimensional	34	77	0	73	943
baxIK.so	55	129	136	36	568
plt.boxplot()	31	14	383	568	710
lining	59	52	25	19	884
sparkline	59	52	495	32	177
myapp.py	40	132	352	384	305
.year	53	274	68	72	390
init	15	132	475	205	173
threads=1	50	232	301	35	625
wx.Notebook	93	154	188	427	728
PyCharm	40	141	281	76	632
suppress=True	45	291	142	325	913
test-case	50	59	114	210	469
song	79	228	487	428	212
far	50	264	342	75	564
fas	55	132	330	477	791
ticked	18	225	490	170	81
faq	18	193	372	527	509
fat	21	170	266	44	176
non-working	57	235	463	37	766
fan	13	120	212	118	727
reordering	2	116	337	566	520
sweeps	81	147	206	733	301
warnmain.txt	15	132	44	384	305
ticket	35	122	220	292	106
INDATUMA	53	274	68	682	390
ticker	48	281	450	762	746
stimulus	81	246	206	167	769
xlineplots	15	40	444	396	314
n-dimensions	88	257	61	675	612
vanilla	76	94	65	735	730
ax.set_xscale	46	148	494	639	825
np.random	15	219	81	725	484
ax.yaxis	31	148	161	558	844
BioMed	40	112	276	664	128
raw_line	90	297	13	239	995
data.ix	53	95	115	72	227
choices	12	21	134	251	908
groupby.agg	43	157	103	784	956
cursor	29	154	188	427	203
imported	15	135	319	777	823
_N_	10	202	37	323	876
advantageous	76	272	118	44	612
800x600px	22	61	284	45	562
Hausdorff	39	270	472	152	662
pd.read_html	36	10	489	712	262
pandas.py	15	132	352	384	305
.cat	53	139	51	417	779
plot_test.py	40	141	281	384	632
pause()	29	203	348	123	55
Short	30	17	445	710	114
pyopengl	93	248	495	571	537
liblapack.so.3	55	132	330	477	372
ROIC	95	123	335	606	255
codebase	35	122	220	292	376
step()	31	13	383	592	879
relaxation	72	98	231	279	809
Alright	24	200	114	567	469
newish	13	120	212	9	727
uncommenting	45	37	222	699	55
DSLR	13	246	58	571	600
handlers	29	187	104	149	282
Communication	13	26	63	516	537
testarray	29	37	222	699	888
allows	2	215	491	174	621
Intuitively	47	48	314	424	360
smas	90	297	4	239	228
piece-wise	72	98	382	235	438
suddenly	50	37	301	699	769
Things	47	0	392	678	544
layer	2	126	235	257	417
np.ascontiguousarray()	42	27	361	212	273
They'll	12	232	232	143	84
Reader	93	61	315	99	374
Evaluation	38	179	169	61	145
lambda1	15	135	44	777	823
F-order	34	188	396	404	694
graph.py	40	141	429	384	632
2*1	96	201	18	391	62
25.05	54	50	300	797	139
mma	24	98	177	156	738
forcefully	29	263	128	335	180
space-separated	61	49	50	539	108
branded	53	139	51	682	199
thank's	24	33	493	140	870
grabbing	2	116	145	573	531
operators	76	94	95	18	272
Thing1	79	144	335	621	653
instancemethod	63	44	460	172	787
time.struct_time	3	63	460	172	787
stick	47	232	232	306	439
_serialize_xml	37	250	386	475	194
lambdas	65	94	181	15	207
1733	78	204	338	38	361
base-10	14	86	314	325	549
lambda_	44	205	177	313	597
df.describe	30	174	222	751	262
Different	69	162	237	61	837
challenging	88	257	61	334	695
prompting	29	187	128	149	2
barwidth	61	58	452	230	298
precedes	61	49	338	355	262
DATE	48	281	486	339	779
DATA	30	212	55	136	965
5.0	54	130	23	579	322
5.1	91	108	23	579	322
5.2	54	108	23	579	931
5.3	54	108	23	579	399
5.4	54	108	23	579	399
5.5	54	108	23	579	322
5.6	54	108	23	579	931
5.7	54	108	23	579	931
5.8	84	108	23	579	322
5.9	54	108	101	158	931
orthogonal	77	194	280	431	485
lam	96	40	177	396	622
wither	47	59	392	699	907
stemming	12	152	301	618	120
isocalendar	99	63	68	426	27
speeding	76	272	118	225	990
y=-1	41	288	29	69	116
Improve	69	179	169	61	145
griddata	72	165	15	235	570
simplicity	47	21	134	458	950
shouldnt	47	0	392	143	835
un-Pythonic	88	257	61	675	612
over-writing	2	116	145	405	531
_pdf	60	40	444	663	444
reflect	12	229	490	567	81
holders	79	78	450	101	955
.argmax	75	227	403	65	486
GRID	48	123	486	276	559
SIMD	7	51	428	169	166
SKLearn	38	168	282	722	353
OrderId	78	140	173	338	361
shortcomings	12	183	235	722	905
text.txt	36	10	136	294	261
base.py	37	250	27	314	194
Player	48	123	159	339	653
MxNx4	22	4	294	438	672
Sean	24	109	229	567	264
\lib\	37	250	27	475	889
NP-hard	77	42	38	279	809
ax.cla()	29	203	348	123	55
recompiled	67	151	327	664	230
best-case	10	190	258	323	876
don't	47	0	392	143	835
eludes	88	59	61	630	612
LINQ	13	26	65	118	730
disabled	45	37	60	9	625
scientist	13	120	212	739	852
LINK	30	193	19	387	114
htop	84	127	355	159	359
Sframe	48	233	337	405	406
LINE	30	212	55	136	965
Oct	99	182	33	34	519
blockproc	60	296	375	742	631
2*pi	96	201	426	391	13
.to_html()	43	265	74	24	975
adverse	40	37	301	764	954
inward	59	117	25	122	979
Equivalent	69	179	169	364	631
groupedby	43	265	75	771	356
harmless	61	152	147	618	625
align=	46	226	494	316	348
A=True	85	144	195	178	637
TOTAL	30	204	456	355	160
allorders	65	233	54	690	526
C2085	63	176	164	730	572
return	2	40	444	355	709
resizable	93	154	128	427	54
1dim	34	77	0	62	694
framework	13	26	63	537	537
my_y	46	39	494	316	348
Series.replace	43	157	14	750	956
numpy.argmax	42	269	349	358	244
accumulate	76	27	275	784	603
=10	27	260	431	234	945
Rad	2	49	328	355	702
=15	68	266	324	200	421
Ran	40	141	281	534	59
blockwise	76	272	275	169	396
4133	54	69	119	158	126
refresh	29	187	128	427	2
lucid	35	225	167	697	924
Raw	71	246	214	60	108
Rat	48	123	486	339	82
algos	77	277	186	534	783
aligns	43	265	25	546	356
residing	71	215	328	98	187
itertools.combinations	42	27	81	648	207
Ray	31	40	444	236	444
malfunction	59	170	235	167	120
fragile	88	257	61	334	695
needless	76	272	118	573	863
generation	76	218	48	203	765
repartition	18	228	232	480	212
Complex	69	179	169	61	145
dHaGreen0	6	68	95	18	866
w2	85	172	481	560	391
SearchId	94	95	456	355	227
set_edgecolor	31	1	388	399	879
Collapse	69	31	100	530	739
self.axis	46	284	348	577	430
Evaluate	72	179	169	264	71
10.000	21	190	234	557	42
-march=native	45	112	386	636	906
1.9.2rc1	91	7	417	103	230
Sum()	76	51	65	169	730
Combinations	69	162	191	61	739
permutating	34	265	131	522	739
origin_lat	53	174	177	467	199
_has_	50	232	292	573	747
chunksize	52	185	28	121	793
cv2's	22	90	381	141	627
memcache	71	153	183	359	959
3.00	54	266	324	8	421
forgive	11	120	179	739	67
sanitized	61	174	489	185	262
isempty	65	220	147	514	172
tottime	60	277	444	225	169
organising	13	272	126	203	959
2*x	96	201	18	173	13
thread	29	218	128	764	803
plt.plot()	31	13	383	592	55
ill-formed	61	153	50	423	260
x-array	74	6	108	746	577
LNK1120	54	50	98	158	572
list_of_arrays	74	293	54	509	228
informations	47	229	457	306	338
LaTeX	93	230	448	767	909
relate	12	229	233	487	702
geodesic	39	270	472	191	662
fancy	42	111	147	369	368
*sorted	75	227	54	690	486
brave	35	232	212	419	53
2*n	96	194	356	327	238
MyClass	3	220	329	768	444
Locate	30	49	456	281	560
passes	2	40	491	174	709
John's	4	17	254	710	441
script	40	141	429	76	632
np.floor	27	29	18	28	486
idx_cell	68	32	13	617	744
Joran	4	121	264	646	500
garbage-collected	29	188	447	570	450
KennyTM	24	121	264	646	500
i.index	75	297	54	690	486
publication-quality	93	23	495	99	54
wxPanel	93	154	104	537	728
181	54	223	298	318	252
psql.frame_query	36	171	473	343	88
eval()	65	40	444	589	406
passed	2	215	444	98	187
headache	11	120	114	284	727
DUMMY	53	139	51	551	48
QT4	93	187	104	368	591
.mask	3	220	95	138	866
imperfect	12	183	409	44	563
option	47	0	457	630	31
boilerplate	57	257	138	257	695
p2De	90	297	4	239	228
relieved	24	109	229	444	870
exploded	47	59	392	91	835
urllib2	71	153	86	423	561
fname=	55	129	330	477	568
collections.defaultdict	65	27	81	648	526
X3	85	172	481	333	170
Jaime's	4	17	254	710	441
convinced	88	59	114	419	907
X0	85	172	177	333	170
explodes	10	127	355	159	359
albeit	88	17	61	334	604
Concatenating	69	31	100	530	316
double	14	67	261	146	549
xy-plane	39	149	438	93	177
libpng-dev	67	151	327	232	334
bin_centers	74	195	4	690	577
n-body	39	246	48	195	416
stall	40	218	429	764	954
Non-brand	86	89	163	85	131
doubly	65	43	158	540	336
numpy.diff	42	27	286	358	244
dang	24	200	493	504	469
.numpy	55	132	352	113	798
stale	12	152	60	170	120
X5	95	181	272	339	170
cleaner	88	257	61	675	327
Overlay	69	31	100	209	911
imports	15	135	319	777	823
Overlap	38	162	495	209	837
expit	96	29	18	173	201
some_column	53	123	51	448	821
alike	13	109	375	444	835
scatter-plot	59	52	41	400	177
cleaned	50	232	232	35	781
.set	46	284	289	46	430
adj_matrix	44	292	64	348	218
Justin	4	121	264	646	500
0.10.1	91	122	156	587	626
0.10.0	91	122	156	587	626
robustly	88	257	61	306	612
window=	64	287	449	48	48
randint	75	243	81	725	484
quicksort	10	202	349	708	640
cropped	59	117	284	122	479
Viewing	71	61	90	571	54
feature_names	86	129	136	712	261
np.dot()	60	292	137	169	598
Colormaps	31	4	294	199	608
group.loc	53	139	51	448	821
3.3832500E-07	54	50	368	331	449
anwer	4	121	254	710	500
data.frame	43	265	375	364	631
reach	12	170	232	167	769
ibound	6	260	431	18	945
react	29	187	188	427	2
Depth	95	138	335	168	497
XD	24	200	493	504	991
BokehJS	13	26	138	257	398
FALSE	6	100	291	302	522
dict_list	65	233	158	540	526
splat	65	30	286	145	195
equatorial	39	149	438	93	573
1040	36	3	298	187	158
date2num()	31	63	68	426	745
blockdiagonal	34	77	280	88	943
windows	40	57	167	241	321
Creation	69	162	191	127	316
coincides	41	39	29	69	116
itertools.product()	42	27	14	313	244
4.2.1	19	163	33	590	322
transfrom	41	77	248	191	943
QtDesigner	93	187	104	537	728
df.describe()	43	157	74	489	975
seam	39	43	235	152	102
JS	13	26	90	118	537
JM	47	21	392	91	338
stft	20	93	425	428	344
JH	22	126	266	517	672
Unrecognized	63	44	397	559	136
Forward	38	206	169	722	71
routinely	13	26	126	203	765
Utilizing	45	57	167	9	621
font	45	230	448	767	909
np.fft.fft2	20	93	425	336	344
_format	31	220	444	236	444
month-day	99	49	456	198	687
underflow	14	86	314	325	84
starters	47	0	392	630	371
math.isnan()	6	68	12	130	866
Recd_Date	53	139	42	682	199
FFTW3	7	51	65	2	730
_much_	10	202	37	334	876
arrowheads	59	52	32	32	177
alpha=alpha_k	46	39	73	316	649
his	4	121	264	710	552
hit	50	232	232	167	769
TUCASEID	49	123	42	631	82
keepdims	42	269	403	53	244
Xi	85	194	370	5	192
5,000	21	190	234	557	42
longest	61	49	131	588	944
relational	71	171	122	702	457
B^-1	44	194	280	704	598
him	18	15	45	472	53
unintuitive	88	152	147	334	695
fishing	50	200	114	504	469
bars	59	52	32	19	884
art	12	120	212	144	852
dump	71	153	50	423	108
intelligence	13	120	235	257	219
matix	34	77	280	88	485
non-regular	39	126	270	733	455
arc	39	149	438	298	116
bare	57	120	212	144	727
are	47	21	392	251	338
arg	52	185	334	15	793
cleverly	76	48	61	799	360
barh	46	14	383	568	710
heapq.nsmallest	42	27	14	313	244
compacted	2	188	118	573	863
recording	79	246	58	428	600
learns	12	183	186	705	905
learnt	50	120	114	35	727
headers	61	49	50	405	713
FloatingPointError	63	86	478	130	350
get_group	43	157	103	683	956
sub-process	29	218	183	445	803
libraries	7	26	63	697	398
unions	69	265	131	574	739
various	13	21	393	75	564
times_dense	10	292	158	522	336
consecutive	78	21	131	588	944
Multidimensional	69	162	169	720	145
formatter	5	148	363	558	844
pad=0	46	284	494	757	339
FutureWarning	63	44	135	582	350
2021	48	123	486	339	687
ar1	74	100	95	18	336
ar2	74	100	54	690	228
reg_exp	86	89	163	299	66
initially	50	264	292	210	747
memap	71	248	336	359	439
Equalization	38	206	282	209	71
general-purpose	13	26	65	118	398
pymssql	71	171	473	128	88
pcar	74	100	108	586	577
c	74	174	177	107	262
downloaded	67	151	470	604	104
movers	53	139	51	417	821
became	50	264	292	210	747
z-value	39	4	266	733	116
totalseconds	3	63	460	172	787
pd.MultiIndex	43	265	75	771	356
scipy.optimize.fmin_l_bfgs_b	47	37	392	699	888
finds	2	215	491	174	702
arbitrarily	81	21	131	546	604
date_closed	99	281	453	155	687
clashing	2	229	457	306	180
improper	12	152	199	618	888
1,000,000,000	21	160	46	323	655
capabilities	13	23	138	118	398
LD_LIBRARY_PATH	55	132	352	113	137
2015-08-09	54	50	368	429	428
next_day	53	174	51	185	262
Play	69	13	237	134	479
enhancements	35	122	220	292	376
overlook	50	152	5	419	195
BeautifulSoup	71	171	50	423	561
whos	2	265	375	405	975
whom	18	225	143	170	219
reduction	34	272	275	566	734
count_dic	48	123	486	339	779
np.add.outer	42	227	286	0	146
fig.subplots_adjust	5	284	253	757	339
df.where	27	260	418	548	131
multi-thread	84	119	429	697	321
non-comment	45	132	222	384	568
121:02	54	69	119	158	126
auto-scaling	5	148	32	245	203
121:04	54	69	119	158	126
misbehaving	40	57	167	697	732
cartopy	59	23	495	199	586
Joblib	76	218	345	359	803
cummin	43	85	103	784	396
PiecewisePolynomial	72	6	216	616	456
gaussian_filter1d	60	124	458	324	438
tight_layout	5	284	253	757	518
stolen	4	193	372	478	552
.hour	53	274	68	72	390
Primary_CPT_Description	48	123	199	185	199
behavior	12	152	147	618	120
__hash__	3	220	329	663	720
PolyCollections	31	1	388	399	879
engineers	13	42	38	118	809
City	48	123	159	168	653
PC1	81	206	495	621	177
SparseVector	14	291	162	325	549
Tip	65	174	222	145	625
rip	11	120	114	35	727
where=	45	260	418	85	131
Tim	24	121	264	646	500
uncomment	29	37	128	699	55
KiB	21	127	355	159	359
rig	50	119	232	697	321
rid	2	263	457	618	625
ethnicity	48	123	218	83	285
WeekdayLocator	5	148	363	558	844
twofold	18	225	490	170	81
meridians	59	149	279	199	586
lengths	81	21	131	546	336
orientated	59	23	138	257	874
widely	13	26	138	118	398
uncertainty	77	214	231	783	738
Pydev	40	141	281	76	402
Unpack	69	162	191	61	316
GPGPU	13	26	345	118	730
bikes.ts.dt.hour	68	32	431	234	945
Ill	24	109	232	567	469
temp_df	53	139	74	551	199
Glade	93	187	104	537	728
my_array.shape	44	227	228	0	357
triangulation	72	165	15	152	570
myvar	90	297	4	239	228
Fabian	38	224	282	722	353
moving	81	116	275	167	531
decouple	2	232	457	335	360
test2.csv	36	10	489	712	261
noodle	40	232	232	699	469
fcompiler=gfortran	55	112	276	57	128
Almost	24	109	229	444	469
depending	47	0	416	91	563
analysis	13	246	126	203	765
edge	59	117	41	122	234
14,000	21	190	234	557	42
length-	74	293	216	255	228
POINTER	3	67	261	157	498
two-step	88	59	114	444	469
df.info()`	57	239	74	293	729
df.T	64	47	406	551	227
Takes	21	160	355	323	655
reliant	76	272	118	203	765
$temp	90	54	257	332	995
R**2	96	201	426	617	62
Buttons	29	187	128	149	282
intervals	81	147	270	546	301
df.A	27	260	431	234	945
df.B	27	260	431	234	945
df.C	27	260	431	234	605
Taken	4	193	19	478	588
normplot	60	296	375	364	631
Nope	47	200	493	504	991
abarnert	24	121	264	646	500
df.t	27	29	431	234	945
~I	96	201	18	560	62
collections.namedtuple	65	94	158	540	890
df.x	27	297	115	239	227
df.y	27	297	115	239	945
start_station_id	48	123	486	631	502
matplotlib.gridspec	31	13	388	97	518
128-bit	14	291	142	608	44
df.a	27	95	115	234	945
df.b	27	260	431	234	945
theorem	20	93	248	191	989
boolean-valued	43	111	95	574	734
679	54	50	154	797	139
fill_method	43	85	449	700	817
isomorphisms	13	43	41	400	765
675	53	139	42	250	624
676	68	32	257	545	744
unlimited	14	86	142	325	549
aggregation	43	265	103	376	956
Alpha	22	271	427	467	939
WMA	60	270	382	742	396
UNIQUE	30	212	55	574	965
libatlas-dev	67	151	327	232	334
modifications	57	235	118	257	990
u-v	41	6	177	107	573
deserialize	71	153	446	702	457
incidental	12	152	60	618	120
Teacher	78	204	419	178	361
ignore	6	263	456	618	625
unstable	12	42	38	279	84
Line1_Cleaning	78	204	148	448	821
rearrangement	88	257	396	566	520
pcolor()	22	13	294	199	627
hinted	4	193	264	252	371
minValue	74	100	456	355	923
traits	13	23	90	97	537
immediatly	29	203	128	236	55
PyDev	40	141	281	76	402
Channel	95	138	159	686	361
empy	2	215	328	98	702
D**	96	29	18	173	62
PyArray_SimpleNewFromData	3	67	261	312	498
pros	13	193	372	118	219
prop	31	1	388	134	879
scipy.sparse.linalg	60	296	102	431	751
VERY	88	16	55	334	604
proj	15	132	44	384	372
ticking	4	15	188	19	922
Komodo	40	141	259	281	402
prog	95	271	222	751	262
prof	84	127	2	697	321
prod	27	269	403	65	396
proc	55	277	330	384	568
CSV1	57	235	338	251	944
CSV2	78	49	338	251	944
mno-fused-madd	63	176	397	696	136
Futures	95	271	450	519	38
Landsat	22	248	381	45	593
~5	21	190	234	557	42
example.txt	36	10	376	712	261
prop_cycle	91	122	156	587	230
pandas.factorize()	65	233	158	522	526
intense	10	126	7	453	765
roundup	78	170	266	391	283
modar	34	40	361	404	406
completing	50	264	292	167	769
modal	29	187	128	764	954
Apologize	50	200	114	567	64
ncol=5	75	266	289	751	252
CSVs	71	153	50	423	854
credible	12	86	314	419	606
undoing	2	48	25	91	187
unnoticed	35	232	220	407	106
stitched	2	116	145	706	986
GDAL's	13	26	65	118	439
Everything	50	57	292	699	59
df.index.unique()	27	174	74	690	486
colorize	22	4	7	438	672
intraday	99	147	450	762	746
np.linalg.pinv	44	194	280	704	598
Series.apply	43	157	103	589	448
np.complex128	3	291	141	266	969
live	59	246	495	51	600
signifies	78	204	338	487	702
geo-referenced	22	248	381	571	177
Fuzzy	38	206	282	60	353
GLUT	13	26	63	697	398
perplexing	88	59	114	284	695
data**	47	174	490	751	835
crank	50	232	235	167	769
repeatedly	29	218	118	573	207
hcluster	15	135	319	777	35
upright	39	126	284	245	479
cvxpy	50	264	292	567	469
seterr	45	80	334	269	350
calles	94	215	361	212	923
caller	29	218	447	570	450
.fetchall()	30	212	182	343	965
iMac	84	7	2	410	580
z	41	6	177	107	397
np.float_	3	18	141	266	969
called	2	215	328	98	187
row_ids	74	100	108	586	228
dill	15	135	183	359	873
WAY	88	257	61	675	327
yyyymmdd	61	274	465	679	221
dataZero	47	21	392	91	338
shortcuts	76	23	126	203	31
row_idx	42	293	286	74	146
Vagrant	40	57	167	301	321
Needed	69	109	237	209	837
cross-post	18	225	45	472	509
LinearSegmentedColormap	31	13	294	653	271
2dp	14	86	85	325	549
grouper	43	157	103	376	956
Quantities	11	232	389	697	439
malicious	76	218	183	609	246
np.nan_to_num	27	29	403	282	244
_how_	57	225	143	37	451
grouped	48	265	173	621	653
interpretable	88	59	392	334	604
s.sum()	96	174	18	751	192
0.01um	53	139	42	417	775
_only_	47	0	392	618	338
ravel_multi_index	42	27	349	358	244
iter_segments()	65	1	158	399	879
input_image	44	90	246	196	357
Friday's	99	140	453	109	687
delineation	61	49	50	539	769
fluorescence	39	126	206	93	949
)"`	86	129	117	299	66
pd.read_csv()	52	185	28	121	793
c-contiguous	42	188	361	404	273
karma	18	15	45	472	922
req.py	37	250	27	475	194
x-dimension	81	288	284	245	479
flatten()	42	30	396	74	263
wofz	60	98	458	279	738
scroll	59	154	188	427	203
mollweide	39	149	279	199	586
Monthly	79	138	450	101	817
lean	88	257	5	419	53
zmin	41	266	289	282	810
Embarrassingly	38	26	282	697	398
pymysql	71	171	473	128	88
Liked	95	181	373	686	340
Asset	49	123	486	631	82
paralellize	76	48	118	169	31
adjustment	5	170	284	245	394
pd.series	43	281	74	355	262
sliding-window	12	59	490	419	907
a.dtype	3	18	141	266	969
simliar	47	174	222	799	439
axis=2	44	269	403	65	263
axis=3	44	227	403	65	263
axis=0	27	269	403	65	263
axis=1	64	269	403	65	48
squeezing	34	30	396	566	520
visualizing	13	126	126	203	453
snipet	57	235	342	450	950
BytesIO	36	153	336	423	942
tooltips	93	154	188	427	203
pay	18	232	232	419	53
wished	57	229	342	170	81
60-70	21	160	234	557	326
pNoise	68	54	257	10	585
if-statements	21	160	234	167	655
714	68	32	154	797	139
710	54	3	154	8	201
-specific	3	94	147	15	709
wishes	18	225	143	419	237
stackoverflow	18	225	45	527	509
LAN	71	246	183	609	600
notes	35	193	19	387	371
axis=n	44	30	403	74	263
LAB	22	90	246	141	722
LAC	99	144	453	635	687
deals	2	215	491	799	621
interpolating	72	165	15	733	301
dealt	50	264	393	799	360
LAT	39	149	279	766	573
ticker.MultipleLocator	46	35	289	46	810
noted	4	121	264	252	500
LAS	71	153	50	423	108
entrys	78	100	131	522	944
Functions	69	179	169	61	145
euler	60	98	458	279	809
cfd	95	298	159	519	814
13:15	54	69	119	158	126
StratifiedKFold	77	168	186	705	646
Decomposition	77	194	280	431	485
linebreaks	61	58	452	230	501
manipulating	2	116	145	203	531
cfs	27	29	18	690	486
.reindex	64	287	406	548	294
row-wise	43	157	103	750	956
-line	45	37	222	699	906
subselect	43	47	72	683	36
1.55367	54	50	368	429	428
rollaxis	42	30	396	74	263
1.55363	30	50	368	429	428
1.55362	30	271	368	429	428
polyfit	77	124	458	324	438
waiting	29	218	128	407	64
Link	57	193	19	387	114
Randall	30	174	419	102	262
Line	38	162	259	281	837
cum_ret	44	227	403	65	357
df.append	64	47	406	551	526
json.dumps	52	185	489	24	526
columns=columns	64	287	74	551	48
0.99.1	91	122	156	587	230
val_arr	34	77	0	522	336
stop_id	48	144	337	405	502
recomputing	81	272	275	573	603
decision	77	168	186	705	646
scrapped	50	264	292	210	564
Ctrl	40	141	281	764	632
adjusts	5	288	284	245	479
metre	81	288	32	200	884
2,100	44	205	154	196	357
.read	36	10	136	712	261
helpers	13	26	138	118	398
offsetting	5	116	457	799	531
element-by-element	34	77	95	18	734
ruin	76	152	118	573	863
appearently	50	59	392	35	908
apple	95	181	373	686	682
scaler	22	4	294	15	271
scales	59	52	284	245	479
forbid	13	229	457	306	439
black-and-white	22	248	381	571	593
scalex	45	80	334	269	625
scaley	45	80	334	269	625
non-optimized	10	202	37	169	876
endpoint=False	75	243	289	425	810
coo_matrix()	60	292	64	348	218
motor	81	170	206	167	949
apply	43	157	103	784	956
myfmt	46	35	289	46	314
dt.datetime	99	274	318	679	997
Conditions	69	162	191	61	837
ax.plot_trisurf	41	35	289	282	397
Births	53	139	42	250	199
varphi	96	288	29	69	116
matrixs	81	170	258	44	576
Curiously	29	37	128	699	954
numpy.zeros	75	227	228	0	484
3^n	96	194	356	327	668
node_color	31	13	294	134	271
usecols=	52	10	376	121	971
df.col	53	95	115	551	227
Positions	69	162	191	789	837
inclined	88	59	5	419	907
potentially	88	272	118	334	604
cooperate	93	57	167	697	398
Unrelated	18	225	490	170	81
rabbit	50	232	232	35	499
rows.plot()	45	13	334	269	625
28-by-28	34	77	0	88	943
women	79	228	218	168	167
annoy	18	225	5	419	53
Snippet	57	235	342	347	560
wtih	6	68	301	618	888
.query	94	222	115	369	160
infinities	14	86	314	130	84
with_labels=True	45	80	494	592	906
annot	74	195	54	690	192
ordinals	5	63	68	426	452
dlls	67	163	152	241	850
0.00000000	53	174	51	185	496
min-max	22	170	382	783	162
annon	49	123	486	631	82
non-numerical	6	265	456	341	470
proof	4	17	342	458	950
0.9	91	266	23	695	421
0.8	96	266	23	695	421
auto-generated	31	13	388	592	879
tap	20	93	382	191	989
tar	67	151	470	604	104
0.1	96	266	324	695	421
0.0	54	266	23	695	421
0.3	96	266	23	695	421
0.2	96	266	23	695	421
tax	79	78	487	101	955
0.4	96	266	324	695	421
0.7	96	266	23	695	421
0.6	96	266	324	695	421
tad	88	257	61	334	695
tag	18	225	490	170	81
tab	61	58	452	539	501
pyFFTW	7	51	65	2	730
serial	71	246	58	428	600
Eratosthenes	7	42	65	327	238
.pct_change()	53	139	256	197	48
4.6.2	84	57	167	301	321
multicollinearity	12	42	38	431	563
guru	11	173	212	739	727
rvec	90	95	199	332	995
Variant	47	174	392	751	835
fortunate	88	59	5	334	604
a.sum()	27	29	46	509	482
_draw_frame	31	1	388	236	444
binstar	67	151	470	604	594
segmenting	2	126	206	203	949
exemplify	57	235	342	450	950
administrator	40	119	281	76	786
outlier	81	159	132	104	162
Thanksgiving	99	182	318	109	94
0.j	96	54	257	713	65
r_sort	68	54	13	617	744
Hence	47	0	392	678	544
PyArray_SimpleNew	3	67	261	312	498
BigData	71	272	355	203	959
astroid	91	122	156	664	376
Activate	40	141	259	499	315
Convolution	20	93	248	191	989
interrupted	40	37	301	764	954
11X	86	181	373	185	496
wwii	4	121	264	646	500
insert()	65	233	158	15	526
crawling	71	218	429	609	854
boston.target	44	205	154	0	357
mouseover	59	154	188	427	2
irregularity	81	170	266	546	603
elif	27	260	431	234	945
Attempting	69	57	237	51	888
copy+pasteable	57	235	342	450	451
numpy.set_printoptions()	45	0	457	306	439
deprecating	50	200	114	504	747
jakevdp	24	109	229	444	870
')```	64	287	256	682	48
10**9	14	29	46	173	390
newnames	53	139	376	121	971
10**4	21	266	324	391	252
10**5	96	266	370	391	421
10**6	21	243	46	557	482
Bird	48	123	486	339	682
10**3	96	266	324	695	421
get_xlim()	31	13	388	592	879
complicate	88	152	118	618	360
byt	61	58	443	539	625
DivFactor	43	85	103	784	817
inconsistencies	12	152	60	618	606
covered	4	193	372	252	371
Suffice	88	232	5	35	53
pending	35	122	220	292	106
Salary	48	138	159	197	653
violating	12	225	490	170	219
Task	84	271	2	281	38
crash	40	37	301	764	954
test.index.hour	99	204	453	338	361
Gabor	20	93	7	709	989
yada	68	176	386	21	136
Adam	24	121	264	646	500
table()	60	40	444	15	709
.nunique()	64	150	256	197	48
numpy.r_	42	30	26	74	368
Summer	95	186	287	338	300
transmitter	39	126	239	93	949
by=	64	14	383	568	48
dirac	20	93	425	191	344
Calculation	69	179	169	264	145
io.StringIO	36	10	376	712	971
fiddle	47	232	457	306	439
trap	30	187	301	764	769
y_train	74	256	74	668	994
jQuery	93	23	90	537	537
Dimensionality	34	42	134	203	694
completions	40	57	172	699	957
df1's	48	123	486	178	637
KL-divergence	60	270	472	742	765
ax.set_axisbelow	46	226	494	46	430
right_on=	49	287	406	631	445
Timestamps	94	63	68	426	452
df.one	27	260	431	234	945
category	79	228	487	621	653
respects	2	215	491	174	621
biogo.matrix	7	51	65	2	398
command-line	40	141	281	76	632
radical	88	229	409	630	360
reformulate	12	42	38	350	809
scikits.statsmodels	77	124	186	341	443
evector	53	150	10	772	838
Nearly	21	190	229	167	326
pause=	86	89	163	157	314
pl.ion()	29	187	128	764	954
brilliantly	24	33	229	140	870
metaclass	76	94	329	663	720
dive	35	232	232	257	417
np.mat	75	227	385	0	357
\pandas\core\	37	250	27	314	889
Female	95	123	335	611	497
xs()	43	47	72	683	956
Older	35	122	167	9	376
np.max	27	269	403	65	244
to_clipboard	52	185	28	24	793
conflicts	35	152	60	697	120
anyhow	94	222	147	143	160
v1.7	91	122	156	9	230
img_gray	22	90	246	141	672
TPrice	53	123	51	448	821
tripled	71	188	122	702	863
0.72	96	266	324	695	421
pqr	90	39	73	316	649
feasible	88	257	61	334	612
conversation	18	225	220	71	509
xlimit	5	148	32	19	844
3x3x3	34	77	0	88	943
Upon	50	37	292	210	59
.groupby	64	150	256	197	48
sub-modules	15	135	319	777	873
DataSet	43	265	191	771	739
smoothing	72	165	382	235	989
Local	38	271	159	519	38
destinations	79	228	487	480	285
MOVETO	3	220	19	514	720
salient	13	183	409	118	604
weka	13	26	65	118	730
overtime	79	228	206	519	675
np.nan	6	68	12	130	910
accent	61	58	443	539	501
pyenv	67	151	210	351	137
lifting	76	51	65	169	730
PANDAS	69	162	191	789	739
Kb	21	223	234	127	54
Ke	44	195	4	5	192
doomed	76	48	118	630	360
mentionned	4	121	319	252	957
wx	93	187	104	368	591
binname	78	266	324	391	421
in_stock	53	139	51	448	821
Kp	44	293	4	509	228
Ku	10	202	37	323	876
x.loc	53	139	51	72	775
_tkagg	15	176	44	696	331
KB	21	127	355	159	359
males	79	228	487	168	675
Bellow	57	235	342	450	177
KD	38	206	282	722	353
richer	13	26	138	118	606
_just_	57	263	145	618	986
KL	77	270	472	783	662
some_metric	12	183	392	630	563
KR	95	228	373	96	497
KW	48	49	456	405	713
SPARSE	30	42	55	136	965
mpl_toolkits.basemap	15	135	319	777	823
1.5	91	108	23	695	322
Executable	55	141	259	110	402
1.7	91	122	156	587	230
avoided	76	152	60	799	187
Enthought	19	151	210	351	104
1.2	91	108	23	579	322
1.3	91	122	156	587	230
1.8	91	122	156	587	230
1.9	91	122	156	587	230
myproject	55	128	330	477	568
close_event	29	187	128	149	282
Numpy.dot	84	57	46	9	321
numpy.ctypeslib.as_array	3	220	361	157	235
metter	2	229	456	405	713
np.tensordot	44	30	137	74	598
Independent	78	100	291	355	522
afraid	11	59	114	419	907
VARCHAR	71	171	473	128	88
ThemeChanged	37	250	27	289	194
numpy.trapz	60	98	458	279	438
hatch=	46	174	289	751	906
edgecolor=	46	226	73	316	52
r_i	74	195	4	509	228
ahold	2	232	457	335	180
dublicate	50	264	490	706	114
scipy.optimize.leastsq()	57	40	444	396	709
spawns	29	218	183	359	803
Y002	48	204	419	276	653
Scotland	95	181	373	168	497
25000	21	190	234	557	692
x_size	68	54	300	338	139
centre	39	149	438	122	979
1.x	91	122	156	587	230
Solution	30	17	254	347	560
X^T	85	194	280	704	485
delve	11	120	232	35	53
.groupby()	43	157	103	683	956
nucleotide	79	43	239	27	944
1.j	68	54	257	713	65
edgecolors	45	13	294	134	608
intesity	81	126	266	783	4
archiving	71	153	183	359	306
.pkl	71	153	50	423	306
High	95	138	159	762	746
factorisation	77	42	38	431	238
Earth	39	149	279	93	586
input()	29	40	128	15	55
df_data	48	281	74	339	779
dend	96	266	449	391	968
gps_time	44	205	251	196	357
memory-map	71	153	336	702	306
ax.xaxis	46	148	363	46	844
mistook	24	200	493	504	991
getregion	41	40	10	772	838
purely	12	152	134	630	908
BGR	22	248	381	438	672
word1	53	123	272	339	682
__rmul__	3	220	329	663	235
debate	12	59	5	552	908
python.app	55	112	276	57	791
ndvi1	74	100	108	586	228
CO	95	298	373	686	361
cache	10	218	355	359	450
operational	13	187	48	195	765
Specific	69	162	191	61	837
Chi	77	98	132	783	738
Catch	29	37	334	149	625
.iterrows()	43	157	72	750	207
thousands	21	190	234	557	42
Pixels	22	126	7	438	21
freetype	67	151	327	232	334
10:00	99	253	343	525	256
992	90	223	298	332	995
Memmapped	34	188	251	196	694
999	21	204	46	557	252
gui's	29	187	128	149	282
jedi-vim	84	57	167	301	321
99%	12	183	409	44	176
ones	47	21	131	251	338
interoperability	7	26	65	2	730
words	78	49	131	27	1
documention	47	193	19	387	371
;-))	18	225	490	567	81
wordy	88	257	61	334	695
burned	50	264	60	210	747
iow	94	222	147	355	160
groupby.plot	47	48	457	630	360
non-integers	43	17	147	574	612
Chr	53	95	115	239	227
precomputing	34	42	275	566	694
Channels	34	77	251	751	943
Gosh	24	200	493	504	991
sediment	95	181	287	185	496
generations	10	160	274	323	655
pandas.qcut	43	157	103	376	956
conversions	76	94	162	169	470
Thinking	88	59	490	678	442
Ammar	45	100	291	355	148
toarray()	60	292	64	348	218
feature_indices_	74	256	4	255	994
merits	12	183	5	44	219
10e6	21	243	46	557	655
violet	22	4	427	438	198
imread	22	90	246	141	722
scoured	11	264	393	75	564
closer	81	170	409	44	576
closes	29	187	128	764	364
closep	90	297	13	239	744
mentioned	4	121	264	252	371
wspace	5	284	253	757	339
superb	13	109	229	444	264
xray	35	26	126	118	398
genius	24	109	229	444	870
closed	29	187	128	764	364
opencv-3.0.0	55	128	386	21	194
theta	41	6	438	560	13
Minute	99	138	66	512	687
Cycle	95	271	159	168	837
CAPSULE_TEXT	53	123	51	339	779
amazon	84	119	2	390	377
alphabetically	48	144	337	708	502
signal1Data	81	43	131	546	283
Differential	38	206	38	722	71
1830	41	288	324	200	252
r.date	86	281	163	185	390
Annotating	69	162	100	209	837
spoil	12	183	409	618	563
doesnot	50	59	301	699	835
log-scaling	59	52	32	19	884
OTOH	47	0	65	334	604
Firefox	93	61	315	769	374
Transactions	38	224	282	110	38
Locator	5	148	363	558	844
grain	13	232	232	195	64
atleast	47	21	233	251	835
Dynamics	13	224	282	94	689
safely	3	67	162	15	341
THEN	2	116	275	573	531
ax.get_xticklabels()	46	148	363	46	348
sys.getsizeof	3	227	385	157	969
hyphen	61	58	452	86	501
a_max	27	29	431	28	945
DVY	54	186	318	372	789
delimeter	61	58	452	539	501
Boundary	38	206	191	722	71
Conclusion	10	202	37	534	876
my_script.py	40	141	281	76	632
broadcasts	34	77	396	566	520
validating	12	246	206	203	563
var_name	86	174	272	185	262
byState_df	90	95	115	239	227
enlarging	2	188	457	573	531
half-hour	79	147	450	101	817
Kumar	4	121	264	646	500
myvalue	90	18	141	266	969
scalars	3	94	0	73	890
pickle.dump	36	10	336	712	306
numpy.histogramdd	72	214	297	171	627
numpy.ma	6	68	12	53	957
collections.Counter()	65	233	158	514	526
saner	88	272	118	334	863
*vertices	68	32	13	545	486
repetition	12	263	131	522	944
Navigation	93	154	104	537	728
zoomed_inset_axes	5	13	284	558	518
PLU	85	194	280	431	485
PLT	15	135	319	777	823
\rho	61	230	448	767	909
GeoPandas	13	26	138	118	398
ddof=0	60	219	403	550	454
ddof=1	60	219	403	550	454
df2.query	46	39	289	505	649
will	47	0	392	143	338
hovering	59	154	188	427	203
wild	12	59	5	419	53
Potentially	88	257	61	424	695
sub-sample	81	21	131	98	162
DV1	85	201	426	560	142
last_inserted_id	86	89	163	185	199
MORE	10	212	55	136	863
Bollinger	81	147	450	101	675
2*3	44	205	251	196	943
2*2	34	77	251	88	943
Workaround	69	162	237	281	114
.10	86	129	465	36	906
.11	91	122	167	664	469
HttpResponse	93	61	90	99	942
2**	14	243	46	196	482
Hope	11	109	143	567	652
error-handling	57	37	301	618	625
privileges	67	119	210	351	786
col6	48	123	486	197	82
question's	4	17	254	710	81
np.imag	96	29	177	336	13
panning	93	154	188	427	203
Paste	57	239	305	769	975
commandA()	45	100	148	355	148
Resource	30	271	397	281	136
2*p	96	201	18	173	62
19:30	54	69	198	158	126
scikit-image	22	248	7	141	670
40GB	21	127	355	159	359
software\Python26\lib\	37	250	27	475	194
boxplots	59	14	383	621	710
2*a	90	297	26	617	744
np.linalg.eigvals	44	194	137	704	598
subfunction	65	40	444	236	709
2.5.4	19	7	417	13	644
sqldate	48	123	486	339	779
2.5.2	19	7	417	301	791
2.5.3	84	7	417	301	644
MTD	78	140	453	198	955
2.5.1	91	7	417	301	230
scaling	81	170	284	245	479
bottom=0	46	284	253	757	339
appropriated	11	173	389	763	867
OSX_SDK_VER=	67	112	167	499	315
Volts	99	298	419	198	221
non-Pandas	88	235	342	424	950
unpacked	67	57	328	384	336
theses	61	21	50	98	93
ARE	30	212	55	136	965
english	18	120	179	739	67
2*N	44	293	228	0	228
breaker	88	152	134	334	604
sensing	71	246	126	60	92
ARM	84	163	152	418	166
Virtualenv	67	151	210	351	137
qvoronoi	95	181	419	730	497
np.arctan2	42	30	286	74	622
rocket	40	187	429	764	796
percent	79	214	173	86	459
parabolas	81	98	231	279	738
numexpr	7	51	428	169	915
to_json()	43	265	72	24	88
sku	48	123	486	631	122
plt.plot_date	46	274	363	46	745
interpolants	72	165	15	235	84
Far	10	272	37	225	990
sky	39	149	279	93	573
unsigned	14	291	85	608	103
googling	50	264	393	75	564
protocol=2	84	291	336	735	306
adoption	13	26	63	118	398
R1C1	71	153	86	638	561
earthquakes	21	126	214	251	949
boom	50	200	493	210	469
identical	47	21	131	251	59
saturation	22	4	427	438	672
sick	11	120	114	35	64
Python27\	37	250	27	475	889
markersize	31	13	383	134	608
evecs	44	195	4	255	577
non-null	78	204	456	198	700
know	47	59	392	630	835
knot	72	165	231	733	116
variants	47	193	393	251	371
matplotlib.transforms.Transform	31	1	388	514	720
ahem	35	109	229	444	264
CentOS	19	7	432	301	156
arr1-arr2	44	227	403	65	357
Dealing	69	31	100	530	911
4641	95	204	419	155	687
sympy.lambdify	60	98	458	279	809
10D	64	287	256	48	48
C2H5OH	4	121	264	646	500
1.7.1	91	7	417	13	230
index=rng	75	32	385	425	486
0xff	86	5	443	563	898
Stephan	4	224	372	387	552
starred	78	100	338	355	262
j's	79	144	239	27	944
time()	15	174	68	508	27
because	47	0	392	91	908
shabby	10	202	37	323	604
sequence	47	21	131	522	336
searching	50	264	393	75	564
115	54	3	298	318	158
114	54	3	101	187	158
117	54	223	298	318	158
116	37	3	101	187	158
111	46	203	255	577	430
110	97	223	298	318	158
113	21	3	298	187	158
112	54	3	298	318	158
2012-03-03	54	69	119	158	126
Jonathan	4	121	264	646	500
Ffisegydd	24	121	394	646	500
118	44	205	154	196	357
matrix1	74	293	108	601	228
flummoxed	50	120	114	35	727
leaf	59	79	41	400	234
lead	12	152	60	618	120
leak	29	188	447	570	450
g_type	68	174	117	751	486
out-of-core	76	42	126	702	457
leap	99	140	453	109	94
boolean_array	74	95	115	239	227
leader	40	239	222	170	517
gammaln	60	296	102	742	238
Population	95	298	419	168	653
locate	47	229	392	588	315
df.sort_index()	43	47	72	683	73
Mayavi's	72	23	15	97	627
enum	3	94	162	514	235
ensures	2	215	491	174	621
11k	21	190	234	557	576
overall	81	170	409	44	576
Greatly	24	33	229	763	867
wdir=	37	250	52	475	194
11x	10	202	37	323	876
x.ndim	44	293	137	509	866
if_exists	52	185	473	24	369
test.csv	36	10	376	294	261
getting	50	59	301	618	888
dependence	12	183	416	783	738
shipping	13	232	126	697	959
matrixA	44	293	54	690	486
re-index	43	147	75	771	817
dependency	67	151	167	697	732
diverging	22	4	427	438	198
clojure	76	51	65	2	730
ax.get_children()	74	233	54	430	526
Really	24	109	229	444	870
10000000	21	243	274	297	655
Outer	30	179	169	574	145
DEFAULT	45	212	55	269	965
warrants	18	225	45	472	81
libtiff	88	59	19	697	371
brush	59	117	433	709	177
registration	71	248	381	571	722
dataframe.columns	65	233	158	522	526
h264	71	246	58	571	600
fired	29	187	128	149	282
Ball	76	94	329	663	720
dot()	60	296	137	431	751
Unused	95	271	159	519	38
semilog	5	14	383	639	825
CLOSE	53	123	51	448	821
r.plot	45	185	418	548	956
build-in	60	157	375	735	31
eg	47	21	233	251	9
ensured	2	215	328	98	187
np.full	75	227	228	0	484
new_data	6	68	54	690	910
Ident	53	204	272	211	199
Operands	63	44	199	196	694
i've	50	264	292	75	747
funds	99	78	450	762	746
gaussian	20	93	382	147	4
CT	4	121	264	646	500
contradictory	50	37	301	699	995
Suggestion	38	109	394	567	560
leastsq	60	124	458	324	438
instructive	88	225	5	334	264
Aggdraw	39	126	7	571	177
read_clipboard()	57	265	72	699	451
pip_build_root	55	128	485	193	325
200,000	21	190	234	557	42
broadly	88	257	61	170	612
ex	47	174	233	751	262
Doesn't	47	0	392	143	835
non-existent	2	239	147	618	908
ts.resample	64	287	449	48	997
window's	29	154	188	764	2
meaningless	12	152	147	170	908
4.2f	86	129	465	137	347
block=True	29	203	348	123	55
new_arr	90	297	26	509	228
second.csv	79	144	195	635	944
anythin	71	57	167	697	59
3.7.11	86	181	386	636	56
ev	41	6	177	107	211
more-or-less	57	23	235	199	950
boot	10	202	37	323	876
book	13	224	372	94	689
bool	3	18	95	18	866
es	31	1	380	432	807
branch	35	122	220	292	376
Improving	69	179	169	61	145
long-time	13	120	212	739	727
memoize	76	218	444	359	31
junk	50	263	301	618	625
SPACE	36	58	443	539	898
grid=False	46	39	73	505	649
ax.get_position()	5	284	284	245	479
june	74	140	148	109	821
zoom-in	59	154	188	427	447
m-by-n	34	77	280	88	943
scipy.optimize.brute	60	40	458	742	709
Mar	99	182	318	34	519
tan	96	201	29	69	13
SELL	48	123	486	339	687
E.g.	47	0	392	678	9
expands	34	77	491	174	520
basex=2	46	148	494	639	825
Pyqt	93	187	495	537	537
x-x.mean()	96	29	18	173	13
Emag	57	40	444	396	622
.set_xticks	46	148	363	46	430
