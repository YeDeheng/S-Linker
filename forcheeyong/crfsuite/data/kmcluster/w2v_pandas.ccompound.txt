how=sum	38	159	409	502	776
func	27	30	222	161	618
0.000000	51	66	123	224	658
biopython	48	46	451	89	850
warnings	63	226	413	513	974
data.x	79	265	235	58	963
yellow	59	235	304	221	629
four	18	211	337	23	129
2015-03-03t18	51	85	123	22	464
netcdf	49	190	78	627	918
x.tolist()	27	30	222	161	181
hanging	63	127	295	108	799
constants	45	100	283	467	340
woody	19	273	195	631	184
sumproduct	52	152	337	447	368
localized	44	54	491	46	530
looking	52	234	345	50	434
typeerror	79	65	297	675	910
xts	11	144	233	183	850
zelazny7's	1	260	440	444	756
electricity	82	196	26	713	990
rinex	93	190	275	6	918
length-1	79	65	297	675	813
aggregations	11	131	486	223	581
unanswered	1	222	92	225	132
cycling	93	58	385	211	911
my_filename	71	25	334	722	948
`'b	73	297	476	564	311
shouldn't	26	234	390	596	888
time.sleep	11	127	385	108	162
point	66	234	390	292	880
regional	18	173	394	713	453
presses	93	270	319	292	377
.rename	55	49	215	650	62
first-level	73	287	445	698	998
replaces	80	129	483	201	778
header=false	43	39	478	147	488
`'o	79	251	315	111	963
uncertain	26	116	345	50	434
bringing	23	261	298	52	611
advices	50	276	374	412	93
basics	48	133	421	323	415
enddate	73	204	189	305	304
reformatted	1	260	227	444	756
customizable	28	43	488	309	57
bugging	16	163	167	204	880
commenter	68	71	440	11	909
wednesday	60	99	352	51	99
b.ix	62	25	80	407	948
solid	48	133	167	50	179
pd.apply	11	256	233	760	26
df_train	71	25	334	722	948
subindex	73	236	335	698	108
date_string	38	64	212	502	745
commented	56	260	440	444	756
specially	6	177	488	661	57
tom's	1	260	283	759	117
2014-03-31	60	140	242	305	201
pandas.read_html	49	185	235	690	519
c2143	5	85	98	526	877
preface	66	234	167	50	735
scraper	13	200	275	39	850
empirical	33	138	216	330	578
270	3	212	371	411	783
elegant	28	77	150	638	467
rusty	52	133	167	50	179
sklearn.cluster	64	215	454	329	918
274	86	201	371	102	465
%y-%m-%d	38	64	145	55	550
279	86	169	371	607	465
scraped	13	190	275	6	542
bolts	94	46	451	39	609
2005-05-30	54	234	337	14	129
errors	63	82	413	533	365
this'll	28	38	474	315	57
df_result	68	215	227	366	744
contributed	29	152	53	292	990
`'index	57	74	235	564	853
01:30	86	81	242	724	465
designing	45	190	264	368	557
iterables	87	265	203	21	498
replaced	80	129	0	201	778
increasing	29	100	389	464	838
lottery	93	173	26	713	377
:]))	71	80	334	722	968
dataframe.query()	61	256	108	696	664
widget	53	44	487	76	517
hero	19	163	6	289	184
indexable	6	90	246	454	311
dateframes	23	286	224	248	151
str()	92	183	169	185	203
formats	49	190	112	507	349
here	68	18	227	11	909
reported	61	82	108	29	365
shape_pt_sequence	86	221	340	102	465
china	82	196	309	144	936
&&	67	228	206	122	835
granularity	44	269	491	46	789
yyyymm	92	76	326	303	349
pytables	10	123	78	627	557
verify_integrity	6	126	235	357	166
elaborate	16	116	5	394	807
nulls	80	129	0	201	778
stratifiedshufflesplit	64	33	7	386	553
reports	56	82	110	663	377
error_bad_lines=false	43	39	478	593	957
i'd	66	234	390	661	888
cut()	57	224	419	629	854
unwanted	80	211	153	347	675
i'm	26	55	167	50	179
deserves	1	260	92	444	903
missing	80	129	0	201	60
pairings	18	76	445	343	108
criticism	1	222	92	15	23
appropriately	6	126	153	766	927
sdate	15	25	272	407	919
divide	18	152	53	409	217
magically	26	234	390	661	880
ground	93	76	319	314	248
explained	1	260	440	444	756
precincts	18	152	444	223	368
replace	80	129	0	201	778
brought	56	261	298	559	587
unix	92	104	434	303	416
assert_frame_equal	15	256	179	596	166
2.2.0	58	245	403	400	141
txt	49	190	454	6	918
txs	19	273	6	289	184
unit	44	282	199	93	990
<3	19	163	6	289	184
cheating	15	43	474	436	57
dna	93	76	171	761	542
spoke	16	149	44	204	476
non-int	79	65	297	675	910
browse	48	58	264	108	911
e1	73	262	306	766	778
assign()	28	3	488	438	57
42	86	169	371	607	783
s.values	15	147	27	632	667
autocompletion	98	46	451	430	850
therefore	6	234	390	766	129
tokenize	38	231	322	157	527
strike	73	29	271	435	157
inner	89	286	224	619	151
np.tile	17	147	27	632	319
start_date	44	90	189	263	843
line1_cleaning	54	278	384	162	939
skewness	33	95	53	476	896
females	82	91	331	761	661
standardized	49	3	486	89	487
holy	19	163	6	204	184
populations	93	173	416	761	661
successful	56	122	287	350	313
brings	56	261	179	74	744
10gb	3	61	231	275	234
yahoo	13	29	271	320	294
hurt	45	38	474	448	57
99	86	169	371	102	783
glass	54	221	340	143	995
milestones	93	215	185	447	129
dataframe.apply()	11	136	233	760	785
tying	23	215	185	248	151
91	86	169	371	37	783
serially	45	127	369	368	773
hole	66	234	128	436	880
hold	6	141	264	342	431
95	86	169	371	411	783
94	54	293	340	14	533
97	86	169	367	607	161
96	3	169	371	411	783
locked	94	127	143	368	773
`df['start	92	36	434	785	366
read_sql_query	46	243	190	218	100
.size	62	256	56	0	64
load_data	64	185	454	557	369
selections	78	226	224	439	581
year-month	18	204	326	305	108
ascending=false	17	30	370	165	86
x.time()	27	57	466	161	588
df.append()	15	49	138	58	166
itself	6	234	390	596	292
temperatures	93	282	70	91	491
shelve	45	190	314	627	557
rework	16	116	167	15	476
100%	26	38	345	436	434
`method='ffill	80	129	0	201	410
phrase	91	76	319	761	775
august	60	34	352	51	753
df.dot	71	147	27	700	667
41	86	169	371	607	984
subplot2grid	7	224	180	10	314
organized	93	282	185	446	585
digit	91	297	358	131	970
knownvalue	54	140	384	14	784
df1.values	71	80	443	267	432
currency	73	90	400	305	784
defeats	78	43	488	309	687
smth	55	116	128	438	320
reviewing	56	122	320	50	807
want	52	234	390	447	320
drive	94	200	26	396	513
type1	82	196	309	144	791
groupby.groups	68	215	185	95	744
absolute	29	95	53	469	896
preferably	52	3	486	89	585
hog	45	61	244	582	234
df.x.apply	27	57	466	161	588
hoc	66	126	486	671	807
syntactic	12	43	474	436	57
complaining	26	82	110	533	365
travel	93	282	199	292	990
win7	58	218	157	84	322
geojson	49	270	275	195	918
revisit	16	163	167	436	476
machine	94	217	157	84	322
how	52	116	128	89	320
nontrivial	33	138	216	330	578
significance	33	138	216	524	491
place	66	234	390	596	129
anaconda\lib\	21	24	121	163	616
preferable	28	38	150	309	57
classify	64	33	296	386	768
abstraction	48	133	488	204	687
beauty	67	77	150	726	64
minimums	18	287	337	464	775
typed	63	183	169	603	902
major_axis	54	2	139	233	560
minimized	68	211	389	366	744
unit='s	67	36	466	502	366
dell	94	217	157	396	322
diagram	59	235	471	304	944
plyr	48	144	451	183	850
modest	3	61	231	275	822
hn	71	80	141	298	995
computation	45	131	283	417	581
513	86	221	340	102	465
types	6	183	169	507	163
succinct	28	77	150	638	467
1004	38	196	309	144	125
effective	28	77	262	438	467
classmethod	79	265	426	58	963
wins	18	16	199	718	795
subplots	7	224	344	304	944
np.round	27	57	27	667	588
alias	44	265	228	491	684
18th	60	34	352	51	753
517	86	34	318	82	641
ho	53	170	128	221	345
keeps	63	137	179	74	495
recvd_dttm	68	278	413	533	939
pandas.core.groupby.dataframegroupby	79	251	315	111	963
nonsensical	26	82	230	714	744
arounds	56	122	287	50	313
wind	93	282	70	299	990
negations	93	76	319	761	542
__	21	24	367	428	562
restriction	6	234	390	454	129
weasyprint	53	44	19	76	517
feedback	50	276	374	412	93
xlim	7	224	116	10	314
welcomed	50	276	374	412	93
nanosecond	92	104	434	303	780
vary	6	279	133	464	927
newtable	73	286	391	427	304
calibration	93	282	70	634	524
sub-frame	23	58	483	151	581
.value_counts	17	30	370	165	86
drawdown	29	253	389	162	643
1-12	18	25	80	14	784
"]]	55	237	324	650	356
cumsum	11	136	52	223	105
---->	67	221	466	298	588
vectorize	28	131	163	417	490
uuid	18	152	199	368	775
fit	64	33	7	187	553
_x	73	286	214	619	806
rankings	18	95	73	343	775
fix	26	116	110	687	849
timedelta64	92	104	434	622	875
distinguishing	68	71	227	354	320
fig	7	188	344	601	706
mckinney's	48	203	278	323	415
answerers	1	222	421	15	807
2020	60	34	318	82	753
hidden	26	82	153	315	487
fin	43	39	47	109	246
easier	28	77	150	638	467
_a	67	237	324	90	62
`df['x	67	255	79	785	282
`df.resample('m	38	159	409	502	588
pseudocode	52	116	227	11	781
var1	54	17	14	528	108
var3	54	91	14	528	936
var2	54	17	14	528	936
similar	56	122	440	350	487
8gb	94	61	231	84	322
df.foo	71	228	206	122	916
df[df['a	67	255	79	122	282
slicing	78	226	272	270	538
df2.divide	90	238	443	245	206
effects	64	138	216	187	472
re.escape	91	42	251	34	24
2021	73	17	309	427	784
interrupt	63	127	295	108	799
internally	78	183	169	603	963
multidimensional	87	141	203	748	973
xlswriter	10	185	426	470	519
silver	82	91	10	569	125
structural	6	46	26	62	373
represents	93	282	70	634	431
resample()	44	159	30	756	684
2000000	82	196	309	144	936
off	66	211	390	347	880
queues	45	127	369	368	773
_1	73	17	391	427	304
dumps	46	185	275	6	918
merge()	57	286	214	619	103
arrow	1	222	92	225	23
h5py	49	46	78	627	557
pandas.read_fwf	43	74	201	690	519
dataframe.values	87	141	203	748	973
misspellings	23	279	337	447	709
sublime	98	113	487	160	983
austria	82	191	309	144	108
preceded	91	170	319	784	775
financial	13	29	271	156	294
column_a	55	25	370	650	776
series	15	131	203	58	973
250,000	3	212	107	319	633
allan	1	273	195	631	117
abuse	66	43	167	309	57
`'columns	57	74	235	564	853
squeeze=true	43	74	478	182	488
strips	6	210	153	736	709
read_html	49	185	482	690	519
395	86	169	371	102	783
impossible	26	38	474	714	362
substantially	45	100	283	582	838
v0.13.1	79	193	413	533	166
pictureid	18	152	73	718	990
xp	94	218	157	396	322
overwrite	80	211	483	437	982
multi-threading	45	133	451	467	687
rt	82	91	309	343	936
2013-01-01	86	81	242	431	512
threadsafe	45	190	369	368	557
rs	82	91	309	343	936
.concat	57	286	224	248	151
dst	60	54	333	540	530
rx	18	204	445	698	108
.max_rows	38	68	98	373	955
smp	4	34	318	82	548
rd	82	196	309	391	125
combinatorial	45	43	224	315	380
encourage	48	18	421	323	415
dsm	19	273	195	295	117
adapt	52	116	227	11	927
rb	43	39	47	157	527
soil_type	54	221	340	14	995
rm	94	231	213	388	318
millions	3	212	107	319	633
ofcourse	26	234	390	661	129
sma	29	78	389	162	255
squashed	61	82	110	687	846
gunicorn	94	200	369	368	95
written	56	234	298	6	918
serie2	73	90	445	698	775
psuedo	68	71	227	11	909
serie1	73	90	445	698	775
midpoint	33	95	53	435	157
given	52	215	185	447	129
pd.timeseries	57	256	335	58	843
encountering	26	82	110	687	365
pd.options.display.max_rows	15	68	306	373	263
checked	56	122	179	559	967
estimate	33	138	216	330	578
prepending	91	170	83	784	292
md5	18	76	199	558	542
inter-row	11	131	233	89	231
"]"	51	85	123	22	43
enormous	45	100	264	342	557
ate	54	178	340	14	995
subtractions	23	131	417	439	581
r2	17	159	363	754	816
if's	52	77	150	438	467
atm	61	123	108	746	279
ds2	15	25	400	142	998
ds1	15	90	400	142	998
f.read()	43	39	47	109	246
shipped	58	176	50	649	617
choices	78	279	440	62	687
speedy	45	38	264	204	347
martijn	19	163	120	458	230
resetting	89	236	45	208	103
caught	63	82	298	687	869
speeds	45	261	283	582	838
purpose	52	3	488	309	55
recoded	68	215	179	366	744
"))	55	237	324	650	62
subtlety	26	82	230	714	55
")"	55	262	316	157	62
channels	93	173	394	761	542
spinning	45	133	167	467	179
mingw	25	156	184	376	291
megabytes	3	212	107	275	234
178	86	169	371	102	43
preform	64	33	7	446	553
176	51	201	219	715	892
175	86	221	340	102	465
clarity	1	260	60	200	115
171	86	221	371	130	867
170	3	212	107	362	633
bitten	45	100	110	467	57
basestring	27	57	222	31	153
basketball	93	16	84	713	913
service	94	14	10	39	884
similarly	11	234	390	89	292
defaulting	6	126	153	357	166
needed	56	234	390	596	967
df.reindex_axis	17	30	443	165	86
listed	56	279	337	766	129
hypothetical	37	71	227	11	909
p_g	59	235	471	620	672
to_sparse	45	100	244	582	838
ranging	44	140	491	46	789
listen	16	200	167	50	476
.unique	71	80	334	722	948
collapse	23	236	337	437	575
decimal=	43	39	478	593	488
predictably	63	262	413	533	365
whith	68	215	185	446	129
frowned	1	260	230	309	23
")`	55	237	324	650	62
wisdom	16	133	167	50	179
sharey=false	7	188	472	601	706
orient='index	90	30	443	245	432
rectified	56	262	128	766	365
predictable	6	126	230	315	373
defaulted	6	74	235	690	853
cdata	91	297	161	668	64
_the	26	260	440	596	756
df1+df2	15	258	27	632	166
crawl	27	109	222	760	162
date_format	57	104	212	185	745
peril	66	236	335	437	103
0-10	18	140	199	435	990
accessors	78	226	228	270	763
df.index.map	27	57	466	161	588
h's	1	273	195	631	117
itertuples()	78	256	385	151	26
index=none	43	39	478	147	488
1-column	23	215	185	446	973
idle	98	231	487	574	983
")]	55	237	324	650	396
get_data_yahoo	13	29	271	156	294
skimmed	19	163	469	458	230
feeling	26	38	167	438	648
recheck	68	260	120	596	320
item_date	92	293	434	612	92
test_out	68	76	13	446	982
unintended	26	82	230	315	365
10min	44	99	491	46	368
entail	45	58	264	417	911
objects	92	265	169	603	416
exploring	48	133	167	50	179
runner	18	204	445	761	108
boston	55	237	456	650	62
aapl	13	29	271	156	407
wes's	48	203	278	323	415
plt.gca()	7	188	116	10	314
ax.legend	71	188	472	0	904
spent	56	122	287	630	313
parsers	49	185	112	507	349
y002	54	17	331	343	108
increment	18	140	199	435	145
u'3	38	5	91	735	527
u'2	38	5	91	735	527
isexpired	23	287	185	446	129
dedupe	23	58	185	446	585
u'6	38	5	91	735	867
dozen	3	212	368	658	525
re-check	68	234	128	366	320
company.idx	43	39	47	109	246
argmax()	11	256	52	597	26
vge	73	204	445	564	311
manger	94	156	451	376	609
cope	49	116	112	507	927
2014-12-22	60	140	384	435	80
asymmetric	6	82	179	687	365
recommended	78	3	488	309	57
causing	26	82	110	687	365
test_index	71	80	334	722	948
person_id	73	204	13	454	304
grips	48	203	167	50	831
instructed	94	263	213	396	291
2015-09-30	51	81	123	780	512
shipments	56	173	394	661	775
%d-%m-%y	38	64	145	586	550
transactions	18	173	394	718	453
screwing	26	261	110	52	846
object	79	251	315	111	963
str.join()	57	256	56	21	763
eliminates	80	211	483	437	982
metrics	93	173	26	761	337
simplify	52	260	227	494	807
x.replace	27	57	466	565	588
svedoc	62	109	222	0	618
letter	91	204	319	784	775
visualizations	48	133	486	671	179
retaining	89	236	45	437	495
12ema	60	278	384	435	177
blockmanager	79	265	426	791	963
macbook	94	217	157	84	322
dummy	37	33	457	446	768
jupyter	98	44	487	160	983
0.067139	51	66	238	471	658
lose	66	126	153	437	495
detectors	18	140	331	761	661
vertices	53	235	133	221	491
categorical	64	33	457	386	768
3-column	23	215	185	446	782
rebuild	89	236	335	437	575
tech	13	263	26	732	50
came	56	261	298	559	587
saying	26	262	345	533	320
superset	78	3	488	309	687
signatures	50	18	421	505	53
bomb	66	163	120	204	476
select_dtypes	57	256	52	381	26
copy-pasting	68	71	227	366	744
lookback	44	8	491	469	789
__str__	11	265	426	126	450
color='lightseagreen	86	188	409	502	465
main()	11	265	426	491	196
xestime	62	258	400	0	667
sparseseries	87	141	244	342	198
gauge	29	282	491	634	990
adhoc	45	133	26	117	687
messageid	18	204	394	698	775
tempted	28	38	167	436	57
eliminated	68	260	440	596	675
lessons	93	173	26	761	775
busy	16	133	44	50	179
layout	53	298	471	221	172
winsorized	33	138	216	187	472
shuffling	83	58	45	208	581
headline	6	170	440	766	345
menu	25	231	144	160	983
output_file	49	185	161	545	92
user-agent	46	185	454	388	318
accelerate	45	3	488	417	687
theme	56	122	287	515	422
touched	56	122	298	559	308
rich	98	44	19	76	517
tzinfo	92	104	333	413	530
pandas\io\	21	24	367	445	666
x5	55	91	66	579	187
pd.multiindex.from_tuples	62	109	443	0	432
plate	82	270	133	14	542
4.5	51	201	448	173	333
set_xlim	7	188	116	10	314
df['name	67	255	79	68	282
honda	82	152	10	515	108
plt.imshow	71	188	27	700	667
2015-01-09	86	140	384	14	201
os.path.join	43	39	47	109	246
2015-01-05	73	90	445	305	304
adx	60	99	452	51	753
tips	50	276	374	412	93
2015-01-01	60	140	242	431	201
volatility	33	138	216	187	472
2013-06-01	86	81	242	431	201
datafile	49	190	454	6	918
region.quradate	71	228	206	122	916
nicely	53	298	19	76	846
??,	89	298	317	144	846
shape	87	258	203	748	973
patch	53	224	108	221	450
roman's	1	260	195	444	117
pandas.series	15	265	233	58	963
percentile	29	51	53	775	863
12125.0	51	201	448	173	144
pd.to_datetime(df['timestamp	67	36	79	68	366
atomic	53	3	488	42	687
respond	16	222	44	15	476
traverse	23	58	385	151	911
pyqtgraph	53	235	304	221	944
mandatory	6	234	264	766	927
disaster	48	133	488	309	687
fair	26	38	474	448	68
med	54	95	53	469	896
clarified	1	260	195	444	756
datelist	15	109	289	0	843
sensitivity	89	173	394	467	679
np.array	71	258	27	667	526
.id	67	255	79	68	282
unexpectedly	63	82	295	636	365
pads	6	129	128	766	778
radius	59	235	133	292	580
imho	28	38	230	309	57
pd.qcut	27	147	419	629	181
fail	63	262	413	533	365
1970-1-1	92	104	434	303	416
4.6	86	221	141	102	465
best	52	77	150	638	467
clarifies	16	260	60	232	476
reassignment	26	255	79	596	880
dataframe.hist()	59	224	180	304	944
df_addresses	90	237	443	245	432
`['b	15	208	272	564	311
`['a	73	17	391	427	311
lots	45	279	368	658	525
wikipedia	48	203	421	323	415
propagates	80	211	337	447	129
jianxun's	1	260	195	759	117
mvce	61	18	108	505	279
stamps	44	269	491	46	789
score	18	95	53	343	108
randomforestregressor	64	33	7	386	553
conceptual	26	260	60	714	55
subarray	54	287	384	698	998
newlines	91	170	83	784	56
glasgow	82	196	420	144	125
preserve	89	126	317	437	495
discipline	73	204	445	564	129
men	82	91	21	343	936
variable_1	91	297	337	784	129
extend	52	116	488	89	585
nature	26	133	230	714	55
rolled	66	211	298	108	145
25041	54	287	384	14	998
benchmarked	45	38	283	417	969
submodule	49	185	426	430	850
subs	73	251	409	58	963
wtf	19	163	469	204	476
accessed	23	265	426	614	174
downgrade	58	176	50	392	622
pandas.to_sql	46	243	190	218	642
.dta	49	190	454	6	918
pity	19	163	469	204	880
accident	1	260	60	466	756
-abhi	6	234	390	596	129
geocoder	49	185	275	39	850
triggers	63	205	413	687	365
df.combine_first	90	49	443	245	86
country	18	204	445	343	108
adapter	46	243	190	218	642
cup	82	16	84	713	936
edgar	43	39	47	109	246
%%r	63	44	487	160	983
today's	60	99	352	51	326
negative	80	129	74	131	778
109	86	81	123	724	465
planned	61	197	298	447	617
logic	52	131	486	89	691
data.py	21	24	367	134	994
naics.indnaics	54	25	340	14	987
login	18	173	199	549	453
argue	28	38	230	309	57
adapted	1	260	499	759	874
asked	1	260	440	444	23
index_col=false	43	74	478	182	488
30th	60	278	352	51	753
stk_list	67	228	466	122	948
ndarray	87	141	203	748	973
settingwithcopy	78	226	413	513	974
ates	90	117	443	267	432
row['xx	67	255	466	68	588
25%	29	95	21	345	255
user1827356	1	273	195	631	117
active	18	173	199	713	145
252	86	169	371	411	594
diff	11	136	52	223	105
250	3	212	107	319	633
251	82	91	340	14	936
256	3	212	371	411	783
iterable	79	251	315	111	963
255	71	65	340	700	987
fra	60	99	384	435	990
101	86	169	371	411	783
58	86	169	371	607	783
40000	3	212	107	319	633
holdings	13	29	271	435	294
fri	4	34	312	82	548
0.95	71	78	141	669	333
.	66	234	390	596	129
bothers	26	82	179	596	880
extraction	23	3	486	671	902
much	45	38	6	204	347
dont	66	234	128	661	888
104	51	5	91	130	161
tutorials	48	203	421	323	415
monotonic	89	145	317	360	575
rqdrecord	54	95	53	434	896
dynamically	52	58	390	89	982
32gb	94	61	231	84	234
.to_excel	0	119	356	550	519
dry	29	235	389	283	975
life	16	38	167	436	352
retrospect	19	163	469	458	230
spit	56	211	179	766	842
pd.set_printoptions	58	176	50	373	263
my_series	15	147	79	58	166
worker	94	127	369	368	773
na_rep=	43	39	316	157	955
snap	60	99	162	51	684
dave	19	91	120	289	184
pytz	25	156	184	382	563
doubts	48	279	287	62	415
worked	19	163	6	289	184
spin	94	200	451	39	609
datatable	49	185	454	6	349
df.searchid	71	80	334	722	948
1675	63	35	384	108	145
initial_value	79	65	297	675	34
employ	45	131	488	315	687
euclidean	33	138	450	247	999
kassies	19	273	195	631	184
float32	92	183	169	317	163
stat_table	46	243	190	218	100
pandas's	11	3	233	430	487
hard-coded	6	3	488	89	487
k	62	247	481	0	64
remembering	11	43	488	89	231
bin	29	269	419	629	669
played	56	122	320	350	313
data-structures	49	46	451	430	850
firelynx	19	273	195	631	184
toolkit	48	46	451	39	609
weirdness	26	82	110	315	365
player	18	16	84	343	913
australia	82	91	309	343	936
n_i	54	140	340	700	267
violin	59	235	471	304	944
throwing	63	262	413	533	365
multinomialnb	64	138	7	330	553
thingy	66	43	390	436	235
ing	57	256	52	381	26
emergency	5	66	438	471	658
weightspace	52	260	60	759	55
tslib.c	21	24	367	445	637
cumulative	33	152	53	469	368
backed	87	141	203	748	973
split	23	211	337	209	709
drop_duplicate()	80	129	483	766	675
european	13	210	112	93	349
templates	53	190	486	76	517
fairly	28	38	474	50	347
boiled	45	261	264	11	347
inadvertently	78	126	230	315	974
0.610	4	169	371	715	892
asi8	92	251	315	111	963
filenames	91	109	161	21	918
tune	64	33	457	386	65
subgroups	33	220	133	277	368
.drop	17	49	215	165	86
univariatespline	66	256	335	381	292
pd.read_table	43	39	47	109	488
thing3	55	237	324	650	133
thing1	55	91	409	650	133
centos	58	218	157	400	141
urlparse	49	185	213	430	850
academic	48	46	451	39	609
simulated	56	102	185	11	585
gzip	49	190	78	627	16
quantitative	64	33	216	187	472
-sc	19	273	195	631	460
massaging	23	236	335	381	292
maxima	29	270	133	292	999
opinions	16	133	230	15	55
bellow	68	71	227	95	909
dosomething	27	147	141	434	995
epochs	60	99	434	303	349
distribute	94	200	369	557	773
rotated	59	94	471	620	274
whatnot	45	58	486	671	581
contact_id	18	204	445	718	108
overridden	78	126	153	357	450
????	55	237	324	650	936
csv_1	73	76	171	761	542
csv_2	73	76	171	761	304
tilda	15	0	246	322	502
isodate	38	185	316	157	62
tilde	78	0	246	439	502
memoryview	15	258	169	632	166
apply()	11	136	233	760	105
succeeding	80	129	0	201	778
projection	59	270	70	195	571
hah	19	163	469	458	230
replace()	57	256	88	597	695
enters	63	127	295	123	377
ed's	1	260	195	759	117
thinking	26	163	345	438	434
dtype='datetime64	71	5	194	502	619
new_dict	62	109	334	0	64
ease	48	133	488	309	687
elaborated	19	163	469	458	230
had	56	122	179	559	967
emphasis	1	260	440	444	756
fortran	49	46	451	183	850
collections	48	270	275	21	906
easy	28	77	150	638	467
placeholders	6	76	337	770	129
has	6	234	179	74	129
jgene	73	17	445	427	108
column_name	62	25	272	379	919
pd.version.version	58	176	50	455	92
elevation	93	270	133	195	571
quirk	26	82	110	687	365
total_seconds	79	251	315	622	780
survival	64	138	216	187	472
online	48	203	421	323	415
posed	1	260	60	444	23
0.98631	51	66	238	471	658
currentdate	92	90	434	568	503
possibly	6	38	390	315	57
`df['signed_val	63	255	483	636	282
indicative	6	129	337	766	491
tvol_scale	67	255	79	68	890
2007-11-22	51	81	123	724	512
clustered	59	235	471	783	491
snacode	91	170	319	761	775
shadow	66	265	426	491	196
unique	18	204	445	698	775
12:30	86	81	242	724	512
massively	45	100	283	582	838
occurring	18	211	128	766	145
pandas.cut()	57	256	419	629	854
county	82	91	331	343	661
ceodbc	46	243	190	218	642
ctime	57	256	56	597	763
jsons	49	76	275	6	918
alice	54	196	309	427	125
remind	16	222	92	15	476
steps	56	211	486	62	585
time-series	44	269	491	634	789
multi-indices	89	279	224	454	151
sebastian	19	273	195	631	756
single-column	78	131	417	439	581
str.split()	57	256	56	21	569
beneficial	45	133	474	467	687
right	26	234	390	596	880
old	66	211	483	437	982
303	86	169	371	102	783
people	48	222	421	15	23
hdfstores	48	133	451	39	687
truncates	92	111	358	603	970
g_l	38	196	91	144	125
ols	64	138	216	187	472
rereading	61	18	108	448	279
animate	53	224	180	10	314
o.head()	71	25	334	722	948
most_liquid_contracts	60	140	384	51	753
np.inf	80	129	306	612	778
24h	60	99	491	46	990
for	52	234	390	596	129
bottom	53	211	471	77	924
fox	55	196	309	92	936
speed-up	45	100	283	417	935
subclass	78	265	411	791	450
creative	28	77	150	611	357
contributing	48	18	421	323	415
when	63	234	179	596	365
individuals	93	173	331	761	661
execute()	46	243	190	218	100
_configtest.exe	5	85	438	526	877
pattern	91	297	319	34	569
foo	73	17	409	427	311
freqs	71	25	340	0	667
defaultdict	62	109	56	21	906
substitutes	80	129	153	766	778
evidence_id	73	204	483	564	784
stefan	19	273	6	289	184
24-hour	44	99	491	46	990
infer_datetime_format=true	43	74	212	690	853
v.13	94	217	50	596	880
substituted	80	129	0	774	778
shifting	89	211	45	208	575
losing	23	126	45	208	495
sortlevel	89	145	317	360	575
pandas.crosstab	71	80	334	722	948
borked	26	234	60	596	880
non-neuter	54	287	384	698	998
projected	93	16	70	713	913
=d	90	117	443	267	432
req	3	212	371	388	318
.agg	17	30	249	161	776
dollars	18	173	26	713	294
numpy.std	33	138	53	469	999
o	45	247	479	253	287
pandas.tseries.index.datetimeindex	79	104	434	20	843
leverage	91	43	488	89	747
slightly	28	260	440	759	696
abbreviations	91	170	326	784	676
match	52	90	337	454	304
consulting	48	18	421	323	415
statements	52	112	347	62	691
facility	18	152	26	515	108
statsmodel	64	138	216	187	472
vlookup	11	144	399	248	151
som	52	279	337	447	606
sol	15	25	334	58	919
soo	19	163	6	204	184
thankful	50	276	374	412	93
picarro	3	282	491	634	990
raises	79	262	413	533	34
edit1	68	71	227	95	909
wrap	11	43	320	760	709
reducing	45	100	283	582	838
mbp	94	217	231	84	322
methods	78	3	488	62	450
unambiguous	78	265	230	714	452
surround	91	297	161	470	64
america	82	54	333	725	760
8[	92	293	194	20	875
dropna()	80	129	0	201	410
hexadecimal	91	170	83	784	56
altitude	33	270	70	195	990
constantly	45	58	264	342	911
one-time	45	100	264	342	838
avail	56	122	287	742	313
width	53	235	201	373	172
quote	91	170	83	497	56
copy-pasteable	37	71	353	115	508
gohlke's	25	156	184	376	289
uniqueness	89	279	337	360	775
step-by-step	16	116	436	759	476
resulted	56	262	179	559	365
overhead	45	100	244	327	838
on-line	48	18	421	323	415
launching	94	231	487	160	104
happy	16	222	167	15	668
.strftime	38	64	145	502	550
offer	48	3	488	309	849
understandably	26	262	128	438	880
concatenated	23	286	224	248	151
recommend	48	43	488	309	687
oneliner	52	116	150	438	781
non-nan	80	129	0	201	998
reliably	78	226	230	513	974
coef_	64	33	7	386	553
understandable	16	38	230	714	261
2186	92	293	473	356	300
reinventing	66	43	451	309	57
24hr	54	17	340	427	784
pandas.core.series.series	79	251	315	111	963
concatenates	23	286	224	248	151
where()	11	0	233	439	763
arrays	87	141	203	748	973
inside	11	265	426	491	196
devices	93	173	133	761	775
until	66	211	44	108	145
considered	6	234	440	766	129
mutliindex	89	236	335	360	575
nicest	52	77	150	438	467
tweepy	49	185	275	557	850
rerun	63	127	295	636	799
smashed	23	279	224	248	151
instantiating	11	265	426	491	450
set_value	78	226	411	270	139
arma	64	138	216	187	472
prev_time	54	221	141	14	995
occurances	18	152	73	515	990
feet	93	235	70	292	571
pricing	13	29	70	156	294
151	86	140	128	14	465
150	3	212	371	411	783
eventprofiler	53	46	180	39	846
adopt	52	208	272	89	292
155	3	169	371	607	783
154	21	24	367	445	161
157	86	169	367	445	161
ddof	33	138	130	132	896
homogenous	87	141	203	603	973
158	23	215	454	6	918
tournament	18	16	445	343	108
as-is	53	298	19	76	846
textbook	26	38	474	436	880
df1.id	73	286	400	568	207
''	38	42	306	90	35
notin	62	25	80	0	919
exist	6	234	483	596	764
'"	79	262	315	487	527
b=	55	30	324	650	925
=b	71	188	409	14	432
timezone	92	54	333	413	530
exhausted	63	127	244	582	911
key3	73	17	391	427	311
linearsvc	64	33	7	386	553
200mb	3	61	231	275	234
floor	54	178	141	369	692
id_col	90	17	400	0	64
wary	78	38	230	417	57
idx-1	71	25	272	407	139
actor	73	91	337	427	311
ourselves	66	71	227	115	937
flood	44	282	199	46	990
role	6	120	29	720	487
200ms	3	212	389	362	145
sub-setting	56	261	486	50	476
becuase	6	234	390	596	373
superfluous	17	49	335	381	972
roll	66	99	53	620	231
futurewarning	79	292	413	483	209
origin_zip	27	42	222	34	618
qpython	46	185	426	430	96
intend	52	279	128	89	320
ncols	7	258	472	700	435
models	64	33	216	187	472
15}	38	221	98	130	867
cpickle	49	185	78	430	850
substract	44	211	434	409	998
class	78	265	426	791	450
lastest	66	18	390	108	617
intent	26	38	60	714	55
pd.dataframe.from_records	90	109	443	0	432
'`	38	297	476	564	493
variable	6	215	185	491	768
.div	17	30	370	165	588
15m	3	212	491	362	692
125	86	169	371	607	783
date_parser=	57	74	235	690	853
pandas.hashtable.int64hashtable.get_item	21	24	367	445	637
column_names	62	109	400	0	919
reorganization	23	190	264	627	557
98	86	169	371	411	783
serialized	49	185	426	374	850
']	67	255	79	68	282
packets	93	282	199	634	990
berlin	51	54	333	725	760
pet	82	91	10	144	936
time	44	282	491	46	789
push	23	190	264	6	709
sniffer	49	229	112	430	519
nxn	87	141	450	681	325
187	86	169	371	607	161
serializes	49	190	454	6	918
osx	25	218	157	400	141
:/	21	231	177	388	612
newbie	16	133	167	511	831
:)	19	163	6	204	184
chain	78	226	230	513	974
whoever	16	222	92	466	23
resources	48	133	421	467	415
activated	94	127	295	541	799
test_df	15	208	174	0	843
index-column	93	76	337	761	775
16:30	86	81	242	431	399
drastically	45	100	283	467	838
5:10	71	25	334	722	948
16:37	51	81	123	724	512
90	86	169	371	411	783
93	86	169	371	607	783
activestate	46	176	213	376	617
reorder_levels	89	145	335	381	103
millisecond	44	269	434	303	530
uneven	44	269	87	65	789
ver	58	176	50	400	141
df2.id	73	90	400	427	207
unpack	87	141	203	748	973
stk_price	68	215	185	366	843
reverting	56	176	50	559	617
recurrence	52	3	488	309	687
veg	82	173	10	238	884
pd.datetimeindex	92	104	434	20	843
vec	15	90	400	0	608
connecting	46	200	190	562	392
df2.ix	71	80	334	722	948
oversight	19	163	469	458	230
yerr	7	224	54	10	435
1294444800000	51	85	123	22	464
retbins	57	136	419	629	854
pivottable	23	215	337	447	985
downloading	13	156	275	744	902
:d	19	163	120	289	184
low-quality-posts	21	24	367	49	257
:b	54	25	340	14	784
choice	6	234	488	309	57
:|	26	163	60	436	880
stays	6	137	179	766	842
val3	73	17	391	427	311
my_index	15	117	27	405	319
:p	19	163	63	448	484
minute	44	269	491	46	789
1700	3	212	107	319	633
probmatrix	62	25	400	0	919
07:00	86	81	242	724	512
.total_seconds()	67	36	466	502	614
solves	1	260	195	687	756
solver	64	138	216	187	472
1.10.1	58	245	403	701	141
:\	21	24	121	296	616
solved	19	260	195	687	756
settle	92	293	434	703	370
defaults	6	74	235	690	853
team	18	16	84	713	913
val2	73	17	391	427	108
loads	49	190	454	6	918
setup	37	71	227	11	909
succint	28	77	150	438	467
to_pydatetime	92	104	212	185	763
prevent	26	126	153	687	365
interactions	93	173	26	59	999
occurrence	18	152	73	698	775
0-th	54	287	384	698	784
sigh	26	163	469	458	880
log_lower	54	140	384	435	998
sign	91	297	83	131	56
securityid	18	190	264	627	606
chopping	93	137	384	362	145
uk	93	173	420	761	661
anaconda	25	218	184	649	289
incrementally	23	58	264	342	911
df.merge()	57	256	233	759	292
])``	71	80	334	310	338
axes	7	224	344	10	314
table-like	48	46	488	309	687
melt	89	236	335	381	103
current	68	211	390	447	129
remembered	19	163	469	458	230
lazily	45	58	385	151	911
bm	82	159	309	564	125
8736	93	282	491	634	990
`df['sum	67	255	79	68	282
falling	56	137	298	108	145
augmented	64	33	7	446	553
boost	45	100	283	467	838
file_path	43	39	47	285	488
performant	28	77	150	638	467
.pivot	17	236	335	165	103
method=	80	159	0	563	410
345	86	169	371	607	783
cross-validation	64	33	223	386	679
dropdown	53	200	454	557	377
0's	80	151	0	201	717
non-performant	45	58	244	342	911
concepts	48	133	421	199	415
understanding	26	116	60	714	55
shortened	68	71	227	78	909
splice	23	215	185	446	585
address	1	173	394	444	775
alone	66	234	390	596	292
along	23	211	390	447	585
arch	94	217	157	396	322
rolling_min	11	136	52	223	231
frame.index	78	176	27	83	160
])`)	71	25	334	722	948
day-of-year	18	152	53	469	368
day-of-week	44	152	185	515	985
accesing	63	262	275	6	377
brilliant	19	163	6	289	184
impacted	45	100	283	315	838
rolling_count	11	136	52	223	105
studied	56	122	298	559	587
df['date	67	36	79	785	366
commonly	48	3	488	309	687
example	68	71	227	11	909
filepath_or_buffer	21	24	367	445	412
accomplished	52	116	150	438	442
throughput	93	282	26	117	990
docstrings	61	18	108	367	53
bp	82	196	309	144	125
windowing	11	3	488	89	231
nowhere	56	122	287	50	365
`"	91	297	66	80	830
stock-info	13	29	271	156	294
tasks	48	46	451	671	609
love	50	276	167	204	668
confidentiality	68	71	227	366	807
555-9898	67	96	91	493	835
one-liner	28	77	436	759	467
`)	6	234	426	58	292
subfeatures	18	152	337	698	231
logical	78	0	246	439	502
ipr	73	286	391	427	304
ips	18	140	463	718	775
series.apply()	11	256	233	760	142
logically	6	0	246	42	166
fake	37	71	227	115	909
traversing	23	58	385	151	911
flagging	26	82	345	714	55
.flatten()	17	147	27	667	526
working	56	82	167	50	179
positive	80	129	74	131	502
predictions	64	138	216	187	472
tightly	78	223	412	439	243
30%	3	212	107	319	633
discretize	33	152	419	629	669
explicitly	6	126	390	89	292
value3	55	237	324	650	356
opposed	6	234	390	74	292
wondering	28	77	150	438	434
dmvianna	26	262	440	631	756
scope	11	265	426	491	196
value=	55	42	251	90	382
`['id	73	17	445	427	311
convert_to_r_dataframe	79	251	315	430	963
theoretical	16	260	60	714	55
loving	48	133	167	511	831
montreal	86	81	242	724	465
introducing	56	126	45	208	675
``	10	123	477	265	540
39	86	169	371	607	783
afford	3	61	231	362	234
apparent	26	82	110	714	55
subfeature2	54	90	340	698	941
validity	52	116	128	714	320
visual	25	156	184	376	291
terminates	63	127	295	636	799
everywhere	80	129	153	350	778
data.plot()	7	188	116	10	314
8min	86	196	199	144	135
series3	55	221	340	14	667
series.py	21	24	367	134	994
easiest	28	77	150	638	467
lowercase	91	297	319	784	569
plt.scatter	7	224	472	10	314
2.6.1	58	218	50	400	617
2.6.0	58	176	50	400	617
originally	56	234	179	559	967
pretend	37	71	227	115	909
valores	27	117	27	667	526
2.6.6	58	245	403	400	141
strain	91	170	316	784	345
descriptor	79	262	315	470	34
groupby()	11	136	52	223	105
vega	11	178	222	749	128
values	80	129	337	698	778
df.e	67	228	206	122	916
slowness	45	100	264	368	234
believed	26	82	153	315	967
caution	66	38	390	436	57
use-case	45	133	474	200	687
is_published	18	91	394	357	775
dataframe.reset_index	57	49	335	381	103
float64index	78	123	477	315	166
awesome	19	163	6	289	184
restaurants	93	76	133	761	542
multi-index	89	236	335	360	575
locks	94	61	231	368	234
incremental	44	269	280	46	789
hides	53	224	471	221	172
allowed	6	126	170	740	927
234	38	196	309	388	318
236	3	212	371	362	783
evidently	26	163	469	458	230
232	63	208	201	464	987
233	86	221	340	102	161
numpy.digitize	57	256	419	629	854
monitoring	93	282	295	634	145
winter	60	34	330	339	641
pd.get_dummies()	52	116	457	89	768
sql's	11	144	233	89	695
s3	49	185	454	744	707
dtype=int	71	117	27	667	526
divided	18	152	53	464	217
poking	56	122	320	110	313
-0600	86	81	123	724	512
s4	15	258	27	58	432
df1.reindex	90	49	443	245	432
type3	82	196	309	144	791
dotted	59	94	468	221	435
significant	45	100	283	467	838
optimal	28	77	150	638	467
orginal	23	279	185	447	585
parameter	57	74	235	690	853
divides	44	152	419	629	669
remap	89	126	13	21	292
protobuf	78	265	342	791	450
graphlab	52	144	233	287	850
")))`	38	237	324	157	62
spot	19	163	469	458	230
row2	73	17	391	427	311
applications	94	46	451	39	609
explored	48	122	287	110	313
yelp	93	190	185	6	918
improving	16	133	283	467	687
such	6	234	390	89	129
suck	28	170	112	178	345
c_col1	54	90	445	698	775
data	23	215	185	446	585
codes	93	76	319	661	542
stress	45	126	486	315	687
.png	98	119	19	729	931
natural	28	77	430	514	515
sectors	29	140	199	435	157
ss	92	64	325	586	915
sq	71	147	141	122	995
sp	13	29	271	568	188
sw	94	231	146	388	318
ordinarily	57	256	235	597	853
excelfile	0	119	356	580	730
searchsorted	57	256	52	563	763
subselection	73	236	185	447	784
sandbox	94	156	451	376	609
cannot	79	262	413	350	888
so	66	234	390	596	129
re-assign	15	109	483	437	483
sl	55	91	400	388	318
joblib	45	100	369	368	906
definitions	6	279	486	491	196
upvoting	1	222	92	15	23
pulled	13	215	275	6	902
-hayden	19	273	195	631	756
se	6	126	440	596	320
sd	33	95	53	469	896
pd.concat()	57	286	224	248	151
webpage	98	203	487	114	377
unacceptable	26	82	110	714	365
below-	68	215	185	6	918
years	60	99	326	51	753
ttk	25	231	213	545	369
structuring	45	190	264	606	902
computational	45	133	283	467	687
.all()	17	283	65	322	299
method='ffill	80	159	409	564	778
ttl	44	269	337	454	775
headings	73	170	337	447	345
0.7.1	58	218	50	400	141
tendency	44	232	491	46	990
s2	90	90	443	245	304
jid	18	152	199	305	990
derive	46	215	185	447	847
disconnect	66	211	384	108	145
thumb	45	133	230	309	687
cleanest	52	77	150	638	467
jim	82	196	309	167	125
troubles	56	82	110	50	179
methodology	45	100	7	759	838
decreases	29	100	389	582	838
.to_datetime()	92	104	434	303	349
jit	11	43	283	417	906
938	38	221	340	14	267
suspicion	26	82	110	687	880
frameb	90	238	443	245	432
decreased	3	100	107	362	838
931	86	221	242	102	465
930	86	221	242	102	465
937	43	39	134	157	246
skip_blank_lines	43	74	235	690	853
instantly	45	127	369	368	553
get_dummies()	64	33	457	381	768
.notebook_repr_html	38	68	201	373	955
chaining	78	226	230	513	974
thereby	6	279	389	117	585
mapper	46	144	457	760	768
matches	73	90	319	454	775
smarter	28	77	150	438	467
year1	90	117	443	267	432
0-indexed	91	170	358	131	345
records	18	212	337	718	775
exon	66	137	384	434	998
subscribers	54	287	340	14	129
arriving	66	234	128	661	320
sorted	89	145	317	184	575
servers	94	200	26	39	884
happenning	26	116	128	596	320
sourcedata	23	90	483	415	304
maintaining	23	126	45	208	495
matched	73	90	337	454	775
larkfield	18	173	394	713	775
full_code	73	17	391	427	311
frank	82	196	309	564	125
didn	52	122	287	350	313
revert	89	126	390	437	927
pandas.dataframe.to_csv()	49	185	454	690	519
win32	25	218	157	376	141
hhmm	92	210	434	303	349
python-pandas	25	156	213	376	291
outperform	45	100	283	417	838
instability	6	3	488	93	365
stackexchange	48	222	421	110	415
quarter	60	99	326	51	753
suffixes	90	286	214	619	806
square	87	192	20	681	494
retrieve	52	215	275	447	606
primarily	78	226	272	270	139
df.tail	71	117	72	165	86
revised	1	260	195	444	756
dropna	57	49	0	381	410
np.argsort()	11	145	298	83	231
entering	56	215	45	208	902
lgrank	54	16	318	82	594
#div	80	129	306	612	778
series.fillna	80	129	0	201	410
users\	21	24	121	163	666
predefined	23	279	337	89	768
canvas	53	224	180	10	517
container	78	265	203	791	2
rounding	92	183	358	131	970
squared	33	138	216	330	472
melt()	57	256	335	381	103
collisions	6	279	13	661	524
seriously	26	38	167	436	57
df.max()	17	147	370	632	181
ax.text	7	188	472	10	435
._collapse	11	258	27	632	667
internet	48	200	287	110	377
suggesting	26	260	345	596	434
formula	33	138	216	330	472
squares	33	138	216	330	472
ffisegydd	19	273	120	631	184
1989	4	34	318	82	594
relations	82	91	331	770	510
newtonrap	90	30	222	245	383
recalculating	54	58	385	151	911
dodgers	55	237	324	650	936
bookid	54	17	400	274	998
dask.dataframe	45	3	233	417	687
million	3	212	107	319	633
overheads	45	100	244	342	57
quite	26	38	474	436	880
|anaconda	58	245	403	340	176
complicated	28	77	474	616	68
besides	6	234	390	596	927
bumpy	87	258	203	667	973
game_id	18	204	384	698	108
byte	38	32	455	424	112
unnamed	80	146	219	771	0
.index	17	147	215	122	742
prefered	78	43	488	309	57
myframe	62	25	334	722	948
expand.grid()	28	144	488	183	687
setdefault	57	256	56	21	906
locations	93	270	133	292	775
dunno	26	234	60	458	230
pool.map	11	265	426	760	162
spam	82	91	421	386	936
programming	48	133	167	511	831
wrong	26	116	345	596	883
skiprows	43	74	478	182	801
initiate	66	58	385	151	911
df.month	67	36	79	502	614
separator	91	53	112	784	56
massive	45	100	264	342	347
get's	56	211	179	766	775
routes	93	173	26	713	179
relational	46	93	486	671	642
prefer	66	43	488	309	57
jumbled	66	298	390	52	846
intuition	26	133	283	467	55
subsm	7	188	435	10	435
saving	49	190	45	208	902
.sebastian	19	273	195	631	756
dictionary-like	78	265	426	791	963
clause	46	112	347	218	691
22	86	169	371	411	110
nested	23	76	385	21	498
reopen	1	222	92	146	23
computing	33	138	53	409	368
u3	29	287	133	698	998
spanish	91	113	83	784	56
vote	1	222	92	433	403
np.size	17	30	249	161	181
second-level	44	269	491	46	789
city	18	45	331	343	454
quality	93	173	26	117	157
thirdly	68	215	185	446	129
fmt	27	188	222	470	435
imshow	59	224	180	304	944
df.to_html	98	44	19	76	517
indicate	6	234	390	766	129
teacher	82	91	309	343	936
2	54	221	340	14	110
params	57	74	235	690	853
os.path	25	231	213	376	617
typing	66	43	487	108	842
sub-class	78	251	411	791	450
~400	3	212	107	362	633
bits	66	279	264	596	709
cite	68	71	227	323	807
slashes	91	297	316	145	56
one-column	15	236	335	58	973
proving	26	38	167	436	68
artifact	6	183	153	603	345
x.std()	27	57	466	565	588
padding	80	129	0	201	970
ridiculous	26	82	474	436	880
on=	90	286	214	619	206
representing	93	76	185	515	431
new_dataframe	90	109	443	0	312
s.index	90	155	443	165	432
:	68	215	179	95	744
impractical	45	38	474	342	68
setattr	78	256	488	430	850
summary	68	44	486	76	381
counters	93	282	26	46	712
resampled	44	269	491	756	789
future	61	260	167	15	476
pandas.to_datetime	92	104	212	185	745
param1	73	17	391	427	311
recieved	26	262	179	596	365
surprisingly	56	38	179	204	880
resamples	44	269	491	46	88
opponent	73	204	171	698	108
sequencematcher	11	95	233	760	231
10-12	3	212	107	362	633
f1.index	90	117	443	267	432
addressing	1	260	440	270	538
sa	82	91	309	144	936
timedate	92	210	434	303	864
san	18	195	384	654	821
nicer	28	77	150	638	467
10-15	3	127	295	362	234
pandas.tseries.offsets	44	99	228	756	684
visitor_id	55	91	324	650	776
argument	57	74	235	690	853
sad	16	163	469	50	476
woah	19	273	6	289	184
say	66	234	390	23	129
buried	1	260	60	444	23
lurking	61	18	108	288	279
sas	48	46	451	183	850
regards	1	116	440	444	756
borough	18	45	445	343	454
saw	56	163	179	559	967
lng	82	270	309	195	125
dbapi	46	243	190	218	100
ax2	7	188	344	601	706
ax3	7	188	344	601	706
ax1	7	188	344	601	706
cigarettes	82	91	199	144	594
unsuitable	78	133	230	714	55
aproach	50	116	415	412	849
acushner	1	273	195	631	184
downwards	80	129	0	201	491
aside	26	43	440	315	57
ax=	7	224	472	10	314
note	6	234	390	596	129
dataregression	71	262	334	533	34
maintain	89	126	486	437	495
take	66	211	390	447	709
destroy	45	100	244	342	838
#4	60	278	205	14	939
.days	92	36	434	622	780
funcion	11	58	385	760	231
towers	29	270	133	292	999
handing	45	43	264	315	902
altered	63	262	483	628	974
custombusinessday	44	99	228	756	684
opposite	52	0	246	763	502
buffer	79	65	315	3	34
knew	19	163	469	458	230
compress	3	190	78	627	822
nix	94	217	157	396	291
id=5	80	129	0	201	778
render	98	44	19	76	517
invoked	63	265	426	491	450
id=1	18	140	384	305	990
id=2	54	17	384	698	998
remarks	1	273	195	120	756
inserted	80	211	483	766	211
pages	53	173	394	323	377
axs	7	188	472	601	706
axp	91	297	66	579	187
introduced	61	197	493	392	342
re-ran	63	231	295	636	369
average	33	152	53	469	368
sortedness	78	43	230	315	581
sale	18	173	394	718	453
wing	63	231	213	160	983
managing	45	100	264	368	179
messier	28	38	474	436	68
df.shift	17	40	215	322	86
decimals	92	183	358	131	970
axe	71	188	472	14	435
timedeltas	92	104	434	622	416
30,000	3	212	107	319	633
salt	76	91	496	343	936
pystatsmodels	1	222	421	288	279
s.iloc	71	80	334	722	948
walking	93	58	10	50	179
df.index.isin	62	25	215	0	919
datetime	92	104	434	303	416
hopes	56	260	60	50	807
bright	53	235	304	221	629
countrycode	73	204	339	453	108
inconsistent	26	82	110	315	365
series.plot()	7	224	235	10	853
aggressive	28	38	474	315	57
imagined	28	77	150	759	467
to_timedelta	10	123	477	622	780
slot	18	152	199	435	990
slow	45	100	474	417	347
uninstalling	25	156	328	382	563
.254	51	201	219	715	165
mydata	73	198	409	568	304
%debug	98	44	487	505	983
file2	73	286	61	568	246
mydate	92	293	434	303	416
outside	66	265	385	491	196
enclose	91	223	20	497	893
considerable	45	100	283	417	347
fb	82	204	394	343	775
going	26	116	345	436	434
candidate_id	73	204	445	305	108
bindata	23	287	400	447	784
posted	1	260	440	444	756
1377565195000	51	201	219	715	165
df.min()	17	147	370	632	181
pandas.parser.cparsererror	43	181	423	475	34
explosion	63	100	244	342	380
windowed	87	258	266	330	667
occupation	44	152	199	515	990
assistant	46	200	196	39	642
0.16.0	58	176	493	392	622
zipfile	49	185	161	109	519
straightforwardly	28	38	474	436	292
clang	25	231	146	388	318
simplistic	28	38	474	616	57
get_loc	57	208	272	660	652
outputs	68	215	179	366	744
fig.add_subplot	7	188	472	601	706
ytd	44	152	53	469	368
np.int8	92	183	169	603	416
prime	52	279	26	117	85
data.index	71	25	334	722	867
yte	92	183	169	691	163
resource	48	203	421	323	415
mavericks	58	218	157	400	141
artist	18	45	394	343	454
=5	54	228	141	434	995
pandonic	28	77	150	190	467
monary	48	18	108	505	850
worried	26	100	345	467	434
pd.timegrouper	17	136	370	756	776
example.txt	43	39	112	109	246
worries	1	222	92	15	23
johne's	1	260	195	444	756
to_clipboard()	49	262	235	430	519
where	52	234	337	447	129
vision	16	38	167	448	880
1-10	18	278	80	14	783
df.pivot	57	49	335	381	103
concurrency	45	100	78	627	557
keyboard	91	170	83	108	345
10100.0000	51	66	238	471	658
regressor	64	33	7	386	553
)`]	17	80	27	505	128
tick	59	94	471	225	132
my_protein	71	25	334	722	948
anyways	19	163	469	204	184
__repr__	98	265	426	126	450
top-level	78	265	426	491	615
start_codon	67	255	79	434	282
timestep	33	138	491	292	789
.000000000	51	81	242	724	619
np.min	17	30	249	632	181
python34\lib\	21	24	121	163	666
maturity	55	278	409	765	400
0:10	71	25	334	722	683
jumped	16	163	469	458	230
sites	48	173	421	110	415
procedures	46	172	190	218	642
df.head	68	117	72	560	263
)``	10	123	477	265	540
percentiles	33	95	419	469	863
-90	71	221	340	700	995
affecting	26	82	45	687	365
uninstalled	25	156	184	382	563
verification	19	163	195	458	756
scoring	64	33	7	386	679
f.columns	71	117	334	267	432
algos	64	33	7	673	553
`df['new_col	67	255	79	68	282
vertical	59	94	471	620	944
logins	18	140	73	435	631
screen	98	44	19	76	842
points	59	235	133	292	571
gratefully	50	276	374	412	93
etiologic	82	152	331	717	491
spare	66	38	167	436	57
data.pyc	21	24	121	163	666
sep=r	43	53	478	593	488
spark	46	164	369	368	773
suppressed	63	82	110	687	365
upper_left_vert	86	221	219	715	200
=1	67	255	79	434	282
attributeerror	79	251	315	111	413
_y	73	286	214	619	806
reversing	89	298	317	77	846
many	52	279	368	658	525
flipped	96	145	317	570	744
personal	48	157	451	309	723
s	15	256	390	596	64
quickfix	94	127	295	39	773
pd.date_range	44	159	228	756	843
mosaic	59	224	180	304	944
)`)	17	117	27	700	338
expression	91	0	56	34	569
closed=	55	159	409	144	435
can't	26	122	287	350	888
allowance	29	129	384	201	998
yearly	44	152	326	46	753
minima	29	270	133	292	999
.value_counts()	17	147	370	68	776
rolling_	11	136	233	89	231
hurts	26	163	469	436	880
cross-section	89	208	335	360	538
u'food	51	5	91	735	372
pandas.io.sql.read_frame	46	185	190	218	519
rsparid	6	279	337	454	129
read_table	43	74	112	690	519
3000	3	212	107	319	633
cokey	15	208	384	698	998
mapquest	46	270	275	195	377
curr	54	90	133	14	304
date()	92	104	434	185	763
considers	6	210	153	766	129
caring	6	279	337	208	927
x.head	27	57	466	161	588
cities	18	45	394	343	661
all-nan	89	126	153	342	91
categorial	64	33	457	554	768
stretch	66	298	128	108	145
student_id	73	204	400	650	108
locally	94	217	213	557	369
needlessly	45	43	474	342	57
indexslice	57	256	272	270	26
cosine	33	95	450	247	999
combined	23	279	185	248	585
=2	54	17	141	434	995
covering	44	269	491	46	789
uncommented	49	170	112	347	345
compare-cumsum-groupby	91	289	56	34	569
wants	66	234	440	466	888
enable	53	44	486	89	927
index=index	90	117	443	267	432
gist	37	71	227	115	909
instantiated	79	265	426	791	963
chan	55	237	324	650	936
thousand	3	212	368	319	525
formed	23	215	185	446	902
0.8.1	58	176	493	392	622
0.8.0	58	197	493	392	622
300k	3	212	107	319	633
readings	93	282	199	634	990
multirow	6	126	390	315	487
observe	6	82	179	766	744
np.unique	17	30	27	667	181
hashtag	18	152	394	343	108
to_dict()	57	256	56	597	26
former	6	234	390	596	57
str.count	57	256	56	597	569
`results['newcol	67	255	79	68	282
structures	87	141	203	748	687
seasonal_decompose	79	262	233	58	963
invalidindexerror	79	65	111	533	505
1294012800000	51	85	123	22	464
colorbar	59	224	180	221	944
invoking	11	224	233	760	586
shall	66	234	128	661	888
squeezed	6	126	390	766	166
situation	26	38	110	714	55
shape_id	55	25	340	102	465
user01	4	34	312	82	594
graphed	59	235	471	221	172
charmap	38	32	455	424	625
var4	54	91	14	528	267
kwargs	7	142	222	760	618
blas	87	46	450	681	325
plt.subplots()	7	188	116	601	706
read_table()	49	74	112	690	519
concatenation	23	131	224	595	151
dubious	1	38	230	309	57
sql.py	21	24	367	134	994
blah	55	25	215	0	126
datapoints	44	269	491	23	789
[[[	71	221	91	130	867
fama	33	138	216	187	472
13.4	51	201	448	173	284
technology	26	38	474	436	880
__init__	57	265	426	491	196
13.1	58	176	50	75	141
binary	64	33	457	681	325
stockinfo	53	94	471	221	846
verified	56	234	179	559	802
sitename	73	204	445	453	108
hostname	18	173	394	718	377
df1.t	71	80	334	722	948
chained-indexing	78	226	230	513	974
sys.argv	71	162	47	109	246
margins=true	17	30	370	223	181
psuedocode	68	260	227	11	909
breakdown	18	173	394	713	415
visually	59	235	471	221	172
assigns	73	137	483	306	982
trivially	11	265	233	760	231
utf8	49	113	140	363	628
reverts	92	126	179	437	416
births	62	109	326	343	64
timepoint	29	140	199	292	990
`df['new	67	255	79	68	282
cheers	19	163	6	289	184
edges	59	235	304	562	392
wired	26	262	128	596	880
x.lower()	27	57	466	565	588
_is_	66	260	390	596	57
_data	79	251	315	111	413
periods=4	38	117	114	267	619
2013-04-04	46	215	185	447	349
01:00	86	81	242	431	512
tracking	56	133	486	50	179
undefined	6	126	413	740	166
60,000	3	212	107	319	633
afaict	26	38	488	83	166
customized	11	136	52	89	231
clobber	78	43	488	315	292
index=true	43	39	478	147	957
costs	45	100	244	342	838
)])`	27	30	27	161	667
950	86	221	371	102	465
df.index.levels	71	80	334	0	948
data.frames	52	144	488	183	850
dimension	87	141	203	748	973
persistently	56	198	298	368	902
216	18	76	133	761	822
summer	4	34	330	339	641
]```	71	80	334	130	867
nosql	46	190	275	627	642
211	86	81	242	724	465
being	6	234	390	766	129
randomforest	64	33	457	386	553
log2foldchange	82	5	91	144	125
rest	80	211	337	447	129
219	86	221	340	102	465
schools	93	173	331	761	661
invalid	79	65	413	487	584
summed	18	152	444	698	108
sort_values	57	145	317	83	26
weekly	44	99	491	46	789
occasional	6	210	153	789	349
pivot_table	57	136	52	381	105
mimicking	53	215	185	11	909
generator	11	256	385	21	162
bfill	80	129	0	201	410
pickling	45	100	323	368	557
d3.js	53	200	275	671	179
instrument	93	282	199	634	294
pow	11	251	233	111	963
0.054932	51	66	238	471	658
df4.index	90	238	443	245	206
(:	86	221	371	411	783
(8	38	117	98	267	877
11544	86	169	473	356	300
how='max	44	159	409	756	157
around	56	122	320	436	313
(=	29	211	389	162	924
res2	92	54	333	413	530
rejoin	66	211	337	347	345
res1	92	54	333	413	530
sums	33	152	53	469	368
df_list	90	109	443	0	162
pos	73	17	400	427	570
dark	16	133	167	436	476
((	71	228	206	267	338
traffic	93	282	70	634	578
darn	19	163	469	204	230
pandas.read_clipboard()	49	234	454	557	369
libs	48	46	451	376	609
delimiting	6	170	83	766	345
mydict	62	109	161	0	64
vague	1	222	60	714	68
dare	66	163	167	204	476
df.stack	57	49	335	165	26
symbols_list	62	109	400	0	64
intel	94	218	157	84	322
stranger	63	262	413	533	365
pd.excelfile	0	119	356	580	730
hotel	82	91	309	713	936
pd.hdfstore	10	190	78	627	557
inexplicably	63	82	179	596	365
preference	66	157	230	309	723
discarded	80	211	483	342	675
data.info()`	68	71	227	455	508
fractile	29	140	384	464	491
colon	91	254	83	784	56
revision	1	260	394	444	756
stationary	44	282	491	46	789
65	86	169	371	411	783
satisfactory	1	82	92	444	23
;p	51	88	448	545	471
couldn't	56	122	287	350	313
noting	78	126	488	315	57
next_each	67	147	306	90	382
conditional	52	131	246	89	985
to_numeric	79	251	169	185	963
pickled	10	265	78	627	557
presentation	88	133	486	104	487
left_index	57	286	214	619	806
pandas.concat()	57	256	224	248	151
;d	38	144	120	529	471
diving	48	203	298	50	179
pickles	45	190	78	423	557
thinks	26	210	110	714	349
returnsdf	62	25	80	568	919
tavg	54	293	473	356	300
authenticate	94	200	213	39	773
there'll	28	77	150	438	487
noob	16	222	167	511	831
totd	19	163	469	458	230
levenstein	33	133	319	247	999
make.py	49	185	213	557	519
ddt	71	80	334	130	867
favourite	98	46	213	557	369
df['time	67	36	79	785	366
exit	63	127	295	636	799
shoudn't	66	234	120	596	320
ddl	46	243	190	218	642
semantically	28	260	224	759	696
df.c	67	228	206	122	916
infile	46	185	454	744	702
user_time	60	99	352	51	753
refer	6	234	440	447	385
unsuccessfully	56	122	287	350	313
destroys	89	126	153	208	495
biased	33	138	53	469	896
accessing	23	43	45	208	902
timeout	63	127	295	636	799
power	45	133	70	117	687
questionid	73	204	445	427	108
;;	51	201	448	173	471
retains	6	126	153	257	495
debug	63	231	295	557	799
toyota	82	152	10	515	108
ratios	33	86	53	117	491
__name__	79	112	347	491	740
;)	1	222	92	15	476
50+	93	190	185	761	542
acc	55	237	324	650	64
nanmean	79	251	315	111	963
origins	18	279	337	447	129
package	25	46	451	376	609
interfering	63	127	213	557	369
industry	18	152	445	713	108
10.6.8	58	218	157	400	141
favorite	48	260	16	444	415
value.values	38	109	400	0	64
non-missing	80	95	0	201	368
neighbor	33	138	53	563	999
act	11	131	335	360	292
cater	78	3	488	315	927
luck	56	122	287	742	313
skew	33	95	53	469	896
shapely	48	270	451	195	609
flawed	56	98	110	50	55
hashability	26	133	230	714	55
image	53	44	19	76	931
idxmax()	57	136	52	223	105
long()	79	65	297	675	584
240	86	169	371	411	594
apologize	16	222	60	511	74
tz_convert	92	54	333	413	530
accumulated	29	152	53	435	368
conceptually	26	38	60	448	880
technically	6	234	390	596	166
meteorological	93	282	70	634	571
replacements	52	131	361	611	357
fill	80	129	0	201	410
how's	26	116	60	714	320
her	18	173	394	466	109
multiindex.from_product	57	123	477	83	26
hex	91	113	117	558	748
hey	19	273	6	289	184
today_date	71	293	334	612	948
emacs	98	44	487	160	983
.median()	67	147	370	68	386
scipy	64	46	450	376	609
read_fwf	49	74	112	690	808
slopes	33	189	53	330	491
heh	26	163	469	436	880
punctuation	91	170	319	347	693
followers_df	68	286	227	366	199
typecasting	92	131	169	315	416
ago	56	99	44	559	587
recommends	48	260	440	323	415
0.9999	67	147	79	68	526
complete	37	71	227	115	909
verbatim	68	234	161	596	64
child's	53	270	454	195	918
np.around	71	221	27	632	500
cloned	25	156	184	338	531
beginners	16	222	421	15	831
506	86	293	473	356	300
land	66	43	167	309	179
survived	55	91	309	144	125
`df['column	67	255	79	68	282
technologies	48	46	451	62	609
utf-16	49	113	140	363	628
with	56	234	390	447	129
pandas.core.frame.dataframe	79	251	315	111	963
buying	18	152	199	435	990
they're	6	234	390	661	373
october	60	34	352	82	753
392	73	262	409	564	744
set_1	15	31	319	21	498
set_2	15	31	319	21	498
robustness	19	133	6	204	184
repr	98	44	201	455	92
nearest	44	269	358	563	970
390	21	24	367	388	318
impute	80	129	0	201	778
dirty	28	77	436	616	467
stockid	18	140	384	698	129
13-7-2015	51	66	123	471	658
sub-table	52	58	264	117	585
trips	18	282	199	573	990
nlargest	57	256	52	83	26
darker	59	235	304	221	629
detailed	1	18	421	217	415
engine	46	243	190	218	100
ac	55	91	309	427	936
ab	55	91	309	427	936
ohh	19	163	469	458	230
ad	18	173	394	713	108
migrate	46	200	264	39	773
ah	19	163	469	458	230
accents	49	113	140	363	628
date_index	44	159	228	756	843
df.to_csv()	49	39	112	109	519
al	52	279	337	447	129
an	6	234	390	596	129
timestart	54	90	189	305	304
wildly	45	61	244	368	234
as	6	234	390	596	129
ar	64	33	216	187	472
associating	23	76	185	446	373
df.index.freq	57	256	488	756	57
follow-up	1	260	195	444	756
formulation	1	260	60	444	55
ay	27	178	481	161	267
ax	7	188	344	601	706
wakari	98	44	487	160	983
logisticregression	64	33	457	386	553
googl	13	29	271	156	294
tradeoff	45	100	283	345	858
collector	63	127	143	492	773
novice	16	133	167	511	831
values()	87	76	203	21	373
introspection	48	43	426	430	850
tight	53	43	167	309	687
2001	60	34	318	82	594
unfiltered	68	234	483	366	483
1440	92	140	434	303	784
x.date()	27	57	466	565	588
a_	87	141	203	748	973
2007	4	34	318	82	727
df.to_html()	98	44	19	76	517
isins	73	90	337	761	304
dfs.append	90	109	161	109	162
standardize	52	279	53	469	585
groubpy	23	236	45	447	585
vocabulary	64	33	457	548	553
autoincrement	89	236	483	437	982
a*	54	178	481	700	667
ggplot	53	224	180	304	944
qstk	94	263	157	376	609
andrew	82	273	120	167	756
0:20	71	25	272	407	704
a0	73	17	391	427	686
a3	73	17	391	427	686
a2	73	17	391	427	686
row_index	62	132	272	407	139
a4	73	17	391	427	686
k-fold	64	33	223	386	679
rpy2	61	144	451	183	850
a=	27	258	409	667	925
2008	4	34	318	82	594
factorplot	7	224	180	304	592
whitespace	91	170	83	784	56
tricky	28	38	474	436	68
2009	4	34	318	82	727
itertools.chain	23	256	56	21	151
partitioned	52	58	264	368	585
neuter	55	287	400	698	998
tricks	48	116	167	62	487
fill_value	57	129	0	201	410
mask	15	0	246	439	502
having	56	82	45	208	179
`df.groupby('group	17	30	370	161	776
mimic	28	144	488	183	517
6s	54	140	337	454	775
mass	33	235	70	515	491
parallelism	45	100	369	368	773
configure	98	44	487	557	983
quantify	45	3	78	627	557
original	68	215	483	437	982
dataarray	87	141	203	748	973
axles	18	204	445	698	108
splicing	52	82	110	438	880
externally	11	43	488	89	292
sci	64	33	7	386	358
consider	66	260	390	309	756
dict()	89	236	339	360	575
mnp	49	144	213	183	850
sms	29	140	384	292	129
beware	78	126	488	315	166
parallelizing	45	100	283	417	347
code	68	71	227	11	909
attrs	43	39	134	690	246
on-the-fly	23	3	488	89	292
stock's	13	29	271	156	294
reasoning	26	116	60	714	55
causes	63	82	179	687	365
improperly	63	298	390	596	846
particles	93	270	70	195	635
cvxopt	87	141	450	681	325
careful	78	226	230	315	57
caveats	48	18	372	323	632
%y%m%d	38	64	145	586	550
tx	19	163	469	204	230
ty	19	273	6	289	184
tv	82	140	340	515	491
__eq__	11	265	411	791	450
np.diag	71	80	27	700	667
prettytable	49	185	454	430	519
tr	91	297	316	784	56
ts	15	147	443	688	843
tp	54	178	400	568	267
pylab=inline	98	44	487	337	983
to	52	234	390	89	606
tail	11	136	52	223	26
tm	55	237	324	69	947
tk	98	200	451	39	609
df.drop_duplicates	17	49	443	165	86
ti	3	212	141	636	799
tf	90	286	443	245	304
shows	68	137	179	74	842
td	91	297	19	76	517
te	90	286	409	245	744
tb	3	212	107	319	633
tc	82	140	120	305	125
np.roll	15	147	27	632	763
2013-01-31	60	34	352	51	753
returned	15	215	179	766	744
puzzled	26	82	345	714	434
rc	61	18	201	83	435
1,500	86	169	371	102	465
plural	91	76	319	454	775
.sort_index()	90	238	443	245	432
puzzles	26	82	110	596	880
50m	45	58	264	151	911
list-of-dicts	45	43	474	342	57
interpreting	6	210	153	766	905
.get	17	42	27	90	655
existing	23	211	483	447	982
condition	15	0	246	763	502
tax_id	38	183	169	603	784
`	57	256	233	58	292
.values	67	147	27	667	526
1.7.0	58	176	50	400	845
tab-separated	49	190	112	6	918
accompanying	53	224	180	76	517
t4	90	17	340	245	125
join='inner	90	238	443	245	206
t2	73	17	1	60	878
joined	73	286	224	248	304
t0	92	104	434	303	843
ax.xaxis.set_major_locator	7	188	472	10	314
large	3	100	107	319	347
scrapping	23	190	275	6	902
sane	6	126	390	89	927
filling	80	129	0	201	410
small	37	71	227	115	909
display.width	98	68	201	373	263
pseudo-code	68	71	227	11	115
chrome	98	44	487	114	983
abbreviated	68	71	227	366	909
quicker	28	77	150	638	467
antibiotic	18	173	331	761	661
df.iteritems()	62	256	27	58	162
featureunion	87	141	457	681	553
191	68	211	128	766	345
190	3	212	371	607	783
past	56	122	287	702	313
pull-request	61	18	108	288	279
pass	57	265	235	760	292
recalculate	54	152	53	469	368
investment	33	29	70	775	294
otoh	45	43	488	309	687
startdate	73	90	189	305	843
position-based	78	226	272	270	704
xor	11	131	417	439	813
clock	80	140	491	46	378
min_periods	29	284	0	373	181
favor	78	43	488	83	57
section	48	18	278	323	53
tools.py	21	24	367	163	666
np.sum	17	30	249	161	181
reshape2	11	144	233	183	850
clf.predict	71	258	334	667	667
.assign	27	57	222	161	588
destroyed	91	170	83	784	345
tslib	21	231	213	545	369
~300	3	212	107	319	633
method	57	256	233	597	26
contrast	6	208	390	360	768
plt.acorr	11	138	233	18	231
full	68	71	227	366	909
cubehelix	53	224	180	221	435
installations	25	156	184	665	289
api.log	93	76	454	761	542
hours	44	99	491	46	692
exasolution	46	185	451	430	850
fips	73	204	445	564	311
file1.txt	38	237	316	425	678
np.array_split	71	147	27	293	948
round-trip	23	236	335	437	292
ascending	89	145	317	184	575
legend	59	224	304	221	944
gc.collect()	63	127	244	590	799
245	86	85	438	102	465
df.groupby('a	67	30	370	161	776
sender	18	76	445	761	542
reshaped	87	76	185	446	585
5.5	86	201	448	173	107
dateformatter	7	94	180	185	274
some_function	27	30	222	161	128
sitecustomize.py	21	24	121	163	666
to_string	98	68	201	690	519
chunk-by-chunk	10	190	264	627	557
countif	33	144	53	469	368
45129-09-15	51	81	123	724	512
action	18	204	394	718	699
would've	26	163	60	458	967
weirder	26	82	390	315	365
get_dummies	57	33	457	381	768
corrects	80	126	153	437	675
day's	60	99	491	46	753
via	23	234	275	89	292
shorthand	11	3	233	58	292
verbose	28	77	150	616	249
acheive	52	77	150	438	467
5.6	51	201	448	173	471
list-like	79	65	169	675	163
to_records	57	256	235	58	963
vim	98	113	140	363	628
tokenized	52	76	319	446	585
np.logical_or	27	147	27	161	181
unpredictable	78	226	272	270	139
viz	23	215	185	447	985
pulls	13	137	275	6	709
gosh	19	163	469	458	230
coercion	78	183	169	603	163
3.2778	51	66	238	715	200
select	52	211	246	447	606
intensive	45	100	474	417	347
executable	25	218	332	160	291
non-monotonic	89	236	111	360	575
grouby	11	136	52	223	105
dtype=int64	71	221	334	130	867
objectives	1	260	60	444	320
0.17.0	58	176	493	392	622
teamid	73	204	445	427	108
automate	52	200	486	671	179
6	86	221	371	411	110
df.idxmax	17	30	222	161	86
#3	82	278	205	14	478
pandas-esque	28	77	150	438	467
more	28	38	150	438	57
octal	91	113	316	363	56
door	51	66	438	471	658
end_date	60	90	189	263	843
pandaic	28	77	150	438	467
company	18	173	394	713	453
corrected	19	163	60	458	861
emission	33	282	70	681	635
quarterly	44	99	326	46	753
logging	46	127	486	108	773
in_progress	4	34	318	82	714
df.columns.name	73	49	306	58	64
exposing	48	265	426	204	450
uint64	10	183	169	317	90
keeping	23	211	45	208	495
endpoint	53	270	199	292	377
17:06	86	81	242	724	465
17:04	86	221	371	102	465
phillip	19	273	195	631	184
np.where()	57	0	246	597	763
yaxis	59	94	471	620	435
installing	25	156	184	382	563
postings	56	122	287	50	313
autocomplete	98	217	487	160	983
4:00	86	81	242	431	201
person1	82	91	309	14	936
sent	46	200	275	6	377
learn	48	133	167	50	831
knocked	56	261	227	52	807
converts	92	137	169	74	709
agentid	73	17	476	564	311
pick	66	211	337	347	606
beautiful	19	77	6	204	184
prompt	98	231	487	160	983
impacts	45	100	264	467	838
stated	1	260	440	444	756
latin-1	91	113	140	363	628
neglected	19	163	469	458	967
accept	1	222	92	225	132
states	6	234	440	766	129
unbiased	33	138	53	330	896
#0	71	221	340	14	161
sense	26	234	390	714	55
11:01	4	81	242	724	512
col_3	73	90	445	698	998
col_1	73	90	400	427	998
1.csv	43	162	47	109	246
axis	59	94	471	620	274
huge	45	100	264	342	347
respective	18	152	337	447	129
xxxx	38	293	315	111	955
df.index.weekday	67	36	79	502	614
equities	13	29	271	156	727
hugo	26	234	390	596	880
multi_df.index	62	80	334	618	868
earnings	18	173	331	713	661
newaxis	71	25	334	722	948
fontsize	59	224	304	221	172
strftime()	92	104	212	185	745
isn	52	210	128	89	349
upto	60	99	352	51	753
intended	26	234	60	714	166
`'foo	43	297	476	564	493
col_c	55	237	324	564	62
col_a	73	90	400	427	311
variant	52	211	56	759	569
mapping	23	76	13	770	524
to_excel	0	119	356	550	519
pd.get_dummies	64	33	457	667	768
col_x	73	287	400	568	842
plane	59	235	70	620	571
conveniences	78	133	230	62	687
filename.csv	43	39	47	157	246
periodindex	44	104	228	756	684
bioinformatics	93	190	486	671	179
subdirectory	94	231	177	557	369
participant	18	173	199	761	661
result1	90	17	443	245	432
my_data	62	109	161	109	246
gaussian	33	138	216	136	578
transposed	23	236	335	148	575
refuse	78	226	230	315	973
github	61	18	108	288	279
dataframe.replace	57	256	56	597	695
bars.index	7	273	180	10	435
register	66	265	426	89	450
.isin()	57	256	233	597	468
master_df	89	198	335	437	304
django	46	200	275	39	642
rotation=90	7	188	472	10	435
explorer	98	44	487	160	983
fundamental	26	82	230	714	55
10:32	86	81	242	431	201
trellis	59	224	180	304	944
geographic	93	270	133	195	999
replied	19	222	92	15	23
checkbox	59	235	471	221	944
clarifications	1	222	421	15	23
blosc	10	123	78	627	891
`numpy`'s	11	256	233	597	763
2005	60	34	318	82	641
origin_lon	67	178	79	470	340
trade	13	29	271	156	294
i386	94	217	157	396	322
paper	48	270	486	195	392
499	71	221	334	102	948
replies	19	222	6	289	184
installer	25	156	184	382	289
unique_df	62	109	80	0	897
its	6	234	390	596	129
myarr	62	25	80	202	919
1.9.1	58	245	403	400	141
rapidly	45	100	389	681	578
wat	94	200	213	39	606
1.000000	82	196	313	144	242
symptoms	18	173	394	23	542
wrt	52	279	53	469	231
ruining	26	116	128	50	880
bypass	52	116	118	687	880
nifty	28	77	150	204	487
lies	26	260	110	687	55
8:31	86	140	242	431	201
read-in	49	210	112	507	349
colleague	16	260	195	559	587
skipped	80	211	153	766	675
mapinfo	23	58	483	568	911
entire	23	58	264	151	911
propose	52	116	128	759	320
biomed	94	218	144	160	291
itertools.islice	57	256	385	151	26
st	82	196	309	144	125
speculate	37	71	227	115	807
[((	71	228	206	298	916
everytime	63	58	385	151	911
ast.literal_eval	62	256	56	470	8
always	66	234	390	596	57
troubleshoot	37	71	353	115	807
loosely	1	260	60	444	756
instruct	52	3	275	89	606
labeling	59	94	471	620	274
max_diff	67	5	91	68	282
courses	93	58	26	761	542
uploads	94	200	454	368	773
found	56	122	287	110	313
week	60	99	352	51	753
.ravel()	17	147	215	667	526
initialised	80	129	306	766	166
179	51	85	123	130	43
np.float	67	183	305	667	526
contiguous	45	100	244	342	557
is_null	55	97	272	407	704
reduce	45	100	264	582	838
to_html	98	44	201	76	517
numeric	6	183	169	603	163
slowdown	45	100	283	345	838
finish	56	127	295	108	145
measurement	93	282	70	634	990
operation	11	131	417	439	581
really	26	38	390	436	880
20.0	51	201	448	173	284
pullback	29	95	53	435	157
missed	19	163	469	458	230
ftw	71	221	334	102	948
sp2	73	17	306	427	311
research	48	122	287	50	415
node2	87	76	481	21	667
misses	6	260	153	315	675
race	93	173	394	713	108
denoted	18	76	171	761	775
offline	66	127	199	108	145
nest	28	43	56	21	709
densities	59	235	471	515	491
bye	82	196	120	167	184
col_list	62	25	334	407	919
risen	60	99	384	435	80
localization	56	190	298	50	182
positional	78	208	54	270	576
jezrael	19	163	6	289	184
qualify	52	0	246	763	502
pitfalls	56	43	110	399	365
imaging	28	234	390	315	487
imagine	52	38	474	438	880
rises	79	262	413	533	34
custid	18	152	394	713	108
definition	6	265	426	491	997
pairs	18	76	133	761	999
retained	80	126	153	437	483
pandas-y	28	77	150	438	467
df.dtypes	92	293	305	455	856
wide_to_long	11	256	488	505	57
positioning	59	94	471	620	435
field3	54	293	473	356	784
w	38	178	481	388	318
yticks	7	188	472	10	435
contingency	53	298	390	89	846
sidenote	68	234	390	596	909
hyry's	1	260	195	759	117
5pm	60	99	352	51	753
df_	15	25	443	0	919
pd.panel	90	117	409	267	432
slipped	16	163	469	458	230
thereafter	63	211	454	557	675
number	18	152	73	464	775
aa-zz	71	42	251	90	689
cointegration	64	46	486	671	472
firsts	66	163	469	759	880
stage	66	282	486	50	179
differ	6	279	337	464	927
heads	19	261	44	15	476
dfx	15	25	334	0	919
.first_valid_index()	71	80	334	722	948
introduction	48	18	451	323	415
dft	54	178	340	502	588
unsafe	78	226	413	315	57
moderately	3	175	107	341	347
dfp	54	25	141	14	995
dfs	23	286	224	248	151
dfm	73	286	214	568	304
!...	19	163	6	289	184
dfn	90	238	443	245	206
pastable	37	71	353	115	508
calculations	52	131	486	671	581
85345	54	221	340	14	987
master	61	197	493	392	622
dfg	62	109	285	0	64
dff	15	147	400	0	919
dfa	73	90	400	568	304
a.reset_index()	90	255	443	68	432
dfc	15	25	400	568	894
dfb	73	90	400	568	304
implements	6	3	488	74	687
paul's	52	260	150	759	117
elaboration	1	260	283	117	807
relationship	93	279	13	770	524
grouped.groups	11	256	52	151	581
immediate	1	22	92	444	23
appreciation	1	222	92	15	23
replicates	93	282	331	459	896
word	91	76	319	784	775
consult	1	18	42	323	415
focusing	1	133	60	15	434
v0.14	58	176	50	400	617
v0.15	61	176	50	392	617
v0.12	61	176	50	392	617
patches	59	224	304	221	314
dataframe.replace()	57	256	56	597	569
df=	62	109	161	0	919
determines	6	126	337	74	927
head2	55	237	202	579	936
head1	55	91	202	579	936
df5	90	238	443	245	206
transposes	87	141	203	748	973
numpy.loadtxt	49	74	235	690	519
unstacked	89	236	471	360	575
df1	73	90	400	568	304
aah	19	163	469	458	230
col_start	62	17	400	0	919
flavor_score	33	95	53	469	896
determined	6	126	337	766	129
0.99	67	255	79	68	282
maintainability	48	133	488	309	687
plot()	7	224	116	10	314
df2.loc	71	80	334	407	948
0.015	86	81	242	724	201
datelike	92	104	434	603	416
.tail	17	147	72	161	588
abs	54	147	141	129	995
beforehand	6	126	390	661	228
val_2	33	95	53	469	896
replicated	56	260	227	444	807
pepcn1	54	95	53	698	896
timeframe	44	29	491	46	789
df.index.to_series()	67	57	466	161	588
sell	18	29	271	435	241
2-column	23	215	185	446	585
generalizes	52	3	311	759	467
reassigning	15	49	45	208	675
py2exe	25	156	332	376	291
spaghetti	59	235	471	515	944
self	27	142	222	445	618
107.000	51	66	238	471	658
self.df.iloc	71	221	334	102	948
reliance	11	43	488	309	55
also	66	234	390	596	292
recognizing	6	210	153	766	349
positionally	15	208	272	360	538
generalized	28	3	488	309	687
as_matrix()	15	256	27	58	763
sharpe	13	29	271	156	294
demean	52	116	128	469	368
transparent	59	235	304	221	172
json.loads	43	185	161	470	8
play	66	298	320	52	807
perfomance	45	100	283	582	838
index	89	236	335	360	575
yhat	94	200	216	39	566
coursera	48	263	451	39	609
15:00	86	81	242	431	399
pd.notnull()	80	129	306	612	778
ax.annotate	27	178	461	700	667
df.index.apply	27	57	466	502	588
wedded	48	43	167	309	57
`df['col3	67	255	79	68	282
accepting	1	222	92	15	23
`df['col1	67	255	400	68	282
time-indexed	93	282	491	634	542
.argmax()	67	228	334	298	588
index.name	17	49	138	58	86
understands	6	210	203	603	389
exe	25	156	332	160	291
unequal	23	279	224	464	151
incase	66	234	128	108	320
sometimes	6	234	230	315	365
cover	52	279	488	769	927
]]]`	71	25	334	722	948
giving	68	82	179	533	744
exp	27	178	481	700	667
microsoft	46	200	275	39	642
_article	73	293	400	427	64
wording	1	222	60	714	23
ambiguities	78	226	230	513	974
select()	11	256	233	597	26
tz_localize	92	54	333	413	530
ugh	19	163	469	458	230
polygons	59	270	180	195	944
gold	82	173	10	569	184
xcode	25	156	184	382	563
sublist	62	287	400	21	498
nasdaq	13	29	271	156	294
session	63	127	295	108	145
file2.txt	38	262	316	425	678
102	86	169	371	607	783
stepwise	93	270	133	292	999
blender	25	156	157	376	289
impact	45	100	244	467	838
wraps	11	265	418	74	450
columnn	18	152	491	46	368
indexerror	79	65	413	533	573
brackets	91	192	20	497	494
group_indexes	15	25	246	407	502
writes	49	137	454	74	918
writer	0	119	356	550	730
columna	73	17	400	568	304
sample.csv	43	39	47	109	246
columnb	55	17	400	568	246
1.6.2	58	176	50	400	141
pandas.dataframe.describe()	53	44	233	76	517
1.6.1	58	176	50	400	845
df.map	27	57	466	161	588
knowledgeable	16	222	167	394	23
df.max	17	30	370	165	181
columns	23	279	337	447	129
?	52	116	128	596	320
]]]	71	80	334	130	867
dependent	6	138	133	292	927
lastname	73	17	391	427	125
banned	66	76	394	661	775
constituent	93	282	133	464	990
generalizable	28	77	150	759	467
they'd	66	234	390	661	888
remedy	52	116	128	714	927
np.percentile	17	30	387	632	181
style=	7	188	472	10	435
closely	99	260	421	714	404
logfile	49	185	185	6	918
split-apply-combine	48	18	397	323	53
swp	67	25	334	68	948
0:00	86	81	242	431	201
crs	78	262	413	491	38
id_y	73	286	214	619	806
keyword	57	74	235	690	853
key=	55	208	324	650	62
disregarding	80	129	0	201	778
bytes	49	113	78	275	234
coord	73	17	409	427	311
bird	73	91	309	427	311
inbuilt	28	3	488	89	487
your's	1	260	474	759	57
rfe	64	33	7	386	657
.json	49	39	47	109	246
column4	55	297	400	427	64
update()	11	256	385	760	162
river	67	255	309	68	125
column1	73	17	400	427	784
]]`	71	25	334	407	948
column3	54	17	400	427	998
approaching	16	116	150	438	434
select_column	10	123	477	265	26
set	6	215	390	447	129
reindexes	89	236	335	360	575
ser	15	49	443	58	507
seq	62	109	80	0	64
sep	43	53	210	593	488
iteration	45	58	385	151	911
311	54	91	340	14	272
310	51	201	448	173	272
317	86	34	371	82	534
:-))	66	163	167	204	476
sex	82	204	331	343	108
see	68	234	390	596	756
non-linear	33	138	216	330	472
sec	3	212	107	362	692
migration	94	200	451	39	377
sea	82	235	26	144	125
gzipped	49	190	275	627	918
multi-indexed	23	236	335	360	985
splits	91	137	319	209	709
contour	59	224	180	304	944
analog	78	3	488	292	129
project	94	200	451	39	179
permuted	23	58	45	268	585
sql-style	89	286	224	619	151
movie	18	95	319	343	542
showed	68	234	179	366	744
currently	56	215	185	95	585
bigrams	91	76	319	761	542
guides	48	122	421	323	415
pickup	56	234	491	292	145
captured	93	282	337	634	174
respectively	54	279	340	14	129
slicers	78	226	272	270	538
.match	67	42	251	34	655
nope	26	163	469	458	230
gathered	56	126	153	766	365
warn_bad_lines	43	74	255	357	665
')))`	27	57	466	565	588
available	6	234	390	83	927
c-level	45	46	451	368	687
sparsely	23	76	337	761	431
heuristic	78	226	230	467	974
targeted	61	18	427	392	279
spacing	59	94	471	620	172
javascript	98	44	19	76	517
1050	71	221	340	14	783
1690784	54	293	473	356	300
synchronizing	44	279	224	89	292
.bash_profile	25	231	177	557	369
untouched	80	129	153	437	495
respondents	18	173	331	343	661
)')`	38	42	251	502	588
selectively	52	0	246	437	502
sum()	11	136	52	223	105
frozenset	62	265	400	21	64
interface	48	46	451	39	609
dividend	13	29	271	156	294
xlab	57	297	235	698	775
21:00	86	81	242	724	201
cryptic	63	82	413	533	68
improved	61	38	283	467	838
hyperlink	0	119	356	690	377
dict-like	78	265	426	791	450
barely	45	61	231	362	682
forward-looking	11	131	233	469	231
connection	46	243	190	218	100
improves	45	100	283	467	838
infos	48	279	486	62	415
acquisition	93	282	70	634	990
we've	56	234	298	364	937
long-term	45	282	491	117	789
tstop	54	140	340	14	998
author_id	18	173	394	761	542
whole	23	58	264	151	911
blaze	48	46	451	627	557
load	49	190	454	6	918
);	10	123	477	265	540
):	68	234	390	95	909
)=	27	178	466	405	338
octave	87	144	450	681	325
mini	94	58	264	368	773
loan	18	173	84	713	990
ubuntu	58	218	157	400	141
corresponds	18	287	445	698	431
community	50	222	92	15	831
coincidence	78	43	230	315	57
))	27	117	206	267	338
bject	92	293	305	317	163
pythonically	52	3	486	89	585
configured	94	200	77	373	369
consideration	33	33	486	292	260
23:00	86	81	242	431	201
precomputed	87	270	450	681	999
210018	18	152	53	343	368
210019	6	234	128	596	129
)'	38	117	466	405	338
list()	57	256	56	21	162
array_like	87	265	203	794	973
monthly	44	99	491	46	789
tempsheet	71	80	334	722	948
hitting	41	127	295	636	799
1294531200000	51	85	123	22	464
samplemeta	73	152	445	698	311
citations	18	152	384	13	453
reshapeerror	79	65	111	530	724
timesteps	33	95	133	292	491
firm	93	282	26	156	946
fire	56	261	99	117	773
`df['birth_year	67	255	79	68	282
what's	26	116	128	596	320
curv_typ	73	262	409	765	400
max()	11	15	52	223	105
spectrum	23	265	264	117	585
overloading	11	131	417	439	26
qtableview	53	215	185	446	585
races	18	173	394	761	990
data.merge	90	238	443	245	206
representative	37	71	353	115	508
systematic	28	38	167	309	687
receive	63	262	413	533	34
)`	27	117	27	267	338
despite	56	82	179	766	365
millis	92	104	434	303	416
.transpose()	39	117	443	165	432
tweaked	1	21	92	759	189
gender	82	91	331	343	108
handling	6	3	488	93	487
reinstalled	25	156	184	382	563
ctr	82	178	271	369	267
exponential	33	138	53	469	472
mlk	60	99	352	51	753
reliable	28	38	474	315	57
expanded	68	236	227	446	982
mln	3	212	107	362	633
budget	18	204	384	435	78
$date	55	237	324	22	62
forgetting	26	163	60	448	434
optimization	45	138	283	467	687
pressed	19	163	44	108	154
evaluating	23	58	385	481	902
leaning	48	133	167	583	179
np.mean	27	30	249	161	181
ami	19	273	195	631	184
interate	23	58	385	151	911
30	86	169	371	411	110
pd.read_clipboard()	98	71	353	670	508
hoping	28	77	150	438	434
vol	29	140	384	435	324
averaging	44	269	491	469	368
von	91	297	66	579	187
<=	67	228	206	122	916
binding	46	243	190	487	243
set_array	71	258	27	700	667
titanic	64	33	296	329	607
level1	73	17	391	427	311
psi	71	221	334	130	120
centennial	82	221	309	144	936
triple	52	76	337	447	129
beautifully	19	273	6	289	184
<-	71	42	161	90	904
level=	17	30	370	165	776
chase	16	82	110	436	476
df.as_matrix	71	117	27	667	667
funny	26	82	110	52	365
re-shape	28	77	436	616	467
np.asarray	27	117	27	667	526
choking	26	82	110	687	365
fetching	46	190	275	6	902
mint	94	218	157	396	322
right=false	29	221	141	700	435
shorten	28	77	436	438	467
x64	58	245	157	400	141
shorter	28	77	150	638	22
rules	52	126	246	62	927
rdf	68	185	161	446	918
virtually	78	131	230	315	581
foll	68	215	185	95	59
survey	93	173	394	718	453
full-screen	53	44	471	221	172
co-ordinates	54	25	340	14	267
failure	63	82	413	687	365
kind='bar	7	188	472	10	314
v0.13.0	61	176	493	392	617
unlabeled	23	215	185	446	982
comprehensive	48	18	421	367	415
indicies	10	123	477	454	575
algos.c	21	24	367	134	994
alert	55	262	324	740	377
viewing	70	44	19	76	841
unpickle	63	100	78	430	557
businesshour	61	18	228	323	684
necessity	23	58	45	342	585
stack	89	236	335	381	103
focal	18	173	394	118	453
euro	18	140	384	435	78
knn	64	33	7	386	553
.upper()	67	42	251	565	655
picky	26	163	469	458	434
timestamps	92	104	434	303	416
nattype	92	251	169	703	963
graphical	98	44	487	76	517
elem	62	67	134	565	153
picks	18	195	384	654	821
person	18	173	394	718	453
predetermined	93	279	133	292	129
per-column	80	126	0	201	778
pd.nat	67	255	306	612	282
concats	23	279	224	248	151
titled	73	204	185	343	108
responsible	53	126	486	221	172
json_normalize	49	185	56	58	519
abbreviation	18	287	128	491	196
tennis	93	173	394	713	913
mysql	46	243	190	218	642
3040	92	293	473	356	300
</s>	6	234	390	596	129
retrive	23	58	486	447	585
project2	67	255	79	68	282
`how='outer	57	286	214	619	806
readers	1	222	421	15	23
surprises	78	43	230	315	788
dataframe.to_html()	53	44	201	76	517
foo()	11	265	426	58	963
en_us.utf-8	38	68	316	545	92
dc	54	17	331	343	943
signals	13	29	271	156	294
eager	16	133	167	204	831
overthinking	26	38	474	448	434
location	93	270	133	292	606
relevance	52	211	337	447	129
input	68	71	227	366	909
csv_chunks	62	109	385	151	162
slave	94	200	369	39	773
reverted	58	176	298	559	617
surprised	26	38	474	448	434
sim0	18	95	53	343	108
1092	21	185	367	445	161
recompile	25	156	184	376	289
couple	56	122	368	658	525
a_y	73	17	391	427	311
a_x	73	17	391	427	311
tweaks	1	260	227	11	807
jake	82	91	120	167	936
str.contains()	57	0	56	597	695
private	78	265	426	491	450
corr_list	55	5	324	650	916
shading	59	224	180	221	944
a_l	62	80	80	0	948
structurally	93	76	185	761	59
x_order	57	224	235	10	853
projects	48	46	451	62	609
formal	48	133	451	309	884
75th	29	235	304	221	491
monkey-patch	28	3	488	89	487
sorting	89	145	317	184	575
pertinent	53	190	454	6	918
plot_date	57	251	315	10	963
__array__	78	265	426	430	963
bond.to_cash_flows()	68	215	179	366	744
df.sum()	17	30	370	165	86
`df1['a	73	90	400	427	311
facets	59	235	471	221	944
countryname	23	76	339	761	661
2008-04-08	51	81	123	724	512
-30	4	34	318	82	594
continue	61	165	108	465	593
yields	68	215	179	74	744
spyder	98	218	487	160	983
string-valued	92	183	169	603	416
summarise	23	215	185	446	585
1.4.3	58	245	403	701	141
1322	29	140	384	464	129
pertaining	48	46	287	62	415
clipping	53	200	298	557	377
velocities	93	282	70	446	585
erroring	63	82	413	533	365
spring	82	196	330	339	641
ch	71	221	340	130	120
b4	54	17	391	404	686
b5	54	17	391	427	686
where=	11	112	161	89	695
et	82	91	10	14	784
b0	82	196	391	427	430
b1	73	17	391	427	686
sight	19	163	469	204	476
1294358400000	51	85	123	22	464
curious	26	116	345	438	434
oddly	26	82	179	533	365
resolutions	44	269	491	46	789
virtualenv	25	156	184	382	563
reorder	89	236	335	360	575
measurements	44	282	491	634	789
\d	91	42	251	34	24
.iteritems()	62	80	80	0	64
--------------------	86	221	340	102	465
behave	78	131	230	258	166
rollback	79	251	315	218	684
newdate	18	204	189	305	108
bygroup	11	136	233	89	231
newdata	23	279	483	415	304
inclination	52	38	474	117	585
inserting	23	137	45	208	902
be	6	234	390	596	927
teradata	46	243	382	707	642
ba	38	196	309	564	125
bb	55	17	324	650	356
bc	82	91	309	144	936
rolling_max_dd	29	100	283	345	838
bo	71	147	409	722	948
agreement	33	133	26	93	687
bu	19	273	195	631	756
`df2['date	67	255	79	68	282
bq	44	99	265	713	145
br	82	196	309	246	936
bs	54	211	400	698	998
wget	46	200	213	39	377
relating	56	122	287	110	415
by	23	211	390	447	129
aswell	52	116	128	89	320
analysing	93	282	26	634	179
searchid	68	234	179	596	967
send_msg	67	255	79	68	282
certificate	63	262	213	425	34
anything	26	234	128	596	880
df['col	67	255	79	785	282
"])`	55	237	11	650	356
argsort	57	145	317	632	373
pre-process	49	170	83	347	345
unintentional	26	82	110	687	230
cmap	7	188	472	10	435
stdcst	71	80	334	130	867
unsorted	89	145	317	360	575
1gb	3	61	231	275	234
2-tuple	18	287	445	698	498
repair	66	234	83	557	365
12,000	3	212	107	319	633
garbage	63	127	143	492	974
`'numpy	79	251	315	111	413
into	23	215	185	6	709
recreate	37	71	353	115	508
integral	92	183	169	377	416
seamless	48	46	488	183	850
appropriate	6	234	390	89	927
non-vectorized	28	131	283	417	969
troubleshooting	56	82	110	50	179
df.iterrows	45	58	385	151	911
guideline	48	18	488	467	687
scipy.optimize	63	100	7	467	365
clustering	64	33	22	386	462
uncertainties	53	46	180	89	850
headers1	62	109	161	58	64
span	44	99	491	46	789
238.00	51	201	123	173	284
retrieving	23	190	275	6	902
spending	16	122	320	50	476
.idxmax	17	147	80	632	998
specifically	6	234	390	596	320
custom	11	3	233	89	231
occupy	3	61	231	275	234
downloadable	37	71	275	744	909
sympy	98	46	451	39	517
suit	37	260	227	11	807
eric4	49	231	454	557	369
csv-files	49	190	454	248	918
value2	73	17	445	427	108
opens	0	119	356	617	730
xpath	49	185	275	430	850
considerably	45	100	283	451	838
3600	3	212	141	700	692
elsewhere	56	122	287	559	880
inches	59	235	471	221	172
poster	1	108	92	745	23
tally	18	152	199	515	439
link	1	18	421	323	415
competition	93	203	26	329	607
atom	79	65	413	487	34
line	63	262	454	596	345
u'8	51	5	219	735	165
int8	10	183	78	317	163
main.py	21	24	367	445	369
cid	18	204	189	305	960
tia	50	276	374	412	849
latlng	38	196	98	144	125
tcaswell	19	273	195	204	756
up	56	261	298	52	846
us	37	71	227	115	807
ur	19	273	120	289	184
um	19	273	120	204	756
preprocessed	52	234	264	89	585
un	38	297	66	579	187
ui	53	25	334	700	948
uh	19	163	469	458	230
.at	78	226	272	270	139
100milliseconds	44	269	491	46	789
first()	57	161	52	223	105
consumed	18	173	394	718	453
impl	61	18	108	315	279
storing	23	190	45	627	902
plt.gcf()	7	188	116	10	314
dataf	66	265	426	491	911
natively	61	3	488	309	687
reconcile	23	279	337	447	585
defined	6	265	426	491	196
likewise	66	211	409	564	129
parses	49	210	354	6	918
parser	49	185	112	690	349
influence	52	126	486	89	927
globally	78	126	230	357	292
np.sort	57	256	27	632	84
rolling	33	138	53	469	896
chat	61	165	108	465	593
doe	82	196	309	144	936
parsed	49	210	112	6	349
python-dev	25	156	184	382	289
defines	6	265	426	74	923
df2	90	90	443	568	304
puzzling	26	82	179	714	365
fixing	56	82	110	559	880
scrape	13	200	275	6	517
preventing	26	82	110	687	365
codec	38	32	455	424	625
coded	6	234	390	661	129
retract	1	163	92	458	230
95%	29	95	389	162	255
row.index	15	208	128	596	292
folium	53	270	180	195	517
elements	15	287	203	698	775
df.apply	27	57	222	161	181
wrongly	26	234	60	458	967
left_on	90	286	214	619	806
csv.quote_none	43	39	478	593	957
parenthesis	91	192	20	497	494
gene_id	73	17	391	453	304
integer-based	78	208	272	270	139
imputer	64	33	457	386	553
sides	6	286	224	77	151
lang	18	204	394	486	615
date_time	73	286	214	305	304
code2	73	204	445	564	311
k-means	64	33	7	386	462
algorithm	64	33	7	386	679
bdata	89	236	445	766	575
agg	11	136	52	223	105
consumer	93	282	199	634	914
age	18	91	331	343	108
codebase	61	18	108	392	617
feature_value	55	109	324	144	64
annoyed	16	133	167	50	476
dr	82	17	10	391	125
equivalently	87	131	417	89	480
incomplete	56	260	60	766	909
enrolled	18	173	394	718	453
oracle	46	243	190	218	642
fresh	94	217	295	238	799
hello	55	91	120	167	184
volume_traded	18	152	384	435	157
15-min	44	99	491	46	990
partial	52	234	319	34	569
anyway	66	234	390	596	880
pieters	19	273	120	631	184
illustrates	37	71	227	115	917
ufuncs	11	131	233	597	763
redis	46	190	264	627	557
results	68	215	179	366	744
slick	28	77	150	638	467
illustrated	68	71	227	11	909
baby	93	203	26	50	179
semicolons	91	170	83	784	56
d.items()	62	25	334	0	64
broader	48	18	230	309	687
naivebayes	91	33	319	386	553
centers	59	235	133	330	491
seemed	56	122	287	559	397
contourf	59	224	180	304	944
cython	45	43	283	417	906
downsides	52	279	230	62	166
symbol_list	68	215	454	557	345
sklearn_pandas	64	33	7	386	553
rspars	6	212	337	766	987
item_name	55	237	324	650	356
2013-12-22	60	140	384	435	446
concerned	26	38	345	467	434
young	16	133	167	50	179
send	46	200	275	744	377
structs	87	141	450	681	325
citing	1	260	440	444	756
0.17.1	58	176	493	328	622
sens	26	234	110	596	880
dislike	48	133	167	204	846
hints	50	276	374	412	93
pandas.periodindex	44	269	228	756	684
indicating	6	215	185	766	431
imputed	59	235	304	221	629
uploaded	68	71	275	744	377
unzip	49	190	454	557	918
provides	48	3	488	74	687
booleans	15	0	246	439	502
15:23	86	81	242	724	512
bin_time	90	286	483	568	304
continues	60	137	384	108	145
reopened	63	127	295	613	799
pd.rolling_sum	11	136	52	223	105
date_range	44	104	228	756	684
manipulated	23	190	185	446	197
mixing	6	298	230	52	846
df['day	67	57	466	565	588
customization	53	224	180	304	7
continued	56	122	287	11	415
wipe	66	43	213	108	617
categories	18	152	331	515	768
dataframe.sort	57	136	233	760	231
colindex	71	25	340	14	784
propagating	80	129	0	201	410
magic	98	43	487	204	487
experiencing	26	82	110	687	365
hd5	49	190	78	627	557
attempts	56	122	287	350	313
fewer	3	212	368	23	633
inelegant	28	77	436	616	467
.sum	17	40	215	165	86
dt.hour	18	152	199	698	990
freed	63	61	244	342	234
.sub	17	30	443	165	86
rack	82	196	309	144	936
kaggle's	94	217	26	329	179
primer's	1	260	195	759	117
disordered	23	215	185	6	902
enumerating	89	260	45	208	320
`alpha=='b	38	293	306	612	493
matrices	87	141	450	681	325
alphanumeric	91	170	83	784	345
imply	17	221	27	781	987
mysqldb	46	243	190	218	100
video	48	203	278	128	415
enclosed	91	170	83	497	56
odo	46	243	190	218	642
incidentally	56	260	390	596	756
assembly	18	173	394	661	775
odd	26	82	110	315	365
`'date	91	297	476	149	311
`df['id	67	255	79	68	282
tdm	49	190	454	6	918
directive	38	64	212	185	745
anton	19	273	195	631	184
asap	66	163	44	643	476
analogously	78	256	488	309	373
expressed	52	131	488	89	581
consistently	26	82	179	766	365
tick_increment	54	283	141	122	995
`closed='left	66	159	235	564	853
half-hourly	44	269	491	46	789
expresses	6	38	230	714	55
firms	18	76	304	761	629
x+1	27	57	466	565	588
s.groupby	17	30	370	165	776
funtion	11	256	233	89	292
twinx	7	224	180	620	314
logger	93	282	199	634	990
led	56	82	179	74	365
pvalues	33	95	53	292	775
tsla	82	196	309	144	125
2011-01-01	86	81	242	724	201
.first()	17	30	370	165	776
straight-forward	28	77	150	638	467
len	27	117	27	405	338
let	66	116	128	15	476
lev	18	173	394	718	775
\u2019	38	32	455	424	625
downvote	1	222	92	15	486
openmp	25	156	451	376	609
deduced	6	183	169	603	163
to_stata	49	185	233	430	850
great	19	163	6	204	184
casing	80	170	83	347	345
rds	46	243	190	218	642
technical	26	133	345	714	55
involved	28	3	488	309	487
pkg_resources	63	231	213	545	369
rdd	46	164	275	446	773
x+y	27	178	481	565	267
resulting	23	215	185	447	744
defeat	45	58	385	151	911
opinion	1	157	60	444	55
{	38	237	98	86	968
bookkeeping	45	133	264	467	687
makes	26	43	390	74	57
timezone-aware	44	54	333	413	530
involves	45	58	486	417	347
thats	19	163	469	458	230
chains	93	279	26	62	145
firefox	94	218	157	39	322
parentheses	91	223	20	497	893
333	86	221	340	102	167
.toarray()	87	258	7	681	553
equals	54	90	246	434	502
usrecq	54	140	384	305	998
convert_numeric	17	49	305	132	86
site.cfg	49	231	177	557	369
reserved	91	170	83	784	56
tools	48	46	451	671	609
rendered	98	44	19	76	479
standing	60	16	84	713	753
confidence	33	138	101	330	472
ontology	82	196	133	515	491
objectid	55	76	185	6	349
zip	62	109	161	21	498
illegal	49	113	480	487	34
))`)	27	117	443	405	432
testing.csv	68	71	454	366	744
duplicate	89	236	111	454	675
doubt	28	38	474	309	57
_	62	42	251	428	64
d	73	17	400	427	784
doubling	6	100	244	342	10
pandas.concat	90	286	224	248	151
dt.date	60	34	352	51	614
iqr	29	235	389	162	491
src	21	24	146	49	257
undeclared	5	85	438	526	877
occurred	18	140	199	718	145
freezing	63	217	295	636	799
integrate	48	200	451	39	609
file.h5	10	123	78	455	28
carrying	23	58	486	208	902
labelled	59	94	471	620	846
.rdata	0	185	356	580	850
aapl_old	15	286	224	454	304
gladly	16	222	92	15	476
pieces	23	58	264	209	822
x['date	67	255	79	68	282
firewall	94	200	167	39	609
customer	18	173	394	718	453
animals	18	91	392	343	661
))``	27	57	466	667	338
integrating	23	133	298	50	179
this	52	234	390	596	880
challenge	56	133	486	50	179
clients	46	200	26	39	884
itertools.izip	57	256	56	21	906
reproduce	37	71	353	115	508
thin	53	3	418	430	687
drill	23	116	128	360	538
worksheet	0	119	356	580	77
fulfill	52	0	246	763	502
scatter	59	224	180	304	944
ax.legend()	7	224	116	10	314
streamed	93	200	275	6	606
process	45	127	264	368	773
lock	45	127	369	368	773
slim	52	38	167	436	320
purposes	6	133	486	200	115
c2065	5	85	438	526	877
high	29	29	389	435	157
d.read_csv	43	39	47	109	376
pieced	56	122	167	50	179
haversine	33	178	450	195	999
formatters	57	224	180	76	517
repl	98	44	487	160	983
schemas	46	243	190	218	642
ints	92	183	169	603	416
educational	16	163	167	204	476
datetimeindex	92	104	434	303	843
shuffled	89	145	317	360	575
mutually	52	279	224	454	320
destroying	23	236	45	208	575
*iqr	29	78	141	669	333
namespace	49	265	426	491	196
negation	15	0	246	42	502
uncompressed	3	61	231	275	234
delay	19	163	44	643	476
.dat	49	190	454	6	918
class=	55	297	201	579	936
reposting	1	222	92	346	23
np.sin	67	147	27	632	526
as_index	57	74	138	381	853
1294617600000	51	85	123	22	464
intelligent	28	77	465	438	467
espec	67	112	306	122	282
greatly	50	276	374	412	93
.nunique()	67	255	79	68	282
blocks	23	279	264	209	585
vectorizer	87	33	7	681	553
pd.to_csv()	49	185	454	690	519
singular	87	141	450	681	373
lnk2019	5	85	200	207	900
docstring	57	18	43	505	53
usernames	93	76	13	761	542
tied	6	38	390	309	373
timedelta64s	92	183	169	603	416
pigs	82	91	309	144	936
demonstrating	37	71	353	115	917
fits	52	137	264	162	837
ties	89	145	317	360	927
np.logical_and.reduce	27	258	56	597	667
str.lower	57	256	56	597	292
efficiently	52	58	150	89	985
realized	19	163	469	458	967
2x2	87	141	377	403	944
counter	18	211	385	21	911
redundant	23	211	153	347	675
element	15	287	203	698	498
columns=	90	117	443	267	961
cx_freeze	25	156	332	376	291
allow	6	126	390	89	927
n1	54	247	481	164	267
counted	18	204	384	291	775
2014-01-31	55	237	434	303	349
erasing	53	126	390	368	615
ipdb	63	262	295	108	799
produces	68	215	179	74	744
insight	50	276	374	623	93
bundle_files	38	262	256	376	617
outlook	93	200	26	368	884
tableau	46	200	275	73	642
produced	68	215	179	766	744
longs	92	183	169	603	416
comma	91	170	83	784	56
stock-mach.py	21	24	367	49	556
])`	71	80	334	722	338
shapes	87	258	203	748	973
player's	18	173	394	718	775
perfect	19	163	6	289	184
_configtest.obj	5	85	200	207	900
recreating	23	58	45	208	902
decay	33	138	53	469	368
chosen	29	282	133	292	129
zeroth	60	278	174	698	939
redshift	46	243	190	218	642
user_agent_string	91	297	161	470	64
156	86	169	367	607	161
2015-01-02	86	140	242	14	465
meantime	61	18	436	759	476
12sma	60	211	384	108	177
2019	29	78	384	14	166
2018	86	169	123	607	465
instruments	93	29	271	442	294
2015	4	34	312	82	548
2014	4	34	312	82	548
therefor	6	43	298	315	880
2011	4	34	318	82	594
.min()	17	147	370	68	181
2013	4	34	312	82	548
2012	4	34	312	82	548
`df.groupby('a	27	30	370	161	776
"]]`	55	237	324	650	356
]);	71	117	443	267	317
bleeding-edge	58	176	50	376	617
])=	71	80	466	298	588
animal	59	235	331	515	491
402	86	221	91	130	867
python	48	144	451	430	850
docs	61	18	108	323	53
outlined	1	260	440	759	117
qnames	38	5	134	157	955
b2	73	17	391	427	686
connected	93	235	304	562	392
]))	71	80	334	722	338
bothering	26	163	469	50	434
d.something	71	293	306	612	948
rotation	7	94	472	10	435
])"	71	80	334	722	948
realize	26	163	469	458	967
refering	68	262	179	596	129
multiprocess	45	127	369	505	773
studentid	18	204	445	305	775
year-month-day	92	64	434	586	843
.day	67	36	79	502	614
traced	56	261	298	559	365
b3	54	17	391	427	686
3.5.0	58	245	403	340	141
merge	23	286	224	248	151
getitem	79	251	315	111	963
truth	77	65	279	530	724
70,000	3	212	107	319	633
cythonizing	45	3	264	417	581
beneath	66	211	483	447	939
traces	53	44	487	221	944
francisco	82	235	331	343	629
reproducing	37	71	353	723	89
subset	23	215	185	447	585
mets	55	237	324	650	936
beginner	16	133	167	511	831
bump	19	163	320	204	880
csv.dictreader	49	185	112	690	519
dataframe.resample()	44	269	491	46	789
temp2	71	80	334	722	948
temp1	55	25	400	0	64
meta	10	190	78	627	557
static	53	200	19	76	517
how=inner	57	286	224	619	151
banal	28	38	474	616	347
csv's	49	190	454	248	918
x-labels	59	94	471	620	274
psid	48	46	451	744	415
9l	71	221	340	130	867
fundamentally	26	43	230	714	55
'	38	196	409	564	125
reload	98	44	487	636	842
train_y	15	258	27	667	526
dtype=str	43	39	235	690	246
cest	92	54	333	725	760
`'series	79	251	315	111	413
timedeltaproperties	79	251	315	111	413
statsmodels	64	138	216	187	472
mydataframe	15	265	426	58	963
as_index=false	17	49	370	165	776
raise	79	262	413	533	34
unwieldy	28	38	474	616	68
turned	56	82	298	559	709
kaggle	93	203	278	329	607
greedy	29	22	7	759	679
mango	82	91	309	753	936
release	61	197	493	392	622
zodb	45	190	264	627	557
surely	26	38	474	438	880
initialize	15	265	483	342	982
series.map	57	256	56	597	569
shortest	52	270	133	464	999
log	68	247	454	6	287
.item()	15	256	272	632	963
could	66	234	390	596	888
put	66	234	390	596	709
david	19	273	120	167	184
length	6	287	203	464	129
notebook	98	44	487	160	983
assumed	6	234	60	458	967
repeats	18	211	384	718	775
sql_query	46	185	161	470	702
reassigns	15	109	483	0	483
enumerate()	57	256	56	21	26
blown	66	43	167	204	807
df.any	17	40	215	322	195
programmatic	48	46	451	309	487
456	55	237	324	650	936
df.sort	17	49	443	165	86
occurrences	18	152	73	698	775
1e7	59	235	471	620	491
1e6	3	212	107	700	692
1e9	92	183	358	700	692
how='ohlc	44	159	409	756	684
re.match	27	42	251	34	24
summaries	93	152	53	469	368
backtest	13	29	271	156	294
nyse	13	29	271	156	294
tag1	73	76	340	14	784
datetime.date()	92	104	434	20	416
reference	52	234	390	447	615
start	44	211	491	108	145
ordering	89	145	317	184	575
histograms	59	224	180	304	944
detailing	1	260	440	686	756
from_date	54	140	384	698	998
dtype('float64	38	293	194	612	910
cats	82	91	331	331	936
my_column	71	25	334	122	948
behaved	78	3	488	315	967
total_seconds()	92	104	434	597	763
painful	28	38	474	616	68
o'reilly	48	203	278	323	415
stars	82	91	128	543	320
y0	71	221	495	233	930
gotcha	19	163	469	458	230
2015-05-31	86	66	438	471	465
out.csv	43	39	47	109	246
2009.0	51	201	448	173	284
thresh	17	49	235	132	853
distinction	78	43	230	714	55
df_azure	71	80	334	722	953
haven	56	122	287	350	313
zz	82	196	309	144	936
colleagues	94	200	26	39	884
not_equal	55	147	306	612	92
blew	56	122	167	362	880
taken	56	211	440	766	129
bother	66	43	390	596	57
.ix	78	226	272	270	139
tortured	62	25	324	0	64
appealing	28	298	474	221	846
wouter	19	273	195	631	184
reproduction	37	71	353	115	909
iconv	43	113	316	425	678
matplotlib's	7	224	180	304	314
cloning	61	18	108	288	617
collecting	23	190	275	6	902
*x	27	57	466	565	904
viewer	53	44	19	76	517
large-ish	3	212	107	319	633
spelled	26	260	60	45	880
liner	28	77	436	759	790
tonight	16	163	44	643	476
plt.contour	26	256	233	505	320
m_srcaddr	59	235	471	515	491
pd.set_option	57	68	201	373	263
9.74	51	66	238	471	658
9.75	51	66	238	471	658
seaborns	48	3	180	323	415
location_id	18	287	445	698	108
ylim	7	224	472	10	314
viewed	6	210	440	766	213
756	86	293	473	356	300
*\	38	42	251	90	24
commodities	93	152	26	713	727
documents	49	76	319	6	542
avarage	18	140	384	299	990
4000	3	212	107	319	633
studying	48	122	298	50	415
mechanism	45	3	310	467	557
many-to-many	89	279	224	454	151
incorporating	56	46	298	50	709
korean	49	190	454	6	918
multindex	89	236	335	572	575
;-)	19	163	92	204	230
;-(	26	82	110	687	880
calculus	94	61	369	368	884
02	4	34	312	82	636
.tail()	11	147	233	223	105
asserts	91	297	56	784	569
to_pickle	49	185	78	430	519
*5	71	80	334	722	948
*1	71	40	141	122	995
*2	71	80	466	298	667
jdata	62	109	400	0	498
courtesy	1	260	92	444	23
said	26	234	440	596	967
amongst	93	173	133	569	990
**	26	234	390	596	756
device	18	282	199	634	990
there'd	45	3	150	417	57
tired	26	122	167	448	880
subsequently	63	211	483	766	982
enthought	25	218	184	649	289
cke	80	129	307	612	778
so-called	11	131	488	469	231
lined	66	298	153	52	846
placement	56	287	54	487	987
latin1	43	113	140	363	628
sheet1.xml	0	119	146	388	318
np.count_nonzero	17	30	370	161	181
multi-element	15	287	203	748	973
face	26	298	110	687	846
\pandas\tools\	21	24	121	163	666
you'll	66	234	390	661	888
400k	3	212	107	319	633
bins	44	269	419	629	669
mechanical	68	91	128	366	936
brew	25	156	184	649	291
tickers	13	29	254	156	294
statareader	49	190	454	6	918
overwrites	80	137	483	491	982
to_hdf	10	123	25	155	271
single-label	78	226	272	270	202
lopnr	18	204	331	713	108
np.timedelta64	92	104	434	622	780
2011-01-10	60	81	242	431	201
=p	43	117	47	267	69
szl	26	163	469	458	320
rolling_apply	11	136	233	760	231
dba	26	82	167	108	880
dependant	33	279	133	447	985
=x	71	80	334	722	948
dbf	49	190	454	6	918
bring	66	261	264	437	611
3.1.0	58	245	403	400	141
itertools.chain.from_iterable	62	109	27	0	162
postcode	82	196	309	144	125
df2=	67	25	79	0	64
total_paid	18	152	445	698	368
rough	68	299	227	11	909
trivial	28	38	474	714	487
fictional	68	215	227	446	909
decade	44	282	326	23	789
principal	93	215	440	444	615
redirect	48	200	275	323	377
freq=	55	237	324	189	62
pause	13	26	134	375	895
tantamount	17	30	370	265	776
forward-filling	80	129	0	201	410
timeserie	44	269	491	46	789
py2.7	94	218	157	396	227
=[	43	162	478	182	801
should	66	234	390	596	888
buttons	1	222	92	225	132
entities	93	76	331	761	542
jam	52	3	233	89	292
y_i	54	247	481	585	267
d.dateoffset	4	221	114	267	548
jab	19	273	6	289	184
hope	16	116	167	15	476
meant	26	234	60	458	967
=4	54	17	400	427	998
move	66	211	45	437	747
handle	6	126	153	89	927
=0	15	40	215	738	998
=3	54	25	80	434	995
means	6	234	390	596	129
==	67	228	206	122	916
familiar	48	133	167	50	27
=>	38	258	340	14	747
likert	82	235	416	515	393
lucky	66	163	469	458	320
generalise	28	77	436	759	292
backend	98	44	487	39	517
data.table	11	144	488	183	850
acces	52	234	128	89	606
pd.dataframe.from_dict	90	30	443	245	432
exchanges	13	29	271	156	294
=/	26	231	146	388	694
=)	19	163	6	204	184
=(	71	117	472	267	968
clicked	53	234	128	108	377
smash	23	3	56	89	292
aes	6	265	426	491	196
uids	6	76	337	766	775
]]=	71	80	334	722	867
denmark	38	5	91	144	125
x-tick	59	94	471	620	274
comprising	93	282	491	23	585
y_0	54	78	141	700	995
multi_df.ix	71	80	334	722	948
stuff	48	43	486	436	880
np.array()	92	183	169	603	416
streamlined	28	77	150	438	467
gbq	48	46	451	39	850
ohio	18	152	394	698	108
test.xlsx	0	119	356	580	730
aem	60	282	491	634	201
iqfeed\	43	39	47	157	246
stations	93	282	491	634	661
guessing	26	82	345	436	434
btw	26	234	390	596	756
temporarily	66	126	390	437	292
qtr	82	91	309	144	947
argmax	57	136	52	632	26
frame	23	215	185	446	585
correlations	33	138	53	469	999
qty	18	204	444	435	453
!!!!	19	163	6	289	184
sheetname	43	74	235	690	853
engine='c	43	39	478	593	955
cleverer	28	38	150	438	880
bidders	54	90	445	698	998
fuzzywuzzy	48	144	319	323	569
sys.getdefaultencoding()	38	262	316	470	92
orderid	18	152	331	718	624
tripping	56	261	298	52	145
error	63	262	413	533	34
interacting	48	46	451	39	609
data_2	96	145	317	570	744
bt\	38	297	316	157	666
.to_datetime	79	251	315	111	963
data_1	96	145	317	570	744
vms	94	200	26	396	884
clashes	80	286	337	290	304
series.where	57	256	27	132	195
yearmonth	73	204	445	305	108
quickest	52	77	150	638	467
float('nan	67	255	306	68	443
df_all	73	286	400	568	304
email	18	173	394	718	453
hard-coding	23	58	486	89	902
df1.reset_index	17	49	443	165	86
strided	87	141	203	748	973
scratch	66	211	45	446	982
rollstocks	62	109	80	568	162
covar	33	138	53	469	896
strides	87	258	203	748	973
.mean	17	30	249	161	181
])]	71	80	334	722	155
configuration	94	200	487	160	983
staring	16	163	44	643	476
restrictions	94	200	467	396	884
np.cov	11	136	233	632	231
figured	19	163	469	458	230
shift()	44	136	52	223	105
la	93	76	371	6	783
pandas.datetime	92	104	434	20	416
382	51	85	123	22	43
drug	18	173	331	761	542
strptime()	92	104	235	185	963
etc	82	279	10	14	947
itertools	11	256	56	21	906
df.value	67	147	443	502	588
streams	6	279	275	6	773
00am	86	81	242	431	512
w.r.t.	26	38	440	714	756
etl	45	133	451	671	179
strongly	78	43	230	36	57
indice	18	173	384	761	775
.str	67	42	251	34	655
h5check	49	46	451	557	850
extent	52	38	488	798	687
cm	82	196	309	144	125
conclude	6	234	128	714	320
cc	82	196	10	388	818
cb	71	221	141	14	995
ca	3	212	107	278	633
item-by-item	11	131	385	151	581
cf	54	178	340	700	149
ce	25	156	184	376	289
cd	25	231	177	388	318
data.values	87	258	27	667	526
syntaxerror	38	262	413	226	34
cba	82	196	309	427	125
stylistically	28	77	150	438	467
crafted	56	3	287	89	313
modeling	64	33	296	386	679
cs	54	255	141	434	995
cr	53	235	316	445	832
allocated	45	61	244	342	979
labor	16	133	167	50	476
ct	19	273	195	631	184
8.1	58	11	157	400	141
if_exists='append	43	39	47	147	702
star_name	38	297	316	564	955
8.5	51	201	448	173	107
keying	89	204	337	447	575
8.9	51	201	448	173	471
trajectory	87	270	33	195	635
forward-fill	80	236	0	201	410
underlying	78	141	203	419	973
taste	78	157	230	309	723
genetic	93	173	133	761	542
tz-aware	92	104	434	303	416
c_	54	178	481	14	267
concating	23	58	385	151	162
degrees	33	138	39	330	491
utilizing	56	3	486	50	902
waste	45	100	474	467	476
recurring	93	282	199	292	990
x-1	27	57	466	565	667
>	67	228	206	122	916
logit	64	138	216	187	472
tstart	54	90	340	14	998
*args	27	142	222	161	618
moved	56	211	298	559	747
coherence	33	235	471	515	944
1200	54	78	141	669	995
neighbour	87	141	133	681	999
latitude	93	110	133	276	267
+10	29	140	491	464	990
derivative	33	138	389	136	578
c3	73	17	391	427	146
c2	73	17	391	427	146
atlanta	4	169	318	715	892
c0	82	17	391	427	267
0.042725	51	66	238	471	658
c6	82	17	391	427	936
c5	82	221	340	144	930
c4	82	17	391	427	146
60%	3	212	107	362	633
2016	4	34	318	82	594
sortable	87	141	27	315	166
09:30	86	81	242	431	512
09:32	86	81	123	724	512
cvs	49	190	112	6	918
\ipython\core\	21	24	121	163	666
2010	34	34	318	82	594
accumulator	18	211	53	469	368
pandas.set_printoptions	57	68	201	373	263
datedpt	54	90	309	305	125
x-y	59	235	133	620	571
hahaha	19	163	469	458	230
asynchronous	45	100	283	467	838
continuously	63	127	295	636	145
filter()	79	262	413	533	34
gamma	82	196	309	144	125
vb	87	258	481	700	667
aesthetics	53	298	180	304	944
ve	56	122	287	350	313
np.argmax	17	30	27	632	181
.hist()	7	224	116	10	314
insanely	26	38	474	436	347
ohlcv	13	29	348	647	157
trx_date	73	204	189	305	374
vs	6	234	283	345	129
tenor	73	17	391	305	304
sits	53	44	454	221	832
conserve	45	100	264	368	838
descriptive	26	38	227	714	677
escape=false	57	256	235	597	853
level=2	17	30	443	165	432
level=0	17	30	370	165	776
level=1	17	30	370	165	86
iopro	58	218	157	400	141
np.sqrt	27	30	27	516	181
highlighted	56	260	440	444	756
np.float32	87	258	305	667	526
x.min()	27	147	466	122	588
digging	56	122	320	643	476
model.predict	71	258	27	700	667
df.to_clipboard()	98	44	454	670	508
android	94	200	26	39	343
glaring	16	116	110	687	849
cparsererror	63	181	423	475	34
df.timestamp	67	36	79	502	366
conflicting	6	279	451	661	927
phi	33	138	216	330	578
ball	82	91	10	144	775
infinity	80	129	306	612	33
t-1	54	178	481	369	995
timeindex	92	293	434	303	416
drink	51	5	91	735	372
upon	56	215	440	447	585
t-2	54	178	481	369	995
datetime.time()	92	104	434	603	416
phd	73	17	391	427	998
v1	73	17	400	427	784
thks	19	273	120	15	756
t-3	44	178	141	369	995
10^5	82	221	340	14	784
separators	91	53	83	784	56
10^6	3	212	107	319	633
infinite	63	127	295	108	606
.group	57	256	27	597	26
colnames	15	76	357	761	784
php	48	200	451	39	609
0h	86	85	242	22	135
identity	6	265	450	681	129
t-5	54	178	481	369	995
concordance	54	248	21	435	478
2.7.8	58	245	403	400	141
2.7.9	58	245	403	400	141
functionalities	48	133	451	50	687
2.7.4	58	245	403	400	141
2.7.5	58	245	403	400	141
2.7.6	58	245	403	400	141
2.7.7	58	245	403	340	176
2.7.2	58	218	157	400	141
2.7.3	58	245	403	400	141
patterns	91	0	319	34	569
slinear	44	159	0	563	410
command	63	262	213	557	369
datetime.datetime	92	104	434	20	780
350	3	212	371	319	783
audio	93	46	319	323	377
drawing	59	224	471	221	944
359	71	221	334	130	457
subgroup	18	152	53	469	368
lest	66	25	246	357	166
inconsistently	92	210	169	603	349
non-chinese	49	76	319	357	542
restructure	23	215	185	446	315
less	28	100	389	162	57
tokenizing	5	181	423	475	34
downvotes	16	59	92	15	486
downvoter	16	116	60	15	320
rates	93	282	271	156	294
execfile	21	24	121	163	666
total_val_count	15	208	272	632	139
rooms	82	196	26	713	990
v0.17.1	58	176	50	400	617
v0.17.0	25	176	213	376	291
paul	19	273	195	631	117
glue	23	286	224	537	151
sub-folder	18	173	454	761	918
web	13	200	275	39	377
info()	92	183	169	455	163
axessubplot	7	224	116	10	314
pyrserve	48	3	108	309	850
wed	4	34	312	82	548
-values	59	94	471	620	491
drawback	78	3	488	309	687
outlines	53	224	180	221	726
wes	48	203	278	323	415
lattice	59	144	180	183	850
terminating	63	127	295	636	799
combine	23	279	224	248	151
optimising	45	133	283	467	838
combing	56	122	275	6	179
crack	16	222	421	15	476
"`)	55	297	316	80	830
practise	28	133	167	309	57
data_lvl1	86	140	454	347	345
#define	51	221	438	715	200
pre-compiled	25	156	184	376	289
increased	3	61	389	362	234
reshape()	78	43	488	309	57
np.log2	27	30	370	161	776
checking	56	234	45	208	606
normalise	18	152	275	447	606
crux	26	260	60	714	55
increases	45	100	389	582	838
45129-09-22	51	81	123	724	512
five	68	211	337	23	129
desk	16	122	320	643	879
nvm	19	163	469	458	230
password	46	243	190	218	642
pies	67	255	79	564	282
nvi	29	178	481	330	267
desc	73	204	445	462	108
marker='o	38	5	409	68	527
3-d	87	141	203	748	973
resid	54	91	331	343	936
test1.csv	43	39	47	109	246
x.dropna()	27	57	466	565	153
sparsity	45	141	450	681	325
datasource	82	196	309	144	977
to_offset	57	256	426	185	963
become	6	211	153	437	129
5min	44	269	491	629	789
inexperienced	16	133	167	50	179
replacement	52	3	488	89	695
tqdm	46	185	426	180	256
sas7bdat	46	243	451	218	850
grids	59	266	471	304	944
requested	68	71	227	366	909
datetime64s	92	104	434	303	416
interact	53	200	369	39	773
radians	66	131	358	89	747
daylight	60	54	333	540	384
12-31	67	81	79	724	619
choosing	6	279	45	208	373
253	55	91	340	14	936
apache	94	37	157	39	773
2403900	29	140	384	46	201
recognition	56	71	486	11	807
4800	54	247	481	700	667
datadf	73	204	445	698	108
sufficiently	52	38	446	661	347
literally	66	234	390	596	320
avoid	45	43	230	315	57
numpy.logical_and	79	262	315	58	963
__getattr__	21	265	426	791	994
delimiters	91	170	112	784	56
dots	59	235	304	221	520
does	6	234	179	596	888
contact	66	200	394	39	377
pre-processing	64	33	486	208	290
timeit.timeit	71	147	161	122	916
leverages	45	3	488	430	687
recarray	87	183	169	748	163
0.15.0	61	197	493	392	622
0.15.1	58	176	493	392	622
0.15.2	58	176	493	392	622
blowing	45	261	264	52	347
hstack	87	141	203	748	973
schedule	93	282	26	156	294
importerror	25	231	213	545	34
selecting	23	236	45	208	538
pressure	93	282	70	634	990
geom_boxplot	7	224	180	304	314
trains	93	173	133	515	267
posterity	1	260	92	200	117
proceeded	56	211	179	559	365
imaginary	6	71	227	11	115
loans	93	212	107	319	633
counties	89	279	337	454	129
hiding	53	224	471	221	846
gained	45	100	283	467	889
iris	68	33	133	653	406
firsttime	92	293	434	603	349
puts	23	137	483	359	709
beef	53	235	471	221	172
.seconds	92	104	434	622	780
ingest	49	190	275	6	918
current_drop	71	80	141	298	995
regenerate	49	185	426	58	982
insufficient	1	260	244	621	807
constraints	45	100	264	368	639
revise	1	260	60	15	807
peak	29	61	389	582	578
interpretations	52	279	337	62	320
large_df	90	109	443	0	432
letters	91	170	319	784	345
coverage	18	95	53	775	896
df.count()	11	129	182	564	166
rectify	80	116	128	437	320
requester	38	5	253	735	890
kmeans	64	33	296	329	462
`x['var2	71	25	334	407	948
assess	52	279	486	62	525
'''	73	262	185	405	64
recompiling	30	262	302	487	34
967	86	293	473	356	300
'')	67	42	251	90	382
mere	3	212	107	362	633
df.a	71	147	141	129	948
terminated	63	262	295	636	145
truncate	92	183	153	347	416
pairing	89	236	445	360	575
python-3.3	58	176	50	400	141
spots	80	129	0	201	778
tails	48	18	421	323	415
doing	26	116	345	438	434
trigger	63	226	153	687	974
9.8	51	66	238	471	284
frustration	56	122	320	50	179
9.5	3	212	448	362	471
yrs	86	221	340	14	594
9.0	51	201	448	173	471
index.names	63	262	110	596	365
naturally	89	236	335	360	575
function	11	136	233	760	231
fiscal	60	34	326	51	753
non-ascii	91	113	140	758	628
cumcount()	11	136	52	223	105
1.5.0	58	245	403	701	141
overlapping	44	279	224	464	151
delivery	18	152	394	305	497
construction	23	58	45	342	982
''`	67	255	306	612	282
delivers	53	137	179	108	377
.idxmax()	17	30	370	161	776
valuation	13	29	271	156	294
quartiles	33	95	53	515	491
illustrative	68	71	227	200	115
count	18	152	73	698	368
fragmentation	45	61	369	368	234
compute	33	95	53	409	368
datetimeindexes	15	129	0	612	778
hdfstore.append	10	190	78	155	891
chained	78	226	272	513	974
'']	55	255	306	90	382
numpy	87	141	203	748	973
official	61	18	278	323	375
smooth	59	235	70	563	571
numpy.bool_	79	251	315	111	963
placed	53	211	483	766	129
convince	16	43	167	436	807
2013-08-11	86	81	242	724	201
bf	73	17	400	568	304
distribution	33	138	216	330	578
deliver	16	116	110	50	880
odds	1	16	92	366	913
bearing	16	116	167	50	476
padraic	19	273	195	631	184
bigram	18	76	319	761	542
timespan	44	269	491	46	789
burger	55	262	409	14	64
recognize	6	210	153	766	349
inv	64	138	216	330	472
exaple	18	91	384	698	936
item_nbr	73	76	13	761	775
slowing	45	100	276	417	347
denote	6	279	337	292	431
sibling	54	140	384	14	998
3-letter	60	152	326	564	753
hyry	19	273	195	631	117
ind	54	25	340	0	432
.head()	17	147	370	455	92
.show()	7	188	116	10	314
multiindex'ed	23	141	185	446	585
inc	4	201	448	699	67
bzip2	45	46	78	627	557
store-day	18	287	445	761	108
.dropna	17	49	215	165	86
nonetheless	26	38	110	200	807
df.index	67	36	443	502	843
eastern	92	54	333	413	530
forests	64	33	7	386	186
lately	48	122	298	559	313
compares	23	137	483	510	129
details	48	18	421	323	807
gaussian_kde	33	138	216	136	578
suppress	53	44	153	76	675
dataframe.update	57	90	337	454	26
repeat	23	58	337	151	911
monday	60	99	352	51	99
np.histogram	11	136	419	629	854
chance	16	116	128	108	849
outdated	61	176	380	392	617
s.apply	27	57	466	161	588
exposure	3	183	70	362	163
searches	48	122	319	110	606
data_columns=true	10	123	477	155	891
eof	63	181	295	487	34
p500	44	29	271	156	294
usefull	28	38	474	544	68
rule	6	126	390	89	927
strings	91	183	169	603	349
win32com	49	190	451	39	850
searched	56	122	287	110	313
ast.literal_eval()	92	185	56	470	8
169	86	221	438	607	161
downvoting	1	222	92	15	23
type_id	18	204	445	761	108
consolidated	0	190	264	248	918
copy	78	226	138	513	974
saves	23	137	483	768	911
desirable	6	38	230	714	57
norm.ppf	27	178	27	700	667
inherit	79	92	411	791	450
yikes	26	163	469	458	230
164	54	221	141	434	995
statsmodels.api	11	144	213	545	92
yay	98	44	234	204	92
entropy	33	95	128	343	320
ret	67	95	79	68	157
timespans	44	269	491	46	789
semantic	78	226	230	309	436
oldest	60	99	352	51	753
saved	49	190	454	6	918
formating	56	82	110	50	880
aliases	6	18	228	62	164
relationships	93	76	13	770	524
votes	1	173	394	343	23
pedro	19	273	195	631	184
const	54	17	384	427	784
flags=	38	42	251	90	24
fixed-length	10	183	169	603	163
v.s.	33	235	471	117	672
datestring	92	104	212	185	349
neighbours	29	95	53	292	999
walks	93	211	394	292	145
voted	1	222	92	15	23
xgboost	64	33	7	386	553
slowest	45	100	283	345	969
numpy.timedelta64	92	104	434	622	780
worth	26	38	474	436	57
axis='index	90	238	443	245	206
alternating	54	90	224	464	151
.iget()	78	226	272	270	166
my_list	27	67	222	0	153
str.extract	57	42	56	34	569
team's	18	16	84	713	913
replication	45	46	451	467	687
colmap	79	251	315	111	963
00:01	86	81	242	724	201
summarized	68	215	185	446	909
0.6.1	58	176	274	392	141
set_value()	45	100	244	417	838
tagging	1	260	60	444	756
.isnull()	67	40	215	322	299
tickets	18	140	199	435	157
we'll	66	211	390	23	937
cashflow	93	152	199	713	990
progression	33	269	491	469	789
executing	63	127	295	636	799
.sort()	17	49	443	165	432
raw_data	23	265	426	491	450
cmd	25	231	213	160	291
upload	37	71	353	744	508
humidity	44	282	70	634	990
skipna=true	17	30	27	132	195
predefine	89	236	337	447	575
delegate	11	265	426	430	450
starttime	73	204	445	305	737
299	86	169	371	102	465
indices	89	90	224	454	575
yesterday's	13	29	384	435	157
.duplicated()	15	147	215	0	919
editted	1	260	60	444	756
pragmatic	28	38	474	309	57
29th	60	99	352	51	753
rollbasis	54	140	384	698	998
pd.dataframe({'date	67	117	466	267	968
self.values	27	178	222	700	618
pands	56	215	179	447	585
approximation	33	138	216	330	472
date-time	92	210	434	185	349
------	51	146	219	771	165
panda	23	215	185	446	985
machines	94	217	157	396	322
approached	52	279	150	89	585
established	46	46	451	562	850
look_for	15	90	400	698	998
item2	73	17	173	427	311
decisions	48	133	230	62	63
+	67	178	141	502	995
coef	54	95	53	330	491
near	63	127	295	108	145
decoding	49	113	140	363	628
scrolling	53	298	471	221	172
anaconda3\lib\	21	24	121	296	616
reconstruction	6	234	128	315	365
qux	73	17	391	427	311
zoomed	59	94	471	620	172
suppose	23	215	185	446	129
officially	46	243	190	83	100
consisting	23	215	185	446	431
propogate	80	126	483	437	927
told	26	82	345	559	434
synthetic	37	71	227	11	115
dan's	1	260	195	444	117
simultaneously	23	58	264	89	45
.dtype	67	36	79	68	282
faceting	53	270	471	304	944
wrapping	11	43	299	172	709
somefunc	17	30	466	165	86
-f	25	231	316	425	678
codecs	49	185	454	430	850
u'index	51	5	91	735	867
machine1	55	255	306	68	282
obtained	23	215	185	446	174
low_memory=false	43	20	478	690	955
kudos	19	273	195	631	184
glm	64	138	216	187	472
-10	71	221	141	411	995
items	18	76	337	698	775
study	48	133	167	204	476
seamlessly	46	200	298	39	709
bitmask	89	211	337	698	775
browsing	1	122	287	110	313
aka	53	211	326	242	747
diameter	29	235	70	292	491
equivalence	78	183	169	603	402
secure	46	243	190	218	642
discontinuous	23	190	185	447	985
how='right	90	238	443	245	206
90000	3	212	371	411	319
str.get_dummies	57	256	56	597	26
highly	45	38	374	309	687
bro	19	163	6	289	184
extraneous	91	170	83	347	675
achievable	52	116	128	89	320
hindsight	16	163	60	458	434
off-site	48	203	421	323	415
glance	26	82	436	436	397
total	18	152	444	713	990
linearly	29	269	491	563	789
experimentation	56	122	298	11	807
serializing	46	190	78	430	850
plot	59	224	471	304	944
-t	43	113	316	425	678
non-date	23	210	337	447	349
`'none	80	129	476	612	493
xticks	7	94	471	406	274
`''`	91	297	476	784	493
self.end	71	221	334	102	465
retrieves	13	137	185	306	174
bundled	25	156	184	649	289
recuperate	54	287	400	14	784
obtainingparams	11	265	222	760	618
coulmn	54	287	384	698	998
rstrip	91	170	56	347	569
nan's	80	129	0	201	778
nonunique	78	236	230	360	575
0.11-dev	61	197	493	392	622
adjacency	87	141	450	681	392
haha	19	163	469	458	230
award	16	222	92	15	403
aware	26	3	345	315	434
1970-01-16	51	85	123	22	43
interaction	93	173	394	93	453
profiles	48	46	486	117	687
separates	6	170	83	784	708
iv	82	178	481	775	267
tariff	82	91	309	343	932
blocking	98	127	487	636	799
ssh	94	200	332	56	707
1991	4	34	312	82	594
1990	60	34	318	82	594
1993	60	34	384	82	594
1620	60	140	384	435	990
1995	86	169	318	82	594
err	19	163	44	533	476
3200	54	140	53	14	594
1999	4	34	318	82	594
1998	4	34	318	82	594
hierarchial	89	226	272	270	538
work	26	234	390	596	880
eclipse	25	218	487	160	983
tnx	19	273	195	289	184
np.isreal	11	43	390	315	166
transparency	59	224	304	221	172
containment	6	234	169	596	166
elegantly	52	77	150	438	467
eri	55	91	309	291	936
df.index.month	17	147	370	165	776
to_html()	98	44	201	76	517
subtleties	78	226	230	513	974
quintile	33	95	53	775	491
quiver	59	235	471	304	944
indicated	6	260	440	766	756
unstack()	57	236	335	381	774
555	62	25	306	0	948
cited	48	18	440	323	415
unreadable	28	298	474	616	68
aaaa	82	204	309	305	936
indicates	6	234	179	74	129
woman	38	64	212	157	745
df1.loc	71	25	334	407	948
mcve	37	71	353	115	917
sanitized	49	185	161	470	64
`encoding='utf	43	74	478	593	957
recovery	94	200	451	368	850
provide	37	71	353	115	807
str2	27	42	251	565	680
0\n0	38	297	316	470	955
nuts	16	82	110	394	880
iso-8859-1	43	113	140	363	628
str4	67	255	79	565	680
rookie	19	163	6	511	831
15:30	4	81	242	431	399
ordinary	66	144	488	430	850
if	66	234	390	596	320
link-only	1	222	421	15	23
0.9.0	58	176	50	392	622
classifying	23	215	185	446	985
temperatura	82	282	70	141	990
doable	28	77	474	616	68
df.apply()	11	256	233	760	231
transforming	23	215	45	208	902
lag	33	138	216	775	472
lab	46	200	10	39	884
lac	18	204	384	305	542
newdf	67	109	443	590	162
lay	52	211	128	108	13
ssd	94	61	231	84	322
anaconda's	25	218	213	160	291
lat	93	270	133	195	267
beautifulsoup4	25	231	213	545	369
df.mean()	17	136	182	223	105
meaningful	6	277	390	714	807
lnk1120	5	85	438	526	877
occurence	18	287	73	698	775
str}	43	39	478	593	955
rerunning	63	127	295	636	799
......	90	117	161	245	432
appreciate	50	276	374	412	93
filter_list	15	0	246	597	166
green	59	235	304	221	629
.diff()	67	147	79	502	588
things	66	43	486	62	880
fan	48	133	167	50	952
pd.rolling_mean	17	284	27	161	181
make	66	234	390	89	709
triggering	63	82	110	687	365
reordering	89	236	317	360	575
displays	98	44	19	76	842
office	94	200	444	718	322
randomforestclassifier	64	33	7	386	553
functools	57	256	56	597	569
"")`	38	42	251	90	382
~200	3	212	107	171	633
satisfied	52	0	246	763	502
6.7	51	201	448	173	471
6.6	86	201	448	173	471
6.5	51	216	448	173	471
12.0	3	201	448	173	471
frequency	44	269	491	46	789
subindexing	78	226	230	513	974
12.5	51	201	448	173	471
6.0	51	201	448	173	284
japan	86	91	309	82	594
satisfies	52	0	246	763	502
suffix	73	286	214	619	806
sm.ols	64	138	289	187	667
languages	48	46	451	62	609
alko	19	163	469	458	991
-michaelaye	19	163	469	458	230
somewhere	26	259	110	596	880
highlights	56	262	440	323	415
50,000	3	212	107	319	633
450	3	169	371	411	783
production	94	200	26	117	884
workable	28	77	436	383	467
mydf	79	109	161	58	919
`nan`'s	80	129	0	201	778
cartesian_product	61	18	108	83	279
df.groupby	17	30	370	165	776
then	66	211	390	447	292
coffee	16	163	469	643	230
baffled	56	122	287	50	179
affected	6	126	153	766	365
fragment	37	71	227	115	909
amenable	45	38	264	309	57
postgis	46	190	275	39	517
scene	78	226	230	513	974
break	66	261	264	52	709
band	59	235	304	515	491
bang	16	163	167	643	879
jinja2	98	44	19	76	517
a.csv	73	297	173	427	311
they	6	279	390	661	129
workflows	48	133	451	671	179
feature_name	82	196	309	144	125
multiindices	23	236	335	360	292
recorded	93	282	199	634	990
**kwargs	11	265	426	760	618
bank	29	99	389	435	990
data.groupby	27	30	370	161	776
1.00	54	201	448	173	471
1.03	86	221	340	102	995
one-to-one	73	90	13	770	524
1.05	54	178	141	102	995
left-join	73	286	224	619	304
nullable	6	215	153	766	606
freshly	94	217	213	396	291
reasonably	28	38	474	417	347
classified	6	204	13	766	775
alternately	57	256	56	89	292
l	62	247	481	0	64
alexis	52	234	390	447	129
rocks	19	163	6	204	184
max_rows	98	68	201	373	263
reasonable	28	38	474	436	57
feeds	11	159	235	760	231
372	86	169	371	607	161
classifier	64	33	296	386	679
zen	28	43	488	309	906
bar-plot	59	235	471	620	944
schemes	48	226	421	67	415
logs	93	282	199	634	773
fin_dat	62	109	334	0	919
i8	92	293	169	603	163
dumping	49	190	264	627	918
df.id	55	237	324	68	62
logg	54	25	306	330	502
nansum	78	256	27	632	537
df.ix	71	25	272	407	948
remove	80	211	153	347	675
!!!!!	19	163	6	289	184
x.month	27	57	466	161	220
blows	63	261	264	582	822
thorugh	23	58	385	151	911
+\	38	42	251	90	62
codebook	93	190	264	6	822
-5	71	78	141	669	995
network	94	200	369	651	392
dialects	46	243	190	218	642
hooked	56	46	298	315	373
monitor	94	127	369	630	773
vessels	54	95	53	698	998
daniel	19	273	195	167	184
self.data	62	262	161	0	64
medicine	18	204	331	761	661
lib64	21	24	146	49	257
forth	66	211	298	559	747
sliding	33	269	53	469	789
2014-01-08	86	81	242	724	465
occurs	63	127	295	687	145
df['hour	67	255	79	68	282
log2	54	178	438	102	42
pythonxy	25	218	157	649	291
i5	94	61	231	84	322
standard	33	138	53	469	448
nth	11	136	52	674	105
__setitem__	78	265	411	791	450
allocation	45	100	244	342	979
people's	48	222	421	323	415
forcibly	92	183	305	603	163
detecting	6	210	153	766	349
storm	93	270	70	195	392
monkey	78	43	426	234	450
2010-01-01	86	81	242	724	201
created	23	215	185	446	982
installs	25	156	184	649	289
traceback	68	71	413	533	34
sub-totals	18	152	444	447	715
decisiontree	64	33	7	386	553
+-	27	178	141	700	233
creates	23	137	483	74	982
+2	54	140	141	14	995
+1	19	163	195	204	184
incorporated	53	3	298	430	850
regress	33	178	216	187	472
basemap	59	224	180	304	944
record's	54	140	384	698	551
+=	67	255	79	68	282
benchmarking	45	133	283	345	969
chopped	3	298	112	52	345
organize	23	215	175	446	585
>>	63	262	161	596	64
sentence	91	170	319	784	345
`df['date	67	36	79	785	366
system	94	217	157	396	322
lbh	82	91	309	143	936
df.stack()	17	49	370	165	105
another	52	211	390	447	982
pandas.io.parsers	49	185	112	430	519
thick	59	298	471	221	846
realistically	93	235	133	117	172
kerkez	19	273	195	631	756
illustrate	37	71	227	11	115
mukey	80	129	0	201	998
-------------	86	66	340	471	465
agriculture	73	196	309	564	430
rated	18	173	394	343	453
value's	73	287	337	698	775
likely	45	38	474	309	57
approximately	3	212	107	319	633
recreates	68	236	179	446	744
performance-wise	45	43	150	417	57
compromise	45	38	474	436	347
observations	18	152	491	23	990
inflate	23	141	264	342	585
john	82	91	120	167	936
lexsorted	78	226	230	360	94
5-10	3	212	107	362	633
11979	86	293	473	356	300
enhancing	45	18	283	467	969
offhand	26	116	345	438	434
happily	66	163	298	204	476
pandas.read_sql_query	46	243	190	218	100
negates	78	131	417	439	502
rejected	1	222	76	444	23
wastes	1	260	92	362	23
binned	59	269	419	629	669
chunksize=	43	39	478	109	488
grouped.apply	27	30	222	161	181
wasted	16	163	474	616	68
self-contained	37	71	353	115	917
target	6	215	337	447	129
.float_format	38	64	98	470	955
scenes	78	43	230	315	55
irow	15	208	272	472	139
bi	54	221	340	14	267
thing2	55	91	409	650	133
alphabetical	89	145	317	184	575
plt.legend()	7	224	116	10	314
rate2	73	140	189	305	784
historical	13	29	271	156	294
geopandas	64	270	180	195	999
apparantly	46	262	413	533	100
'')`	67	42	251	90	382
hacking	16	122	320	50	476
scans	3	212	107	6	633
solely	23	190	45	360	538
minus	80	211	384	464	129
store.select	46	190	264	368	642
rewrite	52	43	264	89	57
respecting	89	236	45	360	335
navigate	48	231	454	557	377
500,000	3	212	107	319	124
convience	78	226	477	265	166
.pdf	98	44	19	729	222
manner	52	3	488	89	581
x.hour	27	57	466	161	220
__main__	21	112	347	134	740
node1	87	76	481	21	542
dictwriter	49	185	112	430	519
nba	82	196	324	144	465
contents	23	76	454	6	918
forced	6	126	345	315	57
dbms	48	200	451	39	377
strength	23	58	385	151	581
realm	45	3	488	309	687
__new__	79	265	426	791	963
convenient	28	77	150	638	487
latter	6	234	390	596	57
map-reduce	45	58	264	284	347
-9999	80	143	0	201	778
index=rng	71	117	141	267	968
track_id	54	287	384	434	998
realy	3	100	474	362	347
rome	82	54	333	725	760
self.cft_id	71	25	334	612	948
forces	15	137	169	74	709
12.10	58	218	50	400	617
indexed	23	236	185	446	575
canonical	28	77	150	638	467
completed	56	127	295	718	773
circles	59	235	304	221	172
pandas.dataframe.plot()	7	224	116	10	314
np.digitize	15	258	419	629	854
400,000	3	212	107	319	633
boxcar	33	138	233	469	231
singly-indexed	23	236	335	360	575
2015-04-02	86	221	371	102	465
extending	1	260	45	444	587
optimized	45	3	488	417	687
involving	52	131	486	89	985
oltpsource	54	95	141	434	998
claims	6	126	179	315	365
cumulatively	18	140	384	698	990
bytesio	49	185	112	430	519
800	3	212	371	411	783
environmental	94	231	177	557	369
pd.to_numeric	57	49	305	83	882
countvectorizer()	64	258	457	386	553
calculated	33	95	53	469	368
inferred	6	183	169	633	163
newcomers	19	163	167	204	476
10:34	86	81	242	431	512
series.isin()	57	256	235	597	963
accounted	29	140	384	292	990
overnight	63	127	295	636	145
wildcard	91	297	316	470	695
deeply	50	116	167	714	221
datetime.timedelta	92	104	434	622	780
nearest_points1	54	140	384	464	998
voting	1	222	92	225	132
dataframe.ix	15	208	272	270	139
responded	1	222	92	15	23
fitted	33	138	216	187	472
reserve	80	129	128	201	778
ticks	59	94	471	620	274
subtly	78	38	230	315	57
pack	94	200	451	39	609
yeh	19	123	477	265	230
df.merge	90	238	443	245	206
7.2	58	201	448	75	471
7.3	21	201	146	49	257
7.0	51	201	448	173	471
7.1	58	218	146	75	257
visualisation	59	133	180	304	944
7.5	3	212	371	411	783
keywords	91	297	319	784	569
9.78998	51	66	238	471	658
7.8	51	201	448	173	471
d5	54	91	340	761	784
d2	54	17	391	107	784
d3	82	91	10	76	517
d1	73	17	391	107	784
]]	71	80	334	722	867
depth	89	208	143	405	94
uniques	18	152	73	698	775
arbritrary	23	3	169	603	585
painfully	28	77	436	616	347
a-za-z	71	42	251	90	904
implementation	45	3	488	309	687
df.col1	62	0	215	322	299
guidance	50	276	374	412	93
appended	23	215	483	766	982
how='inner	90	238	214	245	206
hrs	3	212	44	362	633
np.diff()	54	140	384	632	998
summarizing	23	58	185	125	585
pursuing	48	133	167	50	179
setup.py	25	156	328	214	346
||	91	297	316	784	493
rectangle	59	235	471	221	3
do	52	116	128	89	320
dl	15	208	400	58	784
intersect	52	90	224	454	151
dh	90	109	400	0	432
di	62	90	406	0	304
df	15	109	400	568	919
dg	73	17	400	568	304
dd	60	64	261	586	915
kindof	26	163	469	448	862
db	46	243	190	218	642
scalable	28	77	150	417	467
preferred	28	3	150	638	467
da	67	159	409	502	843
pandas2ri	63	185	110	687	365
2.3.10	61	185	213	83	850
h	82	178	481	14	267
01.01.2011	51	81	123	724	512
roundabout	28	77	150	438	467
dx	18	152	331	515	491
dy	33	178	481	515	267
dv	15	25	400	14	166
nasty	28	38	474	616	68
beleive	26	234	390	596	880
to_sql	46	243	190	218	100
ds	15	25	215	407	998
dp	71	221	340	14	784
ndframes	78	131	417	439	581
cleanly	28	244	150	438	467
runs	63	127	295	636	799
pearson	33	138	450	330	999
ema	33	138	53	469	789
cell-by-cell	28	131	150	417	467
df.select_dtypes	17	49	27	165	710
idioms	48	133	451	62	687
re-wrote	19	163	469	458	230
strip()	91	170	56	34	569
multitude	52	279	368	658	525
ems	19	163	120	204	184
analytical	93	282	26	671	179
pd.value_counts	17	30	370	165	776
libell	38	5	91	68	64
erroneous	80	82	153	347	675
reread	1	260	60	444	756
askewchan	19	273	195	631	184
relabeled	73	17	337	761	304
asterisks	91	297	83	784	345
segmentation	63	127	295	636	34
observed	60	99	491	46	789
analytics	94	200	275	39	884
depends	52	126	390	596	927
first_valid_index	57	256	233	597	763
how='count	67	159	409	68	282
discussions	48	122	287	323	415
axis.py	21	24	121	163	666
optimum	45	100	283	467	838
pd.read_csv('expenses	43	162	47	182	246
techniques	48	133	486	62	687
2's	18	152	73	13	809
draws	59	235	471	221	172
plt.draw()	7	44	116	337	92
pasted	68	71	227	670	508
away	66	211	390	450	747
12.000000	51	201	448	715	892
test_data	15	25	340	0	667
csv_read	66	234	390	596	807
symmetric	87	141	450	681	325
]):	62	80	80	722	4
unable	56	122	287	350	313
drawn	59	235	393	221	629
92	86	169	371	607	783
lasso	64	33	296	386	679
encounters	63	166	295	108	145
collections.defaultdict	57	256	56	21	906
pastes	23	234	224	248	709
26min	82	196	309	144	135
we	66	234	390	661	937
wd	82	213	70	144	267
wc	43	39	47	109	246
skipinitialspace=true	43	39	478	593	957
excel-file	23	190	454	6	918
read_json()	49	185	235	185	519
handful	45	100	368	658	525
packaged	25	156	184	376	289
d.series	71	117	466	267	968
pd.series.diff	45	147	283	417	969
wt	73	178	53	427	267
ctypes	45	46	451	430	906
unfold	23	236	185	446	575
stdev	33	95	53	469	896
convertible	92	183	132	603	163
packages	25	156	184	376	289
-6	71	80	334	722	948
downgraded	58	176	50	392	617
linkage	33	270	450	195	999
wx	98	44	213	376	291
342	86	221	371	102	465
limits	53	94	471	620	172
essentially	23	234	390	596	129
to_utc	80	129	153	612	778
cow	19	200	120	204	184
cov	11	95	53	632	999
steep	48	133	167	311	831
ill	16	163	44	643	476
coz	56	234	390	596	880
hardcode	66	234	454	661	355
misunderstand	26	260	59	714	883
receives	11	265	426	760	709
receiver	93	215	26	117	585
exceeds	29	140	389	162	145
requests	94	200	369	39	773
categoricals	10	183	78	603	557
com	46	144	451	430	850
col	62	25	400	0	64
coo	87	141	450	681	325
con	46	243	190	218	702
tough	26	38	167	714	68
abbreviate	53	298	471	620	846
excess	80	211	337	347	675
excelfiles	0	119	356	580	730
mutations	93	173	133	761	775
sync	53	235	471	464	172
rolling_sum	11	136	52	223	105
tons	48	46	368	658	525
dataframe.pivot	57	236	335	381	292
wider	53	298	471	117	172
false	15	0	306	357	502
df['data	67	255	79	68	282
dataframe.to_csv	49	185	316	690	519
*10	27	117	141	267	319
speak	48	133	167	50	687
trickery	11	46	488	430	906
engines	46	243	190	218	642
sub-columns	23	236	337	447	304
.stack	17	30	370	165	86
newish	48	133	167	50	179
edgelist	93	270	70	195	392
list-of-lists	87	141	203	21	973
longdf	73	286	400	447	304
,....	55	188	409	144	62
there're	66	170	83	347	675
initialise	23	131	337	89	982
comprehensions	28	43	308	21	906
flexible	28	77	150	638	467
dozens	52	279	368	658	525
__len__	79	251	315	111	963
pd.series.sum	57	256	235	597	26
families	18	76	337	761	775
stacked=true	7	188	472	10	314
concerning	1	260	440	444	756
levels	89	236	335	360	575
discard	80	211	153	347	675
from_product	57	256	335	58	26
0.14	61	197	493	392	622
coherent	52	122	167	50	476
0.16	58	176	493	392	622
0.11	58	197	493	392	622
0.10	61	197	493	392	622
0.13	61	197	493	392	622
0.12	61	197	493	392	622
629.5317666666666	51	66	238	471	658
backfilling	23	236	45	447	575
apply_along_axis	11	256	233	58	26
integer_id	73	236	445	698	575
colored	59	235	304	221	629
applied	11	131	233	760	298
physician	18	204	445	698	775
`df['year	67	36	79	785	282
east	82	91	331	144	936
publicly	13	200	451	744	377
gnu	4	218	146	388	933
launcher	25	218	213	160	278
hat	94	218	157	396	322
toc_mg	74	129	306	612	778
zlib	49	185	78	627	891
air	60	34	352	352	753
aim	93	215	185	117	743
elementwise	11	131	417	439	813
applies	11	136	233	760	231
aid	56	116	486	50	179
ending	60	99	352	51	753
endpoints	44	269	491	162	789
aic	33	138	216	187	472
mistake	19	163	60	458	861
x.sum()	27	57	249	161	181
cons	48	133	26	62	687
store_id	73	204	13	305	524
conv	62	265	426	491	652
dumped	49	190	454	557	918
x.iloc	71	80	334	506	948
_could_	1	260	440	444	756
pandas.dataframe.plot	7	224	180	10	314
skipping	80	211	112	347	675
cond	54	0	306	591	195
paste-able	37	71	353	115	508
conn	46	243	161	218	702
confirmed	56	82	298	687	365
secondary_y	7	224	180	10	314
perform	52	131	486	89	581
demonstration	37	71	227	200	115
2014-08-29	86	81	242	724	512
recurrent	52	3	150	89	467
ratings.dat	63	262	454	557	369
`'year	73	204	476	564	311
clearly	26	234	60	714	434
b's	73	17	445	698	765
250000	71	221	340	267	995
incorrectly	26	82	345	766	967
np.split	15	256	235	58	853
hhh	62	109	385	755	162
wheel	25	156	184	376	289
independent	6	279	133	292	768
wgs84	93	270	70	195	571
multiindexes	78	38	230	360	538
.split()	67	28	251	90	904
userids	18	152	445	718	775
read_frame	46	243	190	218	100
rain	18	140	199	46	990
possible	52	3	390	89	927
norwegian	91	113	140	363	628
multiindexed	23	236	335	360	985
nevermind	19	163	469	458	230
left_index=true	90	238	214	333	206
chr3r	86	221	340	14	987
,..,	71	221	481	233	930
,...	71	221	340	14	947
minimally	37	71	227	11	807
kept	56	262	179	766	365
ax.patches	7	188	472	10	435
scenario	52	279	227	117	55
thx	19	163	6	289	184
1977	4	221	340	130	867
1600	54	140	340	14	267
thu	38	196	91	144	867
pd.read_csv('file	43	162	47	109	246
eps	27	178	141	298	995
1971	55	25	400	650	948
1970	60	34	434	303	753
ragged	6	43	488	315	57
hispanic	82	91	394	291	936
client	46	200	394	39	884
encounter	66	82	110	687	365
the	6	234	390	447	129
non-trivial	10	123	477	265	279
3pm	60	99	352	51	753
plt.tight_layout()	7	188	116	10	314
birth	73	204	189	305	108
quoted	91	170	83	784	56
numpy.nan	92	129	306	612	493
newton	64	178	216	187	472
43	86	169	371	607	783
datetime.datetime.strftime	27	57	466	502	588
short-cut	28	3	488	315	57
quotes	91	170	83	497	56
thanks	19	163	6	289	184
05:00	86	81	242	724	828
a.combine_first	90	49	443	245	86
00.006000	51	81	123	724	512
50th	60	140	352	51	753
repost	16	222	92	15	23
adding	23	211	45	208	982
transformer	64	33	457	336	768
comparisons	78	131	417	439	581
323	86	169	371	102	465
similarities	33	95	273	464	999
josh	19	273	120	388	318
current_date	54	90	141	434	262
utilization	63	127	295	368	773
alchemy	46	243	190	218	642
belongs	18	287	394	343	775
transformed	23	215	408	446	709
board	53	235	471	221	846
marginal	33	138	53	330	578
evidenced	68	210	440	185	349
sort=false	17	145	317	165	86
fixed-size	6	183	169	603	973
varying	93	279	368	464	585
master_ids.csv	63	127	483	557	911
usable	28	3	488	616	487
mocked	68	234	227	366	744
df.year	67	36	79	68	614
_escape_cdata	43	39	134	157	246
brenbarn	19	273	195	631	117
ave_data	68	215	185	95	542
rng	71	117	443	267	843
d.apply	27	57	466	161	588
800200.2986	51	66	238	471	658
mutiple	23	279	337	447	985
.unique()	67	147	370	68	919
rnr	54	95	141	434	995
apart	52	279	337	447	285
progresses	93	282	70	292	578
220189	54	293	473	356	300
disadvantage	45	3	488	309	487
stopiteration	63	127	413	533	34
png	98	44	19	76	931
hackish	28	77	436	616	467
np.select	57	0	56	205	763
sublevel	73	236	335	360	575
scikit-learn	64	33	296	386	553
table's	89	236	335	360	575
arange	15	188	27	700	319
lapsed	60	99	434	303	990
securities	13	29	271	795	294
df.columns	62	109	334	0	919
533	55	97	438	407	704
persistence	45	133	488	309	1
sparse	87	141	450	681	325
night	60	99	44	643	145
reassign	15	236	483	437	483
revisiting	1	82	110	444	756
accuracy	64	33	7	386	679
538	86	221	438	102	465
countplot()	59	224	180	304	944
summarizes	93	215	185	446	909
str.match	57	256	56	597	18
surrounded	91	170	83	784	56
*=	67	255	79	122	282
sends	63	127	369	368	773
coerce	92	183	305	603	163
glob.glob	43	39	47	109	246
regex=true	38	42	251	90	24
flatten	23	236	335	21	709
critique	1	222	75	15	23
pos2	54	140	384	761	686
confusing	26	82	110	714	68
.shape	71	80	218	722	526
cumcount	57	136	52	223	105
np.mgrid	71	258	27	700	667
purple	59	91	304	221	629
df.index.tolist()	15	147	27	0	919
unavoidable	45	43	474	417	57
/	6	234	146	388	318
lambda1	63	82	213	557	365
asking	1	260	345	714	434
denied	21	231	213	487	34
someway	52	279	337	661	846
geocoding	48	270	275	195	377
peek	68	211	264	108	585
plt	7	224	429	113	270
pls	10	123	477	265	371
repository	25	156	184	338	531
rescale	59	235	471	620	944
pose	1	260	92	15	23
undeleted	1	260	60	444	756
illustration	37	71	227	200	115
constructive	1	222	92	15	23
restructuring	45	43	264	606	687
substitution	91	297	56	89	695
peer	1	222	92	15	23
post	37	71	353	115	508
properties	53	279	488	62	450
qcut	89	136	419	629	669
comment=	43	39	478	593	957
where's	63	116	110	687	880
rstudio	48	46	451	183	850
obj	62	265	426	58	963
months	60	99	326	51	753
accepts	11	265	235	74	853
continous	44	178	70	515	571
horizon	54	178	409	14	129
shared	53	279	224	368	151
min_period	44	269	491	46	789
obs	18	152	445	23	108
considerations	48	38	488	62	687
noticed	56	82	179	559	967
tsplot	7	224	180	304	857
pays	10	123	290	534	557
xyz	55	25	409	14	784
float	92	183	169	603	163
np.r_	71	80	334	722	948
bound	6	126	389	162	924
ditto	60	278	384	14	345
candlesticks	59	235	471	221	172
*$	38	42	251	90	24
report_date	18	140	384	305	784
tprep-1	71	78	141	298	995
capped	93	270	199	368	773
sub-dataframe	15	25	58	407	139
balanced	93	141	90	446	585
pandas-specific	28	38	150	438	57
stumble	16	116	60	394	849
strangely	26	82	179	315	365
wan	52	234	128	447	320
searchsorted()	57	256	488	597	26
compression	10	123	78	627	891
mutates	63	265	426	491	166
segment	33	235	70	292	491
checkmark	1	222	92	146	23
truncated	68	71	227	366	842
1's	80	151	73	698	717
mutated	87	141	203	342	800
accordingly	66	126	390	437	927
quirks	48	46	451	62	687
way	52	77	150	438	467
150,000	3	212	107	319	633
np.genfromtxt	43	74	235	690	519
was	56	163	469	559	967
-thanks	66	234	390	596	756
lowest	29	95	384	435	157
decoded	49	113	316	470	56
sqlalchemy	46	243	190	218	100
lowess	64	46	216	183	472
tooltips	59	224	471	304	944
becoming	26	38	474	50	68
encodes	6	210	457	603	768
encoder	64	33	457	535	768
2012-06-09	51	81	123	724	512
`'id	73	204	476	564	311
.set_index()	57	236	335	58	26
decoder	48	46	451	430	850
encoded	49	113	140	363	628
true	15	0	306	357	502
`'in	15	25	272	407	272
days=1	92	36	434	502	780
normalising	23	190	275	208	902
np.arange	17	117	27	267	319
str.contains	57	0	56	34	569
responding	19	273	195	289	184
dataframe.merge	23	279	337	447	129
page_id	54	287	384	14	775
maximum	29	95	53	162	998
converters	57	74	212	690	15
crystal	19	163	120	714	184
00:10	86	81	242	724	512
pre-defined	52	234	319	292	606
isin	57	0	56	597	569
optimisation	28	38	283	467	57
mtd	60	140	141	464	995
sklearn	64	33	457	386	553
1.1.1	58	176	50	701	141
1.1.0	58	218	157	400	141
non-string	6	183	169	603	163
guesses	6	100	283	467	365
deque	28	77	150	417	906
chars	91	113	83	784	56
abstract	28	3	350	714	487
));	71	117	334	267	968
evidence	26	82	110	495	313
.reset_index	17	49	72	165	86
guessed	26	183	169	100	967
expertise	16	163	167	15	434
filelist	43	109	161	109	246
json.dumps	57	185	426	470	963
))"	38	30	71	700	776
spark's	64	46	451	39	553
)))	27	117	466	267	338
deap	26	82	110	106	687
scared	94	200	264	467	179
physical	94	61	231	368	234
.gt	15	0	246	439	502
vars()	57	265	426	58	963
stake	45	100	384	435	838
refactor	28	43	150	417	487
reality	3	212	107	319	633
interested	52	279	345	50	434
holding	23	215	376	342	431
test	68	234	227	11	909
double-quotes	91	170	316	784	56
tripped	56	261	298	52	846
shrink	45	100	264	342	822
artificially	93	279	486	117	585
scored	18	16	394	713	913
s.loc	71	80	334	722	169
hashtable.c	21	24	367	479	637
o'clock	60	140	318	82	594
welcome	50	276	374	412	93
convincing	16	38	167	436	57
update	1	260	195	444	756
complains	79	262	315	533	34
belive	45	3	488	309	687
let's	66	211	185	23	937
concurrent	45	200	407	368	773
16gb	94	61	231	84	322
))`	27	117	466	405	338
scores	18	95	53	343	542
configs	94	200	369	368	773
])'	71	80	334	722	867
tracked	63	82	295	108	145
pandas.dataframe.to_csv	49	185	112	690	519
abscissa	59	94	471	620	491
reset_index()	57	49	335	381	103
normally	6	234	390	596	292
interval	44	269	491	46	789
modules	25	156	184	376	609
numpy.corrcoef	33	138	450	330	999
together	23	279	224	248	151
str.slice	57	256	233	597	763
fact	6	234	390	315	365
pd.np.nan	67	255	79	68	282
elementtree.pyc	21	24	121	163	666
drop_duplicates	57	49	138	381	103
np.random.seed	68	117	27	700	319
]]`)	71	25	272	407	948
songs	18	173	394	343	542
df.index.labels	71	80	334	722	948
concept	26	133	488	309	55
switched	56	82	298	559	967
`'2014	38	81	476	724	329
`'2015	92	81	476	586	329
global	11	265	426	491	196
datum	44	282	389	292	997
interactively	98	44	487	160	983
switches	60	137	384	437	145
anand	19	273	195	631	184
grateful	50	276	374	412	93
rectangles	59	235	133	221	172
yyyy-mm-dd	92	64	434	586	915
layers	93	173	26	368	585
x_test	64	258	27	667	526
certainly	28	38	474	436	57
code's	26	260	60	714	55
629.5080666666667	51	66	238	471	658
dbo	46	243	190	218	100
zone	92	54	333	786	530
flask	94	200	332	39	773
graph	59	235	471	304	944
flash	94	61	231	84	234
pandas.dataframes	78	43	27	368	166
gigs	3	61	231	275	234
rightmost	80	129	384	784	345
tracker	61	18	108	288	279
permanently	66	126	483	437	982
radviz	48	46	180	304	944
page_verified	71	80	334	130	867
presumed	6	82	179	766	365
a's	54	17	445	698	765
recoding	52	279	337	89	768
predicate	91	90	246	454	502
jreback	61	18	108	444	756
%pylab	98	44	487	337	983
orthogonal	53	279	151	62	585
terminate	63	127	295	636	799
include_start	57	74	235	132	195
work-around	61	77	436	436	279
seemingly	56	82	110	687	880
umm	26	38	469	448	880
anonymous	11	265	222	760	231
entries	18	76	337	698	775
trouble	56	122	110	50	179
np.maximum	11	256	233	632	763
rotating	59	94	471	620	574
data_source	55	196	309	144	465
cunningham	19	273	195	631	756
presented	68	260	440	366	909
altering	52	126	45	89	902
turns	56	137	179	559	709
gui	98	44	487	114	39
fragile	28	77	474	616	68
suprised	26	82	345	533	434
p	54	178	481	14	267
setitem	78	43	264	342	974
q	68	144	120	366	64
tz=none	38	81	242	724	619
gut	28	77	150	438	470
guy	48	203	298	466	587
.ix()	78	226	272	270	139
hdf5store	46	190	78	627	175
eventlookup	27	57	466	565	153
hte	52	234	128	89	320
pd.concat	90	109	443	245	206
verifiable	37	71	353	115	917
gene1	54	17	171	761	784
repetitive	28	77	474	616	6
discover	26	82	167	50	880
initializer	57	265	426	491	853
`df['time	67	36	79	785	366
cost	45	100	244	582	838
populating	23	215	45	208	982
initialized	23	265	483	491	982
=o	92	293	305	317	526
bold	59	94	304	221	172
re-sampling	44	159	228	756	684
hdfs	49	190	369	627	773
value1	73	17	391	568	304
sharex	7	224	116	10	749
candle	59	235	199	435	157
assistance	50	276	374	412	93
rollup	48	133	486	117	687
shares	13	29	271	435	294
uniform	6	269	337	93	927
month-day	60	99	434	303	349
sequential	52	211	337	447	985
time-consuming	45	38	474	417	347
staff	82	173	128	713	320
satisfy	52	0	246	763	502
.shift	67	40	215	122	995
-100	54	140	340	14	784
predicting	64	138	204	187	472
unsure	26	116	345	50	434
2014-04-29	51	85	123	22	512
commandline	25	231	213	160	369
genes	93	76	133	761	775
performancewarning	63	262	413	740	34
gawk	43	39	316	109	246
downloaded	13	217	275	744	377
coloring	59	235	304	221	944
root's	1	260	195	759	117
hoops	45	43	474	436	57
appears	6	234	179	766	365
change	6	126	390	437	927
`df['new_column	67	255	79	68	282
sending	46	127	275	491	902
incoming	93	190	275	64	585
coerced	92	183	297	603	163
hdf5	10	190	78	627	557
backticks	91	170	83	497	56
`kind='bar	7	224	409	10	435
braces	91	192	20	497	893
coerces	92	183	169	603	416
poisson	33	138	216	330	472
upvote	1	222	92	433	403
usually	45	43	488	309	57
listofdfs	62	25	80	0	948
01-04	86	34	242	82	594
complevel=9	10	123	78	155	891
country's	18	152	326	515	990
.exe	25	156	332	160	291
431	54	258	340	700	667
f0	54	178	481	233	267
pancreatitis	38	196	309	144	125
regardless	6	234	390	596	129
applymap()	11	256	56	597	26
r-style	64	138	216	187	472
user_input	67	36	79	502	366
marked	1	260	440	444	756
.add	17	80	215	632	948
sincerely	26	260	60	444	756
stings	91	170	83	784	345
marker	59	224	304	221	172
compete	66	260	390	444	756
rarely	78	38	230	315	57
bid_price	54	207	141	434	995
market	13	29	271	156	294
flavors	46	243	190	577	642
jan	4	34	318	82	561
numpy.int64	79	251	315	111	870
columns=none	43	117	27	667	432
%%timeit	68	71	227	345	969
allfiles	43	109	161	109	246
prove	26	116	110	436	807
dish_specific_perf	67	228	206	122	916
f7	82	66	238	471	658
coalesce	11	3	233	760	231
live	26	43	167	436	179
wonderfully	19	273	6	289	184
https	68	200	440	323	377
selects	15	208	272	306	538
marginally	45	100	283	345	969
sklearn-pandas	64	33	457	386	553
rainfall	44	99	491	46	990
ambiguity	78	226	230	714	662
club	18	173	394	713	542
+0200	51	81	123	724	619
clue	26	116	287	764	313
i4	79	293	169	317	163
`{'1	86	221	340	102	867
substraction	80	129	337	766	778
terminators	49	185	316	470	519
logarithm	33	138	216	330	472
graphic	53	44	19	76	517
ibm	13	29	271	156	407
pushed	61	259	298	108	377
quant	82	91	10	144	125
by_tz_os.size()	78	251	426	58	963
cap	29	140	389	435	145
hexbin	59	224	180	304	944
cat	32	91	10	343	64
.unstack()	17	30	370	165	776
indexed_orders	23	215	185	437	129
incidents	18	152	199	713	990
syntactically	28	38	474	436	855
cam	66	222	92	15	807
cal	82	25	340	14	784
element-by-element	87	131	417	439	826
spx	55	237	47	109	246
heart	16	163	167	50	55
dedicated	48	200	451	39	850
expanding	33	58	53	469	231
pd.datetime	4	221	434	82	867
didn't	26	163	469	458	967
p&l	44	152	53	469	368
topic	1	222	421	323	415
weighting	33	138	216	469	173
posing	1	260	60	444	756
refine	1	260	227	759	807
exclude	52	211	153	447	606
peptide	54	47	481	404	267
rescaling	59	94	471	620	491
occur	6	279	337	766	775
comma-delimited	49	71	112	507	918
productive	1	260	92	444	807
24gb	94	61	231	84	234
,.	38	221	98	715	904
iterator=true	43	39	478	147	488
spreads	33	95	53	469	578
non-business	80	99	491	46	789
.codes	67	255	79	68	282
freezes	63	127	295	636	799
write	49	190	264	89	918
.sum()	17	30	370	165	776
criterion	52	0	246	763	502
.dtypes	67	117	161	72	919
1.2.0	58	176	50	701	617
,?	38	42	251	90	382
stats.norm.pdf	33	138	216	330	744
??	26	116	128	596	320
snipped	68	260	195	444	756
product	18	152	53	698	108
test.py	21	24	177	163	871
5.1	51	201	448	173	471
sp1	73	17	306	427	311
dive	16	122	298	50	476
use	66	234	390	89	292
residues	93	76	133	761	800
implicity	78	126	477	597	166
?.	52	116	415	596	320
pasting	37	71	19	670	508
csv.writer	43	39	112	690	519
0.75	86	78	141	669	333
commit	61	197	108	392	617
annotation	59	94	471	221	172
?!	26	234	128	596	880
recursive	45	58	7	417	231
na_rep	43	74	235	690	955
countvectorizer	64	33	457	336	553
remember	26	234	390	596	880
whenever	66	234	390	108	606
candles	44	282	491	23	990
futures	13	1	271	521	294
explicit	78	43	150	309	57
take_last=true	17	49	215	381	86
progressively	56	46	227	11	909
----------	51	66	238	471	658
object's	11	265	426	126	450
typical	45	38	474	117	585
tagged	1	210	440	466	455
serving	23	200	275	446	902
colz	73	90	400	568	304
d_time	52	3	390	89	416
correlation	33	138	450	330	999
excludes	80	129	0	201	675
indeed	26	82	469	458	880
displayed	53	44	19	76	479
cols	15	25	327	697	919
utilize	45	3	264	89	687
succesful	52	279	337	766	129
brain	16	122	320	643	879
np.cumsum	11	256	233	632	26
tagger	52	133	319	380	585
statistical	64	46	486	671	472
november	60	34	352	51	753
whats	52	116	128	596	320
cold	55	237	324	278	936
still	26	234	390	596	880
colb	54	17	100	212	998
birds	23	76	191	447	304
cola	54	17	100	212	998
\r\n	43	113	316	599	56
df.convert_objects()	10	183	305	317	232
1831	29	140	389	108	145
builtins	78	265	426	430	906
to_pydatetime()	57	256	233	185	26
acknowledge	1	260	320	759	807
geocode	93	270	275	195	542
.items()	62	109	80	0	904
""`	91	297	316	579	382
make_df	11	265	426	760	292
yaml	49	185	112	430	519
window	33	138	491	469	789
multiline	53	44	19	76	517
refbase	91	297	476	564	493
dtype('int64	38	5	91	130	619
.tolist()	67	147	79	68	919
inefficiency	26	38	110	467	807
sub-sample	52	215	133	23	585
.12	58	176	50	512	622
.13	58	176	493	392	622
.10	58	176	50	512	617
.11	58	176	50	512	617
.16	38	146	219	512	471
.14	58	176	50	512	141
.15	58	176	50	512	617
col7	73	17	442	427	311
100,000	3	212	107	319	633
speeding	45	261	283	324	838
alist	62	25	400	0	435
col3	73	17	391	427	311
introduce	6	126	153	315	927
col1	73	17	400	427	311
1955	4	34	318	82	594
1954	60	34	318	82	992
mutliple	23	279	337	447	985
1950	60	34	318	82	992
1953	60	34	318	82	992
half	3	211	390	362	822
not	26	234	390	596	880
nov	4	34	312	82	548
now	66	234	390	596	880
df.info()	10	71	227	455	28
discuss	61	124	108	236	279
nor	6	234	390	596	638
nos	13	29	199	435	157
wont	66	234	390	661	888
down	66	261	264	108	145
m_i	27	178	481	585	995
splines	33	138	216	330	472
"")	91	42	251	90	382
locator	7	94	180	620	274
rebalance	13	29	271	435	294
anonymize	68	71	227	115	508
redundancy	45	100	244	790	68
pd.options.display.encoding	38	113	316	470	955
intrigued	26	260	60	438	880
behaves	78	265	233	258	166
a.item()	77	56	64	496	101
pycharm	25	218	487	160	983
entirely	26	38	345	714	434
queryable	10	123	78	155	891
last	80	211	384	347	939
em	56	170	454	6	81
chunksize=1000	43	39	478	147	488
domain	6	126	404	718	775
en	38	272	309	144	125
prompted	1	260	110	444	756
ed	19	273	6	289	184
eg	6	234	390	447	129
p-values	64	138	216	187	472
ea	73	17	185	515	304
yeah	19	163	469	458	230
`mode='a	43	74	478	690	853
challenges	52	279	390	62	129
shouldnt	66	211	128	46	784
ex	18	140	133	14	129
year	60	99	326	51	753
eu	53	234	128	93	793
wavelength	59	235	471	620	571
naming	23	236	45	208	615
calling	11	265	426	760	292
eq	57	256	56	597	763
es	18	173	394	698	775
er	18	58	449	151	990
`'w	60	159	476	564	311
shown	68	215	440	366	909
accomplish	52	116	150	438	467
shadowing	11	265	426	491	196
space	91	170	83	784	345
furthermore	6	234	390	596	927
algebra	87	131	450	681	824
`'x	80	129	476	564	311
m5	54	282	70	404	267
increase	45	100	283	582	838
`'d	80	159	476	564	311
pandas.panel	23	236	152	58	973
iteritems()	62	256	385	410	142
`'c	73	297	476	564	252
`'`	91	170	83	497	56
side-by-side	53	279	471	248	151
`df['t	67	36	79	785	282
receiving	63	262	413	533	34
viable	45	38	35	417	687
uwsgi	94	127	369	368	773
gbs	3	61	231	84	234
rebuilding	56	82	45	208	617
random.choice	15	30	27	0	292
cars	93	173	199	718	453
..,	71	117	141	267	319
args	27	142	222	760	618
lmt	92	54	333	413	530
argh	19	163	469	458	230
inputting	23	190	275	6	902
dependencies	25	156	184	376	289
advantages	45	43	488	62	687
label='left	38	159	409	564	125
line-by-line	49	58	300	557	911
case=false	57	42	56	34	569
inevitable	45	38	474	616	57
card	54	173	10	14	995
e2	27	57	466	565	588
fixed	61	197	108	392	617
`'2	73	297	476	564	311
`'0	58	146	476	512	493
`'1	38	297	476	512	493
pvalue	82	95	53	453	896
transition	60	140	384	292	747
gb2312	49	113	140	363	628
british	18	173	394	713	753
honest	26	38	474	448	434
int	92	183	169	603	163
concrete	37	71	353	115	934
2015-06-21	51	66	438	471	465
amazingly	19	163	6	204	347
promotion	63	262	413	487	34
512	3	212	371	411	76
515	54	17	340	14	784
suffice	66	234	390	596	292
numpy.argsort	15	256	27	632	26
lambda	27	57	222	161	588
blind	19	163	469	458	230
xi	33	178	481	330	267
xn	54	178	66	233	671
xl	0	119	356	580	730
omitted	6	234	153	766	967
variables	64	279	457	187	768
cpus	94	61	231	84	234
comprised	23	76	337	761	431
xx	86	81	242	724	465
xy	61	260	494	505	279
directly	23	3	390	89	292
15000	86	169	371	411	783
comprises	93	76	331	761	542
xs	17	208	272	270	139
message	63	262	413	533	34
ways	52	279	150	62	525
tomorrow	16	163	44	643	476
xt	71	258	27	700	667
size	3	100	244	464	822
1996	86	34	318	82	594
sheet	0	119	356	580	730
silent	63	82	230	315	365
set_xticks	7	256	116	10	314
dayfirst	43	74	212	690	745
crossings	59	235	471	136	578
weekdays	60	99	352	51	753
remotely	26	38	451	661	850
one-level	89	236	45	208	575
checker	11	256	222	760	695
\xlrd\	21	24	121	163	666
timezones	92	54	333	413	530
initialising	15	25	400	0	166
national	13	29	271	156	294
friend	19	273	195	204	41
,,	86	169	128	607	947
mostly	56	133	474	50	179
that	6	234	390	596	129
variable1	27	178	222	161	267
variable2	27	30	222	161	776
df1.a	73	17	400	427	998
df1.b	54	90	400	427	998
df1.c	54	17	400	427	998
0xe9	38	32	455	424	625
.copy()	67	49	138	590	974
pnl	54	140	384	435	419
x=	7	188	258	10	435
x2	54	178	481	233	930
x3	82	91	66	233	930
savetxt	57	256	27	58	26
x1	54	178	481	233	930
than	28	234	390	345	57
x4	54	178	481	233	930
users\hanans\appdata\local\continuum\anaconda3\lib\	21	24	121	163	666
threads	94	127	369	368	773
optimise	45	133	167	710	838
edition	58	218	157	400	141
browsed	56	122	287	110	313
numpy.average	11	3	233	89	231
kludgy	28	77	150	616	467
transferred	46	190	275	6	773
accesses	78	43	385	491	649
kludge	26	298	436	616	880
x_size	51	221	219	715	200
apples	54	91	21	464	320
fruits	73	17	445	119	108
))))`	27	117	466	267	338
store.select('df	67	30	466	161	588
decompose	93	282	70	671	585
browser	98	200	487	114	377
fork	94	127	369	368	79
troublesome	49	170	112	661	807
dataframe.sort()	78	126	488	315	927
remained	56	215	179	437	495
correction	19	260	195	458	861
ticklabel	59	94	471	221	172
base.py	21	24	367	163	666
13th	60	99	352	51	753
df['year	67	36	79	502	282
%in%	11	144	233	183	695
distorted	29	235	389	221	514
`'value	44	159	476	564	311
notimplementederror	79	65	413	740	34
recover	23	126	153	437	747
df.divide	90	238	443	245	86
numerics	92	183	169	603	416
computationally	28	77	474	417	347
offering	48	133	488	309	687
df['column	67	255	466	68	588
vectorized	28	131	163	417	490
z-scores	33	152	53	469	368
1000000	71	117	141	700	667
terrific	19	163	469	204	230
equipment	18	173	97	718	453
x-	59	94	471	620	571
packed	49	190	264	6	709
roster	93	173	394	713	453
forming	23	215	45	446	902
objective	52	215	185	446	743
similiar	48	122	440	309	442
q&a	1	18	108	323	415
collections.counter	11	256	56	21	906
code-block	68	211	390	596	129
begin	66	211	128	52	320
denoting	80	129	337	201	833
price	13	29	271	435	157
neatly	52	58	150	89	467
isnan	79	65	297	675	910
cogroup	11	131	417	223	581
.grouper	17	30	370	165	776
importantly	66	116	128	596	807
rationale	16	116	110	714	55
successive	52	279	337	464	999
03:00	86	81	242	724	512
infs	80	129	0	201	778
]	71	80	334	722	948
\lib\	21	24	121	163	216
processline	27	30	222	161	618
forever	3	127	295	362	347
flawlessly	67	112	469	596	282
largish	45	100	264	417	838
thousands=	43	53	478	593	488
dream	28	38	81	436	57
implications	45	133	230	467	687
script	63	127	454	557	369
sunset	60	282	189	305	990
diagonals	59	235	471	515	491
row-oriented	49	190	78	384	557
professional	16	133	167	15	109
duplication	23	58	45	208	911
typically	6	234	390	309	57
filing	61	18	108	210	279
clustermap	59	224	180	304	944
'"'`	43	74	235	690	853
2.389	92	293	358	612	526
german	13	29	271	71	294
ds2.values	71	80	334	722	948
discovered	56	82	298	559	967
miniconda	25	156	184	382	278
complaints	93	173	199	713	990
df.to_string()	98	44	161	470	92
whatsnew	61	197	108	392	279
225	21	169	367	445	161
fifth	18	278	384	698	939
crashing	63	127	295	636	799
df.values.ravel()	17	117	27	667	526
pivots	23	236	444	159	575
upgrade	58	176	50	382	563
ratio	33	95	53	435	255
title	53	224	471	221	320
proportion	18	152	73	177	990
only	6	234	390	447	129
developed	48	83	451	376	609
invisible	53	298	83	719	846
overwritten	80	211	483	766	982
read_sql	46	243	190	218	100
series.astype()	57	256	56	597	763
followings	68	71	227	366	909
np.repeat	17	147	27	632	763
.iloc()	78	226	272	270	139
truly	52	234	390	661	880
128mb	3	61	231	275	347
closing_price	54	129	306	612	784
gensim	87	46	451	376	609
`df.plot(kind='bar	7	188	409	10	314
else's	16	116	167	50	807
queue	63	127	143	108	773
c++	25	46	451	376	609
keyed	23	76	13	21	350
privacy	93	71	26	467	807
losers	18	152	53	469	368
to_dict	57	256	335	381	26
iqt	54	293	473	356	300
3-digit	93	270	26	515	542
everything's	19	163	469	458	230
time.strptime	92	293	434	502	963
9.74401	51	66	238	471	658
physically	66	126	454	437	927
re-sample	44	99	491	46	789
900k	3	212	454	347	345
ends	63	137	295	52	145
np.random.randn	90	117	38	267	968
anchored	44	99	228	756	684
minmax	55	159	409	650	64
namely	89	234	337	447	129
actively	48	133	167	467	687
set_ylabel	79	251	315	111	413
transpose()	57	256	233	505	26
sport	18	173	394	343	108
index=false	43	39	478	147	488
concern	45	260	60	467	838
pd.read_fwf	43	39	47	109	488
palette	7	224	304	221	629
autoscale	7	224	116	10	314
tackling	28	116	150	438	467
?!?	26	116	128	714	320
workbooks	0	119	356	393	730
materials	93	173	26	117	542
colours	59	224	304	221	264
jdata.keys()	62	109	80	0	919
3	54	221	340	14	110
math.log10	27	30	222	161	181
rephrase	1	116	128	498	320
0.16.2	58	245	403	400	622
0.16.1	58	176	493	392	622
between	6	279	337	464	999
it	66	234	390	596	880
import	49	185	213	545	369
justified	26	170	83	766	959
dummies	64	33	457	515	768
dirviento	82	95	53	141	784
urban	82	270	199	292	990
notice	6	234	179	596	129
2014-06-15	86	81	242	724	201
prettiest	28	77	436	616	467
analyzer	48	200	451	39	377
blame	26	71	227	596	807
non-negative	33	138	216	330	491
productcategory	73	236	400	564	311
random.sample	71	117	27	700	319
9000	3	212	107	319	633
analyzed	93	282	26	117	179
article	48	203	421	323	415
pixels	3	235	70	373	172
index_col=0	43	39	478	182	488
all_info	23	76	185	6	918
northamerica	80	129	306	612	778
installation	25	156	184	382	289
`'str	92	183	476	603	493
resides	94	200	454	557	369
fliers	59	235	304	221	172
varname	55	237	324	650	936
enabling	53	298	486	52	902
embedding	53	44	487	221	517
_ref_locs	79	251	315	111	963
df3.columns	90	80	443	165	432
wheels	25	156	184	338	289
delete	80	211	483	347	675
groupby	11	136	52	223	105
comes	56	261	298	559	587
nearby	93	270	133	292	606
reindex	89	236	335	652	103
solving	50	116	374	438	849
passenger	18	204	483	568	982
df.index.time	67	228	79	502	916
overview	48	18	421	323	415
set_levels	57	208	335	381	103
153	86	169	371	607	161
dispatch	45	3	488	417	581
exploit	45	100	264	467	927
152	86	169	371	607	783
learning	48	133	296	50	831
interchangeable	78	279	488	62	373
moreover	6	234	390	596	129
fruitful	56	122	287	350	313
eachother	93	279	133	23	491
groupedby	23	236	483	360	575
most	52	234	390	661	585
np.random.randint	71	117	27	267	319
cares	26	43	298	436	880
hour_list	7	188	472	10	435
2pm	60	16	84	713	36
invert	15	0	246	439	502
0.6.0	58	176	50	701	141
informed	6	126	230	315	365
pandas.read_excel	49	119	356	690	519
`df['a	67	255	79	785	51
drop-in	78	3	488	422	687
n_samples	87	258	203	700	667
df['col2	67	255	79	68	282
rebuilt	89	126	390	315	617
.append	62	25	334	0	948
mpld3	48	18	180	323	415
1ms	3	100	283	345	692
differed	54	140	337	464	129
8-b	92	183	169	691	163
1mm	3	212	107	319	633
external	5	200	200	39	900
stems	26	82	110	687	725
suspected	19	163	469	458	967
query()	57	256	233	381	976
ruby	48	144	10	529	67
a.bool()	77	56	64	496	101
soccer	82	16	226	713	913
4-5	3	212	107	319	633
developing	94	200	221	39	179
these	52	279	337	661	585
plugin	94	218	213	39	291
alter	66	126	483	437	982
trick	26	234	436	759	880
winsorize	45	3	488	417	687
pythonanywhere	46	243	190	218	642
15%	29	100	389	345	255
person's	18	173	394	761	542
2015-10-16	51	85	123	780	512
yi	54	178	481	330	667
rolling_mean	11	136	52	223	231
in-depth	1	260	227	15	807
orientation	59	94	471	620	944
stdout	49	185	255	557	369
soil	93	235	257	515	491
metric	33	95	53	515	337
pandas.timestamp	92	104	434	20	416
agnostic	94	200	26	39	884
-like	78	43	46	430	906
bias	33	138	7	330	472
accounting	93	282	26	93	487
return	15	265	390	760	166
datastore	46	190	275	6	982
floating	92	183	358	131	970
worry	26	43	230	448	57
fulfilled	54	0	246	763	502
dataframegroupby	79	251	315	41	418
develop	48	46	451	50	179
assure	1	260	227	444	807
yn	54	178	481	233	930
11.0	58	176	50	75	617
insidious	26	43	230	436	880
intelligently	66	3	264	89	307
figuring	16	116	167	50	179
epoch	92	104	434	303	416
followers	18	173	394	343	775
')	67	255	409	68	527
lite	53	215	185	6	585
figures	53	44	19	729	944
document	49	76	319	6	918
\matplotlib\	21	24	121	163	666
numerals	73	76	337	761	349
00:30	86	81	242	431	201
investigated	48	46	298	687	415
pyinstaller	25	156	332	376	291
closest	52	211	384	464	404
n-dimensional	87	141	450	681	325
na_values	43	74	478	555	853
initialization	49	265	426	342	911
caches	78	123	283	345	557
8000	93	212	107	319	542
vista	94	217	157	396	322
np.meshgrid	57	256	233	597	26
fruit	18	152	445	713	108
attributes	23	265	426	791	450
data_frame	68	215	185	446	64
validate	66	211	319	447	606
']```	67	255	79	68	282
.value	67	147	466	502	588
`['header	73	17	391	427	311
cashflows	93	29	271	713	294
ccy	73	76	185	698	431
eventual	23	215	185	446	743
distrib	94	200	454	557	377
nx2	87	141	203	748	973
x0	71	178	495	233	930
tar.gz	25	156	213	557	291
coo_matrix	87	141	203	681	325
severe	45	100	283	467	838
recl_2009	54	91	309	144	267
isinstance()	11	256	233	597	906
extensible	28	3	488	430	487
alleviate	45	43	488	309	687
coordinate	59	19	133	195	580
ccc	73	17	391	427	311
maxlen	71	117	27	267	319
heaps	19	163	6	204	184
merge.py	21	24	121	163	666
2.csv	73	39	47	109	246
rule3	54	17	141	427	998
vectorised	11	256	163	417	490
heapy	94	61	231	84	234
adjusted	13	29	271	156	157
valuable	50	276	374	204	93
outputing	49	190	454	6	918
groupby.apply()	11	136	52	223	231
relevant	68	234	227	447	909
dataframe()	11	256	233	58	963
pre-merge	3	100	107	209	822
touch	66	211	108	108	279
co	55	196	309	144	125
%d-%b-%y	38	64	145	586	550
staging	46	243	190	218	642
struct	49	185	488	430	906
sybase	46	243	190	218	100
lapack	25	156	184	376	289
mmap	45	46	451	430	906
unpickler	78	265	411	83	450
cl	54	140	384	14	998
mirrored	52	279	450	292	999
improvement	45	100	283	345	969
9:35	86	81	242	431	201
9:30	60	81	242	431	201
treatment	6	279	53	93	231
versa	23	286	224	437	387
struck	26	82	110	616	68
unpickled	45	61	369	368	773
momentum	33	138	53	469	896
real	26	38	227	11	807
hover	53	224	487	598	944
read	49	190	112	6	918
outermost	29	95	133	162	491
repetitions	18	173	73	25	775
calendars	44	99	228	756	684
amd	94	217	157	396	322
gonna	19	163	469	693	230
numpy.savetxt	49	185	264	97	519
early	61	197	44	331	617
user_ids	18	76	13	761	542
dataframe	23	215	185	446	585
dishes	54	287	73	698	784
using	56	234	390	89	292
execution	45	127	295	636	799
0.55	54	78	141	88	995
amt	18	152	53	713	368
amv	18	95	53	698	998
developers	61	18	108	288	279
meddescription	73	90	214	454	304
utterances	91	76	319	6	542
pounds	82	140	84	14	334
smell	26	43	230	436	57
sma_22	67	293	473	356	526
rearrangement	78	43	230	151	581
miracle	19	273	6	289	184
rolling_window	11	136	233	760	231
sundays	60	99	352	51	753
benefit	45	100	283	467	687
group-wise	23	58	53	469	368
t	55	178	481	14	267
occasions	56	279	167	62	581
output	68	71	227	366	744
downward	23	211	224	447	872
employees	93	173	26	718	453
12.1	86	201	460	173	471
hacky	28	77	436	616	467
exposed	78	3	488	309	487
uppercase	91	297	83	784	56
panadas	53	279	233	315	585
hacks	28	77	436	616	467
exposes	6	265	426	430	963
id_list	15	90	400	0	843
sp500.index	27	188	289	502	588
duration	44	140	199	303	990
questionnaire	93	173	26	117	585
pandas.pivot_table	11	136	52	223	766
nonzero	15	0	73	632	998
dfrand	54	129	306	612	778
cp	51	178	360	404	318
views.py	98	231	454	557	369
1852	54	140	384	23	633
stringio	43	185	112	690	820
7.75374	51	201	448	173	284
conservative	6	38	389	352	57
results.csv	68	215	454	366	744
struct_time	92	104	434	185	349
.contains()	57	42	56	34	569
dtype=float	67	117	305	667	526
my_df	68	262	47	58	744
.75	54	78	141	669	995
mangling	23	58	486	447	585
wheat	23	236	335	515	641
pandas.core.series.timeseries	79	251	315	111	963
business	44	99	228	51	753
8.0	51	201	448	173	471
asterisk	66	211	83	347	345
equivalent	11	144	488	183	695
tdf	62	25	400	0	919
tde	49	190	275	6	850
utilities	48	46	488	183	850
credits	19	222	120	15	184
non-index	89	90	335	454	575
1935	51	85	438	102	465
explicitely	15	208	272	270	292
assemble	23	58	264	209	709
leftover	26	234	153	436	880
exciting	48	18	167	436	476
throw	63	262	413	533	365
3.4.2	58	245	403	400	141
comparison	6	131	417	439	502
10**6	67	147	141	122	692
3.4.1	58	245	403	400	141
central	33	232	389	93	578
0.012207	51	66	238	471	658
df.info`	68	71	227	455	909
chop	66	137	112	347	709
index.py	21	24	367	134	994
data.csv	43	39	23	109	246
invested	93	29	271	156	294
sry	26	260	227	596	807
backup	37	71	353	115	807
processor	94	61	231	84	322
600809	82	196	91	144	613
researching	56	122	287	110	313
side-note	78	43	488	309	687
8.54	71	25	334	130	309
inclusion	6	138	389	330	373
x-value	59	235	471	620	172
closed='left	44	159	476	564	684
numerically	6	145	317	315	373
yourself	66	43	390	89	807
ts_placed	18	204	383	305	108
inverting	23	279	246	447	502
elementary	16	122	60	50	434
nowadays	61	43	488	309	617
your	68	234	390	596	807
loc	78	226	272	270	139
weight	33	95	160	343	896
lod	29	271	389	467	725
area	59	235	471	221	944
qualifying	18	211	384	763	775
unmodified	26	234	483	513	365
lon	82	270	133	195	267
json	49	185	275	6	918
lol	19	163	469	458	230
bucketing	44	269	491	371	669
operator.itemgetter	27	30	222	161	181
series.sort()	78	226	138	632	166
low	29	29	389	435	157
lot	19	163	368	658	525
`)`	80	129	0	497	382
transitioning	48	203	451	50	831
df._get_numeric_data()	11	256	233	597	292
x.unique()	27	30	222	161	98
assumes	6	234	390	74	129
jones	82	196	309	144	936
delayed	19	163	44	643	184
non-float	6	183	169	603	163
posterior	33	138	389	292	578
629.508	51	66	238	471	658
shapefiles	53	270	275	195	773
trying	56	215	345	350	179
copied	68	71	483	670	508
columnar	91	76	112	507	850
f()	27	265	222	760	618
argmin	15	90	246	632	998
unrecognized	92	210	153	93	349
default	6	126	235	373	853
un0	71	117	141	267	319
non_bookers	8	275	445	761	542
bucket	18	282	199	292	321
drop_level=false	17	30	215	165	86
cat1	73	91	445	698	276
cat2	54	91	445	427	276
cat3	54	91	340	434	276
table_name	46	243	190	218	702
embedded	91	76	83	6	720
vm	94	217	157	84	322
gibberish	98	298	83	52	846
multiplications	87	141	450	681	325
intents	94	279	26	396	373
600	3	212	107	319	633
delimiter=	43	39	47	593	488
datetimeindex's	92	104	434	597	763
describe	68	71	227	366	320
row-first	15	208	272	270	166
sales	18	152	84	713	108
friends_df	73	90	445	305	199
argsort()	11	136	233	469	231
loops	45	58	385	611	357
scanned	56	122	287	110	313
ipython's	98	44	487	76	969
to_latex	57	44	201	76	517
textfilereader	79	10	315	111	162
moves	66	137	37	437	747
heading	91	170	83	784	345
statuses	18	286	224	248	304
finishes	63	127	295	636	799
completeness	1	260	195	759	117
infact	56	260	179	766	967
y=0	59	94	471	677	435
mathematica	48	46	451	309	609
storage	45	100	323	627	557
yob	6	126	390	698	129
pandas-ish	28	77	150	438	467
v0.16.1	58	176	50	392	617
c#	48	46	451	183	609
valid	6	234	390	766	349
v0.16.2	58	176	50	392	617
you	66	234	390	596	320
forcing	6	126	45	208	292
string2	71	25	340	0	667
10,087	51	146	219	771	471
string1	54	17	400	0	667
poor	26	133	60	714	55
polar	59	235	471	620	571
input_file	43	39	47	109	246
plt.figure	7	188	472	700	435
whitespaces	91	288	83	784	56
.map()	11	136	233	656	231
pear	55	91	324	650	936
tranform	11	136	52	760	231
nxm	87	141	203	681	973
10:20	86	221	242	724	465
grouped_df	17	30	27	161	432
suited	28	38	488	655	687
plt.fill_between	7	224	116	10	314
pool	94	127	369	368	773
building	23	58	45	208	902
assert	63	112	413	357	166
lookups	45	100	13	417	687
insertions	45	261	264	52	902
acutally	80	129	128	698	778
3-5	3	212	107	319	633
3-4	3	212	107	362	633
attribute	79	251	315	111	413
$30	18	173	199	435	990
df.diff()	67	147	141	122	588
cores	94	61	369	630	322
pd.dataframe()	62	109	161	0	162
monte	45	100	70	117	635
.max()	17	147	370	68	776
.combine_first	55	237	324	650	356
skeleton	37	71	227	11	909
pointing	19	163	469	458	184
unicodes	91	183	169	603	493
graphics	53	200	105	304	944
splitting	23	58	45	208	709
month	60	99	326	51	753
deadline	16	122	44	50	885
publish	13	29	326	156	377
country_code	18	152	199	718	990
df_new	90	49	443	568	86
messy	28	298	474	616	68
:(	26	163	469	448	880
np.busday_count	92	104	434	603	763
revealed	56	82	110	559	587
df['close	67	255	79	68	282
-e	25	231	213	214	291
bookers	8	275	445	761	542
batches	3	58	264	209	822
-a	25	231	213	699	67
referring	26	260	345	714	434
-c	21	24	146	214	437
-b	55	297	316	157	64
-m	25	231	213	214	437
-l	43	39	120	109	246
-n	25	231	213	214	591
-i	21	231	146	488	318
plt.errorbar	7	188	472	10	435
-u	25	156	328	382	563
3-level	23	236	185	360	751
-v	25	231	213	214	499
1063	87	258	450	681	571
-s	25	231	213	388	318
dominated	45	100	283	345	838
nodes	93	235	133	562	392
np.vstack	87	258	27	700	667
-x	71	147	334	129	948
nonetype	79	251	315	111	413
2014-10-14	60	140	384	362	599
.precision	38	68	98	373	263
deedle	52	116	224	454	151
attribution	52	260	26	117	585
7	86	221	371	411	110
confidential	37	71	227	115	807
plt.plot	7	188	472	365	314
very	26	38	474	204	347
mpl	7	224	180	304	846
obs2	54	90	340	14	297
1-hour	44	269	491	46	789
obs1	54	140	340	14	297
rogue	80	298	153	347	846
balancing	45	58	264	368	585
([	71	80	334	267	968
decide	66	126	390	661	927
vern	55	144	128	469	896
generalised	1	260	60	444	756
--	26	234	390	596	880
np.argmin	15	129	306	632	998
mirror	66	211	390	447	610
mapreduce	95	133	486	209	687
random	64	33	7	23	578
-4	71	80	324	650	904
manages	49	185	169	74	850
-1	71	80	141	129	948
-0	80	129	169	612	778
-3	71	80	334	722	948
-2	71	80	141	129	995
-=	67	255	79	68	282
cali_time	71	80	141	700	225
->	6	293	340	14	784
-8	43	39	478	593	411
i'll	66	163	44	643	476
binds	78	223	20	439	243
::	71	221	334	722	948
parser.pyd	21	24	121	163	666
df.resample('d	67	159	409	68	776
streets	18	173	394	343	775
pandas.read_table	43	39	47	109	246
track1	18	152	199	713	990
enhancement	61	18	108	288	279
parser.pyx	21	24	367	479	637
test-set	6	279	133	228	404
value}	62	293	400	0	784
snippets	37	71	227	11	192
df.columns.names	15	25	27	58	919
*100	27	57	466	502	588
pivot-table	93	279	26	447	585
nano	54	140	434	303	692
frameworks	21	24	146	49	341
investing	93	148	26	156	294
learner	48	133	167	50	179
math.log	27	57	466	161	588
thickness	59	235	471	221	172
writer.save()	63	127	356	550	519
rgba	79	65	54	675	435
fractional	92	183	358	131	970
np.zeros	71	117	206	267	319
learned	56	122	298	204	587
expiration	73	140	189	305	297
edited	1	260	195	444	756
unsurprisingly	49	256	112	417	347
5gb	3	61	231	275	234
loose	6	126	153	437	495
modify	52	234	483	437	982
answers	1	222	421	15	23
999	67	96	306	493	835
modular	28	77	150	438	467
tracks	18	270	232	292	129
selective	6	279	264	447	585
trunk	61	197	493	392	617
i.e	18	287	337	447	129
strong	48	133	230	309	55
directions	50	276	374	412	849
trunc	63	262	426	470	963
social	93	173	26	671	542
divisor	38	196	98	144	125
ahead	66	211	44	108	476
.reindex	17	49	443	165	86
inspired	1	260	464	444	587
losses	18	152	199	435	990
exceptionally	78	133	167	270	139
geoseries	33	270	133	195	999
amount	3	100	199	117	838
np.exp	71	80	27	700	667
arent	26	116	128	661	606
preallocated	45	100	244	342	234
permutation	33	138	216	330	472
createddate	93	140	10	305	606
..........	19	163	120	204	184
1294185600000	51	85	123	22	464
uniquely	23	236	111	454	505
invalidate	26	251	315	703	963
700k	3	212	107	319	633
shuffle	89	236	335	360	575
family	53	279	119	447	775
va	87	178	481	700	667
like-indexed	11	136	52	632	231
asd	55	91	340	14	936
cosmetic	26	43	110	436	57
activity_month	89	145	317	184	366
to_string()	57	44	201	76	517
glitch	26	82	110	687	365
vc	71	80	334	130	152
analyzing	93	282	26	634	179
aimed	1	260	60	108	756
trained	64	33	7	386	679
add-on	1	260	440	444	756
chunks	45	58	264	209	822
spawned	63	127	369	368	773
read-only	49	200	369	170	773
conventional	56	260	390	759	909
earliest	60	99	189	305	990
flaws	16	133	167	15	807
takes	3	137	179	74	692
fill_value=0	17	49	443	165	86
0	71	221	340	14	948
probabilities	33	95	73	681	863
df.corr()	71	25	334	632	114
contains	6	215	185	74	431
finally	56	211	390	447	747
generate	52	215	185	446	982
vh	55	237	161	565	64
bottleneck	45	100	283	417	716
-0500	51	85	123	22	512
mysterious	26	38	167	436	68
a+b	11	178	481	89	618
model's	49	190	454	6	918
assessor	18	173	394	718	453
containg	23	76	185	447	431
thrown	63	262	413	533	365
columnname1	55	39	47	109	246
stylistic	6	126	230	315	57
descriptors	29	211	389	292	578
site	48	18	421	323	415
excuse	16	222	167	511	993
dates.py	21	24	367	134	994
next()	15	287	385	151	911
broke	56	82	298	559	365
7000	3	212	107	319	633
y-limits	7	188	472	10	435
producing	68	215	179	366	744
overund	13	29	271	14	995
numpy.float64	79	251	315	111	339
respected	6	126	201	315	172
dataframe.convert_objects	57	256	212	185	745
index_col	43	74	478	182	801
sweeps	23	58	133	151	585
excessively	45	38	474	117	347
nine	60	34	326	713	753
np.polyfit	64	138	489	187	472
reshaping	23	236	45	208	575
01-01	38	81	242	724	329
history	13	29	271	156	294
~5000	3	212	107	319	633
f1	27	178	222	233	786
f2	27	188	222	233	786
f3	27	17	340	233	786
f4	38	5	91	233	786
pushes	15	58	203	748	973
len()	79	251	315	111	413
f8	51	66	238	471	658
f9	51	66	238	471	658
numerator	54	140	384	435	998
.count	27	42	370	90	776
claimed	56	82	440	153	365
:o	19	163	469	204	230
panelols	57	256	233	430	850
cows	48	235	26	331	415
20gb	3	61	231	275	234
lacks	1	260	440	444	231
species	73	152	331	515	491
overcomplicating	19	163	6	204	184
multi_df	11	208	233	58	26
decides	53	235	471	221	166
rowspan	18	287	384	698	775
processors	94	61	231	84	234
complication	66	211	390	467	838
spreadsheet	0	119	356	580	730
stayed	6	126	169	603	129
__init__()	79	265	4	760	963
snippet	37	71	227	11	909
np.log10	27	30	27	161	181
reject	6	126	153	315	57
exponentially	33	100	283	469	185
fp	43	39	161	109	246
2011.05.16	86	81	242	724	201
fr	82	91	331	717	932
fs	54	109	340	0	784
tried	56	122	287	350	313
cohort	93	152	26	713	368
fx	13	29	271	156	727
fy	60	99	326	515	753
9.699	51	66	238	471	658
derived	6	215	185	447	982
long	56	234	474	616	347
^2	54	178	141	202	995
n+1	54	247	80	202	995
tries	63	137	413	533	365
clf.fit	27	258	27	700	667
ff	86	169	242	607	465
fh	43	39	47	109	246
pandas.io.data	13	29	271	732	294
horizontal	59	94	471	304	944
derives	46	200	275	446	450
fl	82	196	309	144	125
fn	27	57	222	161	618
fo	15	260	195	759	117
a	23	234	390	446	585
contrived	37	71	227	11	115
workstation	94	217	231	84	322
roundtrip	45	3	488	430	850
documentation	48	18	421	323	53
pre-built	25	156	48	376	289
anytime	66	234	390	139	888
2015-03-06	86	81	242	724	465
2013-11-12	51	85	123	22	512
zerodivisionerror	63	262	413	533	365
nas	80	129	0	201	778
negligible	45	100	283	345	838
microseconds	92	104	358	176	692
inline	98	44	487	337	983
egg	25	231	213	557	369
uninstall	25	156	328	382	563
y-	59	235	70	515	571
help	50	276	374	412	93
hierarchy	89	236	335	360	575
fft	29	138	389	469	578
soon	61	197	44	392	476
held	23	215	103	446	431
y=	7	188	472	10	435
datetime.strptime	92	64	212	185	745
committed	63	82	110	687	365
y1	54	178	481	233	930
hell	26	163	338	436	880
y3	71	25	334	233	930
y2	54	178	481	233	930
comfortably	52	279	264	89	585
vectorise	11	131	163	417	490
86400	29	140	358	131	692
plt.hist	7	188	472	648	435
computers	94	217	26	396	884
psycopg2	46	243	190	218	642
sqldf	46	144	213	545	702
selenium	46	200	275	39	377
actually	26	234	390	596	880
.apply	27	57	466	161	588
segfault	61	82	110	687	617
absence	18	287	73	292	775
systems	94	200	451	396	884
pd.crosstab	17	256	161	505	64
df2015	54	90	384	698	998
fetchall()	46	243	190	218	100
nltk	64	33	296	386	798
haven't	56	122	287	350	313
finer	44	269	491	46	789
.to_csv()	49	109	161	216	519
evening	19	163	44	643	145
truediv	78	256	233	597	166
yo	52	116	128	366	320
~100	3	212	107	319	633
ya	19	163	469	458	230
cel	1	273	195	631	117
ye	66	163	469	458	64
00:15	86	81	242	724	512
anticipated	26	82	60	766	967
yy	38	64	261	586	722
cet	60	54	333	725	760
you've	68	234	390	596	807
cloud's	1	273	195	631	117
foot	29	282	389	292	990
ninja	16	38	167	50	807
ys	71	221	340	700	667
yr	60	99	326	564	753
rsplit	11	256	56	760	569
swapping	89	100	93	582	838
gcf()	7	224	116	10	314
desperately	16	116	167	50	179
slicker	28	77	150	638	467
__version__	58	262	213	430	92
master_count.csv	68	262	128	366	744
applymap	11	256	56	760	26
pd.show_versions()	37	71	227	455	28
fully	26	38	390	714	880
decimal	92	183	358	131	970
np.arrays	87	141	203	748	973
}	38	237	98	86	968
.dt	67	36	79	457	614
capability	48	3	488	62	487
appkey	18	204	445	698	775
stopped	63	127	295	108	145
mouse	59	235	10	221	832
dif	54	140	384	14	998
isn't	26	234	390	596	880
referred	1	260	440	444	615
heavy	45	133	486	671	123
read_sql_query()	46	243	190	218	100
expanding_mean()	44	159	53	469	368
blank	80	170	83	347	345
positioned	59	235	471	620	172
data.applymap	27	57	466	161	588
df['new	67	255	79	68	282
beyond	26	116	389	162	145
todo	61	18	108	288	279
event	18	282	199	718	990
buffers	45	190	342	430	557
leave	66	260	92	166	675
xlabels	59	94	471	620	274
x.abs()	71	80	466	298	948
2013-09-09	86	81	242	724	512
:]	71	80	334	722	948
regexes	91	46	488	309	569
since	6	234	390	596	129
douglas	19	273	195	631	184
prohibitively	45	100	474	417	347
pivoted	73	236	185	568	30
hayden	19	273	195	631	117
9:10	86	221	141	14	995
unstacking	89	236	335	381	103
safety	29	95	389	292	578
+0530	4	81	312	724	548
e-mail	98	200	19	76	517
index_col=	43	74	235	593	955
issue	61	82	108	687	279
stead	91	170	83	784	345
pun	26	38	469	448	770
reporting	93	200	26	117	179
ast	49	185	56	430	8
timeline	59	235	471	515	944
:[	71	221	334	86	968
list-comprehension	78	43	230	315	57
recd	44	152	199	515	990
asc	89	145	317	184	575
`df['col_name	67	255	79	7	282
reason	26	82	110	315	365
base	6	234	390	447	129
brightest	18	287	53	698	775
sma_45	54	140	384	434	631
ask	1	222	92	15	23
thxs	19	163	469	458	807
bash	94	231	177	160	369
`df['xx	54	25	384	129	998
unresolved	5	85	200	207	900
launch	94	217	487	160	983
persists	56	82	179	687	365
2012-01-31	60	129	0	201	753
terrible	28	38	474	616	68
multiprocessing	45	127	369	368	773
terribly	28	38	55	616	347
american	82	64	66	579	187
v3	73	17	400	427	784
expecting	68	234	345	366	744
edchum's	1	260	195	759	117
leading	80	170	83	347	345
scheduled	63	127	295	636	950
subframes	23	286	224	248	151
assign	15	215	483	437	982
gene_name	73	204	61	453	246
shave	45	100	283	582	838
singleton	78	265	203	748	973
spitting	63	82	295	108	842
probability	33	95	73	330	578
encoding	49	113	140	363	628
markdown	98	44	19	76	931
misc	82	91	10	388	318
reflected	6	126	483	437	483
talked	56	260	298	50	179
acmnj	51	85	123	22	43
design_info	79	251	426	111	450
re-ordering	89	236	45	360	575
df1.merge	90	238	443	245	206
0.9.1	58	176	493	392	622
miss	26	234	128	596	880
.applymap	27	57	466	161	181
min	44	95	53	469	896
horse	66	43	230	436	57
2015-11-01	86	81	242	724	465
np.reshape	27	258	27	700	667
discussed	61	18	440	323	415
guaranteeing	89	126	317	315	373
monthend	60	99	228	51	684
overlaying	59	224	471	304	944
station	18	204	445	305	108
expand	52	211	390	772	709
draft	68	17	444	278	744
\appdata\local\continuum\anaconda2\lib\	21	24	121	163	666
dt2	73	204	445	305	304
dt1	18	140	384	305	990
scheme	6	126	488	309	927
skipna	17	159	130	132	195
banana	82	91	309	144	936
schema	46	243	68	218	642
shifted	80	211	384	447	982
scipy.io	49	190	454	6	918
selling	18	140	199	435	990
0.14.1	58	176	493	392	622
0.14.0	58	176	493	392	622
behind	26	116	230	714	55
.results	49	190	454	6	918
recursively	23	58	385	195	911
eurusd15.csv	43	162	47	182	246
prediction	64	138	216	187	472
getter	78	265	426	491	450
authors	18	173	394	203	504
alphabets	59	235	471	515	491
translation	45	133	211	309	55
df.itertuples()	62	109	80	151	498
dataframe_one	23	90	224	454	304
std	33	95	53	469	896
hundred	3	212	368	319	525
grep	25	0	56	597	569
kindly	50	276	374	412	849
dtm	15	236	335	305	843
anticipate	26	38	7	467	57
answer's	1	260	195	444	117
grey	59	235	304	221	629
hesitating	26	82	469	596	880
upsampling	44	269	0	756	789
greg	19	273	120	204	184
intensities	93	152	199	292	491
recovered	49	185	112	430	519
str	92	251	305	470	963
.aggregate	17	30	370	161	776
toward	53	133	208	50	846
colour	59	235	304	221	629
discretized	29	95	419	629	669
deciding	16	82	389	467	145
880	3	212	133	23	822
users\pauldufosse\anaconda\lib\	21	24	121	163	666
wasnt	16	280	60	458	230
alongside	23	215	337	447	129
unboundlocalerror	63	262	413	491	196
randomly	93	211	133	23	578
quote_nonnumeric	71	221	340	102	772
=100	67	255	79	68	282
substantial	45	100	283	467	838
2013-08-30	82	45	309	144	454
pytable	10	190	78	627	557
ndvi	18	95	53	717	996
cumbersome	28	77	474	616	68
data-set	3	71	227	11	909
karl	19	273	195	631	184
ratings	18	95	394	343	542
datetime.date	92	104	434	20	780
constructions	52	279	488	62	292
bz2	49	113	140	363	628
lib	21	24	146	241	257
py27_0	94	176	213	376	617
date_start	29	90	242	162	201
scotland	82	196	420	144	936
x_i	54	247	481	585	267
arithmetic	92	131	417	439	581
useless	26	38	474	315	57
extrapolating	80	129	0	201	778
sve2_all	71	25	334	122	948
boxplot	59	224	180	304	944
pandas.timegrouper	11	256	233	223	26
residuals	33	138	216	187	472
1.4.0	58	176	50	392	617
1.4.1	58	176	50	400	141
experienced	16	116	167	394	849
select_as_multiple	10	123	264	627	557
d.keys()	62	109	400	0	64
semiannual	44	269	228	756	684
popular	48	173	26	323	415
rhs	15	226	477	439	427
filesystem	94	200	369	368	773
fast_path	68	215	179	366	744
experiences	37	116	227	467	849
sting	52	234	390	89	292
diferent	23	76	337	447	129
alpha	33	235	304	330	491
ensuing	54	211	337	14	784
x's	29	235	133	389	491
literal_eval	57	256	56	667	8
salary	18	16	445	713	913
y_true	87	141	450	330	325
5-6	29	140	491	464	255
numpy.vectorize	11	256	233	760	231
mobile	56	173	394	191	377
performances	45	100	26	467	838
clear	26	38	60	714	434
popularity	93	173	26	713	913
df.b.isnull()	67	40	215	122	299
unreasonable	26	38	230	436	57
filler	80	129	337	447	129
1.25	86	221	448	669	465
clean	66	261	264	52	585
analogy	93	133	227	714	909
velocity	33	235	70	292	571
any()	57	0	246	597	645
latest	58	176	50	392	617
physics	66	234	390	470	64
naively	56	234	390	596	967
phenomenon	56	82	110	687	807
commas	91	170	83	784	56
666	3	221	371	102	465
blindly	63	43	110	557	799
buy_groups	62	76	13	741	498
hh	92	64	325	586	915
3x3	87	141	377	403	973
newest	58	176	50	326	617
rotate	59	94	471	620	274
pandas.io.parsers.read_csv	43	74	235	690	853
bananas	82	91	309	144	936
completion	98	44	487	76	983
meta-information	46	190	78	627	557
9.751	51	66	238	471	658
randn	27	117	27	267	319
parameters	64	279	235	62	853
verison	58	176	50	392	617
flesh	1	222	92	15	807
userwarning	21	262	413	684	34
assertion	79	65	413	533	34
classifiers	64	33	7	378	553
moments	29	133	389	362	145
flights	71	25	334	722	919
subsection	23	211	227	447	909
pretty	28	38	474	436	880
series.value_counts	57	256	233	597	26
xlwt	0	119	356	550	730
regex=r	38	42	251	90	62
new_df	62	109	443	0	162
meanwhile	56	122	287	436	313
x.name	71	25	334	722	948
__file__	38	231	322	157	527
trees	14	33	7	378	679
eggs	55	237	324	650	62
famous	68	262	275	6	909
feels	28	77	436	616	467
df.info	68	71	227	366	744
u'no	79	262	279	530	724
boils	29	298	110	687	55
referencing	23	58	45	208	615
table1	54	17	400	578	125
alexander	19	103	195	631	184
catches	26	82	413	533	166
parameter1	22	25	324	650	356
ipython3	63	218	213	557	291
ignore_index=true	90	109	443	245	206
diamond	59	235	304	221	629
generally	78	43	488	309	57
stored	6	210	185	6	431
1:10	71	25	334	722	948
recommendations	50	276	374	412	849
x	27	57	466	565	588
how='mean	17	159	370	756	776
dta	49	190	112	275	234
scanning	45	58	264	368	902
redefine	66	236	335	58	292
jianxun	19	273	195	631	184
mergesort	89	145	317	315	373
locale	38	64	212	470	955
sth	52	234	128	89	62
plausible	26	38	110	436	57
s_id	73	90	445	698	108
np.random.random	71	117	141	267	319
rolling_std	33	138	53	469	231
localize	92	54	333	413	530
close	13	29	271	435	157
join='outer	90	238	443	245	432
locals	46	265	426	491	196
dateutil	25	156	184	249	563
probable	26	133	167	50	55
level=none	17	117	27	132	195
pictures	48	71	227	200	909
wow	19	163	6	289	230
familiarity	26	133	167	571	55
downvoted	16	222	92	15	486
won	18	16	84	718	913
2013-02-01	86	81	242	724	201
incompatibility	58	176	50	392	617
probably	26	38	390	436	57
conditions	52	0	246	763	502
doubly	87	106	203	21	498
ranker	27	30	222	161	618
backfill	80	129	0	201	410
intending	15	234	345	596	320
range_name_list	62	25	80	129	948
zipped	49	76	161	21	918
scalability	26	133	298	368	55
ranked	18	95	73	343	775
distinguish	6	279	153	661	345
stale	66	234	128	661	320
both	6	279	224	447	129
mangle_dupe_cols=false	80	129	0	766	778
boto	25	231	213	557	369
8760	86	140	371	411	201
items()	57	256	56	410	906
sensitive	6	38	230	315	57
dropna=false	17	49	138	165	86
forgotten	19	163	469	458	967
experimental	48	46	451	323	415
datastructures	48	46	451	368	609
liked	19	273	120	204	184
100ms	45	100	491	117	145
yards	55	221	84	144	936
jeff	19	273	195	631	184
format	49	190	112	507	349
author's	68	215	440	95	59
weckesser	19	82	110	687	756
whatever	66	234	390	596	292
rename()	57	49	335	58	292
subgraphs	18	235	384	23	491
header	49	170	112	690	345
cross-sectional	33	138	26	292	294
spotting	19	273	195	458	184
100mb	3	61	231	275	234
linux	94	218	157	396	322
dfix	71	228	206	298	916
data-frames	23	286	224	248	151
df_old	73	211	454	568	304
described	52	260	440	444	756
stating	79	262	413	533	34
stamp	44	269	491	46	843
quantile	29	95	96	629	938
side-effect	78	43	230	315	965
newcol	62	109	400	568	64
describes	6	215	440	74	615
damn	19	163	469	458	230
.whl	25	156	184	557	291
doc-string	61	18	108	323	53
imports	49	231	213	557	369
collected	93	282	143	634	773
territory	48	133	167	309	660
df.head()	68	71	227	455	92
topandas()	23	185	233	430	850
generating	23	215	45	208	902
7l	51	66	238	130	867
partly	26	82	110	687	880
0001	92	293	340	603	784
regroup	66	58	264	151	911
series.apply	11	256	56	597	763
wet	54	95	445	283	491
pct_change()	11	136	52	469	684
modelling	48	46	451	671	609
else	66	112	128	394	691
b_x	73	17	391	427	125
determination	26	43	169	315	57
280	86	169	371	607	783
???????	38	5	91	735	527
assigning	15	226	45	208	982
imap	11	256	56	597	26
accomplishes	56	122	179	50	587
floating-point	6	183	169	93	970
datarame	80	215	337	447	940
look	68	234	227	505	320
20544	86	293	473	356	300
ravel	87	251	203	499	973
y-values	59	94	471	620	491
.mul	17	30	466	502	588
while	56	234	390	596	129
accidently	94	127	213	557	369
ought	28	77	150	438	888
numpy.where	11	256	67	597	695
larry	87	141	203	748	973
gmt	92	54	333	413	530
guide	48	116	421	323	653
loop	62	58	385	151	911
alike	48	144	224	183	687
exponent	11	178	233	330	529
vectors	87	141	450	681	325
10000	3	212	107	319	633
wherever	80	129	153	402	606
overlooked	26	163	469	458	230
dictvectorizer	64	33	457	480	768
multi-line	53	170	83	323	415
trading_days	90	238	443	245	206
00s	38	262	128	470	465
reads	49	137	454	74	918
terminator	43	170	316	784	56
ready	66	133	486	671	179
concentration	76	235	496	515	491
1000+	3	212	107	319	633
pd.categorical	57	256	426	83	963
legend=false	7	188	472	10	435
null	80	129	306	612	778
baseline	29	211	293	108	145
anymore	26	234	390	596	880
grant	82	173	10	713	614
pandas.datetimeindex	92	104	434	24	416
.xlsx	0	119	356	580	730
belong	18	152	337	698	775
port	94	204	213	557	291
undirected	59	235	450	681	392
simultaneous	18	173	394	718	453
grand	18	152	444	713	715
pd.offsets.day	67	228	466	502	588
composition	78	43	411	791	450
conflict	6	60	213	290	850
.xlsm	0	119	356	580	730
.max	17	40	215	165	86
.drop_duplicates()	17	49	443	165	17
used	56	234	390	766	967
temporary	23	58	264	342	982
1000s	3	212	107	728	633
bonus	66	116	195	759	117
ignore_index=false	90	49	443	245	432
hdfview	49	190	78	627	557
1000x	45	100	283	345	969
002	86	221	318	82	594
001	86	196	318	82	594
000	3	212	107	538	633
uses	6	3	488	74	850
cleaning	23	261	486	52	902
__add__	79	251	315	111	963
df.join	90	238	443	245	206
flips	59	235	133	515	129
bob	82	91	120	167	125
15.0	58	201	448	75	471
15.1	58	176	50	75	617
15.2	58	176	50	392	622
15.3	86	201	448	173	471
database	46	243	190	218	642
15.9	51	201	448	173	471
df['series	67	255	466	502	588
concatenations	23	58	486	248	902
')'	38	64	98	90	877
16:52	86	221	371	14	783
2gb	3	61	231	275	234
rollreturnrandomdf.iloc	71	80	334	722	948
')"	55	237	324	68	62
consistency	6	126	488	93	487
clears	19	261	44	52	476
docker	94	217	157	396	291
'))	67	255	466	502	588
scouring	48	122	287	110	313
distances	33	95	450	247	999
line's	53	270	454	195	345
bfill()	80	129	0	201	410
overflows	6	183	153	603	349
pywin32	94	200	451	39	609
reviewed	56	122	287	444	415
12.400000	51	201	448	715	892
dataframe's	89	208	335	360	292
0.0000	80	129	0	201	778
reviewer	24	204	445	343	108
`'	91	297	476	784	493
subseries	18	152	199	515	368
decompress	49	190	264	627	918
questioner	1	260	440	444	756
$	91	84	359	90	24
engine='python	43	39	478	593	957
guaranteed	78	226	230	315	373
utctime	92	104	434	185	349
shortcut	28	3	488	204	487
new_range	67	117	466	502	619
numpy.where()	11	256	56	597	26
nth()	11	256	233	760	26
dateindex	44	99	228	46	684
guarantees	78	100	230	315	373
operators	78	223	417	439	240
transformation	23	131	486	89	581
`df['date_time	67	36	79	502	366
liq	55	237	324	650	776
...	26	234	390	596	880
df['datetime	67	36	466	502	366
1417982811944	55	85	324	22	464
lacking	26	133	60	714	55
cusip	73	204	189	305	108
evaluate	6	0	246	357	502
showing	68	71	227	366	909
13:03	86	221	123	724	465
13:00	86	81	242	431	512
..?	52	116	128	596	320
game	18	16	84	713	913
wiser	26	38	167	444	880
plt.axvline	7	188	409	10	435
outright	28	43	474	436	57
dataframe.to_json()	49	185	454	430	519
excluding	80	211	337	447	675
submission	1	260	394	444	756
upcasting	78	183	169	315	57
a.shape	71	80	334	700	667
signal	29	138	389	435	578
altough	26	38	474	436	880
resorted	56	58	385	151	911
holes	80	101	0	201	789
translates	23	215	45	446	709
read_csv('data	43	162	47	182	246
32bit	94	73	157	396	322
u'employer	51	5	91	735	867
stop_times.csv	68	215	454	447	129
fig.savefig	7	188	472	10	314
group_id	54	95	481	23	998
terminology	48	133	125	714	55
mathematical	45	131	417	439	581
sketch	37	71	227	11	909
escapechar	43	74	478	226	955
saturdays	60	99	352	51	753
scipy.stats.linregress	33	138	53	469	368
creation	23	58	45	342	982
some	56	234	486	658	807
.01	54	178	141	122	995
separated	91	170	83	784	345
iterrows()	15	256	385	151	26
towards	48	298	167	583	846
plumbers	86	201	371	102	465
28th	60	99	352	51	753
groupby.sum()	45	100	450	681	347
waitingkuo	19	163	6	289	545
bypassing	45	190	264	430	557
iso-8601	92	210	434	303	349
08:00	86	81	431	724	619
lineterminator	43	74	235	690	853
describing	68	234	345	714	615
thanksgiving	60	34	114	51	99
id2	73	90	445	609	881
tolist	57	256	56	21	763
id1	73	90	445	609	881
conditionally	23	58	337	447	985
reckon	26	38	469	436	880
by()	68	211	394	14	320
slash	91	297	316	497	56
user2357112	19	163	469	204	184
minimal	37	71	353	115	917
cgi	94	231	213	557	369
perc	73	90	0	201	886
data.frame	87	144	233	183	850
eating	45	100	244	582	234
.so	94	231	177	684	205
processing	45	58	486	671	581
`'a	73	17	476	564	311
sframes	66	234	264	596	585
stem	6	279	337	766	585
step	66	211	486	108	911
assists	82	91	331	713	83
negatives	18	95	73	343	502
lasts	3	282	491	362	145
,,,	82	237	120	144	936
additive	33	138	216	330	472
numpy.mean	11	30	222	132	195
mssql	46	243	190	218	642
wealth	87	178	27	700	667
shine	16	116	5	394	807
integers	92	183	169	603	416
np.newaxis	71	258	27	700	667
pd.read_csv('path	43	162	47	109	246
wouldnt	26	163	469	448	888
tracing	53	200	486	50	179
_read	21	24	367	445	412
copy=false	90	49	138	132	195
cphlewis	19	273	195	631	587
simulation	93	282	70	634	585
paramether	64	33	7	690	553
idl	48	46	451	430	850
idk	26	163	469	448	230
epsg	94	270	213	445	38
idf	62	109	161	0	318
ide	98	218	487	160	983
shiny	46	200	275	39	517
altogether	66	43	45	347	675
block	63	112	264	108	911
72	86	32	455	424	250
seeing	26	82	345	714	434
eaten	93	173	394	718	453
kfold	64	33	7	386	553
dude	19	163	6	289	184
")`)	55	237	324	650	62
within	52	211	337	447	606
nonsense	68	137	483	366	744
crash	63	127	295	636	799
pastebin	37	71	353	115	508
factor	29	100	389	292	838
smells	26	82	110	687	365
reworked	19	260	195	444	756
behaving	26	82	179	258	898
dataframe.filter	57	256	56	597	26
statistics	33	138	53	469	381
.,	71	221	340	14	947
seriesgroupby	79	251	315	41	418
..	19	163	469	458	880
placing	53	170	83	784	902
6867.0	51	66	238	471	658
.8	58	146	219	771	471
.9	86	146	219	771	760
.?	91	297	83	14	947
.0	38	146	329	512	493
.1	38	146	219	512	471
.2	51	146	219	771	471
78	38	297	309	144	784
.4	51	146	219	771	471
.5	51	146	219	771	471
.6	82	146	448	771	966
.7	58	146	219	771	471
0-5	29	140	133	14	129
himself	1	222	92	466	23
df['y	67	255	79	785	282
0-1	29	235	384	162	491
tupleize_cols	43	74	235	690	853
registered	18	173	394	718	453
0-9	38	42	251	90	24
df['s	67	255	79	68	282
films	55	237	324	650	62
df.index.get_level_values	17	117	27	405	338
fishy	26	18	108	436	279
numpy.isnan	27	0	306	597	695
df['d	67	255	79	68	282
injection	46	7	190	218	642
df['a	67	255	79	785	51
collapses	23	290	335	360	575
sklearn-stocks	21	24	367	49	556
df['b	67	255	79	785	51
info	68	18	227	200	909
.i	55	140	495	14	223
persisting	49	265	426	315	450
thru	10	58	477	265	295
utf	49	113	187	363	628
intuitive	28	77	474	638	467
restarted	63	217	295	613	799
`df['branded	67	255	79	68	282
.a	67	42	120	90	756
stumbling	16	38	167	50	597
.c	25	156	213	376	291
....	26	163	469	458	880
.e	71	25	495	14	223
.f	19	273	195	631	756
utm	11	144	233	760	231
start_df	73	204	445	305	199
autocorrelation	33	138	216	330	578
pct_change	11	136	52	223	231
.s	19	159	120	458	230
.t	17	30	443	165	432
noone	1	260	60	15	807
forest	64	33	296	386	679
convey	52	116	128	473	320
convex	45	100	283	767	838
readlines	79	251	315	111	963
doesn	38	262	409	262	365
trimming	56	211	45	208	967
header=0	43	39	478	182	488
header=1	43	39	478	182	488
%matplotlib	98	44	487	337	983
--->	71	221	134	267	968
stops	63	127	295	636	627
beginpoints	44	269	491	46	789
codecs.open	43	39	47	157	246
polygon	59	224	180	304	172
amounts	3	190	264	319	585
dashed	59	224	304	221	435
nah	26	38	390	436	880
nan	80	129	0	612	778
4.2.1	25	218	448	699	67
accross	18	152	53	464	368
rewriting	45	58	283	417	807
application	45	200	451	39	687
eurusd	13	29	371	411	647
genome	93	282	133	761	542
nat	92	129	0	612	778
ool	71	80	305	667	526
department	18	45	394	343	454
nominal	64	33	457	515	768
pandas	23	3	390	89	985
dashes	91	170	83	784	56
misinterpreting	26	38	60	714	266
happens	63	234	179	596	365
draw	59	224	471	304	944
read_sql()	46	243	190	218	100
calculating	33	95	53	409	368
mongodb	46	190	275	743	577
awry	63	82	110	52	365
visits	18	152	129	243	453
x','y	55	17	400	427	784
numpy.datetime64	92	104	434	20	416
drag	45	100	264	108	911
pandas.cut	57	136	419	629	854
evan	55	273	120	167	936
subfeature1	54	90	417	698	941
eval	78	43	56	597	569
=[[	71	162	334	182	867
structure	23	141	203	446	585
pd.ols	11	256	233	632	314
independently	23	58	369	368	585
correlated	33	138	450	330	999
e	73	17	391	427	784
syntactical	26	43	167	438	434
practically	45	100	264	368	347
complicating	28	133	474	714	55
blend	93	270	26	713	542
expand=true	67	42	305	90	655
required	6	234	390	596	927
youtube	48	203	278	323	415
svc	64	33	457	760	553
parallelization	45	133	451	467	687
wan't	66	222	128	15	320
adequate	48	46	488	309	687
heats	29	235	133	292	491
she's	1	260	440	444	617
requires	6	3	488	74	687
incrementing	1	58	45	799	296
evenly	44	269	87	65	825
funcs	11	131	233	469	231
sublimecodeintel	94	218	213	160	291
co-author	48	173	394	323	415
gs	71	188	340	0	432
gr	82	91	309	144	125
aggregating	11	136	45	223	368
parse_dates	43	74	478	182	801
13:30	60	81	242	431	399
produce	68	215	179	366	744
series2	90	109	443	245	432
ge	82	91	10	713	936
gc	63	127	244	590	832
salaries	18	16	445	713	913
ga	48	200	451	39	609
go	66	116	128	108	747
gm	79	265	426	760	963
gh	61	18	108	288	279
compact	28	77	150	638	467
non-datetime	15	208	272	270	166
series1	90	258	443	245	432
3:6	71	25	272	407	948
wizard	19	163	6	204	184
2014-09-11	51	85	123	22	43
suits	1	222	92	15	23
uninformative	63	262	413	533	365
esd	73	286	224	248	151
excluded	80	129	153	766	778
country_name	73	204	483	564	304
cluttered	28	38	474	616	68
3:5	71	80	334	722	948
friendly	28	3	488	309	487
transaction_id	18	204	445	698	108
masked	87	141	203	748	973
due_date	38	5	253	502	890
g4	62	17	400	0	732
g3	62	25	400	0	732
g2	62	17	391	0	732
g1	73	17	391	427	732
portfolios	18	152	53	469	368
assuming	6	234	390	596	129
csvfile	43	39	47	109	246
wave	82	282	70	713	990
unstructured	49	190	454	6	918
tradeoffs	6	279	230	62	373
valued	79	65	111	675	505
facebook	93	190	275	6	542
trough	56	58	385	151	911
targetpos	73	17	445	698	998
telling	26	82	110	533	365
apt-get	25	156	328	382	563
1.00999999046	71	25	334	722	948
index_col='date	43	162	47	109	246
df['timestamp	67	36	79	785	366
to_csv()	49	74	235	690	519
dimensionality	64	33	7	386	553
exits	63	127	295	108	729
positions	29	270	133	292	491
button	98	44	487	114	377
tokyo	82	196	371	144	465
michael	82	196	120	388	318
renamed	73	204	284	628	288
hive	20	243	275	39	642
`'strike	73	297	476	564	311
assignments	78	226	272	513	974
transposing	89	236	45	208	575
deleting	23	211	45	208	675
enforce	6	126	153	315	927
numpy.array	15	258	27	58	973
failing	63	82	110	533	365
from_records	57	256	235	58	519
df.time	67	36	79	502	614
row.b	27	255	466	0	64
row.a	27	255	466	0	64
date_format=	43	64	145	586	550
jump	66	261	295	108	145
df.index.year	17	147	215	165	948
window_length	3	100	283	345	969
rcparams	7	224	201	373	435
download	13	200	275	744	377
result_df	73	90	400	698	784
poke	16	163	469	436	476
plays	78	133	167	334	27
opaque	78	38	230	315	57
vales	23	76	337	447	982
colonel	19	273	195	289	184
date's	60	99	271	46	157
unhelpful	26	82	110	714	224
printing	68	82	179	366	842
pandas.rpy.common	63	185	213	545	850
;	66	234	390	265	471
datetime.datetime.fromtimestamp	38	57	466	502	588
0.13.2	58	176	50	392	617
filings	93	173	326	713	641
product_desc	89	145	317	184	311
pandas.isnull	15	0	215	597	763
rearrange	89	236	335	184	575
commercial	48	46	451	39	609
matplotlib	7	224	180	304	944
following	68	215	185	95	59
tfidfvectorizer	64	33	457	386	553
logout	18	204	199	305	990
re-run	63	231	213	557	369
ioerror	63	134	413	533	34
re-assigning	62	109	483	151	162
vba	0	119	356	580	730
repes	63	265	426	491	196
.......	82	196	309	144	125
scatterplot	59	224	471	304	944
products	18	152	326	713	294
weren't	26	82	153	661	967
646	51	85	123	724	465
chang	19	273	195	631	184
`]	61	18	108	505	128
uint16	92	183	169	602	416
d.sales	71	80	334	722	948
examining	56	190	486	6	902
lamda	11	116	233	760	695
foresee	63	82	281	687	365
addresses	52	76	337	195	775
pops	63	261	295	533	799
danger	26	82	110	687	365
pitch	93	282	70	44	635
win	94	140	199	369	322
wil	15	256	182	597	166
achive	52	116	227	89	909
df['list	71	80	334	722	948
`pd.read_csv('data	43	39	47	109	246
boolean	15	0	246	439	502
groupbys	45	87	224	417	581
anomalies	33	282	70	292	578
outcomes	93	279	26	117	578
redefining	15	287	337	698	129
.count()	17	147	370	165	776
5-31	73	255	79	564	311
manipulate	23	190	486	89	585
precompute	66	126	390	89	292
starters	68	71	227	505	320
quote_df['tvol	67	255	79	68	890
crap	19	222	92	15	230
remains	68	234	179	437	744
recl_lcc	59	235	331	515	629
-based	78	208	488	270	538
data.loc	71	25	334	0	948
circumstances	78	279	230	315	581
`0`'s	80	129	306	612	778
ret_index	43	26	134	375	895
postprocess	52	126	153	89	349
vehicle	82	45	142	343	454
32400	67	147	206	122	916
cram	23	58	45	208	709
exhaustive	48	133	488	587	687
jonathan	19	273	195	631	756
historically	56	82	110	687	617
milliseconds	44	104	434	303	692
popped	16	163	320	436	880
started	56	122	298	50	179
becomes	66	137	179	74	747
ith	62	287	80	13	498
k+1	27	178	141	88	995
:-(	16	122	167	50	880
visibility	53	235	471	221	172
datareader	13	29	271	443	294
index's	23	208	185	447	345
dat2	90	286	443	245	432
disabling	63	231	213	777	369
circle	59	235	304	220	629
resize	7	224	116	10	314
socket	46	200	369	368	773
detrending	33	138	389	469	231
crosses	29	282	389	162	145
66	86	169	371	607	167
hist2d	59	224	180	304	944
ride	60	140	384	518	594
averaged	18	152	53	515	761
columns=lambda	27	57	466	565	588
([[	71	80	334	267	968
crossed	19	163	113	559	145
keyerrors	26	82	110	533	365
12.200000	51	201	448	715	892
pd.to_datetime()	92	104	212	185	745
aggfunc=len	67	255	79	68	86
meet	52	0	246	763	502
drops	80	137	483	437	675
averages	44	269	491	469	789
depricated	61	176	235	83	617
control	53	126	390	89	927
enumerates	89	236	445	698	575
]``	10	123	477	265	540
providers	18	173	271	713	542
sudo	25	156	328	382	563
we'd	66	43	390	661	937
proxy	53	265	426	491	450
legible	53	38	474	254	172
pulling	23	190	275	6	902
documenting	61	18	108	323	53
key_2	18	204	445	87	108
wonderful	50	133	167	204	184
spanning	44	269	491	46	789
hesitate	16	222	92	15	23
invoke	63	265	426	89	292
optimised	28	77	150	417	467
r^2	33	138	216	330	472
restart	94	217	295	613	799
pyqt	53	44	180	304	713
arrangement	53	279	26	515	585
located	93	211	454	557	606
they've	56	173	394	661	453
10:36	86	221	371	102	465
re-use	48	279	486	89	585
personally	78	43	488	309	487
circular	33	138	389	292	472
n.b.	56	122	287	350	756
.__name__	27	117	466	267	338
int16	6	183	169	603	163
farm	82	140	21	713	990
allalexaandgoogleinfo	15	258	27	667	526
sys.path	21	231	177	239	437
hashed	40	251	297	675	316
]`)	71	25	334	407	948
file1.csv	73	39	47	109	246
whistles	61	46	488	62	487
spelling	1	260	60	444	756
pydev	98	231	487	160	983
pandassqlalchemy	46	251	411	83	288
device_id	18	152	199	698	775
completition	98	44	487	160	983
ller	19	273	469	458	756
2011-02-09	51	81	123	724	512
s=	67	237	466	502	588
computations	45	131	486	671	581
manhattan	82	45	304	221	454
sector2	73	90	445	698	304
10:40	4	169	312	82	379
pep_list	27	178	481	700	667
powerpoint	98	44	19	76	931
generate_value	68	258	227	11	667
pd.series.mean	27	30	249	161	181
{1}	71	80	334	298	689
healthcare	51	5	91	735	372
py27-pandas	25	156	213	214	291
quotations	91	192	83	497	345
s1	90	90	443	245	304
unique_id	73	204	445	650	776
fastest	52	77	150	638	467
unsolved	16	116	110	50	880
least	66	234	390	596	880
fresno	54	140	384	14	936
parallelized	45	3	474	417	347
combinations	52	279	337	761	775
chrisb's	1	260	195	759	117
including	6	211	390	447	129
astype	92	183	305	603	416
during	63	127	295	634	145
mentioned	1	260	440	444	756
single-element	15	183	203	603	973
chemical	93	282	70	515	392
outer	89	286	214	619	151
exclusion	38	262	27	470	166
temporal	93	269	73	464	368
notebooks	98	44	487	160	983
him	16	222	92	466	23
np.empty	71	117	27	667	526
%timeit	67	147	283	345	969
compiler	25	156	184	376	289
pixel	59	235	133	515	571
drop=false	90	238	443	245	206
shell	98	231	487	160	983
factorial	11	3	233	89	292
auto	6	126	153	93	927
!..	19	163	6	289	184
functional	48	133	167	309	687
numpy.append	23	58	264	151	292
subtraction	92	131	86	439	581
hands	45	100	264	368	179
front	91	170	83	641	345
querying	46	190	275	627	642
documented	61	18	108	83	53
dataset	3	212	107	446	585
dataframe.plot	7	224	180	10	314
handy	28	3	488	367	487
rolling_mean()	44	269	389	162	789
21:56	51	5	91	471	465
chronic	51	196	309	144	125
mytest	55	237	161	650	64
fundraisers	18	173	394	718	453
university	73	17	400	761	304
nameerror	79	114	178	440	413
slide	53	235	471	221	172
magnitude	45	214	283	345	838
multi-year	44	269	491	46	789
crossing	29	138	216	136	578
raised	63	262	413	533	365
|	38	191	206	122	916
adventurous	66	38	167	436	476
upward	29	211	389	292	145
table_b	18	204	13	305	524
grok	16	38	167	436	807
chunk	3	58	264	209	822
700	3	212	107	319	633
staying	28	77	474	640	687
inverted	6	0	153	766	846
constitute	52	279	337	661	675
145	71	169	371	607	783
minutes_array	92	215	185	437	129
variety	48	279	368	658	525
encodings	49	113	140	363	628
separating	23	170	45	208	345
indexs	6	279	337	661	129
margins	59	136	180	223	944
transitions	93	282	199	292	990
special	91	43	83	315	487
143	54	140	371	14	783
time=	86	140	242	431	201
offsetting	23	211	45	208	292
littered	56	298	110	52	50
confess	26	38	469	448	880
time1	54	90	434	672	843
time2	92	104	434	672	843
retuns	92	262	128	470	606
critics	18	173	394	343	542
index=range	90	117	443	267	319
xaxis	59	94	471	620	274
maximized	53	235	389	221	172
snapdate	59	94	471	604	832
wich	23	215	185	446	585
cause	26	82	110	687	365
str.split	57	42	56	34	569
one's	66	211	337	360	575
index*	52	211	390	661	675
inputted	18	76	319	6	349
date2num	92	104	434	581	684
activity	93	282	199	634	990
show()	7	224	116	729	314
diagonal	87	141	136	681	924
undo	66	190	264	557	377
.and	73	204	10	305	784
attending	82	196	10	144	727
completely	26	234	60	596	880
ect	55	91	409	144	408
retry	63	176	213	557	617
70k	3	212	107	319	633
index2	62	109	80	0	498
encoding=	43	39	478	593	957
index1	62	109	80	0	498
20,000	3	212	107	319	559
dataframe.groupby()	11	136	52	223	105
unutbu	19	273	195	295	184
elastic	94	217	213	396	291
geometry	53	270	451	195	850
determining	52	279	337	447	129
route	66	43	264	436	747
maths	55	91	10	447	936
mac	94	218	157	400	141
timer	45	100	62	345	969
times	18	282	199	23	129
counterpart	49	3	488	430	850
stride	11	131	390	89	231
client's	49	200	83	108	377
timed	56	100	283	345	969
sim_extracted_dfs	79	265	426	58	963
mad	26	163	53	469	896
ndim	79	251	315	111	413
ndii	18	95	53	717	996
automating	53	58	486	671	585
christoph	25	156	184	376	289
one-row	15	25	203	58	919
arr	62	258	364	264	667
unsupported	79	65	297	675	910
list2	62	109	400	0	111
date	44	99	189	305	843
submit	61	180	108	288	279
2-d	87	141	203	748	973
qcut()	57	136	419	629	854
precisely	26	234	60	714	404
hehe	19	163	469	458	230
rs1	54	140	384	698	878
z-score	33	138	53	469	896
you're	66	55	390	596	320
management	45	200	451	671	884
df_c	73	90	400	504	304
df_b	73	90	391	504	304
df_a	73	90	391	504	304
mergedmatrix	15	258	27	58	116
bears	1	260	60	444	756
\pandas\io\	21	24	121	296	616
tinkering	56	122	320	50	313
adopted	26	116	110	596	880
well-formed	6	185	169	470	166
attach	37	71	227	115	654
attack	16	116	167	438	880
dayofyear	60	99	326	51	753
99.9	55	297	337	766	345
pandas.date_range()	44	269	228	756	684
normalization	52	131	486	469	581
row-based	23	131	486	89	581
normalisation	52	279	486	89	320
final	68	215	185	366	744
df_y	68	215	185	446	768
prone	28	38	474	616	68
2-3	3	212	107	319	697
rsi	29	270	389	292	999
2-4	29	140	389	362	145
2-5	3	217	295	636	145
quandl	25	156	184	329	291
10.9.2	94	218	157	396	291
exactly	26	234	128	596	404
apologise	16	163	167	511	831
lists	87	76	203	21	498
ascending=true	17	30	252	165	86
,..	54	17	340	14	936
ax=axes	7	188	472	10	435
manipulation	23	3	486	671	487
rst	15	265	203	58	166
fuzzy	52	279	319	759	569
overwhelming	48	133	167	50	68
updating	56	176	45	208	617
neck	53	235	471	117	392
ben	82	91	309	388	318
correlate	44	282	491	46	789
cpython	94	156	213	376	906
log10	59	235	471	620	669
distinguishes	6	126	337	315	373
30:61	71	80	334	722	948
df.hist()	7	224	180	10	314
internals.py	21	24	367	134	994
submitted	61	18	108	29	279
overflowerror	79	65	413	675	34
succinctly	28	77	150	438	467
df_3	73	17	391	568	304
df_2	73	286	391	568	304
subfeature	29	131	417	464	941
6th	60	278	384	51	644
bare	45	133	167	50	179
system's	94	217	157	387	291
providing	6	3	488	89	292
distinguished	54	235	133	515	491
unwieldly	26	38	474	436	57
descriptions	93	76	331	761	542
behaviors	26	43	230	62	55
enforced	6	126	169	315	373
stdin	46	185	255	557	702
'```	67	255	79	61	282
19:29	86	81	242	724	465
54	86	169	371	607	783
tabs	91	170	83	784	56
unixtime	44	140	189	305	32
p.s	26	116	128	596	320
py3	21	231	146	49	257
funnel	93	99	185	634	145
yielding	68	215	179	95	744
reorders	89	236	335	360	575
city2	73	17	391	427	311
unpivot	89	236	335	381	103
tab-delimited	49	190	112	6	918
barh	7	224	472	10	314
need	66	234	390	596	888
np.ndarray	79	265	411	791	963
constrained	29	279	389	464	373
border	53	107	201	221	172
screw	53	298	153	52	846
2.0	86	78	448	669	333
ind1	71	25	334	722	948
mappings	46	204	13	193	524
quartile	29	95	419	629	491
0000	86	81	123	724	465
get_value	78	256	426	83	357
column-specific	23	279	390	89	585
2.6	58	218	157	75	141
instance	6	234	390	447	129
issuing	46	127	298	557	773
nbconvert	98	44	19	76	517
singe	23	287	483	447	606
dictionnary	52	76	56	21	498
detector	18	173	331	237	936
brand	82	204	10	343	108
7-day	44	152	53	469	368
sm	33	178	216	545	472
deploy	94	200	451	39	773
pybrain	64	33	7	386	553
plugging	66	262	295	108	747
intentions	1	260	227	714	807
awk	91	231	255	557	360
org_o	73	90	445	698	998
3.7	51	201	448	173	471
sb	82	196	309	144	936
nuisance	6	126	153	315	57
intrinsic	6	262	413	740	34
gallery	53	224	180	304	485
64-bit	58	73	403	340	141
settingwithcopywarning	63	226	413	513	974
0xe2	38	32	455	424	625
drop_duplicates()	57	49	52	381	105
subtracted	54	140	384	698	688
consequences	26	82	230	315	365
url	49	185	275	744	377
.convert_objects	17	40	305	666	86
indx	67	255	79	739	282
sf	27	178	481	502	267
rollreturnrandomdf	62	25	80	306	948
transcript_id	73	204	171	453	108
snapshot	37	71	227	115	909
get_group	11	136	52	223	105
ticket_number	18	204	445	698	108
constrain	64	138	7	330	553
pandas.core.common.pandaserror	79	262	315	740	951
datafram	23	58	185	89	585
impression	26	82	440	766	967
objs	57	286	224	58	151
df.values.tolist()	71	25	334	0	948
order_no	71	5	91	130	867
violation	63	262	213	487	34
encrypted	49	190	454	6	918
3.2633	51	66	238	715	200
crate	68	215	185	446	585
12m	3	212	107	275	822
df.xs	17	80	443	165	432
df['two	67	255	79	785	238
1_2	54	90	340	14	784
join=	90	286	224	619	151
high-level	48	133	451	199	687
forex	13	29	271	156	294
based	52	215	337	447	985
tire	82	91	445	198	108
earned	18	173	394	569	990
envs	21	24	146	49	257
(	6	234	390	596	129
winner	82	204	445	343	936
hopeful	28	38	150	438	467
employer	18	204	445	718	108
brighter	59	235	304	221	629
bases	91	170	83	784	345
bud	38	159	120	144	125
rendering	98	44	19	76	517
inherited	78	265	411	791	450
employee	18	173	394	718	453
employed	66	43	426	759	292
ndx	90	238	391	245	125
thresholds	54	95	176	698	502
achieve	52	116	150	438	320
vitables	46	200	78	39	642
slows	45	100	276	582	347
0:1	71	80	334	722	948
2015-10-29	55	81	242	724	760
indentations	91	170	115	497	345
format_number	27	30	222	161	181
overall	18	152	53	117	368
flattens	87	141	203	748	973
mytable	43	39	161	109	702
120	3	212	371	411	783
tbh	26	38	469	448	434
122	54	169	371	607	987
123	55	237	324	130	62
legitimate	26	82	110	448	880
126	51	221	219	715	200
127	53	170	83	766	345
buyer	18	152	53	435	368
129	3	212	371	607	783
kong	86	196	371	102	465
dodgy	28	133	167	438	687
`pandas`'s	57	256	201	89	292
gray	59	235	304	221	629
evolution	93	282	70	515	491
places	6	279	358	131	970
trucks	93	270	133	464	999
course	66	234	390	596	880
wellness	51	5	91	735	372
transposition	11	131	417	360	581
instantiate	23	265	426	491	450
rint	5	262	315	545	34
tuned	61	126	108	467	57
imposed	94	200	26	368	884
experiments	93	282	486	117	807
overflowing	6	183	169	603	163
islice	45	58	264	342	911
contain	6	76	337	766	431
grab	52	211	337	447	606
isfinite	79	65	297	675	910
dpi	53	68	201	373	172
x.dayofweek	27	57	466	161	588
adjust_price	43	26	134	375	895
computed	33	95	53	409	368
tempfile	49	185	356	557	369
norm.cdf	27	178	27	700	667
omitting	53	208	153	10	640
texts	91	76	319	761	542
operates	11	131	233	760	231
gotchas	78	18	421	323	632
differs	6	215	179	464	606
computes	33	95	53	306	231
legacy	46	190	298	6	642
usefulness	6	279	230	315	585
desperate	16	133	167	50	179
outputted	68	215	454	366	842
operated	45	58	264	151	581
numpy.median	11	256	233	58	26
lut	18	76	185	704	59
plt.close()	7	188	116	10	314
'])``	67	255	79	68	282
int64's	92	104	434	303	416
horribly	28	38	474	616	68
tend	45	38	230	661	57
macros	0	119	356	580	730
state	18	173	394	713	129
luc	6	234	390	596	129
correctly	6	234	390	596	349
horrible	28	77	436	616	347
tens	3	212	368	319	525
select_table	23	190	264	627	585
neither	6	279	179	766	638
indeces	23	126	203	89	292
x_train	87	258	7	386	667
tz	92	54	333	413	530
comparable	45	100	283	345	969
attention	19	163	92	15	476
importance	33	138	106	292	472
buckets	44	269	419	371	669
interfere	94	43	213	376	291
efficiency	45	100	283	467	838
hooks	46	46	451	376	609
key	73	204	13	698	524
self.update	71	80	334	298	968
problem	56	82	110	687	880
thank	19	273	6	63	184
hits	18	152	199	718	990
kr	82	91	331	343	932
sniff	49	185	112	470	815
python.exe	21	24	367	163	994
admin	94	231	213	39	291
shingle	18	204	445	761	840
tf-idf	64	33	296	386	679
admit	26	38	167	448	68
2.x	58	113	260	273	141
215	86	221	242	102	465
uncaught	63	262	413	487	34
estimation	64	138	216	136	528
jersey	55	25	400	650	998
2013-01-02	86	81	242	724	465
single-dtyped	78	226	230	513	974
richer	78	3	488	309	687
triples	93	141	26	681	585
afaik	6	3	488	315	687
.symbol	67	255	79	68	282
tuesday	60	99	352	51	99
shapes.csv	68	234	227	366	909
genre	18	152	331	343	108
maximize	53	235	133	292	172
replying	19	273	6	289	184
rows*	3	212	250	319	633
orig	15	265	483	491	483
quit	66	127	295	108	145
accomplishing	52	77	150	438	467
time.mktime	92	104	434	502	745
build_number	73	286	445	437	304
geometries	93	270	224	447	524
subsetted	23	215	185	446	902
aligning	89	279	45	208	151
939	38	39	134	157	955
'`)	73	297	476	564	311
`'true	91	297	476	564	493
gradoffice	21	24	146	388	318
slowly	16	133	167	50	179
treat	6	210	153	603	349
minimise	53	270	389	117	585
ship	94	200	10	376	884
pandas.to_datetime()	92	104	212	185	745
isolating	23	58	45	208	368
username	73	204	445	112	108
xlsx	0	119	356	550	730
contribute	16	222	44	394	668
corresponding	18	287	337	698	775
league	82	16	171	713	265
releasing	61	197	379	392	622
binning	44	269	419	629	669
git+	25	156	213	376	617
preciacu	18	152	53	141	990
matplotlib.dates	7	224	180	10	314
xlsm	0	119	356	580	730
isnan()	78	256	417	597	763
kicks	63	217	295	636	799
smoking	19	163	469	458	230
ins	48	122	287	323	415
os.getcwd()	43	231	161	545	92
quotation	91	170	158	497	56
mega	71	25	334	14	64
learn's	64	33	7	386	553
contexts	48	279	287	133	313
harder	28	38	474	436	68
tshift	28	77	228	756	684
multi-axis	78	226	272	270	139
dbapi2	46	243	190	218	100
renaming	89	236	45	208	575
wouldn't	66	43	390	661	888
.get_loc	15	208	272	632	166
lamba	28	256	233	436	880
demo	37	71	227	653	115
2012-01-01	86	81	242	724	512
surface	53	235	471	620	571
panning	53	94	471	620	846
in-between	44	269	491	46	789
os.listdir	43	109	161	109	246
/[	71	42	251	90	904
deliminated	49	170	83	6	959
pypyodbc	46	243	190	218	100
.unstack	17	30	370	165	776
]:	71	80	334	130	867
bincount	87	141	203	21	498
inf	80	129	306	612	778
capture	52	211	337	447	606
idxmin()	57	208	52	698	998
mysteriously	6	262	179	766	846
hierachical	89	236	111	270	538
generic	28	3	488	309	487
lmplot	7	224	180	304	314
2012-01-02	86	140	384	82	594
]'	71	293	194	722	867
sqrt	27	178	481	404	667
dir()	11	256	426	430	906
strange	26	82	110	687	365
speaker	18	58	486	713	368
..!!!	19	276	6	204	184
matcher	56	82	227	50	909
party	48	46	451	199	609
pandas.to_csv	49	210	112	185	330
ordinal	6	32	455	424	625
experimented	56	122	287	742	313
a.any()	77	56	64	496	758
http	46	200	275	39	377
x-axis	59	94	471	620	274
1-3	18	173	394	718	453
1-2	86	140	371	411	651
1-5	82	152	199	515	990
effect	6	234	390	596	744
####	71	221	340	102	465
compared	45	100	283	345	838
-inf	80	129	0	201	778
discouraged	78	38	230	309	57
2403950	60	140	384	46	201
frequently	45	38	230	671	179
string-like	10	123	477	603	163
//	71	117	220	700	591
alert_v	86	293	473	356	300
transaction	18	173	394	718	453
reflection	1	260	167	759	807
/(	54	178	141	435	995
i	56	234	390	596	880
])	71	80	334	722	338
column-by-column	23	58	264	89	581
well	26	234	390	596	880
9:00	86	81	242	431	201
month=11	4	34	114	82	548
part2	73	25	400	568	919
/:	38	251	315	470	910
trials	93	282	95	209	822
case-insensitive	52	256	56	34	569
user-friendly	48	46	451	323	415
3.3.3	58	245	403	400	141
arbitrarily	52	141	203	89	927
sourced	46	190	275	6	850
stack_test3.xlsx	38	297	316	157	666
accurate	6	38	491	714	404
mistaken	26	82	345	714	883
dose	26	136	128	223	105
sources	48	46	451	323	415
mistakes	16	133	167	511	63
_ssl.c	5	85	438	425	34
patsy	64	144	457	187	768
advertised	26	234	298	315	880
read_excel()	49	185	112	690	519
skill	18	152	199	718	990
3.3.2	58	245	403	400	141
dict2	73	17	400	427	304
low-level	45	46	488	309	687
spells	18	99	491	283	990
event_time	15	90	246	632	998
density	59	235	471	136	578
nats	80	129	0	201	778
intra-group	23	95	445	698	985
df_filtered	15	25	400	0	948
logged	18	173	199	81	839
upvoted	1	273	131	631	463
\	38	42	251	90	24
2015-12-22	60	99	384	435	80
extends	23	269	488	309	789
runners	18	173	445	761	775
)'`	71	117	340	405	805
upvotes	1	59	92	15	23
timeperiod	79	265	426	791	963
0.13rc1	61	197	493	392	622
accomodate	1	126	390	444	927
2012-06-08	86	81	123	724	512
kick	16	38	167	436	476
00-05	86	81	123	724	512
int32	92	293	169	317	163
definitive	48	222	421	323	415
start_time	54	140	189	305	194
howto	49	185	112	430	954
datatimeindex	23	215	185	446	174
262	55	237	324	650	62
261	21	24	367	445	318
260	21	32	367	213	625
5am	60	99	352	51	99
burden	45	133	230	467	687
data_columns	10	123	477	155	891
immediately	63	127	295	596	365
269	51	85	123	22	43
intersection	15	90	224	454	151
loss	45	116	389	467	145
k-d	48	133	167	309	687
necessary	6	234	390	596	57
lost	26	298	153	437	495
sizes	45	100	133	464	822
alternatively	66	256	390	89	292
dictionaries	23	76	13	21	498
user-defined	11	265	233	760	231
sized	3	269	264	209	822
a.merge	90	238	443	245	206
x.shape	27	258	27	700	667
str.replace	57	256	56	597	569
payments	18	152	199	713	453
martin	19	163	469	204	880
python-	92	183	169	603	416
async	63	127	369	368	773
page	48	203	278	323	415
)')	67	42	466	90	588
likes	23	76	185	235	663
shed	50	276	5	394	253
pandas.io.ga	63	262	213	533	365
14.9	82	196	120	14	465
a-c	73	17	445	698	108
.transform()	11	136	52	223	105
library	48	46	451	430	609
isnull	57	0	246	597	763
a-z	38	42	251	90	24
np.any	17	40	215	322	299
list.append	57	265	426	58	162
liking	52	234	390	89	807
peter	82	196	120	144	936
.abs()	17	147	215	122	282
scales	59	235	471	620	846
df.dropna()	17	49	215	381	86
pinpoint	63	116	110	687	849
__contains__	11	265	426	760	963
re.ignorecase	91	42	251	34	24
broad	1	222	421	15	23
index_column	15	147	409	68	292
overlap	52	279	337	464	151
.info()	68	71	227	455	744
appreciative	50	276	374	412	93
-ve	29	235	389	464	172
intersections	23	76	133	454	999
_ndframeindexer	78	265	426	791	963
demonstrated	1	260	440	444	756
pd.factorize	17	256	56	597	26
limitations	45	118	110	467	687
next_day	55	25	324	650	948
to_frame()	57	256	335	58	103
0.083	38	146	462	771	471
inaccurate	29	99	491	46	145
1970-01-01	92	104	434	303	201
reaching	16	122	239	50	145
real-world	93	282	26	117	687
chokes	63	217	295	636	799
expansion	11	33	7	11	292
pandas.dataframe.where	57	256	233	597	26
agri	73	297	476	564	430
bundle	94	218	157	376	609
offset	44	99	228	303	684
instinct	26	77	128	438	880
right_index	57	286	214	619	806
explicity	10	123	477	265	540
07:30	86	140	242	431	201
microsecond	92	104	434	303	692
pw	90	262	443	245	432
indented	68	71	115	11	909
estimators	64	33	7	378	553
enlargement	78	226	272	270	532
ordered=true	79	262	169	470	963
freedom	33	138	39	330	472
cleans	49	190	454	6	918
metallicity	29	138	389	108	145
recognized	92	210	153	603	349
compatible	6	46	451	376	617
read.py	94	231	213	557	369
recognizes	6	210	112	766	302
0_y	66	211	128	437	320
equally	44	269	87	65	789
?????	55	237	324	650	62
previously	56	234	179	559	967
h3	73	17	309	427	784
h1	82	17	309	427	936
h7	55	188	435	650	776
articulate	16	116	60	15	434
h5	49	190	78	627	557
n-d	87	141	203	748	973
cummulative	18	152	199	713	990
couldnt	19	122	469	350	646
dug	56	122	298	559	476
pointless	1	38	474	714	224
df2.reset_index()	90	238	443	245	206
.applymap()	11	256	233	760	231
utility	49	3	451	430	850
permits	66	116	167	108	476
additional	66	211	390	447	675
.join	27	42	251	90	904
lagged	33	138	53	469	368
phrases	91	76	319	34	555
n-th	54	287	384	14	998
~mask	15	25	215	407	948
vein	1	260	440	444	756
2012-06-10	51	81	123	724	512
2,000,000	3	61	107	362	234
coarse	44	269	491	46	789
hz	29	78	141	669	578
df.isin()	57	256	56	597	26
hy	68	234	390	505	756
north	82	196	309	144	594
n-1	54	247	481	202	215
hr	44	282	491	46	990
hs	82	178	481	144	267
triangular	87	141	136	681	924
frame.apply	27	30	222	161	183
2012-07-01t23	51	5	91	724	619
subjective	1	260	60	444	23
neutral	55	196	309	388	318
hi	19	273	6	289	184
returnsdf.iloc	71	80	334	722	948
goals	1	133	26	15	23
hm	26	163	469	458	230
hc	54	221	141	753	995
overflow	16	222	421	15	415
ha	19	163	469	458	230
minutely	44	269	491	751	789
he	1	260	440	466	756
groupby.py	21	24	121	134	994
converter	92	185	212	185	15
7gb	63	61	231	636	234
re.split	38	42	251	565	835
cells	80	129	337	447	778
1984-12-12	51	81	123	724	512
hosting	94	200	451	39	884
signed	92	153	358	131	416
carriage	91	297	316	784	56
converted	92	210	169	603	416
limit	29	126	201	373	927
empty	80	129	483	766	656
720	71	221	473	356	987
piece	56	71	227	11	909
display	53	44	19	76	517
mechanics	26	133	230	714	55
non-matching	80	129	0	454	410
{1	71	221	334	267	968
{0	38	221	98	267	968
800k	3	212	107	319	633
universal	48	3	488	309	487
pekar's	19	273	195	631	117
exogenous	64	138	216	187	472
twist	52	260	60	759	756
beats	45	179	488	21	906
eom	60	99	326	46	753
multiindex.from_tuples	62	109	27	0	919
b_l	62	109	400	0	498
education	16	163	167	204	476
eric	1	260	120	444	756
chromosome	73	204	171	453	265
functions	11	3	233	62	231
afplot	73	17	409	14	784
anaconda3	21	24	146	49	257
~30	3	61	295	362	234
super()	67	262	426	68	618
$path	25	231	177	214	437
x-value-window	33	235	53	515	491
ungrouped	6	279	230	315	231
inject	98	43	19	76	807
onwards	80	278	384	447	939
convert_objects()	57	183	305	603	163
pd.read_json	43	185	161	470	519
df.shift()	17	40	215	122	86
lc_all	38	68	316	373	955
numeric_only=true	17	30	222	165	86
df_grouped	27	30	222	161	181
star	46	200	10	39	642
rdms	46	243	190	218	642
anaconda\	21	24	121	163	666
vectorizing	45	3	283	417	687
upsample	44	269	228	756	789
{}	62	109	161	90	904
covariance	33	138	450	330	999
offshore_umgeni_deep	86	221	340	102	465
stab	65	43	436	436	476
additionally	6	234	390	596	129
cut-off	29	95	53	717	491
friends	66	279	421	62	775
sphinx	98	185	213	430	850
non-existing	80	129	0	201	778
.all	17	40	215	322	299
.iat	71	226	272	407	139
epdfree	25	156	184	376	289
covariances	33	138	53	469	896
inset	59	94	471	620	944
extras	21	231	146	388	257
fieldname	55	237	324	453	64
as_matrix	15	256	411	58	963
diagnosis	18	76	394	761	542
15-20	3	212	454	362	633
lives	93	133	26	117	179
chiming	19	163	6	289	184
validation	64	33	296	386	679
bcp	49	190	454	6	918
indirectly	53	185	426	430	850
np.int64	92	147	305	667	526
secondly	66	234	390	89	320
todays	60	140	384	435	157
pd.to_datetime	92	36	212	502	745
pardon	16	222	92	511	74
similarity	33	95	450	247	999
whoops	19	163	469	458	230
dynamic	52	3	150	89	487
zelazny7	1	260	195	444	117
extrapolated	80	129	0	390	410
update2	68	234	390	596	320
update1	63	127	295	636	799
6pm	60	99	352	51	201
pd.series.value_counts	17	30	249	161	181
.extract	67	42	251	34	655
whose	6	90	337	447	431
auc	64	138	216	378	472
df's	89	286	224	248	151
calculate	33	95	53	409	368
aug	4	34	312	82	548
segments	93	235	133	464	172
contained	6	76	337	766	431
presents	56	215	179	74	585
aus	82	196	309	144	125
investigation	63	82	110	687	365
sub-group	18	287	53	698	108
offending	63	170	83	347	345
preprocess	49	170	112	347	345
teaching	19	163	6	204	184
sorry	19	163	60	458	230
up2	15	25	409	0	948
updated	1	260	195	444	756
rescue	19	273	6	289	184
downstream	6	126	153	315	365
to_hdf()	45	100	283	97	838
activation	93	282	199	634	19
terminal	98	231	487	160	983
misunderstanding	26	82	59	714	883
ylist	54	25	306	632	998
covert	92	183	169	603	416
2012-03-01t00	51	85	123	22	464
input.csv	91	76	400	761	542
updates	66	234	483	596	982
namespaces	48	46	451	485	609
ptvs	63	231	487	160	983
affect	6	126	390	513	927
vfiax_monthly.open	71	80	141	88	995
vast	45	38	474	309	57
x-values	59	94	471	620	274
\pandas	21	24	121	163	666
subsetting	89	236	45	360	538
axis=none	42	258	27	132	195
itemid	73	204	445	698	108
skills	48	133	439	511	831
df_training	15	215	185	446	987
upd	68	262	227	95	756
companies	13	29	326	626	294
solution	28	260	436	759	117
uint32	92	183	169	603	163
.any	17	40	215	322	299
convenience	78	3	488	309	687
unrelated	1	260	110	687	55
2013-01-06	60	99	352	51	753
enhance	45	100	264	467	838
df.index.values	71	147	334	667	948
.to_sql()	46	243	190	218	100
ups	19	163	283	467	838
10k	3	212	107	319	633
pd.read_hdf	49	185	112	690	519
n_jobs	64	33	7	700	212
force	66	126	390	89	927
pd.options.display.max_columns	38	262	409	14	432
concise	28	77	150	638	467
warns	78	226	230	513	974
heterogenous	23	279	203	446	585
10g	3	61	231	275	234
phstab	18	287	384	698	439
across	52	279	337	447	585
10x	3	100	283	345	969
ctrl+c	63	127	295	636	799
10s	54	140	384	435	145
implemented	61	3	488	83	687
incompatible	79	65	413	675	34
`'false	91	297	476	564	493
even	26	234	390	596	880
pythonic	28	77	150	638	467
preferences	25	231	144	160	983
iterating	23	58	385	151	911
pace	16	122	167	50	476
df.duplicated	17	40	215	322	299
integrity	89	126	126	437	495
prc_path	68	215	185	653	843
dt.datetime	4	36	466	502	588
nrows=1	43	39	47	109	488
comparision	23	139	417	439	581
sub-frames	23	58	264	151	292
programmatically	52	116	128	89	606
new	23	211	483	447	982
net	33	235	199	292	990
poorly	26	38	60	714	434
ever	66	234	390	596	880
metadata	10	190	78	627	557
coefficient	33	138	216	330	472
10+	3	212	107	23	633
series.str.replace()	57	256	56	597	26
mem	94	61	231	368	234
never	56	163	469	458	967
weirdly	56	82	179	559	365
recipe	48	18	440	323	615
10%	29	212	389	582	255
a.all()	77	56	64	496	758
met	52	0	246	763	502
108	86	169	371	102	783
60000	38	140	141	14	995
tornado	98	44	487	39	517
possibility	52	3	390	759	57
facetgrid	7	224	180	304	314
103	55	5	91	130	867
100	3	212	371	411	633
aren't	6	279	390	661	373
107	3	169	371	607	783
interpret	6	210	153	766	349
105	54	169	340	404	388
df.reindex()	15	25	272	505	919
df_right	17	30	334	68	432
inefficiently	45	43	488	417	687
last_valid	1	260	440	759	756
kington's	1	260	440	444	117
recordings	93	282	70	634	789
ignoring	6	126	153	624	675
eh	19	163	469	15	320
credit	1	222	92	15	190
indentation	63	170	115	497	799
permit	78	226	230	315	927
np.column_stack	87	258	27	667	667
pandas.io	46	185	190	545	100
suitable	28	3	488	655	487
scattered	93	279	337	761	129
tweet	49	76	319	6	542
fell	66	211	128	108	145
fantastic	19	163	6	204	184
df['duration	67	36	79	502	588
hunch	26	82	60	448	434
slicer	15	208	272	58	919
slices	15	208	272	151	538
serialize	49	185	34	627	557
engineering	82	200	26	713	884
.resample	17	159	370	508	776
sliced	23	215	185	446	174
specifics	48	116	227	62	807
sns.lmplot	59	224	471	304	944
moral	78	131	488	89	292
costly	45	100	244	342	838
counts	18	152	73	698	368
endings	49	113	316	557	369
circumvent	26	116	110	687	363
denotes	60	287	384	14	784
fixed-width	49	190	112	507	808
undesirable	89	126	153	315	575
pulp	45	116	167	309	687
remainder	80	140	358	131	692
tabulated	91	170	83	784	345
leaks	45	209	244	368	234
call	11	265	426	760	292
precompiled	25	156	184	376	289
typo	19	163	60	458	861
python27	21	24	146	163	666
survive	6	126	153	766	129
calc	33	58	53	469	231
type	79	183	169	603	163
tell	26	116	128	596	320
mckinney	48	203	278	323	415
matlab	48	144	451	183	850
alphabet	91	297	476	784	56
`df`'s	73	90	400	454	304
posting	1	222	373	15	23
alphas	53	235	133	221	491
composite	23	215	185	446	982
expose	48	46	488	309	687
x.mean()	27	57	466	161	588
training	64	33	296	386	679
warn	61	226	375	740	974
restaurant	33	95	53	343	999
__iter__	27	57	222	132	618
df_one	73	286	245	568	304
count1	73	17	445	427	108
ward	73	204	445	305	108
aligned	6	236	224	620	575
sped	45	261	283	582	838
kumar	19	273	195	631	117
pivoting	89	236	45	208	575
room	93	173	199	117	990
rights	94	173	394	27	884
0.13rc	61	176	50	392	617
pandas.dataframe.apply	11	136	233	760	231
avgdegf	80	129	358	131	970
candlestick	59	94	180	304	944
spec	49	74	454	594	853
movies	18	173	394	343	542
exceptions	63	43	413	357	365
akin	52	215	185	43	292
root	94	231	213	557	369
collapsing	89	236	335	360	575
np.isfinite	17	40	215	322	299
orignal	23	215	185	437	982
dayofweek	92	251	434	703	416
defer	48	133	167	199	687
give	68	116	227	366	744
iterative	52	58	385	417	911
stressing	26	163	469	458	230
implementations	48	46	451	62	609
ocaml	48	46	451	183	850
involve	28	3	488	417	687
10,000	3	212	107	319	633
caused	63	82	110	687	365
cursors	46	200	369	368	773
magnitudes	6	100	53	469	838
reseting	89	236	335	360	575
2.1.0	58	245	403	340	176
dataframe.from_items	62	109	27	505	162
dataframe.applymap	11	256	233	760	26
to_replace	91	297	306	34	848
predictors	64	33	7	386	679
glonass	73	286	224	248	304
january	60	34	352	51	753
shapefile	53	270	304	195	571
scikit	64	33	296	386	553
0.7.2	58	176	50	392	617
0.7.3	58	176	50	392	622
0.7.0	58	176	50	400	141
boroughs	18	45	331	343	454
ananconda	94	218	157	396	322
faults	63	61	295	636	234
amazing	19	163	497	204	184
2006-04-25	51	81	123	724	512
answer	1	222	92	15	23
reindexing	89	236	111	360	505
faulty	26	170	83	766	365
config	53	231	454	557	369
blanket	78	183	235	470	57
pandas.groupby	11	136	52	223	105
loggers	93	282	491	634	789
subdirectories	49	231	177	557	318
untill	56	122	287	108	911
blanks	80	125	0	201	778
timedelta	92	104	434	622	780
replacing	80	129	45	208	778
m-1	54	247	481	700	267
from_csv()	57	74	235	690	853
violates	78	3	488	315	373
thankyou	19	273	6	289	184
curiosity	19	163	469	458	880
timelines	53	279	471	515	585
president	82	91	309	144	936
summarize	52	215	486	447	368
fedora	58	218	157	400	617
purchase	18	173	394	718	453
np.correlate	27	178	27	632	667
attempt	56	260	94	533	744
8:00	60	81	242	431	201
third	80	211	384	447	939
datafame	23	215	185	446	585
try-except	11	112	347	760	691
follwing	68	262	179	95	59
checkerboard	59	235	304	221	491
out-of-the-box	28	3	488	438	487
re-cast	92	183	169	603	416
panda's	52	3	488	89	487
operate	11	131	417	760	581
681	71	221	371	102	783
.swaplevel	17	30	466	165	86
operations	78	131	417	439	581
virtualenvs	25	231	177	376	609
withing	11	58	264	89	231
upstream	61	82	298	83	617
sort=true	17	30	27	132	195
my_data2	54	258	340	700	667
re-writing	49	234	454	208	902
ordereddicts	26	43	488	21	57
weeknum	73	17	391	427	311
vastly	45	100	283	467	838
responsive	26	38	167	436	434
linewidth	7	224	304	221	986
before	56	234	390	596	967
10.1	58	176	50	75	617
10.0	51	201	448	69	441
file's	49	190	454	6	918
10.7	94	201	448	173	471
x-coordinate	93	235	133	515	571
20140104	29	140	384	14	594
parsers.pyc	21	24	121	163	666
,	66	234	390	596	129
decile	29	95	53	775	491
20140103	60	140	318	82	594
better	28	77	150	638	467
differently	6	234	390	596	129
persist	23	58	264	342	583
naturalnamewarning	46	262	413	740	365
weeks	60	99	352	51	753
overcome	52	116	110	687	363
restoring	98	44	487	557	369
maximal	29	95	73	13	998
donors	18	173	331	761	661
plt.savefig	7	188	116	10	314
indexingerror	79	65	279	530	724
widely	46	46	451	39	850
combination	18	279	337	447	775
a.values	67	147	27	667	526
weakness	48	133	488	309	687
')`	67	159	409	68	282
1-4	73	17	391	305	304
station_id	18	152	326	698	368
mxn	87	141	203	446	973
modification	68	260	45	759	982
yearid	73	204	445	564	311
joecondron	1	273	195	631	117
resizing	53	126	153	342	924
one	52	211	337	447	129
decorator	11	265	426	760	450
anaconda\lib\xml\etree\	21	24	121	163	666
hhmmss	44	140	434	303	843
grammar	1	260	287	444	756
meat	82	200	10	238	377
brightness	54	95	53	13	998
chaco	53	269	180	89	846
fid	82	196	219	144	936
.findall	67	42	251	34	655
non-consecutive	44	269	491	46	789
1x2	87	141	203	748	973
subquery	11	144	488	309	166
proceeding	66	211	128	797	145
right_on	90	286	214	619	806
went	56	122	298	559	587
interpolation	44	269	0	563	410
.table	71	147	27	505	432
side	53	298	224	77	427
mean	33	95	53	469	896
rebooted	63	127	295	613	145
inserts	46	137	483	74	709
successively	23	279	337	23	585
matricial	71	25	272	407	948
hasn't	56	122	298	83	617
principles	45	38	474	62	525
.h5	10	190	78	627	557
taught	16	163	469	204	476
trading	13	29	271	156	294
forgot	19	163	469	458	230
a1	73	17	391	427	686
lawyers	51	201	371	102	465
extract	52	215	185	447	606
enclosure	51	66	438	471	658
unbound	79	251	426	760	963
typecast	49	234	169	470	519
realtime	68	234	169	603	615
gradient	64	138	216	187	472
restricted	6	126	488	309	775
raw=true	57	23	233	597	763
start1	82	91	133	547	125
crucial	26	116	60	714	55
pd.indexslice	15	226	272	407	139
df2.index	90	147	443	231	843
content	68	76	454	6	918
.map	67	57	466	161	588
reader	49	190	112	690	918
surprise	26	100	283	345	347
extensively	48	122	287	110	313
re-arrange	52	279	185	447	585
normed	29	147	141	700	995
turning	23	137	45	99	709
linear	64	138	216	187	472
largely	78	3	488	309	687
resume	63	127	295	557	369
2014-03-04	51	81	123	724	512
2014-03-05	51	196	91	471	465
1s	54	151	73	435	717
2014-03-03	86	81	242	724	201
toeach_category	11	265	426	491	196
244	86	169	371	607	783
1min	44	99	491	756	789
-function	11	256	233	597	26
struggle	56	122	474	50	827
fit_transform	64	33	457	386	553
df.append	62	109	225	0	162
new_york	4	54	333	725	530
reinvent	66	43	167	309	57
pandasql	46	243	190	218	642
starts	60	137	295	108	145
messages	63	127	413	108	773
ist	53	200	454	388	318
df.key	71	25	334	722	948
ish	68	260	227	11	909
iso	92	210	434	303	349
100000	3	212	107	319	633
signature	11	142	222	760	618
arrived	56	122	120	436	320
pandas.daterange	15	117	443	58	843
spektrum	86	169	454	607	783
bite	66	43	230	52	57
user	18	173	394	718	453
structured	87	141	203	748	973
chronologically	18	145	317	184	990
features	64	33	7	386	679
np.all	15	40	215	322	299
grade	18	13	445	343	108
fill_between	7	224	180	10	314
thereof	52	279	10	89	11
executions	18	58	385	117	46
hook	53	3	488	89	487
numpy.random.randint	11	256	233	597	26
downside	29	38	474	501	469
enumerate	62	109	80	0	498
immensely	50	276	374	412	93
ditch	66	234	390	89	487
value_vars	89	236	335	360	292
hood	78	3	488	315	581
1a	54	248	21	14	478
))]`	71	228	206	405	338
annotated	59	215	471	304	944
misusing	26	82	345	714	434
hawks	86	169	318	715	892
amsterdam	82	196	91	725	760
dataframe.resample	92	234	228	756	684
-th	62	287	80	202	998
zeros	80	151	0	201	717
dwell	54	25	340	427	784
io.stringio	43	39	47	109	246
size=100	71	117	334	267	319
mutate	11	43	138	760	231
eigenvectors	87	141	450	681	325
pd.dataframe({'value	71	117	340	267	968
right_index=true	90	238	214	333	206
feature2	82	91	309	144	125
outputting	23	215	45	6	902
feature1	82	91	309	427	125
myfun	11	136	222	760	231
pandas-based	45	100	283	345	969
post-processing	45	3	486	417	487
tokens	18	76	319	292	542
targetdir	43	231	177	557	369
read_only	79	74	235	690	853
somewhat	28	38	474	436	68
1h	60	99	491	46	753
requisite	18	76	337	464	775
peculiar	57	242	335	381	675
symptom	11	279	233	62	231
begins	80	129	384	162	778
distance	33	270	450	247	999
100gb	3	61	231	275	234
ew	33	178	70	580	439
1m	3	212	107	319	633
allblue	62	109	400	0	162
older	58	176	50	19	617
enabled	98	44	24	747	983
imputation	64	33	296	386	679
normalizing	23	190	45	208	902
preparation	56	33	486	671	179
matter	26	234	390	596	927
all-share	82	196	309	144	125
silly	26	163	469	458	230
frame_table	23	190	78	627	557
int64index	79	65	315	130	867
chardet	63	231	213	557	369
enables	45	3	488	74	328
bidder	73	90	445	305	304
`df['col	67	255	79	785	282
extracting	23	215	45	26	902
abbrv	67	112	206	122	916
usages	3	61	231	362	234
vector	87	141	450	681	325
sees	6	210	153	74	796
munging	28	133	486	671	179
modern	45	100	488	309	687
mind	26	260	60	15	880
mine	1	260	195	759	117
7th	60	278	352	51	644
seed	33	95	133	292	578
stringio.stringio	49	185	316	470	519
seem	26	122	287	350	880
mins	3	212	491	362	692
seek	66	211	264	108	911
tells	6	234	179	74	615
logical-or	11	223	417	439	763
qtconsole	98	44	487	337	983
miliseconds	92	104	434	351	416
estimated	33	138	216	330	472
test_set	68	109	161	0	919
expressive	28	3	488	309	687
winxp	94	217	157	84	322
specs	68	217	227	557	807
data=	71	117	334	267	968
fitting	64	138	7	187	472
datetime.time	92	104	434	20	780
sframe	23	215	483	287	982
data1	73	17	400	568	254
data0	55	17	400	568	784
data3	73	17	391	568	254
data2	73	198	400	568	254
x-ticks	59	94	471	620	274
newline	91	170	316	615	56
data\	43	162	47	109	246
regular	52	3	56	89	569
iterate	23	58	385	151	911
raise_on_error=true	17	68	305	132	195
my_array	71	25	334	722	948
many-to-one	73	90	13	770	524
inconsistency	26	82	110	315	55
maria	82	196	309	144	125
doh	19	163	469	709	230
programmingerror	79	65	413	487	34
don	52	234	390	661	280
observation	18	152	491	46	990
dom	91	43	83	661	57
dob	73	204	189	305	311
doc	61	18	278	323	53
alarm	6	262	153	357	166
index.levels	15	25	334	632	948
m	54	247	481	14	267
dog	32	91	10	92	936
randall	55	91	120	14	936
??????	38	262	409	564	527
dateframe	44	215	185	446	843
definitely	26	38	469	436	880
principle	45	43	488	436	57
hamming	33	95	53	247	999
estimator	64	138	7	330	472
dos	63	231	213	557	369
mailing	61	18	421	288	279
consumes	3	61	231	275	234
datas	13	198	185	634	843
20-30	93	282	199	713	990
perspective	45	133	282	309	687
optionally	80	211	335	347	768
introspect	66	43	426	491	369
one-dimensional	87	141	203	748	973
visitor	18	152	394	713	453
whitelist	52	240	337	447	707
probe	93	204	454	662	775
speedup	45	100	283	345	838
single-index	23	236	335	360	575
implying	6	210	454	589	349
~10	3	212	107	319	633
customer2	73	262	409	68	282
liberty	56	260	45	208	967
stepping	63	127	295	108	145
~15	3	212	107	362	633
consequent	80	211	337	766	129
randomize	23	58	337	447	585
index.pyx	21	24	367	479	637
pandas.lib.timestamp	79	251	315	111	449
pandas.hashtable.pyobjecthashtable.get_item	21	24	367	479	637
trade-off	45	133	230	467	687
field2	54	293	473	14	784
non-sequential	52	211	337	447	784
explain	16	116	5	394	320
field1	54	178	53	469	368
cross-platform	94	46	451	376	609
sugar	12	43	474	436	57
celery	94	127	369	368	773
month_name	59	94	471	620	274
here's	37	71	227	11	909
folks	48	222	421	15	23
folder	25	231	177	557	369
index.pyc	21	24	121	163	44
np.abs	71	80	215	757	299
set-up	94	200	227	11	909
exports	49	190	454	6	918
above	68	234	227	95	909
compounded	15	147	141	632	995
year-olds	86	169	371	411	783
stop	63	211	295	108	145
next	66	211	384	108	939
12	4	169	371	411	110
my_stat_function	11	136	222	760	231
quarters	60	99	326	46	753
s.map	27	30	27	161	181
14	86	169	371	411	110
min()	11	15	52	223	105
child	63	127	369	368	773
chronological	89	145	317	184	575
bar	59	224	471	304	944
bools	15	0	246	439	502
indenting	91	170	115	670	345
fields	18	170	267	766	345
baz	72	91	391	427	311
.where	67	40	156	597	763
bag	87	76	450	681	542
bad	26	38	60	448	57
intervals	44	269	491	46	789
architecture	94	200	451	396	884
scraping	49	190	275	6	902
memory_map	78	74	235	132	853
bal	55	237	324	14	64
compilers	25	156	184	376	291
flagged	1	260	92	444	23
test.txt	43	39	47	109	246
ears	16	116	167	438	434
headed	89	236	335	659	311
vectorization	45	43	283	611	357
interpolate	80	269	0	563	410
datetime.datetime.now()	38	36	466	502	588
julien	19	273	195	289	184
pyside	25	156	213	376	291
sharey=true	7	188	472	10	435
self._reader.read	43	117	161	267	319
pandas.dataframe	87	215	185	58	292
testing	56	33	283	345	969
df2.columns	90	238	443	245	206
alterations	26	43	469	596	967
zones	44	54	333	725	530
cutting	56	137	295	108	709
decided	56	122	298	350	179
np.diff	11	147	27	632	181
python.framework	21	24	146	49	341
01:15	51	201	123	724	512
subject	93	173	26	117	542
brazil	4	196	309	82	594
03	4	34	312	82	636
00	86	81	242	724	512
01	4	34	312	82	636
06	4	81	312	82	636
07	4	34	312	82	636
04	4	34	366	82	482
05	4	81	127	724	512
sorta	26	163	469	458	434
08	4	81	312	724	548
09	4	34	312	82	636
artificial	37	71	227	115	909
filename	43	39	47	109	246
reassigned	15	208	483	437	483
system-wide	25	156	184	649	289
there's	26	38	150	436	323
simplest	28	77	150	638	467
sorts	89	145	317	184	575
tolerance	29	168	246	464	502
df.t	71	147	215	129	948
lazy	26	38	167	436	57
triplet	23	76	337	447	345
omg	19	163	6	289	184
programatically	66	170	83	347	361
visualise	53	44	19	76	517
restricting	52	279	345	447	615
ignorance	16	222	92	511	74
residual	33	138	216	187	472
380	54	293	473	356	300
381	87	169	270	607	783
df.update	17	49	443	165	86
383	51	85	123	22	43
upfront	6	126	390	661	927
worksheets	0	119	356	580	730
picking	56	261	45	208	145
nbytes	63	262	413	575	34
article_id	73	204	13	305	108
gigantic	45	190	264	209	822
suggested	1	273	440	631	117
0s	80	151	0	201	717
landuse	89	94	326	620	575
runtimewarning	63	65	413	487	34
unquoted	91	170	83	784	56
against	52	234	390	447	129
0}	38	293	98	157	62
pandas.dataframe.replace	57	256	56	597	26
data-structure	45	61	369	368	773
0a	51	169	371	607	43
`df1`'s	73	90	400	454	311
restarting	63	217	295	613	799
urls	49	76	275	6	542
.xs()	57	208	272	381	538
contribution	1	222	92	15	476
highcharts	53	44	19	76	517
0l	38	262	91	130	867
])))`	71	80	334	722	948
pandas.dataframe.from_dict	57	256	426	58	963
presumably	6	234	390	596	365
longitude	93	110	133	276	267
np.random.uniform	71	117	27	700	319
appeared	56	211	179	158	967
foobar	19	273	440	631	117
gathering	23	58	486	671	585
loader	49	190	454	6	918
\b	91	42	251	34	24
anova	64	138	216	187	472
window=3	17	284	141	165	86
loaded	49	190	454	6	918
plotting.py	21	24	367	134	994
targeting	53	200	454	108	377
xlist	54	90	0	454	998
asks	1	260	475	466	23
basis	44	152	53	469	368
n**2	45	247	479	253	287
placeholder	80	129	0	201	778
three	18	279	337	23	129
tiny	45	100	283	345	838
dataframe.describe()	11	144	233	469	231
recognised	6	210	153	603	349
replicate	37	71	227	115	508
interest	52	211	337	584	615
basic	48	133	486	50	487
entered	56	173	394	718	377
lovely	19	163	6	204	184
over-ride	44	269	491	46	789
$#$	71	228	334	122	835
threw	56	82	179	533	967
website	48	203	275	323	377
readerid	73	17	400	274	998
deeper	28	298	436	436	476
groupby-apply	11	136	52	223	581
quantities	44	279	491	292	789
government	82	91	331	144	727
chum	19	273	195	631	184
t3	82	17	391	144	125
smsx	62	109	161	491	196
111	86	221	340	14	401
tentative	1	260	440	444	756
pandas.io.sql	46	243	190	218	100
xtrain	15	258	27	513	974
165	38	262	367	445	161
166	82	293	473	356	300
167	86	140	340	14	995
160	86	169	371	607	783
boolean-valued	73	90	246	698	311
162	86	169	438	607	161
163	86	221	438	607	161
exception	63	262	413	533	34
originate	46	243	190	752	642
zero-based	15	208	272	270	461
remaining	80	211	337	447	675
-------	51	66	238	471	658
ugly	28	77	436	616	467
os.chdir	43	231	161	545	369
gropuby	17	211	27	700	368
neat	28	77	150	638	467
setuptools	25	156	328	214	492
ipy	63	44	487	160	983
sp500	13	219	289	329	956
ipython-notebook	53	44	487	76	517
mangle	66	126	390	89	927
anchor	66	211	83	347	606
spawn	94	127	458	368	773
ix	78	226	272	270	139
seven	18	152	337	23	345
metropolitan	93	152	331	713	491
mexico	82	196	309	144	465
ip	18	240	454	56	707
is	6	234	390	596	129
dtu_topic_split	73	293	400	14	784
submatrix	33	95	53	469	601
complaint	26	262	110	596	365
countryacc	18	287	384	698	998
ii	67	215	185	447	588
shame	26	163	490	448	230
cant	56	122	287	350	888
kwarg	57	74	235	690	853
im	56	55	167	50	880
get_figure	79	251	315	111	413
io	21	24	367	408	994
in	6	234	390	447	129
march	60	34	352	51	753
80,000	3	212	107	319	633
ie	52	211	337	447	129
id	18	204	445	305	108
disappear	56	298	179	437	981
expirations	54	140	473	578	297
series.str.extract	57	256	56	597	569
pre-allocate	45	58	264	342	57
80m	3	76	107	761	542
20m	3	212	107	319	633
realizing	26	163	469	458	967
kdtree	64	33	7	247	553
depreciated	61	176	235	83	617
potentially	6	38	230	315	57
unfortunate	26	38	230	637	373
yourlist	71	109	161	0	64
filtered	23	215	483	447	982
sat	60	34	352	82	753
grows	45	100	244	582	838
entitled	73	204	445	568	304
meets	52	0	246	763	502
i1	55	25	272	407	139
declaring	49	190	45	208	902
i2	54	17	340	427	784
col_name	15	25	215	0	919
differing	6	62	133	464	204
i7	94	217	231	84	322
pd.dataframe({'x	71	221	334	267	968
i+	55	237	324	502	62
waterfall	89	236	185	446	575
bloomberg	13	190	275	6	918
supposing	44	215	185	23	129
arcityarcountry	82	196	309	144	125
opportunity	48	133	167	204	687
thoughts	50	276	374	412	849
1417982808753	55	85	123	22	464
2014-12-31	60	140	242	305	201
suffices	55	234	128	596	880
multi-dtyped	78	226	272	513	974
programs	94	46	451	557	609
aggfuncs	23	116	60	89	434
.predict	27	258	27	700	667
youre	26	234	60	436	880
80%	3	212	107	362	633
fruit_type	93	279	133	464	491
practices	50	116	374	62	849
netezza	46	243	190	218	642
0-based	15	208	272	270	461
paradigm	11	3	488	223	581
yours	1	260	195	759	117
left	89	286	224	77	924
keep_date_col=true	43	74	235	690	853
etiquette	1	222	92	15	23
stats.f_oneway	71	80	334	722	948
protocol	46	185	342	430	850
just	66	234	390	596	292
wasteful	28	77	474	616	68
yea	19	163	469	458	230
upgrading	58	176	50	392	617
3's	29	95	73	13	971
unfair	26	38	474	436	68
somethings	45	43	230	436	57
assigned	15	287	483	766	483
bandwidth	29	138	389	70	578
identify	52	211	337	447	606
transforms	87	215	457	446	768
human	53	282	471	620	846
agg()	11	136	52	760	231
__dict__	57	265	426	791	450
yep	19	163	469	458	230
yes	19	163	469	458	230
zoo	48	144	233	183	565
yet	56	122	287	350	313
could've	56	234	390	661	967
buyers	93	152	53	515	999
nudge	50	276	374	412	93
candidate	61	197	108	392	279
infinitely	45	61	231	368	234
regarded	92	210	169	603	604
character	91	113	83	784	56
tuples	15	76	203	21	498
affinity	6	265	457	446	553
join()	57	256	52	381	105
allele	18	95	73	343	775
save	49	190	454	6	918
adress	52	234	390	89	292
designate	6	126	153	766	927
opt	25	231	146	214	437
119	63	262	295	636	783
index-value	89	126	337	698	373
reuse	45	58	264	89	585
appreciated	50	276	374	412	93
ops	78	131	417	439	581
df_base_val	54	25	340	14	998
whichever	66	211	390	447	606
read_hdf	46	190	25	155	271
|#	38	42	251	90	62
background	53	235	471	221	944
wanting	52	234	345	596	320
half-way	56	211	128	108	911
locationid	54	17	79	434	998
ajcr	19	273	195	631	184
p_value	54	178	340	14	998
1553	71	117	340	267	987
thank-you	19	273	6	289	184
statsmodels.formula.api	64	138	216	187	472
visible	59	235	304	221	172
new_col	54	17	400	568	282
performing	23	131	486	208	581
manual	28	3	436	616	487
unnecessary	45	43	474	342	675
arrivals	18	152	199	761	661
switching	56	261	298	208	747
np.where	15	0	246	122	502
np.__version__	58	176	50	400	141
`dataframe`'s	23	265	224	248	151
store.keys()	62	58	385	151	911
.squeeze()	17	147	215	381	763
differencing	52	99	53	46	368
index=0	73	17	306	612	64
deal	52	116	167	89	927
formulas	0	119	356	96	730
rpt_date	73	204	445	305	613
35047	71	258	340	700	987
interp	15	287	337	698	129
somehow	26	234	390	596	880
dead	63	127	295	108	799
36	86	169	371	607	783
wb	43	39	47	109	246
invoice	93	282	185	634	431
statistic	33	95	53	730	381
dear	19	273	6	289	184
chromosomes	93	76	171	761	542
line2d	7	224	180	10	435
short-term	44	269	491	46	789
subdf	15	25	138	513	974
dense	87	141	450	681	325
trace	63	71	227	115	807
notification	66	222	92	15	807
share_amt_to_buy	29	140	384	435	145
flush	94	127	369	368	773
daytime	93	282	199	634	990
runing	63	262	179	766	675
hist()	7	224	180	10	314
`'name	73	204	476	564	311
208	49	190	454	6	918
locators	7	94	180	185	274
.apply()	11	136	233	760	105
incidence	18	152	394	761	542
initiated	63	265	426	491	196
colormap	59	224	304	221	629
gridsearchcv	64	33	457	386	553
exports_past	54	178	141	700	995
statistician	48	133	167	50	831
burn	1	260	60	436	756
index=x	27	117	466	267	588
34	86	169	371	411	783
translated	46	185	169	603	850
maintainers	61	18	108	309	279
id's	8	76	445	761	542
selectable	46	44	19	76	517
super	26	38	474	204	880
something's	26	82	110	436	880
`df['hour	67	36	79	68	588
postgresql	46	243	68	218	642
=true	17	40	215	165	86
sub-select	15	0	400	0	919
jsonpickle	49	185	451	430	850
conditioned	93	152	199	713	990
afternoon	56	122	320	643	879
azure	94	217	231	84	322
restate	1	260	60	444	756
df.index.date	67	36	370	502	614
automatically	6	126	153	766	927
time_unit	11	251	222	111	618
proteins	93	76	171	761	542
managers	48	46	451	309	609
nfft	33	115	389	469	231
formerly	46	185	161	505	850
tract	18	173	394	713	491
lien	18	91	40	713	753
plt.show	7	188	116	10	314
parsing	49	210	112	6	349
subf	11	265	426	491	196
question's	1	260	440	444	756
overkill	28	77	474	616	487
lieu	46	243	169	218	963
dflist	90	109	443	0	919
chime	16	222	92	394	849
c's	54	17	445	698	765
matrixes	87	141	450	681	325
+00	51	66	238	471	658
group_concat	23	215	185	447	606
+02	71	221	340	14	867
+03	51	66	238	130	867
+04	51	85	123	22	877
df_later	78	226	272	513	974
df.query()	57	256	56	597	26
+09	6	234	390	14	129
initial	68	211	185	446	982
spot['espec	67	255	79	122	282
approximate	64	269	7	563	553
inspected	49	185	201	430	519
leaf	53	76	275	562	71
editor	98	113	487	758	983
fraction	33	95	53	469	896
v.index	7	188	409	10	435
topandas	23	3	335	58	292
asset	93	173	26	713	294
timestamped	44	269	87	634	703
pd.cut()	64	33	419	629	669
form	23	215	185	446	585
plt.subplots	7	188	344	601	706
in-kernel	78	3	264	309	557
m2	87	247	481	404	267
analyse	93	282	275	634	179
ford	82	196	309	144	125
31st	60	34	352	51	992
>>>	69	117	161	545	92
228	71	221	340	700	667
227	44	140	491	46	692
226	71	25	334	607	161
frame.py	21	24	367	134	994
224	53	188	472	607	161
222	86	221	340	102	167
221	68	178	340	14	267
220	3	212	107	319	633
rollforward	44	99	228	756	684
index.get_loc	57	256	426	470	166
builds	56	46	298	376	617
streaming	49	190	275	368	773
file.csv	43	39	47	109	246
prevents	6	126	153	74	365
pointintime	54	221	340	14	987
attached	68	215	227	11	909
bounds	29	208	133	162	924
tree-like	23	76	185	727	557
gdf.aggregate	27	30	222	161	181
pivot()	57	256	335	381	103
groupby.transform	57	256	233	760	292
benchmarks	1	18	283	345	969
\d+	27	42	251	34	24
whisker	29	235	304	221	924
stages	48	152	486	62	368
df.age	67	228	206	122	916
diagnose	37	116	353	115	807
zeroes	80	129	0	201	778
sticks	45	3	488	309	687
semicolon	91	170	112	784	56
classic	45	3	488	309	687
toss	52	279	336	347	675
keep_default_na	57	74	433	357	853
covers	53	234	440	74	415
sticky	48	133	167	50	179
fashioned	28	43	474	436	57
pandas.ols	11	138	216	187	472
awhile	16	122	320	643	313
internal	78	265	230	315	373
self-answer	1	222	92	15	23
row_indexer	62	132	272	407	139
marking	1	222	92	444	23
locality	45	133	230	467	373
excel	0	119	356	580	730
handed	66	261	298	108	476
ndarrays	87	141	203	748	973
.rank	17	30	370	165	776
10x10	87	141	203	681	973
digital	53	200	275	39	377
warehouse	93	200	26	671	294
non-interactive	98	44	487	76	517
misinterpreted	26	82	60	458	967
.min	27	30	466	502	588
2500	3	212	107	319	633
jaccard	33	138	450	330	999
dies	63	127	295	636	799
felt	1	163	60	458	967
sub-groups	23	152	133	515	822
diet	82	91	324	144	936
.fillna()	57	49	233	597	410
journey	16	122	167	50	415
exported	49	190	275	6	918
np.hstack	87	258	27	667	526
]')`	92	36	194	20	875
weekend	60	99	352	51	753
died	63	262	295	613	983
billion	3	212	107	319	633
pandas.lib.map_infer	21	24	367	445	412
happening	26	82	110	687	365
apology	1	260	60	15	23
macports	25	156	184	649	289
assume	6	234	390	596	129
pseudo	68	71	227	11	909
daily	44	29	271	46	789
'])]`	67	255	79	68	282
eliminate	52	211	483	347	675
end-of-month	60	99	434	303	753
376	71	80	334	130	867
co-occurrences	18	76	337	761	775
restored	66	126	483	437	129
shop	18	173	394	435	453
my_dict	73	17	400	427	64
managed	56	122	287	350	313
skip	80	211	112	347	675
real-time	94	200	369	368	773
armax	64	138	216	187	472
rownumber	54	287	400	698	784
id3	82	140	318	82	594
manager	94	200	369	39	773
cumsum()	11	136	52	223	105
skin	19	163	6	62	525
primes	23	76	185	89	585
primer	19	273	6	289	184
retention	33	152	53	469	368
interp1d	11	256	233	760	553
misread	1	163	60	458	230
unalignable	79	65	279	530	724
depend	52	126	488	309	927
fancier	28	77	150	438	467
technique	52	260	486	759	585
editors	98	113	140	363	56
answered	1	222	92	444	23
summarised	52	279	337	447	585
monotonically	29	269	389	563	491
swoop	52	76	337	447	345
marks	91	170	158	784	345
memmap	45	100	264	467	557
analogous	6	144	488	714	55
swap	89	236	335	437	575
advises	48	133	167	323	415
me	16	116	128	596	880
pd.read_sql	46	243	161	218	702
string	91	297	169	603	349
df.iloc	71	25	272	407	139
a.empty	77	56	64	496	101
request_type	18	152	199	435	990
.contains	67	42	251	34	655
advised	78	43	230	309	57
ma	67	178	466	502	588
subprocess	94	127	294	368	773
anne	6	234	390	596	129
materialize	66	43	203	596	320
dim	87	141	203	748	973
1997	60	34	318	82	992
23:45	86	81	242	431	201
did	56	234	179	596	967
die	63	265	426	491	675
.csv	49	39	47	109	246
dig	16	18	298	50	476
accidentally	26	43	469	458	967
iter	62	109	161	0	162
dic	23	76	400	21	498
item	18	287	400	698	498
ml	64	33	296	386	679
div	57	208	417	381	209
overlaid	59	235	471	304	944
round	92	104	358	131	970
dir	49	185	161	491	92
it'll	66	234	390	661	888
`df['name	15	255	79	68	282
pd.unique	87	256	27	21	26
tremendously	45	100	283	467	838
mutation	78	58	385	151	581
deviceid	54	152	445	698	108
dealing	6	133	345	50	179
pd.melt()	57	256	233	381	26
a['x	71	80	141	610	995
run	63	127	295	636	799
12:25	86	221	371	14	465
targets	64	138	216	187	143
12:21	86	81	242	724	465
best-fit	33	138	216	330	472
adds	23	137	483	74	982
cythonize	45	18	283	505	838
numpy.sum	11	30	52	223	181
heres	68	71	227	95	909
pyplot	7	224	180	304	314
favour	57	43	488	315	57
pokemon	73	17	319	427	311
suspect	26	82	110	687	880
template	98	44	19	76	517
231	86	169	371	607	161
international	13	29	271	156	294
filled	80	129	0	201	778
mp	86	81	438	102	465
xml	49	190	275	6	918
printed	68	215	179	366	842
install	25	156	328	382	563
unobserved	80	129	0	201	778
french	49	113	140	732	628
df2.merge	90	238	443	245	206
issued	63	127	295	766	377
plt.show()	7	188	116	337	314
decipher	16	122	287	350	313
re	66	234	390	596	756
wait	66	163	44	643	476
box	53	235	471	221	944
boy	53	270	26	221	629
diagnoses	15	265	203	21	498
.astype	67	36	305	666	526
babydataset	62	109	161	21	259
shift	11	136	52	223	105
pd.isnull	17	40	215	322	299
spheres	53	235	128	221	944
tinker	16	116	167	50	807
scripting	48	133	167	50	831
suggestion	19	273	195	631	117
rf	64	178	481	330	267
conveniently	52	234	128	89	585
group2	73	17	197	427	108
lagbin	89	236	335	698	575
massage	23	190	264	6	902
dateoffset	92	104	228	622	780
dataframe.index	15	208	272	672	843
useful	28	38	474	367	487
xerr	7	94	472	10	435
merely	6	234	201	766	615
coords	59	270	471	620	571
flexibility	45	3	488	309	487
ignore_index	57	49	138	619	806
plots	59	224	180	304	944
left-most	80	90	384	698	998
numpy-like	28	77	150	438	467
data.to_csv	43	39	47	109	246
df2.a	73	90	400	568	304
nat's	80	129	0	201	778
sqllite	46	243	190	218	642
everybody	19	273	44	204	476
assertionerror	79	65	413	675	34
pandas.read_csv()	49	74	112	690	519
hierarchically	23	236	185	360	985
perf	45	100	283	345	838
re-create	66	43	264	368	807
sake	37	71	227	200	115
subtract	44	211	53	409	368
visit	18	173	394	718	453
perl	48	46	451	183	327
connector	46	243	190	218	642
sub-strings	91	287	476	761	775
shoud	68	234	227	366	320
proposes	28	3	436	759	487
pd.timestamp	92	104	212	20	860
ahhh	19	163	469	458	230
encode	49	32	455	424	625
dict	62	265	13	21	498
compactly	28	77	150	89	467
checkout	61	18	108	505	279
jeff's	1	260	195	631	117
49	86	169	371	607	110
sharing	48	133	167	204	846
joris	19	273	195	631	184
appending	23	58	483	342	911
acceptable	6	3	488	309	57
----	38	85	120	724	465
interacted	93	173	394	718	453
^gspc	67	262	409	502	588
effort	16	222	167	15	476
pd.dataframe	90	117	443	267	432
capturing	52	279	390	447	709
ntile	33	136	53	335	368
fly	23	58	264	89	927
idx	62	25	334	407	948
n=100	54	247	481	700	667
snp	73	17	391	427	304
avoiding	45	43	45	208	838
quoting	35	170	112	784	56
reviews	18	173	319	343	542
soup	98	185	484	76	517
subplots=true	7	224	472	10	314
trans_id	73	234	128	564	320
9th	60	278	384	51	939
growing	45	58	244	342	347
making	23	43	45	208	709
$-	91	297	316	612	493
arrive	44	116	491	46	145
linregress	11	256	233	760	231
claim	1	260	440	444	756
crazy	16	163	167	204	880
mongo	46	190	275	743	642
kenneth	13	200	275	732	850
startswith	91	42	56	397	569
predict	64	138	216	414	472
permutations	52	279	331	712	661
confused	26	82	345	714	434
agent	18	173	394	718	377
ids	18	76	337	761	775
sample	37	71	227	115	909
df3.index	90	238	443	245	206
subregion	18	152	331	713	491
unhandled	63	262	413	487	34
confuses	26	82	110	714	68
y-value	18	287	471	515	491
normalize	52	152	53	409	585
scenarios	93	279	26	117	525
dataframe.plot()	7	224	180	10	314
dt.date.today()	67	36	79	502	588
']'	67	255	79	68	912
ping	66	231	120	108	377
x.values	27	147	27	161	181
till	60	99	352	51	145
sunday	60	99	352	51	99
parties	93	279	26	62	585
pure	28	3	488	417	906
0:4	71	80	334	722	948
tile	11	58	13	505	231
nyc	93	270	26	117	990
looses	23	126	179	437	495
sworn	19	163	469	458	967
allotment	18	152	445	515	996
146	86	221	371	102	867
inputs	6	279	337	62	129
144	3	212	371	411	783
mar	4	34	312	82	719
df.fillna	17	40	215	165	86
140	3	212	107	259	633
downsampling	44	269	228	756	789
testfunction	27	30	222	161	618
max	29	95	53	469	896
`format='table	10	123	477	155	891
pre-computed	23	279	337	447	585
membership	15	0	268	151	502
mae	54	247	481	202	667
designed	6	3	488	309	687
mag	54	140	340	14	990
t_3	73	17	445	698	267
end	66	211	337	52	145
destructive	78	43	230	513	974
guys	19	163	6	289	184
grow	45	100	244	342	927
man	19	163	6	289	171
]))]	71	228	334	298	338
repo	61	18	108	338	531
23:59	60	81	242	724	201
outline	53	71	227	11	172
johnson	82	196	309	144	125
pd.series()	67	36	79	502	588
maybe	26	234	390	596	880
readdata	66	256	385	151	911
23:55	60	81	242	431	201
s.tolist()	62	256	56	0	162
fluent	48	133	167	309	687
switch	66	126	390	437	747
right-hand-side	6	208	337	447	733
silence	63	262	413	687	365
verify	68	234	227	596	365
basket	82	173	394	713	453
tall	3	298	183	616	68
df.index.name	57	49	335	564	103
talk	48	203	278	323	415
cute	28	77	436	616	467
unioned	89	286	224	454	151
feb	4	34	318	82	561
pointed	1	273	440	295	756
wishing	53	298	471	304	944
spreadsheets	0	119	356	580	730
entity	93	282	199	292	687
stability	45	133	110	467	725
lst	62	109	466	405	338
cuts	45	137	264	32	709
argued	1	260	440	466	117
pointer	66	43	264	108	911
single-level	89	236	335	360	575
equiv	79	251	315	470	963
observational	44	269	491	46	789
group	18	152	445	698	368
`id`'s	18	287	337	698	775
mockup	37	71	227	115	909
df.to_dict	66	43	390	58	292
interesting	26	38	110	436	880
low_memory	43	74	478	690	853
inferior	45	133	230	315	55
prefixing	91	297	316	784	56
thanx	19	163	6	289	184
listing	23	215	45	447	842
30mins	44	282	491	46	990
mail	94	217	120	396	377
main	23	58	264	491	911
codepage	49	262	316	487	34
transparently	46	3	264	430	557
mismatches	6	74	413	690	853
elyase	19	273	6	289	184
.format	38	57	98	565	904
finance	13	29	271	320	294
views	78	43	230	513	974
killer	28	38	474	417	57
sooner	16	163	44	643	476
-ing	15	256	56	597	763
lunch	56	211	44	643	880
16:20	86	81	242	431	512
touching	53	122	287	323	313
mismatched	89	286	224	454	151
impressions	82	204	309	8	108
escaping	91	170	83	497	56
.column	71	80	334	722	948
killed	63	127	295	630	799
idxmin	57	136	52	460	26
outweigh	45	100	488	467	687
14.4	51	201	448	173	284
numpy.genfromtxt	49	185	112	690	741
14.1	58	176	50	75	622
14.0	58	176	50	75	617
14.3	86	201	448	173	471
overmeire	19	273	195	631	184
column_indexer	71	25	272	407	139
directories	25	231	177	557	369
settings	53	44	201	373	172
arrows	1	222	92	225	132
_get_numeric_data()	57	256	233	597	26
pull-requests	61	18	108	288	279
2015-09-01	67	255	79	68	916
rock	19	163	6	204	184
randint()	68	221	235	700	987
x11	55	221	340	14	784
x12	55	237	324	579	187
redraw	7	224	116	337	314
xls	0	119	356	580	730
last_seen	89	236	390	454	575
nick	68	273	120	366	756
dialect	46	243	190	218	100
abnormal	93	282	199	292	990
conventions	78	46	488	62	615
datr	73	17	445	427	311
pandas.dataframe.from_records	46	185	233	430	26
requesting	13	200	275	315	377
canada	82	196	309	144	125
living	56	58	264	50	179
reportlab	53	122	19	76	222
stitch	23	58	264	248	611
3rd	60	278	384	447	939
threading	45	127	369	368	773
nbviewer	98	44	19	76	517
alpha=	7	188	472	10	435
bday	44	99	228	756	283
miles	59	235	133	292	273
decorators	11	43	426	89	450
correct	26	234	390	596	320
end_time	54	140	189	305	989
stat	82	200	10	491	196
after	56	211	390	596	675
xmax	54	188	27	700	435
impressed	48	133	167	50	179
runtimeerror	79	262	413	487	34
mechanisms	78	133	230	309	687
00.000000	86	262	242	6	201
ajax	46	200	275	39	773
orm	46	243	190	218	642
bayes	64	33	296	386	679
org	18	204	445	343	108
ord	27	57	466	565	904
2014-07-16	86	81	242	724	465
finishing	56	127	44	636	799
union	89	286	224	454	151
advance	50	187	374	412	93
macos	58	218	157	376	141
coerce=true	92	64	212	586	745
language	48	133	451	309	609
widths	53	94	201	620	172
listings	93	173	331	761	661
fromtimestamp	92	104	434	303	416
14:30	86	81	242	724	465
thing	26	234	390	596	880
funky	28	82	474	616	68
mesh	59	235	471	515	944
script.py	25	231	213	214	437
geo\time	43	170	47	765	400
unformatted	49	210	83	131	349
.lower()	67	42	251	90	655
think	26	38	60	436	880
frequent	18	95	240	343	775
first	66	211	390	447	939
exotic	28	3	488	309	487
cheese	82	196	10	238	125
earnings_vola	27	265	222	470	618
predictive	64	33	296	386	679
pandas.isnull()	57	0	233	597	166
usecols	43	74	478	182	801
numpy.random	49	185	426	545	256
cluster_id	73	204	445	698	108
fast	45	100	474	417	347
carry	66	58	486	89	630
sounds	26	38	390	436	320
unique()	57	256	182	35	763
fillna	80	129	0	201	410
calcific	82	196	309	144	125
datatables	85	200	369	39	773
parsers.py	21	24	121	163	994
little	28	38	474	436	68
law	33	138	7	117	578
workaround	61	77	436	759	279
1y	44	159	409	144	125
1x	38	297	66	579	187
ci	53	235	10	469	128
1}	55	237	324	509	464
colormaps	53	224	180	304	944
anyone	16	116	41	394	849
df.dropna	17	49	138	165	86
1b	54	248	21	14	478
1d	87	141	203	748	973
org2	73	17	400	215	928
org3	54	17	306	215	928
1k	3	48	107	150	633
pcolor	7	224	180	10	314
participated	18	91	331	343	661
1l	71	5	91	130	867
speaking	78	43	488	309	57
we're	66	55	167	436	937
subplot	7	224	344	304	314
eyes	19	163	469	458	230
inefficient	28	77	474	616	347
massaged	93	215	185	446	585
gc.collect	57	43	287	597	292
xlsxwriter	0	119	356	550	730
continuous	44	269	491	292	669
accurately	1	260	227	11	807
broadcast	87	131	417	748	973
np.savetxt	49	185	112	690	519
undesired	80	82	0	766	744
coefficients	33	138	216	187	472
11	86	169	371	411	110
10	86	169	371	411	110
13	4	169	371	411	110
np.round()	15	234	128	596	320
15	86	169	371	411	110
train_cols	71	281	334	722	948
expanding_mean	11	136	52	223	231
16	86	169	371	411	110
19	86	169	371	411	110
series.diff	15	256	52	632	763
gotta	19	163	6	204	476
groupsort	6	145	488	315	373
full-fledged	28	3	488	93	487
1%	29	212	389	362	255
were	6	234	390	661	967
zip()	11	256	56	21	26
1+	3	212	107	411	633
1-	93	282	26	117	585
inferring	92	183	169	716	416
20s	3	212	107	362	633
20x	45	100	283	345	969
topics	48	173	32	323	415
occupies	3	268	231	275	234
exceeded	63	127	143	487	145
myfunc	17	30	222	161	183
dash	91	170	83	784	56
is_monotonic	78	226	272	270	166
dask	48	3	451	505	687
sheet1	0	119	356	580	730
sheet3	0	119	356	580	730
sheet2	0	119	356	580	730
20k	3	212	107	319	633
occupied	3	61	231	275	234
reg_per	67	255	79	68	282
bee	80	211	128	447	606
df['x	67	255	79	68	282
recreated	68	215	227	446	909
']`)	15	226	272	564	311
efficient	28	77	150	638	467
`a`'s	93	282	70	117	990
pandas\	21	24	367	479	637
answering	1	222	373	15	23
isolate	52	76	319	11	606
shocked	19	163	469	458	230
potential	26	82	110	687	365
trade_date	92	293	434	603	416
so.index	15	25	272	407	887
performance	45	100	283	467	838
years=1	38	159	114	502	588
modulus	15	147	358	131	591
600,000	3	212	107	319	633
channel	18	204	445	305	108
201	54	221	340	607	783
200	3	212	107	319	633
pain	28	38	474	616	68
.lt	71	228	206	122	338
207	3	212	107	319	633
normal	6	234	390	89	292
track	66	211	199	718	775
betas	33	138	216	330	472
df.values	15	258	27	667	526
paid	94	200	394	713	884
arima	64	138	216	187	472
beta	33	138	53	469	896
date2	73	90	189	305	536
20%	29	100	389	362	255
sheets	0	119	356	580	730
formulae	0	119	356	550	730
pair	18	287	133	292	999
pandas-	23	279	224	447	985
queens	82	45	309	144	454
synonym	11	3	488	89	166
especially	45	38	474	309	687
surprising	26	38	474	315	68
fills	80	129	0	201	778
)]]`	71	80	334	722	948
supporting	78	133	230	309	687
buglet	61	197	108	392	279
']``	10	123	477	265	540
gracefully	26	82	153	687	365
order	89	145	317	184	575
df_temp	15	211	483	568	843
`na_values='l	91	74	478	784	493
properly	6	234	153	596	349
sigma	33	138	216	330	896
s_cols	71	25	334	407	948
conditionals	52	43	246	439	691
precise	1	260	227	714	404
rating	18	95	394	343	108
shot	66	163	436	436	476
newer	61	176	50	19	617
show	68	71	227	366	320
filed	61	18	108	29	279
index.get_level_values	17	208	443	165	432
accession	73	76	171	761	21
aggfunc=	17	30	370	161	776
cprofile	63	127	295	636	799
threshold	29	95	389	162	502
corner	53	235	471	77	924
label	59	208	272	270	538
dice	56	122	301	350	131
df_conf	67	80	334	722	948
500mb	3	61	231	275	234
apriori	52	116	7	89	927
how='left	90	238	214	245	206
enough	26	38	474	436	880
analytic	48	46	451	671	609
stand	66	234	128	596	768
black	59	235	304	314	629
df['c	67	255	79	785	282
max-min	86	221	141	518	995
0.025	29	78	358	700	500
200000	3	212	107	319	633
ranking	89	95	73	184	775
`'temp	73	204	476	564	311
get	68	215	179	596	744
contracts	60	99	40	318	753
-philipgehrcke	26	163	469	448	230
designated	23	76	337	447	775
nosetests	25	231	328	214	291
.ffill()	17	49	370	165	75
0:2	71	25	334	407	948
n_sessions	54	178	340	298	995
df.a.isin	71	80	334	0	948
unimportant	6	211	384	766	129
np.median	17	30	249	161	181
nearly	3	100	283	345	969
conjunction	15	256	56	597	26
geo	82	270	26	195	542
count_nonzero	15	90	337	698	998
gem	25	156	213	204	291
r_ind_ind	71	80	334	722	948
inplace	78	49	138	513	819
]))`	71	80	334	722	338
sensor	93	282	199	634	990
2.3.0	58	245	403	340	176
0xc3	38	32	455	424	625
rbf	64	178	216	187	472
median	33	95	53	469	896
clip_lower	57	256	27	597	166
yield	6	215	179	766	744
morning	16	163	44	643	476
tfidf	64	33	7	386	553
subtype	18	76	445	761	775
stupid	16	163	469	458	230
characteristic	93	152	26	515	491
6.3	51	216	448	173	471
922	51	66	438	471	658
gps	93	270	70	634	571
worrying	26	43	45	208	57
silently	63	82	413	533	354
stumbled	56	122	298	559	397
wiki	48	203	421	323	415
kernel	63	217	295	613	578
declared	6	265	426	491	196
pandas-way	28	77	150	438	467
6.1	51	5	91	735	465
head()	68	136	52	381	105
dict.get()	11	256	233	597	695
twin	59	224	471	620	944
12.4	51	201	448	173	284
%run	98	231	487	160	983
top_depth	73	90	391	305	311
.fetchall()	46	243	161	218	702
relative	29	270	133	292	129
vars	93	282	216	446	129
snippit	68	71	227	11	909
...,	71	221	340	267	432
eliminating	23	211	45	208	810
daypricesdf	54	278	80	306	998
calendar	60	99	352	51	753
patching	78	43	230	234	450
deliberate	78	133	230	315	55
wonder	26	77	150	438	880
date1	73	90	189	305	536
timeit	45	100	283	345	969
satisfying	52	0	246	763	502
mean()	11	15	52	223	105
df.plot()	7	224	116	10	314
forecast	33	138	216	187	472
boundaries	44	269	491	629	789
concretely	68	71	227	11	909
pump	23	215	185	6	585
enumerated	23	76	185	447	585
na=false	17	40	306	612	299
geometric	33	138	53	469	896
reading	49	190	112	6	902
checks	6	137	426	74	166
parens	91	223	20	497	893
campaign	18	204	394	713	108
infrastructure	45	133	451	671	179
]')``	92	293	434	646	780
np.concatenate	17	258	27	0	162
parent	23	265	369	491	450
27	86	169	371	607	783
pandaserror	79	185	315	740	951
jq	38	185	255	470	519
killing	16	127	167	50	476
jm	6	234	390	596	129
condensing	68	71	227	108	909
*len	71	117	334	267	667
jd	60	99	352	51	753
js	98	44	19	76	517
frozenlist	79	251	411	791	963
tue	4	34	312	82	548
somevalues	15	25	79	129	948
dates	44	99	434	303	349
lon2	54	47	481	404	267
configuring	48	46	451	39	609
read_json	49	185	235	690	519
trader	18	152	53	435	453
trades	18	29	271	435	990
according	6	126	337	447	927
...?	26	234	128	596	320
float()	79	65	297	675	584
tour	48	18	421	323	415
dated	68	71	227	11	909
remake	23	76	337	447	129
myfile.csv	21	39	47	157	527
c_start	60	140	352	51	753
traded	13	29	271	156	294
executables	94	231	213	376	291
among	6	279	26	62	525
forecasting	33	138	216	187	472
12:00	86	81	242	431	193
cancer	18	173	331	343	108
terse	28	122	474	616	68
unittest	45	43	264	315	292
non-numeric	80	129	153	603	675
encapsulated	6	265	426	430	963
maintained	6	126	440	83	927
exhibits	37	71	353	115	917
spans	44	269	491	46	789
serialization	45	100	323	627	557
user2	54	140	340	14	267
writing	49	190	264	208	902
datetime.datetime.strptime	92	64	212	502	745
~50	3	212	107	319	633
considering	52	279	390	766	129
sensible	28	77	150	638	467
unusual	26	38	288	714	68
capable	6	3	488	93	487
encryption	49	46	451	430	850
405	86	221	371	102	43
layer	53	133	451	368	687
mark	1	222	92	225	132
attaching	68	215	185	446	744
red	59	235	304	221	629
18:00	60	81	242	431	201
judging	56	82	179	687	365
iterrows	11	256	385	151	26
borders	53	44	19	221	172
.fit()	27	178	27	700	667
mary	82	196	309	144	125
16.2	58	176	50	400	141
pd.read_csv	43	39	47	109	488
30000	3	212	107	319	633
}}	38	85	98	86	968
catalog.logg	71	228	206	122	916
offered	1	260	440	759	587
400	3	212	107	319	633
reproducable	37	71	353	115	807
dramatic	45	100	283	345	838
declaration	6	265	426	491	196
bayesian	64	138	216	187	472
movingols	64	138	216	187	472
those	52	279	337	661	129
^	91	42	251	679	24
sound	26	38	60	436	880
stacked	59	224	471	304	944
drop_level	57	49	138	83	853
map()	11	256	56	760	906
str.zfill	57	256	56	597	763
numpy.hstack	87	258	27	58	292
avg_low	67	255	79	68	282
cross-correlation	33	138	216	330	999
profiler	63	127	295	636	799
compile	25	156	184	376	289
hdf	10	190	78	627	557
.sortlevel	17	49	443	165	86
hdd	3	61	231	362	234
ongoing	61	3	108	83	617
1100	86	169	371	411	594
promising	28	77	436	367	476
cancelled	18	173	394	713	990
hmmmm	19	163	469	458	230
margin	11	100	283	117	838
from_json	61	18	108	83	963
versus	78	100	283	345	838
video_id	73	204	214	564	311
test.iloc	71	25	334	722	134
eventually	66	58	486	671	585
01:57	55	81	242	724	760
characteristics	93	282	26	117	542
secondary	89	236	471	360	575
them	23	279	337	248	585
01:50	86	81	242	724	465
dict's	23	58	385	151	911
middle	29	211	83	347	924
endswith	79	251	56	111	963
sudden	63	82	110	766	365
8601	92	104	434	303	349
malformed	49	170	112	784	56
loosing	87	141	203	208	585
protein	18	76	171	761	542
\xa0	38	4	316	363	955
everyday	18	173	394	718	453
movements	18	140	384	23	990
np.log	27	178	466	700	588
different	6	279	337	447	129
pat	43	39	161	109	246
harsh	19	163	469	448	230
doctor	60	99	352	51	753
group-by	11	136	52	223	581
melted	89	236	335	446	575
same	6	279	337	766	129
configurable	53	58	486	505	585
authentication	46	200	332	39	980
compiling	25	156	184	376	799
pad	80	129	0	201	410
arguments	11	265	235	760	853
struggling	56	122	167	50	179
intermediary	45	58	264	342	911
pan	13	29	289	156	294
workplace	94	217	231	396	322
extended	52	260	227	89	756
assist	16	116	5	394	849
nones	80	129	0	201	778
10-20	18	173	199	718	990
running	63	217	295	636	799
driven	93	173	394	718	179
df1.value	67	147	141	434	995
totally	26	163	60	458	434
supports	78	3	488	74	687
peach	82	196	309	144	125
refactoring	61	43	230	83	617
numpy.unique	15	145	27	632	26
macro	0	119	356	580	730
markup	68	44	19	474	756
identifiers	18	76	13	761	775
roughly	3	212	107	319	633
pep8	1	260	426	444	756
solve	16	116	110	687	849
multicolumn	11	131	233	89	985
generic.py	21	24	121	163	994
reindex_like	57	49	335	381	103
amazed	16	133	167	204	831
consisted	6	215	185	766	431
malicious	45	43	264	368	807
12:05	4	221	448	82	548
money	18	173	394	713	913
adjustments	52	43	486	661	547
_constructor	78	265	426	791	450
aspect	48	133	421	714	55
flavor	46	243	190	218	100
14:45	86	81	91	724	619
multiples	44	269	491	464	822
convert_object	79	251	315	58	963
clueless	16	116	167	50	179
12:02	86	81	242	724	201
grouped	23	152	445	515	368
ordered	89	145	317	184	373
itertools.product	57	256	56	21	26
param	57	74	235	690	853
ther	89	145	317	564	311
groupid	73	186	445	698	108
ahhhh	19	163	469	458	230
4	54	221	340	14	110
extensive	48	18	108	323	823
missings	29	269	389	464	789
set_option	98	68	201	373	263
asof	44	136	233	563	684
2011-07-01	51	201	123	173	284
2011-07-03	51	201	123	173	284
2011-07-02	51	201	123	173	284
dlang	18	204	381	343	108
1:1	15	135	400	434	292
1:2	71	25	334	407	948
1:3	71	25	334	722	948
1:4	71	25	334	407	948
re.compile	91	42	251	34	24
one-to-many	73	90	13	770	524
1.02	86	221	141	102	995
grid	59	235	471	221	944
mon	4	34	312	731	548
pandas.apply()	6	131	169	58	166
credentials	94	200	487	39	773
aiming	48	133	345	50	179
mod	54	178	141	700	995
vertically	23	236	224	248	151
acquainted	26	122	167	50	179
identifying	6	126	45	208	675
csv1	43	39	47	109	246
datear	54	90	189	305	125
usecase	28	38	474	436	487
serves	6	3	488	74	687
lightning	45	100	474	417	347
facing	56	82	110	687	179
first.csv	73	204	445	761	542
audience	28	38	474	436	57
prun	68	71	161	455	92
nose	21	231	146	388	67
view	78	226	230	513	974
served	45	38	474	116	347
np.dot	87	258	27	700	667
specifies	6	126	235	749	431
0.006104	51	66	238	471	658
multiindexing	48	133	230	714	538
routines	64	46	7	62	553
pip-3.3	25	156	213	214	291
odbc	46	243	190	218	642
testdf	90	25	161	0	919
sentinel	80	129	0	201	778
erase	66	211	83	347	345
regex=	38	42	251	34	511
specified	6	126	337	766	129
images	98	44	19	76	931
organizing	23	190	237	446	902
matching	52	90	337	454	775
generates	68	215	179	74	744
error-prone	28	77	474	616	68
gross	18	29	271	435	157
14:00	86	81	242	431	201
outs	56	122	287	50	313
confirm	26	82	110	596	365
14:08	86	81	123	724	512
overly	28	38	474	714	57
critical	45	100	389	467	838
decomposition	64	138	7	386	553
textvariable	15	265	426	58	963
expressing	52	76	171	292	269
rectangular	87	141	203	748	973
moderate	3	212	26	117	623
-0400	38	81	242	724	619
lexicographically	89	145	317	184	373
outn	62	287	400	698	498
measuring	93	282	389	634	990
df.columns.difference	17	30	215	165	432
seconds	3	212	358	362	692
tree	64	33	7	562	553
xlwings	0	119	356	181	773
combines	23	279	224	248	151
pts	80	95	457	222	768
notably	78	43	230	315	906
broken	56	82	298	325	709
16:00	86	81	242	780	399
16:01	55	140	242	144	201
regexs	91	43	56	417	569
refers	6	234	390	74	385
read_csv's	6	74	235	690	853
open-source	48	200	451	39	609
i=0	54	221	141	14	995
df_arbitrage_opportunities	71	80	334	298	948
np.average	11	178	249	632	181
sci-kit	64	33	296	386	553
generated	68	215	185	446	174
mixes	6	183	169	603	416
practical	28	38	474	309	687
r1	73	17	391	754	816
regressors	64	33	7	378	768
west	82	91	340	144	936
mixed	6	183	169	317	163
u'other	51	5	91	735	372
train_data	71	25	334	722	948
road	66	261	486	108	476
cyl	73	178	445	515	108
bom	49	113	140	363	628
unused	80	262	153	347	675
depths	93	173	133	761	542
2015-08-23	51	221	438	102	465
yyy	73	204	445	586	502
pbl_awi	55	91	309	144	936
dput	37	71	353	115	508
references	48	234	390	491	615
pandas_env	25	231	213	214	437
join_axes	90	286	443	454	151
to_period	57	104	228	185	684
ichimoku	13	29	409	515	157
.to_pydatetime()	92	104	434	58	763
spline	64	138	7	563	553
first_column	55	297	128	766	349
wrinkle	29	211	133	464	129
ymax	7	188	472	221	435
examples	48	18	421	323	415
calctheta	79	114	315	111	413
.groups	17	30	370	0	776
subregional	18	152	444	713	368
brute	28	77	436	759	467
r3	73	17	391	194	816
decode	38	32	455	424	625
compliant	46	243	190	218	642
kind-of	26	234	469	436	880
cartesian	87	141	224	454	524
pyspark	52	164	451	430	850
chats	18	152	394	718	453
9	86	221	371	411	110
apis	48	46	451	323	609
df1['a	67	255	79	68	282
buggy	26	82	110	315	617
strikes	66	298	153	74	675
sophisticated	28	77	486	671	487
svm	64	33	296	386	679
.len()	67	255	79	122	282
hurricanes	59	235	471	221	172
alexander's	1	260	195	759	117
cp27	25	156	213	376	291
parse_dates=	43	74	235	690	853
dtype	92	183	169	317	163
prototype	49	190	451	6	179
arranged	93	282	185	446	571
'']`	67	80	306	612	948
wasn't	26	163	60	458	967
myfile1	55	237	324	650	356
subclassed	78	265	411	83	450
zooming	53	94	471	620	172
reapply	54	211	384	447	982
arranges	89	145	317	184	575
svg	98	44	19	76	931
embed	98	44	19	76	517
subclasses	78	251	411	791	450
plt.bar	7	224	472	10	314
sort()	57	145	52	124	105
videos	48	203	421	323	415
maxes	3	61	231	362	234
`""`	91	170	83	784	345
resolving	50	116	374	687	849
citation	1	95	73	444	775
deep	78	43	230	513	974
general	28	3	488	309	57
maxed	63	61	231	636	234
non-deterministic	78	226	230	315	974
examine	68	234	227	108	807
gr8	10	123	477	265	279
planets	17	30	370	650	776
importing	49	190	454	6	902
shopping	93	173	26	713	913
allocating	45	100	244	342	979
numpys	11	3	412	430	763
processed	49	127	369	368	773
tedious	28	77	474	616	68
again	66	163	469	108	184
genres	18	287	400	343	775
df_input	33	279	133	515	129
ref	73	204	445	704	59
drivers	46	243	190	218	642
hybrid	52	133	45	759	687
bins=10	86	78	141	700	995
field	18	204	337	447	775
multi-level	89	236	335	360	9
neighbouring	52	140	337	447	368
utf-8	49	113	140	363	628
weights	33	95	53	330	896
`'count	57	136	52	564	105
hayden's	1	273	195	759	117
pysqldf	55	144	161	545	702
4,000	3	212	107	345	633
0th	15	278	335	360	939
students	18	173	394	343	542
grayscale	59	235	304	221	629
durations	44	279	491	661	789
keys()	78	256	426	83	26
vertex	59	235	304	562	392
df.to_dict()	37	71	353	115	508
deriving	6	215	185	6	902
ansi	49	113	140	363	628
important	6	38	230	315	373
recent	61	176	50	392	617
chris	19	273	120	167	184
dropbox	37	71	353	744	508
decorated	11	265	426	760	231
pd.expanding_mean	67	80	466	122	588
concat	57	286	224	248	151
480	86	169	371	411	692
laptops	82	196	57	144	125
jan-mar	60	99	326	51	753
subdivision	62	25	400	0	64
assets	13	29	271	156	294
sscce	37	18	353	115	917
parser.c	21	24	367	479	637
.reset_index()	17	49	370	165	776
u	10	123	477	265	527
hugely	50	276	374	412	93
montecarloperf	15	258	203	748	973
alright	19	163	469	458	184
resolution	44	269	491	303	789
read_stata()	49	190	454	557	918
represent	6	210	337	292	431
looped	23	58	385	151	911
forget	66	222	92	15	736
u'occurred	79	65	315	477	910
primary_cpt_description	79	262	315	564	64
forbidden	26	82	153	353	365
.the	29	140	295	766	145
dollar	18	297	83	131	990
rebind	15	265	138	437	483
....,	43	39	409	109	210
.....	19	163	469	458	230
invariably	45	43	474	309	57
talks	48	203	278	323	415
debatable	78	43	230	42	57
liam	19	273	6	289	184
children	82	173	331	221	629
duplicated	80	90	337	454	675
preserves	89	145	317	184	718
cross-sections	23	236	224	248	538
gp	67	30	370	106	776
unpickling	45	100	143	368	773
300x	19	163	283	345	969
prefixes	91	295	224	248	151
+col	71	80	334	722	953
pandas.series.map	57	256	233	597	26
ylabel	7	224	180	10	226
np.prod	17	30	27	161	181
dataframe.mean()	11	136	233	760	231
enjoying	48	203	6	50	831
line_code	18	152	199	305	990
premium	94	217	26	388	322
straightforward	28	77	150	638	467
returning	15	215	179	208	744
homogeneous	87	183	203	748	163
removing	80	211	45	208	675
timedeltaindex	92	104	228	622	780
x.date	27	57	466	565	588
17	86	169	371	411	110
climate	93	282	257	515	491
fall	6	137	337	292	927
curve_fit	11	58	233	760	231
winning	45	100	389	292	838
concatenating	23	58	224	248	151
.isin	67	228	206	122	916
recl_pi	18	152	331	515	629
groupby's	57	136	52	223	105
pre	80	129	153	447	778
bypasses	45	3	488	315	687
df2016	73	90	13	698	982
egg_info	25	231	213	214	291
applicable	6	3	488	89	487
is_good	11	58	52	223	231
reminding	19	273	6	289	184
x.count()	27	57	466	298	588
splitted	68	76	185	6	345
biological	93	76	70	681	542
assignement	78	226	477	265	166
20th	60	278	352	51	753
gb	3	154	231	275	234
mile	66	58	385	21	747
maxymoo's	1	260	195	759	117
delimit	91	170	83	784	360
neighborhood	18	152	331	713	661
portable	94	46	451	376	609
periodicity	44	269	491	563	789
grabs	53	278	483	306	174
parse_dates=true	43	39	478	182	136
range2	18	140	171	761	661
range1	18	140	171	761	345
titles	59	170	83	221	345
x.index	27	80	466	298	338
lawyer	18	173	394	713	913
num_columns	71	117	27	700	319
500k	3	212	107	319	633
further	66	116	486	89	807
val1	73	17	391	427	108
pyodbc	46	243	190	218	642
requiring	45	3	488	417	487
multiplier	91	297	384	579	187
residue	33	138	21	330	876
material	48	18	421	323	415
abc	55	91	309	144	936
centering	53	58	45	208	231
opted	1	260	440	759	55
subsample	29	247	21	464	822
abi	25	156	184	376	617
group.nth	52	152	53	469	368
fama_macbeth	11	265	233	760	231
18	86	169	49	411	110
pure-python	45	100	283	417	906
sqlalchmey	48	133	167	204	880
notnull	80	0	0	597	763
random.randint	15	256	27	632	166
public	48	200	26	740	377
0.13.0rc1	58	176	50	392	617
illegible	1	298	471	605	846
5001	13	215	409	14	784
5000	3	212	107	319	633
`plot(kind='bar	7	159	409	10	314
wrangling	48	133	486	680	179
`b`'s	54	140	133	292	990
compilation	25	156	184	376	291
calculates	33	95	53	306	999
component	44	282	355	46	349
6.73	71	221	334	130	309
ranges	44	269	491	464	303
ax.set_xticklabels	7	188	472	10	435
log_upper	54	140	384	435	311
operating	94	217	244	396	581
possess	87	141	203	681	325
over-complicating	19	163	469	204	230
profiled	45	127	283	345	969
500+	3	212	107	319	633
`df[df['a	55	42	251	34	62
mult	79	208	335	564	166
diffs	80	136	0	464	368
900	3	212	107	319	633
generalizing	52	116	60	759	434
upcast	92	183	169	603	163
dicts	87	76	203	21	498
tweets	93	76	319	6	542
fwf	49	185	112	690	918
stretching	59	235	471	503	392
farhawa	19	273	6	289	184
numpy.ndarray	79	251	315	111	963
significantly	45	100	283	345	838
simply	66	234	390	596	292
np.argwhere	15	208	246	632	502
published	18	173	394	713	377
mentions	1	18	440	466	756
narrow	16	298	110	50	807
pathological	78	38	230	309	57
superduper	18	204	445	698	108
debugger	63	127	347	108	852
ive	56	122	287	350	313
deployment	94	156	184	376	291
calcs	23	58	486	671	581
houses	93	173	26	713	990
summary()	11	144	233	597	231
debugged	63	262	413	533	365
pretty-print	28	3	488	89	487
establish	11	265	222	760	618
readily	48	46	451	309	850
padded	80	129	0	201	778
axis=2	17	258	27	700	667
eye	53	235	295	108	172
candlestick2	59	94	471	620	274
distinct	18	279	73	698	775
non-	80	129	182	597	763
destination	53	270	454	195	414
two	23	279	224	248	151
stepped	56	163	298	559	230
comparing	6	279	246	439	502
axis=1	17	30	215	165	86
swaplevel	89	145	335	381	103
iteratively	23	58	385	151	911
genfromtxt	49	74	112	690	741
achieving	52	77	150	438	467
0.001	86	81	242	431	201
0.000	38	5	91	130	867
wrapper	11	3	418	430	450
00:00	86	81	242	724	512
division	92	131	358	439	970
constructs	15	215	385	151	581
reconvert	92	183	264	603	709
engine=	38	185	213	470	519
ain't	26	163	469	436	880
particular	52	234	390	447	606
town	19	163	469	458	230
none	80	129	306	612	166
col2_0	51	85	123	724	43
hour	44	99	491	46	692
from_tuples	57	256	56	21	26
recall	26	82	60	448	880
phrasing	1	260	60	714	434
sucks	66	298	298	436	747
dev	61	176	50	392	617
pr	61	18	108	288	279
++	49	113	316	363	369
remain	80	211	483	437	132
paragraph	1	260	60	444	759
del	63	49	483	590	282
strategies	48	46	26	62	294
deb	52	211	390	434	320
dec	4	34	318	82	992
specialized	48	46	488	309	687
def	27	142	222	161	618
nans	80	129	0	201	778
purchases	18	173	394	713	453
np.number	17	49	305	667	710
multiindex	89	236	335	360	575
synchronized	6	140	337	23	129
deprecation	61	176	413	533	617
stacking	89	236	45	208	575
desktop	94	231	177	388	318
approved	61	18	120	388	756
share	52	279	227	661	320
series.astype	92	183	305	603	526
contradicts	68	82	179	714	744
minimum	29	95	384	162	998
numbers	6	76	358	131	345
purchased	18	173	394	718	113
excelreader	10	123	235	690	519
-mon	38	159	409	564	125
filt	67	147	334	122	948
!	19	163	6	289	184
+3	54	140	340	14	995
needs	6	234	390	596	888
csi	10	123	477	265	557
awkward	28	257	474	436	68
re-read	1	163	60	458	230
ascii	49	113	455	424	628
acts	11	131	417	74	581
pressing	98	44	487	108	377
mixed-type	10	183	169	603	163
maps	6	76	13	74	709
quoting=	43	39	478	593	488
1695	54	17	445	698	998
13.0	58	218	157	75	141
lexicographical	6	126	390	315	373
datetimelike	92	104	434	457	817
mutable	40	251	297	675	316
csv	49	190	454	6	918
ensemble	64	33	7	378	553
df1.ix	71	80	334	722	948
csr	87	141	450	681	325
expert_level	73	215	185	766	744
+5	71	221	155	14	995
.stack()	17	49	215	165	127
advice	50	276	374	412	93
flattening	87	141	45	208	973
par	15	58	52	223	581
group's	80	95	337	698	775
coming	56	261	298	559	880
mariadb	48	200	451	39	642
response	19	273	195	289	184
brady	63	127	295	108	911
interpolated	44	269	0	563	789
act_code	6	279	337	766	775
2015-12-02	55	237	324	650	62
created_at	38	237	324	157	62
eats	45	100	244	582	838
generated.pyx	21	24	367	445	994
interpolates	29	269	133	563	789
coal	71	228	206	298	916
secs	3	52	107	362	692
responsibility	45	38	474	315	57
pay	66	133	167	204	476
kind='scatter	7	188	409	10	314
redirecting	63	82	110	108	365
retrieval	45	190	275	627	557
contrary	78	38	230	714	687
that's	26	163	469	458	230
-column	73	90	400	698	998
rounded	92	104	358	131	970
underscore	91	297	83	784	56
\xc9	38	32	455	424	625
skips	80	211	153	347	675
radar	56	260	198	11	909
industrial	82	196	309	144	125
through	23	58	385	151	911
filters	52	0	246	763	502
existence	52	130	268	447	502
suffer	45	100	283	467	57
.gdp	67	255	79	68	282
buffer_df	62	109	161	0	919
level	89	236	335	360	575
24	86	169	371	411	110
messed	56	298	320	52	846
26	4	169	371	411	110
p-value	33	138	216	330	896
20	3	212	371	411	110
21	86	169	371	411	110
lats	6	76	133	292	129
23	4	169	371	411	110
stacktrace	37	71	353	115	917
total_sent	18	152	53	698	368
thnx	19	163	469	458	230
28	86	169	371	411	594
17.0	58	176	50	392	617
pct	33	95	53	469	896
late	19	163	44	458	219
ax.xaxis.set_major_formatter	7	64	145	10	274
detected	6	126	153	766	365
17.1	58	218	157	75	471
messes	53	298	153	52	846
initializing	63	265	385	208	162
pcc	33	95	53	330	999
pca	64	33	7	386	553
2+	23	211	185	447	585
goog	13	29	271	156	407
someone	16	116	41	394	849
seeking	26	116	345	714	434
tract-level	33	152	53	515	491
timestamp	92	104	434	303	416
males	82	91	331	761	661
noticing	19	163	469	458	102
uhh	19	163	469	458	230
hyphens	91	170	83	784	345
8-10	93	282	107	319	633
compound	52	279	337	682	985
formulating	16	133	167	50	831
hearing	50	116	167	50	434
complain	26	82	110	740	365
association	82	91	337	770	524
mystery	26	116	128	661	880
easily	52	3	390	89	292
deep=true	71	80	138	0	432
lat1	54	47	481	404	267
2s	3	212	107	362	267
"))`	55	237	324	300	62
2}	71	221	340	130	968
cell	53	287	337	447	606
2x	3	100	283	345	969
pandas.index	79	265	426	791	963
wrapped	56	43	298	439	709
2d	87	141	203	748	973
micro	44	99	3	46	692
token	18	173	394	718	453
2a	54	248	21	102	478
2b	82	248	21	14	478
2c	10	123	477	265	807
2m	3	212	107	319	633
repeating	23	211	337	208	775
2h	19	163	120	204	184
ports	25	231	146	5	426
2k	3	212	107	319	633
wrappers	48	46	453	62	687
harm	26	82	110	467	57
everyone	16	222	92	15	476
mental	26	133	167	436	55
.cumprod()	71	147	334	122	948
`df['column_name	67	255	79	68	282
fish	82	196	10	238	125
hard	26	38	474	436	68
idea	26	116	128	596	880
andy's	1	260	195	759	117
thread-safe	94	127	369	368	773
oil	82	152	51	713	661
ryan	19	273	6	289	184
fist	6	211	384	766	129
suspecting	26	82	110	50	179
geopy	93	270	275	195	999
orient	57	74	235	416	853
np.minimum	11	256	233	632	763
ides	25	46	451	376	609
y_size	51	221	219	715	200
<>	71	228	206	122	62
1417982808063	55	85	123	22	464
29	86	169	207	82	594
to_frame	57	256	335	381	103
pigeon	55	91	400	698	784
utc	92	54	333	413	530
v0.14.0	56	176	50	596	617
v0.14.1	58	218	50	400	141
delim_whitespace=true	43	39	478	593	488
acting	23	131	45	208	581
pandas.hdfstore	49	190	454	627	918
they'll	66	234	390	661	888
non-working	37	71	227	11	909
non-uniform	44	269	491	46	789
evaluation	6	0	246	439	502
2014-01-04	82	196	309	358	148
third-party	25	156	184	649	289
2014-01-02	86	81	242	358	148
2014-01-03	86	81	242	358	148
offsets	44	104	228	303	301
squished	53	298	471	620	846
email_cnt	71	25	334	407	948
enforcing	6	126	153	93	927
s_low	54	17	172	568	267
1293840000000	51	85	123	22	464
pleasant	28	3	474	309	487
difficulty	56	82	110	50	179
df_list.append	62	109	161	109	162
set()	57	256	56	21	26
dataframe.__getitem__()	78	18	421	505	53
members	18	279	337	698	775
item_id	18	204	445	305	108
companion	48	46	263	376	377
beginning	60	211	83	347	345
matrix	87	141	450	681	325
thank's	19	273	6	289	184
benefits	45	133	488	309	687
sublists	87	76	203	21	498
recast	92	183	169	192	416
inspection	56	82	179	635	365
needing	66	58	486	89	911
bidvol	73	17	384	427	784
0.02	86	78	371	411	594
whiten	64	33	457	240	553
pd.read_csv('test	43	162	47	109	246
additonal	73	211	337	447	129
t-test	33	138	216	187	337
n00b	16	222	167	511	831
0.00	86	143	306	612	493
df.index.hour	17	30	370	165	776
oserror	63	262	413	533	34
utilizes	28	3	488	417	487
`engine='python	43	74	478	188	853
mistakenly	19	163	60	458	967
cx_oracle	46	243	190	218	803
instances	18	279	337	766	775
done	56	116	390	89	442
elevator	44	282	491	634	990
bd	54	247	481	14	267
heights	29	140	389	435	157
build_ext	25	231	328	214	346
csv2	68	279	128	366	320
partial_fit	64	33	7	386	553
log()	11	136	52	223	231
twenty	3	212	107	23	633
5th	60	278	384	51	939
smoother	61	18	108	467	279
notepad	98	113	140	758	628
construct	23	215	185	446	982
itertuples	57	256	385	345	969
180	86	169	371	411	783
assumption	6	126	230	315	55
186	54	169	340	607	987
repnum	17	30	443	165	86
statement	63	112	347	596	691
ton	19	163	368	658	525
188	86	169	371	411	110
smoothed	33	138	216	136	578
unicodeencodeerror	38	32	455	424	625
gridspec	7	224	180	304	626
pare	23	279	264	447	585
df.a.shift	71	147	141	122	995
gigabytes	3	61	231	275	234
pd.set_option('display	38	262	120	144	955
park	82	221	120	14	936
excels	48	133	488	309	487
selector	15	0	246	597	292
sizable	3	100	107	319	838
part	56	234	390	596	880
differentiate	6	235	337	464	121
doctors	82	196	309	144	465
600mb	3	212	107	319	633
believe	26	234	390	596	880
percentage	33	95	53	775	368
woops	19	273	469	458	230
clarifying	19	105	60	458	184
d.get	27	57	466	565	588
np.std	27	30	249	161	181
group-year	18	152	199	343	990
gotten	9	122	414	350	313
intermittent	63	82	110	687	365
seen	56	122	287	350	442
pc	94	217	157	396	475
dogs	82	91	331	331	936
recording	93	282	491	634	990
headers	23	170	337	447	345
pd.pivot	57	256	233	381	292
np.str	38	117	305	667	526
3.3.5	58	245	403	400	141
supposed	26	234	345	596	320
dt.time	71	221	466	502	588
get_group()	11	136	385	760	26
treated	6	210	153	766	349
declare	6	265	426	491	196
interactive	98	44	487	337	983
debugging	63	127	295	108	799
folder1	49	297	177	388	318
picked	56	261	298	16	821
pre-existing	23	211	483	447	58
ages	93	173	26	362	542
match_up	73	204	445	427	784
sparsedataframe	87	141	450	681	198
tertiary	89	126	390	620	575
1:00	60	81	242	431	201
categorized	82	91	331	343	936
stdt	18	140	189	305	990
3-tuple	54	178	340	14	784
confirms	26	82	110	687	365
orders	18	173	394	718	453
paths	53	279	151	557	369
char	91	170	83	784	345
time-stamp	44	269	491	292	990
built	11	3	488	430	850
depending	6	126	390	447	927
downsample	44	269	491	46	789
pa	82	196	309	144	125
zipcode	73	17	409	195	108
savefig()	7	224	116	729	314
extracted	23	215	185	6	431
100's	23	58	264	209	822
build	23	215	264	446	606
obviously	26	234	390	596	880
commentary	1	222	92	15	23
built-ins	78	131	488	417	906
pandas.date_range	44	159	228	756	684
df.isin	71	40	215	322	299
with=f	71	80	334	130	867
folders	25	231	177	557	369
bottle	63	127	369	368	773
hourly	44	269	491	46	789
programmers	48	133	230	199	831
~1	3	61	107	362	633
medians	33	95	53	469	491
~3	3	212	107	362	822
~4	3	212	107	319	633
~5	3	212	107	362	633
~6	3	61	295	362	234
float_format	57	74	201	690	853
nitin	19	273	195	289	184
coercing	92	183	169	185	416
charm	19	163	6	289	184
skiprows=2	43	39	47	109	246
skiprows=1	43	39	478	593	957
li's	19	273	195	631	117
services	94	200	26	39	884
~$	25	231	213	214	437
.fillna	17	40	215	165	86
unavailable	63	127	295	108	145
kb	3	154	231	275	234
path1	43	231	316	557	369
key-value	87	76	13	21	498
syntax	78	43	413	438	880
df.unstack	17	30	370	165	776
km	86	140	318	82	594
2nd	60	278	384	447	939
asfreq	44	269	228	756	684
kw	6	249	235	766	349
clements	19	273	195	631	117
.tsv	49	190	275	627	918
weigh	16	116	60	15	434
upsert	46	243	108	218	642
organism	93	76	171	761	542
joining	89	286	224	248	151
sector	82	196	309	453	125
gdp	73	204	84	713	108
thomas	82	91	120	144	936
last_name	55	237	324	144	936
particularly	28	38	474	309	687
17:52	86	85	123	724	512
personid	18	204	445	718	453
indexer_between_time	57	256	217	597	763
.order()	17	147	215	632	948
fink	25	156	410	649	289
minimizing	45	100	389	117	838
relation	52	279	337	770	524
networkx	53	150	450	562	392
carefully	1	163	60	458	230
lexicographic	89	145	317	360	575
screenshots	37	71	353	115	508
find	52	122	287	350	606
month's	93	282	26	713	990
best-practice	52	77	150	438	467
giant	23	58	264	6	585
210	86	169	371	607	783
df.convert_objects	17	49	305	734	579
merger	73	286	214	619	304
merges	23	286	224	248	151
ruin	49	170	454	557	369
distributed	93	269	369	65	773
19th	60	34	352	2	594
unhappy	19	163	469	458	230
experiment	93	282	70	634	585
generators	45	43	385	21	906
convoluted	28	77	474	616	68
a_id	54	90	400	761	784
override	78	126	426	357	450
8	86	169	371	411	110
seller	18	152	199	713	990
merged	73	286	224	248	304
capitan	94	218	157	396	291
notation	78	192	272	407	529
permission	25	231	184	557	291
express	52	144	498	438	467
wonky	26	298	386	52	846
cheaper	45	100	474	582	838
some_value	67	255	79	68	282
np.random.choice	17	117	27	405	319
chrom	73	204	171	454	775
columndatasource	7	188	409	10	435
brenbarn's	1	260	195	759	117
test.index.hour	86	221	371	14	987
groupby.sum	45	58	264	368	911
resolve	26	116	110	687	849
collapsed	63	127	244	582	234
doubled	23	236	179	127	822
pd.read_csv('data	43	162	47	109	246
set_index()	57	49	335	381	103
common	52	279	224	454	151
logistic	64	33	296	386	679
to_clipboard	49	74	235	690	519
doubles	3	100	147	582	838
locating	89	208	337	447	575
autumn	82	196	330	339	641
read_clipboard	43	74	112	690	519
between_time	44	256	228	756	684
pd.read_csv('c	43	162	47	109	246
printout	68	71	227	366	909
no-op	11	30	27	597	166
irregularly	44	269	87	65	825
lion	25	218	157	400	291
individual	23	58	337	447	585
nunique()	57	256	52	597	763
11th	60	99	352	51	753
forthcoming	61	197	108	392	279
.read()	43	39	322	157	527
degree	33	235	70	292	491
expert	16	133	167	50	434
.pkl	43	39	47	109	246
newcol1	80	129	476	564	311
python-2.6.1	21	24	146	49	257
2-tuples	87	76	203	681	498
.loc	78	226	272	270	139
halves	23	215	185	446	585
escaped	91	297	316	497	56
smallest	54	95	165	464	998
dataframe.from_records()	57	176	50	83	617
data's	6	215	390	446	585
kth	18	287	384	698	998
subscript	15	192	20	407	139
colc	55	237	324	278	356
x['mv']/sum(x['mv	27	57	466	161	588
')]`	67	255	79	68	282
concatenate	23	286	224	248	151
popup	53	44	19	76	517
responses	1	173	394	117	23
complementary	59	95	73	515	320
complement	15	90	224	454	538
jane	82	196	309	144	936
4gb	3	61	231	84	234
ipython	98	44	487	160	983
encapsulate	52	3	150	89	581
alters	15	208	179	0	744
half-hour	44	269	491	46	789
folding	45	133	488	678	687
reverse	89	145	317	184	575
16.21	6	234	340	14	129
powers	33	43	358	131	529
annual	44	294	326	46	753
non-overlapping	44	269	491	464	789
1294272000000	51	85	123	22	464
foreign	46	190	13	796	524
if-statement	63	0	385	229	777
checkboxes	53	224	180	304	944
alot	19	163	6	289	184
columnwise	11	131	417	439	581
loffset=	82	159	409	564	684
pandas.py	49	231	177	57	369
simulations	93	282	70	117	472
upgraded	58	176	50	400	563
elaborating	1	260	92	15	23
supply	6	234	227	89	853
simple	28	77	150	438	487
inplace=false	17	49	138	132	195
lbs	86	221	141	715	892
globals	46	265	426	491	196
customize	53	224	180	89	286
unsuccessful	56	122	287	350	313
price2	73	90	384	568	304
throughout	93	99	153	766	50
suppressing	53	298	45	62	846
out-of-core	45	3	451	627	687
expensive	45	100	474	417	347
headaches	45	82	110	467	476
consuming	45	100	474	417	347
transformations	23	58	486	671	581
n_particles	54	258	27	700	667
create	23	215	185	446	982
ohlc	13	29	348	647	157
z1	71	221	340	233	930
aapl_ma	13	29	271	156	407
dot()	11	136	233	760	231
dropping	89	211	45	208	675
ensured	56	204	440	364	129
d.to_datetime	67	36	466	502	588
']])`	73	17	409	0	64
reformat	23	215	185	446	709
in-place	78	131	138	513	819
arcpy	48	46	451	183	609
re.sub	91	42	251	34	24
wish	52	234	390	447	292
some_series	90	80	443	0	432
subfigures	59	235	471	221	172
sourceid	73	227	445	515	996
gas	82	196	26	144	962
convert	92	183	169	603	416
ndframe	78	265	411	791	450
gap	29	99	491	563	789
gam	64	138	216	187	472
gal	4	34	318	82	594
understand	26	116	345	714	434
i-th	54	287	80	202	498
gah	19	163	469	458	230
prices	13	29	271	156	294
gae	61	18	108	323	377
mwe	37	71	227	11	909
unnecessarily	45	38	474	342	57
semantics	78	226	230	270	436
executemany	46	243	190	218	100
unify	23	215	185	447	129
talking	26	234	345	714	762
preallocation	45	100	283	417	838
bill	82	196	309	167	125
server's	68	44	19	335	517
cluster	93	270	133	562	392
substrings	91	297	319	784	569
price_	49	262	128	491	64
taxi	93	282	26	117	585
fun	28	38	167	436	476
2014-12-29	86	81	242	431	201
c1	73	17	391	427	146
eventdate	18	204	445	305	990
ordereddict	89	145	317	21	498
n=0	60	140	352	14	753
to_keep	55	25	400	0	64
century	60	34	326	536	753
cents	56	260	60	444	756
key2	73	17	391	427	311
key1	73	17	391	427	311
non-pandas	28	77	436	759	467
faceted	48	133	180	304	944
encountered	56	82	110	687	365
period_range	17	159	443	756	843
"]`	55	237	135	650	356
.mean()	17	30	370	161	776
calender	44	99	491	46	990
screws	66	298	45	52	846
aspects	48	133	402	62	687
tkinter	98	44	487	160	39
open	0	119	454	617	157
reshape	87	236	335	381	315
troubling	56	234	179	714	880
how=	17	159	370	508	776
udfs	11	43	56	760	292
pip.log	21	24	146	49	73
emphasize	1	260	60	444	55
copying	45	58	45	342	911
last()	57	161	52	223	763
organization	89	236	400	453	620
proved	48	38	167	309	687
nonscalar	78	126	153	315	57
mod_wsgi	94	200	369	368	773
57	86	246	371	607	783
postprocessing	52	234	390	438	487
development	61	197	493	338	277
`g['c	17	30	370	165	86
currencies	6	279	337	93	585
df.columns.values	15	109	27	58	919
latency	3	173	199	718	990
keys	89	76	13	21	524
assignment	78	226	272	513	974
sqlalchemy's	48	46	451	323	415
leopard	94	217	157	396	322
yesterday	56	122	44	559	617
sym	82	91	400	144	125
sys	25	231	213	545	92
heterogeneous	87	183	169	507	659
moment	26	234	390	436	880
cythonized	11	136	122	417	906
appreciable	50	276	374	412	93
aggregate	11	136	52	223	368
parfait	19	163	195	204	184
"])	55	237	324	650	356
automagically	53	126	153	687	846
safe	78	43	488	740	57
task	52	133	486	671	179
23:30	86	81	242	724	201
percentages	18	152	444	515	368
reordered	89	145	317	184	575
memoization	52	46	451	309	687
index=2	54	140	384	698	998
.sub()	11	256	27	632	166
flags	6	234	235	520	129
sortby	10	123	477	155	891
y	54	178	481	620	267
entry	18	287	384	698	775
parametric	33	138	216	515	578
spend	16	222	44	50	476
corrwith	11	256	233	597	26
(/	21	24	367	49	257
lda	87	76	440	681	542
pearsonr	86	221	371	607	667
distutils	25	156	184	376	291
re-order	89	236	335	360	575
15:16	4	34	166	518	482
1960	60	34	318	82	992
izip	62	109	56	21	906
15:15	86	81	242	431	201
([(	71	117	340	267	968
stata's	6	144	488	183	850
snow	94	217	157	396	322
segregate	23	279	486	248	585
ax=ax	7	188	472	601	706
collects	93	190	275	6	918
thorough	48	222	421	199	415
world	48	38	167	436	880
alternative	28	3	150	759	117
indexes	89	236	224	454	575
alignment	89	126	153	315	575
zipcodes	73	215	185	332	918
letting	26	43	167	204	434
newton-raphson	33	138	233	117	231
impetus	48	133	167	309	55
cut	29	211	419	629	669
cur	67	112	306	227	916
.82	51	201	219	715	165
alternate	52	3	150	759	117
snag	63	127	295	636	476
source	56	234	454	557	377
rgb	59	235	54	221	629
hyperlinks	0	50	19	76	517
deliberately	6	126	153	315	365
siblings	54	17	331	761	784
column-oriented	45	190	264	384	557
8.000000	51	201	448	715	892
solvable	26	38	110	505	880
excited	16	163	167	50	831
ridiculously	28	38	474	616	347
re.findall	27	42	251	34	904
manage	52	116	264	89	927
varchar	46	183	190	218	642
fname	43	39	47	109	246
lexsort	89	226	413	405	94
big	45	100	264	342	347
bid	13	29	271	435	157
judgement	66	38	167	436	476
matters	6	145	317	467	373
df.date_time	71	293	334	612	919
.strip()	67	42	251	90	904
bit	28	38	474	436	68
superpack	25	156	184	376	291
precipitation	60	282	491	283	753
`orient='records	57	256	476	564	853
asof()	78	256	488	417	26
semi	91	170	83	784	345
dll	63	231	213	557	291
follows	68	215	185	95	59
non-na	80	129	0	201	998
disks	45	100	231	467	234
addressed	61	18	108	532	279
widgets	98	44	487	39	517
flux	73	282	185	305	304
whos	63	265	426	766	963
indication	78	226	230	596	974
neatest	52	77	150	438	467
bamboo	94	200	369	39	773
a.index	90	147	443	245	432
google	13	200	275	744	377
often	45	38	474	309	57
inplace=true	17	49	138	165	86
absolutely	19	163	469	458	230
10,000,000	3	212	107	319	633
pd.dateoffset	27	159	114	502	588
30s	44	212	491	362	692
back	66	211	390	437	747
test.xls	43	39	47	109	246
30k	3	212	107	319	633
@user	19	273	195	631	756
30m	26	116	128	436	320
ckdtree	45	256	283	505	969
oscillations	80	279	153	766	675
optimizer	46	46	451	309	687
server	46	200	190	39	642
3-way	53	235	471	221	832
.strip	55	42	324	90	62
df1.date	90	36	443	231	843
x.astype	27	258	27	667	526
scale	59	235	471	620	172
2008-03-10	82	196	309	144	125
capitalization	66	260	128	15	320
culprit	63	82	110	687	365
scala	48	46	451	309	609
support	78	3	488	309	687
affects	6	126	390	437	927
decision	64	33	7	386	553
proficient	16	116	167	50	179
pep	48	18	421	323	415
integration	48	46	451	39	609
per	18	152	199	718	368
es_in	79	265	426	491	963
centroid	33	270	133	195	999
cloud	19	273	195	631	184
pandas.merge	90	238	214	245	206
ellipsis	98	183	169	470	92
notepad++	49	113	140	363	628
either	66	234	390	596	292
308	86	169	371	607	465
google's	13	29	271	552	294
patient	18	173	394	718	247
300	3	212	107	319	633
googled	56	122	287	110	313
continuing	56	261	298	108	145
munge	23	190	275	6	709
pandas.rolling_apply	11	136	233	760	231
restrictive	45	100	230	676	373
30+	3	212	107	319	633
.xls	0	119	356	580	730
readability	28	43	283	200	47
goods	82	91	331	713	727
json.dumps()	49	185	56	470	519
usa	82	196	318	82	727
proven	48	133	167	50	687
constraint	45	100	389	342	927
new_index	90	49	443	165	432
&	67	228	206	122	916
'])```	71	147	141	14	995
extensions	25	156	184	376	289
rownames	91	76	357	784	345
clash	73	286	214	619	140
grouping	89	236	45	208	575
consequently	6	126	153	766	191
misplaced	19	163	120	458	846
fulfil	52	260	246	444	320
qgrid	98	44	19	76	517
__future__	92	185	169	470	256
specifier	57	74	235	470	853
pythonpath	25	231	177	214	437
.plot	7	188	472	10	314
scripts	94	231	177	557	369
exercises	48	203	486	50	179
datatime	92	104	434	185	349
fileinput	49	185	112	690	519
frames	23	279	224	248	151
proportional	33	138	389	117	578
lesson	19	163	167	204	179
click	98	44	487	114	377
myfunction	27	57	222	161	618
few	56	122	368	658	525
errno	5	134	438	130	34
subsl	27	188	27	700	667
mkl	25	156	184	376	289
rsuffix	90	286	214	619	806
broadcasts	87	131	417	748	973
infected	82	173	394	343	125
forward	80	129	0	201	804
paren	91	170	83	347	345
translate	52	116	128	89	709
errant	80	129	128	347	778
cheeky	57	256	52	759	26
scipy.sparse	87	141	450	247	325
org1	55	91	306	215	928
adjusting	53	94	471	620	172
hoped	28	77	436	759	967
-type	11	256	233	760	231
serie	44	269	491	46	843
sdf	15	198	138	513	974
#code	68	215	185	95	744
multilevel	89	236	335	360	575
breakpoint	63	127	295	108	799
frame3	55	237	324	650	356
frame2	73	17	391	568	304
frame1	73	17	391	568	304
migrating	94	190	275	671	179
nutshell	6	234	488	89	55
directed	53	270	275	562	392
yyyy	60	64	261	586	915
y-intercept	33	138	216	330	578
zhu	19	273	195	631	184
originals	23	211	337	437	304
vmin	7	188	27	132	435
andy	19	273	195	631	184
ffill()	80	129	0	201	410
multiplelocator	71	188	27	700	435
non-indexed	23	215	185	446	982
1.5m	3	212	107	319	633
exploration	53	133	486	117	585
reflects	68	215	179	446	129
resampling	44	269	228	756	789
unexpected	79	65	413	533	34
desire	68	234	390	366	744
natsort	89	145	317	360	575
df.column	62	208	272	58	746
append()	57	256	233	381	26
constant	29	100	389	292	129
stripped	56	210	153	349	345
strand	82	91	171	453	936
optimizing	45	100	283	417	838
stringmethods	79	251	315	111	413
single	23	234	185	447	709
row['c3	86	169	371	607	783
quoting=3	43	39	478	593	957
obtuse	26	38	474	714	68
tavory	19	273	195	631	117
bracket	91	192	20	497	494
barplot	59	224	180	304	944
22:00	51	81	123	724	512
%	38	297	98	157	955
200k	3	212	107	319	633
itertools.groupby	11	256	56	505	26
df2.apply	17	30	215	165	208
composing	6	279	488	766	373
plugged	68	215	337	766	129
df.col	15	25	272	407	139
priori	6	170	337	661	345
functionality	48	3	488	89	487
two-column	87	141	203	248	973
v.1500	4	73	492	340	978
xytext	71	188	472	700	435
explaining	1	260	60	15	807
data_df	15	25	400	568	919
cellar	21	24	146	49	257
accidental	26	163	60	458	230
lend	26	43	167	50	880
70%	93	282	331	23	990
benchmark	45	100	283	345	969
aggregates	23	152	53	223	368
overriding	78	208	426	83	450
prepared	46	200	275	89	606
iterators	45	43	488	417	906
convention	78	3	488	309	615
dataframe.from_records	57	185	426	58	519
bytestrings	79	183	305	470	526
frame['date	67	255	79	68	282
utterly	26	82	345	50	434
excelwriter	0	119	356	550	519
24:00	38	64	145	586	619
3.4.3	58	245	403	340	141
aggregated	23	152	444	469	368
dimensions	87	141	203	748	973
s_high	54	140	172	568	267
implies	6	126	390	766	987
overlooking	16	38	167	418	883
200+	3	212	107	319	633
vehicles	18	152	331	761	775
notion	6	126	488	694	865
2002	54	296	318	14	594
2003	4	34	318	82	594
2000	3	212	318	411	594
implied	1	260	60	444	239
2006	4	34	318	82	594
presenting	26	133	474	714	55
2004	4	34	318	82	594
visualising	59	235	216	136	472
at	66	234	390	108	145
out-of-bounds	79	65	413	533	724
series.add	11	131	52	760	692
df_index	17	237	324	165	62
noon	60	99	352	51	990
reference_id	73	286	214	619	806
discards	6	126	153	315	778
os.path.join()	57	256	56	597	292
jason	52	279	390	446	585
month_date	89	94	317	620	349
tested	56	122	179	559	967
wrangle	23	215	185	446	585
?..	52	234	128	596	320
query	46	243	190	218	642
x.minute	27	57	466	502	588
5:00	86	81	242	644	201
15,000	3	212	107	319	633
df3	90	286	443	568	304
schema's	46	243	190	218	100
compose	23	58	483	151	709
45129-09-19	51	81	123	724	512
reposted	1	222	227	15	807
meta-data	10	123	78	155	557
granular	44	269	491	46	789
data.apply	27	57	222	161	153
helps	16	116	167	15	807
preview	68	44	19	76	909
atlas	25	46	451	376	609
fatal	5	85	438	526	877
ingredient	91	76	319	761	150
11:30	86	81	242	431	512
xlate	62	109	400	0	64
.to_latex()	46	185	233	505	519
presently	56	190	185	490	179
vln	67	255	79	434	829
implicitly	6	126	169	603	373
panel4d	87	141	152	748	973
lenghts	87	279	203	464	973
astype()	57	256	235	185	763
chooses	66	137	390	74	615
putting	23	58	45	208	709
spots_b	80	90	0	201	304
array's	87	141	169	748	973
arrange	23	215	185	446	585
severely	26	100	244	467	838
decimal.decimal	92	183	169	603	203
backtesting	13	29	271	156	294
classifications	52	279	337	447	775
os.sep	49	185	454	557	369
sort_index	89	145	317	381	103
columns={	55	237	324	650	62
.any()	17	40	65	322	299
csv.reader	43	39	112	109	488
stddev	33	152	53	515	491
brevity	68	260	432	426	115
eigenvalues	87	141	450	681	325
havent	19	122	287	350	967
ddd	73	17	391	427	311
versioning	48	46	451	671	487
`'yes	80	90	476	564	311
python2.x	78	256	426	410	166
int64	92	293	169	317	163
`'object	92	183	476	603	493
rank()	11	136	52	223	26
crop	53	188	409	68	320
cron	46	200	369	39	773
layouts	53	224	180	304	944
insertion	45	58	264	695	911
subtle	61	82	230	687	279
read_hdf()	63	127	231	97	234
bystate_df	15	25	272	407	948
ruled	63	82	128	108	398
carlo	45	100	70	117	635
html5lib	25	231	213	545	291
append	23	58	483	248	982
scientific	94	46	451	39	529
3x	45	100	283	345	969
datetimesy	90	238	214	245	206
3}	38	221	98	130	867
chicago	60	34	242	82	594
3s	3	212	107	362	633
pipes	49	231	454	557	369
access	23	208	390	89	615
.values()	67	36	305	667	526
anywhere	56	234	287	596	606
type2	82	196	91	144	791
dendrogram	87	215	450	681	944
3m	82	159	409	144	125
3l	51	5	91	130	867
%m%d%y	38	64	145	502	366
3a	54	248	21	14	478
rowwise	15	236	335	447	575
piped	49	185	454	557	553
exercise	26	133	486	200	179
3d	87	141	203	748	944
body	91	170	128	784	345
justification	6	126	153	489	927
ploting	59	235	471	721	944
exchange	13	29	271	156	294
multinomial	64	33	216	187	472
accessor	92	104	56	457	817
leveraging	45	133	488	309	687
annon	73	238	391	245	206
python2.7	21	24	146	241	257
python2.6	21	24	146	134	257
broker	46	265	426	491	773
df.astype	67	36	305	666	526
packing	87	141	203	21	973
intercept	33	138	216	330	472
-----	38	293	473	356	465
inversion	78	126	203	620	166
others	56	279	390	661	807
safer	28	226	150	638	57
implicit	78	43	230	315	57
extreme	29	235	389	162	491
pylab	98	44	487	337	983
remark	1	260	195	444	756
38	4	169	371	607	783
33	86	169	371	607	167
32	58	73	371	75	783
31	4	34	318	82	594
barchart	59	224	180	304	944
37	86	169	371	607	783
alaska	38	196	309	144	125
35	86	169	371	219	783
later	66	234	390	108	476
3+	3	173	26	117	927
3*	54	78	141	88	995
id_1	55	39	47	109	320
df1.combine_first	90	238	443	245	206
weekday	60	99	228	51	753
implement	52	116	167	89	687
line_profiler	68	256	233	505	969
composed	23	215	185	446	431
%paste	98	44	487	670	517
named	73	215	185	491	615
formulated	1	260	440	444	756
nameb	55	237	98	427	936
0.8	58	78	50	669	333
dataframe.head()	98	44	19	670	92
mysql.connector	46	243	190	218	642
pandas.dataframe.from_csv	43	74	478	690	488
decrease	45	100	389	582	838
names	89	76	337	447	615
np19py26_0	58	245	403	400	141
regexp	91	170	56	34	711
resets	44	137	491	469	368
fast-path	73	234	390	491	764
12.600000	51	201	448	715	892
.pip	21	24	146	49	73
zscore	33	95	53	469	231
links	48	18	421	323	415
inspiration	48	203	421	323	415
.split	67	42	251	90	655
escapes	91	113	316	784	56
readable	28	77	150	638	467
externals	5	85	438	526	877
calculation	33	131	53	469	581
chr	73	17	391	427	125
pd.dataframe.from_csv	43	39	47	109	246
textblob	91	185	213	470	850
themselves	6	279	337	661	218
up-vote	1	222	92	15	23
python27\	21	24	121	163	666
apple's	25	156	184	649	289
normalizes	33	211	53	292	578
loadtxt	49	185	112	430	741
upcoming	61	197	36	392	622
out1	90	238	391	245	206
0.5	29	78	141	669	333
dupes	17	49	109	165	86
out2	73	17	391	245	304
df.a.values	71	147	334	122	948
trail	18	152	394	515	491
train	64	33	296	386	679
name2	73	286	214	619	304
normalized	54	95	53	698	129
name1	73	286	214	305	304
python-dateutil	25	156	328	382	563
name=	90	30	443	650	62
iii	55	293	473	14	784
customerid	18	204	445	305	453
subscription	18	204	445	698	108
ffill	80	129	0	201	410
account	93	279	337	292	585
.data	71	25	334	0	948
f	27	178	222	0	618
df_test	71	25	340	14	987
gcc-4.0	25	156	184	649	291
findall	91	256	56	34	569
dfnew	90	286	400	711	304
max_columns	53	68	201	373	263
tag	53	234	394	466	455
obvious	26	38	167	438	880
parquet	49	190	264	627	557
key_1	18	204	445	87	108
closing	13	29	271	617	157
didnt	19	163	469	458	967
fetch	13	190	275	6	606
unpacking	87	43	203	21	709
abcd	91	297	309	784	936
sqlite	46	243	190	218	642
ataframe	90	117	161	109	432
rolling_apply()	79	256	235	760	963
tab	91	170	112	784	56
e.g.	6	234	390	447	129
proportions	33	95	14	515	491
reran	94	217	295	636	322
vectorising	45	43	283	417	57
travis	94	218	10	376	859
out=	71	230	334	722	948
effectively	23	58	390	596	709
mixture	87	183	169	603	768
sgdclassifier	64	33	7	386	553
cuepos	73	17	445	698	108
g.filter	27	57	466	161	588
cygwin	94	218	157	400	291
excel.py	21	24	367	163	666
native	28	3	488	430	487
lsuffix	90	286	214	619	806
gcc	25	156	184	699	291
maturities	13	29	271	156	294
varied	93	41	133	117	585
revo	25	156	213	773	291
filepath	43	39	47	109	488
sensors	93	282	199	634	773
holds	6	215	185	74	431
re-indexing	89	236	45	208	575
regions	93	235	133	292	491
pleasing	53	3	488	309	487
varies	6	211	133	464	129
winners	18	152	53	469	368
2:3	15	25	272	407	948
attachment	49	200	454	744	377
subscripting	78	192	20	407	139
remapping	89	109	400	0	64
revs	62	109	161	0	162
stock	13	29	271	156	294
profile	53	100	283	117	838
onefile	25	231	213	160	291
de	55	237	324	650	62
sys.version	58	231	213	545	92
wherein	93	173	185	292	542
quote_minimal	54	221	340	132	772
specifications	53	76	203	89	172
on='id	90	238	443	245	206
philosophy	48	133	167	50	55
collection	23	190	264	368	773
bothered	26	163	469	458	967
mother	93	282	26	446	373
2003.04.08	86	81	242	724	465
np.datetime64	92	104	434	20	780
multiplication	87	131	417	439	824
dataframe.join	57	256	233	597	26
yielded	68	215	179	366	444
unique_ids	73	17	400	427	64
ambiguous	77	226	279	42	724
np.argsort	17	147	27	632	84
drop	80	211	153	347	675
3859676.9971	51	66	238	471	658
bind	23	286	224	248	151
sit	53	298	264	108	172
lines	68	170	112	347	345
correspond	18	287	337	698	431
940	86	221	371	102	465
941	66	112	128	596	691
9am	60	99	352	51	753
re-open	66	127	454	557	377
plt.subplot	7	188	472	601	706
float_format=	43	39	98	157	955
fallback	46	243	190	270	100
800,000	3	212	107	319	633
expanding_apply	11	136	233	760	231
jira	0	190	275	6	918
3.1.1	58	176	50	392	622
embarrassingly	56	274	298	204	587
pd.rolling_std	27	147	141	161	588
np.random.permutation	17	49	215	165	86
afterwords	45	43	264	315	365
downtime	55	297	434	305	784
20:00	86	81	242	724	512
meter	18	204	199	698	990
sharex=true	7	188	472	601	706
symbols	13	267	271	156	294
looping	23	58	385	151	911
referenced	56	260	200	491	900
charting	94	200	275	39	609
1294099200000	51	85	123	22	464
dt	92	36	434	502	780
bunch	23	279	368	658	525
industries	18	152	53	156	294
tab-completion	98	44	487	76	983
le	54	91	120	14	936
ext3	45	100	78	467	557
lc	54	17	340	698	998
brian	19	273	120	631	184
300,000	3	212	107	319	124
color=	53	224	409	10	435
ll	66	211	120	108	844
lm	64	144	216	183	472
accredited	55	237	316	784	936
li	19	273	195	631	117
resorting	23	58	45	208	467
lt	91	297	412	668	166
willing	66	38	345	467	434
`matplotlib`'s	7	224	180	10	314
ls	15	25	400	0	919
.cumcount()	17	147	370	165	776
pop-up	98	44	487	114	983
tsv	49	190	454	6	918
tst	55	237	324	650	64
<	67	228	206	122	916
pd.read_sql_query	46	243	190	218	702
.merge	90	238	443	245	206
11025	87	287	133	761	571
greater	29	78	384	162	998
__getitem__	78	251	411	791	963
installers	25	156	184	376	289
dan	19	273	195	631	184
spell	52	43	390	464	129
sortlevel()	89	145	317	360	575
yearend	6	265	426	491	450
operator	78	223	20	439	240
dat	68	109	483	568	982
mention	26	234	60	596	967
spelt	26	260	60	444	55
pymc3	64	138	216	187	472
datetime64	92	104	434	20	875
mylist	62	109	400	0	919
.time	67	36	79	502	614
day	60	99	352	51	753
february	60	34	352	51	753
measures	93	282	70	469	337
onehotencoder	64	33	457	386	768
pd.index	27	117	466	502	588
verifying	26	82	110	687	365
warned	78	226	230	357	974
df1.iloc	71	80	334	722	948
sebastian's	1	260	195	444	756
identified	56	76	337	766	775
reloading	63	127	295	636	902
l2	54	247	481	404	267
l3	55	17	481	650	776
l1	73	17	481	427	267
disregard	66	211	337	437	129
identifies	6	287	337	74	775
identifier	73	204	13	305	459
ts2	44	198	491	46	843
ts3	44	140	340	305	843
ts1	44	198	491	46	843
lie	29	279	133	464	172
3,000	86	169	371	411	783
activate	25	231	177	214	437
.notnull()	67	40	215	68	282
allan's	19	273	195	631	117
strip	91	170	83	347	345
displaying	53	44	19	76	517
fractions	92	183	82	131	970
jointplot	59	224	471	620	944
pivot	89	236	444	381	103
programmer	16	222	167	199	831
real_name	73	204	13	305	524
popping	63	82	295	533	365
marius	19	273	6	289	184
keep_default_na=false	43	74	478	690	853
matt	82	91	120	167	125
sk-learn	64	46	7	671	179
res	90	109	443	568	432
rep	1	222	92	433	403
80gb	3	212	107	275	234
rev	18	152	445	713	108
%d%m%y	27	64	145	502	588
aggfunc	11	136	249	223	105
trickier	28	38	474	714	68
flu_test	90	117	443	267	432
mate	19	163	6	289	184
rel	54	140	340	14	267
row['a	67	255	79	68	282
.date()	67	36	434	502	614
reg	67	234	457	446	178
math	11	131	486	439	581
emp	73	286	214	619	311
pd_series	15	90	203	21	498
workflow	48	128	486	671	179
retrieved	23	190	185	6	902
clarify	1	116	60	15	320
approaches	56	279	283	62	969
please	37	71	353	15	807
que	54	90	337	454	304
trends	44	184	389	46	578
myseries	90	49	443	568	432
distinctive	59	235	304	221	172
likelihood	33	138	389	330	472
afterward	66	126	153	347	292
convert_numeric=true	17	49	305	734	579
backwards	80	211	0	201	804
indent	91	170	115	497	345
explanations	50	276	374	412	93
recipes	48	18	421	323	632
df.date	67	36	79	502	366
bidirectional	18	76	133	761	392
df.data	6	287	169	603	129
labelling	89	298	471	620	846
tack	66	49	335	437	292
elasticsearch	23	190	275	671	902
errorbars	59	224	180	304	944
dtype={	38	74	235	470	955
workbook	0	119	356	580	730
retain	52	126	337	437	495
retail	18	152	326	435	157
facilitate	48	46	488	93	487
.replace	38	42	251	90	382
scipy.stats	11	136	233	760	231
_regen	38	255	222	68	618
`df['result	67	255	79	68	282
error_bad_lines	43	74	255	357	665
2,000	3	212	107	319	633
.transform	17	30	370	161	776
reaches	63	127	295	162	145
styling	53	44	19	76	517
embarrassed	16	163	469	448	834
'))"	38	5	322	157	527
improvements	61	18	283	467	838
hurdle	45	133	264	50	179
reached	63	127	295	108	145
')))	67	57	466	565	588
2000-01-01	86	81	242	724	201
hashes	87	89	203	21	973
set_ylim	7	188	116	10	314
earncat	18	152	445	343	108
ancient	61	176	50	83	617
sadly	48	122	287	204	807
observer	55	237	324	650	936
unspecified	18	126	394	201	775
inheriting	79	265	426	791	450
x.value_counts()	27	57	466	161	588
intermediate	23	58	486	342	911
messing	56	298	320	52	313
listcomp	28	43	474	436	57
.size()	17	30	370	161	776
tokenizer	66	43	488	309	57
gear	66	200	451	108	747
apostrophes	91	170	83	784	56
explanation	19	273	6	200	184
nobody	16	222	92	394	23
documentations	48	18	421	323	415
one-hot	64	33	457	535	768
'))`	27	57	466	502	588
udf	11	256	56	760	906
.weekday	67	36	79	502	614
df.pivot_table	17	30	370	165	776
bb\n	51	146	219	771	165
holdings.groupby(['holdings.portfolio','holdings	27	57	466	161	588
subdataframe	11	17	222	760	618
df.col2	67	40	306	322	299
recieve	52	215	128	447	606
`'col1	73	17	476	564	311
prune	66	234	128	108	807
bubble	59	235	471	304	944
pointers	50	276	374	412	93
df.unstack()	17	49	443	165	103
num	62	25	400	0	64
joris's	1	260	195	444	117
beauvel	19	273	195	289	184
visited	18	173	394	137	453
permitted	78	226	272	315	166
newwords	73	286	400	248	304
targetid	89	227	317	184	996
tidy	66	261	92	436	476
plt.xticks()	57	256	116	10	26
curves	59	235	304	515	944
comfortable	48	38	167	50	27
tide	93	282	70	634	571
db['date	67	36	79	68	366
1-minute	44	269	491	46	789
lgrnk	18	152	53	698	368
unlikely	26	38	474	714	57
have	56	234	390	596	129
dictate	52	126	337	89	927
apparently	26	234	179	596	365
acceleration	59	235	133	292	571
misaligned	23	298	224	248	151
mil	3	212	9	319	633
datetime-like	92	104	434	185	416
congrats	19	273	6	517	184
dateutil.parser	49	185	212	185	926
neater	28	77	150	638	467
mid	29	29	444	435	188
mix	6	183	169	603	768
builtin	11	3	426	430	906
concerns	1	116	60	467	55
series.str	57	256	56	34	569
plt.xticks	7	188	472	10	435
rc1	58	176	50	392	617
vcv	67	255	79	68	282
unless	26	234	390	596	57
anonymized	93	76	185	761	542
61.245.172.14	71	221	340	14	987
plt.title	7	188	472	10	314
mimics	37	71	227	11	909
eight	3	212	107	464	822
preliminary	45	100	283	687	838
new_column	55	237	324	650	356
transcript	68	71	384	108	145
payment	93	173	394	713	990
police	82	45	309	144	454
data.iloc	71	25	334	722	948
df_concat	90	49	443	245	432
gather	56	211	337	447	606
request	61	18	108	288	279
disease	73	204	445	698	108
__init__.py	21	24	367	370	994
bipartite	93	270	70	562	392
1,000	3	212	107	319	633
graphs	59	224	471	304	944
callers	89	145	444	184	108
comma-separated	91	170	112	784	345
absurd	63	100	295	636	347
date_list	68	25	326	366	843
axvspan	7	224	180	10	314
empid	73	204	445	305	108
selection	78	226	272	270	538
brute-force	28	77	150	438	467
confirmed_settings	18	204	445	364	108
text	49	170	454	6	918
supported	61	243	190	740	100
unseen	80	129	337	454	778
.corr()	71	80	334	722	867
one-off	45	38	474	417	57
visualized	53	298	486	671	179
2001-02-02	82	196	309	144	125
portfolio	13	29	271	156	294
continually	23	211	483	447	606
sub-string	91	297	319	784	569
setter	78	265	426	791	450
4.0.1	58	218	448	699	67
4.0.0	58	245	403	340	141
textual	49	190	275	6	918
grabbed	93	215	275	6	542
knowledge	48	133	167	50	55
subarrays	23	58	385	151	911
fecha	73	204	185	141	349
controls	53	126	201	74	306
fill_reject	54	140	384	435	990
:])	71	80	334	722	948
notes	61	18	108	323	756
bokeh	59	224	180	304	944
c2059	5	85	438	526	877
pitfall	78	226	230	315	974
regularly	44	198	491	65	873
namedtuple	23	265	426	491	982
np.random.random_integers	71	117	334	267	432
edchums	1	260	195	759	117
pull	13	190	275	6	606
beat	19	163	283	204	25
bear	16	222	92	579	23
nrows	43	74	478	690	801
df['id	67	255	79	68	899
to_sql()	46	243	190	218	100
orange3	98	231	487	160	983
aforementioned	52	279	337	447	585
timing	45	100	283	345	969
fct	62	178	222	491	64
areas	59	235	133	135	172
133	86	169	371	607	336
.nth	17	30	370	165	776
cursor.fetchall()	46	243	190	218	702
organ	54	140	340	14	784
.round()	17	147	27	505	526
cached	45	100	369	368	557
rtfm	19	163	469	204	230
fixes	61	82	108	687	617
count_ones	27	30	249	161	181
teams	18	16	84	279	913
underscores	91	170	83	784	56
to_json	57	185	235	381	519
360	54	140	340	706	995
won't	66	234	390	661	888
cycles	18	211	424	108	129
pertains	18	173	394	718	775
looks	68	215	179	95	744
conform	6	126	390	437	927
omission	26	82	110	436	880
constructing	23	215	45	208	902
exists	52	234	483	491	764
-ipandas	21	24	146	49	257
df.reset_index	17	49	443	165	86
to_sparse()	45	100	244	342	347
intensity	33	235	199	547	595
enhanced	61	176	50	83	617
converting	92	183	45	208	902
terms	52	279	488	309	687
xxxxx	21	293	473	356	300
df.rename	27	117	466	267	432
wx.index	43	39	305	109	526
df1.groupby	27	30	370	161	776
right_on=	55	238	391	245	206
attempting	56	215	345	350	179
clearing	19	163	44	108	476
g.apply	27	30	222	161	181
.time()	67	36	79	502	614
ralph	55	91	324	144	125
std()	11	136	233	223	231
difficulties	56	82	167	50	179
train_test_split	64	33	223	386	553
plotly	53	224	180	304	944
routine	45	3	488	89	487
sub-optimal	28	77	474	616	417
progress	61	18	298	50	279
boundary	29	235	389	162	924
refreshing	56	211	295	108	145
18:36	51	5	91	724	619
column-based	23	131	488	627	305
c_id	54	90	13	698	775
_merge	73	204	445	395	304
reproduced	37	71	353	115	508
horizontally	59	94	471	620	151
df.index.names	57	251	409	58	963
custom.css	53	44	19	76	517
transpose	23	236	335	381	103
implementing	56	3	298	50	587
reproduces	37	71	353	115	917
optional	57	74	235	690	853
legit	16	82	110	436	476
commenting	1	222	92	15	23
instant	19	163	469	204	476
ts.groupby	27	57	466	161	588
normstrike	29	140	384	435	995
float64	92	293	473	317	163
taking	56	211	45	208	709
equal	54	90	337	464	998
attributed	6	215	337	766	585
agree	26	38	60	448	57
kosher	28	260	150	759	57
df.drop_duplicates()	17	49	370	381	103
pd.groupby	11	286	409	58	292
15min	44	269	491	46	789
06:00	86	81	242	724	512
)))`	27	117	466	405	338
passing	6	265	45	208	709
strftime	92	104	212	185	745
otherwise	66	234	390	596	888
comment	1	260	195	444	756
aa	55	17	324	650	936
venv	25	231	146	214	437
gone	56	122	365	559	313
.read_csv()	49	74	235	690	853
clues	50	276	374	412	849
labelencoder	64	33	457	386	768
combine_first()	57	256	0	597	410
array-like	87	141	203	748	973
basing	52	211	227	162	606
uid	73	204	445	364	108
occuring	89	211	128	766	987
unutbu's	1	273	195	631	117
tremendous	45	127	295	368	773
it's	26	38	390	436	880
wilderness_area	54	221	340	14	267
copies	78	43	230	513	974
ai	54	287	340	14	267
dtdate	18	152	199	305	990
lon1	54	47	481	404	267
certain	52	279	337	447	606
indicators	93	279	185	307	768
proposal	61	260	436	759	117
outliers	29	95	389	469	491
anomaly	52	71	227	11	909
ak	82	196	476	564	125
it'd	66	38	390	436	888
define	52	265	426	89	196
faced	56	82	110	687	365
arises	6	82	110	687	365
perplexed	26	163	167	50	434
inspecting	63	210	153	108	842
list1	62	109	400	0	111
received	56	262	179	533	34
am	56	55	185	50	179
skewed	59	235	133	515	491
np.int32	79	293	305	667	605
cos	26	215	185	447	880
bulk	46	190	275	671	642
orange	82	91	304	144	629
finished	63	127	295	636	799
equations	64	279	486	187	40
-reina	19	260	195	759	756
bull	55	297	66	579	187
resultant	23	215	185	447	744
ax.set_xticks	7	188	472	10	435
divisions	6	279	153	315	778
multi	89	236	335	360	575
holiday	60	99	352	51	99
isnull()	57	136	182	597	105
ap	54	178	481	261	794
plain	49	43	488	430	292
nd	87	141	203	748	973
appearance	59	235	229	221	172
promoter	73	90	337	698	998
df.filter	17	42	251	34	511
promoted	6	183	169	603	163
flyveren	21	24	146	49	257
advisable	26	38	60	436	434
google-api-python-client	58	176	50	392	617
frustrating	16	122	167	50	68
grasped	52	122	287	350	313
inherits	11	265	411	791	20
%m	38	64	145	586	550
stock_id	23	236	483	360	982
file	49	190	454	6	918
helper	11	3	426	760	231
manually	53	58	390	89	911
almost	26	234	390	596	880
2015-05-22	73	140	309	305	784
helped	19	222	92	15	184
watched	48	203	278	323	415
prose	1	18	108	436	476
rodrigo	6	234	390	596	129
regression	64	138	216	187	472
sequentially	23	58	385	151	911
begining	66	211	128	108	145
bbox_to_anchor	7	188	472	700	435
read_pickle	49	185	78	430	519
x.split	27	57	466	565	680
)	6	234	390	596	129
to_datetime	92	104	212	185	745
indistinguishable	6	287	203	292	973
set1	15	90	400	454	304
set2	15	90	400	454	304
backtrace	63	82	110	15	807
finite	29	206	111	162	775
infer	6	126	169	716	349
price_trend	15	76	203	698	784
practice	45	38	230	309	57
name_list	73	25	400	427	311
cubic	64	138	7	563	410
iow	10	123	477	265	540
2.3.1	58	245	403	400	141
2.3.3	61	197	108	392	617
linearregression	64	33	457	386	553
np.append	17	30	27	161	667
ion	89	236	335	360	575
')```	67	147	161	470	526
write.csv	43	39	161	109	246
2sec	82	196	309	144	135
datatypes	6	183	169	507	163
pandas.read_csv	43	39	478	690	488
tighter	78	43	488	309	57
ideally	52	234	390	89	585
numbered	23	278	483	766	982
nx	91	297	259	579	318
center	59	235	304	620	435
curiously	63	82	179	636	365
neural	64	138	216	187	472
nevertheless	26	38	474	315	880
disappears	63	199	295	687	365
difflib	11	144	56	247	999
antonio	18	195	384	654	821
thought	26	163	469	458	967
exceedingly	48	38	474	309	687
st2	94	231	213	557	291
oops	19	163	469	458	861
sets	93	279	133	464	585
position	29	32	455	424	461
recasting	23	183	45	208	416
space-efficient	66	38	264	342	57
usual	23	3	488	89	292
test1	55	237	400	0	64
preallocate	10	100	244	342	979
test2	21	91	177	388	318
stores	23	190	292	627	557
storer	10	123	78	155	557
numbering	89	236	335	360	575
open()	49	185	235	690	519
unary	79	65	169	439	166
satellites	93	270	133	23	822
interim	23	58	385	759	911
books	48	173	394	323	415
voltage	93	282	70	634	571
store.root.attributes	63	262	161	470	369
pandastic	28	77	150	313	467
widen	53	44	19	76	517
k2	54	17	197	281	87
wether	6	234	128	661	775
1111	54	293	473	356	300
%v	92	185	212	470	745
ads	93	173	394	305	108
omit	80	74	235	347	853
onward	60	278	352	765	700
demographic	93	282	26	713	491
lake	67	255	309	68	125
recommending	1	260	440	444	756
mathematically	33	141	450	681	325
gohlke	25	156	184	376	289
_metadata	78	265	411	791	450
add	66	211	483	447	982
cleanup	66	298	110	52	807
voila	19	163	6	289	184
confusions	78	226	272	407	139
adj	13	219	289	156	956
284	51	201	349	173	471
smart	28	77	150	438	420
.get()	57	256	56	597	26
resolved	1	222	92	444	132
tests	56	100	283	345	969
optimizations	45	133	488	417	687
everthing	89	298	45	89	747
articles	93	203	26	323	415
fyi	10	123	477	265	540
datetime.strftime	92	104	212	185	745
elapsed	44	99	199	303	348
testc	56	279	224	766	129
resolves	61	260	179	687	365
pivot_table()	57	256	335	381	103
my_project	25	12	177	557	369
insert	23	211	483	6	606
0%	54	129	306	612	998
like	52	234	185	89	292
success	56	122	287	742	313
np.logical_and	71	147	206	122	916
controlling	53	46	486	93	172
qualitative	59	235	471	515	944
format='table	43	39	47	147	527
-----------	51	66	238	471	658
edit	1	260	195	444	756
row-column	52	234	337	89	585
minute-level	44	269	491	46	789
works	19	163	179	74	880
soft	82	200	10	713	884
comprehension	62	109	308	21	498
accessible	23	265	426	614	174
.net	94	46	451	529	609
classical	78	3	488	89	292
pandas.dataframe()	15	265	426	58	963
alive	56	163	44	204	476
hair	16	163	44	643	879
polynomial	64	138	216	187	472
skipfooter	43	74	235	690	853
recommendation	1	260	195	444	756
proper	52	234	390	89	349
tmp	21	231	161	388	318
---------------------------------------------------------------------------	79	262	413	533	34
est	60	54	333	413	530
highlighting	53	260	19	200	517
esp	45	100	283	467	838
nonempty	6	76	337	761	775
0.25	86	78	448	669	333
lat2	54	47	481	404	267
hurricane	59	235	304	221	629
0.21	51	201	448	173	471
:-d	19	163	6	204	184
0.23	51	201	448	669	333
k1	73	17	197	281	87
03:39	86	221	340	14	987
in-line	52	3	488	89	292
gt	82	91	309	668	936
happend	16	116	128	366	320
screwed	26	298	110	52	846
nfs	94	240	369	56	707
:-p	26	163	120	436	880
pandas.notnull	57	256	233	597	166
2011-01-07	60	140	242	431	399
mode	98	44	356	491	519
panes	49	119	454	557	918
conference	23	76	171	6	265
pepper	82	297	309	314	248
noise	29	45	389	292	454
slight	1	260	195	759	117
sub_df	54	198	335	568	304
fucntion	11	265	233	760	963
stack()	57	236	335	381	774
expiry	18	29	199	305	990
unevenly	44	269	87	65	825
host	94	200	369	368	884
reindex()	57	49	335	381	103
although	26	38	390	596	880
worthy	1	222	92	444	552
dct	71	80	161	722	432
(((	67	147	466	298	588
periodically	23	58	244	342	911
automagic	28	3	488	309	487
tm1	59	235	471	515	571
about	26	234	345	596	434
:-)	19	163	469	204	230
actual	68	71	227	11	909
:-/	26	163	469	448	880
interestingly	63	262	179	533	365
longest	52	211	337	464	345
certainty	66	234	128	596	880
introduces	6	126	153	315	982
.set_index	90	49	443	165	206
hot	64	33	457	535	768
off-topic	1	222	92	645	486
np.where((spot['programa']=='classificadoes	67	255	466	122	588
\s\s+	43	53	47	593	488
.keys()	62	109	400	0	432
addendum	68	71	227	455	909
prevailing	44	204	13	301	524
predictor	64	138	216	187	472
!!	19	163	6	289	184
alphabetically	89	145	317	184	575
afterall	26	43	390	436	880
angles	48	133	167	309	687
parallelize	45	127	369	478	773
downgrading	58	176	50	392	617
744	86	140	491	46	594
preexisting	23	279	337	515	982
!,	19	163	469	204	184
billions	3	212	107	319	633
!.	19	163	6	289	184
tackle	50	116	374	394	849
imagename	54	297	476	564	311
renderer	27	142	222	700	618
female	82	91	331	343	932
sample_id	73	25	400	568	784
gend	55	17	306	14	784
455	86	169	371	607	465
!?	26	116	110	687	880
1986	4	169	318	82	594
1985	54	16	318	82	594
ridge	64	33	7	386	679
legends	59	224	471	788	944
1980	82	140	309	144	594
.3	86	146	219	771	471
self-explanatory	68	262	413	533	744
table_a	18	204	13	761	524
0.11.0	58	176	50	400	141
0.11.1	61	197	493	392	622
1988	4	34	318	82	594
awarded	19	222	92	204	184
x.a	27	57	466	161	588
df1's	73	90	391	305	304
x.b	27	57	466	161	588
gene	73	90	171	708	775
biggest	45	253	264	464	838
1.9.0	58	245	50	400	141
1.9.3	58	176	50	400	141
1.9.2	58	245	403	400	141
np.nanmin	17	147	306	632	181
sawarning	46	262	413	218	34
vanilla	94	144	451	183	850
buy	29	29	271	435	241
f.close()	63	127	264	368	773
bus	64	138	216	187	472
coke	71	221	334	14	995
sequel	46	243	190	218	642
keyerror	79	262	413	533	34
but	26	234	390	596	880
resp	73	204	331	33	108
reminds	19	163	469	204	230
repeated	18	279	337	761	775
remote	94	263	362	329	642
logical-and	11	223	417	439	813
editing	1	260	60	15	756
buf	43	39	235	690	519
bug	61	197	108	288	279
versatile	28	77	150	449	467
partially	6	126	390	360	846
2015-07-30	86	81	242	724	201
wise	52	131	417	417	581
5856	80	129	306	612	778
heatmaps	59	235	471	304	944
dangerous	28	43	230	714	57
hardcoding	26	58	45	208	434
variations	56	122	287	742	812
flip	15	0	246	439	502
standardscaler	57	256	235	505	128
to_timestamp	79	251	315	111	413
...!	26	38	167	436	476
hand	66	279	390	77	427
casts	92	183	169	121	416
minutes	44	99	491	362	692
ec2	94	217	332	84	322
to_series	57	256	56	597	763
day=1	4	34	114	51	548
cpc	73	95	52	564	311
pil	25	231	213	376	291
colum	23	215	185	447	982
internals	48	18	411	323	97
pid	73	17	400	427	108
pie	59	224	471	304	779
levenshtein	33	95	319	247	999
pig	49	200	451	368	773
82	86	169	371	411	465
last_valid_index	57	256	108	505	763
well-defined	78	38	230	315	373
periods	44	99	491	46	789
our	66	234	26	446	937
pip	25	156	328	382	563
rate1	73	17	189	305	784
shooting	26	38	167	436	68
xlrd	0	119	356	550	730
81	86	169	371	607	851
48	86	169	371	411	783
d.csv	49	190	454	6	918
46	86	169	371	607	783
47	86	169	371	607	783
44	86	169	371	607	783
45	86	169	371	411	783
claiming	63	262	413	533	365
detail	1	18	227	714	807
40	3	169	371	411	783
duplications	52	279	337	342	585
ptdump	10	123	78	455	28
variable-length	6	183	169	603	163
84	86	169	371	411	783
tupleize_cols=false	43	74	235	690	853
11.1	61	79	493	392	617
name_map	73	17	391	427	311
dat.date	62	80	334	0	919
appends	23	58	483	342	911
flowcytometrytools	25	156	213	376	291
wordlist	45	247	319	582	287
`dtype('o	92	251	315	111	963
climate_type	89	145	317	184	575
resembles	68	215	185	95	59
errorbar	7	224	180	304	944
variation	33	95	53	469	491
dataframe.interpolate	57	256	235	83	853
diff()	11	136	52	223	105
pd.pivot_table()	57	256	233	58	26
30.526506	71	221	340	102	995
previous	80	211	384	447	939
readline	25	156	213	557	291
df_upper	73	90	445	305	304
0.15	61	158	493	9	622
0.24	86	78	448	669	333
4}	82	221	309	144	936
`"`	91	113	83	784	56
4x	3	100	283	345	969
starting	66	211	390	108	145
0.17	58	176	493	392	622
cpu	94	61	231	630	234
bogus	68	234	60	766	129
4l	51	5	91	130	867
4m	82	221	340	14	267
experimenters	18	173	444	761	108
-msite	25	231	213	214	499
4d	87	141	203	748	973
cookbook	61	18	108	288	632
baked	28	3	488	309	487
8th	60	278	352	51	644
limited	6	133	488	309	927
clean-up	23	215	185	446	585
1.5gb	3	61	231	275	234
two-dimensional	87	141	203	748	973
searchable	1	222	421	15	23
exponentiation	11	131	417	439	999
unorderable	79	65	297	675	910
reboot	63	127	295	542	799
save()	0	185	356	550	519
facilities	48	3	488	430	850
earray	87	141	78	627	557
sleep	66	127	320	643	476
#value	38	129	306	612	778
hate	16	38	167	436	476
if-else	11	0	67	89	695
gridcode	18	204	394	343	108
ecdf	11	95	53	632	231
feeding	6	215	457	446	709
violate	6	126	13	770	927
date-like	92	104	434	303	416
paris	60	29	271	156	594
30min	44	269	491	46	789
pprint	98	185	161	545	92
scikits.statsmodels	25	156	184	187	291
abundance	93	282	70	634	585
344	68	234	128	366	320
jmcnamara	19	273	195	631	184
patched	61	176	50	83	617
]'`	71	25	8	407	272
filesize	3	61	231	275	234
whatsoever	26	116	110	50	880
under	6	234	390	447	129
pride	19	273	195	631	184
localtime	92	183	169	603	416
@	19	273	120	631	756
risk	45	133	389	467	752
drop=true	17	49	72	165	86
rise	29	262	389	162	145
.month	67	36	79	502	614
every	18	211	199	447	129
jack	19	163	120	289	184
contra+1a	51	201	448	173	471
evert	1	260	120	444	756
flattened	87	236	335	748	973
interleaved	52	279	337	23	129
married	82	91	331	144	125
school	18	173	26	713	108
reciprocal	11	74	235	690	166
pytables.py	21	24	367	134	994
skipinitialspace	43	74	478	690	853
metaclass	48	133	488	309	687
look-up	6	126	337	447	129
loess	64	144	216	183	850
breakpoints	68	137	390	108	744
integrated	48	3	488	183	850
retry_count	38	26	134	375	895
phase	93	211	26	671	585
enclosing	91	265	426	491	196
04:00	51	81	242	724	512
unpythonic	28	77	474	616	757
possiblity	44	269	491	46	789
pandas.nat	54	293	340	612	784
enjoy	45	133	167	467	476
x86_64	4	73	492	340	176
bicycle	93	282	199	761	542
009903	18	173	394	713	453
isused	73	204	483	564	129
consistent	6	279	390	714	927
guidelines	48	18	421	323	415
estimates	33	138	216	330	472
direct	28	77	150	638	467
nail	16	122	320	50	476
surrounding	53	235	304	221	172
street	82	45	331	391	454
kivy	98	44	19	76	517
4x4	15	25	203	698	998
hashtable.pyx	21	24	367	479	637
expressions	91	0	56	34	569
consoles	98	200	487	160	377
blue	59	235	304	221	629
strangest	63	82	110	50	365
sub()	57	208	235	58	963
b=1	73	17	384	434	998
hide	53	126	153	221	846
xs()	57	208	235	58	744
n^2	45	247	479	253	287
specification	6	126	390	93	487
selected	23	211	337	447	982
df.new	71	25	334	129	948
supplied	6	265	235	766	853
chrisb	19	273	195	631	117
conduct	64	131	486	671	585
axvline	59	224	471	620	944
sam	82	91	309	144	125
df.drop()	15	49	272	58	26
zach	82	163	120	388	318
hundreds	3	212	368	658	525
studio	25	218	184	160	291
kicker	3	212	264	362	585
tolist()	15	256	56	21	763
represented	6	210	169	603	767
path	49	231	177	557	369
pymodules	21	24	146	49	257
logarithmic	59	94	471	620	274
digits	91	170	358	131	970
property	78	265	426	58	963
cdef	15	258	385	151	667
forum	16	222	421	15	23
auction	18	204	445	305	108
leaves	80	137	153	74	675
changed	56	234	179	559	967
12.04	58	218	157	400	141
month-year	89	236	326	305	349
precip	60	152	331	713	661
launched	94	217	369	39	773
.nanos	71	228	141	298	995
platforms	94	46	451	376	609
changes	6	126	390	437	129
tt	87	258	79	68	667
numpy.searchsorted	57	256	56	505	26
apnt_ymd	18	204	445	305	108
storeid	73	286	391	248	304
df4	90	286	391	568	438
2.0.1	58	245	403	340	176
2.0.0	58	176	50	376	845
strptime	92	104	212	185	745
index=	71	117	443	267	319
julia	45	144	451	183	850
patience	19	273	6	289	184
mysqldump	49	190	275	6	918
months=1	38	159	114	502	588
b','c	73	17	391	427	311
forums	48	122	287	110	313
anyhow	10	123	477	265	540
numeric_only	17	208	138	132	166
swings	29	29	389	162	145
would	52	234	390	661	888
create_engine	46	243	190	218	100
hospital	18	173	394	140	661
tl	48	144	488	529	850
distributing	23	58	264	368	585
m4	54	178	481	404	267
m6	59	94	472	620	435
m1	87	247	481	404	267
m0	59	94	471	620	491
m3	87	247	481	404	267
spike	29	137	389	162	129
t.ix	71	80	334	130	147
clauses	52	43	264	89	880
25th	29	235	304	221	491
annotations	18	152	73	515	368
preserved	89	126	317	437	495
replys	52	279	120	204	320
th	15	287	80	202	498
naive	64	54	488	417	52
np.bool	92	183	169	603	163
pic	53	71	471	221	909
dtype('o	79	293	194	111	910
grief	63	82	110	687	365
phone	18	173	394	718	542
df.applymap	27	57	466	161	153
excellent	19	273	6	289	184
pandas.algos	56	82	110	687	365
textfile	49	190	454	456	918
read.table	49	185	454	430	918
must	6	234	390	766	888
shoot	26	82	110	436	434
md	62	109	400	21	64
join	23	286	224	619	151
mb	3	154	231	275	234
mm	92	64	325	586	915
homepage	48	18	421	323	415
mo	3	190	454	6	918
mn	38	64	145	586	267
mi	10	123	477	265	575
mu	33	138	216	469	896
mw	82	91	84	713	936
mv	82	196	309	144	125
norm	33	138	216	330	491
ms	3	212	460	345	692
mr	19	273	120	289	184
2.3	86	201	448	173	471
climatology	33	152	53	469	368
my	56	260	227	11	909
publishing	94	200	451	39	884
6_6	86	221	31	715	200
pandas.rolling_mean	11	147	27	632	166
fragments	29	211	389	162	578
delim-whitespace	63	262	235	690	853
preserving	89	126	45	437	495
generically	52	43	150	89	292
'])	67	255	79	68	282
max_int	71	228	206	122	526
2.2	58	218	448	75	471
']"	55	196	324	144	62
keep	66	211	390	437	675
attract	1	222	421	15	23
unordered	89	145	13	21	373
guarantee	6	126	230	315	927
enc	67	57	69	565	835
!!!	19	163	6	289	184
keen	16	133	167	50	179
sitting	94	200	447	368	773
vagrant	21	218	146	49	257
rpy2's	61	46	108	430	850
writers	49	46	451	323	557
ent	54	140	384	434	995
env	25	231	184	214	437
2000-01-05	19	163	469	458	756
2000-01-04	86	140	242	431	201
actuality	6	212	337	766	129
0.5.0	58	176	50	392	617
2000-01-03	81	81	242	724	201
2000-01-02	86	81	242	724	512
badly	26	298	110	52	846
multi-indexing	89	236	335	360	159
matplotlib.pyplot	7	224	429	113	270
numpy.int32	79	251	315	111	413
description	68	71	227	366	909
mess	66	298	110	52	846
8]	71	80	334	130	867
jumping	48	133	167	50	179
backslash	91	297	316	497	56
']`	67	255	79	785	282
parallel	45	58	369	368	773
descent	64	33	216	187	472
duplicated()	57	256	246	597	166
fabio's	1	260	92	444	23
gluing	23	58	224	248	151
']]	67	255	79	463	282
iter_csv	43	39	47	109	246
datatype	92	183	169	603	163
`pd.set_option('display	38	68	98	373	263
bootstrap	33	138	216	515	381
summing	23	152	45	208	368
qgis	94	218	213	39	609
complexity	45	247	479	253	287
upside	53	94	471	77	846
ultimate	52	215	185	117	743
decreasing	29	269	389	464	578
input.txt	43	39	47	109	246
file-like	49	10	426	690	519
categoricalindex	61	197	493	83	617
fetchall	11	256	233	505	773
2.7.8_1	21	24	146	49	257
executed	63	127	347	636	799
interpretation	6	126	60	714	55
pyxll	48	46	451	39	850
wound	56	261	195	759	587
over	23	58	385	151	911
3-dimensional	87	141	203	748	973
expects	6	265	203	748	973
redhat	94	218	157	396	291
london	60	54	333	725	760
replicating	23	215	45	208	902
-666	51	201	448	173	892
digest	16	163	167	436	476
beside	66	235	389	117	145
40%	3	212	107	362	969
difference	6	211	283	464	129
cli	98	44	487	160	983
img	68	188	19	76	517
2:00	86	81	242	431	201
succeeds	15	208	272	533	139
expectations	78	38	230	255	807
imo	28	38	474	436	57
comprehend	19	163	469	458	230
16.7	51	201	448	173	284
imp	73	17	171	427	64
edits	1	260	195	15	756
404	63	262	413	323	377
compelling	48	133	488	309	487
a|b	54	178	481	14	267
df2.values	71	80	443	267	432
glanced	26	163	469	458	230
`'time	6	297	476	639	311
pd.__version__	58	245	50	455	92
dateutil.parser.parse	92	104	212	185	745
cls	79	251	315	111	963
pv	82	152	444	713	368
ftse	82	196	309	144	125
dist-packages	21	24	146	241	257
diseases	18	17	331	761	661
suptitle	7	194	116	10	314
df['result	67	255	79	68	282
prevented	80	126	153	347	675
confuse	1	43	230	448	57
accumulating	23	58	244	342	911
overloaded	78	223	412	439	202
to_csv	43	74	235	690	519
avoids	45	43	45	315	57
arraysize	46	243	190	373	100
17th	91	170	83	784	345
df.irow	71	40	215	322	299
get-pip.py	25	156	213	376	291
tooltip	59	235	471	221	944
shadows	11	265	426	491	196
alex	19	273	6	289	184
relativedelta	11	104	228	185	684
fonts	53	231	177	557	787
40k	3	212	107	319	633
chuck	23	58	264	209	822
asia	82	196	309	144	760
explode	45	100	264	342	429
weekends	60	99	352	51	367
edit3	68	234	227	95	909
edit2	1	260	227	11	909
df.resample()	57	256	233	185	231
each	18	287	337	447	775
pd.dataframe({'a	71	117	334	267	968
40x	45	100	283	345	969
consolidate	18	76	185	761	49
signing	26	82	110	692	880
]]])`	71	80	222	722	618
essentials	94	200	451	39	137
co-occurrence	87	141	450	681	325
worded	1	260	60	444	23
15.09	82	196	120	14	465
combining	23	279	45	208	151
pandas.tseries.converter	63	185	161	545	92
t1	73	140	1	60	878
15.05	82	196	120	144	465
saturday	60	99	352	51	99
reused	45	160	78	342	234
msgpack	61	18	78	388	609
driving	16	82	110	643	879
god	19	163	6	289	184
day2	60	34	318	60	878
sand	93	173	331	761	661
day1	93	282	26	60	878
laid	93	215	133	515	541
adjust	53	94	471	620	172
got	56	122	179	559	313
newly	23	211	483	447	982
gov	23	76	13	761	775
trajectories	87	141	70	681	635
associate	18	287	337	515	775
hang	63	127	295	636	476
free	94	222	92	15	23
fred	13	29	271	156	251
groupby.apply	11	75	233	760	231
streamline	45	190	264	671	347
evil	19	82	110	204	230
factorize	57	256	335	58	26
pandas.read_sql	46	243	190	218	100
freq	44	159	228	756	684
wanted	52	234	390	458	967
coloumns	52	76	337	661	775
.cumsum()	17	40	215	500	776
joiner	73	297	306	90	382
speedups	45	100	283	417	906
dataframe.groupby	11	136	52	223	105
suburb	73	204	445	427	125
.hist	71	188	141	700	319
correctness	78	226	230	467	974
days	60	99	352	51	753
priorities	66	234	390	108	476
tolerant	6	38	7	315	166
filter	52	0	246	447	502
columnname	90	286	400	0	64
heck	16	163	469	448	880
10.9	58	218	157	400	141
np.nan	80	129	306	612	778
corrections	16	133	167	50	807
differnt	23	260	185	446	585
titlelevel	73	204	445	698	998
onto	23	211	483	447	29
takeable	78	208	413	270	53
rand	54	258	27	700	667
already	56	234	390	596	967
copy-pastable	37	71	353	115	917
coding	16	133	167	50	179
primary	89	236	13	360	524
rank	18	95	53	223	896
common.py	21	24	367	134	994
restrict	52	126	337	347	927
fantasy	93	16	26	713	913
sumif	11	131	53	469	231
positives	78	226	230	357	974
categorize	18	152	331	343	775
researched	56	122	287	350	313
tbl_ind	71	80	334	667	948
0.08	51	78	448	669	471
toy	37	71	353	115	115
rewritten	56	260	298	444	969
.std()	11	30	370	223	181
a=1	54	17	141	434	995
0.03	86	78	141	669	995
top	53	211	471	77	924
0.01	54	78	141	669	995
indeterminate	15	90	417	454	383
tow	18	152	199	515	990
tot	60	54	333	82	878
0.05	29	78	141	669	995
gridlines	59	94	471	221	274
os.path.isfile	43	39	161	109	246
confirming	19	176	50	687	617
matplotlibs	7	224	180	10	754
too	26	38	474	436	347
tol	62	25	80	0	919
tom	19	273	195	631	184
inconvenient	28	38	474	616	68
insightful	19	163	6	289	184
unmelting	23	131	224	248	151
`df['prediction	62	255	79	68	282
ceiling	11	131	233	597	692
`df['timestamp	67	36	79	785	366
centered	59	94	471	620	274
moderators	1	222	92	15	23
tool	48	46	451	39	609
.sort	17	145	443	165	86
serve	45	3	488	309	687
took	3	212	179	362	967
downsize	3	61	231	275	234
compressor	49	46	451	430	850
repeatable	26	38	474	436	880
incur	45	100	244	342	838
.com	38	262	306	564	955
whereby	52	3	488	89	585
perfectly	19	273	6	289	184
classed	6	210	153	766	349
operands	79	65	297	675	670
frankly	26	38	167	448	880
cummax	11	136	52	223	105
divisible	29	269	419	629	669
dt.dayofweek	57	208	335	58	763
zero	80	129	389	131	778
6gb	3	61	231	275	234
plt.figure()	7	188	116	601	314
reconstructing	23	58	385	151	911
classes	48	265	457	62	450
{{	38	297	316	470	702
prioritize	18	173	199	292	990
18.0	51	201	448	173	471
company's	13	200	26	156	294
10th	60	278	352	174	939
preceeding	80	129	0	201	843
f.index	90	117	443	267	432
df.sum	17	40	215	165	86
bridge	33	270	133	464	999
rad	48	234	488	447	129
fashion	52	58	488	89	581
np.clip	27	117	27	700	526
re-write	66	234	167	436	880
bs4	25	185	213	545	369
np.in1d	17	147	215	632	763
10.8	94	218	157	396	141
ram	94	61	231	84	234
col_index	62	25	272	407	139
final_df	68	90	400	366	304
outperforms	11	256	56	47	969
n=5	17	30	141	434	995
n=2	54	152	445	434	108
n=3	54	17	340	14	998
colspecs	43	39	47	182	488
n=1	54	140	384	434	535
uni	63	262	161	533	842
unaffected	49	126	153	766	365
.27	51	201	219	715	165
.25	86	81	242	724	465
relatively	45	38	474	417	347
tho	26	38	469	448	880
weekofyear	57	159	228	756	684
other_series	17	80	443	0	432
identification	93	279	26	156	542
thoroughly	16	122	287	323	415
viktor	19	273	195	631	184
-	26	234	120	596	129
isolated	56	122	287	687	179
elegance	28	77	150	759	467
oriented	23	236	488	360	557
aggregate()	11	136	52	760	231
vice-versa	6	0	246	439	502
hatch	53	224	180	221	286
count()	11	136	52	223	105
clunky	28	77	436	616	68
unstack	89	236	335	381	103
df.fillna()	57	256	233	447	105
though	26	234	390	596	880
10.9.4	58	245	403	400	141
glob	49	185	177	209	369
denominator	33	95	53	330	180
.2g	38	64	98	470	955
.2f	38	64	98	157	955
bigquery	46	243	275	218	642
bss	44	152	491	469	368
preset	80	211	384	766	606
monkeypatch	11	256	233	89	292
plenty	48	46	368	658	525
dict1	73	17	400	427	304
19:00	86	81	242	431	201
epd	25	156	184	649	289
abe	55	237	324	167	936
"'`	38	237	316	157	955
slides	48	203	278	323	415
treats	6	210	153	74	495
binname	54	140	384	14	783
file_2.csv	54	90	384	698	998
partition	64	33	133	209	669
flow	93	282	486	634	585
mytup	68	262	179	14	744
reputation	1	222	92	433	403
enterprise	94	73	157	84	884
merged2	71	80	470	722	948
period_id	55	30	370	650	776
pd.options.display.float_format	38	64	98	470	955
prepend	91	211	83	347	345
dups	10	123	477	265	557
`{'a	71	221	98	267	968
reorganize	23	215	486	446	585
labels	59	94	471	620	274
lexsort_depth	89	145	317	360	575
df.to_csv	43	39	47	109	488
dupe	1	222	92	444	23
colors	59	235	304	221	629
solutions	48	122	287	62	313
that'll	66	43	469	436	888
earth	53	235	128	220	392
analogue	6	265	488	482	973
idxmax	57	136	52	223	105
availability	53	3	209	117	578
pkl	49	190	454	627	918
2-level	89	236	335	360	751
spite	6	126	153	596	166
situations	78	38	230	62	687
09:00	86	81	242	724	512
pandas=	58	176	50	400	617
09:03	86	221	340	102	465
spits	63	137	179	74	842
savefig	7	224	116	546	314
540	86	78	438	102	465
printouts	53	71	227	11	807
non-dictionary	15	208	483	759	982
zipping	23	58	45	21	911
retweet_count	54	293	473	356	784
plugins	94	231	213	557	291
oct	4	34	312	82	548
.date	67	36	79	502	614
borrowed	1	260	195	444	756
unhashable	79	65	297	675	293
label=	7	188	472	10	314
commodity	82	29	26	713	294
watch	63	127	295	108	799
5-minute	44	269	491	46	789
")]`	55	237	324	650	62
congruent	54	235	304	357	629
non-integer	6	129	0	779	927
report	61	18	108	29	279
reconstruct	23	236	185	446	982
permute	15	0	246	151	502
reinstall	25	156	328	382	563
ipython.display	98	44	161	545	92
countries	18	173	331	343	661
np.float64	67	183	305	667	526
useoffset=false	53	234	390	766	172
twice	66	234	390	596	911
multiindex.from_product()	57	236	335	21	103
shots	3	61	295	630	234
boring	66	202	83	108	68
occurance	29	95	73	292	990
movement	93	282	199	634	990
automatic	6	126	153	315	268
farther	66	100	44	108	476
large-scale	45	100	264	117	347
presuming	3	234	390	596	129
pandas-0.10.0-py2.6-linux-x86_	21	24	367	134	257
habit	78	43	230	448	57
str.join	57	256	56	597	26
.astype()	57	256	233	597	26
behzad.nouri's	1	260	195	444	117
choice_txt	55	17	370	650	776
beg	29	140	246	305	497
detection	6	126	153	93	927
time-weighted	44	269	491	469	789
mock-up	37	71	227	115	909
invaliddocument	79	65	315	487	34
corrupt	49	170	454	52	728
hash	87	76	13	770	524
`'no	80	129	476	564	311
limiting	45	100	389	362	838
pd.read_csv(r'c	43	162	47	109	246
`spot['tipo	67	255	79	122	282
mut	54	279	133	515	491
index.c	21	24	367	479	637
interactor	54	90	384	454	998
capacity	94	61	231	368	234
tensor	87	141	450	681	325
by_country	71	25	334	0	64
zoneinfo	60	99	352	540	530
iirc	61	197	493	103	617
urllib	49	185	275	557	807
type()	11	265	426	430	963
sort_index()	57	145	317	124	853
finger	16	163	167	15	476
hopefully	16	38	167	436	476
366	4	34	352	82	594
mul	57	131	417	439	209
365	60	99	352	48	753
approach	28	77	436	759	117
363	86	221	371	102	783
+0000	51	85	123	22	619
361	54	221	340	102	267
reiterate	52	260	283	759	838
df_1	73	286	391	568	304
visualization	59	224	471	304	458
newb	16	163	167	511	831
confusion	26	82	60	714	55
between_time()	57	256	233	58	26
weak	28	38	167	50	68
however	6	234	390	596	129
boss	16	133	167	448	476
fugly	28	77	436	438	880
delim_whitespace	43	74	235	690	853
consists	93	215	185	446	431
11111	82	91	309	144	936
s.ix	71	25	334	407	948
news	19	163	469	204	230
dish_relative_perf	67	228	206	122	916
y_test	87	258	27	667	667
improve	45	116	283	467	838
adapting	56	260	195	11	587
protect	53	200	454	557	377
embarked	82	91	309	427	311
upcasted	92	183	169	603	163
irregular	44	269	87	65	789
undelete	1	222	92	146	23
fault	63	82	110	687	365
extracts	46	137	275	6	709
vibration	55	91	309	427	62
facet	59	224	28	304	944
players	18	16	84	343	913
merging	23	286	224	248	151
games	18	16	84	713	913
bet	45	100	283	417	838
27th	60	34	352	51	753
variance	33	95	53	469	896
n_features	87	258	7	700	667
expense	45	100	283	467	838
drawbacks	45	279	488	62	687
exhibit	6	234	128	89	345
standings	23	16	171	713	265
appid	86	140	318	518	594
kwh	73	90	189	568	304
dt64	92	104	434	502	619
inbetween	91	170	83	784	345
vals	62	109	400	778	64
tracts	93	152	331	515	491
fillna()	57	129	0	201	410
datetime64converter	57	265	426	470	618
trust	66	38	167	436	807
power-law	29	138	7	40	578
panel	87	141	152	748	973
event_type	93	76	13	761	542
bingo	19	163	6	289	184
array_split	15	256	27	632	474
2.7.10	58	245	403	340	141
1.2	71	78	448	669	333
mydata.csv	43	39	47	109	246
subject_id	92	293	473	356	300
simplification	1	260	89	11	115
numerictype	92	122	287	603	313
deprecated	61	176	493	83	617
been	56	122	287	350	313
quickly	45	58	264	89	347
confident	16	38	167	50	434
beer	82	152	10	343	727
spread	29	140	491	292	157
pyexcelerate	61	82	230	83	617
julian	60	99	352	51	753
expected	68	71	227	366	744
c2091	5	85	438	526	877
py2	10	123	78	155	557
containers	87	141	203	62	2
i+1	62	25	80	202	948
%prun	98	71	283	345	969
drugs	18	173	331	761	661
1.8	58	176	50	75	845
xxx	38	24	316	157	318
search	52	234	319	110	569
uncommon	26	38	474	714	880
values_block_0	38	293	340	14	161
ctrl+k	98	44	19	670	554
__raw_data	78	265	426	513	974
catch	63	112	469	642	230
dataframe.combine_first	57	256	233	597	292
behzad	19	273	195	289	184
tracebacks	68	71	227	115	807
combos	18	91	331	761	661
get_schema	46	256	233	597	26
chunker	62	109	161	209	162
discrete	93	269	419	629	669
n	54	247	481	202	287
lesser	28	3	150	309	487
dept	82	91	394	198	108
plt.ion()	98	44	487	337	983
penultimate	68	278	454	6	400
stopping	63	127	295	636	799
cracked	56	122	287	108	313
chunked	45	100	18	209	822
precede	91	170	83	347	345
procedure	52	58	486	671	911
pandas.__version__	58	176	50	400	92
"`	91	297	66	80	830
-av	10	123	78	455	28
)]=	71	80	334	722	948
expenses	53	270	133	515	542
experts	50	276	374	412	849
experience	48	133	167	50	179
)]'	71	228	334	130	835
misspoke	26	260	60	458	756
)])	71	117	334	267	968
insensitive	91	297	319	34	569
pics	68	71	227	366	909
interacts	93	46	451	368	850
from_csv	57	74	235	690	519
containing	23	76	185	447	431
thusly	68	208	185	95	59
bigfloat	26	234	213	596	880
prior	56	211	390	447	129
art	86	221	371	144	936
recursion	63	127	143	487	34
algorithmically	52	116	264	417	585
quote_none	71	221	340	102	772
df.mean	17	30	370	165	86
ccny	22	34	318	117	958
intersecting	23	279	133	464	985
2082-05-03	51	81	123	724	512
df.std()	71	147	215	322	299
complex	28	38	474	89	487
inventory	13	29	271	156	294
listi	62	287	483	698	498
"]	55	237	324	650	356
several	56	279	368	658	525
satellite	93	282	199	23	990
"'	79	251	315	111	413
peaks	33	138	70	136	578
""	55	237	316	157	382
numerical	6	183	169	603	768
")	55	237	324	650	62
)]`	71	228	206	122	916
spanned	60	140	491	766	129
characters	91	113	83	784	56
`df['value	67	255	79	785	282
workings	78	133	230	657	55
propagated	63	126	153	766	365
caps	59	235	304	221	172
formated	49	210	275	6	349
cycle	53	235	199	108	734
mentioning	1	260	60	444	756
shortly	61	197	379	392	279
java	94	46	451	39	609
pyzo	58	176	50	392	617
charlie	21	5	146	388	318
ind2	71	25	334	722	948
uploading	46	200	275	744	377
boxes	59	235	304	221	629
\ufeff	38	32	455	424	625
savings	44	54	389	540	530
greatest	29	95	73	698	998
x.price	27	57	466	565	588
fungicide	93	152	199	515	990
alabama	82	196	309	144	936
quotient	54	140	53	698	998
tldr	1	260	227	11	909
seasonal	60	252	491	46	753
proposed	1	260	195	759	117
zipline	13	29	271	156	294
able	52	234	390	350	888
laptop	94	217	231	84	322
memoized	11	265	264	760	292
grades	93	76	185	343	542
split()	91	256	56	34	569
matplotlib.axes.axessubplot	79	265	426	58	963
followed	56	211	440	766	675
np.isnan	71	40	306	322	299
fig.autofmt_xdate()	7	224	116	10	314
functionally	1	260	440	444	756
enlighten	50	276	5	394	849
df.to_hdf	10	123	78	155	891
prefix	91	297	316	784	56
parse_cols	43	74	235	182	488
5x	45	100	283	345	969
vertica	46	243	382	588	642
explanatory	64	138	422	187	768
5s	44	159	228	756	692
5m	3	212	107	319	542
boxplot()	7	224	180	10	314
group_by	89	136	52	223	105
pdist	87	141	450	681	999
5k	3	212	107	319	633
shx2	19	163	469	458	230
5d	87	221	340	102	987
reusable	48	133	488	309	687
interprets	91	210	153	784	349
elt	27	57	466	251	153
gave	68	262	179	74	744
lower-level	28	3	488	309	687
casting	92	183	169	603	518
.kline	19	163	469	458	230
bands	59	235	471	515	491
breaks	56	137	179	74	365
file.sav	37	71	227	11	909
])]`	71	80	334	98	948
descending	89	145	317	184	575
shipmentid	18	287	384	108	145
judge	16	173	394	713	913
59	86	169	371	607	783
appendable	10	123	78	155	557
64kb	10	123	78	627	557
advanced	48	133	241	309	538
match()	11	144	233	183	231
melting	23	236	45	208	575
appearing	56	211	337	158	775
broadcasted	15	131	417	439	581
renames	23	236	483	437	982
55	86	169	371	607	783
contradict	1	260	60	366	320
specifiy	10	123	477	265	853
56	86	169	371	607	783
51	86	169	371	607	783
50	3	212	371	411	783
sub-level	73	204	445	698	775
52	86	169	371	607	783
specific	52	234	390	447	606
informative	1	38	230	714	807
non-table	10	123	78	155	557
`df['two	67	255	306	785	238
tkost	18	152	331	698	368
arbitrary	6	3	488	89	487
hung	26	261	110	52	138
dayfirst=true	43	74	212	182	136
matchup	73	90	400	568	304
vstack	87	258	203	748	973
.nouri	19	273	195	631	184
n*log	45	247	479	253	287
envision	52	116	128	89	320
how='sum	17	159	370	756	776
broadcastable	87	65	203	748	973
fill_between()	59	224	180	304	944
successfully	56	122	454	350	918
excerpt	68	71	227	11	909
zoom	59	94	471	221	172
9999	86	129	371	411	778
mileage	45	38	474	436	807
meters	44	140	491	46	822
53	86	72	371	607	783
lf	55	237	324	144	62
df['speed	67	255	79	68	282
datafiles	56	215	275	6	918
indirect	78	145	488	315	373
guess	26	234	390	596	880
x.ix	71	80	334	722	683
tutorial	48	203	278	323	415
cnt	73	204	445	564	108
ico	51	85	123	22	43
student's	18	173	394	718	453
.xs	17	208	272	270	538
seaborn	59	224	180	304	944
json_data	38	185	161	470	64
csvstat	63	127	295	636	347
dataframes	23	279	224	248	151
mystified	26	43	345	436	434
cnx	46	243	190	218	100
totals	18	152	444	223	715
str.strip	91	42	56	90	64
everything	66	234	390	52	709
sep=	43	39	478	593	488
420	93	279	133	117	129
operationalerror	46	262	164	487	34
ict	90	117	27	267	432
core	21	24	367	134	994
buildin	57	256	233	597	26
bday()	44	99	228	756	684
hsd	64	138	216	187	472
deleted	1	260	92	444	756
aws	94	217	332	396	322
corn	60	34	318	82	992
archived	49	190	454	6	918
disappeared	56	82	110	687	365
5%	29	95	389	435	546
newcomer	16	222	167	266	831
corr	11	25	27	632	114
0:5	71	25	334	722	948
df.query	67	147	206	122	916
security	75	200	102	429	884
deletes	80	50	483	74	675
chapter	48	203	278	323	415
limitation	26	82	110	687	365
run-time	45	183	169	93	557
df.eval	26	43	150	436	57
eat	45	100	244	582	234
py27	21	231	146	214	437
pandas.melt()	57	236	335	89	292
`'first	73	297	476	564	311
choke	6	100	244	315	365
dataframe1	73	286	400	427	304
p.s.	16	116	167	204	756
x.diff()	27	57	466	161	588
misleading	26	38	485	714	543
ensure	6	126	390	766	927
algo	45	100	283	467	838
dataframe.sample	57	256	27	505	26
efforts	37	71	154	115	807
runtime	63	127	295	636	799
mmm	60	64	326	586	349
droplevel	57	208	335	381	103
primitive	10	265	169	430	557
aha	19	163	469	458	230
respondent	18	173	394	343	108
presence	6	183	169	603	775
[[	71	25	334	722	948
puzzle	16	122	167	204	476
obtaining	52	215	185	446	585
readingtime	91	185	83	347	349
lb	82	91	340	144	70
accommodate	6	126	181	766	172
inclusive	60	208	352	51	461
annotating	53	133	471	304	944
df.sort()	17	49	335	165	920
rounds	29	137	358	131	970
00:45	86	81	242	724	465
existed	19	163	469	559	967
rely	78	43	488	315	927
git	61	156	184	338	531
gis	48	133	451	50	831
copy=true	57	68	235	132	195
periodic	44	269	491	46	789
.multiply	71	147	27	122	948
.last()	17	30	370	165	776
transform	11	136	52	223	105
columns=['a	71	5	91	267	968
lags	33	138	216	272	472
gig	3	61	231	275	234
stuck	56	122	167	50	179
pipe	91	170	255	784	360
gil	61	43	108	83	617
purposely	56	234	179	766	967
indexers	78	226	272	270	139
.__init__	38	5	134	157	618
head	16	122	320	643	879
medium	3	212	26	117	157
amateur	16	222	167	511	831
attempted	56	122	287	350	313
differences	52	279	53	464	999
removes	80	211	153	347	675
_ilocindexer	79	251	315	111	963
+str	27	57	466	565	904
subclassing	78	265	411	791	450
heat	59	270	471	304	944
illuminating	1	38	474	714	23
hear	16	222	92	15	668
heap	3	61	231	275	234
triplets	87	270	133	681	999
sustained	29	99	389	435	990
#url	61	18	108	505	279
removed	56	211	153	766	675
differenced	54	140	53	46	129
r-squared	33	138	216	330	750
np.matrix	71	258	27	667	526
r's	11	144	233	183	695
flavour	46	243	190	218	642
inds	62	25	334	0	596
versions	58	176	50	376	617
supp	80	129	306	612	522
[:	71	80	334	722	948
[8	71	25	334	722	948
df.mul	17	30	27	700	667
0:0	71	25	334	502	948
0-100	82	140	199	14	125
simplifying	56	261	298	50	179
per_df	71	25	334	407	948
submitting	61	18	108	288	279
replace=false	17	117	27	405	319
hassle	45	100	396	342	57
[(	71	228	206	122	916
df.to_excel	0	119	356	580	730
90%	29	279	389	117	255
trim	66	211	128	347	345
df.transpose()	15	147	27	58	744
matrix_of_coupons_and_facevalues	71	80	334	722	948
ln	82	17	10	388	318
escape	91	297	316	497	56
0:3	71	25	334	722	948
uri	91	297	454	784	377
sometime	16	99	44	108	145
.filter()	11	136	52	223	105
col11	54	17	442	427	311
policy	64	46	451	386	377
0.67	54	221	340	102	995
skipna=false	17	147	141	122	995
plt.legend	7	188	472	10	435
trip	44	282	199	303	214
constructed	68	215	185	446	982
ni	55	237	120	144	62
nm	54	140	141	700	995
no	6	234	390	703	129
na	80	129	0	201	778
whereas	6	234	390	766	129
tip	19	273	6	289	184
df.copy()	15	49	138	590	974
ng	71	25	10	388	318
til	66	211	390	108	476
ny	54	140	331	14	784
setting	6	126	45	208	846
papers	48	173	421	323	415
np	15	258	203	545	526
tie	29	95	53	464	990
nr	73	17	400	427	64
df2's	73	90	445	305	304
nt	21	231	213	388	67
.dropna()	17	40	215	165	86
rid	80	211	153	347	675
nw	82	196	120	391	125
node	93	76	133	562	392
picture	53	235	19	221	909
reconsider	66	116	128	596	57
all_treatments	90	109	443	0	162
preceding	18	211	384	784	775
databases	46	243	190	218	642
uniformly	44	269	491	23	669
miscellaneous	48	46	421	323	415
uint8	87	258	27	667	526
webserver	94	200	332	557	369
=false	67	42	251	34	24
timeseries	44	269	491	46	789
sql	46	243	190	218	642
ax.scatter	7	188	472	10	435
idx1	55	17	400	578	125
stand-alone	37	71	227	115	909
hashing	45	133	230	467	55
_id	73	204	445	453	108
longer	6	234	390	596	129
bullet	26	43	469	436	57
1800	3	212	371	362	633
629.5316666666666	51	66	238	471	658
dataframe.to_sql	46	243	190	218	100
3.2.0	58	218	403	400	141
abundanceframe	23	215	185	446	585
exhausts	63	127	264	368	911
n0	71	117	340	267	667
serious	16	133	167	50	476
n2	54	247	481	164	267
n3	54	247	21	164	267
stacks	93	152	368	515	525
:))	19	163	469	204	230
neighbors	33	95	133	292	491
roi	13	29	271	156	294
df.to_sql	46	243	190	147	100
subtotals	23	152	444	360	715
omits	80	211	153	454	675
rob	19	163	469	458	230
roc	33	138	85	378	896
alternatives	48	116	287	62	687
focus	53	298	486	117	846
datetime.today()	67	36	228	502	614
leads	6	82	401	74	365
graphing	59	235	471	304	944
comments	1	260	195	444	756
edchum	19	273	195	631	184
0.11rc1	61	197	493	392	622
.05	71	221	141	298	995
ror	82	196	10	144	125
rot	7	224	116	10	332
.00	86	81	242	724	760
row	18	287	384	698	998
1949	54	140	141	14	995
clarification	1	260	195	15	756
1940	60	34	318	82	170
1946	54	90	400	698	998
all()	57	0	246	597	645
cloud9	25	156	213	376	291
1945	3	212	107	411	633
environment	25	218	157	160	291
charge	26	234	128	661	349
barplots	59	235	471	515	944
ajean	19	163	469	458	230
reassemble	23	58	264	151	585
allocate	45	61	244	342	979
psql	46	243	190	218	642
percentileofscore	27	30	27	632	331
broadly	1	260	60	714	57
resample	44	269	228	756	684
.0f	38	64	98	157	955
scatter_matrix	7	224	180	304	944
plt.setp	7	188	472	10	435
unfamiliar	48	133	167	50	27
sloppy	28	77	436	616	68
17:00	60	81	242	431	201
cust_email	73	204	445	305	108
cook	56	173	394	323	415
.head	17	30	72	776	86
n25846	5	66	438	471	658
python's	48	27	488	430	850
cool	19	163	6	204	184
oftentimes	23	190	264	342	585
customer's	18	287	445	343	108
impressive	45	100	283	421	969
pandas.core.index.index	79	251	315	791	963
set_index	57	49	335	381	103
7:9	71	25	334	722	948
posts	48	222	421	323	415
standards	48	133	230	62	179
.to_sql	57	74	235	690	100
_itemid	73	204	445	698	304
science	48	133	26	329	831
quick	19	163	6	204	184
word1	73	297	400	427	64
accumulation	66	234	390	596	807
my_function	27	178	222	700	618
tryed	68	262	409	533	744
numpy.fromstring	45	100	283	430	906
b.index	90	147	443	632	432
illustrating	37	71	353	115	917
how='outer	90	238	214	245	206
trend	33	138	216	330	578
x.strftime	27	57	145	565	550
np.sign	27	147	141	122	995
obsolete	1	260	469	444	756
cyber	60	99	114	51	548
long-winded	28	38	474	616	57
pmf	33	152	53	515	491
group1	73	17	197	427	108
url's	49	190	454	6	918
`df['bar	67	255	79	68	282
reinstalling	25	156	328	382	563
df.shape	71	25	80	722	948
fear	45	100	264	342	347
substitute	80	129	128	347	778
spectral	59	235	257	515	491
\pandas\	21	24	121	163	666
stands	6	234	390	596	129
81.00	51	201	123	173	284
64bit	58	73	157	400	141
formatting	53	44	19	76	558
value_counts()	57	136	52	223	105
pleased	19	163	167	204	230
explictly	66	74	235	470	853
527	59	239	471	620	491
goes	56	137	295	108	145
testing.py	21	24	367	163	666
hairy	28	38	474	436	68
concat()	57	256	233	381	26
kama	33	178	53	469	896
tabulation	64	33	457	89	292
reshapes	87	236	335	748	973
plz	1	241	60	15	756
water	31	282	70	634	990
evident	6	234	337	766	129
q2	82	196	309	144	125
to_excel()	0	119	356	550	519
groups	18	152	337	209	775
[	71	25	334	722	948
groupy	11	136	52	223	105
supplying	57	74	235	633	853
hashable	79	251	169	21	428
reformatting	23	236	45	208	902
male	82	91	331	343	932
delimited	91	170	112	784	56
shove	23	58	264	151	709
discount	29	173	389	661	129
dict.keys()	15	25	272	632	166
jobs	93	127	369	368	773
rethink	1	38	60	436	55
rolling_corr()	11	136	233	223	231
timings	68	100	283	345	969
lr	64	33	457	386	553
rolling_corr	11	136	52	223	410
delimiter	91	53	112	784	56
rails	82	200	10	39	884
1.1gb	3	212	107	275	633
short-circuiting	78	43	230	315	57
weird	26	82	110	687	365
.describe()	17	30	370	223	776
`df['b	67	255	79	785	51
`df['c	67	255	79	785	51
web.datareader	13	237	161	545	64
.to_dict()	62	147	72	560	919
pauldufosse	21	24	146	49	556
output2	68	262	128	366	744
problematic	6	82	153	687	365
compare	52	279	337	464	606
modifying	23	226	45	513	974
1st	60	278	384	51	939
.gz	49	113	454	557	918
case2	29	140	384	292	129
ironically	57	163	469	315	967
stats	33	152	486	469	381
handled	6	210	153	687	365
companyname	73	204	409	305	400
10:15	86	81	242	82	594
pred	55	178	400	14	267
scan	52	58	319	151	911
10:10	86	81	242	724	465
.to_json()	71	25	161	689	919
---------------	51	66	238	471	658
msn	82	240	394	447	707
handles	6	126	153	74	709
handler	63	127	369	491	773
msk	15	25	272	407	139
memory	45	61	244	275	234
msg	63	262	444	364	771
mse	33	138	216	330	472
msd	45	100	283	467	838
msc	4	73	492	340	978
prep	23	58	486	671	179
today	60	99	44	643	145
reorganizing	52	215	264	446	585
plug	66	137	298	89	709
callable	79	251	315	111	413
parser_f	21	24	367	445	666
sessions	93	173	394	634	773
clicking	98	222	19	225	275
suggestions	50	276	374	412	93
cased	6	126	153	315	373
.diff	57	256	52	505	763
chocolate	18	91	445	698	108
equivalents	11	144	488	183	695
census	93	270	26	713	542
sentences	91	76	319	548	542
linspace	11	234	233	596	231
vmax	7	188	27	132	435
misreading	26	260	60	448	434
cases	6	279	488	62	687
2.4.0	58	245	403	340	141
kurtosis	33	138	53	476	896
insights	50	276	374	412	93
tabular	53	190	19	76	517
index()	57	265	426	58	963
memory-mapped	49	190	264	627	557
collision	89	286	13	290	524
local	94	54	177	388	318
timepoints	54	140	133	23	229
modified	68	260	483	444	982
sub-tables	52	279	337	248	585
row's	54	287	384	698	998
read.csv	49	185	454	6	519
dcast	11	144	233	183	850
lineterminator=	43	39	47	157	955
.txt	43	39	47	109	246
modifies	15	109	138	513	974
pickle	49	190	78	627	557
unconditional	63	127	295	108	145
150000	3	212	107	319	633
dodge	59	235	304	221	435
timegrouper	44	136	228	756	684
stream	49	190	275	79	773
garbled	62	109	483	447	982
df.to_json()	49	185	161	470	519
overlay	59	235	471	685	944
quantopian	53	44	19	76	517
dataframe2	73	90	400	454	304
col_2	73	90	400	427	998
performed	56	131	486	117	581
11:00	86	81	242	733	512
500000	3	212	107	319	633
counting	18	152	73	718	775
conversely	6	131	264	89	292
requirements	1	260	227	763	807
undocumented	61	18	108	83	279
event_id	73	204	445	305	108
eloquent	28	77	150	438	467
np.object	79	251	315	111	963
ravel()	87	258	27	748	973
1	54	221	340	14	995
col_4	54	90	400	698	998
fourth	80	278	384	698	939
differents	52	279	287	14	313
plus	66	234	390	447	129
speaks	28	38	488	309	487
category1	55	237	324	650	62
\w+	38	42	251	90	24
unbelievable	19	163	6	289	731
category2	55	237	324	650	62
crashes	63	61	295	636	799
information	66	234	486	447	615
83	86	169	371	138	783
colname	62	25	248	407	948
clone	25	156	184	338	531
json.loads()	49	185	264	430	902
1400	86	140	371	82	594
crashed	94	217	295	636	322
xtick	59	94	471	620	274
4th	29	278	384	14	939
representations	92	183	169	507	416
vectorizable	28	3	488	417	581
qualityissue	73	25	409	14	784
branches	66	43	246	439	691
liquid	13	70	271	156	294
121	86	169	371	607	783
stupidly	26	260	298	559	967
sept	60	34	352	51	753
df['store	67	255	79	68	282
np.searchsorted	15	256	419	632	84
series.interpolate	80	129	0	201	410
a-priori	10	183	169	603	163
devs	61	18	459	288	279
inform	78	226	230	357	974
subsequences	93	140	133	464	775
axis=	57	208	272	632	209
representation	92	183	169	603	416
\n\n	38	297	316	157	527
tbl	15	25	400	0	784
imagining	28	77	150	438	467
exclusive	6	279	337	464	373
joins	89	286	224	454	151
food	82	91	331	144	125
np.random.rand	71	117	141	267	319
iteritems	57	256	56	410	26
mainly	48	133	488	309	836
call_time	73	204	445	305	311
ymmv	45	100	283	467	838
128	3	32	455	424	625
mktime	92	104	212	185	745
cusips	73	109	400	0	64
blocked	48	200	451	39	377
applys	11	256	233	760	231
rebalancing	29	140	384	162	145
he's	48	55	440	466	587
c()	11	144	457	183	695
skip_footer	43	74	235	690	853
suboptimal	28	38	474	417	57
130	86	169	371	411	783
a12	73	286	400	245	304
wasting	16	133	167	15	55
offers	53	3	488	309	487
downsampled	44	269	491	46	789
endless	63	127	385	108	911
python.org	25	156	184	649	289
ahh	19	163	469	458	230
parallelizable	45	3	451	417	687
happened	56	82	179	559	145
87	86	169	371	411	783
employment	93	152	326	713	990
pd.melt	57	256	335	381	103
postgres	46	243	190	218	642
dataframe.loc	78	208	272	270	139
df2['a	67	255	79	68	282
df2['b	67	255	79	68	282
df2['c	67	255	79	68	282
processes	94	127	369	368	773
underneath	66	211	92	225	132
maxing	63	61	295	636	234
qualified	26	234	60	661	967
d.dataframe	90	117	443	267	69
feature	64	33	7	386	279
permissions	25	231	177	557	369
_configtest.c	5	85	438	526	877
term	6	234	319	596	129
equality	6	131	268	439	310
name	73	204	483	491	615
rmse	11	136	178	760	231
corners	53	235	133	221	172
y-axis	59	94	471	620	274
np.nanmean	57	256	27	632	26
possibilities	48	122	287	62	415
realistic	36	38	474	714	807
check-in	29	140	199	292	990
css	98	44	19	76	517
realise	19	163	469	458	967
85	86	169	371	411	783
pd.dataframe.apply	11	131	233	760	231
individually	23	58	385	151	911
overcomplicated	28	77	436	438	467
weighted	33	95	53	469	896
populated	23	215	185	766	982
output.csv	43	39	47	109	246
populates	80	211	483	564	982
non-object	92	183	169	603	163
catching	19	163	469	642	230
'])`	67	255	79	68	282
approximated	33	270	133	292	999
123456	82	196	309	144	125
adequately	6	234	153	766	606
grouped-by	23	236	337	447	575
plans	48	46	451	62	523
'"'	43	39	478	593	957
100m	3	212	107	319	542
100k	3	212	107	319	633
factors	93	279	26	62	585
profit	18	152	199	435	990
display.max_columns	53	68	201	373	263
'])]	67	255	79	68	282
pd.to_timedelta	67	36	212	502	882
factory	78	265	152	791	450
'")	38	262	315	111	527
pyhton	16	218	157	50	831
col_b	73	17	400	427	311
extrapolate	80	269	0	563	410
collate	23	58	264	151	585
hacked	28	77	298	616	587
100x	3	100	283	420	969
100s	3	212	107	319	633
importances	64	33	7	386	679
she	19	273	440	466	756
subtracts	80	137	384	306	998
attended	18	152	73	718	775
theory	45	38	230	315	687
ys-l	19	273	195	631	184
subframe	15	287	445	151	498
1293926400000	51	85	123	22	464
treatments	82	152	331	713	661
df.replace	17	42	306	90	382
meshgrid	87	258	203	681	667
dhagreen0	55	112	306	357	502
']))	67	57	466	502	588
software	94	200	437	39	884
raster	53	190	275	76	517
exceptional	78	38	488	315	166
100+	3	212	107	319	633
\d{4}	38	42	251	90	24
yup	19	163	469	458	230
10mb	3	61	231	275	234
impose	89	126	390	309	927
motion	93	282	70	117	635
turn	23	137	264	89	709
easy_install	25	156	328	382	563
preprocessing	64	33	457	386	553
yum	25	156	184	699	291
swing	60	211	295	108	145
n_rows	71	117	27	700	667
qn	1	260	227	444	756
1003	86	34	318	82	594
1001	86	169	371	607	783
1000	3	212	107	319	633
origin	53	270	133	292	414
spotted	1	260	195	444	359
simplifies	78	265	426	791	450
fetched	13	215	275	6	174
dataframe.from_dict()	57	256	235	597	26
revenue	18	152	326	713	661
read_fwf()	49	74	112	690	519
symbolic	53	234	213	557	377
requirement	52	234	390	763	756
awfully	28	38	474	616	347
clumsy	28	77	436	616	467
insist	66	43	390	347	320
multiplying	87	141	45	208	217
simplified	37	71	227	11	115
array	87	141	203	748	973
continent	59	152	28	515	108
george	82	196	309	167	125
engineer	16	116	128	596	807
iam	53	215	185	515	585
surveys	18	173	394	713	453
necessarily	6	234	390	315	373
copy-on-write	78	265	230	513	974
ser3	73	140	384	766	998
district	93	204	445	761	108
ser1	80	129	0	620	843
trillion	18	212	199	761	633
europe	82	54	333	725	760
`df.set_index('date	67	36	79	68	86
returns	15	137	179	74	744
daypricesdf.iloc	71	80	334	722	948
bounty	19	222	92	433	403
9.7499	51	66	238	471	658
iat	78	226	272	270	139
white	91	170	83	784	56
gives	68	137	179	74	744
hue	7	224	180	10	314
reset	89	236	335	437	103
specifc	15	25	79	68	282
releases	61	197	493	392	617
million+	3	212	107	319	633
season	18	16	326	713	988
huh	19	163	469	448	230
pyqt4	53	46	213	376	291
released	61	197	493	392	622
alas	26	82	110	448	880
toarray()	64	33	7	386	553
quirky	19	163	436	204	184
freeze	63	217	213	636	291
specify	6	126	235	89	853
population	33	95	53	469	896
wide	53	298	183	616	68
df_train_fly	90	286	214	245	311
unfortunately	26	234	390	596	880
require	6	3	488	89	927
modelled	93	282	26	634	990
deduplicate	23	58	264	248	585
h-index	18	173	394	13	453
that'd	66	38	474	436	888
r	48	144	488	183	850
posix	92	104	434	303	416
multithreaded	87	46	450	681	325
duplicates	89	236	337	454	675
aesthetic	53	298	201	200	487
outcome	68	215	227	366	744
exacly	19	163	469	458	230
transport	93	282	199	292	990
df.idxmax()	15	25	272	407	139
and	66	234	390	447	129
subprocesses	45	127	369	368	773
file_1.csv	54	90	400	698	998
00:22	86	81	242	431	201
generality	52	43	488	309	57
indexer	78	226	272	270	139
pro	94	217	157	84	322
sq_area	51	221	219	715	200
measure	93	95	389	292	578
generalization	84	260	150	200	55
runtimes	93	279	26	117	999
medical	93	282	26	761	542
pandas.merge()	11	131	224	439	151
rent	93	200	26	117	884
prs	61	18	108	288	279
ans	19	273	286	631	756
v2	73	17	444	427	784
02:00	86	81	242	724	512
sells	18	152	199	713	990
any	52	116	128	596	849
``]	61	18	108	505	279
conversion	92	183	169	603	416
```	15	234	390	61	320
rolling_*	11	136	233	469	231
exploratory	94	200	486	671	179
bars.ix	15	25	272	58	166
klib	21	24	146	49	257
ideas	50	276	374	412	849
ideal	28	38	474	616	57
animation	59	224	180	304	944
xxxxxx	38	237	306	144	62
epsilon	87	258	203	632	999
resembling	37	71	227	115	909
strengths	48	46	488	62	687
sure	26	234	345	596	434
multiple	52	279	368	447	985
cursor.description	71	25	334	407	948
a','b','c	73	17	391	427	311
hit	56	127	295	108	476
pd.cut	57	136	419	629	669
clearer	28	260	60	714	68
falls	44	137	491	162	145
visitors	18	173	394	713	990
donation	18	173	394	718	453
pleasure	1	260	195	444	756
multiply	87	131	417	439	217
ax.plot	7	188	472	10	314
cleared	63	127	295	613	377
latex	98	44	19	76	517
neuro	18	152	331	761	661
time-based	44	269	52	223	789
discarding	23	211	45	208	675
``)	10	123	477	265	540
prepare	37	215	486	446	585
constructors	78	265	426	430	450
transform()	11	136	52	223	105
playing	56	122	320	350	313
peptides	93	76	133	761	542
df2.reindex	90	238	443	245	432
non-empty	80	287	224	454	675
quantity	18	152	53	435	157
slope	33	138	216	330	472
`data['time	54	90	133	698	998
cbind	11	144	224	183	151
spaced	44	269	87	65	825
solar	93	282	70	442	789
cheat	48	18	108	505	487
csv_file	43	39	47	109	246
groupby-filter	57	256	56	597	26
cheap	45	100	474	342	347
pre-installed	25	218	157	649	289
spaces	91	170	83	784	56
tks	19	163	6	289	184
hack	28	77	436	616	467
well01	51	66	238	471	658
dataframe.from_dict	57	185	235	58	519
.datetime	71	25	334	722	948
lib.c	21	24	367	445	637
reindex_axis	57	49	335	381	103
sma_15	54	140	384	434	631
frame's	23	215	185	447	982
shutil.move	49	58	385	151	911
glmer	53	144	486	183	850
crime	93	152	445	515	542
carray	10	123	78	627	557
one-line	28	77	150	438	467
invocation	63	127	295	636	365
`df.groupby('id	17	30	370	161	776
virtual	94	217	157	396	291
dreaded	63	82	413	533	365
normed=true	7	188	472	10	435
syntaxes	52	279	287	62	313
stata	49	144	454	183	850
absent	18	173	394	766	345
masking	15	0	246	439	502
expectation	29	95	128	366	744
z-axis	59	94	471	620	491
ssl	46	243	190	425	642
woodchopper	19	273	195	631	184
df1.reset_index()	90	238	443	245	206
lables	6	235	337	766	129
portions	52	279	264	209	585
installed	25	156	184	382	563
attr	92	293	169	603	784
closure	11	265	426	491	196
reveal	26	234	128	432	807
regarding	1	260	440	444	756
a-b	54	95	450	698	999
3-day	44	140	491	435	157
floods	29	140	384	162	692
dictreader	57	262	235	690	519
xeon	94	218	157	84	322
copy-pasted	37	71	353	670	508
predicted	33	138	216	187	472
mapped	6	265	13	491	982
registry	94	231	213	557	369
discussing	1	18	421	323	415
pandas.tslib.timestamp	92	104	434	20	780
obfuscated	1	260	474	444	23
reveals	26	82	110	596	365
compressed	49	190	78	627	557
variability	59	235	471	620	491
##	38	237	324	650	681
bids	18	173	395	435	453
signs	91	297	83	784	345
#null	80	129	306	612	778
connections	46	200	451	562	642
interpolate()	57	136	233	563	410
1922	82	196	309	144	125
college	82	173	26	713	936
ignores	6	126	153	74	675
apologies	16	163	60	511	74
#2	1	260	205	759	756
#1	82	140	205	14	478
n_jobs=1	63	82	110	687	365
back-end	53	3	451	430	850
a.a	54	17	400	434	998
fails	63	262	179	533	365
detect	6	126	153	766	606
read_csv	43	74	112	690	519
federal	13	29	326	156	294
subsequent	6	211	384	766	939
review	1	222	421	323	544
configurations	52	279	337	388	609
definite	52	38	167	309	158
hist	7	224	180	10	314
snps	93	173	331	761	661
getattr	27	142	222	161	618
.replace()	57	42	233	34	569
reproducible	37	71	353	115	917
zip_code	73	204	337	698	784
arrival	18	204	189	305	775
multiplied	54	95	53	698	217
enddt	18	140	189	435	990
.join()	57	286	56	470	292
25	86	169	371	411	783
originated	49	190	454	6	850
comp	62	109	385	21	498
overwriting	23	58	483	208	982
np.corrcoef	33	138	450	632	999
fiddling	28	122	320	616	313
paramter	80	74	235	690	853
freq='d	38	159	409	502	619
multiplies	54	178	481	698	267
prematurely	45	38	60	467	55
freq='h	38	5	91	502	619
set_printoptions	57	68	201	373	263
comb	15	25	246	151	502
come	56	261	298	559	587
originates	46	243	275	218	642
reaction	18	91	309	343	936
subfigure	59	224	471	221	944
thelist	55	109	161	109	64
kicking	56	122	110	50	880
20101220,245	51	66	238	471	658
region	82	173	394	713	108
convert_objects	57	49	305	734	579
quiet	3	212	107	319	347
contract	60	29	352	51	753
patient_id	89	236	335	568	304
text_factory	78	183	305	470	526
final_dict	62	109	400	0	64
utterance	18	173	394	761	842
regressions	64	138	216	187	472
path_or_buf	43	74	235	690	853
iiuc	57	256	335	381	292
filtering	23	58	45	208	538
afterwards	23	236	335	437	575
colons	91	297	316	470	56
color	59	235	304	221	629
continuation	1	32	455	424	625
a.loc	71	80	334	722	948
period	44	99	491	46	789
pop	66	298	295	108	440
sampling	44	269	491	46	789
60	3	212	371	411	783
61	86	169	371	607	783
62	86	81	242	724	201
63	3	212	371	411	783
64	58	73	157	75	322
item1	73	17	173	427	311
iterations	45	58	385	151	911
67	86	169	371	607	783
68	86	169	371	607	783
np.dtype	38	293	194	667	526
bizarre	26	82	110	687	365
poll	73	204	445	453	776
noisy	29	282	389	292	578
value_count	11	136	193	223	105
down-voted	16	222	92	15	23
dataframe.drop	57	167	335	381	26
2%	3	212	107	362	633
50%	29	212	21	411	255
subscriber	46	200	369	368	773
.wouda	19	260	120	458	756
1982	86	293	473	356	300
df_lower	73	90	445	305	304
505	86	221	371	130	867
502	13	29	271	156	294
valueerror	79	65	279	530	724
500	3	212	107	319	633
followup	1	260	373	15	23
index_label	57	74	235	690	853
direction	50	116	374	412	849
copy-paste	37	71	353	670	508
transportation	82	196	309	144	125
na's	80	129	0	201	778
infer_datetime_format	57	74	212	690	853
6m	3	212	107	319	633
.virtualenvs	21	24	146	49	257
python3.4	21	24	146	49	257
python3.5	21	24	146	49	257
python3.3	25	218	213	400	291
2-	53	270	19	76	517
32-bit	94	73	157	84	322
)):	62	117	80	782	549
irrelevant	6	126	153	714	675
spirit	28	260	488	759	587
.to_csv	43	39	161	690	344
case	6	234	390	596	129
myself	16	122	167	50	476
serieses	11	131	52	454	26
50k	3	212	107	319	633
amend	1	260	195	437	756
cash	13	29	271	294	294
premature	45	38	474	467	57
df.index.day	71	228	206	122	916
cast	92	183	169	603	416
zorder	7	224	235	10	435
50x	45	100	283	345	969
tslib.pyx	21	24	367	445	637
irrespective	18	99	384	46	990
facecolor	59	224	180	221	286
score1	71	221	473	356	867
firstwords	86	169	473	793	987
df.to_records()	87	141	203	748	973
coupled	45	43	283	759	906
my_func	27	30	222	760	618
j	62	25	80	202	64
duplicating	23	58	45	208	151
discrepancy	26	82	110	687	365
parse	49	210	112	6	349
numba	45	43	283	417	906
good	26	38	167	436	880
clutter	53	298	471	221	846
dfbig	73	90	445	698	304
capping	29	95	389	292	145
theta	54	247	481	775	267
recombine	23	76	319	248	709
np.vectorize	11	256	283	345	969
annoying	26	82	474	315	68
erroneously	6	126	153	766	365
author	1	173	394	466	415
numpy.dtype	30	65	302	487	34
distributions	33	156	184	376	289
granted	48	3	488	309	687
10:30	4	34	242	82	594
reminded	19	163	469	204	184
date-timestamp	29	140	384	162	201
archive	48	200	275	744	377
shifts	80	137	0	201	231
html	98	44	19	76	517
time_a	60	140	199	713	990
buys	18	152	445	435	368
workspace	94	231	454	557	369
reminder	1	260	195	444	602
events	44	269	199	634	990
anzel	19	273	6	289	184
status	18	204	394	718	108
owned	82	173	394	713	884
screenshot	68	71	227	115	391
disadvantages	45	100	264	368	838
pandas.factorize	57	256	457	597	768
downloads	13	231	177	557	377
driver	46	243	190	218	642
director	55	91	324	650	62
persons	18	173	331	761	661
pandorable	28	77	150	313	467
one-by-one	66	58	385	151	911
arose	63	127	295	687	365
meanings	91	297	227	784	166
footprint	45	100	244	582	838
changing	6	126	45	208	902
relies	6	3	488	74	687
json.load	49	185	56	470	519
threaded	1	260	92	444	23
sed	91	231	316	157	360
modes	93	282	70	292	472
minimize	45	100	264	117	838
dt.datetime.strptime	27	57	145	565	550
df_merged	73	90	445	305	304
magical	28	77	474	196	68
without	52	234	390	89	911
components	93	282	355	46	585
termination	91	170	83	784	345
model	64	33	216	187	472
binaries	25	156	184	376	289
nb	68	215	390	117	909
justify	66	126	153	315	57
clob	46	185	190	470	519
captures	29	95	133	464	598
df.column_name	78	226	272	58	529
actions	18	173	394	718	453
03:40	51	81	123	724	512
kill	63	127	295	636	799
posixct	92	185	169	105	850
unicode	91	113	140	363	628
univariate	64	138	216	187	472
multi-threaded	46	243	190	218	642
unconverted	63	262	413	533	34
halfway	29	270	358	292	225
blow	45	261	264	52	709
sampled	44	269	491	65	789
overlapped	53	211	471	464	172
https|	6	234	390	505	129
panelnd	78	133	152	315	55
hint	50	276	374	412	93
pd.notnull	27	40	215	322	299
aggregator	11	136	52	223	231
everyone's	19	222	6	204	184
seems	26	82	179	436	397
except	80	234	390	596	129
blog	48	203	278	323	415
rpy	98	144	213	183	850
lets	66	234	185	23	937
decompression	49	100	78	627	557
blob	49	190	275	6	590
samples	93	282	133	23	491
libreoffice	0	119	356	580	730
ufunc	79	65	297	675	910
next-to-last	54	211	384	434	939
multi-row	23	236	337	437	575
styles	0	119	356	550	730
openpyxl	0	119	356	550	730
kills	45	127	295	636	799
\\	38	42	251	90	24
delhi	86	169	371	102	465
loaned	18	173	394	750	345
tid	18	152	199	305	990
quantiles	33	95	419	629	863
df.name	55	255	324	68	282
pd.read_excel	43	39	47	109	489
series.to_dict()	15	256	335	58	26
accepted	1	222	92	444	23
correcting	19	163	195	17	184
left-hand	89	58	230	77	427
\w	38	42	251	90	24
\t	43	53	47	593	488
char_id	18	152	445	469	368
\r	91	113	316	363	56
\s	91	53	251	34	24
particle	93	270	70	195	635
pymongo	46	243	275	269	642
reduces	45	137	45	208	838
reducer	11	127	385	760	231
nu	18	95	445	698	108
sanity	61	18	108	200	634
from_dict	57	256	335	381	26
donations	18	173	394	713	990
\n	38	146	316	157	527
single-row	23	215	185	446	985
unbalanced	93	215	185	446	179
reduced	3	100	283	582	838
pandas.core.groupby.dataerror	79	65	315	111	281
min_periods=1	17	159	52	756	181
min_periods=0	17	221	141	165	86
2003-10-24	51	81	123	724	512
3.0.0	58	176	493	392	622
simulator	93	270	70	117	635
userid	18	204	445	305	108
in1d	78	147	412	632	763
2014-07-01	86	81	242	724	201
pacific	86	54	333	303	530
deduce	49	185	112	603	349
somescores	89	90	400	793	987
rowid	89	152	444	698	108
respect	6	279	337	447	129
df.resample	44	159	228	756	684
intact	23	211	337	437	495
all_data	62	109	161	0	64
preallocating	45	100	283	345	969
provided	68	260	440	444	756
leftmost	89	236	317	360	575
slice	15	208	272	270	538
literals	91	183	169	470	906
swaps	23	236	45	208	31
imshow()	7	224	180	10	314
right-hand	15	208	138	77	427
legal	6	126	488	315	487
.loc()	78	226	272	270	139
ifelse	11	144	67	183	695
moot	26	43	230	448	57
sem	33	136	53	469	896
provider	18	173	394	718	990
labels=false	15	49	27	58	435
n156	51	85	438	102	465
ticklabels	59	94	471	620	274
yieldcalc	11	178	222	760	618
football	82	16	84	713	913
scremato	51	201	448	173	471
range()	49	185	426	470	168
multi-column	23	236	335	360	575
inspect	63	234	487	557	606
communicate	46	243	369	39	773
d.assign	27	57	466	161	588
center=true	17	284	0	756	86
dropped	80	211	153	766	675
previously-included	63	262	316	684	205
selectors	78	226	272	89	292
i.e.	6	234	337	447	129
elementtree	49	185	169	430	850
ignored	80	126	153	766	675
earlier	56	260	179	559	967
rearranging	89	236	45	360	575
oo	53	133	488	309	55
on	52	234	390	447	129
ol	57	256	335	597	862
ok	19	163	469	458	230
oh	19	163	469	458	230
og	71	201	448	529	835
of	6	234	390	447	129
np19py27_p0	58	245	403	400	141
ob	60	140	84	713	990
c*d	73	17	391	427	311
spss	48	46	378	183	850
addition	6	234	390	89	129
map	11	256	56	597	292
df.duplicated()	17	40	215	322	299
min_itemsize	10	123	477	155	891
concentrations	93	152	331	527	661
2x3	68	71	227	366	744
ot	11	58	385	760	231
os	94	218	157	396	141
or	6	234	390	596	292
op	1	260	440	466	756
dplyr	48	144	451	183	850
12.300000	51	201	448	715	892
designmatrix	64	185	457	545	850
panels	87	141	152	748	973
communication	46	200	369	39	773
names=	43	74	235	690	853
condense	66	58	264	89	709
bbb	82	196	309	144	936
annotate	59	224	471	304	866
awayteam	55	25	340	0	64
300mb	3	212	107	275	234
accounts	26	279	26	576	368
determine	52	126	337	292	606
idx2	54	90	400	578	998
newentry	52	211	128	447	345
lastly	66	234	390	596	129
theoretically	26	234	104	596	911
x.merge	90	174	443	245	206
item_list	62	109	443	0	919
some_list	67	228	215	122	299
disk-based	45	190	264	627	557
normalised	44	269	491	348	789
strictly	6	126	230	309	373
there	52	234	150	438	323
copy()	57	265	138	513	974
strict	78	3	488	309	487
manageable	45	100	264	209	822
house	93	282	26	117	884
pretty-printing	53	298	83	347	292
energy	93	282	70	468	990
exog	87	258	216	330	667
conciseness	45	100	283	467	838
750	3	212	107	411	633
one-element	15	25	400	0	498
jug	48	46	451	376	850
linalg	63	265	213	388	166
fundamentals	48	133	167	50	55
odata	49	190	298	6	487
regard	6	116	60	714	55
jun	4	34	312	731	548
non-unique	89	236	111	360	575
jul	4	34	312	82	705
deltas	92	104	434	303	416
jus	66	256	56	347	292
ended	56	261	298	559	587
32767	73	25	400	385	345
75%	29	95	21	435	255
promote	6	126	169	315	373
faster	28	77	283	345	969
1024	3	190	264	368	234
scimath	63	231	213	557	369
datasets	45	279	486	209	822
applying	11	58	45	208	231
359.89	82	152	331	717	491
mat	68	215	185	515	571
max_colwidth	68	68	201	373	263
))]	71	228	206	298	338
starter	48	46	451	323	850
grasp	48	133	167	50	487
clipboard	98	44	454	670	508
reusing	45	43	385	342	57
connect	46	200	190	39	642
nunique	57	136	52	223	105
propagate	80	129	0	201	804
write_frame	46	243	190	218	156
ds1.values.ravel()	71	80	334	722	948
raw_name	73	204	13	305	524
on-disk	10	93	78	627	557
determinant	11	131	450	681	325
intro	48	203	298	323	415
column-wise	11	131	417	439	231
designinfo	6	265	426	545	850
controlled	6	126	153	766	128
encompass	52	71	227	23	172
spends	45	100	264	368	838
.tz_localize	67	36	305	612	526
incorrect	6	82	179	766	365
.plot()	7	188	116	10	314
4.7	51	201	448	173	284
df.as_matrix()	15	258	27	667	526
4.0	51	201	448	173	471
4.3	51	201	448	173	284
4.2	86	201	448	173	471
idiot	19	163	469	458	230
deserve	16	222	92	15	23
4.8	51	201	448	173	471
mpl-data	21	24	146	134	257
renko	59	94	471	620	944
idiom	28	77	150	438	467
sub-dataframes	15	58	385	151	292
5	54	221	340	411	110
python+pandas	45	190	264	6	585
2013-11-04	82	196	91	735	125
unneeded	23	298	153	347	675
trash	63	170	316	108	345
3.2.1	58	176	50	392	617
deviation	33	95	53	469	448
hardcoded	6	265	201	470	450
briefly	1	260	60	11	434
may	66	38	390	596	888
collaborative	48	133	451	671	687
separate	23	279	337	248	585
unindexed	23	215	185	446	982
symbol	13	29	200	156	900
whiskers	29	235	304	221	491
n*m	87	247	479	253	287
includes	6	215	390	74	129
nextday	11	256	385	760	231
hardware	94	61	369	84	884
flower	82	91	309	144	125
bounded	33	138	53	330	896
recognise	6	210	153	603	349
unicodedecodeerror	38	32	455	424	625
included	68	234	440	766	129
complications	78	43	488	661	57
stocks	13	29	271	156	294
')]	67	255	91	68	968
df_two	73	90	245	568	304
backward	80	129	0	201	521
.columns	90	49	443	0	814
calls	11	265	426	74	231
vert=false	7	188	472	10	435
invest	16	133	167	436	476
uglier	28	77	150	759	117
rutger	19	273	6	289	184
curve	59	235	216	311	578
websites	48	203	287	110	415
display()	98	44	487	76	517
directory	25	231	177	557	369
expenditure	59	236	335	515	61
df1.mul	27	30	222	161	667
all	52	279	337	447	129
.decode	67	57	69	565	835
dist	33	95	53	435	896
chinese	91	113	140	758	628
pd.read_clipboard	43	39	47	109	488
00:05	86	81	242	431	594
lack	26	133	167	571	55
00:03	86	81	242	724	619
00:02	86	81	242	724	201
unchanged	80	211	483	437	483
ala	15	208	272	270	538
------------	51	66	238	471	658
new_list	15	109	400	0	498
scalar	15	131	203	439	813
df_org	73	90	337	698	998
generalize	52	116	150	89	927
.argsort()	71	80	334	722	948
dish	18	287	400	343	784
follow	56	260	227	444	756
alt	68	204	440	95	909
disk	45	61	231	627	234
mining	48	133	26	671	179
hmmm	26	163	469	448	230
polarity	18	152	445	515	368
rowname	15	25	400	0	919
scipy's	64	138	7	187	553
functionaility	61	18	108	288	279
ron	19	273	120	289	184
0000-00-00	86	81	242	316	201
lining	66	137	53	469	129
requirements.txt	25	156	184	376	291
participants	93	173	394	761	542
thursday	60	99	352	51	99
removal	23	170	83	347	675
broadcasting	78	131	417	439	824
.year	67	36	79	502	614
init	21	24	367	445	994
program	63	127	295	636	799
group.to_frame()	15	25	400	0	919
stochastic	33	138	7	117	472
sc	82	196	309	144	125
immutable	78	265	411	791	373
.name	62	25	272	407	919
bdate_range	44	99	228	756	684
activities	93	173	84	713	433
belonging	18	152	331	761	661
iwwgdw	38	196	409	144	125
unsatisfying	28	77	436	759	467
worse	45	100	474	345	68
data_column	10	123	477	155	891
song	82	91	331	343	661
far	56	122	247	350	313
faq	61	18	108	323	415
**2	71	80	141	298	995
command-line	94	231	213	160	291
roe	82	196	309	144	125
print	68	109	161	366	842
ytick	59	94	471	620	435
worst	33	247	283	117	838
***	79	65	413	487	34
date_range()	57	256	426	760	26
awful	28	77	474	616	68
ticket	18	173	108	718	453
.filter	17	30	370	161	776
ticker	13	29	271	156	294
treating	6	210	153	208	349
unlike	6	3	488	74	927
stimulus	29	173	389	292	145
ostop	73	238	391	245	206
list	15	76	385	21	498
count2	73	17	445	427	108
plotting	59	224	180	304	944
tomaugspurger	1	260	195	444	756
observables	93	279	133	515	491
lisa	82	91	309	144	936
align	89	236	224	248	151
usfederalholidaycalendar	60	99	352	51	753
teh	53	46	213	376	850
employing	28	3	150	417	467
subjects	93	173	26	761	542
recode	23	215	457	446	768
ten	3	212	107	23	633
tea	55	237	324	650	62
built-in	11	3	488	430	487
translating	23	190	275	6	902
rate	33	140	199	369	990
2014-01-05	55	196	309	358	446
design	64	133	230	309	55
settled	56	122	298	559	313
freqdf	68	262	227	95	744
functioning	56	71	227	11	807
groupby.agg	11	256	233	760	292
will	66	234	390	596	888
what	26	116	128	596	320
imported	49	210	454	6	902
sub	23	279	224	447	151
advantageous	52	279	488	89	585
scikit-learn's	64	33	457	386	553
sun	4	34	352	82	548
sum	18	152	53	469	368
circumstance	52	116	128	108	606
brief	37	18	227	200	53
overload	78	265	411	791	450
version	58	176	50	392	622
pd.read_html	43	185	161	470	519
.fit	27	178	27	470	166
discern	56	116	110	687	807
df.set_index	90	49	443	165	432
gdps	18	152	331	698	108
compresses	49	190	78	627	557
nordev	19	273	195	631	756
tags	53	76	319	76	455
index=['a	71	5	91	735	968
supposedly	56	3	488	438	390
132	86	201	448	173	471
behaviour	26	82	110	315	365
inverse	87	0	450	681	325
condenser	15	208	27	398	987
hashtable	25	231	213	545	291
line.split	43	39	47	109	246
df.drop	17	49	215	165	86
observing	26	82	110	687	365
19980102	51	66	238	715	200
dtype=none	79	185	235	58	963
geared	48	133	188	309	687
increments	29	269	491	292	990
pd.pivot_table	90	236	370	381	776
data.dtypes	68	25	334	455	919
dict.get	57	256	233	597	26
allows	6	3	488	74	292
no-no	78	265	426	491	166
cust	73	204	445	698	108
scikits.timeseries	48	46	451	309	687
2-dimensional	87	141	203	748	973
john's	28	260	150	759	117
options	53	18	201	62	53
conditioning	52	144	488	183	373
sticking	23	43	45	208	747
paired	93	279	133	515	491
mul_df()	68	215	185	653	909
thankfully	66	211	390	108	756
suddenly	63	127	295	636	365
reduced_df	67	25	79	129	974
demands	45	133	230	714	687
fmt=	38	159	409	157	955
`how='left	57	286	214	619	806
screens	53	215	185	766	842
up-voted	19	273	120	204	184
semester	18	173	331	713	661
backslashes	91	297	316	497	394
incorporate	52	260	60	89	709
pdfs	56	190	275	6	918
.shift()	67	40	79	68	282
globals()	62	265	426	491	196
iterator	62	58	385	151	162
1900	60	34	352	51	753
proceed	52	116	128	438	849
,...,	54	221	340	525	930
_repr_html_	98	44	19	76	517
datanitro	0	190	275	6	517
completes	63	127	295	636	799
xrange	62	117	80	782	549
gtpe	19	163	44	289	184
branded	92	293	169	603	163
markets	13	29	271	156	294
10,343	51	146	219	771	471
minor	26	94	471	620	846
functools.partial	57	256	233	760	26
flat	23	190	264	6	918
flaw	26	116	128	596	320
8))	71	221	141	267	968
knows	16	116	128	394	849
bumped	56	82	298	559	476
grabbing	23	58	45	208	902
dataframe.to_excel	0	119	356	550	730
2000+	93	282	26	634	294
comps	62	25	80	407	948
instancemethod	79	251	315	111	910
flag	6	126	246	357	166
time.struct_time	79	251	315	111	963
basically	52	234	390	596	129
20000	3	212	107	319	633
known	6	126	153	687	365
x.columns	62	109	222	250	618
_serialize_xml	21	24	134	157	666
glad	19	222	92	15	230
lambdas	11	43	52	611	357
dframe	68	215	185	446	963
pandas.melt	57	256	335	381	26
simone	82	196	309	564	311
8p	71	221	340	102	867
equation	33	138	216	187	472
1733	54	287	340	14	987
for-loop	62	58	385	151	911
dataframe.to_dict()	57	256	233	597	26
caveat	6	3	488	315	12
v	62	178	400	0	64
df.describe	68	178	161	445	92
pandas.read_excel()	49	190	454	6	918
crosstabs	52	279	486	661	585
df_name	46	265	235	470	674
spearman	33	138	450	330	896
pandas-dataframe	11	234	185	447	129
embarrassing	19	163	469	458	230
challenging	48	133	167	50	82
serializable	79	251	315	111	963
brown	82	91	309	144	936
n=1000	68	71	227	11	909
trial	93	282	199	634	990
`errors='raise	80	74	476	564	853
two-level	89	236	335	360	575
arise	63	82	110	687	365
user.id	18	204	394	718	64
pd.options.display.mpl_style	7	68	116	10	435
5.0	51	201	448	173	284
influenced	6	126	230	315	373
5.2	51	201	448	173	471
5.3	51	201	448	173	471
condensed	87	141	450	681	325
advantage	45	3	488	417	423
.to_string()	17	68	370	455	92
5.7	51	201	448	173	284
rather	6	234	390	596	57
display.max_rows	29	68	201	373	263
breaking	56	261	264	52	709
algorithms	64	33	7	386	679
cleansing	23	190	486	671	902
occasionally	6	298	153	315	57
stemming	52	116	128	766	849
isocalendar	60	99	352	51	753
frequencies	44	269	491	46	789
ignore	80	126	153	347	675
explains	26	260	440	444	756
distro	25	218	157	649	289
griddata	57	256	233	597	763
simplicity	93	260	486	200	115
sandwich	33	138	216	330	166
okay	19	163	469	458	230
firstname	73	17	391	427	125
df.groupby()	11	136	52	223	105
emulate	11	131	27	700	151
chunking	45	264	264	209	557
dow	13	29	271	156	294
data.head()	68	71	227	366	744
panel's	23	208	385	360	575
reflect	1	260	60	444	756
pd.timedelta	92	104	434	622	780
disable	63	126	153	357	268
brands	62	109	161	0	919
stratified	64	33	223	386	679
`'nan	80	129	476	612	493
capitalize	73	251	315	564	615
df2.size	11	256	56	597	292
`pd.to_datetime(df['date	67	36	212	502	366
short	37	71	227	452	909
9.744	51	66	238	471	658
footer	66	170	83	347	738
dot	87	192	20	681	529
prefers	6	126	488	315	850
interpolations	44	269	491	46	789
departure	18	282	189	305	950
clean_tweet	45	43	283	4	911
height	59	235	471	620	172
callback	11	265	426	760	450
extrapolation	64	138	216	563	472
lhs	15	226	272	454	427
specifying	6	126	45	208	853
shade	59	235	471	685	944
???	26	121	128	596	64
began	56	99	298	559	145
nesting	78	43	488	611	357
don't	66	234	390	661	888
september	60	34	352	51	568
essence	23	58	12	447	585
closeness	54	95	337	698	775
major	53	126	471	620	846
disabled	78	176	50	315	617
isnt	26	38	264	436	769
substituting	80	159	409	347	778
.resample()	11	136	233	223	967
bcolz	48	46	78	627	557
level_0	89	236	335	155	311
level_1	73	17	400	427	311
developer	48	222	303	39	377
50000	86	212	371	411	633
datedif	92	140	434	305	784
style	53	44	19	76	517
.to_html()	98	44	19	76	517
forwards	80	129	0	201	804
temp_date	89	236	335	454	575
boud	19	273	195	631	184
df2.groupby	17	30	370	165	776
attendframe.yes.str.split	27	57	466	565	588
resort	28	43	385	417	57
parts	52	279	264	209	709
multi_line	53	224	180	89	944
cross_val_score	64	33	7	386	553
partitions	23	58	133	209	822
might	66	38	390	436	888
------------------	19	273	120	631	756
somebody	16	116	41	394	849
datastructure	87	141	203	748	973
df1.join	90	238	443	245	206
`df[df['col	67	42	79	34	282
unusable	45	100	283	467	685
framework	48	46	451	39	609
hierarchical	89	236	335	360	575
divfactor	33	131	53	469	456
preservation	78	126	230	315	365
milestone	61	237	108	392	617
accumulate	44	269	53	469	368
recl_2007	54	91	309	144	267
bigger	3	100	264	582	822
instructions	48	18	421	323	415
=10	17	147	370	68	776
adjacent	52	211	337	464	985
4133	86	293	473	356	300
refresh	53	200	44	108	799
inequality	11	0	246	597	502
12th	60	99	352	51	753
aligns	89	236	224	77	427
inherent	45	43	230	315	55
residing	46	190	275	6	642
itertools.combinations	87	258	27	21	667
1-9	71	221	340	14	784
memoryerror	63	61	351	636	234
formulate	1	260	60	759	756
needless	66	234	390	661	807
generation	68	71	486	11	909
fixture	18	152	326	713	913
40,000	3	212	107	319	633
expect	26	234	128	596	744
datframe	23	215	185	446	982
scratching	16	163	320	643	879
organised	49	190	185	6	918
109.95	51	201	123	780	284
errror	56	262	179	533	744
wondered	28	77	150	438	967
foolproof	28	38	474	417	57
dataframe.eval()	57	256	233	531	664
4pm	60	140	384	46	201
workarounds	61	18	108	62	279
induces	6	183	169	93	365
adhere	6	3	488	309	850
1-1	73	90	13	770	524
display.max_colwidth	15	68	201	373	263
health	82	196	10	144	125
appearances	18	173	73	718	775
origin_lat	67	178	79	470	340
new.csv	73	17	371	14	784
group_keys=false	17	30	370	165	181
chunksize	46	74	235	690	891
concatting	89	236	483	342	575
friday	60	99	352	51	99
forgive	16	222	92	511	74
data()	11	185	233	430	519
side-effects	78	43	230	83	965
experimenting	56	122	320	50	179
fuller	1	38	283	759	807
teach	16	116	167	50	831
automation	48	200	275	39	179
\s*	91	53	251	90	24
\s+	43	53	478	593	488
guest	55	91	324	343	506
requests.get	49	185	161	470	519
silhouette_score	63	185	426	545	369
product_id	73	17	391	278	496
thread	1	18	108	323	415
e.g	52	234	337	447	129
series.loc	71	80	334	722	948
wls	64	138	216	187	472
plt.plot()	7	224	180	10	314
year's	60	152	326	713	753
ptrepack	10	123	78	155	891
seperately	52	279	337	447	775
consequence	56	82	440	315	373
column's	80	211	337	447	615
throws	79	262	413	533	34
colouring	98	68	201	373	263
feed	23	215	275	446	709
informations	53	126	390	89	585
upper	29	235	136	162	924
feel	16	222	167	438	880
relate	52	116	128	447	415
contributions	61	18	108	288	279
linking	53	279	451	39	373
well-known	48	46	287	323	415
pd.multiindex.from_product	90	117	443	267	432
pandastable	58	218	213	400	291
dint	26	234	469	596	888
notify	1	222	92	15	23
stdlib	49	185	426	430	906
bhar	54	140	53	434	995
slower	45	100	283	345	969
netcdf4	48	46	26	323	415
passes	11	265	233	252	709
story	26	38	474	616	68
"	55	237	324	650	62
temperature	93	282	70	634	990
un-pythonic	28	77	150	438	467
data['ranking	67	255	79	68	282
np.floor	27	147	141	502	995
hangs	63	127	295	636	799
ata	90	117	443	267	432
i-1	62	25	80	202	995
i-2	71	25	80	202	948
psql.frame_query	46	243	190	218	702
eval()	11	185	426	760	369
passed	6	265	235	760	963
\spyderlib\widgets\externalshell\	21	24	121	163	666
twinx()	59	224	180	304	944
store	23	190	264	627	557
headache	16	82	110	50	68
']]`	67	255	79	68	282
option	57	3	235	690	853
dtype='object	38	5	91	735	867
9:40	86	81	242	431	201
`'dataframe	79	251	315	111	413
urllib2	49	185	454	557	519
file2.csv	73	90	47	109	246
strvector	92	183	169	105	416
pandas.tools.plotting	53	224	180	304	944
luckily	66	126	483	83	377
df_origin	15	226	138	513	974
hth	78	43	477	265	880
convinced	26	38	167	448	434
explodes	45	61	231	582	234
header=none	43	39	478	182	488
albeit	78	260	440	759	687
kind	26	116	488	438	487
month_delta	86	293	434	14	784
double	91	192	20	497	494
instruction	63	262	413	792	34
train.csv	68	71	454	329	909
aims	48	133	451	197	687
pairwise	33	138	450	681	999
result.index	27	147	466	122	588
dang	19	163	469	204	880
dane	55	237	324	650	62
header=	43	39	47	109	246
12345	86	221	340	130	867
take_last	57	74	138	132	195
risky	45	43	230	315	57
galt	19	273	195	631	184
cleaner	28	77	150	638	467
motivation	26	133	60	714	55
did't	26	116	287	436	880
outstanding	61	18	108	288	157
file_name	43	39	47	109	246
suspicious	26	82	110	687	57
7k	3	212	107	319	633
bitwise	78	223	417	439	240
banging	16	122	320	643	879
xtest	15	25	334	0	948
memory-efficient	28	77	150	638	467
expdate	18	152	445	718	368
programm	94	200	213	557	369
cleaned	66	261	298	52	807
hexagonal	33	235	133	515	491
w4l	86	201	448	715	892
employeeid	73	204	189	305	108
0.10.1	58	176	493	392	622
0.10.0	58	176	493	392	622
dtype='int64	71	5	91	130	867
pandas.get_dummies	64	33	457	386	768
randint	71	258	27	700	256
check	66	234	390	596	606
transactional	93	215	185	446	542
quicksort	78	145	317	83	373
cropped	53	298	471	620	846
datetimes	92	104	434	303	416
conforming	6	126	45	208	854
entirety	23	198	483	437	244
finding	56	211	45	208	606
donor	18	173	394	718	453
1.8.6	58	176	50	400	617
1.8.0	58	245	403	400	141
1.8.1	58	245	403	400	141
1.8.2	58	245	403	400	141
rawdata	68	109	161	109	246
leaking	48	46	369	368	773
added	68	260	227	444	756
populate	23	215	185	446	982
exec	38	42	322	157	527
anwer	1	273	195	15	756
user's	18	173	394	718	775
inconvenience	19	163	167	204	184
reach	63	127	295	108	145
77	86	169	438	607	161
76	86	169	371	607	783
75	86	169	371	411	783
74	86	169	371	411	465
73	86	169	371	607	783
116.33	51	66	238	471	658
71	86	169	371	607	783
70	3	169	371	411	783
nothing	26	234	390	596	880
seasons	93	152	326	515	641
116.32	51	66	238	471	658
measured	93	282	70	634	990
79	86	169	371	607	783
appear	6	234	337	766	129
a*x	33	178	481	330	667
value	80	287	384	698	998
runnable	37	71	353	115	917
crosstab	11	136	52	223	105
windows	94	218	157	396	322
corpus	93	33	275	567	119
traditional	48	3	488	309	687
sub-series	15	95	53	698	231
df.describe()	98	44	233	455	92
caching	45	100	283	467	838
convert_dates	57	74	235	185	853
lying	56	122	320	108	313
cdf	33	138	471	515	944
restore	89	236	335	437	103
.asof	11	30	222	760	26
rth	29	140	384	763	907
beautifulsoup	98	185	484	76	517
stumped	16	122	287	50	313
havoc	63	82	153	52	365
cds	60	140	384	761	641
routinely	48	46	451	62	609
font	59	224	243	221	172
df['value	67	255	79	68	282
simulating	93	282	26	368	773
upwards	3	212	133	23	491
v0.13	61	197	493	392	617
penalty	45	100	283	179	838
re-reading	1	260	60	444	756
part1	73	90	400	568	304
)```	67	117	466	61	432
csvs	49	190	454	248	918
)']	67	255	466	502	588
data.columns	62	25	334	722	919
pandas.dataframe.groupby()	17	136	370	223	105
post-process	80	170	112	347	292
his	1	260	440	466	117
triangle	53	235	136	77	924
gains	45	233	283	467	838
.iloc	15	226	272	407	139
spurious	80	129	153	766	675
compiled	25	156	184	376	289
ewma	44	138	491	469	789
b	73	17	391	427	998
5,000	18	212	107	319	633
xticklabels	7	94	180	620	274
reply	19	273	6	289	184
dataframe.to_json	57	185	235	505	519
aaa	73	17	391	427	690
69	86	169	371	607	783
emails	18	76	319	230	542
compiles	63	231	213	557	369
unintuitive	26	82	110	315	365
typos	26	170	60	661	701
pd.tseries.offsets	92	185	228	430	684
continuum	25	156	451	376	609
factorization	6	126	337	23	927
casted	92	183	169	603	416
investigate	26	116	110	38	807
hardly	45	38	474	467	57
vincent	59	224	180	304	944
wrote	56	260	179	559	587
1234	38	293	340	14	784
bars	59	94	471	620	944
signify	54	129	340	14	784
hinting	78	183	169	603	963
dump	49	190	275	6	918
achieved	52	116	440	89	442
.cat	67	255	79	68	282
']])	67	255	79	787	282
arrives	63	127	295	108	145
df0	73	90	400	568	304
achieves	68	38	283	759	696
constant_memory	0	119	356	550	730
2.8	51	201	448	173	621
dumb	28	77	60	616	68
are	6	279	390	661	129
arg	57	74	235	690	853
1,000,000	3	212	107	319	633
ari	19	163	120	458	230
2.1	58	218	448	75	471
seaborn's	59	224	180	304	944
2.7	58	218	403	400	141
untested	28	38	227	11	909
2.5	3	78	448	669	333
2.4	58	201	448	75	471
crunching	94	100	451	467	322
in-memory	45	100	78	627	557
visualize	53	235	471	515	944
learnt	16	163	167	204	587
2025	86	34	318	82	464
nailed	19	163	469	458	230
formatted	49	210	112	6	349
get_level_values	57	208	272	321	26
libraries	48	46	451	376	609
unions	80	279	224	454	151
substracting	54	140	340	14	129
various	56	279	368	658	525
]`	71	25	334	407	948
falses	15	0	246	439	502
mismatch	79	65	111	675	724
consecutive	29	140	73	464	775
formatter	7	64	212	185	745
numerous	56	122	368	658	525
corruption	63	6	78	467	234
chain-indexing	78	226	272	513	974
3.3.4	58	245	403	400	141
soln	10	123	477	265	54
sku	73	286	214	427	304
profiling	45	100	283	467	969
recently	61	176	298	559	617
creating	23	215	45	208	902
scatterplots	59	235	471	515	944
initially	56	82	179	559	967
sold	18	173	199	713	113
sole	15	126	246	632	166
df.index.dtype	92	293	434	20	92
outfile	43	39	47	109	702
df.plot	7	188	472	10	314
succeed	56	122	287	596	880
conda	25	156	328	382	563
6672	68	170	319	784	345
pymssql	46	243	190	218	642
duff	80	129	0	347	778
condo	55	91	324	650	936
web-dev	82	66	10	144	658
solr	48	190	275	671	179
relying	28	43	474	315	57
c	73	17	400	427	64
license	48	200	421	39	377
]=	71	9	334	722	948
closed='right	6	159	235	564	684
];	71	80	2	722	948
use_index=false	7	224	472	10	435
roman	19	273	195	631	184
became	56	82	179	559	967
context	26	234	227	714	55
]"	55	237	324	650	356
baseball	93	16	84	713	913
bond	82	91	309	144	936
string.zfill	11	185	233	470	519
finds	56	137	179	359	130
reside	23	190	264	368	811
clashing	66	279	224	290	292
locals()	11	265	426	491	196
reasons	48	133	488	62	687
sweet	19	163	6	204	184
dataframe.drop_duplicates	57	256	335	381	26
sweep	11	279	233	117	231
wednesdays	60	99	491	46	789
improper	66	234	390	596	365
hadn't	19	163	469	458	967
non-zero	80	129	358	131	998
slots	80	269	491	201	789
dataframe.append()	57	256	426	58	26
simpler	28	77	150	638	467
2015-08-09	86	34	438	102	465
duh	19	163	469	458	230
ps	1	260	440	344	756
pp	49	185	161	545	92
cheapest	87	95	450	681	999
user_id	73	204	445	305	108
enhancements	61	18	108	288	279
pt	82	196	309	144	509
nader	19	163	6	289	184
px	62	178	334	0	948
py	21	231	213	557	369
exp1orer	1	260	195	444	756
due	6	82	388	687	365
strategy	52	29	26	156	725
pb	73	287	337	698	775
whom	48	173	26	62	884
reduction	45	100	283	223	581
backends	48	46	451	39	609
pg	48	203	278	671	179
pd	49	185	213	545	92
pe	82	196	309	144	936
dup	1	260	108	444	279
pk	38	297	316	157	527
ph	76	91	496	343	661
pi	82	196	120	391	125
whoa	19	163	6	204	230
pl	46	243	246	391	642
pm	60	81	242	431	201
df.where	17	40	215	322	299
121:02	51	85	123	715	43
121:03	51	85	123	715	43
transferring	23	190	275	6	902
precision	92	183	358	131	970
121:04	51	85	123	715	43
vaguely	56	260	110	559	807
zfill	57	256	56	185	763
matplotlibrc	21	231	367	134	437
for-loops	28	43	150	611	357
demand	93	200	343	117	884
cummin	11	136	52	223	231
tight_layout	7	224	116	10	314
p2	73	90	391	427	311
p3	82	196	309	144	125
p1	73	91	445	427	998
noticeable	45	100	283	467	838
frozen	63	262	413	533	850
data_train	71	25	334	0	948
batch	93	282	264	634	990
evaluated	6	0	246	357	166
tweaking	1	260	60	759	807
homework	16	222	92	15	23
behavior	26	82	110	315	365
__hash__	92	104	212	185	963
evaluates	80	0	182	357	166
exasol	46	243	190	218	100
overrides	6	126	477	357	166
bespoke	48	133	488	309	487
theres	28	77	150	438	721
cummax()	11	136	52	551	105
pandas.read_json	57	185	235	690	519
concurrently	94	127	369	557	773
16.0	58	176	50	75	471
daterange	44	99	228	756	843
19.9	51	201	448	173	284
yyyymmdd	92	104	434	303	349
disappointing	28	38	474	436	224
pd.rolling_apply	27	30	222	161	181
uncomment	63	262	161	636	842
vcvarsall.bat	25	156	184	376	291
ns	92	293	194	20	875
to_latex()	98	44	19	76	517
ethnicity	82	91	331	343	936
ios_id	18	152	445	698	108
result	68	215	179	366	744
lengthy	28	71	227	616	68
james	82	91	120	167	936
lengths	6	279	203	464	151
hadoop	20	200	369	39	773
half-open	54	140	340	14	784
wierd	26	258	179	667	880
deletion	6	126	15	491	982
sqlite3	46	243	190	218	642
humedad	82	282	70	141	990
advise	50	276	374	412	849
higher	29	100	389	162	157
891	87	258	340	667	667
892	49	32	455	424	625
literature	48	46	421	323	415
x86	21	218	157	75	666
mountain	94	218	157	649	291
bikes.ts.dt.hour	71	228	206	122	916
painless	28	3	150	417	467
temp_df	67	109	409	0	432
flows	13	198	271	329	294
holidays	60	99	352	51	99
sqldatabase	79	251	426	83	288
moving	33	138	53	469	368
y's	59	235	133	515	491
cp1252	43	113	140	363	628
robust	28	77	150	638	467
`df['d	67	255	79	68	282
fastpath	57	265	426	83	963
17:19	86	81	123	724	867
spliting	23	76	337	761	822
source2	38	5	91	388	881
lower	29	211	389	162	924
`df['e	67	255	79	68	282
try	66	234	390	596	292
([8	71	5	91	130	867
anybody	50	116	41	394	849
analysis	48	203	486	671	179
edge	59	235	304	562	392
machinery	53	3	244	368	687
plotted	59	94	471	620	944
functools.reduce	11	256	233	760	231
client_secrets.json	21	231	177	388	318
df.info()`	68	71	227	455	28
pd.to_datetime(df['date	67	36	79	785	366
abilities	48	133	291	309	687
265	63	127	295	108	145
precedence	78	223	20	439	240
_timestamp_to_mysql	79	251	315	111	652
1-d	87	141	203	748	973
nanoseconds	92	104	434	303	416
networks	94	200	369	39	884
birthday	60	99	352	51	753
inactive	18	91	394	343	936
\pandas\tseries\	21	24	121	163	666
questions	1	222	421	15	23
inference	64	183	169	93	553
df.rank	17	30	443	165	86
dtype=	92	293	305	667	526
forloop	11	58	385	151	581
tables	46	190	224	248	151
loading	49	190	264	6	902
non-default	49	265	426	430	963
look_up_list	62	80	80	618	868
majority	45	100	389	117	838
workers	94	61	369	368	773
extra	66	211	153	347	675
df.x	71	25	334	168	948
df.y	54	25	141	168	948
exclusively	78	3	488	309	850
df.d	71	147	141	129	948
')`)	67	159	409	756	843
0.12.0	58	176	50	400	141
python3	63	231	137	557	291
df.b	71	147	141	129	299
tweak	66	260	227	759	807
`'mean	57	297	149	564	311
finder	63	127	295	557	369
.append()	57	256	335	381	26
associations	6	126	153	766	129
customers	18	173	394	718	453
dataerror	79	65	315	533	281
vendor	93	204	394	305	775
amended	1	260	195	444	756
fill_method	57	159	0	756	410
op's	1	260	60	444	756
label-based	78	226	272	270	139
unlimited	6	126	201	373	927
aggregation	11	136	52	223	231
dataframe.to_csv()	57	185	235	690	519
3800	86	34	318	82	594
dtypes	10	183	169	317	163
df_original	23	236	483	568	982
pd.read_excel()	49	185	356	550	519
num2date	27	178	27	700	684
real-life	93	173	26	117	525
question2	56	25	120	14	756
integer	92	183	169	603	416
numpy-array	87	141	203	58	973
2011-04-01	86	81	123	724	512
helpful	50	276	374	367	93
table2	54	90	400	578	998
modifications	45	43	385	513	974
seperate	23	279	185	248	709
deserialize	49	185	78	430	557
shaped	87	141	203	748	973
systematically	93	279	331	761	491
admittedly	28	38	474	616	68
tingis	19	163	469	204	184
incidental	26	38	474	315	57
openshift	94	218	332	376	291
separately	23	279	337	447	585
collect	23	58	385	151	709
unstable	78	126	230	315	373
')``	10	123	477	265	540
alignments	52	279	337	62	172
essential	1	260	227	200	807
read_sql_table	46	243	190	218	100
hinted	68	265	426	430	963
`]`	67	255	79	68	282
3.6	51	201	448	173	471
understood	19	273	60	458	434
3.4	58	218	403	400	141
3.5	58	78	448	669	333
3.2	58	201	448	75	471
3.3	58	245	403	75	141
3.0	58	201	448	771	122
3.1	58	201	448	75	471
3.8	3	201	448	173	471
investigating	56	82	110	687	365
gradually	45	61	244	582	234
smallish	45	100	264	209	822
columns=range	71	117	141	267	319
dataframe.fillna	57	256	235	505	410
pros	48	133	26	62	687
rbind	52	144	224	248	151
prop	18	182	445	698	108
plat1.csv	91	170	83	766	205
medv	53	262	128	323	377
proj	94	218	213	376	291
tends	45	38	283	417	57
hosts	73	204	400	491	64
re.search	27	42	251	34	511
prod	57	256	56	430	292
proc	46	144	451	183	850
prob	10	123	477	265	540
stratifiedkfold	64	33	223	386	679
regex	91	297	56	34	569
#do	71	147	334	14	320
fancy	78	226	272	270	538
jumps	47	137	389	563	145
instantiation	53	265	201	89	172
chart	59	224	471	304	944
rolling_max	11	136	52	223	231
refuses	63	82	179	533	365
exemple	68	215	185	95	909
df.sortlevel	17	80	334	165	86
endtime	73	204	189	305	737
'``	10	123	477	265	540
3.x	58	218	260	273	141
non-standard	52	3	488	89	487
toss2	71	293	27	700	526
pipeline	64	33	457	336	553
asserting	6	265	233	597	106
non-scalar	78	131	203	439	373
standalone	37	71	227	11	445
completing	56	127	295	108	179
deprecationwarning	63	262	213	487	34
range	44	140	491	464	843
economic	93	282	26	156	294
dialog	98	44	487	114	983
bootstrapping	94	138	216	376	609
t_2	54	17	445	427	267
skiprows=3	43	162	47	182	488
t_1	82	91	340	14	267
wanna	18	152	128	343	320
pandas.apply	11	256	233	760	231
enter	63	127	295	108	842
plan	66	133	486	671	747
cutoff	29	95	133	162	998
file1	73	286	61	568	246
32536365654	15	198	306	14	778
python33\lib\	21	24	121	163	666
1.2.1	58	176	50	701	141
statment	68	262	179	366	929
dataframe.apply	11	136	233	760	231
newid	15	90	400	698	982
+++	71	262	340	14	161
.rebal_wgt	71	69	141	700	995
johne	19	273	195	631	184
intraday	13	29	271	647	294
df.reindex	17	49	443	165	5
mode='a	43	39	47	147	488
rows	23	211	337	447	775
conceivably	66	126	390	347	57
extremely	45	38	474	616	347
smoothly	44	269	491	361	789
question	1	260	60	444	23
.tx0	49	190	275	6	918
signifies	29	235	133	698	129
capacitance	29	271	389	292	725
prettier	28	77	436	616	467
oddities	26	43	230	436	57
pageviews	82	140	199	14	990
analyze	93	282	26	671	179
sections	52	18	264	209	822
twitter	93	76	275	6	542
swapped	89	208	224	360	575
files	49	190	454	6	918
fabio	19	273	6	289	395
time-stamps	52	279	337	447	129
perplexing	26	82	110	687	880
groupwise	18	152	53	469	368
criteria	52	0	246	763	502
deviations	33	138	53	484	448
foo.csv	43	39	47	109	246
repeatedly	45	58	385	151	911
delta	44	140	384	435	843
infers	49	183	112	633	409
raising	63	82	413	533	365
groupings	18	152	444	469	516
df.columns.tolist()	15	49	443	165	919
row1	73	17	445	427	304
partitioning	64	138	216	117	921
prev	54	140	246	566	502
consist	93	76	185	761	431
114	86	81	438	102	465
fulfilling	15	0	246	763	502
parisfrance	82	196	309	305	125
caller	66	127	264	368	773
capitalized	6	297	169	603	64
series.shift	11	256	52	597	790
rmagic	98	144	487	183	850
unit='ms	67	36	466	502	588
confusingly	26	260	60	714	55
highlight	53	44	19	347	554
row*	91	287	390	698	64
z	54	178	481	427	267
called	23	215	185	491	982
110	86	169	371	780	424
row_ids	15	25	400	14	784
dill	25	185	213	430	291
1-dimensional	87	141	203	748	973
associated	18	287	337	698	775
worthwhile	61	18	108	367	279
stick	66	43	488	89	292
user1	82	91	340	14	936
shortcuts	48	43	488	62	487
read_clipboard()	63	82	227	430	807
monkey-patching	48	43	488	309	687
read_stata	49	185	112	54	519
warning	63	226	413	513	974
home	94	231	177	388	318
dataframe.to_html	49	185	19	76	517
`orient='index	57	256	476	564	853
)")	38	228	206	122	62
2dp	92	183	358	131	416
grp	62	109	370	0	776
grouper	11	136	52	223	105
neglecting	6	234	390	596	129
peace	16	163	44	204	476
118	86	221	371	102	783
behzad.nouri	19	273	195	631	603
s.min()	54	140	340	14	201
df.country	55	237	324	122	62
`df2`'s	15	90	246	454	304
income	18	173	394	343	108
organise	52	58	486	89	585
newvalue	55	287	400	0	998
figsize	7	188	472	601	706
nice	28	77	474	367	487
ecosystem	48	46	451	183	609
users	18	173	394	718	453
blah2	55	287	340	14	987
problems	56	82	110	687	365
first_name	55	237	324	650	62
restarts	66	211	384	108	145
helping	50	276	6	289	93
meaning	6	234	390	766	129
allowing	6	126	45	74	927
theano	63	231	213	388	318
splitter	67	255	79	68	282
mulitindex	15	265	169	58	963
python27\lib\	21	24	121	296	616
incremented	54	140	384	799	296
8:10	86	169	371	607	465
suffers	45	100	283	368	838
happier	28	38	474	436	57
q_date	73	204	434	303	784
vice	23	286	224	437	387
)"`	38	84	359	699	62
pd.read_csv()	43	74	478	690	519
dtyped	78	183	169	317	163
memoize	45	3	264	368	773
departments	18	173	394	198	453
pandas.get_dummies()	57	256	457	597	768
enpkg	25	156	213	649	291
karma	16	222	92	15	23
ternary	11	0	246	439	691
demonstrates	37	71	353	115	917
jansen	19	273	6	289	184
intentional	26	82	60	766	365
scroll	53	298	19	221	846
once	66	58	264	151	911
]])`	71	80	334	722	968
new_values	15	49	443	0	432
wsgi	94	217	369	368	773
pymysql	46	243	190	218	100
steve	82	196	120	167	125
dsm's	1	260	195	705	117
ggplot2	48	144	180	183	944
markers	59	235	304	221	944
edt	60	54	333	540	760
adjustment	44	269	389	292	789
pd.series	27	117	466	267	338
issues	56	82	110	687	365
excel's	11	3	201	280	487
simon	19	273	6	204	184
pydata	61	18	278	323	415
note2	1	262	235	596	756
fasta	49	76	454	683	542
non-pythonic	28	77	474	616	347
axis=0	17	30	222	165	195
haffner	19	273	120	167	184
my_file.csv	43	39	316	109	246
stable	61	176	50	392	617
visualizing	48	133	180	304	944
include	68	71	227	366	320
dramatically	45	100	283	582	838
datecol	67	293	466	502	784
overlaps	54	90	384	290	686
fwiw	26	260	390	759	880
data.txt	43	39	112	109	246
confirmation	1	260	92	15	476
wished	52	211	337	447	585
pandaserror('dataframe	79	262	315	740	951
716	54	221	340	14	987
business_id	73	17	391	427	304
octets	18	240	384	56	707
df_out	73	286	400	0	64
dfgrouped	27	30	222	161	618
wishes	52	234	390	737	606
yosemite	58	218	157	400	141
uniqueid	80	129	306	612	998
stackoverflow	16	222	421	110	415
converge	33	138	70	292	472
frame_query	46	243	190	218	100
\xc2\xa0	38	113	316	470	955
balance	93	29	389	435	990
crossvalidated	1	18	108	505	279
combine_first	57	49	224	381	410
special-case	57	256	233	597	292
5300	11	58	52	151	581
bonds	55	255	409	765	400
refactored	61	176	411	83	617
py2app	25	156	213	376	291
deals	56	126	153	74	442
week's	60	99	199	51	990
interpolating	44	269	491	563	789
polling	93	215	185	446	585
dealt	56	122	287	50	442
businesses	93	173	394	761	542
subsampling	44	269	491	23	789
carl	82	91	309	144	125
noted	1	260	124	444	756
databaseerror	63	262	164	487	34
disclaimer	1	260	92	444	23
someday	16	133	167	394	476
loffset	44	159	228	756	684
smaller	3	100	264	209	822
abs()	79	251	315	458	967
you'd	66	234	390	661	888
goodies	48	18	421	323	415
notnull()	57	0	246	597	763
folds	64	33	223	386	679
cfd	93	282	70	117	585
13:15	51	81	123	724	867
numofdayssincelastwin	80	140	384	14	998
ochr	73	238	391	427	206
fold	54	33	331	292	679
.py	25	231	177	557	369
traveling	18	16	199	713	990
manipulating	23	190	45	208	902
fqtr	73	90	445	305	311
acid	93	282	26	292	585
ctor	57	265	335	58	292
x['a	67	255	466	68	588
compat	61	46	451	83	617
row-wise	11	131	417	439	231
optimize	45	100	283	417	838
pandasic	28	77	150	438	467
df.iterrows()	62	109	80	229	777
subselect	15	226	246	151	292
fine	68	234	179	596	365
labeled	59	235	236	515	571
etime	80	129	0	201	778
polyfit	64	138	489	330	472
waiting	16	127	44	643	476
series.replace	57	256	56	597	26
concisely	28	77	150	438	467
b.csv	73	17	173	427	311
datetime.datetime()	92	104	434	20	416
capital	91	170	83	750	345
renders	98	44	19	76	517
how='last	19	273	195	631	756
can	66	234	390	89	888
mwaskom	19	273	195	631	184
multivariate	33	138	216	187	472
value_to_find	80	129	306	564	998
chose	6	234	390	292	129
data-frame	23	215	185	152	585
kdb+	11	144	233	183	96
pushing	56	261	298	559	902
indicator	80	129	185	519	768
slated	61	197	493	392	622
desired	68	71	227	366	744
explore	48	116	486	50	179
identically-labeled	79	65	111	675	670
separation	6	170	83	784	345
lands	73	287	400	427	311
data['id	67	36	69	502	588
)]]	71	221	334	722	867
suggest	66	116	128	596	320
dividing	23	211	45	208	217
larger	3	100	107	345	822
h2	73	17	391	427	267
leaving	80	211	45	166	495
suggests	68	234	440	596	756
spines	53	94	180	221	172
definitively	26	82	110	436	880
shaded	59	235	471	620	949
mock	37	71	227	115	909
up-to-date	25	156	184	376	289
dataframe.from_csv	43	74	235	690	853
apple	82	91	309	699	936
spy	13	29	271	156	407
apr	4	34	312	82	719
app	94	200	369	39	773
sklearn's	64	33	296	386	553
df.a.iloc	71	80	334	129	948
apt	25	156	184	376	289
scaled	59	235	471	620	491
ran	56	217	179	559	650
api	48	46	275	39	850
vols	80	129	306	612	778
duck	78	43	412	204	25
summation	89	285	444	698	368
apply	11	136	52	760	231
bindings	48	46	451	39	609
2014-01-01	60	81	242	358	148
redo	66	211	264	108	476
corrupted	63	82	159	557	365
fed	6	210	275	6	902
usd	54	140	473	14	784
from	23	215	185	447	606
figure	53	122	287	350	880
consumption	3	61	231	582	234
failed	63	262	287	350	34
a','b	73	17	391	427	311
df2.b	73	17	391	427	916
hypothetically	29	95	53	435	157
depicted	68	215	185	515	59
examination	68	211	227	447	145
usr	21	231	146	241	437
december	60	34	352	51	753
]])	71	80	334	722	867
validated	48	46	451	187	472
chip	52	116	486	671	585
sanitize	66	43	426	470	807
sort	89	145	317	184	575
ftp	46	200	275	744	377
clever	28	77	150	638	467
sql-like	28	3	224	438	151
inclined	66	38	345	436	434
equity	13	29	271	156	727
lookup	23	58	13	770	524
to_datetime()	92	104	212	185	745
14.04	58	218	157	400	141
rabbit	66	163	128	108	880
detects	63	126	413	357	365
women	82	91	21	343	936
substring	91	297	319	34	569
.query	78	226	269	597	166
augment	68	260	128	596	320
heard	48	122	298	559	587
df1.index	90	49	443	231	206
raw_input	11	138	233	760	231
ordinals	89	208	272	523	139
dlls	25	156	184	376	289
0.00000000	55	237	324	650	62
endian	26	82	110	687	365
]]"	71	221	334	722	867
non-numerical	6	183	169	317	163
proof	37	260	227	28	909
0.9	58	176	50	669	622
tau	33	138	53	330	999
df[['col1	67	255	79	68	282
proprietary	37	71	353	744	508
tar	25	231	177	557	369
0.1	29	78	141	669	333
0.0	51	146	448	771	471
0.3	29	78	448	286	333
0.2	51	78	448	669	333
tax	18	152	445	305	108
0.4	54	78	141	669	333
0.7	58	78	448	669	333
0.6	54	78	141	669	333
tad	28	38	474	616	68
assumptions	26	43	60	661	807
hub	73	225	400	305	784
something	26	234	128	438	880
`timestamp('2014	86	81	242	724	619
xmin	7	188	27	700	435
serial	18	173	384	66	542
locking	94	200	369	368	884
linestyle	59	224	304	221	172
.pct_change()	67	147	79	612	181
overfitting	64	138	389	330	578
sir	19	163	6	289	184
united	82	91	331	343	936
guru	50	276	374	412	945
six	52	211	326	23	753
on='date	90	238	443	245	206
hadley	48	133	488	309	687
traders	60	140	199	435	990
set_xticklabels	7	251	116	10	314
sid	73	17	400	427	998
instead	15	234	390	596	292
struggled	16	122	17	50	313
sharelink	37	71	353	744	508
sin	87	178	481	330	667
sim	82	91	120	14	48
segmenting	44	269	486	117	585
datamatrix	11	251	428	83	684
administrator	94	231	213	160	291
timeframes	93	282	491	23	990
pennington	19	260	195	458	756
attend	67	255	306	122	125
outlier	33	138	53	469	896
tact	89	236	337	437	575
counter-intuitive	26	147	230	315	880
masks	15	0	246	439	502
lxml	25	185	213	376	850
classification	64	33	296	386	679
10m	3	212	107	319	633
1880	60	278	371	411	783
somethin	67	147	409	68	64
protopopov	19	273	195	631	184
chr1	86	140	340	102	783
light	16	116	5	394	253
inheritance	78	265	411	791	450
$home	21	231	177	214	437
interrupted	63	127	295	636	799
f.apply	27	57	466	161	588
fortunately	89	234	426	430	292
print()	68	44	19	76	92
honestly	26	38	60	448	434
epd64.framework	21	24	146	49	257
crawling	63	127	385	636	911
discussion	61	165	108	465	593
preparing	64	33	486	446	477
elif	67	112	347	122	691
stamped	44	269	87	65	825
ouput	68	71	227	366	744
%%	38	297	316	157	62
encouraged	61	18	421	323	415
stripping	91	170	83	347	345
interpreted	6	210	153	766	349
numpy's	11	256	233	632	763
whilst	6	234	390	315	57
10000000	71	293	473	356	784
10**9	67	36	141	502	692
newnames	43	162	47	182	246
134	21	24	367	445	161
interpreter	25	231	487	160	983
139	63	262	295	636	739
read_excel	0	119	356	550	519
%2	67	255	79	68	282
raw	37	71	227	115	508
superior	1	260	488	759	117
multi-dimensional	87	141	203	748	687
complicate	66	43	486	671	487
longitudinal	93	215	185	446	585
condtion	73	204	337	447	775
-hypothesis	1	260	195	444	756
ships	58	176	50	649	617
estimating	33	138	216	330	472
permanent	66	190	264	437	236
w.r.t	6	279	337	93	373
choose	52	126	390	89	927
hdfstore.select	45	190	264	627	557
inconsistencies	6	82	110	93	365
covered	48	18	421	323	353
multithreading	45	58	264	368	773
defining	23	250	45	208	292
card_no	54	90	445	763	502
describe()	11	136	52	223	381
violating	16	116	128	50	66
%i	38	64	145	586	550
%h	38	64	145	586	550
%j	38	64	145	586	745
%d	38	64	145	586	550
idiomatic	28	77	150	638	467
%f	38	64	145	586	550
indexing	78	226	272	270	538
oranges	82	91	331	713	936
%b	38	64	145	586	550
13s	80	129	0	201	778
3.29473	51	66	238	715	200
spikes	29	269	389	162	578
%y	38	64	145	586	550
h4	73	17	483	427	304
ax.xaxis.grid	67	188	409	68	435
%u	38	64	212	586	745
table()	57	265	426	430	519
str.replace()	57	256	56	597	569
event_name	62	109	443	0	919
%p	38	64	145	586	550
%s	38	64	145	586	550
%r	38	262	316	157	92
worlds	48	279	451	62	609
df.reset_index()	90	49	443	381	103
by=	7	224	180	10	314
fiddly	28	38	474	436	487
)]	71	228	206	122	338
read_csv()	49	74	112	690	519
10.7.5	58	218	157	400	141
trimmed	53	298	486	347	846
weather	93	282	185	329	647
fiddle	53	44	19	76	517
joint	89	279	419	515	447
rewrote	1	260	195	444	756
erratic	26	82	110	315	365
y_train	87	258	203	748	667
8)	4	32	371	607	908
8/	4	34	312	82	594
df_group	15	287	400	698	784
usc	62	112	172	568	502
seperated	91	291	83	784	345
artists	59	224	304	515	629
initialisation	63	127	426	491	911
related	56	18	110	687	365
macosx	98	44	487	160	983
88	86	81	318	82	594
89	86	169	371	607	600
np.fromstring	19	273	120	345	969
pandas-like	28	77	150	417	467
collumns	52	279	337	447	129
suite	64	46	451	671	687
relates	56	260	440	444	927
80	3	169	371	411	783
lookup()	45	100	283	582	838
86	86	169	371	607	388
additions	45	58	264	342	911
tabulate	57	256	56	89	292
out	56	234	390	596	880
category	18	204	331	343	108
respects	6	126	203	151	927
sentiment	93	215	185	256	542
integrates	48	46	451	39	609
2011-01-03	86	221	242	102	465
.max_colwidth	98	68	201	373	263
reformulate	26	116	110	714	807
behaviours	26	82	110	315	365
evector	27	57	466	565	588
double-check	63	231	454	557	369
performs	11	131	283	74	581
exporting	0	190	356	6	902
romain	19	163	6	204	184
disaggregate	44	269	491	46	789
datadate	18	204	445	305	108
sacrifice	45	100	283	467	838
row-by-row	45	58	163	417	425
\pandas\core\	21	24	121	296	616
size()	57	136	52	223	105
dictionary	23	76	13	21	498
8b	86	221	371	102	783
maintains	89	126	488	74	495
np.max	38	159	249	632	181
8g	63	61	231	84	234
8d	38	32	455	424	625
sepi+1a	51	201	448	173	471
crop_stats.py	94	231	295	636	336
york	82	45	309	144	454
conflicts	6	126	224	290	927
philip	19	273	120	167	184
obscure	28	38	230	309	68
lts	94	218	157	396	322
data=none	90	117	27	58	432
city_2	86	169	371	102	465
g	62	178	370	0	776
col_indexer	62	132	272	407	139
quotechar=	43	39	478	593	957
feasible	52	38	474	417	57
conversation	61	18	108	288	279
?,	52	234	415	596	320
8\	38	32	316	157	527
2014-12-03	51	85	123	22	464
hence	6	234	390	766	129
]')	92	293	194	20	875
column2	62	17	400	427	784
append=true	90	49	443	147	432
phrased	1	260	60	444	23
insane	26	116	436	436	880
tacked	53	298	471	52	846
updated_event	73	17	306	564	311
-500	54	25	340	14	267
stk_id	73	204	445	305	613
.groupby	17	30	370	165	776
unaware	28	77	150	438	467
value_counts	57	136	52	223	105
echo	68	231	128	455	92
exact	68	234	227	366	404
intuitively	28	77	150	438	467
symmetry	66	211	128	596	320
318	51	201	123	173	284
proposing	61	18	108	288	279
smoothing	33	138	277	187	472
straight	66	38	167	436	880
heatmap	59	224	180	304	944
destinations	18	152	53	343	368
series.unique()	11	256	27	632	26
doesn't	26	234	179	596	888
df.to_excel()	0	119	356	550	519
publication	18	173	326	713	400
dataframe.append	23	58	483	342	162
unknown	6	262	413	766	349
accent	91	113	83	784	56
compatibility	61	176	50	83	617
priority	45	100	389	368	927
their	6	279	337	447	129
1500	3	212	107	762	633
sally	82	91	26	343	936
lifting	45	46	486	671	123
doesnt	63	262	179	596	888
rigs	4	34	318	82	594
:]]	71	80	334	722	948
dataseries	11	131	203	469	231
boil	37	222	92	15	807
misunderstood	1	260	60	458	230
']]`)	73	286	400	564	304
line_no	55	221	324	144	947
tuple	15	287	203	21	498
startup	98	231	177	557	369
reversed	89	145	317	184	575
shallow	78	43	230	513	974
-method	57	256	233	30	26
multi-indexes	89	236	488	360	687
dataframe.corr()	11	138	233	330	231
slider	53	224	180	304	944
in_stock	67	255	79	68	282
reflecting	23	215	275	447	902
renumber	89	236	337	447	575
simulate	37	71	227	446	909
unmatched	80	286	83	454	675
x.loc	71	25	334	722	948
july	60	34	352	51	753
reverses	89	208	317	184	575
shut	94	127	295	636	799
`df['datetime	67	36	79	502	366
==>	82	196	10	388	318
succeeded	56	122	298	559	902
3882	86	293	473	356	300
150k	3	212	107	319	633
65k	3	170	83	784	345
dtype='float	71	117	334	267	968
enought	16	38	167	448	434
unsized	79	251	315	111	413
patients	18	173	394	713	661
reindexed	89	236	483	437	483
xlabel	59	94	471	620	226
prepended	91	170	83	784	56
occurences	18	152	73	698	775
1.4	58	78	448	669	333
1.5	86	78	448	669	333
1.6	58	176	50	75	845
1.7	58	176	493	75	845
1.0	51	78	448	669	333
1.1	3	63	448	669	572
clip	29	256	389	162	166
1.3	86	201	448	771	471
queryset	23	190	275	6	902
1.9	58	176	50	75	617
dataframe.eval	57	256	233	597	26
.copy	71	80	138	122	948
disjoint	52	90	224	464	524
itemsize	10	183	169	368	163
compressing	45	190	264	627	557
11528	54	17	473	356	987
linked	1	260	440	444	756
pandas.timeseries	44	269	491	46	789
afraid	97	163	167	448	434
angle	33	235	133	292	571
triggered	63	262	413	441	34
pip3	25	231	213	214	291
series.values	15	256	27	58	963
.agg()	11	136	52	223	105
i've	56	122	287	350	313
outward	59	94	471	620	435
ts.plot()	7	224	116	10	314
which	6	234	390	596	129
quotechar	43	74	478	593	957
=	67	117	206	267	432
re-opening	49	127	454	617	365
minor_axis	82	2	139	233	560
25000	3	212	133	23	633
^^	19	163	469	458	230
centre	59	235	471	221	172
who	16	173	394	466	453
#	38	262	161	14	64
output_summary	62	76	385	151	498
ht	54	221	340	753	267
whs	73	17	384	14	829
delve	48	3	264	89	687
histogram	59	224	471	304	944
why	26	234	128	596	880
vgene	73	17	445	427	108
numpy.split	57	256	56	597	763
count_dic	55	237	400	650	64
neighboring	29	95	133	464	491
1.3.1	58	245	50	701	141
.000	38	64	145	586	619
looked	56	122	287	110	313
1.3.0	58	245	403	701	141
site-packages	21	24	121	296	616
spatial	93	270	70	671	571
^a	43	39	47	109	246
superscript	53	170	83	766	345
df_data	15	258	400	58	919
gain	45	100	283	467	838
orient=	57	185	235	58	519
winpython	58	218	157	649	141
chances	48	38	167	62	609
getregion	27	57	222	161	618
agreed	19	163	469	448	230
automated	52	46	486	671	487
ccdf	33	138	216	40	578
approx	3	212	107	319	633
purely	6	133	488	309	55
planning	52	133	345	671	434
dtypewarning	21	24	367	445	161
quesiton	1	260	60	444	756
pyparsing	25	156	50	376	567
debate	26	38	230	714	55
subtracting	44	211	45	208	296
q1	82	196	326	144	125
q3	29	78	141	669	995
highest	18	95	53	343	998
q4	82	152	326	713	368
6000	3	212	107	319	633
getdata	90	178	481	245	267
cache	45	200	369	368	773
isin()	57	0	246	597	26
?...	26	163	469	204	880
row_count	54	25	246	14	502
datarow	62	221	340	14	784
candidates	62	95	133	151	999
combo	53	234	199	89	606
.iterrows()	62	208	385	401	139
piano	93	282	199	713	595
truncation	63	183	169	533	365
thousands	3	212	368	658	525
7395	38	117	27	282	161
pandas.dataframe.groupby	57	256	233	597	26
cube	93	270	70	292	571
klmn1	73	90	400	698	311
10:00	86	81	242	431	512
watching	48	203	295	630	415
my_dataframe	71	25	334	122	948
midnight	60	99	352	51	201
unchained	38	262	120	204	471
pypi	25	156	184	338	289
pd.series.nunique	57	136	52	223	105
99%	45	100	389	117	564
segid	66	287	128	292	129
ones	80	211	337	661	675
words	91	76	319	761	775
dptcitydptcountry	73	204	445	305	304
graphviz	53	224	180	221	392
pypy	25	156	451	376	906
errored	63	262	440	596	756
reset_index	57	49	335	381	103
queried	46	190	13	6	557
arithmetics	89	131	488	315	581
qt	98	44	487	160	983
fico	29	95	133	515	491
bisect	11	256	56	417	906
differential	33	95	53	469	368
series.str.replace	91	42	56	34	569
date_parser	43	74	212	182	745
optimally	52	116	128	89	585
15th	60	99	352	51	753
queries	46	243	190	218	642
fit()	87	258	27	760	667
qk	79	147	27	667	526
u'beauty	51	5	91	735	372
trues	29	0	246	698	502
pandas.qcut	11	136	419	629	421
conversions	92	183	169	603	416
knowing	52	116	345	714	434
workbench	46	243	190	218	642
modulo	44	131	358	439	692
acquired	93	282	454	634	902
re-indexed	23	236	483	437	982
all-na	80	211	153	347	675
module	49	185	213	430	850
-set	71	178	340	267	432
truncating	26	82	45	208	365
csv-file	49	190	454	6	918
zero-padded	60	34	358	131	753
closer	26	38	436	436	476
closes	13	29	295	617	157
computer	94	217	231	84	322
arguably	28	38	474	309	57
superb	19	163	6	204	184
xray	48	46	451	323	609
genius	19	163	6	289	184
g++	25	156	184	376	291
eur	82	140	473	356	784
func()	27	178	222	760	618
closed	61	127	108	617	377
crude	28	77	436	616	467
stories	16	122	287	323	415
frustrated	16	122	320	50	434
interfaces	48	46	451	169	609
speed	45	100	283	467	838
bought	18	173	321	713	113
df.low	54	228	206	260	995
amazon	94	217	157	84	322
ability	6	3	488	89	927
opening	0	190	454	617	918
joy	16	122	287	742	313
matrice	66	58	385	151	911
job	28	3	436	436	880
convertion	92	183	169	603	416
hypothesis	64	33	7	386	553
joe	82	273	120	167	184
np.linspace	71	117	141	700	319
demonstrate	37	71	353	115	917
homebrew	25	156	184	649	289
q-dec	38	5	91	144	527
jon	19	273	195	631	117
non-contiguous	6	141	264	342	927
commands	53	279	213	557	369
kwds	21	142	367	445	412
goal	52	215	185	447	743
dataframe_2	80	211	128	447	606
incident	18	173	199	634	990
april	60	34	352	51	753
atleast	18	279	337	763	775
sports	82	173	416	343	913
canopy	25	218	184	649	289
safely	79	65	297	675	910
mutating	78	265	192	491	974
myagg	17	30	370	161	181
unclear	26	260	60	714	434
wall	16	122	320	643	879
hyphen	91	170	83	784	345
narrower	53	298	471	221	172
if_exists='replace	43	39	47	147	702
environments	25	156	184	376	289
walk	16	116	385	108	911
packaging	25	46	213	376	291
coordinates	87	270	133	195	571
delimeter	91	170	112	784	56
sequences	91	76	171	761	542
seperator	91	53	83	784	56
table	23	190	444	6	585
narrowed	63	127	295	636	799
rpm	94	200	213	368	850
blink	2	247	479	253	287
forms	23	279	185	62	292
y-axes	59	94	471	620	274
occured	18	173	179	718	145
second	68	211	384	447	939
platform	94	200	157	396	884
decent	28	133	488	309	687
bugs	61	18	108	288	279
charts	59	224	471	304	944
responds	1	260	390	444	756
scipy.sparse.hstack	87	258	27	667	973
validating	93	279	133	634	902
literal	91	297	316	470	584
var_name	79	251	315	58	64
-999	86	171	306	612	760
start_exon	67	255	79	129	282
porting	56	46	298	376	617
df.loc	71	25	272	407	139
encoding='utf	43	39	478	593	411
floats	92	183	169	603	416
2010-10-01	86	81	242	724	201
mike	19	273	120	167	184
powerful	28	133	474	367	27
scalars	87	131	203	439	813
pickle.dump	49	185	161	430	519
sufficient	1	260	346	444	927
int()	79	65	297	675	584
`df['one	67	255	79	785	238
bit-wise	78	223	417	439	240
hmm	26	82	469	448	230
ensuring	6	126	153	206	373
x_0	54	78	141	700	995
iloc	78	226	272	270	139
y_predict	33	138	216	330	472
repetition	45	100	73	342	775
present	6	90	337	766	129
subsets	23	279	133	209	822
ddof=0	17	30	249	161	181
ddof=1	27	30	27	132	181
`1`'s	80	129	384	698	998
data.ix	71	25	334	7	948
df2.query	7	188	409	10	435
cursor	46	243	190	218	922
wild	29	38	60	436	589
scikit's	64	33	7	386	553
non-ndframe	79	65	315	675	670
last_inserted_id	67	255	79	68	282
~	3	0	246	319	502
rename	89	236	335	437	103
correspondence	93	76	13	770	524
apply_async	11	127	369	760	128
usefulness-useful	38	5	91	144	125
webpages	49	190	275	6	918
`df['weekday	67	36	79	785	282
relabel	89	236	335	446	575
thus	6	234	390	766	129
non	80	129	153	201	778
index_col=none	43	39	478	182	957
bigint	46	183	169	603	163
dual	63	61	231	368	234
lightweight	45	133	451	309	687
ave	73	144	251	90	695
test.exe	63	231	213	160	369
avg	54	140	199	369	157
dictonary	23	76	337	447	775
median_diff	67	5	91	68	282
cumprod	11	136	52	223	237
perhaps	26	234	390	596	880
privileges	94	200	77	396	291
cross	64	33	7	386	679
enumeration	23	183	169	603	982
member	15	287	426	698	450
df['delta	67	255	79	68	282
geographical	93	235	70	515	571
largest	29	95	165	464	998
units	44	152	199	46	990
gets	56	137	179	74	744
col4	73	17	391	427	311
difficult	28	38	474	714	68
ddply	11	144	233	183	695
care	66	234	390	596	320
col5	73	17	391	427	998
function's	6	265	169	603	405
')])	67	255	466	68	588
19:30	86	81	242	724	201
col2	73	17	391	427	311
definately	66	116	128	596	880
disagree	1	222	92	448	23
interval_id	18	90	445	698	775
cursor.execute	46	243	190	218	702
beast	87	141	488	748	687
pandas.pyc	63	231	213	557	369
boxplots	59	224	180	304	944
student	18	173	394	343	453
pdf	98	44	19	76	931
namedtuples	78	3	385	21	26
sunrise	60	282	189	305	990
df.info()``	10	123	477	455	28
scaling	64	138	7	330	472
.pyc	25	231	177	684	369
approve	1	222	92	15	23
ingredients	73	76	319	761	542
unpacked	23	76	337	21	709
fighting	26	122	320	418	179
pdb	63	231	347	214	852
theses	87	141	203	681	325
failures	93	282	199	634	129
representable	92	183	169	603	416
english	91	297	319	784	56
firstly	23	234	390	596	292
.pyx	25	156	213	376	291
realised	19	163	469	458	967
excessive	3	212	107	664	347
heavily	45	133	488	302	687
09:15	86	81	242	372	201
should've	1	260	60	458	967
identically	23	279	224	248	151
obtain	52	215	185	409	744
tcp	94	200	369	39	773
nanos	92	183	434	603	416
v0.12.0	58	176	50	392	617
x.year	27	57	466	161	220
df.isnull()	17	40	215	322	299
numexpr	25	156	213	175	617
isinstance	27	57	222	31	153
to_json()	57	185	233	430	517
pythons	94	279	213	153	906
consume	45	61	244	342	234
clf_nb	62	109	443	755	162
rapid	56	163	6	204	184
console	98	44	487	160	983
amd64	58	73	492	340	978
jaro	55	91	324	144	936
prints	68	137	179	74	842
guts	23	215	264	446	585
smith	82	91	309	167	936
unsigned	92	183	169	603	163
capabilities	48	133	167	50	687
googling	16	122	287	110	313
other	52	279	337	447	129
attractive	28	77	474	12	467
months_to_maturity	54	90	441	698	998
usage	45	61	244	582	234
bool	92	183	169	603	163
.hour	67	36	79	502	614
nickd	21	24	146	49	556
identical	6	279	337	766	129
jython	25	156	451	376	609
element-wise	11	131	417	439	813
who's	16	116	167	50	55
execute	63	127	295	636	799
np.ones	71	117	27	700	319
non-null	86	293	473	297	300
know	26	116	128	596	320
presume	26	43	390	596	880
press	98	127	487	108	842
variants	52	279	287	62	525
msft	13	29	271	156	407
python2	49	113	137	470	628
dimensional	87	141	203	748	973
check-out	18	140	199	292	990
bla	38	42	251	300	62
pandas.index.indexengine.get_loc	21	24	367	479	637
ahem	19	163	6	204	184
car	93	282	199	713	990
safest	49	210	153	347	349
4641	86	140	473	356	300
loses	89	236	335	437	495
datapoint	60	99	491	23	789
pcolormesh	7	224	180	10	314
pd.merge()	57	286	214	619	806
.interpolate()	67	147	305	612	282
agents	52	279	337	447	775
conclusion	1	260	110	444	23
drop()	57	49	233	381	26
exceed	3	212	107	464	633
because	26	234	390	596	880
clusters	93	235	133	1	392
sequence	6	287	203	766	129
kde	33	138	216	136	528
np.allclose	92	147	169	603	416
church	82	196	309	144	430
searching	56	122	287	110	313
"""	62	178	161	470	64
115	73	169	309	607	125
iterrow	11	256	385	151	911
growth	93	152	53	271	990
export	0	190	275	6	918
superclass	79	265	426	791	963
113	63	262	316	388	318
112	82	196	309	144	125
.reshape	71	117	27	600	364
2012-03-03	86	81	123	724	512
matrix2	15	258	203	58	116
econometrics	48	46	451	671	609
matrix1	15	258	400	58	116
tprep	71	78	141	298	995
)"	55	237	324	650	62
focused	1	260	60	15	23
lead	6	82	110	687	365
synchronize	44	269	491	46	789
leak	63	127	244	687	799
lean	26	38	167	50	880
dfg.index	15	25	272	244	435
manipulations	23	131	486	671	581
+0100	38	81	242	724	619
leap	60	99	352	51	753
pycon	48	203	278	323	415
time_stamp	93	204	189	305	582
customer_id	18	204	445	305	453
datetime's	92	104	434	303	349
np.isclose	15	147	27	632	166
300000	3	212	107	319	633
locate	52	211	246	350	606
says	79	262	179	74	34
df.sort_index()	17	49	272	381	103
i'am	23	215	185	446	585
pd.merge	90	238	214	245	206
22.5	86	221	448	102	471
ensures	89	145	317	360	373
np.loadtxt	49	185	112	690	519
series.index	15	251	27	58	963
analyses	64	46	486	671	37
stay	66	126	153	437	927
paste	37	71	353	670	508
11x	55	237	324	579	187
response_time	92	204	434	305	349
reward	18	211	44	108	145
if_exists	46	243	190	218	100
test.csv	43	39	47	109	246
rare	45	38	474	315	57
carried	56	211	298	766	145
extension	0	46	451	539	850
getting	56	82	345	533	365
column	73	287	337	447	129
universe	3	190	264	368	585
auto-generated	66	211	128	447	982
dependence	52	138	216	330	472
shipping	23	234	390	447	606
ndf	62	25	400	0	919
re-index	89	236	335	46	575
dependency	25	156	184	376	617
carries	6	126	26	368	884
swear	19	163	469	458	230
colums	23	215	337	447	985
constructor	57	265	426	58	951
.html	43	39	47	157	955
header=true	43	39	47	109	246
own	66	260	390	89	927
re-installing	25	156	213	382	291
el	94	262	213	396	756
versed	48	133	167	50	179
lenght	91	170	83	784	345
df['one	67	255	79	785	282
df.t.iloc	71	80	334	722	968
freq=none	71	80	466	298	588
fundraiser	18	173	394	718	453
space-delimited	49	190	264	6	918
promise	16	222	167	15	476
brush	59	235	471	221	258
registration	18	152	444	713	368
negate	57	0	246	439	502
dataframe.columns	15	208	272	58	919
consecutively	18	287	384	761	775
p873	51	66	438	471	658
brilliantly	19	163	6	289	184
co_num	6	170	83	766	205
00+	86	81	242	724	512
val	62	17	400	0	64
transfer	49	190	275	6	747
rightly	53	82	440	315	365
*	26	234	390	596	320
apps	94	200	26	388	884
2014-12-04	86	81	242	461	245
kidding	19	163	469	204	230
intention	26	260	60	714	55
quadratic	45	247	479	253	287
hdfstore	10	190	78	627	557
var	33	178	216	491	896
r.plot	17	188	472	10	314
build-in	11	3	233	760	487
0.13.0	58	176	493	392	622
0.13.1	58	176	493	392	622
new_data	62	109	400	0	64
simplejson	49	185	426	430	906
unwrap	23	76	337	761	775
df['open	67	255	79	68	282
funds	13	29	271	156	294
.groupby()	11	136	52	223	105
volume	13	29	271	435	157
tasked	48	122	451	50	179
format=	38	64	145	586	550
squeeze	57	258	335	748	973
matplot	59	224	180	304	944
iterates	62	58	385	151	911
made	56	260	298	559	967
temp	23	109	483	568	982
instructive	1	260	440	444	23
whether	6	234	390	596	606
meeting	52	0	246	763	502
record	18	287	337	447	775
below	68	215	227	95	909
gaps	44	269	0	563	789
iterated	23	58	385	151	911
cake	28	38	474	417	347
200,000	3	212	107	608	124
groupby.cumcount	15	256	52	698	26
non-existent	23	190	483	6	982
-->	71	221	134	267	968
kind=	7	188	186	94	314
meaningless	6	126	153	308	615
persistent	45	190	264	368	557
---	38	262	120	92	465
operand	79	65	297	675	910
1x1	87	183	203	603	973
goodness	48	133	167	204	55
id_vars	57	236	335	58	103
second.csv	18	204	337	761	775
trailing	91	170	83	784	345
happen	26	234	128	596	365
executes	63	127	347	636	799
testfun	27	178	222	161	618
mutual	13	29	271	156	294
avoided	78	226	230	315	57
d4	73	17	391	427	784
.startswith	55	42	324	90	62
incredible	19	163	6	204	184
timestamp('2015	86	81	242	724	619
percent	18	95	53	469	368
portion	68	137	185	6	345
timestamp('2013	38	81	242	724	619
timestamp('2012	86	81	242	724	619
book	48	203	278	323	415
.add()	57	256	233	597	26
boom	19	163	469	458	230
branch	61	197	108	392	531
percents	6	183	389	131	416
incredibly	28	38	474	616	347
clicks	18	152	199	718	145
1.7.1	58	245	403	400	141
pandas.plot	7	224	180	10	314
junk	56	170	83	347	345
kinds	48	279	368	62	525
muchness	45	100	474	417	347
seta	71	221	141	102	995
june	60	34	318	82	561
ultimately	52	279	486	447	585
inherently	6	126	230	315	373
kinda	26	38	474	436	451
table=true	10	123	477	155	891
'""	51	146	219	771	165
result.columns	38	262	409	68	64
disclosure	56	71	227	11	179
debian	25	218	157	85	141
opened	0	119	108	617	377
gameid	18	152	53	698	368
auxiliary	23	3	488	89	292
fund	13	29	271	156	294
ranks	18	95	73	343	792
']))`	67	255	466	68	588
df1.columns	90	238	443	245	206
pdata	66	265	426	491	196
intentionally	26	43	60	596	57
volumes	93	29	271	156	294
masteruserid	82	178	444	650	776
expands	23	236	483	568	982
