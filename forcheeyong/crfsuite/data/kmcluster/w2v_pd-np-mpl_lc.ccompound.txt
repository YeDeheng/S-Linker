__multiarray_api.h	50	145	118	138	204
netcdf	86	222	329	107	882
11544	12	78	52	514	272
hanging	22	187	108	361	248
woody	35	207	409	20	336
localized	99	151	106	631	970
regularize	28	151	106	631	970
scipy.ndimage.filters.correlate	98	146	140	641	512
numpy.log10	35	207	274	205	767
e^	11	234	242	531	56
unnecessarily	82	241	395	334	463
data.x	70	134	74	300	699
rolling_max_dd	88	266	55	337	89
varible	47	110	93	482	385
bringing	17	13	143	458	417
ax.axvline	58	44	240	777	599
pymc	83	26	178	761	816
a.itemsize	48	274	41	677	60
enddate	80	258	26	558	377
cm.gray	20	119	320	193	845
wednesday	80	163	254	723	72
b.ix	52	19	160	284	622
nullspace	16	94	462	782	800
lt.get_cmap	20	155	240	193	845
pandas.read_html	76	68	275	183	322
francesco	35	207	371	205	336
scrapes	23	84	27	595	127
scraper	23	84	27	370	161
hs	72	130	25	174	210
270	12	279	488	111	212
271	12	256	488	751	432
272	12	267	58	111	132
273	12	144	58	424	132
274	12	279	488	111	132
275	12	267	58	196	132
276	12	267	118	111	132
277	50	267	118	483	679
278	47	267	58	483	132
279	12	267	58	111	132
parseval's	79	292	20	394	547
scraped	23	116	27	370	519
nan-safe	79	193	341	98	382
grid-like	74	232	175	122	673
mdata	47	110	30	155	622
errors	29	28	389	361	473
dialogs	90	69	46	624	384
cooking	78	115	430	149	423
4	12	19	162	528	60
stats.stackexchange.com	34	190	307	669	216
designing	23	14	267	710	841
iterables	75	12	455	480	903
str.format	92	156	78	105	971
widget	90	69	46	380	384
audiolab	83	192	178	197	946
str()	70	99	275	183	979
27k	28	151	185	150	988
highpass	77	292	428	430	547
china	78	200	132	584	765
n_iter	28	26	354	135	507
kids	65	291	250	236	345
pytables	86	222	426	611	820
imwrite	84	219	102	607	427
deferring	22	61	388	349	214
monospaced	73	166	134	131	862
eventdate	78	56	445	41	984
0.12644904710626975	52	148	162	141	306
ax.hold	6	46	345	418	162
error-	63	83	283	715	39
golden	64	232	443	207	370
sdate	43	72	68	290	852
topography	33	176	135	617	908
projection	33	176	282	617	908
absolute_heights	52	19	263	284	855
y.reshape	1	57	41	232	726
rolling_xxxx	38	43	125	756	79
2.2.5	85	276	42	685	380
justin's	35	238	187	187	308
2.2.1	85	45	42	685	380
2.2.0	85	276	42	685	621
dna	23	286	365	425	798
non-neuter	98	110	454	796	984
ax.spines	58	138	495	651	599
case=false	92	51	109	512	808
abbreviations	32	286	420	482	898
plssvd	79	26	354	135	816
inevitable	82	231	395	334	463
s.values	87	42	78	13	512
music	23	192	365	676	946
therefore	74	232	306	209	36
distortions	20	151	106	631	762
thread-safe	55	85	71	349	431
my2c	82	50	379	285	463
skewness	77	23	332	10	347
populations	77	250	114	94	616
multi-channel	84	195	123	607	427
yahoo	23	116	299	581	67
,,,,	67	279	284	133	272
dataframe.apply()	92	156	78	105	971
numpy.nonzero	19	42	296	13	886
real-valued	79	292	20	430	547
unpack	75	252	10	110	28
circumstances	10	231	17	335	999
equilateral	99	288	11	315	138
locked	22	187	71	349	248
argrelextrema	19	103	140	13	512
.size	87	220	206	471	699
xaxes	37	290	443	391	388
numpy.max()	19	214	295	231	782
grid.linestyle	60	155	240	495	285
somecondition	6	46	317	418	162
wang	34	115	35	20	142
wand	88	197	55	337	217
.type	9	204	74	594	699
my_cm	20	155	240	495	846
knownvalue	98	258	454	796	66
want	74	232	246	209	472
absolute	57	266	148	98	868
500*500	88	283	55	785	89
x.mean()	87	55	493	76	593
beyer	65	291	258	407	887
travel	28	14	114	710	616
pycharm's	83	15	189	540	818
geojson	86	176	251	623	293
playback	23	85	294	349	257
text.latex.preamble	73	166	134	764	862
2015-06-21	67	181	58	24	888
oceans	99	176	282	617	563
numpy.multiply	1	178	112	562	726
wrong	29	28	227	791	473
graph's	37	290	443	706	329
i_1	52	0	263	364	288
18s	88	197	55	196	89
subplots	37	139	90	391	543
y_learn	47	224	349	471	881
18th	80	163	254	723	72
atlas_info	50	145	133	138	204
eigenfaces	28	14	267	761	841
pandas.core.groupby.dataframegroupby	92	156	383	616	699
nonsensical	10	231	395	335	568
numpyish	82	241	378	573	29
r+1	11	186	25	683	56
welcomed	68	207	465	451	343
assing	75	263	317	190	629
to_numeric	92	39	78	105	934
concurrency	22	85	71	349	431
wherein	99	232	37	746	868
activating	30	170	478	159	181
pyarrayobject	9	204	29	790	64
data.set_index	43	164	181	700	895
ready-to-use	38	173	80	286	564
ylist	52	148	418	471	221
series's	3	134	65	155	410
fit	79	23	332	363	620
retrieved	74	110	386	110	161
screaming	65	115	250	236	345
fix	29	28	227	432	472
timedelta64	70	273	245	678	700
fig	6	139	18	324	543
fid	76	192	365	676	946
fin	76	199	30	283	736
non-random	79	23	332	511	531
__setstate__	97	109	331	594	386
df.val2	43	47	68	290	567
df.foo	43	52	180	290	437
effects	10	151	106	631	303
multidimensional	75	64	10	519	684
comprised	74	64	386	746	684
-data	87	0	4	290	221
rasterized	73	125	248	276	304
outputplane	0	102	11	315	138
2000000	78	160	132	550	888
df2.index.get_level_values	48	201	52	2	24
.close()	22	61	388	358	282
merge()	92	156	78	763	971
timeout	22	187	108	361	248
log-normal	79	23	332	511	239
telescope	84	192	128	623	293
allan	35	238	409	187	336
it.islice	0	12	461	471	881
392	12	279	488	111	132
391	67	213	95	185	51
390	12	279	488	751	465
396	1	142	268	305	60
395	12	256	488	196	432
394	12	279	488	111	465
distrib	83	206	27	595	564
georeferenced	61	176	128	626	908
np.in1d()	19	42	296	13	512
figurecanvas	6	69	46	380	384
.concat	92	156	78	105	971
enviroment	83	128	5	540	467
gradation	61	119	259	757	786
stock's	78	116	299	581	466
combinatorial	82	231	106	173	970
encourage	34	190	307	500	215
adapt	27	137	116	525	421
my_matrix_2.t	98	148	206	73	77
numpy.polynomial.polynomial.polyval	79	101	125	782	13
strata	78	250	114	479	604
true_values	76	185	93	524	987
corrects	29	117	306	548	305
estimate	79	23	332	511	531
baxik.so	30	144	244	138	588
universally	10	43	377	396	354
sys	81	5	110	199	870
try_cast=false	48	57	2	621	130
cv_32f	11	244	180	532	323
f.read()	76	199	286	283	736
disturbed	10	29	73	77	340
newaxis	1	294	160	359	601
bugtracker	46	173	359	604	208
p_n	79	10	324	487	620
curiouser	75	99	421	691	681
f.set_size_inches	1	123	173	50	21
master_count.csv	29	171	306	122	508
weekdays	80	163	299	723	333
megabytes	88	182	373	549	236
non-absolute	63	35	245	727	852
service	23	84	376	149	423
tom's	27	238	187	187	308
needed	29	28	306	209	472
master	46	221	124	331	435
f_0	11	234	4	531	56
savemat	86	222	382	260	478
fill()	19	294	296	13	782
linkage()	16	94	140	293	896
zeroth	98	132	127	73	428
yield	74	28	306	209	508
sharey=false	58	139	494	324	543
task	82	241	341	497	866
positively	40	13	97	661	363
feasibility	99	13	143	39	589
0-12	37	290	166	706	76
0-10	78	281	22	796	66
0-11	80	78	162	133	272
df.index.map	87	47	493	76	593
1-column	71	64	6	519	125
idle	90	15	189	540	818
get_data_yahoo	80	116	299	581	67
feeling	17	241	88	236	345
item_date	70	35	309	2	24
longs	70	99	325	332	979
wes's	34	254	234	179	565
spectrum	77	292	20	430	547
increment	98	146	485	534	868
big_ax	6	139	18	418	543
isexpired	3	110	136	155	410
dedupe	3	110	6	354	125
.text	0	224	30	424	8
dozen	88	160	159	80	54
affairs	10	43	377	396	999
re-check	27	146	424	414	655
vge	78	93	445	204	832
2.73	85	206	151	685	380
2.75	15	272	61	225	544
.argmin	52	0	263	215	288
2.76	85	256	480	196	432
64bits	85	30	480	685	858
instructed	83	171	178	184	467
numpy.insert	19	294	296	278	470
sortby	86	68	379	217	502
shipments	78	150	445	479	410
.to_series()	43	134	68	700	827
diminishing	22	13	143	537	246
metrics	28	26	354	638	11
disjointed	3	263	6	22	673
mouth	99	13	250	429	563
y=f	72	102	418	129	292
visualizations	23	6	278	158	625
df1.columns	44	2	260	33	827
vertices	99	288	11	315	138
tech	23	116	430	149	275
saying	29	28	227	791	473
lookback	80	56	299	722	347
pandas.periodindex	80	149	447	77	612
padded	71	263	420	680	509
autoit	55	174	80	197	564
tempted	17	43	246	500	196
cheaply	3	50	182	587	125
hypercube	99	288	339	315	988
savetxt	76	54	382	260	698
rowvar	19	185	317	641	512
datasizes	88	180	55	441	89
clicked	90	69	32	624	536
copy.copy	9	109	158	418	200
inpainting	53	151	428	166	353
rico	35	238	326	187	336
blist	89	50	341	261	90
rich	38	6	291	317	628
argmin()	19	42	78	13	512
plate	99	250	77	623	293
4.5	15	272	61	225	544
incongruent	37	31	467	191	851
2min	88	197	73	80	217
ceil	57	89	201	664	62
altogether	29	263	246	190	526
numpy.argmin	19	42	296	13	512
maxnoe	29	28	395	791	472
putpixel	19	214	55	497	512
datafile	27	110	30	283	754
numpy.nextafter	57	89	8	141	743
region.quradate	43	52	68	290	437
luajit	55	174	408	90	651
multiprocessing.pool.map()	82	180	341	537	219
nicely	38	6	274	458	628
boarder	37	31	443	780	851
well01	15	157	64	296	837
patch	64	161	208	572	109
gnuplot.py	38	6	278	158	450
apreciated	68	207	465	432	343
programmatic	38	241	291	732	389
top-most	37	69	32	572	536
lot_	27	190	116	500	215
clarified	65	118	116	407	887
sensitivity	28	151	106	631	970
.if	47	224	162	424	888
.ix	92	104	23	733	92
f_j	72	186	25	683	19
.it	47	224	274	424	593
clarifies	65	118	116	590	328
lots	38	50	159	321	79
irr	79	193	148	638	347
mvce	34	173	359	709	208
minor=true	58	167	495	651	998
+1j	15	211	61	606	10
iso-surface	99	230	278	626	908
discipline	43	200	430	265	423
person_name	78	281	351	22	995
sep-09	43	105	231	71	255
nature	10	151	17	631	999
monospace	73	166	134	764	862
fruits	78	93	82	204	965
cula	16	174	125	782	392
navigationtoolbar	6	69	46	380	384
extent	58	243	494	207	449
accessed	74	171	386	691	161
gene_names	23	125	329	595	519
.dta	86	91	367	107	86
+13	15	211	162	364	265
+12	72	186	25	683	756
double_scalars	63	83	389	428	57
+17	52	0	263	284	19
+15	15	211	3	692	265
+14	32	78	346	177	576
.82	15	211	236	514	96
%%r	81	15	189	226	818
npoints	93	275	193	628	361
vbos	17	62	88	161	360
jack	35	207	409	20	336
&&	30	52	244	532	174
npy_intp	70	204	74	790	64
11.10	85	276	233	393	858
minuses	73	125	246	131	898
self-consistent	74	232	246	209	36
~2gb	86	182	373	549	236
customisation	64	136	195	525	328
fra	80	56	254	723	897
union	3	297	182	587	125
fri	67	163	284	718	483
fro	35	207	371	20	336
rgb	84	195	51	592	427
frm	52	0	349	539	582
.	29	28	306	209	36
muck	29	62	80	458	417
much	82	241	274	497	463
.to_excel	92	91	367	183	322
retrospect	65	291	258	236	887
spit	29	28	27	122	508
error1	83	206	178	361	383
dave	41	115	409	20	336
line_context	47	17	223	85	567
doubts	68	190	371	97	328
spin	23	14	267	710	841
datatable	86	99	275	601	843
unecessary	82	50	341	691	122
administrative	83	84	376	670	467
ndarray.reshape	1	294	112	232	726
employ	38	214	341	756	382
convertable	70	99	421	601	979
hard-coded	74	232	152	791	370
k	72	186	25	683	756
maskedconstant	75	106	421	594	203
imgproc	50	259	277	303	469
item-wise	75	106	10	605	684
n_x	1	57	112	232	981
n_y	1	57	112	232	981
data-structures	38	50	426	691	79
ditching	74	136	390	732	526
conditioned	79	23	332	638	970
n_i	72	142	268	683	756
n_j	72	142	268	139	756
unsubscriptable	63	83	383	616	286
actable	11	234	4	215	19
numpy.roll()	19	294	296	231	512
serialisation	38	99	246	663	141
hone	17	13	143	39	589
recover	74	232	37	548	673
13.10	85	276	233	393	858
subplots_adjust()	58	138	90	391	299
weightspace	65	291	258	407	887
non-broadcastable	63	83	283	715	39
cpu-bound	55	85	71	349	431
split	3	110	6	110	953
stdt	80	258	26	41	377
boiled	27	137	403	15	421
inadvertently	22	171	388	791	874
otypes	70	185	74	332	979
boiler	27	118	116	420	215
myfile.txt	76	199	286	283	413
0-th	40	64	154	519	981
.agg	87	164	493	76	419
numpy.newaxis	19	294	296	359	601
newline=	76	249	286	177	413
round()	57	89	8	788	979
academic	83	1	35	461	637
academia	34	190	69	461	637
corporate	23	84	69	128	467
massaging	27	137	159	110	328
bellow	27	137	459	15	421
appropriately	74	232	246	209	629
epochs	80	29	73	77	319
10000x10000	71	195	213	674	95
myfile.py	81	15	108	540	383
homogeneity	79	23	332	511	531
????	47	115	227	432	588
isodate	32	51	30	177	736
root-mean-square	79	23	125	638	11
lasso	28	26	354	176	816
hah	65	291	258	236	345
replace()	92	156	109	512	808
ham	47	17	223	4	557
had	29	62	272	791	874
process()	9	61	397	44	807
fortran	55	174	29	90	455
2**16	57	89	325	332	60
2-3x	88	180	55	337	89
has	74	117	306	209	305
zorder=-1	37	44	90	780	76
sorted()	19	12	455	480	806
64,201	43	105	231	71	255
rescaled	37	290	443	207	388
numpy.indices	19	294	296	291	601
survival	79	23	332	511	531
indicative	10	266	22	631	999
rescales	37	119	51	207	449
clustered	37	31	467	22	851
shadow	61	237	397	436	864
12:30	67	260	12	372	958
ctime	81	88	110	739	889
alice	78	200	252	20	423
ha=	58	138	265	651	224
time-series	77	29	299	77	340
rstudio	23	84	376	184	450
warping	99	288	282	315	138
beneficial	82	241	291	497	246
crowd	17	190	377	396	275
proportionally	77	266	106	574	668
deflection	79	275	7	673	643
x**	11	234	242	531	56
most_liquid_contracts	80	258	254	723	897
perchance	68	28	246	432	472
bottom	37	31	443	191	964
plucked	28	13	106	429	589
macosx10.8.sdk	13	170	50	104	485
completly	65	118	227	407	999
defaultdict	19	12	455	776	806
derivatives	79	10	324	487	610
np.linalg	16	94	462	782	800
evidence_id	3	110	93	155	410
x*2	87	55	201	562	591
a.all	87	52	198	605	985
binary_fill_holes	53	101	238	720	396
b*d	11	234	4	531	56
latex-style	73	125	248	131	304
hadamard	16	94	462	150	800
bamboo	23	84	376	184	467
double-quote	32	16	420	468	768
behavour	38	214	125	756	782
ar**	72	186	242	531	56
anomalous	99	151	106	631	970
acos	11	234	242	531	56
assign()	92	156	78	105	971
mpl.get_backend()	81	5	189	199	870
#next	47	224	180	424	588
hermitian	16	94	462	782	800
shoots	22	283	485	574	417
mbp	85	30	480	785	858
mbs	86	160	373	549	236
analytically	79	10	324	487	610
fabric	83	84	69	197	467
fromstring()	70	99	357	332	979
definiteness	98	148	273	141	306
tamb	87	149	447	460	612
array2	1	235	458	551	714
array1	1	235	458	551	714
array4	52	235	44	551	428
16000	88	142	73	80	54
grasping	17	43	227	335	803
gohlke's	13	261	5	797	391
array-	75	64	206	519	981
ssd_difference	52	0	263	284	19
43000	71	274	268	305	159
arr.size	1	57	41	232	21
array_	87	55	112	232	726
image.png	73	144	102	16	721
tokenize	81	37	286	130	204
denoting	74	232	37	746	868
)]))`	52	0	180	290	371
%3	52	0	263	290	855
algoritm	28	14	267	710	841
toolkits	38	38	46	380	384
else's	17	43	377	396	803
arrays	75	64	10	519	684
clause	92	68	119	478	126
thousands=	76	199	322	51	189
open-air	61	136	175	626	392
complications	38	241	159	334	327
smashed	3	110	6	390	984
arrayb	1	274	112	539	981
arraya	1	148	206	539	77
prev_time	52	258	162	215	99
screencapture	73	144	108	16	383
passenger	43	72	68	265	708
getp	6	44	90	418	481
df.dtypes	70	39	202	183	502
timezone	80	285	86	781	920
triangles	99	288	11	315	138
scipy.special	81	88	110	739	183
eventual	3	137	6	15	409
kolmogorov-smirnov	79	23	332	638	11
role	10	43	17	525	999
sub-setting	17	62	143	39	589
roll	40	13	246	190	118
intend	74	232	246	209	472
outage	78	93	317	463	984
somehting	87	214	246	673	512
intent	10	118	116	590	999
variable	74	237	397	436	864
2008-03-10	78	200	26	558	377
.div	87	47	181	290	593
date_parser=	92	185	226	641	698
mike's	34	173	116	97	308
difflib.get_close_matches	43	47	493	76	593
probplot	79	193	369	761	239
f2.f90	63	162	389	716	383
chain	10	13	341	534	135
pl.savefig	6	243	18	16	721
oss	83	30	69	197	637
affine_transform	53	230	128	617	716
m.astype	48	59	74	332	522
cudnn	96	30	480	785	634
osm	23	125	128	158	127
serially	23	85	294	370	257
chair	47	224	58	424	588
image()	84	125	248	607	304
amplification	29	151	8	654	62
ctable	86	68	379	611	820
py_initialize()	81	61	345	44	807
array.t	75	294	296	231	601
machd	50	259	277	303	469
celltext	47	102	280	122	475
page_name	32	99	93	177	410
effeciently	82	50	341	497	382
oversight	65	173	359	604	208
retbins	92	185	63	557	780
downloading	13	261	5	797	368
qvariant	9	106	331	594	699
jerk	17	291	250	236	345
choice	10	232	17	525	305
netlib	96	174	408	90	729
knapsack	28	173	324	214	970
stays	22	117	306	548	214
exact	29	28	306	209	905
minute	80	29	299	77	931
bbbbb	98	110	243	712	428
notations	75	214	113	200	650
skewed	77	151	467	22	851
defaults	64	185	152	641	638
multiprocessing	55	85	71	349	431
trails	68	13	106	432	571
heavyweight	38	1	291	317	564
securityid	3	110	243	41	984
chopping	74	13	143	458	589
incrementally	3	50	386	663	359
96x96	84	195	213	674	353
bottleneck.partsort()	19	180	55	337	89
polygonal	99	288	282	315	138
np.tan	11	234	4	531	56
areasplit	52	0	112	215	714
cross-validated	79	23	332	638	11
unintentionally	46	171	124	791	284
performant	82	241	378	573	29
modis	23	176	128	623	293
xvalue	60	155	240	11	285
.encode	32	51	487	477	244
e_data.csv	78	110	243	712	984
terabytes	88	182	373	549	337
df_full	43	200	93	204	410
address	34	173	116	97	161
promointerval	43	258	26	204	377
factorials	57	89	100	788	22
.date()	80	35	309	727	852
day-of-year	3	56	154	98	347
impacted	22	171	108	716	874
rolling_count	92	193	78	31	121
procedurally	17	137	459	161	457
queue	22	85	71	349	257
plt.ioff()	58	46	345	599	356
accomplished	74	232	6	40	673
throughput	88	266	22	574	487
docstrings	38	254	234	302	444
swinckels	35	238	326	187	308
concatenations	3	50	6	94	953
stock-info	3	110	6	370	67
dtype	70	59	74	332	681
write()	86	222	329	260	405
post's	34	118	116	97	142
warnings.simplefilter	63	39	389	171	686
randoms	93	23	332	511	239
self-sufficient	27	293	403	420	579
instal	83	206	178	202	380
isntead	40	12	246	190	68
dostuff()	47	115	397	691	699
working	29	28	88	161	473
precision=3	57	89	452	171	290
27000	88	160	220	80	54
readability	82	180	479	537	246
!!!!!!	35	207	371	205	767
opposed	74	117	152	209	638
sql.read_frame()	86	68	119	478	126
familar	17	43	377	396	803
full-rank	16	94	462	782	800
nexts	98	148	162	141	175
neurolab	28	26	354	135	816
consoles	83	15	189	540	818
optmization	38	62	341	525	79
cardinality	10	266	100	574	970
lowercase	32	16	420	482	898
plt.scatter	25	155	208	418	910
non-square	16	94	462	782	95
originally	29	28	306	791	874
oscillator	28	14	267	761	942
valores	11	201	4	664	99
following	27	137	459	15	156
dataframe.reset_index	92	156	78	763	971
mirrors	74	232	152	122	370
locks	22	187	108	349	248
incremental	82	50	341	98	359
numpy.poly1d	79	10	324	363	620
usng	47	110	459	15	156
listens	90	84	376	184	831
sql's	3	68	119	703	234
maxnlocator	58	44	166	341	184
threadpool	55	85	71	349	431
subroutines	55	174	408	90	455
type3	78	131	77	182	995
significant	88	266	100	574	246
.weekday	43	72	309	727	852
read()	76	54	382	306	405
fmin	79	22	324	566	13
atan	11	234	242	664	292
carefull	83	171	80	202	564
.png	73	125	248	276	304
backend_pdf.py	30	259	478	159	960
conscious	10	231	17	500	246
date_ret	11	0	4	215	288
quadrant	33	281	443	191	725
subdivisions	77	266	114	574	277
mango	78	200	252	463	604
pulled	74	171	27	370	161
-hayden	35	238	409	407	887
tmp_g	6	46	345	44	231
upcasted	70	99	74	332	979
zmax	98	148	269	141	221
webpage	23	254	27	302	127
ax.get_ylim()	58	44	494	787	162
below-	74	137	459	15	421
years	80	163	299	723	897
professors	17	1	479	396	275
structuring	99	50	37	663	744
np.unique()	19	42	78	105	971
ovals	61	31	467	212	951
disconnect	90	187	32	329	83
prc_path	3	110	6	155	410
runlengths	98	114	127	73	744
jim	78	115	252	20	423
troubles	29	62	88	161	874
.to_datetime()	92	35	245	781	920
matplotlib.colorbar	81	88	110	739	584
jit	55	174	422	90	219
np.hist	0	275	226	557	780
troubled	29	43	227	432	803
tpclose	43	72	231	265	708
modestly	82	241	100	497	463
clock()	88	180	55	337	487
18563	99	288	185	293	716
year1	43	52	180	290	437
year2	11	52	180	215	437
sorter	19	42	296	524	886
ammended	27	62	88	791	905
drilling	22	13	143	39	589
aprox	88	160	220	80	54
columns=range	1	201	180	50	99
sorted	40	175	129	524	9
\	32	51	487	151	244
set_value	92	156	78	47	130
compare_fn	12	256	173	196	432
a.merge	44	2	253	33	895
didn	29	62	410	609	457
24.1	12	256	236	196	432
pandas.dataframe.to_csv()	86	110	275	183	519
24.3	85	197	480	196	432
textpath	81	88	110	739	584
t+dt	11	234	242	531	56
instability	10	231	8	654	970
stackexchange	34	173	247	97	216
quarter	80	56	299	723	897
seldom	10	241	17	500	812
retrieve	74	232	37	110	161
vanishingly	10	231	395	500	999
pablo's	35	238	326	187	308
~4x	88	180	55	337	89
e-13	77	281	97	141	762
canvas.mpl_connect	90	69	46	572	112
entering	74	171	386	122	526
interned	57	99	317	141	979
lagrangian	28	10	324	744	610
seriously	17	190	377	500	812
df.max()	87	52	68	770	985
internet	34	62	247	161	746
axis=none	87	57	2	621	130
ffisegydd	35	207	409	20	336
-fopenmp	96	170	133	650	30
bisect.bisect	19	214	295	684	782
complicates	40	50	10	548	122
21.72	15	272	162	133	888
dgeev	16	94	462	782	800
21.78	15	256	236	514	980
deliver	23	43	294	500	568
~40	88	160	220	80	54
byte	32	100	190	477	261
.index	43	47	68	290	827
myframe	44	134	260	290	827
setdefault	19	12	455	776	806
3-digit	74	232	459	425	898
0+0j	11	234	4	531	56
skiprows	76	54	322	51	698
initiate	22	171	294	23	629
quibble	10	43	17	200	812
neglect	77	151	467	646	762
emotion	76	199	286	283	754
irfft	11	292	20	430	547
saving	73	125	248	276	304
symmetry	77	292	20	679	547
subplots_adjust	58	138	494	391	299
spoken	17	62	88	161	746
random.random	93	123	193	628	507
one	74	232	37	209	36
theano.tensor	16	94	462	150	800
colourbars	37	31	467	780	851
export_graphviz	9	106	140	684	699
my_variable	43	52	68	290	437
affords	82	185	291	525	628
numpy.exp	19	55	201	562	292
1.50	11	186	162	606	56
types	70	99	421	601	843
thru	74	232	497	534	118
oversimplified	27	118	116	187	308
lingering	65	291	88	236	345
suffixing	47	109	397	436	699
nansum	19	214	424	414	608
numpy.zeros_like	1	57	112	232	21
object()	52	19	112	471	714
fancyarrowpatch	25	161	90	543	109
spyderlib	90	15	108	540	818
arround	29	28	88	161	874
on=	44	2	253	427	176
specialists	17	231	88	500	275
@~unutbu	29	13	246	631	472
new_dataframe	44	134	260	290	827
s.index	44	134	260	700	827
workclass	43	47	68	265	708
setattr	9	104	158	436	699
fftconvolve	19	101	428	166	547
interp2d	53	101	238	720	396
winpython	83	128	5	685	391
ffmpeg	73	144	327	147	107
tile()	75	106	295	139	382
wandering	17	43	341	537	219
numpy.fft.rfftfreq	79	10	140	511	239
turned	29	62	143	458	874
locations	74	232	37	646	868
shx2's	19	180	187	337	308
borough	78	93	132	463	832
dbapi	86	68	119	478	824
_offsets3d	25	102	208	543	910
zoo	38	6	367	703	392
intends	10	118	421	590	999
phi2	11	186	242	531	56
xming	83	84	376	184	831
phi=	11	194	269	664	743
plattform	83	206	429	197	467
funcion	79	214	140	684	231
twodim	75	148	206	476	650
printer	73	125	248	276	304
offload	55	85	71	349	431
opposite	40	13	182	661	363
buffer	9	184	153	358	405
numpy.lexsort	19	42	296	232	886
id=5	98	258	424	796	203
printed	29	28	306	122	508
id=2	98	258	82	796	984
np.atleast_1d	1	57	112	232	280
evaluator	55	214	397	756	135
phil	35	238	187	187	142
sortedness	3	156	182	354	125
-statement	81	263	108	361	383
deviceused	78	262	223	204	454
phis	71	64	10	519	684
redirected	83	187	108	361	248
s.iloc	52	0	263	284	855
dimensioned	75	50	10	519	684
img.sum	1	57	41	232	726
downscale	84	192	128	626	353
friction	28	14	114	710	841
clip_path	25	161	90	543	683
cbook.py	50	145	118	483	927
inconsistent	29	231	395	335	568
aggressive	82	241	291	334	327
imagined	65	291	274	236	767
1kb	88	182	373	549	236
.254	15	211	236	514	96
recomended	38	6	278	317	450
%j	80	205	346	125	879
autofmt_xdate()	51	290	166	706	76
pandas.parser.cparsererror	63	244	283	715	123
efficently	3	232	6	110	141
windowed	40	292	428	430	547
zipfile	86	222	382	306	405
simplistic	82	137	378	334	29
build_src	83	170	178	165	30
ploting	61	136	175	626	847
fig.add_subplot	58	139	494	324	543
awaiting	34	118	116	97	328
14:13	67	163	284	718	483
trys	75	106	421	684	699
new_matrix	16	94	462	562	800
could've	65	291	258	791	874
dietrich's	35	238	187	187	308
plt.colorbar()	25	119	320	49	845
key=lambda	87	0	21	76	591
vision	28	230	377	396	275
dgesvd	81	204	29	790	64
df1.b	98	93	82	558	965
find()	19	214	125	703	392
attenuated	77	266	148	574	227
decision_boundary	53	214	140	684	481
my_protein	52	72	68	290	622
matplotlib.animation	6	6	278	158	107
impressions	78	200	430	204	423
euclid	38	214	125	756	782
start_codon	43	72	68	289	199
alex's	35	238	187	187	308
drawnow	6	6	278	158	450
np.min	87	57	121	673	608
np.argmax()	98	281	443	191	358
cumsum	19	193	78	614	121
df.head	27	134	202	348	188
refreshed	90	69	388	572	536
fir	77	292	428	430	547
pluck	74	232	37	746	868
apply_along_axis()	63	83	226	641	676
upper_left_vert	15	211	214	364	99
ligand	33	281	114	191	408
concentrated	77	266	22	212	762
circumference	99	288	282	212	138
v0.11.0	85	276	151	685	380
flipped	40	195	443	661	363
paring	17	13	143	39	589
s	47	224	187	209	308
stype	63	244	58	532	888
expended	30	162	80	165	588
can't	29	28	410	209	457
allowance	98	146	317	141	509
set_data	6	161	208	543	109
usecase	82	241	291	573	669
data.values	75	294	296	231	782
figtext	58	44	265	651	890
curr	78	258	243	558	377
default=none	47	106	461	471	881
date()	92	35	245	560	333
x.head	87	55	493	76	593
accelerometer	77	29	365	676	210
west	33	176	132	644	563
subok=true	48	59	2	621	681
savetext	19	54	382	641	782
_don't_	10	241	246	500	118
compare-cumsum-groupby	19	137	109	512	808
wants	10	117	152	233	638
d'oh	65	291	258	407	887
rawkit	38	6	125	302	564
formed	74	64	6	746	673
0.8.1	46	221	151	331	435
0.8.0	46	221	124	331	435
0.8.3	46	221	151	202	435
readings	77	29	77	182	210
photos	84	195	128	429	353
asnwer	65	291	258	407	887
northamerica	43	72	68	265	708
.the	12	281	454	746	868
former	10	117	17	209	305
ivec	52	19	263	284	19
hashingvectorizer	28	26	354	135	816
dataset1	98	281	287	556	358
squeezes	48	294	74	231	782
squeezed	37	31	443	207	851
situation	10	137	17	525	999
user01	67	260	284	133	24
graphed	61	290	175	22	851
c1083	63	244	283	553	323
plt.subplots()	6	139	18	324	543
dubious	82	241	395	334	152
list.index()	19	106	296	231	782
grapher	83	206	178	595	127
nbin	89	142	207	139	393
technology	23	1	69	317	79
first_layer	11	52	269	309	221
verified	29	171	272	791	905
12464	77	13	443	191	762
hostname	30	162	478	468	588
subplot_adjust()	37	290	467	207	370
%y	80	205	346	125	879
verifies	9	220	331	594	782
margins=true	44	164	181	700	121
visually	61	151	175	22	625
assigns	74	117	152	58	638
transforms.py	50	145	118	168	679
cjarray	52	19	263	284	855
edges	99	288	11	315	138
wired	29	28	227	361	473
_is_	10	118	395	791	812
random.sample()	93	123	193	628	361
plt.pcolor	25	119	320	193	845
tracking	23	14	294	710	841
60,000	88	160	220	80	54
peculiarities	10	227	17	302	305
df.index.levels	52	0	461	290	827
somevalue	52	148	461	471	622
dimension	71	64	268	519	981
persistently	86	222	426	611	820
qtprocess()	90	137	46	158	384
being	29	28	306	791	36
sum2	1	19	112	232	726
sum1	52	211	162	606	10
recycled	22	61	388	358	282
sort_values	92	175	78	105	971
generator	93	12	455	480	806
occluded	90	31	467	212	851
d3.js	23	125	278	158	127
aborts	30	162	486	361	383
0.054932	15	157	64	296	837
haystack	75	148	206	13	714
)']`	43	47	231	71	708
j-th	72	132	273	73	77
rejoin	3	110	6	458	953
decomposed	16	94	462	150	988
sums	98	193	154	98	347
f.read	76	199	30	283	736
gestures	90	187	108	624	248
kindall	35	115	409	20	336
preference	10	241	17	500	305
world	17	43	377	396	275
enums	38	237	291	436	354
decomposes	16	94	127	150	988
pd.hdfstore	86	222	379	217	820
fractile	98	281	454	141	66
contourlines	61	31	467	212	851
satisfactory	29	28	272	161	457
couldn't	29	62	410	161	457
pandas.concat()	92	156	78	33	971
magma	38	1	80	202	564
parent()	92	214	295	684	231
diving	17	62	143	312	589
assertionerror	63	83	283	715	39
new2.py	50	145	118	168	679
pinv()	16	94	462	782	800
cavity	99	288	282	631	762
python-dap	13	170	50	104	482
90x90	71	64	268	519	981
semantically	10	104	182	200	154
restoring	90	171	388	572	107
arrow	37	31	443	212	276
retains	74	117	152	548	305
return_counts	19	42	296	121	886
scipy.optimize.curve_fit()	79	10	324	566	13
filtsize	1	275	295	305	231
10.6.7	85	30	480	685	858
10.6.6	85	276	233	198	858
10.6.4	85	206	233	198	858
10.6.8	85	276	233	198	858
c-loop	88	180	55	337	219
non-missing	98	56	148	544	347
sys.version	81	5	189	199	870
340.99	80	258	26	372	377
g.draw()	6	46	321	418	162
2011-1-1	43	72	231	265	708
skew	77	23	332	10	347
2403950	80	258	254	723	931
tosum	1	180	55	139	89
snittpris	43	72	231	265	708
cs.collections	52	224	461	471	622
pivot	3	156	6	763	125
conceptually	10	118	227	335	999
arctic	77	176	128	623	293
glean	34	28	227	97	472
readme.osx	30	170	80	165	960
redirection	22	84	376	184	383
read_fwf	76	54	322	51	698
bubble	61	136	175	267	276
followers_df	3	110	243	155	984
continents	61	176	24	757	786
d.png	76	144	346	16	721
wits	17	62	250	753	180
plot_wireframe	25	161	208	49	481
plt.pause	6	46	345	599	811
abused	55	214	295	200	382
pull	74	13	37	110	161
rush	65	291	258	236	180
rage	75	214	295	139	382
%time	81	15	189	226	383
dirty	82	241	378	573	669
stockid	98	258	454	155	984
scipy.org	83	254	234	302	565
pulp	28	10	324	214	610
rust	55	174	29	790	64
zsort=	60	155	240	495	285
creat	74	232	386	746	359
df.to_csv()	76	54	322	183	698
associating	3	232	386	746	526
follow-up	34	173	116	97	216
formulation	79	118	116	590	999
watched	34	62	247	233	324
jargon	10	43	377	396	354
truncatedsvd	16	26	354	135	816
ideally	74	232	246	209	36
national	78	116	406	742	765
numpy.maximum()	19	214	140	684	782
thresholded	99	230	428	166	353
introspection	38	109	291	29	79
1440	12	142	220	528	175
0.1354	15	211	263	215	288
df.to_html()	73	68	275	183	322
visualising	61	136	175	626	625
createarray	0	106	295	684	231
tricky	82	241	395	334	327
df_index	44	164	181	700	827
posible	47	137	459	209	472
eigs	16	94	462	782	800
sns.barplot	51	136	351	272	664
tricks	82	241	341	321	79
eigh	16	94	462	782	800
gamma.fit	87	275	295	684	512
recognising	29	28	152	791	999
ds1_new	52	0	263	284	855
dataarray	75	109	386	663	699
scn	63	244	283	532	323
sci	64	166	390	764	862
10-30	88	197	73	196	217
caused	29	231	306	173	378
beware	10	231	17	200	305
sca	6	44	494	418	543
.remove	60	57	112	485	162
onehamming	98	194	269	606	221
mplwidget	6	69	46	380	384
sharex=false	58	138	495	651	162
numpy-1.9.2rc1	13	170	244	138	174
causes	29	231	306	173	568
end-users	83	84	80	197	564
cvxopt	16	94	408	744	651
lognorm	25	119	320	49	296
.nanos	48	201	180	50	99
micro-optimizations	55	180	341	537	219
matplotlib.get_backend()	6	38	18	199	870
sympy	38	10	324	744	610
norm	16	94	185	150	800
metadataframe	3	50	6	663	843
roadway	78	286	163	479	798
2015-03	80	163	254	723	931
gfortran	96	170	50	650	482
x_testn	48	274	180	172	159
ro	60	155	240	603	285
sans	73	166	134	764	862
m.dot	16	94	462	562	800
shenanigans	38	137	246	525	118
insufficiently	34	115	252	97	423
.set_xlim	58	44	494	341	388
sane	10	241	17	573	178
the_list	52	0	461	232	855
small	27	266	100	497	668
abbreviated	27	137	459	15	421
quicker	82	241	378	573	29
199	12	279	162	528	212
198	12	279	488	111	465
195	12	279	488	751	432
194	12	279	488	751	465
197	12	279	488	751	432
196	12	279	488	751	465
191	12	279	488	751	465
190	12	279	319	528	106
193	12	256	488	751	432
192	12	279	488	751	27
past	29	62	272	161	746
displays	74	117	175	122	508
pass	74	232	226	641	638
pycms	38	6	80	607	564
investment	28	150	377	396	275
otoh	82	241	246	497	463
numpy.all	87	42	198	13	608
clock	88	29	73	574	931
-based	38	214	341	756	382
clf.predict	47	134	349	539	412
subspaces	40	64	127	150	988
7gb	88	283	373	549	236
full	27	293	459	420	421
hash	3	297	163	776	903
methodes	65	118	148	407	887
optparse	38	214	291	756	564
figurecanvaswxagg	90	69	46	380	384
fips	43	93	82	204	965
november	80	163	254	723	72
display=	30	166	452	764	588
fipy	53	43	377	396	564
experience	17	1	377	396	275
prior	29	171	306	791	36
periodic	77	292	20	430	547
friday's	80	56	254	723	897
*256	1	219	180	215	19
*255	48	219	180	401	522
-1073741819	63	244	108	553	248
followed	29	28	272	791	36
over-simplified	65	118	116	590	421
reclaimed	22	61	153	358	282
re-drawn	6	46	345	572	356
re-compute	6	161	32	572	112
to_records	92	156	78	183	971
r'slope	60	155	240	424	285
follower	98	146	454	796	984
type_check.py	50	145	118	734	679
3.2778	15	157	64	296	144
attendance	3	150	6	479	604
target_value	72	19	273	73	756
countrycode	78	93	82	390	965
automate	23	232	294	110	625
sp500	51	34	351	4	620
helps	68	207	116	432	328
time_interval	93	123	173	139	60
door	90	181	250	624	193
numpy.linalg.pinv	16	94	125	782	800
initiated	22	171	386	595	161
tester	23	171	459	595	421
company	78	150	445	479	604
int_t	70	204	74	332	64
corrected	65	118	258	407	887
chucks	3	29	6	94	953
tested	29	28	272	791	905
r1	72	130	431	653	624
numpy.lib.recfunctions.append_fields	75	294	10	231	782
r2	72	130	431	653	624
installing	13	128	5	104	482
autocomplete	90	15	189	29	818
learn	17	43	377	396	803
knocked	27	137	459	458	417
non-symmetric	16	94	462	782	800
scramble	74	195	37	122	673
gaussian_filter	53	101	428	166	547
ponts	99	288	114	646	616
numpy.piecewise	79	214	140	684	13
huge	88	50	100	497	463
respective	74	232	37	746	868
simps	79	10	140	416	13
pyplot.bar()	51	136	24	272	847
simpy	17	6	377	396	275
hugo	65	291	258	236	345
hugh	35	238	326	187	336
enlarge	37	31	443	207	449
intended	10	28	395	335	999
unixodbc	83	84	178	197	467
variant	74	137	459	209	669
pd.get_dummies	44	39	168	181	827
filename.csv	76	199	286	283	413
bioinformatics	28	14	267	425	866
f_no_dot	88	142	55	337	89
y_bar	72	281	25	129	358
resemble	61	151	175	116	951
s.resample	43	149	447	460	612
bars.index	35	44	409	341	184
twisting	17	13	88	236	345
speeds	82	180	55	337	89
11.5	88	256	173	196	432
nzec	63	244	283	361	39
r+	76	249	286	283	413
exclusions	3	227	6	354	36
02:30	15	256	236	514	980
circularity	99	151	106	631	762
mktime()	47	285	245	781	920
installed	13	128	5	104	482
resorts	9	109	331	691	782
paper	28	254	267	302	142
scott	35	115	409	20	336
replies	35	207	371	205	767
installer	13	261	5	797	391
unique_df	43	72	93	386	569
roots	79	10	324	487	610
discretizing	79	10	324	487	762
gentlemen	68	207	371	432	328
netcdf4.dataset	47	144	58	424	588
symptoms	29	231	306	173	568
plotters	37	31	467	207	668
bypass	29	28	341	173	472
isaac	65	207	371	407	887
sauce	17	43	377	396	571
phyl_ax	6	161	90	543	699
colleague	17	62	88	233	874
entire	74	232	497	534	36
one-file	83	241	80	197	564
set_yscale	58	44	195	341	599
nlogn	89	180	207	261	90
non-identical	75	64	10	519	684
everytime	22	187	388	190	214
ast.literal_eval	92	12	455	480	808
courses	28	159	430	149	275
piping	23	222	329	147	257
shocking	29	283	485	358	387
2011-12-31	43	72	231	2	24
slist	43	72	93	265	622
quesion	34	173	359	97	142
detect	74	230	37	429	868
figure.savefig	73	144	18	16	721
gfs	23	176	77	623	293
00:30	67	260	12	372	958
numeric	3	99	168	601	979
deterministically	29	227	306	631	905
300ms	88	197	220	80	89
9x9	71	64	213	738	95
operation	40	50	154	98	382
prototypes	64	6	128	209	141
;))	34	173	35	302	142
zero-size	63	83	283	715	39
.fill	47	134	93	471	622
research	17	62	247	161	275
senderle's	19	238	187	13	308
denoted	72	186	25	746	988
offline	23	84	250	149	127
occurs	29	28	306	361	473
os.fork()	9	85	71	349	807
savefig.dpi	73	243	18	764	721
gf4	9	99	331	594	979
_macosx.so	81	144	110	381	584
eigenvalues	16	94	462	782	800
x_vars	90	187	108	122	508
definition	74	275	140	684	231
uwnd	47	253	30	283	622
covariogram	11	186	242	531	11
wide_to_long	92	156	78	200	971
known_array	98	148	206	141	84
multi-index	3	156	65	354	125
rolling_mean()	77	193	148	98	347
widely-used	28	1	69	317	564
df_	44	134	181	700	827
pd.panel	44	134	181	700	827
sound_fc	52	19	497	534	77
brutally	88	180	100	497	463
preservation	10	50	182	663	414
f.seek	76	54	382	283	736
display.precision	60	243	452	171	290
firsts	65	263	116	587	655
dfx	44	134	65	155	827
dft	77	292	20	430	547
swipe	90	187	108	624	214
struct.unpack	70	100	357	332	522
dfp	44	134	26	155	827
dfs	3	2	260	33	176
dfm	44	2	253	558	965
dfn	44	2	253	33	176
pastable	27	293	83	420	579
calculations	74	50	341	98	382
dfg	43	134	48	204	832
dff	44	134	260	766	827
psps	11	234	4	215	99
a.reset_index()	44	164	181	700	895
dfc	44	97	65	155	154
dfb	44	97	65	558	965
fortran77	55	174	408	90	455
paul's	35	238	187	187	308
5.92	60	155	240	193	910
.drew	65	291	258	407	887
dataframe.replace()	92	214	109	512	808
df=	76	199	260	348	736
datafame	3	110	6	354	317
df5	43	2	68	290	827
df4	44	134	82	558	965
df1	44	2	65	558	965
df0	44	93	65	558	965
df3	44	2	260	33	965
df2	44	2	65	558	965
verbose=10	63	5	452	199	443
vely	33	102	418	319	910
qustion	29	137	116	97	472
scipy.weave.blitz	55	174	422	90	219
conjugate	16	292	462	782	547
feature_2	67	17	351	4	385
cleverness	82	241	88	334	327
feature_1	78	17	351	4	385
reimplementing	38	214	125	756	382
half-open	93	123	436	628	361
sell	80	258	299	581	67
ccm	15	213	236	514	51
self	0	109	397	44	8
107.000	15	157	64	296	837
also	29	232	246	209	36
recognizing	29	28	152	173	568
0.12.0	46	221	151	157	621
available_values	75	297	100	139	509
sharpe	79	23	148	638	347
singles	70	99	93	601	979
x.shift	87	55	493	76	593
masked_invalid	75	146	424	414	509
ax.annotate	58	44	265	651	224
lowest_gridpoints	98	148	206	141	77
virus	28	14	267	425	841
ccd	84	195	128	674	353
understands	38	117	152	601	638
fvector	75	148	206	476	981
incase	29	291	250	233	345
sometimes	29	231	395	209	36
rectified	29	28	306	791	473
m_out	98	146	497	534	77
ufunc's	19	214	422	756	761
math.exp	57	55	201	664	743
wording	10	118	307	590	216
ambiguities	10	231	17	335	215
ugh	65	291	258	236	345
blended	61	31	282	212	138
sublist	98	297	273	73	77
colorized	84	195	51	674	353
overwhelmed	17	62	143	39	746
matplotlib.contour	29	28	227	791	473
occupation	22	56	148	574	347
]]=	52	0	263	364	288
container_commands	83	170	376	184	467
wraps	38	117	152	58	370
columnn	80	56	445	41	639
]]:	52	0	263	284	855
sega_sai	35	238	187	187	308
2368999.932089	52	19	263	364	881
columnf	43	72	68	265	708
columna	43	93	82	406	965
columnb	43	134	223	406	965
pandas.dataframe.describe()	92	99	424	183	322
clipboard	27	293	27	110	188
df.map	44	134	493	76	827
read_sql_query()	92	68	119	478	824
]]'	52	19	263	284	622
df1.index	44	2	260	33	827
columns	3	110	6	587	984
store.append	44	134	379	217	824
]]]	52	0	303	364	265
os.path.basename	76	199	30	283	736
sunny	78	56	445	41	604
cbar_ax	58	44	226	641	683
remedy	68	28	227	432	472
compass	33	176	77	623	293
logfile	90	187	108	361	383
image.fromarray()	84	219	102	607	427
distraction	68	207	371	205	345
column-	3	297	182	587	984
*-devel	13	170	50	481	174
adapts	64	232	37	525	370
savefig.bbox	76	144	452	764	721
seperated	32	110	420	468	768
piped	86	222	327	147	405
column=	60	155	240	495	12
column4	43	93	82	558	965
date-time	3	35	245	781	410
column1	43	93	82	558	965
]]`	52	19	303	364	640
column3	98	93	82	558	965
column2	43	93	82	558	965
insane	68	241	395	731	327
318	67	256	236	514	980
313	12	279	488	111	132
312	12	279	488	751	465
311	12	279	488	111	132
310	12	256	488	751	465
317	12	279	488	111	430
316	12	279	488	111	465
315	12	256	488	751	465
314	12	267	488	111	132
28x28	71	195	213	674	95
matplotlib.__file__	30	5	478	199	870
2dim	75	64	10	519	981
overboard	17	291	88	236	327
multi-indexed	3	156	6	354	125
#the	47	224	30	424	736
analog	77	292	365	676	257
python33	30	162	486	247	344
matplotlib.collections.pathcollection	6	161	208	543	481
deactivate	90	170	244	165	181
exchange	34	116	430	581	67
numpy.save	86	222	382	102	820
nitpick	93	89	201	664	361
facetgrids	51	136	175	272	847
warn_bad_lines	76	185	452	171	686
c-level	55	174	422	756	219
sparsely	71	64	10	519	684
pprint.pprint	9	109	331	594	386
zodb	86	222	426	611	820
synchronizing	74	85	294	94	36
446	12	279	488	111	888
untouched	40	263	182	548	655
)')`	47	51	487	177	244
np.broadcast	1	57	296	232	726
add_z	29	28	306	122	473
scipy.spatial.distance.euclidean	16	178	185	293	716
21:00	67	260	12	372	958
follow-ups	34	190	116	97	216
scipy.savetxt	60	105	180	177	593
examle	64	136	175	158	854
gca()	6	139	494	418	543
connection	23	68	119	478	126
author_id	78	150	252	479	604
np.ones_like	1	57	296	232	21
bell	77	23	332	511	531
acted	45	232	128	429	673
incompatibilities	83	128	211	197	637
adaptation	28	238	187	525	308
23:00	67	260	12	372	958
store_fast	75	106	295	684	699
210018	78	56	445	796	347
210019	47	224	162	133	888
ax.matshow	60	155	240	193	162
belt	38	1	291	321	275
mkl_num_threads	55	174	376	184	467
array_like	9	106	421	594	681
tablename	47	224	30	204	454
suburbs	78	150	430	463	604
bbox_to_anchor()	51	136	90	391	481
kronecker	16	178	154	150	800
d.something	52	72	68	770	985
webjob	83	206	178	685	467
top-down	37	31	467	780	851
adaptable	82	241	291	497	29
awake	65	291	250	753	180
millis	80	35	245	781	920
wikipedia's	28	254	234	302	531
presses	90	187	32	624	112
underdetermined	79	10	324	214	610
exponential	79	23	332	511	620
expanded	74	137	116	40	673
budget	78	258	445	479	604
admire	17	207	274	205	767
pressed	90	187	32	624	536
drawable	6	161	208	543	109
new_shape	1	57	41	232	21
vol	98	258	26	796	377
averaging	77	29	148	98	347
von	79	23	332	487	951
binding	9	237	397	436	864
despine	64	44	90	642	683
.__getitem__	0	12	461	232	726
signal-processing	38	43	17	500	542
numpy.ascontiguousarray	48	57	112	232	21
re-shape	82	241	10	519	678
numpy.round	93	89	201	642	361
scipy.special.expit	79	10	324	566	13
metric=	16	178	185	293	716
offence	65	291	258	236	345
ugliness	82	241	341	334	219
full-screen	90	187	18	276	536
numpy.random.binomial	93	214	295	641	512
existent	3	146	388	587	155
2014-12-28	27	118	424	407	887
climb	17	62	88	39	589
infamous	29	28	306	122	473
assertalmostequal	57	89	8	457	907
knn	79	26	354	135	816
df2.index.hour	43	47	231	700	708
nattype	9	99	383	616	477
six.py	30	162	486	247	344
object_	70	99	74	332	681
recoverable	32	99	329	601	519
v1.4.1	46	221	124	604	208
v1.4.0	46	221	124	681	284
v1.4.3	46	221	151	681	252
a_2	43	67	223	145	764
a_1	72	186	25	531	56
_specific_	27	293	116	97	328
retrive	3	232	37	110	125
optimize.newton	0	224	30	488	881
cufft	40	227	17	537	382
vvm-vvs	11	234	4	531	99
dataframe.to_html()	86	68	367	183	322
settingwithcopy	10	104	389	733	154
img_hogs	29	28	349	539	881
multi-year	80	56	299	77	897
y+1	72	102	418	129	591
parents	6	109	397	44	807
ax.plot()	6	139	90	418	543
comprehensible	82	241	291	334	628
csv_chunks	76	12	461	433	68
float32	70	100	74	332	522
spin2	19	214	295	684	231
a_t	72	102	25	129	756
emergency	67	181	64	24	911
recompile	96	174	5	650	455
couple	27	62	159	161	746
a_y	44	93	82	204	965
a_x	43	200	82	204	965
str.contains()	92	156	109	105	808
event_date	80	258	26	727	377
a_n	11	186	242	531	56
a_l	52	148	273	284	19
a_k	11	234	4	531	56
x_order	51	185	195	641	12
a_i	72	186	25	683	756
counterintuitive	10	231	395	335	327
plot_date()	51	136	195	272	875
bond.to_cash_flows()	92	134	65	155	508
spine	37	161	90	322	683
y+h	60	102	418	129	159
interweb	23	254	27	302	746
to_rgb	63	83	283	715	311
individuals	78	150	445	479	604
applicationwindow	6	69	46	380	384
sklearn.svm.svc	16	94	462	782	800
libpng-devel	13	170	50	104	482
summarise	3	137	6	354	953
spins	22	283	114	710	563
methods	38	227	159	756	79
ijv	86	222	329	455	519
bounce	22	187	294	39	257
methode	82	241	246	573	472
ncol	1	274	112	677	442
dataframe.to_csv()	92	68	275	183	322
00.000000	67	260	12	372	958
ijk	1	178	473	743	884
sampf	11	234	4	664	743
*10^7	98	142	162	141	397
measurements	77	29	77	182	210
behave	10	231	152	335	638
extra_shapes	99	250	497	646	563
inserting	74	263	386	548	526
teradata	86	68	119	478	126
method2	88	180	55	337	89
method1	88	180	55	337	89
method=	53	149	297	460	691
obscures	10	117	17	732	305
obscured	37	31	467	212	851
ij-	32	178	473	743	884
np.subtract	19	57	296	113	726
send_msg	43	72	68	265	708
deserved	65	190	3	702	915
simplify	27	137	116	525	328
argsort	19	42	296	13	886
deserves	34	190	307	702	216
chi	79	23	332	638	11
1gb	88	182	373	549	236
well-versed	17	43	377	451	803
intc	70	100	325	86	22
pp.close()	22	46	108	599	356
into	74	232	37	110	953
intp	70	100	74	332	681
ints	70	99	325	601	979
andrews_curves	0	134	65	155	231
contributor	28	151	106	631	142
set_ylim()	58	44	494	341	683
scilimits	60	155	240	495	285
interactivity	90	6	278	158	450
uncertainties	79	23	332	761	11
span	37	29	299	77	931
nicer-looking	64	44	90	78	683
spam	34	150	164	584	557
hyperspectral	71	195	213	674	175
biom	86	222	329	260	519
.a1	1	57	112	232	726
downloadable	23	254	27	761	421
eric4	30	162	329	247	344
opens	90	187	108	540	248
toeplitz	16	94	462	150	800
fragmented	55	85	100	128	840
int*	70	204	29	790	64
originallist	52	19	160	284	855
timedeltas	80	35	245	781	920
int8	70	100	74	332	522
numpy-sharedmem	38	254	234	302	564
astronomer	17	43	377	396	803
paired	3	297	454	646	984
.at	92	104	23	733	92
faded	20	119	259	757	786
.ax	78	116	430	581	423
filled-in	74	146	428	429	509
plt.gcf()	6	139	18	418	543
natively	38	6	426	317	79
unsafe	63	231	389	716	215
noodling	17	62	272	161	746
f77blas	96	45	133	650	729
int_max	57	89	325	664	22
chat	34	173	141	669	208
newtonrap	44	2	260	700	827
x-positions	61	281	443	191	358
puzzling	29	231	395	335	48
np.ravel	1	57	296	232	280
pygrib	61	192	128	626	293
revision	46	173	124	604	208
la.inv()	9	184	153	691	282
integer-based	40	104	23	733	92
suppression	10	231	17	631	303
lang	78	237	93	463	423
lane	47	67	256	145	764
land	99	288	282	646	563
methodologies	3	227	6	663	36
100*100	88	142	220	785	89
algorithm	28	151	267	293	841
iid	77	23	114	511	616
mayavi's	53	6	278	703	542
6.26	52	52	198	770	985
train	28	26	354	135	816
49.83072758	15	157	64	296	837
hashmap	3	297	163	776	903
scipy.ndimage.filters.generic_filter	19	214	140	684	782
noobs	10	43	291	321	354
toggle	90	69	32	175	536
broader	10	190	307	590	216
amiss	29	28	227	361	473
contourf	25	119	320	49	845
cython	55	174	29	90	219
numpy.argmin()	19	42	341	13	512
turkish	32	16	420	131	898
item_name	43	200	223	145	567
copy-pasting	27	293	305	420	188
contours	61	176	282	212	138
dickinson	35	238	326	187	336
resources	23	254	69	321	79
uploaded	27	293	27	122	127
.rst	86	162	27	595	127
15:23	67	260	12	372	958
downsampled	77	195	148	674	353
double-checked	65	291	258	407	905
optimize.fsolve	79	10	324	566	292
decorating	19	214	422	684	761
ax.add_artist	6	44	90	418	481
minerals	50	145	118	734	679
flatten=true	84	219	102	401	427
precompute	75	50	497	139	68
qt4agg	90	38	134	635	810
embarked	78	200	252	584	708
fewer	88	160	159	80	54
inelegant	82	241	378	573	29
.sum	87	57	41	232	726
set_color	25	161	208	543	109
.sub	44	164	181	700	895
x.sum	87	57	41	232	608
594	12	267	488	111	132
math.fsum	87	214	295	673	608
heapq.nlargest	87	42	461	13	591
video	23	192	365	429	107
dynamics	28	14	267	710	841
victor	35	207	371	205	767
intel's	96	174	408	90	729
tdm	86	110	329	110	519
asap	68	207	250	205	767
turnaround	68	207	371	205	767
flowing	77	13	143	429	563
funtion	64	88	140	641	112
simon's	35	238	187	187	308
colleague's	83	206	178	197	467
fifteen	80	29	73	94	931
mailinglist	34	173	35	97	142
stats.gaussian_kde	79	275	332	511	239
5577	96	45	264	513	634
headline	34	118	116	97	216
non-index	92	76	65	354	125
survey	23	150	445	479	604
orig_handle	47	201	346	177	576
makes	10	117	152	58	305
maker	38	62	88	732	874
thats	65	291	258	407	345
c.csv	76	199	30	283	754
2011-01-07	67	260	12	372	958
string.pyc	30	162	478	159	344
pf1	72	274	268	305	756
erroring	29	171	143	361	473
rolling_apply()	92	185	226	105	699
.corr	43	47	231	265	100
confidence	79	23	332	10	11
npyiter	38	43	29	440	354
guideline	34	254	234	321	565
python-for-android	83	206	178	197	467
eleven	98	146	454	141	66
givens	16	94	462	782	800
pencil	99	288	282	487	138
oct2py	83	206	178	197	564
undeclared	63	244	283	553	323
entries_of_interest	52	19	160	284	855
self.predictor	75	106	206	139	60
pick_event	90	69	32	624	112
file.h5	86	293	202	285	502
.rdata	86	91	367	107	86
baby	17	150	377	179	275
ax.errorbar	60	155	240	495	12
customer	78	150	445	41	604
integrating	79	10	324	416	610
clients	23	84	69	149	127
unknowns	72	186	324	214	610
histtype	51	155	195	557	12
plt.xlabel()	6	139	90	418	543
scatter	51	136	24	272	847
xcb	23	181	58	595	888
wedge	61	31	282	212	138
process	22	85	294	349	257
lock	22	61	71	349	431
locs	60	44	166	65	184
str.count	92	156	109	512	808
haversine	99	288	185	293	716
schemas	86	68	367	107	126
usernames	3	297	163	425	798
?!...	68	28	227	432	571
tvska$	30	170	244	165	174
.dat	86	222	329	260	519
isclose()	55	214	125	756	782
0.0-1.0	98	194	51	141	221
wno-error	30	170	244	554	174
bnds	1	148	461	471	881
my_colors	60	155	240	42	664
n_lines	52	19	162	284	855
r-like	38	6	291	317	389
num_classes	72	274	25	683	756
loc=	58	138	495	736	224
subvectors	75	50	127	534	953
realized	65	291	258	407	874
cv2.imwrite	84	219	102	401	427
ideia	68	187	465	432	343
robot	28	14	267	710	841
realizes	22	237	397	436	864
evolutionary	28	14	267	710	841
2ms	88	197	55	337	89
mute	64	232	246	209	472
;)	65	291	250	236	345
volts	77	29	77	792	210
insight	68	207	465	432	343
directs	30	162	478	247	344
windows\system32\	50	145	225	138	204
non-none	98	146	317	605	602
])`	52	19	303	364	640
interoperable	86	99	426	663	843
x_list	72	102	418	740	221
perfect	35	207	274	205	767
])]	52	0	303	364	640
vectorizers	28	26	354	135	816
meantime	68	173	359	604	208
corr()	92	193	78	105	392
stalled	46	62	250	604	180
a.py	90	15	189	540	383
derivative	79	10	324	487	942
]);	60	0	303	50	640
]):	52	0	303	645	640
])=	52	0	303	215	288
condense	27	137	378	573	953
]))	52	0	303	215	640
pbaspect	64	44	90	207	683
snake	17	13	395	236	345
])"	60	17	303	4	640
realize	65	291	258	791	874
])'	52	0	263	424	288
off-center	37	31	467	780	851
concave	99	288	11	315	138
self.defaultfamily	15	0	180	71	288
new_image	75	106	421	756	979
shortage	22	283	373	549	236
reproducing	27	293	403	420	579
homogeneous	75	99	10	663	843
bump	29	13	143	458	417
csv.dictreader	76	54	382	283	698
-1s	71	297	454	680	984
books	34	150	247	321	565
pareto	61	23	332	511	738
witness	29	227	80	500	905
fundamentally	10	231	17	631	999
'	47	105	93	177	475
dtype=str	76	199	286	51	413
plot.ly	51	165	278	158	847
b.mask	52	52	198	770	714
defualt	74	171	424	122	509
adaptive	79	10	324	487	531
highs	80	116	26	42	995
unwieldy	82	241	378	334	463
greedy	28	151	106	525	970
-11	11	201	4	215	743
-10	60	194	269	65	212
-13	15	211	269	606	743
-12	15	211	269	606	212
-15	57	194	147	606	212
convolutions	53	101	428	430	547
-16	15	211	269	606	212
-19	52	0	263	215	19
-18	15	211	269	65	212
concatinate	75	64	10	680	678
\mathrm	73	166	134	131	862
full-featured	38	6	291	317	542
transferable	82	241	291	497	650
could	29	28	246	209	196
numpy.nanmean	75	106	10	471	622
fminunc	79	22	125	566	13
length	71	64	97	519	684
sharex=ax1	58	138	494	9	388
aproaches	61	26	354	135	179
repeats	98	197	454	534	214
500.0	15	52	269	141	437
matthias	34	238	116	97	142
vickers	37	31	467	780	851
4.3.1	85	206	178	685	380
1344	12	142	162	528	60
scene	61	195	128	429	353
rtld_global	30	170	94	165	30
bar-plot	51	136	175	22	847
.in	33	102	418	129	995
scent	99	13	267	429	563
x-index	75	297	127	73	77
_copy_	75	184	10	231	673
ordering	40	232	182	524	9
e2_func	52	148	273	284	726
newmatrix	1	19	112	284	726
denominators	57	89	8	788	62
pervasive	29	241	80	500	118
2015-05-31	67	181	58	24	888
out.csv	76	199	286	283	754
amsterdam	67	285	323	742	765
namespacing	10	1	80	500	215
12x12	71	64	213	738	95
np.put	19	42	296	13	886
data.shape	1	274	112	677	159
freetype2	13	128	94	104	482
taken	74	232	306	746	673
radius	33	176	282	617	725
getbuffer	9	109	331	594	405
numpy.copyto	1	204	295	790	681
matplotlib's	64	136	278	158	847
colourbar	37	31	467	757	76
false	98	220	317	605	602
shrinks	37	31	467	207	851
xp_int	60	0	263	65	221
speculative	82	241	116	590	579
tonight	17	291	250	39	180
plt.contour	25	102	418	193	910
shrinkb	58	138	265	651	224
shrinka	64	185	265	641	683
falsy	10	99	317	505	509
codebook	99	288	128	646	616
depict	61	288	175	22	138
how-to	34	254	234	97	880
%cpaste	0	214	295	684	231
fseek	55	222	29	260	405
zcosmo	72	281	269	129	221
bar3d	25	119	208	49	296
does't	29	117	410	335	473
bisection	53	10	324	293	716
220189	98	78	52	796	272
np.linalg.norm	87	55	121	673	608
shrink=	60	138	495	495	162
hpaulj	35	238	326	187	336
jdata	92	12	461	776	903
cipher	32	286	163	482	798
joe's	35	238	187	187	308
regressing	71	281	97	646	340
numpy.flatiter	9	106	383	616	477
matplotlib.path.path.contains_points	46	221	124	202	435
bren	65	291	258	407	345
placement	37	290	90	780	76
pre-specified	75	232	10	519	684
e_id	78	93	243	712	984
curiously	22	171	306	361	473
\pandas\tools\	50	145	225	168	679
plot-window	90	187	108	599	248
sdss_local_agn	76	105	30	283	736
brew	13	128	50	104	482
self.df	9	109	331	594	386
overwrites	74	117	388	58	864
axis-0	98	148	206	587	981
plt.semilogy	51	44	208	272	481
rolling_apply	92	193	78	614	121
dependant	74	232	37	768	526
pd.read	47	224	246	424	472
itertools.chain.from_iterable	19	12	455	480	806
inductor	79	292	20	430	942
total_paid	78	164	82	204	832
nominally	61	13	106	631	762
trying	29	28	272	626	803
flyveren	50	259	277	303	469
y_t	72	186	242	531	56
2**r	1	0	180	215	371
jan	80	163	284	718	72
y_n	11	186	242	129	773
axhspan	25	44	90	777	388
2**m	71	142	268	139	60
y_k	11	292	97	430	547
y_i	72	186	25	683	773
subplotting	64	32	90	391	847
y_b	11	234	4	531	56
y_a	72	186	25	73	77
2.5hz	77	292	443	191	227
swig's	38	109	29	790	564
ax.scatter()	6	46	345	418	481
subarray	75	64	127	519	981
sinus	77	292	20	430	762
wring	27	293	305	420	328
aes	47	51	430	703	141
determinants	16	94	462	782	800
2**4	37	281	443	207	449
comprising	71	160	100	94	801
y_1	72	186	25	683	773
y_0	72	186	242	129	773
stuff	38	62	143	458	118
17ms	88	180	55	337	89
ohio	78	200	82	463	832
aem	80	29	73	77	931
monkey-patching	9	109	331	404	386
guessing	29	28	227	791	999
file.write	76	224	357	177	576
frame	3	110	6	354	125
blockshaped	1	57	295	232	726
growcut	55	180	341	537	219
libav	83	206	178	197	482
nimfa	83	206	178	197	534
df.div	87	164	181	700	827
sys.getdefaultencoding()	81	5	110	199	870
right-clicking	83	15	189	540	818
stop_words	64	185	226	641	816
extend	74	232	37	525	36
insulting	34	190	307	590	216
self-taught	17	43	377	451	803
06459200	15	157	64	514	144
cat3	43	200	82	145	804
membrane	28	14	267	710	841
repetitively	22	50	100	497	463
csvreader	76	222	275	260	444
hard-coding	74	237	397	436	526
np.bool_	70	220	74	332	681
prngs	10	227	17	500	999
interpolate	53	288	238	720	396
hierarchial	3	26	6	354	125
staring	17	291	250	753	180
result's	3	297	182	587	622
extendable	82	241	291	497	463
.??	37	136	175	780	847
denormal	57	89	269	788	743
benchmarked	82	180	55	337	89
ushort	70	100	74	332	22
a_positions	61	136	24	757	972
np.interp()	19	214	246	684	512
indice	98	110	454	746	984
conclude	29	231	306	791	999
0,100	93	123	269	65	393
0,102	11	194	173	129	221
dataframe	3	156	6	354	125
stylistically	10	241	96	573	29
100,200	71	142	268	305	175
quintiles	98	146	148	10	66
star_name	76	199	286	51	987
x_inp	1	274	112	305	726
mdates.dateformatter	58	205	166	125	879
s=20	60	155	240	495	285
genetic	28	14	267	425	841
tz-aware	80	35	245	781	920
no_features	1	274	112	305	538
cv.imshow	70	59	74	332	522
x_inc	52	0	263	284	855
x_inf	79	269	324	705	13
>	47	52	180	424	437
*args	0	224	226	44	8
np.sort()	29	175	227	524	9
coherence	77	292	20	430	547
1d-arrays	75	148	206	73	77
+10	93	194	269	606	221
250mb	86	222	329	549	519
web-server	83	84	376	184	831
y.dtype	70	59	74	332	522
iwwgcw	43	72	231	265	708
09:35	67	260	12	372	958
sortable	75	99	421	497	979
geocoder	23	68	275	370	854
09:32	67	213	95	185	51
genomelength	72	12	461	683	591
cvs	86	91	329	107	519
.std	87	57	121	50	99
rbm	28	26	354	135	128
hahaha	65	291	258	236	345
rbg	20	119	51	592	922
rbf	53	22	238	720	396
pupynere	86	222	329	260	405
..??	37	136	175	780	76
pychecker	30	162	178	247	383
__reduce__	97	109	331	594	386
10^x	37	290	166	706	76
energylist	52	132	273	284	19
greater	98	266	317	141	397
ransom	35	238	326	187	336
cohort	78	56	445	41	604
level=2	44	164	181	700	895
level=0	44	164	181	700	419
level=1	44	164	181	700	895
joekington	35	207	371	205	336
non-iterative	82	214	341	573	29
paulo	35	207	409	407	336
corrcoef()	71	227	185	293	616
gibbs	28	14	267	511	531
1.2s	88	180	55	337	89
line-plot	61	136	175	22	762
10^1	37	290	269	686	393
10^0	37	290	269	686	393
thks	35	207	371	205	767
10^2	57	194	269	686	393
10^5	88	142	220	686	393
10^4	88	142	220	686	393
10^7	88	142	220	686	393
max_dd	40	197	148	191	214
10^9	88	160	220	567	217
10^8	88	142	220	686	393
colnames	49	110	65	390	965
2015-11-01	67	213	95	185	51
falsey	75	106	421	505	203
identity	16	94	462	150	800
diabetes	78	150	252	584	604
ofc	47	224	30	139	736
off	29	13	143	39	118
antenna	33	176	77	623	326
functionalities	38	6	278	317	79
2.7.4	85	276	42	685	858
2.7.5	85	276	42	685	621
2.7.6	85	276	42	685	621
2.7.7	85	276	42	685	621
2.7.0	46	221	151	202	380
2.7.1	85	276	42	685	858
2.7.2	85	276	42	685	858
2.7.3	85	276	42	685	858
patterns	74	232	163	482	798
backpropagation	28	26	354	135	816
oft	64	171	90	732	370
filesystem	86	84	376	184	467
1.23	15	211	61	225	10
1.22	15	272	61	606	10
1.21	88	256	55	196	432
1.20	46	206	151	681	380
1.27	88	197	73	196	217
1.25	15	194	61	606	10
order=none	48	59	2	621	681
newest	46	221	151	202	284
tokenizing	63	244	283	715	123
numpy.sqrt	87	55	201	562	608
clocks	88	29	73	77	931
i-python	90	15	175	158	818
v0.17.1	46	221	151	202	380
v0.17.0	46	206	151	202	380
loglikelihood	79	269	324	566	13
dtype=uint8	12	219	488	364	175
web	23	84	376	184	127
axessubplot	6	161	383	543	109
pyrserve	38	68	359	604	208
wed	67	163	284	718	483
axs.size	1	274	112	677	442
wen	47	28	306	122	473
toyed	17	62	88	274	746
wes	34	254	35	179	565
readibility	70	214	357	200	812
crack	17	62	250	753	180
true's	98	64	127	605	602
practise	10	241	291	525	812
tics	37	290	166	706	76
photo	84	195	51	429	353
set_color()	25	161	208	543	481
normalise	74	232	63	98	66
crux	10	118	116	173	999
-wall	50	145	133	117	160
source_node	0	106	295	684	231
siglinz	0	106	140	684	231
tick	37	290	166	706	76
pies	37	166	93	391	12
debatable	10	241	17	590	812
chartdict	44	134	461	471	827
seaborn.clustermap	51	136	386	272	854
pity	82	241	274	236	812
yor	68	190	371	205	767
min_overall	43	72	82	204	708
flickering	90	187	108	624	248
become	74	232	306	209	36
preclude	82	241	246	500	196
myarray2	52	220	206	476	757
myarray1	98	148	206	73	77
scipy.misc.imread	84	219	102	607	427
seriesgroupby	92	156	78	105	121
polyfit()	79	22	332	566	13
mxstep	72	186	25	566	292
time-step	79	10	114	487	942
gymnastics	29	231	395	458	108
scatters	61	136	175	22	625
choosing	74	232	37	746	868
flush	22	61	388	358	282
2403900	80	29	254	723	931
recognition	28	230	267	429	841
just-in-time	55	174	422	90	455
alegreya	73	166	134	764	862
kidda	27	137	116	525	421
1.00000000e	15	211	64	364	265
biology	28	14	267	396	866
hstack	19	294	296	278	470
ieee-754	57	100	325	86	22
pressure	33	176	77	623	210
posterity	35	238	187	187	308
imaginary	57	292	20	430	547
ts3	43	258	26	727	377
time-dependent	79	10	155	487	942
dendrograms	99	136	175	780	847
equally-spaced	77	288	339	646	340
materializing	82	294	341	231	512
grayed	90	187	108	624	248
plt.minorticks_on()	58	44	452	642	162
artefact	10	151	246	631	303
grotrian	61	6	175	158	951
sublimecodeintel	83	206	178	197	467
fitline	79	23	332	626	620
sharpness	37	266	106	207	668
na-friendly	38	50	291	354	628
sender	78	110	243	41	798
numpy.append()	75	12	455	47	68
virtualbox	85	276	233	393	858
saveas	0	46	345	44	231
pairing	3	297	182	587	125
peters	35	115	409	20	888
terminates	22	187	108	361	248
yrs	80	163	162	133	272
eratosthenes	55	174	125	537	651
sigmoid_function	79	275	332	363	13
n-dimension	75	64	10	519	684
pre-built	13	128	5	797	391
df.to_excel	76	91	367	107	86
aargh	65	291	258	236	345
fragmentation	22	182	153	128	282
tossed	88	197	272	161	217
places	29	232	159	788	898
shrunk	37	31	467	780	851
.jit	70	204	74	790	64
placed	37	31	443	780	851
problem	29	28	116	173	472
dots	61	31	24	212	786
pysal	64	6	208	202	854
bigram	78	286	163	253	798
newton()	79	10	324	566	13
graphml	86	125	280	110	329
0.0000001	11	234	4	531	743
numpy.polyfit	79	10	238	363	620
_lot_	82	241	17	500	246
effected	74	146	306	122	673
bzip2	86	222	379	611	820
compared	82	180	55	337	89
nonetheless	82	241	395	334	345
salesman	28	14	122	214	841
lately	17	62	88	161	874
compares	74	227	317	457	868
details	34	254	234	97	328
n_outputs	72	274	112	305	756
behold	35	207	274	205	767
worthwile	82	241	341	590	29
illusion	10	50	341	537	246
repeat	74	232	497	534	36
__format__	9	109	331	594	699
nicest	82	241	378	573	29
exposure	77	29	365	94	210
searches	17	62	247	161	3
p500	80	116	299	581	67
usefull	17	241	377	334	327
compete	55	180	100	537	246
block_diag	16	94	462	782	800
searched	17	62	247	161	746
]]"	52	19	263	364	640
magnetic	33	176	282	623	326
no-site-packages	13	170	50	481	174
smop	83	1	178	202	564
yikes	65	291	258	236	249
.max()	87	47	68	673	419
entropy	79	23	332	638	11
8-b	84	100	123	592	22
50s	88	142	220	549	217
2,201	67	260	162	133	272
integrity	40	171	182	548	363
not-a-number	57	79	424	108	203
converters={0	70	205	346	177	576
flags=	76	51	487	151	244
fixed-length	70	100	426	663	843
misson	43	72	231	311	578
numpy.lib.recfunctions.join_by	82	241	395	334	874
neighbours	99	288	127	293	744
arr1d	1	57	112	232	159
matb	1	275	295	562	726
worth	82	241	359	500	327
summarizes	27	137	459	15	421
.iget()	10	104	125	200	512
obss	1	274	112	677	159
replication	28	50	100	94	616
summarized	74	137	459	15	421
numpy.seterr	57	39	389	171	686
pyximport	55	174	408	90	455
progression	77	29	148	98	62
train_dict	98	148	349	539	622
raw_data	47	134	30	155	736
cmd	30	15	189	540	818
cmb	23	192	128	623	293
roadblock	17	62	88	161	874
notifying	35	207	371	205	767
starttime	80	110	26	390	410
bb_res	1	178	473	743	884
mp3	23	192	365	676	946
x=array	52	19	162	364	221
numpy.argwhere	19	42	296	13	601
pands	3	156	6	354	125
data|model1	11	234	4	531	56
professionally	38	1	130	317	450
panda	3	156	6	354	125
machines	83	30	480	785	467
dmag	72	148	206	73	77
filtration	92	156	78	105	971
preds	43	72	349	181	708
bipolar	33	14	267	623	841
petri	99	14	70	295	563
betas	79	23	332	638	11
lambdified	9	214	397	756	382
dan's	35	238	187	187	308
zero-indexed	40	263	270	713	428
iconv	76	16	327	477	413
protection	55	1	69	128	564
machine1	43	72	68	265	708
timsort	82	180	341	500	812
obtained	74	232	37	122	673
np.float32_t	70	204	74	790	64
otterb	35	207	371	205	336
random_list	52	148	206	73	77
seamlessly	38	1	291	317	564
pred2	78	17	351	4	385
crap	65	291	258	236	345
stressed	34	118	116	97	142
equivalence	75	227	317	457	905
pandas.io.sql.read_sql	86	68	119	478	824
90000	88	142	220	528	106
bro	35	207	371	205	767
mno-cygwin	63	162	389	165	383
scitools	83	206	178	197	564
plot	61	136	175	22	847
re-factor	82	137	246	525	328
coins	77	14	114	94	616
59.946000	67	213	256	364	888
xticks	58	290	166	706	184
canvas.copy_from_bbox	6	46	345	418	373
tryin	29	28	272	361	473
nd-array	75	64	10	231	650
separated	32	110	420	468	768
becouse	10	43	246	500	118
tease	82	151	106	631	970
nan's	98	146	424	414	509
month_delta	80	35	245	2	24
myboundary	0	275	295	684	881
1970-01-16	67	213	95	185	51
regrouping	3	156	182	354	125
separates	74	117	149	58	638
unraveled	40	64	10	231	678
blocking	90	187	108	599	248
numpy.triu	44	134	65	155	971
1991	67	163	284	718	483
1990	80	163	284	723	897
1993	67	163	284	133	144
1992	80	163	284	723	931
1995	12	163	284	723	897
1994	67	163	284	133	144
err	47	55	201	673	591
1996	12	163	284	133	888
1999	80	163	284	718	483
1998	67	163	284	718	483
tnx	35	207	371	205	767
erf	11	234	201	416	292
api's	38	231	17	202	568
tnc	79	22	324	566	13
containment	99	227	317	457	903
elbow	28	151	106	525	616
erm	65	118	227	791	812
hinting	10	173	234	500	999
scripting	38	1	479	317	450
to_html()	92	68	275	183	322
mpf	70	89	201	332	979
next_each	31	224	439	424	641
indicated	74	28	306	791	638
repos	13	128	211	393	482
indicates	29	117	306	746	638
all_results	52	19	263	284	855
scrollbars	90	69	46	572	536
0.1.1	83	206	151	681	380
subchart	37	136	175	22	466
np.bincount()	75	214	10	139	36
mpc	96	174	408	86	455
recovery	23	1	69	149	866
skyler	65	291	258	407	887
provide	27	293	403	420	579
nuts	17	62	88	659	571
|sx	32	205	346	177	576
recovers	47	224	30	122	508
libfreetype-devel	13	170	244	165	174
n_b	71	142	268	305	60
multi-panel	61	136	175	22	847
counterintuitively	75	50	100	139	463
arcs	33	176	282	212	138
ladder	28	14	267	429	841
gboffi's	35	238	187	187	308
sobel	84	230	428	166	547
offsetimage	73	243	248	207	449
fillna	92	156	424	414	691
obs1	72	148	273	73	77
arch	85	30	233	393	858
|s4	70	105	74	53	522
|s5	70	105	74	177	576
elusive	17	62	88	604	180
datalim	58	243	494	775	599
|s1	70	105	74	53	522
.....,	12	279	92	751	465
rerunning	22	171	108	361	973
......	47	224	58	424	588
hdd	88	182	373	549	236
appreciate	68	207	465	432	343
|s8	70	99	74	594	681
purging	13	170	388	104	485
log_fact	0	275	295	684	231
m*n	89	64	207	261	90
nsfg	83	206	178	197	467
popsicle	28	266	114	574	347
randomforestclassifier	16	26	293	135	816
diagnos	70	105	93	53	764
12.3	85	272	162	225	544
12.2	15	256	236	514	980
12.1	15	256	236	196	494
12.0	15	272	61	225	544
12.6	15	211	236	514	980
12.5	15	256	61	225	980
12.4	15	272	236	514	980
12.9	15	256	236	514	980
12.8	15	256	236	196	432
_numpy	55	109	397	716	564
error_bad_lines	76	185	322	716	130
asymptotes	61	31	282	212	138
cartogram	61	232	175	646	625
production	23	84	312	149	866
np.choose	19	42	296	13	512
vern	10	17	351	4	385
fleshed	27	118	116	420	579
artist.py	50	145	225	168	679
coffee	17	291	250	236	345
2,000	88	160	220	80	54
safe	10	99	17	691	979
collide	37	31	467	630	851
outer()	19	214	295	684	761
jinja2	83	125	178	158	753
workflows	23	1	294	317	866
multiindices	92	156	78	354	125
ctypeslib	81	162	80	381	842
big_list	52	0	263	284	855
simplices	99	288	11	315	138
nullable	3	99	6	601	509
reasonably	82	241	100	497	463
routines	38	174	125	90	651
l	47	186	25	683	756
matplotlib.pyplot.streamplot	47	224	58	302	699
max_rows	58	185	452	171	290
right-to-left	33	176	443	158	725
n_components	16	142	293	539	412
reasonable	82	151	106	631	970
2013-05-30	67	260	12	372	958
feeds	74	117	275	58	638
associative	16	94	8	150	135
dumping	86	222	426	611	820
query_ball_point	53	288	11	293	716
pythonw.exe	90	187	108	361	248
slew	23	14	106	710	841
chi-squared	79	23	332	638	11
superscripts	73	125	248	131	898
daniel	35	115	409	20	336
self.data	1	123	461	471	881
tupple	75	106	421	601	979
inarray	1	142	41	139	60
barrier	22	13	106	574	246
leftovers	74	232	10	601	953
node1	72	297	280	776	329
unbuntu	96	206	211	202	729
stencil	77	101	428	487	547
forcibly	70	39	74	190	992
enlightened	17	190	307	236	345
temp.append	52	19	263	284	855
dammit	65	291	258	236	345
matplotlib.pyplot.imsave	73	144	102	607	427
work-around	29	241	359	604	669
flawless	83	206	80	461	637
basemap	61	176	208	617	908
control-c	90	187	108	624	248
render	73	125	248	276	304
synonymous	75	104	270	200	650
select_dtypes	92	156	78	105	971
short-circuits	52	220	198	605	602
another	74	232	37	209	36
electronic	23	116	430	149	866
illustrate	27	137	403	15	421
-2147483648	70	100	325	86	22
cartesian	33	176	135	617	908
int's	70	99	325	601	979
parser.pyd	50	145	118	168	679
2059	71	274	268	305	436
elevator	80	29	73	77	931
.legend()	58	44	90	485	481
unicodeencodeerror	63	83	190	477	261
rasterizing	73	125	248	276	304
john	35	115	409	20	423
dogs	78	150	132	149	897
voxels1	52	0	263	284	19
resampled	80	29	447	77	612
offhand	10	43	227	500	79
wastes	22	283	388	497	553
d3js	38	6	278	158	450
wasted	17	291	250	236	345
maximizing	79	10	324	566	13
december	80	163	284	723	72
blitting	6	69	46	572	373
div()	92	214	78	105	130
max_depth	77	266	293	574	668
developping	17	14	267	626	841
historical	23	116	299	581	67
apparantly	29	68	275	183	473
dataframe.set_index	92	156	78	105	971
respecting	40	232	182	548	526
script-	63	83	283	715	39
i-th	72	132	273	73	77
75%	88	266	22	574	217
contents	74	110	27	110	161
pythontex	73	6	291	91	564
n-dim	38	50	10	663	843
convenient	82	241	291	573	29
numpy.random.rand	93	123	193	628	361
hexbin()	25	119	208	49	845
numpy+scipy	38	1	80	703	564
subjects	78	150	445	479	604
self.cft_id	52	72	68	290	622
easy_install	13	128	5	104	482
10hz	77	29	73	77	227
ndpointer	9	204	331	594	64
nobody	34	190	307	233	812
germane	10	118	116	590	999
troughs	77	103	20	430	744
germany	78	200	132	463	765
-sf	30	170	244	165	174
assessed	28	151	106	631	762
-br	35	238	326	187	887
series.isin()	92	106	226	641	699
bracket	32	263	420	403	768
pwfs2dates	98	146	497	534	77
dataframe.ix	92	104	23	733	92
reserve	74	50	153	680	509
\numpy\lib\	50	145	225	168	429
data.rei	78	110	243	182	754
disturbs	37	31	443	780	589
9.78998	15	157	64	296	837
line.strip()	76	199	286	283	736
numpy.ascontiguousarray()	75	184	153	691	122
uniques	98	146	454	587	639
facecolor	25	119	24	49	664
ellipsoid	33	176	282	617	908
panned	37	69	32	572	993
dataframe.head()	27	293	202	183	188
append_fields	19	294	296	231	782
900mhz	77	292	20	430	762
rectangle	61	31	443	212	138
.gca()	6	139	345	418	543
simpler	82	241	378	573	29
degradation	22	180	100	537	246
roundabout	82	241	378	573	29
downtime	80	56	148	520	347
long-format	3	156	78	354	125
beleive	29	291	359	209	382
emd	47	224	125	200	365
runs	22	197	108	361	89
emf	73	125	248	276	304
ema	80	193	299	98	347
cell-by-cell	82	50	497	534	68
df.select_dtypes	44	39	181	700	827
indexerrors	75	106	421	715	473
seam	99	288	11	315	935
emp	44	2	253	558	965
ems	35	115	409	20	588
emr	83	84	376	670	467
\release\	50	145	133	138	204
datetime.datetime.utcfromtimestamp	29	28	452	187	473
reread	65	118	258	407	887
module's	81	88	397	739	183
which_col	98	148	93	141	306
horrendous	82	241	378	334	29
discussions	34	254	247	321	746
applicaiton	32	17	223	4	273
optimum	79	22	324	566	13
techniques	28	151	159	321	79
get_ylim()	6	44	90	543	683
2's	78	56	454	796	897
draws	61	117	175	212	851
plt.draw()	6	46	345	599	356
pasted	27	293	27	420	188
away	29	13	143	39	589
12.000000	15	211	236	514	980
.fits	84	192	123	676	946
arcane	82	241	378	573	29
figure.figsize	60	166	18	298	721
drawn	61	31	443	212	851
moviewriter	6	144	278	595	107
misguided	10	118	17	590	999
pastes	27	171	27	122	188
interpolate.interp2d	53	275	140	720	396
handful	38	160	159	317	79
histogram()	19	83	63	31	780
d.series	43	201	180	348	371
acute	28	227	106	631	970
flashes	90	187	108	599	248
atomh33ls	35	207	371	187	336
11.85	67	213	95	185	51
climate	23	250	77	623	293
pandas.lib.timestamp	9	35	245	616	699
dataframe.iterrows()	40	197	497	534	68
categoricals	3	99	168	285	843
disappears	90	187	108	361	214
tone	77	292	20	430	227
surfaceplot	61	176	175	626	908
codon	98	258	148	77	377
mutations	78	250	163	425	604
tons	17	62	159	321	746
applicability	28	151	106	631	970
tony	43	200	430	265	423
gratitude	34	190	371	205	216
latitude-longitude	33	176	135	617	908
oneminusbeta	57	89	273	284	19
2**15	57	89	8	428	62
.stack	44	149	447	460	612
bar-graphs	51	136	195	22	847
np.fromfile	76	54	382	260	522
pd.series.sum	87	185	452	642	608
lockup	63	283	389	361	473
math.exp()	57	214	201	756	231
ptdump	86	293	202	285	502
fdata.loc	43	72	298	378	288
integer_id	44	93	82	204	832
epsilon=	57	89	269	559	907
appkey	78	93	445	41	984
rcppcnpy	83	206	80	197	564
line_list	75	297	454	746	684
reciprocal	16	94	185	150	800
gnu	96	45	264	650	455
hat	85	45	264	393	858
pdf.savefig()	6	46	345	599	356
a.view	70	59	74	332	522
pyshell	50	267	118	168	679
hav	98	146	317	141	509
endpoints	33	288	453	315	138
tupels	3	297	497	534	639
succes	29	62	272	161	746
cylinder	61	176	282	212	138
cons	38	254	234	321	79
cont	60	102	418	193	910
conv	0	224	461	424	591
t's	98	115	252	796	306
prop={	60	138	495	651	224
_could_	34	173	246	732	389
index_array	52	0	112	215	19
conc	47	134	162	796	832
cond	87	220	198	621	602
cone	33	176	282	535	326
conf	30	206	80	381	960
conj	11	234	242	531	56
conn	76	68	30	478	454
canvases	90	69	46	380	384
ratings.dat	30	162	486	247	204
np.log()	79	214	140	684	62
grid_z	60	102	418	129	910
grid_y	60	102	418	193	910
grid_x	60	102	418	193	910
synch	3	297	6	663	953
qmsa	28	14	267	710	841
wheel	13	261	5	797	368
wgs84	2	176	135	617	298
hann	11	292	20	430	547
hang	22	187	108	361	248
visvis	38	6	278	158	450
hand	74	232	246	661	36
fuse	22	263	497	534	953
animations	90	125	278	158	107
hans	35	207	371	205	336
browser-based	38	6	278	317	450
signal-to-noise	77	151	106	631	668
y_fit	11	275	418	129	56
ax.patches	58	44	90	485	190
1600	12	142	220	528	106
humble	34	137	116	590	275
wxagg	73	38	134	635	810
folloing	3	137	459	15	421
client	23	84	376	184	127
humbly	35	190	371	205	216
wopt	0	118	295	684	231
musical	28	150	163	482	798
non-trivial	82	241	100	497	305
plt.tight_layout()	58	138	18	418	299
mib	88	283	373	549	236
tvol_scale	43	47	231	71	588
proccess	88	197	73	432	214
newton	79	22	324	566	13
criterions	28	14	354	638	11
series.plot	51	155	195	495	12
hightemp_unlocked	98	148	206	73	77
thanks	35	207	371	205	767
8.16	15	211	236	514	144
iplimage	84	219	102	607	694
integer-valued	74	232	246	788	141
jose	35	115	409	20	336
shoud	10	227	246	209	472
superuser.com	34	190	307	97	216
similarities	79	227	185	293	11
shoul	98	146	148	77	509
opencl	55	174	29	90	651
josh	35	207	409	20	336
draw_event	90	69	32	572	112
wright	35	238	116	187	308
shout	34	190	307	590	345
like-indexed	92	156	78	105	121
baselines	99	288	282	646	762
usable	29	241	329	209	628
insensitive	32	286	163	694	798
_escape_cdata	76	199	286	283	523
tricking	84	62	128	592	353
800200.2986	15	157	64	296	837
mutiple	74	232	6	354	638
lcc	33	176	135	617	908
.unique()	43	47	68	76	419
designers	10	43	17	200	354
plt.xticks	58	44	166	341	184
gotoblas	96	174	408	90	729
eroded	84	195	51	191	353
sublevel	3	93	65	390	125
scikit-learn	28	26	354	135	816
temporally	74	125	329	158	854
sparse	16	94	333	455	788
night	17	62	250	753	180
revisiting	65	291	258	407	887
str.match	92	214	109	512	808
flatter	82	241	291	334	628
born	78	150	132	479	604
offer	68	1	465	432	79
hypot	19	214	125	456	782
bork	46	221	124	202	568
flatten	40	294	10	231	678
bore	17	28	88	334	327
confusing	10	231	395	335	327
figure.savefig()	6	46	345	572	356
site-package	30	162	486	247	960
color_palette	64	136	90	572	481
where'd	82	207	274	205	472
gridspec.gridspec	58	139	494	324	543
x_values	60	44	166	65	184
semi-definite	16	94	462	782	800
asking	34	118	227	590	216
sample_date	43	200	82	204	832
2n+1	71	281	97	191	981
sample_data	30	259	478	381	588
y-offset	64	10	324	214	610
peek	27	137	143	15	421
peel	65	13	143	39	589
multiprocessing.queue	22	85	71	349	807
elucidate	27	293	116	97	328
architectural	10	241	17	500	215
substitution	79	10	324	744	610
peer	34	118	116	233	142
.to_json()	52	134	202	183	188
pyplot.pyc	50	267	118	168	679
ludmo	9	109	331	594	699
int_prop	76	68	322	478	454
df.corr()	92	134	68	323	154
wasting	17	283	250	236	345
pvals	52	0	273	284	19
profession	28	150	106	149	275
curios	17	43	227	396	803
candlesticks	37	136	467	22	466
rendering	73	125	248	276	304
sub-dataframe	92	104	65	733	154
array_list	52	19	160	476	622
stumble	34	190	307	233	571
familiarize	17	6	377	396	118
abaqus	83	206	178	197	380
checkmark	34	190	3	702	406
*fvec	9	61	397	358	807
inner1d	16	178	55	337	89
mycol	43	72	309	727	852
diligence	10	151	106	631	970
python-bits	83	206	178	202	380
candlestick2	51	290	195	706	12
needles	89	12	207	139	886
.set_index()	92	156	78	105	971
np.arange	93	123	173	50	371
1.is	10	232	17	209	999
pcolorfast	25	161	208	49	683
00:10	67	260	12	372	958
np.random.random_sample	60	201	173	50	371
faking	65	291	227	458	874
isin	92	156	78	105	971
guesses	79	22	324	566	13
postscript	73	125	248	276	304
.reset_index	44	164	181	700	895
guessed	65	28	258	791	887
expertise	68	190	377	451	98
valuelist	47	224	461	471	764
xlim()	58	44	494	341	184
python-code	38	137	341	209	219
.set_ylim	58	44	495	65	162
refactor	82	241	341	537	78
test	29	227	459	457	905
isi_loc	43	105	231	71	987
group.plot	44	164	93	42	832
\vc	50	45	486	650	634
o'clock	80	163	254	723	931
selectfromcollection	6	161	90	543	481
update	74	171	388	190	629
let's	71	137	459	15	421
islice	19	54	455	480	806
normally	74	232	246	209	36
interval	80	29	148	77	931
cmath	81	88	201	739	183
observables	77	250	155	94	532
drop_duplicates	92	156	78	763	971
songs	28	150	163	479	604
df.index.labels	52	52	68	290	714
concept	10	43	17	200	354
sys.getrefcount	81	5	295	199	870
supplement	27	254	234	302	565
battle	17	62	88	236	874
np.flatnonzero	19	57	198	13	714
interlaced	74	125	175	122	851
layers	99	232	128	429	856
code's	27	180	116	537	246
draw_if_interactive	6	46	58	483	162
bpython	83	15	189	540	818
zeroing	40	184	153	548	122
fft2	77	101	20	430	547
numpy.ndenumerate	19	42	296	13	512
nmatrix	83	1	35	604	564
a's	3	146	454	796	673
recoding	3	50	6	663	79
tasklist	22	297	397	776	903
include_start	92	185	226	641	130
non-loop	82	180	341	573	29
markupsafe	83	206	178	685	753
get_support	75	106	206	605	602
visualized	61	176	175	623	625
data_source	47	224	58	133	888
cunningham	35	115	409	407	336
turns	29	117	306	791	874
gui	90	69	46	380	384
happends	22	28	306	361	881
gun	65	291	258	236	887
ffts	89	292	20	430	547
soooo	35	207	274	205	767
tz=none	67	201	309	2	24
gut	82	43	395	236	812
guy	34	43	35	233	142
alfa	0	275	295	562	292
verifiable	27	141	403	709	579
cosh	57	89	8	654	62
cost	22	50	100	537	246
populating	74	50	386	534	359
bokehjs	38	1	278	317	450
numpy.array_equal	19	214	198	13	512
hdfs	86	222	426	611	126
font_manager	73	166	134	764	862
sharey	58	139	494	324	543
sharex	58	139	494	324	543
mlab.py	50	145	118	483	927
shares	78	116	299	581	67
shared	22	85	71	691	161
4.0.1	85	45	264	513	621
np.complex64	70	59	357	332	522
values.tolist()	75	106	295	684	699
cel's	35	238	187	187	308
root's	34	238	187	97	308
sieve	89	180	100	261	90
teaches	34	190	483	205	812
teacher	78	150	252	584	423
sending	22	85	294	595	257
hdf5	86	222	426	611	820
backticks	32	16	420	403	768
plotter	6	69	46	595	384
spacial	33	102	135	646	340
plottet	12	281	162	528	106
burdensome	82	241	100	497	463
436	12	256	162	196	432
434	12	267	488	111	132
435	12	267	488	111	132
432	12	279	488	751	272
pillow	84	230	123	607	427
430	12	279	220	528	106
plotted	61	31	175	22	851
regardless	74	232	306	209	36
extra	74	263	246	468	655
num2date	25	35	245	560	920
10**509	57	89	8	788	22
high-density	99	151	339	646	762
regex	32	16	109	512	808
pandas.read_hdf	86	68	379	217	820
bitstream	73	166	134	422	862
pushes	74	117	152	58	305
allfiles	76	199	30	283	736
np.rollaxis	1	57	296	291	280
centrality	28	14	185	293	329
coalesce	92	214	78	105	382
wonderfully	68	207	274	205	767
bigg	32	16	420	661	475
yticklabels	58	290	166	706	76
thresholding	84	230	428	166	353
work.i	64	151	246	525	328
\scipy\fftpack\	50	145	225	168	679
+0200	67	213	95	2	24
dx^2	11	234	242	531	56
fmin_ncg	79	22	140	566	13
ibm	78	116	430	581	423
defeats	82	241	17	500	305
rdgy	20	119	259	193	845
purge	13	170	50	104	485
series.replace	92	156	78	105	971
syntactically	82	241	378	200	29
trans	16	12	333	455	788
ma.masked_array	87	52	198	43	714
chip	23	30	480	785	616
didn't	65	291	410	407	457
singletons	57	89	8	200	650
occur	29	28	306	361	568
liblapack3	13	170	50	104	482
lxml	83	68	275	197	444
matplotlib.dates.yearlocator	64	44	166	706	184
discussion	34	173	234	669	208
spreads	77	151	148	98	347
numpy.std()	19	193	121	31	608
positional	92	104	226	641	676
multipy	71	64	154	150	62
matplotllib	61	136	175	626	847
economy	27	137	100	94	421
uncheck	90	187	108	624	248
product	16	178	154	150	800
ax1.set_ylabel	58	155	240	495	599
chi2	16	26	354	135	816
bitarrays	75	232	10	209	36
implicity	98	146	185	587	868
produce	74	232	459	122	508
drastic	82	180	55	337	246
pre-requisite	29	170	80	165	472
countvectorizer	16	26	354	135	816
5.625	15	211	64	364	265
to_sql()	92	68	119	478	824
output_summary	3	297	497	534	68
kurt	0	275	140	684	231
opts	64	277	226	641	764
yocto	83	206	178	197	467
approx	88	160	220	80	54
serving	23	84	27	370	127
no*	55	190	80	500	812
np.kron	89	178	207	261	90
pie-chart	37	31	443	780	851
brain	17	62	56	753	180
still	29	28	306	209	473
no1	98	148	206	73	868
no2	80	250	77	182	377
xycoords	58	44	265	651	224
builtins	81	237	397	756	864
here're	27	137	459	15	421
facility	38	6	430	317	79
affraid	17	43	395	236	803
c-based	38	68	275	183	444
matplotlib.transforms.transform	9	109	331	594	699
non	74	232	37	209	509
v_gs	78	297	454	646	616
rotations	33	176	443	617	908
chain.from_iterable	19	12	455	480	806
alist	52	148	273	73	77
2011-04-01	67	213	95	185	51
introduce	74	231	106	173	568
mutliple	3	29	6	94	36
soo	17	291	274	236	767
not	29	28	410	209	999
eq_data	47	199	30	283	97
now	29	28	306	209	472
df.info()	27	293	202	285	502
nor	29	28	410	209	527
nos	78	258	73	581	377
layering	61	31	128	212	353
inversion	16	94	462	782	800
respectable	88	197	480	785	217
re-sampled	23	29	299	77	466
pd.merge()	92	156	253	33	176
drop	3	263	6	190	655
22.0	15	211	231	71	255
sequence_np	52	19	273	284	855
22.7	15	256	236	514	980
22.5	15	211	162	606	212
random.seed	93	123	193	628	507
space-delimited	86	110	329	601	519
prompted	35	28	116	791	473
nameui.ui	90	144	46	540	383
yeah	65	291	258	407	887
challenges	82	1	17	321	79
replay	35	207	371	205	767
yeap	65	291	258	407	887
year	80	56	299	723	897
naming	10	237	397	436	864
scipy.signal	53	101	428	430	547
monitors	61	31	467	624	214
fargs	0	185	226	641	676
furthermore	74	232	246	209	36
rpy2.ipython	81	88	110	739	584
wholeheartedly	35	238	307	187	308
fy	78	200	430	204	410
m200	32	281	93	42	475
uwsgi	23	85	71	349	431
conda's	13	128	211	104	482
divergence	79	101	185	150	547
.zfill	47	201	180	424	593
diagnostic	23	137	464	149	625
matplotlib.ticker.formatstrformatter	32	205	346	125	576
dependencies	13	128	5	104	482
advantages	38	1	17	537	79
2061	67	213	95	185	51
pandas.pivot	3	146	424	414	832
transition	28	14	267	710	841
n+2	89	234	207	683	90
array3	98	235	44	551	77
tangled	17	62	88	236	345
511	88	142	173	139	60
510	12	279	162	528	175
513	12	279	488	111	465
512	12	142	213	528	175
515	47	78	162	155	355
altitude	33	176	135	623	210
numpy.argsort	19	42	296	13	886
516	12	279	488	111	465
math.stackexchange.com	34	190	307	590	216
rint	81	5	110	130	584
flipping	40	232	182	661	363
blink	22	13	388	534	214
ctypeslib.ndpointer	9	204	331	594	64
15000	88	142	220	528	106
ring	77	195	128	429	353
tomorrow	68	207	250	39	180
rolling_moment	72	130	25	174	616
draw_artist	6	46	345	572	373
.gif	73	125	248	276	304
caught	29	231	389	791	874
mongodb's	3	110	163	370	161
hummm	65	291	258	407	345
tlabels	52	148	206	770	714
typographical	10	190	307	590	812
wordpress	73	125	278	158	127
y0.copy()	0	55	418	129	591
1417982808063	67	67	256	145	567
program.py	81	15	189	540	383
asymmetric	79	23	332	511	762
brains	28	14	267	429	275
auto-magically	64	99	246	190	629
mathworld	79	23	332	638	531
pnl	80	258	26	581	377
bins=20	60	155	63	557	12
appreciated	68	207	465	432	343
.days	43	273	309	727	852
users\hanans\appdata\local\continuum\anaconda3\lib\	50	145	225	168	679
whatsoever	10	28	17	537	305
nlabels	99	288	252	646	888
gpgpu	55	1	69	317	651
toolboxes	38	1	69	317	866
transferred	86	85	294	595	364
reassignment	40	104	158	476	757
apples	78	227	252	457	905
amro's	35	238	187	187	308
dynamically	74	232	37	190	629
k=3	72	102	418	129	910
bugs	10	231	359	604	208
concurrent.futures	55	85	71	349	807
collumn	71	64	454	73	428
numpy.finfo	57	89	325	559	907
equipment	23	150	252	576	604
100000+	88	160	220	80	54
k=1	72	186	207	683	306
neatly	74	232	246	40	953
formatterwarning	63	144	283	483	927
importantly	82	241	17	500	29
america	80	285	323	742	765
mru	43	47	68	290	708
attempting	74	232	272	626	36
implications	10	50	17	537	246
mro	9	109	331	594	386
mri	77	192	365	429	841
mrk	98	104	23	733	92
pd.scatter_matrix	60	155	173	50	162
17571	48	59	74	332	681
cyclically	40	146	51	680	509
2.389	57	39	309	788	979
v.13	29	28	306	209	473
discovered	29	62	88	791	874
u'2014	67	213	95	185	51
30-40	88	197	22	574	217
liblapack-dev	13	170	50	104	174
df.values.ravel()	44	134	461	776	827
re-execute	27	187	108	122	214
collegue	17	62	88	233	874
stair	77	29	351	22	951
numpy-mkl	96	45	408	685	729
fig.canvas.draw()	6	46	345	599	373
3dim	71	64	154	519	981
aspect=1	58	243	494	775	599
daan	35	207	371	205	767
train_test_split	92	26	293	135	816
cpickle.dump	76	144	357	283	736
read_sql	86	68	119	478	824
2.5gb	88	182	373	342	236
128mb	88	283	373	549	236
daypricesdf	98	146	65	155	428
fast_kde	53	101	125	720	531
undertand	65	43	227	209	999
monotonicity	79	227	324	744	970
webapp2	81	206	178	202	564
bifurcation	28	14	267	487	841
c++	55	174	29	790	455
non-visible	20	31	259	757	509
input_array	1	294	112	232	280
bar_list	52	148	273	471	77
numpy.fft	77	101	20	430	547
cv2.imshow()	84	28	102	122	473
burst	23	29	294	595	257
deconvolution	28	230	428	166	353
color-coding	37	119	63	22	762
add-in	74	91	140	595	382
actively	34	1	35	317	79
ferms	47	224	263	424	736
reproduced	27	293	403	420	421
suspects	83	1	80	197	564
autoscale	58	44	494	341	388
manipulatable	82	50	341	663	141
?!?	29	28	227	432	473
numpy.savez()	86	222	426	102	820
lexical	61	6	291	573	951
0.97491349	15	157	64	296	288
colours	20	119	24	757	664
math.log10	87	55	201	382	591
bindata	3	110	93	155	410
?!!	68	28	227	432	343
import	81	88	110	739	183
lualatex	73	166	134	91	862
-99	52	79	424	415	203
-90	33	194	269	65	212
n_columns	1	274	112	677	442
pylab.imshow()	61	136	175	158	847
all_info	3	110	6	155	519
*sqrt	11	234	4	531	743
resides	30	162	478	247	344
tmax	80	78	93	133	272
sparseness	77	50	100	574	668
nils	82	137	246	209	472
df3.columns	44	47	181	290	827
well-optimized	55	174	408	90	651
reindex	92	156	78	763	691
sqldf	81	88	110	739	183
madness	17	13	250	39	589
np.longdouble	70	89	325	86	22
eventprofiler	17	13	143	312	589
inexplicable	46	231	151	173	568
group_name	43	134	68	290	827
inexplicably	29	28	306	791	473
.flatten	1	294	296	232	280
amino	78	286	114	425	995
np.random.randint	93	123	173	50	361
>>>	47	5	303	737	870
long()	63	83	283	715	311
drop-in	38	214	184	628	382
limmag1.3	43	179	93	556	187
lib-tk	50	145	225	168	679
1034	12	267	58	111	132
matplotlib.mlab	53	101	125	703	183
sediment_transport	99	288	443	191	744
arcsin	11	55	201	664	101
50x50	71	195	213	674	95
pd.ewma	43	47	493	76	593
vagueness	65	118	116	590	216
obscuring	37	31	467	780	851
a.bool()	92	217	375	263	146
no_nodes	71	142	114	139	756
error_kw	51	155	24	495	664
15%	88	266	22	337	89
converted	74	99	421	601	141
sitecustomize.py	50	145	225	168	679
fool	65	291	395	236	345
in-depth	68	190	234	97	185
goog.npy	30	162	478	247	960
metric	79	26	185	293	11
pandas.timestamp	70	35	245	781	920
z.max()	60	102	418	193	910
equal	98	146	317	141	868
v1.2.1	46	221	151	681	380
v1.2.0	46	221	151	681	252
spells	80	56	299	77	897
datastore	86	110	329	110	519
vslice	52	220	160	476	757
develop	23	1	79	396	866
inquiry	74	232	37	746	868
pyinstaller	13	128	5	197	368
meteorological	23	29	77	623	293
15min	80	149	447	460	612
data2d	1	274	349	539	412
pd.series.value_counts	92	164	78	105	971
pyplot.jl	73	6	278	158	450
close()	6	46	345	599	356
filedialog	81	88	110	739	584
vnew	72	102	418	73	77
coo_matrix	16	94	333	455	788
df1.plot	51	155	195	495	12
windowing	77	292	20	430	542
demean	3	193	6	98	347
alleviate	68	231	403	173	568
ascontiguousarray	9	184	85	453	280
taxi	23	250	299	94	293
foot	77	283	114	574	668
compromising	82	50	106	537	246
greetings	29	28	306	209	345
ps2	29	28	116	791	905
0.5s	88	197	73	196	217
axes.flat	19	12	455	480	806
%d-%b-%y	43	205	346	125	879
d-b	99	288	114	646	138
death	17	62	250	39	275
d-e	11	234	4	562	726
pdb.set_trace()	81	15	110	739	889
mmap	86	222	426	102	820
set_label_coords	58	44	90	341	683
30.526506	11	211	162	215	99
versa	74	232	182	661	363
downcasting	70	100	325	332	979
zonename	78	93	93	463	475
ami	83	84	376	670	467
psi	11	186	242	129	292
onscreen	73	125	248	276	304
packagename	30	170	244	165	174
psf	38	101	125	761	564
amd	96	30	480	785	729
salutations	43	115	231	709	631
amy	35	207	326	682	336
0.58	15	272	61	225	10
user_ids	78	297	243	390	705
subplot()	6	139	90	324	543
0.51	15	284	61	606	10
pss	47	224	112	139	726
0.53	15	211	236	514	99
0.55	15	211	61	606	10
amt	78	56	445	41	832
0.57	15	211	61	225	980
0.56	60	194	61	606	10
gui2exe	83	206	178	197	467
applymap	92	156	78	105	971
annually	80	56	254	723	931
d-1	11	234	4	531	56
itemfreq	19	42	125	13	782
networkx.draw()	6	161	90	543	481
output	27	137	459	122	508
scipy.test	81	5	110	199	443
twelve	80	56	299	723	897
n=50	72	186	114	129	616
verbal	27	137	305	420	328
exposed	38	109	29	732	370
panadas	51	136	390	272	847
exposes	38	117	152	732	305
csvdata	47	224	30	183	188
pandas.pivot_table	44	164	181	204	832
iinfo	19	214	125	641	782
1851	12	279	162	111	217
1852	98	258	162	796	217
7.75374	15	272	236	514	980
naivebayes	32	150	163	482	798
outarr	1	57	112	232	726
counts_vec	75	180	497	139	77
fromfile	70	54	382	260	405
propagating	3	117	38	173	961
refs_ok	64	204	29	716	370
.75	57	284	252	606	10
multiarray.so	30	259	94	553	960
assembly	55	174	29	90	651
sixth	98	263	454	796	428
.78	15	284	162	550	888
^_^	65	291	258	205	345
assemble	74	232	37	110	953
top-right	37	31	443	191	964
exciting	17	43	359	604	803
print_function	81	88	110	739	889
screen-shot	90	31	32	624	536
ufunc.reduce	10	214	125	525	782
digitize()	10	227	317	335	999
data.csv	76	199	286	283	754
np.linalg.eigh	16	94	462	782	800
backup	65	171	80	236	805
freeing	22	61	153	358	282
outlook	78	150	445	479	604
change_geometry	6	139	90	418	481
redshift	23	23	119	555	126
figurecanvastkagg	6	69	46	380	384
wc_unit	81	88	110	739	183
norm_conf	1	57	112	232	714
shrinking	37	31	443	207	668
intervention	22	50	294	75	328
stare	17	291	250	236	180
np.ravel()	40	294	10	231	782
qualifying	98	146	445	41	984
stark	22	180	100	537	905
ordinate	33	281	97	22	358
start	74	13	143	458	214
stars	99	288	282	646	138
-name	30	259	277	165	960
co-worker	17	43	88	233	803
delayed	22	187	108	361	815
barcharts	61	136	175	22	847
know-how	17	43	377	396	312
pow()	63	295	201	177	286
self.canvas.draw()	6	46	345	418	356
becasue	65	291	258	218	887
f()	0	275	295	684	231
embedded	90	69	46	158	384
default	64	117	152	209	638
20130102	52	19	263	284	622
20130101	67	201	309	2	24
drop_level=false	44	164	181	700	895
ipython.parallel	55	85	71	349	431
im.set_data	6	46	494	418	356
skewt	23	6	278	419	79
skews	77	151	106	626	762
607	12	267	488	751	132
600	12	142	220	528	106
603	88	197	73	196	217
argsort()	19	42	296	13	601
price_id	47	224	461	471	622
ipython's	38	147	189	226	818
30816	52	19	263	284	622
infact	29	28	306	791	473
value_1	43	164	231	204	895
-sized	71	64	268	738	981
pandas-ish	82	241	378	573	29
value_2	43	164	231	204	895
terminating	22	187	108	361	248
core2	88	30	480	785	729
forcing	29	171	246	190	526
10,087	15	284	236	514	980
poor	10	43	395	631	999
phys	86	222	329	607	405
60s	80	149	447	460	612
plt.figure	6	139	18	324	543
xmin=0	60	194	495	65	162
tranform	79	214	140	744	141
left-justified	32	110	420	788	475
registry	83	261	486	247	273
60m	88	197	73	574	217
pool	22	85	71	349	807
01.933000	67	213	95	185	51
value_y	44	134	82	558	965
value_x	43	134	206	558	622
acutally	74	263	152	468	638
couse	64	137	246	525	370
cores	55	30	480	785	431
value_a	43	72	68	204	708
usetex=true	73	166	134	764	862
monte	28	14	267	710	841
semantic	10	104	17	200	354
ceases	22	187	108	361	214
osx	85	276	233	198	858
month	80	56	254	723	897
thoughtful	35	207	371	205	336
mach-o	30	259	94	106	960
monty	17	14	267	710	841
bookers	78	93	243	558	705
stripped-down	27	293	403	420	873
demorgan's	79	214	8	113	135
newfunc	9	237	397	684	761
deedle	34	173	359	604	208
np.int_t	70	204	74	790	64
plt.plot	60	155	240	418	910
horror	17	62	250	236	275
roic	78	200	252	81	604
nbviewer	90	84	489	226	127
coloured	61	31	175	212	786
decide	74	232	246	209	472
dual-core	85	30	480	785	858
imagedata	84	219	102	607	427
0.0624	57	194	269	664	221
mapreduce	23	85	69	349	866
ass	83	206	80	197	564
-kington	35	207	409	407	336
track1	78	150	132	479	563
dissertation	23	14	267	15	841
rgbs	1	19	112	305	981
should't	29	28	227	209	472
ntotal	1	57	112	232	21
df.merge	44	2	253	427	176
fancyarrow	64	161	90	543	481
activestate	83	206	5	197	637
rgba	84	119	51	592	427
np.zeros	1	59	41	50	21
learned	17	62	88	161	874
erfj	75	178	154	150	726
5gb	88	182	373	549	236
d2ff42jctw8n80000gn	50	259	277	117	160
|^2	11	234	242	531	56
tracks	74	110	77	746	214
uneven	77	29	97	22	340
0.99.1.1	85	276	42	681	252
excess	88	263	22	468	655
preallocates	75	106	10	231	68
np.require	9	204	158	453	64
inspired	35	238	187	187	308
losses	78	56	445	574	347
fpath	76	199	286	283	413
indirection	55	50	330	691	122
arent	29	28	410	209	473
_all_	10	263	425	500	509
pyshared	30	259	277	303	960
700k	88	160	220	80	760
700l	48	274	180	172	159
requiring	38	241	341	691	305
returing	98	146	317	155	509
to_string()	92	185	275	183	322
ask	34	190	307	590	216
scipy.misc.imresize	84	219	102	193	845
conventional	74	232	17	209	382
fill_value=0	44	164	181	700	691
class_i	71	64	268	519	684
set_sizes	6	161	208	543	481
spectrogram	77	292	20	430	547
chaotic	28	14	267	710	841
y=mx+b	79	10	324	487	620
pre-packaged	83	206	80	197	564
glumpy	38	6	278	158	450
2015-05-22	98	258	82	796	832
2015-05-24	67	181	58	24	888
dates.py	50	145	118	483	927
7000	88	160	220	80	54
producing	74	28	459	122	508
recompilation	81	88	110	202	584
quantize	74	232	37	525	382
post_number	43	200	82	204	832
yticklabel	37	31	443	780	349
scipy.io.netcdf	86	222	329	260	882
744	80	160	73	77	931
terrible	82	241	395	334	463
threading.py	50	145	118	483	204
-like	38	214	291	200	382
tvol	43	47	231	265	708
overcomplicating	10	241	274	236	215
multi_df	44	134	65	105	827
pyobject*	9	204	29	790	64
ax1.twiny()	58	139	494	418	162
utilize	38	232	341	525	382
unlucky	65	291	395	153	812
heart's	27	137	246	110	188
reject	79	227	317	457	970
chunksize=1000	76	199	286	51	698
2011.05.16	80	260	254	133	931
13:22	80	260	77	530	931
communicating	23	85	294	349	431
clf.fit	48	274	349	539	412
_not_	10	231	246	632	999
pandas.io.data	81	88	110	739	183
horizontal	61	31	443	780	276
misnamed	65	291	258	407	887
numpy.isclose	87	42	198	13	907
corrupting	22	162	80	247	344
travis	83	128	5	197	467
high-precision	55	1	408	756	651
anytime	10	231	246	500	629
2013-11-12	67	213	95	185	51
pyobjects	55	174	29	790	807
pointlabeltooltip	29	28	175	122	473
photoshop	73	125	248	387	353
remnants	83	171	80	190	467
2d-array	71	64	10	519	684
example_df	43	52	68	181	588
basename	47	144	58	16	736
thermal	77	14	267	710	531
pic_1	52	19	461	471	881
pic_2	52	19	461	471	881
interquartile	77	266	269	10	358
plt.hist	51	123	63	557	780
jyni	55	1	347	317	564
.apply	43	47	493	76	593
absence	10	227	317	746	868
vect	72	275	185	673	756
systems	28	1	69	768	564
differed	3	227	445	94	905
undestand	17	137	227	334	327
fetchall()	92	68	119	478	126
haven't	29	62	410	161	457
misalignment	37	31	467	780	851
evening	17	62	250	39	180
reordered	40	64	182	587	673
cel	35	238	409	187	336
cet	80	285	323	742	920
c.shape	1	274	41	677	955
permissible	10	241	395	334	999
reset_index()	44	156	78	763	971
pieters	35	207	409	187	336
rsplit	92	156	109	512	808
_want_	10	241	246	500	472
proj4	83	206	178	197	854
intractable	89	50	100	497	463
mahalanobis	16	23	185	293	11
cm.get_cmap	84	219	102	592	427
radian	33	292	20	430	725
radial	33	176	282	617	908
heavy	38	1	479	317	866
transcribe	27	137	250	110	118
solvers	79	22	324	214	610
multiprocessing.process	0	85	71	349	807
data.applymap	87	55	493	76	593
cm.greys_r	20	219	320	193	845
buffers	55	184	153	691	122
tick-label	64	290	166	706	76
xlabels	37	290	166	706	76
x.abs()	87	52	493	290	985
marcin	65	291	371	236	345
pivoted	3	134	65	354	125
buffer_	63	144	329	361	405
unstacking	44	156	65	763	125
safety	10	227	17	716	790
7	12	272	319	685	544
e-mail	86	68	119	478	126
matplotlib.cbook	81	88	110	739	584
volatilityseries	9	109	331	594	386
housed	23	116	6	370	519
df.l.shift	11	234	180	215	99
houses	23	62	88	94	67
perturbation	79	10	324	487	970
unsightly	61	31	467	212	138
brightest	99	195	75	191	744
sma_45	98	258	317	141	377
thxs	68	207	371	205	767
loads	86	222	329	58	519
unresolved	63	244	283	24	323
statments	29	46	345	122	508
pyaudio	84	192	365	676	946
y.sum	1	274	112	305	695
.count	43	17	487	4	244
american	32	67	132	482	765
gene_name	78	110	243	390	754
50-100	88	160	220	80	54
df1.merge	44	2	253	427	176
tf1	60	0	418	485	162
weekday()	80	35	245	354	333
equating	77	146	97	141	762
horse	78	150	430	149	423
pyplot.specgram	77	292	20	430	547
bytescale	0	106	295	684	231
subprocess.pipe	76	144	327	147	736
fig.set_facecolor	20	119	259	757	846
station	78	250	77	182	604
fftw3	55	174	408	90	651
raws	47	134	461	471	622
0.14.1	46	221	151	331	621
0.14.0	46	221	151	157	621
trapped	10	231	17	716	215
.results	86	222	329	107	519
longtitude	33	102	135	129	298
log_lower	78	258	82	558	377
1919	72	142	162	139	60
tft	52	0	263	485	855
classifiers	28	26	354	135	816
jquery	23	6	278	158	127
grew	22	283	373	549	236
grep	30	70	244	165	960
grey	20	119	259	757	786
hesitating	65	291	395	236	473
greg	35	207	409	20	336
.aggregate	87	164	493	76	419
toward	17	13	377	39	589
procedural	38	241	390	732	389
eventid	98	224	317	155	881
non-technical	10	118	17	590	999
880	88	142	162	528	106
884	15	256	162	133	888
footnote	64	214	90	684	683
constructors	9	109	331	594	386
randomly	74	146	454	646	616
3.625	52	19	273	471	622
well-written	38	1	479	317	219
null	32	146	424	414	509
bz2	86	222	382	102	405
py27_0	83	206	178	202	380
cave	52	72	68	284	622
python-2.7	83	206	244	165	960
python-2.6	83	206	244	165	960
oversampling	77	151	339	631	340
unconstrained	79	10	324	214	610
pandas.timegrouper	44	149	447	460	612
ticker.py	30	162	478	483	927
non-blank	74	110	37	746	868
datalat	72	102	418	129	722
literal_eval	92	39	275	183	808
numpy.vectorize	19	214	422	13	761
newvals	52	19	263	284	855
getter	9	109	331	594	386
generalising	38	50	341	744	382
velocity	33	176	114	182	210
any()	19	214	198	512	808
physics	28	14	267	396	275
naively	29	28	246	209	874
phenomenon	29	231	106	173	905
hovered	90	69	32	624	536
ffisegydd's	64	238	187	525	308
scipy.interpolate.splprep	53	10	238	720	396
serialised	86	68	275	611	444
translation	28	137	154	744	141
meta-information	86	50	426	663	843
justice	82	241	378	573	472
numpy.linalg	16	94	462	782	800
y_coord	99	103	443	191	744
ques	34	118	116	97	142
swapaxes	19	294	296	291	280
2015-04-02	12	279	162	133	272
eumiro's	88	238	187	337	308
yml	86	222	329	595	405
multi-part	34	137	116	110	953
feels	82	241	378	334	29
pretending	82	241	341	497	812
competing	55	85	71	349	431
boils	10	118	143	590	589
numpy.atleast_2d	19	294	296	231	601
kindly	68	207	465	432	343
host_subplot	58	139	90	324	543
fluff	37	31	116	780	851
dtm	77	176	77	623	293
boost	55	180	29	537	694
tossing	82	13	106	39	589
.resize	48	219	41	401	21
pathcol	0	46	226	44	481
interim	82	50	386	534	359
r_vec	77	275	63	664	756
ylimits	58	44	494	642	388
mangle_dupe_cols=false	98	146	424	414	203
locale	32	166	134	764	862
sth	47	224	227	482	472
mantra	82	241	17	500	215
close	29	187	108	361	214
cur.execute	47	224	30	478	454
high-pass	77	292	428	430	227
-shared	50	145	133	117	30
locals	9	237	397	436	864
dateutil	13	128	5	104	715
#008000	20	105	346	53	764
pictures	61	125	175	276	951
muliple	74	232	37	587	36
3xnxm	71	195	10	674	684
spyder's	90	15	189	540	818
pictured	37	136	175	22	847
ranker	0	134	493	76	832
missing	29	28	424	791	655
somwhere	98	110	454	122	214
healpix	84	230	128	166	908
scalability	28	14	17	128	866
ranked	98	146	454	796	984
bivariate	79	23	332	511	620
abruptly	90	187	108	361	248
league	78	150	445	479	604
collaborators	23	1	294	317	275
twiny()	58	290	166	391	388
2014-10-31	80	35	309	727	24
wouldn't	29	28	246	500	196
wav-file	86	192	426	601	405
dropna=false	44	39	181	700	130
forgotten	65	291	258	407	887
experimental	28	14	267	761	841
pandas.dataframe.hist	51	161	140	543	699
100ms	88	197	73	506	89
adx	80	258	254	723	410
dfix	52	47	180	290	437
mouseevent	90	69	32	572	112
gohlke	13	261	5	797	391
32-bits	83	206	178	685	858
right_index	92	2	253	33	176
toolitems	6	109	397	44	386
side-effect	10	231	395	335	370
destructor	9	61	153	358	282
instructing	74	99	246	601	141
df.head()	27	293	202	183	188
visible=true	58	44	166	418	890
get_position()	58	44	90	543	683
__new__()	9	109	331	594	386
covariance	16	94	462	782	800
modelling	28	14	267	710	841
lives	30	162	478	247	344
ohhh	65	291	258	407	887
accomplishes	64	137	459	732	421
floating-point	57	89	325	86	22
intriguing	34	173	307	590	812
practicality	82	180	479	537	720
invocations	22	171	397	534	807
pace	17	197	143	39	180
accidently	22	237	397	540	864
smart	82	241	378	573	29
guido	34	173	35	590	142
gmt	80	285	86	781	920
guide	34	254	234	302	565
pack	74	232	37	110	28
byte-string	32	99	420	601	979
costly	82	50	100	497	463
unicode_literals	81	88	110	739	889
binwidth	77	292	63	557	780
00s	32	78	346	133	272
00z	80	29	254	77	931
norm=none	60	234	4	193	910
50.89081787	15	157	64	296	837
grant	80	56	430	149	423
wnat	74	232	246	190	629
karl	35	207	409	205	336
onclick	6	69	32	44	112
grand	78	266	148	132	347
composition	10	137	479	482	354
superfast	35	207	371	205	767
button_press_event	6	69	32	380	112
ratings	78	150	445	479	604
00+	67	260	12	372	958
hdfview	86	222	336	611	450
data.dtype	1	274	461	471	881
003	47	200	162	133	888
002	78	163	284	133	272
001	67	181	284	133	272
000	88	160	220	80	106
outbound	77	29	299	77	931
run()	90	46	345	599	356
dissimilarity	16	94	185	293	716
clf.predict_proba	0	275	349	539	412
inital	29	28	306	122	214
int64index	63	78	52	616	477
obviously	29	28	306	209	472
synopsis	10	137	116	590	215
calibrated	77	292	20	430	547
set_offsets()	75	106	208	543	481
consistency	10	227	17	200	215
blitz++	38	214	422	333	650
lin	79	275	244	381	239
exploits	82	50	341	497	305
reviewed	34	118	247	97	905
0.0008	77	151	148	631	762
na_filter=false	76	199	322	51	698
v1.6.1	83	206	151	202	380
v1.6.0	46	221	124	202	435
0.0000	57	89	8	141	743
reviewer	78	200	252	479	423
0.0002	11	194	4	686	743
0.0005	15	284	256	606	110
questioner	34	118	116	233	812
np.unpackbits	70	59	357	332	522
informal	88	147	55	337	89
shortcut	38	214	17	200	669
new_range	43	201	309	2	24
operators	75	214	198	113	135
one-liner	82	241	378	573	669
useless	10	241	395	334	812
stack-overflow	34	190	307	97	216
showing	27	28	175	122	508
pylab.figure()	6	46	345	418	543
zero-value	20	119	259	757	786
goodness-of-fit	79	23	332	638	11
logical	75	104	198	113	135
process.py	50	267	118	483	927
like	74	232	246	209	36
excluding	74	146	37	746	868
statsmodels.formula.api	79	26	168	761	620
filt_out	98	52	162	139	714
altough	10	241	395	209	999
gui_opencv()	0	224	295	424	881
randomstate	93	109	193	628	507
u'employer	43	105	231	71	255
eek	82	180	341	537	220
popular	38	1	291	317	79
eeg	23	192	365	676	946
terminology	10	43	377	396	98
sketch	27	137	403	420	951
escapechar	32	185	452	764	413
cones	99	288	282	315	138
medoids	99	288	185	293	616
...??	29	28	227	209	472
economic	78	250	299	94	67
plumbers	12	279	488	751	106
np.asmatrix	1	57	41	232	726
waitingkuo	35	207	371	205	767
bigmatrix	75	197	497	139	89
ozone	80	29	77	77	931
user2357112	35	238	326	187	336
ioff()	90	15	189	226	356
actualdatetime	43	273	309	727	852
1.11022302e-16	15	211	64	364	265
dype	70	99	74	332	979
moviepy	38	6	278	158	450
assists	78	200	132	149	423
negatives	57	146	317	605	509
backprop	28	22	324	566	13
numpy.mean	87	193	121	673	608
wouldnt	17	291	410	236	196
fancybboxpatch	6	161	90	543	109
copy=false	48	59	2	453	280
bgr	84	195	51	592	427
silence	29	263	389	716	686
19:00	67	260	12	372	958
rho	72	102	418	129	756
.column	52	0	263	290	855
pastebin	27	293	403	420	579
cooperate	83	206	80	131	564
reworked	27	137	187	525	308
placing	74	232	386	780	526
combinator	0	55	295	129	726
6867.0	15	157	64	296	837
texmanager.py	50	162	118	483	927
spawning	22	85	71	349	431
arima	28	26	168	761	816
injection	10	237	119	478	215
orientations	99	288	282	646	138
0xc3	32	16	190	477	261
datetimelike	70	273	245	678	852
np.indices	19	294	296	291	601
locally	83	84	376	184	467
pct_change	92	193	78	614	121
similar	29	137	459	161	36
mybigarray	52	148	206	284	650
ordered	74	297	182	524	9
recalculates	22	117	497	534	68
reopening	22	187	108	599	248
recalculated	74	171	148	98	673
amounts	88	50	100	94	246
dashed	61	31	24	212	276
np.nditer	19	294	296	480	806
bmat	16	294	333	455	788
application	23	84	294	595	467
square_list	75	106	397	684	68
department	78	150	132	479	626
decremented	9	61	153	358	282
dv1	11	186	242	531	56
manhattan	99	288	185	293	716
dashes	32	16	24	42	664
scipy.integrate.odeint	79	10	324	566	610
graphically	61	23	175	626	625
0.29	15	194	61	606	10
svn	46	221	124	681	535
svm	28	26	354	135	816
e	47	186	25	129	306
syntactical	10	43	395	200	812
complicating	17	241	88	236	345
svg	73	125	248	276	304
svd	16	94	462	782	800
resolving	68	62	465	432	343
svc	28	26	354	135	816
utilised	29	28	80	791	564
0.24	15	194	61	606	10
2014-10-14	80	56	254	723	897
correlates	57	151	8	631	62
utilises	55	30	480	785	651
everywhere	29	28	410	209	509
svt	52	78	162	133	922
imprecise	10	151	106	631	970
virtue	55	180	55	242	651
funcs	38	214	154	98	382
zero-length	75	106	421	519	981
funct	0	214	295	684	231
numpy.string_	70	83	383	616	286
myc_rb_e2f	0	275	295	684	231
funcb	0	275	295	44	231
funca	0	275	295	684	231
y^2	11	234	242	531	56
np.savetxt()	86	54	382	260	698
compact	82	241	378	573	29
m=10	88	142	55	337	89
mediannum	11	211	4	531	743
2014-09-11	67	213	95	185	51
uninformative	63	83	389	715	39
friendly	38	241	291	317	628
transaction_id	3	93	445	41	984
func3	43	47	68	290	593
func2	87	55	295	337	231
func1	0	275	295	684	231
assuming	74	232	306	209	36
csvfile	76	199	286	283	698
tobytes	9	109	357	594	782
wave	77	292	20	430	942
vector's	74	184	10	519	122
appstore	83	206	244	165	368
_actually_	27	293	305	420	579
telling	29	28	227	791	473
wavs	86	192	329	676	946
dimensionality	71	64	354	150	981
positions	99	288	443	646	744
michael	35	115	409	20	423
ryan	35	207	409	20	336
enforce	74	232	37	631	999
3x5	71	64	268	738	95
rec2csv	86	91	329	107	519
math.pow	11	55	201	664	292
from_records	92	54	275	183	322
save_count	64	185	226	641	807
result.shape	1	274	112	305	159
jump	22	13	143	39	589
redone	29	171	388	791	874
df.index.year	43	47	68	290	407
rcparams	73	166	134	764	862
notwithstanding	10	118	106	631	999
n_range	1	275	112	305	21
hspace	58	138	494	391	299
66%	88	197	73	574	217
matplotlib.colors.normalize	25	119	320	49	296
precisions	57	89	325	788	22
tweets_data	47	224	30	424	736
sub_df	44	93	65	558	965
upper-triangular	71	64	127	738	95
((8	48	59	41	50	21
pandas.isnull	92	72	68	181	17
data.index	43	72	68	290	708
pairgrid	51	136	195	272	847
convert	74	99	37	601	141
copyright	50	17	223	4	634
function's	0	237	397	436	231
bquery	38	1	125	611	651
gend	47	67	223	155	764
gene	78	286	243	425	798
lamda	92	156	78	105	971
foresee	10	231	17	173	568
zipcodes	3	110	243	712	754
plt.xscale	58	44	226	341	8
manage	29	232	410	209	457
llvmpy	13	170	50	104	482
4.75	12	256	162	196	432
figuremanager	6	69	46	380	384
palette=	60	17	351	4	385
_nx	81	88	110	739	584
left-inclusive	80	146	148	209	472
varaible	3	110	243	155	984
ignore_index=false	44	2	260	33	176
ret_index	76	181	58	24	454
postprocess	74	232	246	110	629
fig.draw()	6	46	345	599	356
historically	17	231	88	202	874
10:32	98	258	254	796	377
~80%	88	180	55	139	89
formally	79	23	332	638	531
.ipynb	73	15	189	540	818
:-(	17	43	410	236	457
visibility	64	290	24	78	370
numpy.digitize()	19	42	296	13	512
average_	1	57	112	232	21
datareader	86	116	119	581	67
palettes	20	119	259	137	296
~800	88	197	73	80	217
resize	90	69	46	207	536
boards	34	173	247	161	746
hist2d	25	136	63	49	780
lapse	17	62	88	39	214
averaged	77	29	148	98	347
columns=lambda	43	47	493	76	593
numpy.argsort()	19	42	296	13	512
12.200000	15	211	236	514	980
meet	98	146	317	605	602
averages	80	193	299	77	347
10:30	80	163	284	718	483
links	34	254	234	302	565
argrelmin	98	103	317	673	509
np.argpartition	19	42	296	13	886
chisq	79	23	332	638	239
pulling	23	13	27	370	161
htype	98	148	454	139	77
img3	20	219	102	401	845
img2	84	219	102	401	427
img1	84	219	102	401	427
10:37	67	213	95	185	51
rico's	35	238	187	187	308
quote_minimal	57	185	162	133	444
defective	16	94	462	782	800
stole	35	207	371	233	336
de-couples	64	44	166	341	184
pyqt	90	38	46	380	384
narr	52	19	160	284	650
n-sigma	99	31	467	10	563
un-related	27	293	403	420	579
2014-02-01	67	213	95	185	51
instinctively	17	43	246	500	118
fare	43	200	430	149	708
numpy.in1d	19	42	296	13	512
0020	78	200	132	550	888
link1	34	254	234	302	565
link2	34	254	234	302	565
farm	23	85	71	94	66
imgb	72	132	273	284	19
imga	1	19	112	305	756
imgg	48	219	102	401	427
d-dimensional	71	64	268	519	981
s8	70	205	346	53	576
3xn	71	64	268	519	684
10:35	67	279	319	133	465
imgs	1	219	102	401	757
pandassqlalchemy	46	221	124	331	435
0,400	60	194	269	65	393
tranformation	99	230	428	166	908
cv2.imshow	84	219	102	401	427
computations	55	50	341	756	651
py27-pandas	13	170	50	104	174
query()	92	156	78	105	971
s1	72	130	431	174	624
unique_id	78	93	82	204	832
p1a	60	17	240	4	567
skimage.morphology	53	101	125	166	782
startswith	92	35	109	512	808
sigmoid	79	275	332	363	292
y-data	37	290	166	706	388
xarray	72	102	216	305	756
including	74	232	159	209	36
s5	70	105	74	53	764
during	22	171	306	361	568
to_sparse()	22	50	388	680	655
thanking	68	207	371	205	767
subplot_kw	58	139	226	641	543
jnumeric	38	1	80	197	564
numpy.var	79	23	332	638	239
high-low	77	29	299	77	347
temporal	77	29	148	94	340
polaraxes	64	161	90	319	683
plot.scatter	64	28	246	209	472
exception_count	78	56	445	41	604
3-character	78	110	163	253	798
firstindex	47	0	263	424	567
factorial	93	94	462	562	800
frontal	28	14	252	149	750
scatterpoints	64	161	24	49	664
subtraction	40	146	154	98	62
optimal	82	241	341	497	970
some_percentage	58	138	495	642	299
querying	86	68	119	370	126
dll's	83	261	486	247	368
text-only	23	187	108	595	383
loc=0	60	155	240	557	12
loc=1	58	44	90	418	890
loc=2	58	138	495	651	224
mytest	47	224	30	4	385
university	23	14	267	179	275
nameerror	63	83	283	715	777
slide	61	31	32	624	536
gists	27	173	234	302	905
|	47	51	487	151	244
gen_data	75	184	497	534	68
single-threaded	55	180	55	90	651
low_price	44	164	181	700	895
constitute	98	146	454	646	999
image-processing	28	1	69	128	866
minutes_array	3	35	65	781	410
re-using	22	171	386	732	526
indexs	98	110	454	587	984
transitions	77	151	106	429	762
special	38	232	17	200	305
maximizes	79	23	185	638	11
time=	67	260	12	668	931
dataary	1	19	41	232	855
littered	29	171	108	361	417
needn't	75	148	127	139	999
time1	80	35	26	727	377
dataarr	52	19	263	528	19
time-	38	1	341	756	433
xaxis	37	290	166	706	184
maximized	90	187	108	624	643
cause	29	231	389	173	568
str.split	92	54	109	512	808
index*	40	146	182	587	999
galaxies	33	250	77	623	210
delegates	38	109	331	732	305
100x100x100	71	195	213	674	95
index=	44	164	181	348	895
index2	52	148	273	284	714
delegated	64	85	226	641	370
index1	52	148	273	471	714
determining	74	232	37	746	868
timer	90	69	345	599	112
times	88	197	73	534	217
echoing	9	237	397	436	699
isotropic	99	288	339	646	744
projectile	33	14	267	710	841
timed	88	180	55	337	89
sub-set	22	171	100	572	370
neccesary	82	241	341	500	118
automating	23	14	294	94	866
2014-06-15	67	260	12	372	958
confuse	10	43	395	500	215
list3	52	12	461	471	622
list2	52	148	461	471	77
list-	75	64	10	519	684
randomized	28	26	354	135	816
x^3	11	234	242	531	56
x^2	11	234	242	531	56
hehe	65	291	307	236	345
z-score	79	23	332	638	11
you're	10	28	246	500	472
df_c	44	93	82	558	965
df_b	44	93	243	558	705
df_a	44	93	243	558	705
tobytes()	9	184	357	453	782
tinkering	17	62	88	161	647
mkdir	30	162	244	165	960
wrapper	38	109	29	790	564
bokeh	51	136	278	158	847
is_quiet	57	100	325	86	22
undergoes	28	14	267	304	841
wrapped	9	109	29	790	382
df_y	3	232	6	15	36
10.9.1	85	276	233	198	858
10.9.2	85	276	233	198	858
10.9.3	85	276	233	198	858
10.9.4	85	276	233	198	858
10.9.5	85	276	233	198	858
lists	75	297	10	776	903
x^n	11	234	242	531	56
matrix's	16	94	333	455	788
listi	0	297	461	471	231
x^t	16	94	462	782	800
lista	72	130	418	129	591
py_begin_allow_threads	55	174	29	349	282
list_	87	12	461	471	260
cpython	55	174	29	90	564
bloat	22	283	100	537	246
np.nanmin	87	39	424	414	608
thrashing	22	283	373	128	282
submitted	34	173	359	604	208
succinctly	82	137	378	40	29
df_3	78	93	82	558	965
df_2	44	2	260	558	965
df_1	44	2	65	558	965
comparaison	75	28	227	209	472
enforced	10	231	389	716	215
.grid	6	46	345	418	162
julian	80	163	254	723	897
is_good	92	156	78	105	971
sv	72	186	25	683	756
reorders	40	156	182	587	125
unpivot	3	156	65	763	125
enforces	74	117	152	594	305
os-specific	83	206	80	202	380
zoomable	90	125	248	276	304
ind1	52	148	160	284	776
mappings	3	297	182	691	141
ind2	52	148	160	284	776
incanter	55	1	408	90	651
get_value	92	109	78	105	130
sandbox	83	84	178	197	467
figlegend	64	44	90	391	683
sequel	86	68	119	478	126
intrinsic	38	6	125	732	305
signal.convolve2d	19	101	125	231	782
settingwithcopywarning	63	104	389	733	154
annulus	33	281	114	617	725
fig.colorbar()	64	161	90	543	481
numbapro's	55	214	422	756	651
subtracted	98	146	148	98	62
inds	52	148	334	647	582
url	86	68	27	595	127
indx	52	148	273	284	77
statareader	86	68	367	107	519
constrain	79	151	332	207	13
gesv	16	174	125	90	651
keypress	90	69	32	624	112
-pylab	90	15	189	226	818
b-c	11	130	180	215	306
b-a	11	234	4	664	56
mspaint	27	137	403	420	951
3.2633	15	157	64	296	144
word_count	78	200	223	463	965
halting	22	187	108	361	248
yfit	11	275	314	129	292
scipy.linalg.svd	16	94	462	782	800
unfinished	34	137	116	15	421
ngc	12	279	488	111	272
varid	98	297	454	587	984
sub-directory	30	162	486	247	344
brighter	20	119	259	757	786
inherited	9	109	331	404	386
joelfred	30	259	277	303	552
intersphinx	64	254	234	302	565
str.get_dummies	92	156	78	105	971
achieve	82	137	227	432	472
vitables	86	68	336	611	126
with_labels=true	58	44	452	418	162
indentations	27	118	305	403	558
colname	43	104	23	733	711
b-1	52	19	160	284	776
listoflists	47	224	162	424	881
navigationtoolbar2qt	81	88	110	739	889
cstringio	76	54	382	306	405
tobacco	0	224	30	621	881
expansions	32	237	420	403	768
install.sh	30	259	244	165	960
tuned	55	174	408	768	651
1293926400000	67	213	95	185	51
plt.sca	58	139	494	324	543
multiplying	71	64	154	150	62
y-coord	32	281	280	191	964
approriate	64	185	90	641	370
operates	40	117	152	58	638
outputted	74	110	329	122	508
operated	75	184	10	691	673
10's	88	160	220	80	54
numpy.median	19	193	121	31	782
backfill	80	149	447	414	691
nightmare	17	62	88	659	327
tend	10	241	17	500	215
macros	38	1	29	790	455
rate1	78	67	26	145	742
quartiles	51	281	287	10	358
understood	65	118	227	407	887
select_table	86	110	426	370	161
ken	29	28	274	110	472
dataframe.boxplot	92	156	78	105	971
constituted	98	146	317	605	602
haclose0	87	105	231	177	255
supernova	78	250	77	425	604
jid	78	56	445	41	639
interfere	90	171	80	131	370
kicking	17	62	88	236	874
array.min()	98	148	317	141	221
key	3	297	280	776	903
python-ggplot	64	6	390	158	450
pool.join()	22	187	108	361	248
ker	1	19	112	305	981
.to_json	44	134	181	700	987
hits	22	13	485	361	214
sniff	86	16	275	601	444
limits	37	290	494	207	388
2.49	15	272	61	225	980
estimation	79	23	332	511	531
interp2	53	101	238	299	396
subtitle	37	290	90	391	76
set_aspect()	6	161	90	543	481
afaik	38	232	17	209	305
tuesday	80	163	254	723	395
array-likes	75	106	421	756	681
rows=	44	164	181	204	895
shapes.csv	27	137	459	15	421
genre	78	150	445	479	604
afaiu	35	137	116	209	472
rows*	98	160	220	80	54
erased	90	263	388	361	214
accomplishing	82	241	378	573	29
4.8.2	85	45	264	513	634
geometries	99	288	282	315	138
cent	98	194	162	528	212
immense	82	43	100	537	246
erases	74	117	152	190	629
xlsx	86	91	367	107	86
xpos	72	102	418	485	77
optionally	74	232	152	190	629
controlled	64	232	152	641	370
pre-counted	77	136	175	626	847
git+	13	170	50	481	174
controller	23	84	376	184	112
xlsm	86	91	367	107	86
smoking	65	291	227	407	887
os.getcwd()	30	5	478	199	870
boto	30	162	486	247	368
learn's	28	26	354	135	816
12gb	88	182	373	549	236
timeit()	29	180	55	97	905
holdings.portfolio	43	47	231	71	593
g5	78	200	430	204	423
surface	61	176	282	212	908
simone	78	200	93	463	475
examined	29	171	111	161	746
getvalue()	29	106	389	791	979
ids_cutoff	52	148	273	139	622
sqrt	11	234	4	664	56
parts	74	137	159	209	36
speaker	17	43	377	396	275
party	55	1	80	197	564
http	23	84	376	184	127
####	47	224	58	424	888
colouring	61	119	259	757	786
steals	37	31	443	780	851
key2=	11	234	180	531	56
u'id	43	105	93	265	764
48	12	279	319	111	465
49	12	279	319	111	465
array.max()	98	148	269	141	221
month=11	67	201	284	2	24
part2	72	134	154	278	756
riff	86	222	329	260	519
rawdata	47	224	30	155	622
increasingly	77	151	100	497	463
stack_test3.xlsx	30	145	286	138	204
liked	35	207	274	236	345
43	12	279	319	111	465
distant	99	288	282	631	762
40	12	279	319	528	106
advertised	38	6	274	334	628
bottom=	58	138	495	651	299
same_kind	70	204	74	53	979
2012-06-09	67	213	95	185	51
event_time	98	148	317	141	377
density	77	23	332	511	531
y.max	60	275	121	673	695
headed	32	110	420	482	475
xs=	52	19	263	364	855
timeperiod	9	109	331	594	699
0.13rc1	46	221	124	331	435
balloons	88	197	73	94	217
a+b	87	57	295	673	608
4+	88	197	73	337	217
bbox_inches=	58	243	18	16	721
howto	74	254	234	601	141
_mask	9	220	331	594	699
matplotlib=inline	90	15	189	226	818
bottoms	52	103	206	485	221
intersection	99	288	11	315	138
reproduceable	29	28	359	173	568
loss	28	151	106	631	246
dat.date	52	134	260	290	582
necessary	74	232	246	209	305
lost	29	62	88	548	803
fernando	38	6	35	579	745
40000	71	142	220	80	60
lose	74	50	246	548	305
async	22	85	71	349	807
re-inventing	38	241	341	500	118
.transform()	92	156	78	105	121
library	38	1	80	317	564
home	30	259	478	159	960
nibabel	38	6	125	607	564
pinpoint	29	13	143	659	677
overlay	61	136	175	626	786
re.ignorecase	76	51	487	151	244
broad	34	190	307	590	216
objected	38	1	479	691	354
overlap	37	31	467	780	851
mutation	64	109	158	436	370
demonstrated	34	238	234	97	308
u'beauty	50	157	277	71	469
to_frame()	92	156	78	183	322
0.083	15	211	162	606	10
reaching	22	13	143	39	589
real-world	28	151	106	94	970
.units	52	0	263	290	288
naics	43	72	68	265	708
idl's	61	101	125	703	392
mlpy	83	206	178	761	854
add.at	19	42	296	13	886
read.py	30	162	58	381	383
myfunc2	75	12	455	480	806
previously	29	171	306	791	874
2**24	88	142	220	139	918
2**20	88	142	173	139	60
cocoa	83	38	178	635	810
cummulative	77	56	148	98	347
t-test	79	23	332	638	11
pointless	82	241	395	334	463
hmmmmm	29	28	227	791	473
additional	74	232	246	190	655
time_dense	98	286	185	293	744
lagged	3	56	148	98	347
struct.pack	70	100	357	332	522
skewing	37	31	467	207	668
north	33	176	282	644	725
.round	43	47	180	290	593
snipplet	68	190	116	432	328
triangular	16	94	462	782	659
histogram	51	136	63	22	780
gain	82	180	55	537	246
winch	77	14	114	710	210
highest	98	146	148	796	868
minutely	80	29	299	464	466
`"`	32	16	420	403	768
holes	99	288	339	646	138
sinusoids	77	292	20	430	547
re.split	43	51	487	151	244
garbage	22	61	388	358	282
display	74	125	175	122	625
1.094990	67	67	256	130	764
evals	52	0	206	284	714
800k	88	160	220	80	54
3j	11	55	201	562	726
universal	38	214	125	744	564
linearity	79	23	332	487	11
exogenous	79	26	168	518	816
multimodal	79	23	332	511	531
beats	82	180	55	337	720
b_l	52	148	273	471	622
education	17	43	377	396	275
blit=false	6	38	345	599	356
functions	38	214	125	756	382
ingredients	78	297	163	253	798
packs	38	1	80	458	28
list_of_files	47	144	30	283	736
arctan	11	234	242	416	292
convert_objects()	92	39	78	183	934
self.tz	60	201	418	193	8
pd.read_json	76	199	275	183	322
df.shift()	43	52	68	290	985
~30x	82	180	55	337	219
stat	78	200	430	149	423
star	61	176	282	212	951
vectorizing	82	180	341	537	219
radially	77	151	282	511	762
stay	37	13	246	190	629
stab	82	137	459	236	669
additionally	74	232	246	209	36
4g	88	182	373	549	236
8000	88	160	220	80	54
statefulness	64	231	390	732	389
typenum	48	204	74	790	64
function1	70	204	295	684	231
function3	70	204	295	332	979
function2	57	89	201	559	743
shunt	74	13	6	548	851
antialiasing	20	31	428	757	303
occures	12	28	306	361	473
epdfree	13	128	5	197	637
fieldname	78	134	93	390	260
~300	88	160	220	80	54
draw_wrapper	50	267	118	483	679
im.size	47	142	162	424	60
chiming	35	207	371	205	767
function*	0	237	397	684	864
function-	29	28	227	432	472
indirectly	22	85	397	184	807
whoops	65	291	258	407	887
soultion	82	241	274	573	669
single-step	82	50	341	573	29
clean-up	3	171	6	190	629
astray	68	190	307	654	803
cocoaagg	73	38	134	635	810
attemp	74	232	306	209	36
line.strip	76	51	487	177	244
isometric	23	195	128	158	127
buddy	35	207	371	205	767
aug	67	163	284	718	483
sines	79	10	324	487	942
aus	43	200	82	145	965
c.f.	61	13	306	302	762
swap	40	283	182	190	363
offending	29	263	305	468	655
recycle	20	119	259	757	786
aux	52	19	160	284	726
sorry	65	291	258	407	887
zero-valued	77	151	106	631	668
voil	83	206	80	202	564
collaborate	34	1	69	321	564
void	70	204	74	790	64
non-sparse	16	94	333	455	241
nlayers	72	288	114	305	756
ptvs	83	15	178	540	818
python-scipy	13	170	50	104	174
crops	29	31	213	680	353
sns.tsplot	51	149	195	272	12
5856	43	79	68	290	708
unrelated	10	231	395	173	568
enhance	10	151	106	525	246
markov	28	14	267	710	841
pd.read_hdf	86	68	379	217	502
recalculating	40	146	497	98	347
likely	82	241	395	500	463
tangential	33	292	282	617	725
amv	98	258	148	796	347
str.join()	19	12	455	480	806
ctrl+f	64	254	234	302	565
use_index	60	155	240	495	162
self.__stoch	47	224	346	177	576
16384	12	142	461	528	60
sub-frames	3	50	6	354	125
probelm	34	62	272	97	746
numpy.abs()	11	55	201	664	743
cumsums	98	146	127	587	744
gridcode	78	150	445	41	604
metadata	86	222	426	611	820
med	98	146	317	673	785
niche	38	1	291	317	354
mec	64	161	24	78	664
mem	22	283	373	549	236
mel	43	72	231	265	708
men	78	150	252	479	545
weirdly	29	28	306	122	473
met	98	146	317	605	602
mew	58	138	495	651	683
replacements	82	214	184	367	382
mex	55	174	29	790	207
contraction	28	64	154	150	988
df.reindex()	92	134	78	105	971
remotely	23	84	376	184	831
timewise	19	180	100	497	122
bumps	77	13	115	39	762
mime	73	125	248	607	127
someone's	34	190	116	236	345
end-of-month	80	35	245	781	410
summarising	99	288	100	646	329
fantastic	35	207	274	205	767
plt.yticks()	58	44	166	341	683
slices	40	64	10	231	650
lsq	79	10	324	487	13
serialize	86	222	426	611	820
sliced	40	104	10	231	673
tab-complete	74	171	294	110	568
gf28	75	232	10	756	382
lt.imshow	60	155	240	193	845
344	12	110	162	133	272
3d	61	176	175	626	908
io.py	30	162	478	247	344
dropna()	92	156	424	414	691
survive	74	227	306	457	673
mckinney	34	254	35	179	565
invalidindexerror	63	83	49	715	39
recod	43	105	93	53	764
100:200	52	19	160	284	776
berlin	67	285	323	742	765
breadth-first	99	288	11	293	716
jpy	47	78	197	133	272
room	37	266	467	574	668
l.set_ydata	0	46	345	418	162
pandas.dataframe.apply	92	156	78	105	205
candlestick	51	136	195	22	466
df.merge()	92	156	78	105	971
movies	78	150	445	479	604
rolling-sum	79	10	341	98	970
exceptions	10	231	389	716	215
rssi	33	29	114	182	725
user_interfaces	27	162	27	302	240
root	79	10	324	744	610
2x10	71	64	268	738	95
missings	98	146	148	98	347
sort_idx	1	19	112	232	855
stressing	65	291	258	791	887
bellman	28	14	324	744	610
downsides	38	227	17	537	246
10,000	88	160	220	80	54
.profile	30	122	478	159	181
integrate.quad	0	275	295	416	292
performace	82	180	341	537	246
reseting	3	156	182	354	971
glonass	3	110	243	712	519
0.7.6	46	221	124	202	435
libaries	13	128	5	197	482
0.7.2	46	221	151	681	435
0.7.3	46	221	151	331	435
0.7.0	46	221	151	331	621
0.7.1	46	221	151	157	621
amazing	35	207	274	205	767
zaxis	58	161	90	341	109
2006-04-25	67	213	95	185	51
asvoid	70	59	74	332	681
config	30	122	478	159	181
interp_2d	53	10	324	566	396
loggers	77	29	73	94	616
pd.categorical	92	39	168	105	699
blanks	32	263	420	680	655
long-form	3	110	6	183	125
manuals	17	254	247	321	565
geos_dir	30	162	478	159	181
baseline	77	266	443	574	668
oliver's	35	118	116	187	336
g.t	11	234	4	562	726
third	74	263	454	746	428
np.fromfunction	19	204	295	684	782
68%	51	23	332	10	239
twitterdataframe	43	273	309	727	410
automaticly	3	263	6	110	629
try-except	65	118	227	684	761
checkerboard	20	195	213	674	913
linux32	50	259	277	303	469
operate	40	50	154	231	382
681	12	279	488	172	96
1576	52	274	180	305	524
682	50	267	118	168	679
twinned	37	290	494	391	388
virtualenvs	13	128	5	159	482
.0001	60	194	269	129	221
workstation	85	30	480	785	858
10.10.1	85	276	233	198	858
captions	37	31	467	780	851
10.10.3	85	276	233	198	858
10.10.2	85	276	233	198	252
10.10.5	85	276	233	198	858
10.10.4	85	276	233	198	858
before	29	171	306	791	874
10.1	85	272	151	443	544
10.0	15	272	61	225	544
kuwahara	84	230	428	166	353
10.2	15	272	236	225	980
10.5	85	272	61	225	544
10.4	85	30	480	225	858
10.7	85	276	233	198	858
10.6	85	276	233	198	858
e's	35	238	187	187	308
parsers.pyc	50	145	118	168	679
decile	98	258	445	796	984
crew	17	241	100	334	275
${pythonpath}	30	259	277	303	469
new_val	47	134	30	155	622
backend_tkagg	81	88	110	553	584
fill_diagonal	19	214	296	231	782
schmidt	28	14	267	710	841
cred	34	190	3	702	915
indexingerror	63	83	49	715	39
combination	74	232	37	746	36
.__array_interface__	9	220	85	476	191
modification	74	137	116	190	526
joecondron	35	238	326	187	308
delimiting	74	110	420	468	519
lorenz	28	14	267	710	951
griddata()	53	101	238	720	396
sio.savemat	47	224	30	424	736
.xlsm	76	91	367	107	86
fig.get_axes()	58	44	494	485	162
rebooted	83	187	108	361	248
.max	87	57	180	673	608
hasn't	29	171	410	791	874
no-go	83	173	80	197	564
used	74	232	152	209	638
trading	80	116	299	581	67
ons	34	190	116	97	328
axzoom	9	237	397	25	864
cumu	43	155	231	265	12
numpy.zip	30	170	244	165	960
listed_array	98	146	454	587	602
0'th	98	64	454	796	428
unbound	9	83	331	594	676
whitespace	32	16	420	468	768
realtime	23	187	294	158	257
2015-12-02	43	72	68	2	24
00am	67	260	12	372	958
parallelizing	55	180	341	537	219
per-pixel	28	151	106	710	970
2014-03-04	67	213	95	185	51
2014-03-05	67	157	64	296	837
u.s.	80	163	132	723	897
ascending	40	175	129	524	9
vstack	19	294	296	278	470
trang_data	11	0	380	215	288
infix	9	214	205	113	135
a.groupby	43	164	231	204	832
eveything	29	28	306	791	473
copy&paste	65	291	305	468	768
some_df	43	72	68	265	708
possiblity	80	56	299	77	333
shape-preserving	53	151	238	720	396
_same_	6	161	90	572	481
boarders	37	31	467	780	851
fmt	32	205	346	177	576
my_date	47	201	309	727	24
matlotlib	74	136	175	626	214
stacktrace	27	293	305	420	579
media_root	30	162	478	708	202
df.join	44	164	181	700	827
saved_cols	44	134	260	476	827
figure.axes	6	161	90	543	481
floors	20	119	259	757	786
numpy.random.multinomial	47	106	295	471	881
agri	44	134	93	155	965
immensely	68	241	465	432	343
misusing	10	43	227	791	803
hawks	12	279	319	751	96
qsort	55	180	422	537	219
m.imshow	60	155	240	193	845
params	64	185	226	641	638
plottable	29	106	208	601	699
pandas-based	82	180	55	337	89
df.to_json	76	199	30	183	322
copyto	19	220	296	231	782
clf.coef_	72	186	25	129	756
requisite	22	171	294	595	214
patheffects	81	88	110	739	584
begins	22	263	485	534	214
9-12-24	67	213	95	185	51
conforms	70	99	152	601	979
allblue	47	134	461	471	622
collinear	79	186	317	214	988
useing	29	28	272	161	457
frame_table	86	68	426	611	519
splmake	53	101	238	720	396
+ve	57	146	8	141	509
abstracting	74	13	294	458	141
pyplot.plot	51	155	195	272	910
ndarry	71	195	268	519	684
filename.py	30	15	189	540	383
matplotlib._png	81	88	110	553	584
bounds_error=false	53	275	238	720	396
irregularly-spaced	33	176	135	617	908
tells	29	117	152	58	638
logical-or	19	214	198	113	135
pd.nat	87	52	309	181	985
py26-selected-packages	30	259	478	159	181
2gb	88	182	373	549	236
bengal	78	200	132	463	765
fitting	79	23	332	363	620
refinding	17	291	274	236	908
blue	20	119	259	757	786
non-number	32	99	420	601	509
grins	29	28	306	209	905
fft-based	53	101	125	487	547
many-to-one	78	93	243	390	965
maria	78	200	252	145	804
lt.cm.jet	60	155	240	193	910
observation	78	56	445	77	984
x-lim	37	46	494	572	388
-abrams	65	291	258	407	887
i.png	47	219	102	401	736
dateframe	3	156	6	354	125
hamming	79	101	185	293	258
0.98788927	15	157	64	296	288
100,819	71	274	268	305	981
annoyed	17	62	88	236	803
nice-looking	61	136	175	276	847
selected	74	232	37	746	673
sigsegv	63	244	283	361	39
whitelist	3	156	163	41	864
probe	99	29	339	646	340
autodatelocator	64	35	166	560	184
implying	29	28	306	791	999
~10	88	160	220	80	54
~16	88	197	373	549	217
supplied	74	28	152	791	638
~15	88	197	73	196	217
randomize	40	50	182	587	678
probs	57	291	8	664	743
index.pyx	50	267	118	580	429
trade-off	82	241	17	537	246
non-sequential	3	297	182	354	125
excercise	29	62	27	15	421
*my_list	1	12	455	480	806
recomputed	37	290	443	587	673
putmask	19	294	198	231	782
month_name	51	290	195	706	12
index.pyc	50	145	118	168	679
~1k	88	160	220	80	217
~1m	88	160	220	80	54
~1s	88	197	55	337	89
christopher	35	115	35	20	142
ord=2	11	178	4	562	56
my_stat_function	92	156	78	105	832
earn	34	190	3	702	915
unnecesary	40	184	158	476	231
traverses	40	50	154	231	678
matplotlib.cm.get_cmap	20	155	259	495	846
reload	22	171	388	739	405
traversed	99	171	497	534	673
terabyte	88	182	373	549	236
test.txt	76	199	286	283	754
ears	68	43	377	432	803
uint32s	75	99	10	601	979
imitate	64	214	459	216	392
self._reader.read	48	274	173	50	442
testing	29	227	306	457	905
alterations	27	137	116	190	655
ldflags	30	122	94	159	181
interruptions	61	31	467	212	851
python.framework	50	259	277	340	752
incorporating	17	62	116	525	526
d.concat	44	164	181	700	895
artificial	28	14	267	710	841
bivariate_normal	0	214	140	684	231
batchelder	34	173	234	97	142
x_range	64	44	226	641	683
omg	17	291	274	236	767
setup.cfg	30	122	478	159	181
pyplot.xticks	60	44	173	65	162
physicist	17	43	377	396	803
weary	17	43	395	236	345
omp	96	174	178	553	455
upfront	86	50	246	601	629
cousin	28	137	459	482	275
rand()	93	123	193	628	507
intepreter	83	15	178	540	960
suggested	35	238	326	187	308
uncertainty	77	23	332	511	762
4-grams	88	197	454	139	217
.xs()	92	156	23	733	971
highcharts	73	125	278	158	127
pandas.dataframe.from_dict	44	134	93	776	827
presumably	29	28	306	209	999
carat	51	250	195	42	995
interpolations	53	10	238	720	396
xlist	75	148	418	73	77
asks	34	118	227	590	551
basis	28	232	148	98	347
regenerate	73	171	388	110	629
np.uint8_t	1	57	112	232	726
tiny	88	266	100	334	463
ting	22	54	275	534	68
np.c_	19	294	296	359	470
detrimental	55	174	69	90	651
interest	74	232	37	746	868
basic	38	137	459	200	79
basin	28	250	77	623	604
lovely	68	207	274	205	767
asciitable	38	6	80	209	564
multiarray	81	88	110	553	584
dismiss	10	43	17	500	215
zypper	13	170	50	104	482
arr.ravel()	75	106	10	453	122
inliers	75	148	198	605	602
moore-penrose	16	94	462	782	800
glyphs	73	166	134	131	862
np.__config__.show()	81	174	80	199	443
zip_longest	19	12	455	480	806
zero-based	40	104	270	713	363
spontaneously	17	6	234	525	79
-------	47	115	58	550	888
ugly	82	241	378	334	327
os.chdir	30	162	478	247	344
anaconda3\lib\	50	145	225	168	429
setuptools	13	128	5	797	482
numpy.dstack()	19	294	296	231	470
pessimistic	17	151	106	631	812
seven	78	160	454	746	428
cann	82	241	341	497	382
recuperate	98	110	454	155	622
40gb	88	182	373	549	236
cant	29	28	410	161	457
1417982811944	67	67	256	145	567
disappear	37	31	388	780	851
specialization	9	109	331	594	386
80m	78	160	243	712	984
realizing	65	291	258	791	874
7200	12	279	173	50	60
depreciated	46	221	124	730	435
__check_build	81	88	110	553	584
14:45	67	213	95	185	51
b_positions	20	119	24	757	972
evolve	77	197	114	534	616
my_features	3	110	6	354	125
decisiontree	28	26	354	135	816
normvecs	52	19	263	284	855
2014-12-31	80	149	26	2	24
programs	55	1	69	317	564
unconditionally	22	171	397	190	629
failing	29	28	306	791	473
inherit	9	109	331	404	386
midway	99	13	443	212	589
add_newdocs	81	88	110	553	584
programa	43	52	179	71	164
programm	23	84	294	595	257
windows\syswow64	50	162	118	138	204
yours	35	238	187	187	308
keep_date_col=true	92	185	322	51	698
etiquette	34	190	307	702	216
.interpolate()	43	273	309	727	852
all_authors	47	224	30	424	881
yea	65	291	258	407	887
.clf()	22	61	388	599	356
kinks	53	151	106	631	303
assigned	74	171	386	746	673
~1500	88	160	100	80	54
yep	65	291	258	407	887
yes	65	291	258	407	887
numpy.linalg.linalg.linalgerror	16	94	462	782	39
yet	29	28	410	161	457
nudge	68	207	465	451	343
stray	29	263	420	468	655
cross-product	99	288	154	150	716
royal	34	13	106	321	589
d_main	0	224	273	471	881
uint16	70	100	74	332	522
inefficiencies	82	180	17	537	246
join()	92	85	71	349	807
save	86	125	329	110	304
trimming	77	266	148	574	668
lightseagreen	60	155	240	2	285
error_matrix	52	19	160	485	855
display.float_format	32	205	76	177	576
discreet	77	151	106	511	762
cbook	81	88	110	739	584
thank-you	35	207	371	205	767
occlusion	61	136	208	732	138
gtkcairo	73	38	134	635	810
np.mgrid	52	19	160	291	776
testers	38	150	159	98	347
datetime.datetime.fromordinal	63	201	309	727	852
signal	77	292	20	430	227
figurecanvasbase	9	109	331	594	386
index=0	44	93	82	155	965
index=1	44	134	65	155	827
deal	29	232	17	458	79
rpt_date	78	93	82	81	832
somehow	29	28	306	209	472
dead	34	173	250	39	208
jupiter	33	14	114	529	725
dear	35	207	371	205	767
httpresponse	9	144	102	607	405
deap	38	227	234	321	354
manifest	83	162	486	247	344
add_subplot	58	139	90	324	543
subdf	44	72	158	476	757
ill-posed	10	151	307	214	970
share_amt_to_buy	77	258	148	796	214
2013-06-19	67	213	95	2	24
runing	22	187	108	361	214
offcourse	40	232	124	209	435
nxutils	46	221	124	202	435
locators	64	290	166	706	184
ax.show()	60	46	345	418	162
min=0	87	194	173	65	393
data_orig	43	72	93	265	260
predicting	28	26	354	135	816
index=x	87	201	493	76	593
maintainers	46	173	359	604	208
swings	77	13	485	39	589
sys.stdout	76	144	286	16	721
codified	32	110	420	482	898
1234567890	47	224	325	628	22
geom_macro	6	237	397	134	864
magazine	23	150	430	149	604
afternoon	17	62	88	753	180
emcee	28	14	267	761	841
id=1	78	258	445	796	984
thinner	37	31	467	780	851
managers	83	128	69	197	389
subs	64	44	226	641	683
to_pydatetime()	92	185	78	105	934
test2.png	6	136	90	391	481
numpy.ravel	19	294	296	453	280
y-scale	37	290	494	391	388
down	29	13	143	39	589
locator	58	290	166	341	184
refined	53	238	116	525	328
matrixes	16	94	462	150	800
setnodatavalue	92	146	424	414	509
flying	65	13	143	236	589
theano's	55	174	125	302	507
fraction	57	266	148	207	668
topandas	92	156	275	354	971
in-kernel	86	50	426	611	126
analyse	23	14	294	94	625
ssh'd	83	84	376	184	467
sub-	75	106	386	534	161
analyst	23	14	294	370	866
sns.pointplot	51	136	195	272	847
matplotlib.pyplot.xticks	58	44	166	341	184
prevents	29	117	152	173	378
pointintime	98	258	162	796	272
groupby.transform	92	156	78	105	971
reimplementation	22	50	341	537	246
whisker	51	136	24	10	358
pre-calculated	77	151	97	98	762
specgram	51	101	20	430	547
quadcontourset	6	161	208	543	109
np.index_exp	52	0	160	284	776
65535	70	100	325	592	22
awhile	17	62	88	753	180
marking	35	190	3	702	216
answerable	34	190	307	590	216
messier	82	241	378	334	327
scipy.spatial.convexhull	53	288	11	293	716
df_cols	44	134	260	155	827
contains_points	53	161	208	543	109
linewidths=	60	155	240	495	285
-rf	50	259	277	303	469
2500	88	142	220	528	106
10x5	71	64	268	738	95
10x4	71	64	454	738	95
10x3	71	64	268	519	684
10x2	71	64	268	519	684
10x1	71	64	268	738	95
fmin_cg	0	275	295	684	231
utilities	38	1	69	317	79
journey	17	62	250	39	180
600809	43	200	231	81	708
weekend	80	163	250	723	180
cut-and-paste	27	137	305	500	215
250k	88	266	22	574	54
happening	29	28	227	335	473
macports	13	128	5	104	482
restores	74	171	152	110	673
pseudo	27	137	459	15	421
stripping	32	263	420	468	655
set_major_formatter	58	44	166	341	184
36818	5	77	31	92	26
pythonpath=	30	259	277	303	469
restored	29	171	306	791	214
noverlap	57	194	269	207	221
omdb_info	43	72	93	265	622
transformedbbox	81	109	331	739	386
math.isnan	87	39	198	770	985
cumsum()	92	193	78	103	121
hello.py	30	244	376	553	383
t_output	1	142	173	139	60
retention	78	56	148	98	347
anticipation	68	207	371	205	328
l.append	52	0	180	290	19
non-iteratively	74	232	154	98	382
0	52	19	263	284	221
swoop	3	297	6	85	986
one-d	71	64	10	519	684
sys.path.append	30	259	478	138	204
advises	35	207	371	205	336
python-setuptools	13	170	50	104	174
pd.read_sql	76	68	119	478	454
df.iloc	52	104	23	733	92
a.empty	92	217	375	263	146
advised	10	43	395	500	215
__bool__	9	109	331	55	386
array_name	52	134	68	471	622
11:01	67	213	95	185	51
swapping	40	283	182	548	363
new_dtype	1	57	41	232	881
23:45	67	260	12	372	958
cheapest	28	14	341	293	868
proposals	68	190	307	321	328
np.import_array()	55	174	29	500	215
softwares	83	84	69	197	467
hooray	35	207	274	205	767
crimeall	43	273	309	727	852
round	57	89	8	788	62
prepends	32	99	152	601	638
dealing	10	231	17	663	79
pd.melt()	92	156	78	105	971
measurable	88	180	55	537	89
imagemagik	73	125	248	607	304
ipynb	73	125	248	122	304
-dev	13	170	50	104	482
targets	28	227	37	746	868
majors	37	31	467	780	851
sparsetools	50	259	277	381	842
linalg.pinv	16	94	462	782	800
pylab.imshow	84	219	102	193	427
cythonize	55	147	422	537	219
numpy.sum	19	214	121	673	608
filler	3	146	424	680	509
pyplot	6	136	390	732	389
unsort	40	146	182	548	363
c.inlinebackend.rc	64	166	452	764	181
suspect	29	231	395	173	568
international	78	116	430	581	67
filled	61	146	386	680	509
cgd	16	178	462	562	56
interferogram	77	292	20	430	942
target=	9	204	295	594	807
rospy	23	85	294	595	257
falsetru's	61	31	467	646	951
numpy.meshgrid()	75	294	10	231	684
box	37	31	443	780	449
boy	17	150	250	149	796
diagnoses	75	106	421	471	903
exemplified	27	137	459	15	421
babydataset	0	12	461	471	881
equidistantly	37	31	467	646	851
bot	64	227	159	209	36
bow	35	207	371	205	767
streamplot()	25	161	208	319	326
spheres	61	288	282	315	138
inf's	10	146	424	414	509
diagnosed	35	118	409	187	336
boo	47	224	180	424	764
bob	78	115	252	20	423
column-vector	0	3	140	519	412
dateoffset	80	35	245	678	333
merely	10	28	306	791	999
fc-list	30	144	108	599	383
hierarchically	3	136	6	354	125
arrary	75	106	10	519	684
sake	27	137	459	525	421
izip()	19	12	455	480	806
visit	78	150	445	479	423
ahhh	65	291	258	236	887
python27\lib\distutils\	50	145	486	138	204
hippodraw	83	1	80	461	637
integers	75	99	325	601	979
a.resize	48	57	41	677	280
512x512	71	195	213	674	95
jamie's	35	238	187	187	308
np.int_	70	204	74	332	64
a.max()	1	57	296	232	886
sorted_list	93	123	173	557	221
concretely	27	118	459	15	421
try-catch	22	263	246	468	655
quoting	32	16	420	468	444
operator()	9	109	331	594	64
repro	27	293	305	420	579
drags	90	187	32	624	536
idw	53	101	185	293	716
making	74	232	386	209	526
usemask=true	75	185	226	641	782
thicknesses	37	31	467	780	851
nearest	53	288	339	293	716
14s	88	197	73	337	217
numpy.setdiff1d	75	106	140	231	782
ax.annotate()	64	44	90	543	683
sample	27	293	403	420	421
)]``	44	52	180	290	827
format.py	50	145	118	483	842
unhandled	63	244	283	553	39
14h	78	255	223	550	888
dataframe.plot()	51	136	195	272	481
x.values	87	55	493	76	593
foreach	75	106	273	471	77
datasource	86	222	275	260	405
146	12	279	488	111	465
147	12	279	488	111	465
144	12	279	488	111	465
145	12	279	488	751	465
numpy.get_include()	30	259	244	165	30
143	12	279	488	111	465
140	12	279	488	751	465
141	12	279	488	751	465
betweentime	74	134	246	190	622
y-coordinates	33	281	97	646	358
148	12	279	319	111	465
2700	29	28	306	791	363
membership	3	297	317	457	903
14%	88	266	22	574	246
snr	77	292	20	430	227
sns	51	136	390	272	889
snp	43	93	82	390	965
)]`)	52	19	180	284	371
jellyfish	28	227	185	293	716
n_ind	1	57	112	232	886
pd.series()	43	134	309	727	827
frameon	58	185	452	642	683
nsis	13	170	244	197	482
if-condition	74	232	37	587	868
basket	78	56	445	41	604
numpy.asarray	48	219	102	401	881
dojo	17	190	377	396	275
bisplrep	53	101	238	720	396
lsb	57	100	325	592	122
shoes	34	150	305	149	423
lsa	28	115	435	203	385
mytable	76	199	30	478	454
web2py	83	84	27	184	467
lst	1	12	461	480	806
lsp	77	292	20	430	547
98.5522082	15	157	64	296	837
thisarray	1	19	112	677	855
equiv	70	39	74	177	979
observational	80	29	299	77	67
group	78	56	445	41	832
monitor	22	283	373	549	236
sparce	16	94	333	455	788
vector_a	1	55	112	305	726
vector_b	1	19	112	305	726
0.3.1	85	276	151	681	380
policy	34	173	69	149	142
transparently	38	117	29	756	564
non-negligible	88	283	100	537	387
pixbuf	73	125	248	607	304
tikz	73	125	248	276	304
-inf	57	89	8	770	743
-ing	19	294	198	231	782
lunch	65	291	250	39	180
ls2	47	224	461	471	881
ls=	60	155	240	603	285
workload	23	85	69	128	431
matplotlib.pyplot.imshow()	84	195	51	592	353
-300000	57	89	4	664	743
repositories	13	128	211	104	482
_get_numeric_data()	92	156	78	105	971
careless	65	291	258	407	887
x1=	60	194	418	65	221
getitem	9	109	331	594	386
x10	88	142	55	337	89
x11	30	84	376	184	831
x12	47	115	223	145	888
x13	72	4	431	516	624
attributeerror	63	83	383	616	477
dpi=100	58	243	18	16	721
multi-level	3	156	65	763	125
manifests	10	231	305	173	568
monary	86	68	426	611	126
tab-separated	86	110	329	712	519
distro's	13	128	5	197	482
numpy.float	70	59	74	332	522
stitch	74	50	128	110	953
autopct=	32	205	346	177	576
nominal	77	250	77	94	604
eig()	16	94	462	782	800
numpy.triu_indices	16	178	296	13	659
ajax	23	84	376	184	127
bayes	28	26	354	135	816
test5.o	50	145	133	138	204
funky	29	231	395	335	473
obscure	10	231	395	334	327
.lower()	43	51	487	151	244
frequent	78	150	445	479	639
first	74	263	306	209	428
earnings_vola	0	106	295	684	231
numpy.random	93	88	193	628	507
arduous	82	241	341	500	215
figure.show()	6	28	272	572	473
specificity	68	190	116	525	328
calcific	67	200	132	550	888
row-index	3	110	6	155	655
numpy.bmat	16	94	333	455	800
bare-bones	27	137	459	15	669
pylab=wx	90	15	189	226	818
vmax=	60	155	240	193	845
moisture	43	200	77	406	272
speaking	10	241	17	500	999
inefficient	82	241	378	497	463
a.t.dot	16	178	462	562	726
02:00	67	260	12	372	958
np.vstack()	19	294	296	278	470
set-up	27	137	459	15	421
out-of-bound	75	104	17	200	650
highest_gridpoints	98	148	206	141	77
scraping	86	68	329	370	519
groupsort	89	227	17	524	88
currencypair	32	263	420	468	655
zip()	19	12	455	480	806
inferring	70	99	245	601	920
20s	88	197	73	574	89
avgdists	52	19	160	232	855
20x	88	180	55	337	89
talib	38	193	341	761	79
sheet4	86	91	367	107	519
0-7	98	281	269	141	212
sheet1	76	91	367	283	86
sheet3	86	91	367	107	86
sheet2	76	91	367	107	86
20k	88	160	220	80	54
20m	88	160	220	80	54
kevin	35	115	409	20	336
cassandra	23	1	294	370	606
recreated	22	171	388	122	673
pandas\	50	267	225	580	429
0-3	98	281	454	796	66
hotspot	55	147	422	537	219
recreates	27	293	403	420	579
double-click	90	187	32	624	536
interior	99	288	282	315	138
performance	82	180	341	537	246
600,000	88	160	220	80	54
bets	17	13	250	39	118
df.index.hour	43	164	447	460	612
203	12	279	488	111	132
202	12	279	319	111	465
205	12	279	488	751	465
204	12	279	488	751	465
207	12	256	488	196	432
206	12	256	488	751	432
209	12	267	488	111	132
208	12	279	488	196	432
numpy.uint32	70	59	74	332	522
pandas=	46	221	151	157	621
ginormous	71	283	100	519	122
joran	35	238	326	187	336
beta	79	23	332	638	11
20%	88	266	22	574	89
fmin()	79	22	324	566	13
sheets	86	91	367	107	86
formulae	38	91	367	107	86
complaints	34	242	88	321	746
upland	43	72	231	265	708
20*	60	123	173	50	221
queens	78	150	132	463	563
synonym	9	109	152	200	638
scalarmappable	25	161	320	49	296
re-apply	29	171	246	190	629
sigma	79	23	332	511	239
supposition	27	137	403	420	579
representatives	99	288	280	746	616
decompositions	16	94	462	782	800
threshold	98	146	317	605	602
or	74	232	246	209	472
np.fabs	52	148	273	471	714
1hz	77	29	73	77	931
storms	99	250	77	623	563
1e-30	57	227	106	457	970
analytic	79	10	324	487	610
helix	33	176	443	212	725
max-min	11	234	4	664	743
treasury	61	136	175	626	847
bar-charts	61	136	175	22	951
awareness	38	231	359	604	568
notimplemented	9	83	421	594	603
200000	88	160	220	80	54
get	29	28	306	209	472
plt.rc	58	166	134	764	862
df.a.isin	44	134	260	290	827
unimportant	29	231	306	548	493
sollution	17	62	371	236	345
a.k.a.	74	151	128	631	385
keyarray	52	19	206	284	622
counterstack	52	148	273	471	77
tifffile	84	192	123	607	405
geo	99	250	132	230	293
llvm-gcc-4.2	63	244	283	553	323
blends	37	31	467	780	851
decorators	55	109	422	790	761
restarted	90	15	108	540	818
get_ipython()	90	15	189	226	889
morning	17	62	250	39	180
argrelmax	53	103	125	566	13
circuits	82	50	291	497	628
miles	33	281	77	182	995
j=0	52	132	273	284	19
j=1	52	132	266	471	77
declared	0	237	397	436	864
pitches	23	14	365	94	438
head()	92	156	202	183	971
key=itemgetter	52	0	180	215	591
%run	81	15	189	226	818
refcheck	9	185	226	641	130
func_cpp	9	204	29	790	64
declares	9	204	295	790	64
eliminating	40	263	497	548	655
numpy.ma.maskedarray	9	106	331	594	699
unaltered	22	171	218	122	673
emulating	10	109	397	732	354
wonder	29	28	227	432	472
__array_wrap__	9	109	331	55	300
integrands	79	10	324	487	942
vertical	37	31	443	780	276
label	37	290	443	706	76
labes	37	31	443	780	76
logins	78	258	445	41	377
enough	10	241	395	209	463
ngrps	57	229	8	428	743
across	74	232	159	98	36
max_x	1	274	112	305	60
max_y	60	194	269	65	221
top_depth	43	93	82	558	377
infrastructure	23	1	69	317	118
np.concatenate	19	294	296	278	470
flist	47	224	30	471	736
heterogeneous	86	99	426	663	843
labels_array	98	148	206	141	602
deallocating	22	61	153	358	387
2:00	67	260	12	530	958
tour	34	173	307	669	216
tout	90	187	46	572	214
c_start	80	163	254	723	897
executables	30	261	486	197	368
among	74	232	159	746	36
syntex	29	28	272	791	905
starmap	19	12	455	480	806
firewall	83	84	376	184	467
colspan	58	139	90	324	543
.ravel	1	294	296	453	280
spans	80	29	299	77	931
considering	29	227	17	209	999
itertools.takewhile	19	54	109	641	698
numexpr.evaluate	87	55	295	562	593
tuning	28	151	106	525	118
capable	38	6	17	317	79
a+b+c	79	214	25	744	306
ims	6	19	102	485	107
attaching	27	171	459	760	727
wobbly	29	31	467	780	851
18:00	67	260	12	372	958
judging	34	118	234	97	142
np.uint16	70	59	74	332	522
sentinel	92	185	424	414	203
fsample	11	234	242	531	56
cv2.thresh_binary	48	219	102	401	427
glanced	17	62	88	236	746
squash	37	266	148	207	668
reproducable	27	293	403	420	579
dramatic	88	180	55	337	89
rsuffix=	44	2	253	700	895
declaration	0	204	397	790	64
hardcore	82	43	246	525	118
^	32	51	487	151	244
sound	77	192	365	676	946
kappa	57	275	8	428	292
str.zfill	19	214	109	512	808
numpy-discussion	34	173	35	604	142
_first_	37	290	443	706	388
id-number	98	110	454	468	984
1100	12	279	61	528	968
promising	17	6	274	236	327
cancelled	80	56	148	723	897
investigating	17	62	88	161	746
408	15	279	488	172	96
conformal	33	176	135	617	908
outputarray	52	19	273	284	855
%pylab	90	15	189	226	889
strait	73	125	248	573	669
sleeping	22	187	108	361	248
dict's	3	297	182	776	68
strain	32	283	420	482	798
sudden	90	187	108	361	248
mplconfigdir	30	122	478	159	181
primitives	38	6	291	756	219
protein	78	286	114	425	798
\xa0	32	16	190	477	413
pdftk	73	125	248	158	304
sieving	89	197	485	139	616
np.iinfo	70	59	74	332	522
s.plot	60	155	240	495	285
compiling	55	174	408	650	455
recfromcsv	76	54	382	260	698
hurricanename	43	200	93	204	832
workplace	83	30	480	785	467
extended	74	137	116	40	382
assist	68	190	465	432	343
companion	38	1	35	761	564
get_offsets()	64	161	208	543	854
invariance	28	151	106	631	970
axes=none	1	57	41	232	159
arrays-	29	62	272	161	746
arrays*	16	94	201	150	62
identifiers	3	297	243	587	984
clust_data	75	297	461	471	68
pep8	10	237	390	590	215
norm.pdf	93	275	173	511	230
double-precision	57	89	325	86	22
new_entry	52	19	461	471	524
reindex_like	92	156	78	105	971
8.000000	15	211	236	514	980
consisted	74	110	454	746	684
soon-to-be-released	46	221	124	331	435
unofficial	13	261	5	797	391
_constructor	9	109	331	594	386
nx.draw	6	155	345	418	481
set_tick_params	58	44	90	341	683
}}}	0	237	280	436	507
clueless	17	43	227	451	803
mactex	13	128	211	104	482
tuple	75	106	421	471	903
python-qt4	13	170	244	165	174
~5gb	88	160	100	94	54
nav	64	161	90	543	699
sanitized	47	110	30	482	736
2011-07-01	15	213	236	514	980
2011-07-03	15	213	236	514	980
2011-07-02	15	213	236	514	980
black-box	79	10	440	566	13
zulu	80	35	245	601	920
x*x*x	89	180	55	337	89
23:30	67	260	12	372	958
pandas.apply()	75	106	421	105	979
credentials	23	84	376	184	831
exaclty	27	28	459	15	905
vertically	37	31	467	780	851
acquainted	17	43	88	161	803
adams	35	115	409	20	475
identifying	74	232	37	173	868
relativedelta	92	35	245	560	333
df2.loc	43	47	68	290	708
es_in	9	106	397	436	699
imagej	84	195	123	607	427
cokey	98	146	317	155	602
imagee	71	64	268	738	981
imaged	37	195	213	122	851
nordev's	35	238	187	187	308
autominorlocator	58	44	166	341	184
slice()	9	12	455	594	806
pd.to_datetime()	92	35	245	560	934
outs	29	171	372	39	118
calculating	79	193	148	98	347
im0	84	219	102	401	427
kml	61	176	175	623	293
lasagne	96	259	354	106	842
containe	84	195	454	746	684
rectangular	99	288	339	315	138
.indices	75	294	10	139	981
outn	78	297	280	776	903
df.columns.difference	44	134	181	700	827
author's	27	137	27	15	421
665	63	244	283	553	39
image2	84	219	102	43	893
image1	84	219	102	401	893
out1	44	2	253	33	176
out2	72	2	253	174	624
irregardless	77	146	467	191	868
__setslice__	9	220	158	476	386
out=	1	57	296	232	280
tabledf	64	6	246	732	370
student_id	78	93	82	390	965
numpy.intersect1d	19	214	125	13	512
coupon	78	200	82	204	377
skilled	17	43	377	396	803
scipy.stats.binned_statistic	79	214	125	13	382
newtons	33	281	443	528	859
paraview	23	125	278	158	450
x.flatten()	1	57	112	232	280
ichimoku	78	116	430	581	67
first_column	3	110	223	155	410
u_last	11	234	4	215	19
fontmanager	81	162	397	247	344
calctheta	81	88	383	616	477
.groups	44	164	461	776	419
distracted	65	62	88	39	874
''])	43	105	231	71	764
mondays	80	163	254	723	897
labelling	37	290	467	780	851
pd.ols	79	275	349	363	620
spicy	83	206	80	197	564
woudl	68	232	465	432	343
index=index	44	201	181	348	827
help-fcompiler	30	170	244	481	30
change	74	232	37	190	629
.len()	43	47	68	265	708
hurricanes	47	286	280	42	995
cp27	13	261	348	797	368
impression_data	43	72	93	265	708
arranged	71	64	97	122	673
'']`	43	72	68	415	987
year-olds	98	281	162	796	272
relabeling	37	290	467	706	526
asides	86	1	80	500	246
reapply	3	263	497	534	953
arranges	40	117	182	524	678
peeking	64	13	143	458	370
eschew	10	237	397	436	864
moler	28	14	35	302	142
expand=true	92	39	309	727	934
sort()	19	175	78	524	971
z**2	11	234	242	129	56
number-like	9	99	331	756	979
wilderness_area	72	211	162	133	272
profilers	34	190	307	321	812
matplotlib.colors.rgb_to_hsv	1	57	295	232	726
examine	29	171	143	110	508
numpy.polyfit()	79	10	324	566	13
df_if	43	72	68	265	708
again	29	171	306	190	214
fomit-frame-pointer	50	157	133	117	160
originalarray	71	64	454	73	77
subject_id	43	78	52	2	987
pandas_select	19	214	422	756	761
neighbouring	99	288	428	646	744
hayden's	35	238	187	187	308
np.reshape()	71	64	268	519	684
setp()	64	161	90	543	683
test5_wrap.o	50	145	133	138	204
489	12	142	162	528	106
figure()	6	139	18	324	543
data-array	64	161	208	572	868
480	71	274	213	674	175
np.loadtext	76	199	30	283	736
jan-mar	80	56	254	723	897
assets	78	56	308	581	67
46gb	22	182	373	549	236
u	47	186	25	129	756
multi-dimentional	75	64	10	519	684
spiketimes	88	142	220	139	54
tensorsolve	1	57	295	231	726
u'occurred	63	83	283	2	477
hashtag	78	110	454	468	984
founded	34	150	430	479	423
fill_method=	44	149	447	460	861
expressions	75	214	109	744	135
patharray	43	72	93	265	622
responsiveness	22	180	294	537	246
newsize	1	274	112	677	159
cross-sections	3	156	6	354	125
df_one	44	93	65	558	965
tarball	13	261	5	797	368
codereview.stackexchange.com	68	190	307	590	328
preserved	3	232	182	548	673
extrapolate	53	151	238	720	396
enjoying	17	43	377	451	803
fig.add_subplot()	6	139	90	543	481
np.timedelta	70	35	383	616	477
movie_id	44	93	82	204	895
sitting	22	84	294	39	161
plt.yticks	58	44	166	65	184
gz	86	222	329	260	405
toss	74	13	143	458	417
curve_fit	79	22	324	363	13
set_printoptions()	63	185	226	641	699
dist_	52	148	206	770	714
ufunc_object.c	55	85	397	684	807
groupby's	92	156	78	763	971
forking	22	85	71	349	431
couples	72	102	127	73	684
array_equal	19	214	198	13	782
egg_info	30	244	481	481	323
pypdf	73	125	248	276	304
triangulate	53	176	11	617	908
totnea2014	60	194	173	686	393
non-continuous	61	31	467	631	851
bypassed	29	171	397	173	370
dists	72	148	206	73	714
distr	83	206	178	197	380
drop=false	44	164	181	700	895
20th	98	163	254	723	428
deallocated	9	61	153	358	282
maxymoo's	35	238	187	187	308
2012-02-03	67	213	52	364	265
zero	98	146	8	141	509
perspective	10	1	17	321	354
num_columns	1	274	112	677	867
500k	88	160	220	80	54
wmat	40	184	270	453	122
diff2	52	19	263	284	855
in-process	22	85	294	691	257
application's	23	85	294	349	127
hettinger	35	238	409	187	336
fama_macbeth	92	156	78	761	699
memmap	86	222	426	102	820
.csvs	23	50	294	94	953
5001	47	142	162	528	106
mock-up	27	293	403	15	421
6.75	15	211	64	364	265
6.73	52	19	263	364	265
threads	55	85	71	349	431
over-complicating	65	291	88	236	874
rotation=70	58	44	494	418	162
500+	88	160	220	80	54
mult	44	164	181	221	827
diffs	98	146	424	673	655
bracket1	63	83	206	715	39
fwd	33	186	185	191	725
fwf	86	222	329	260	519
significantly	82	180	55	337	89
pydstool	38	6	80	525	450
x-position	37	290	443	207	76
charmap	32	16	190	477	261
mastering	17	43	377	396	275
africa	99	176	282	617	563
y_train_actual	75	106	349	539	412
axes.clear()	6	46	345	572	481
update_plot	0	275	226	44	231
json_data	47	144	30	424	736
extract_patches	19	101	125	302	601
process's	22	61	153	128	282
uniformity	38	6	291	525	542
subsumed	38	171	80	202	564
0.009	15	194	269	606	10
0.008	15	194	61	606	10
0.007	15	194	269	606	10
0.006	15	211	269	606	10
0.005	60	194	269	606	10
0.004	15	211	269	606	10
0.003	15	194	269	606	212
0.002	15	194	269	606	212
0.001	57	194	269	686	743
0.000	15	211	61	606	10
apnt_ymd	78	93	82	204	832
scipysuperpack	13	128	5	797	368
mozilla	47	272	58	133	888
constructs	75	117	386	58	382
reconvert	86	99	275	601	141
non-gui	90	38	46	635	810
landed	29	62	88	458	417
psearch	65	291	258	407	887
60008494	43	200	68	265	696
hour	80	56	299	77	931
recall	29	28	306	791	905
phrasing	65	118	258	590	999
ith	98	132	273	73	77
sucks	17	291	88	236	345
guards	55	1	305	500	215
remain	74	232	306	548	214
halts	90	187	108	540	248
specialized	38	1	291	317	79
stubborn	29	28	306	209	473
np.number	87	39	74	700	608
formatstrformatter	58	205	166	341	184
due_date	43	201	309	2	24
mainline	46	221	124	604	435
series.astype	70	59	74	332	979
collision	22	237	397	128	864
minimum	98	146	148	746	868
coords.t	52	19	263	284	855
numbers	57	89	8	788	898
hyperplane	99	288	282	315	988
robinson	35	115	409	201	336
read_only	63	185	226	641	824
stil	29	28	306	791	473
stim	20	119	259	757	786
mape	0	275	314	566	292
ascii	32	16	190	477	261
comfort	38	1	479	317	354
tweetcreated	80	35	26	727	410
tprep-1	11	234	4	531	99
smsx	0	237	397	44	231
quoting=	76	199	322	51	189
set_array	25	161	320	49	109
a.flat	1	57	296	232	280
83.803	99	50	185	150	744
objdump	30	170	244	165	960
questioning	17	118	116	590	345
spectacularly	22	180	100	497	463
coming	29	13	143	458	161
brady	22	28	388	85	214
cursor.description	52	104	93	284	622
0.11.0b1	85	206	178	685	380
generated.pyx	50	267	118	483	842
map2	61	136	175	757	786
sitename	78	93	445	390	832
z.real	75	102	418	519	684
targetpos	78	93	82	558	965
define_macros	43	105	231	71	255
uname	85	45	264	513	174
through	74	232	497	534	36
first_seen	43	200	82	204	965
colmap	9	134	383	616	477
messed	29	171	88	458	417
csv-file	86	110	329	107	519
numpy.random.random	93	123	193	628	361
pcs	23	30	69	768	36
pct	51	193	195	520	832
ax.xaxis.set_major_formatter	58	205	166	341	184
check-mark	34	238	3	702	216
misunderstandings	65	291	258	236	345
messes	29	117	152	458	417
pcm	88	192	365	676	946
pcc	72	281	185	638	11
pca	16	26	354	135	816
d=1	72	186	25	174	221
df.columns	44	134	260	290	827
increments	98	29	148	77	931
7.00	11	52	4	606	110
tract-level	77	56	148	10	66
file_1	98	110	243	712	984
np.diagonal	19	57	296	232	601
file_2	32	110	243	712	754
hyphens	32	16	420	468	898
clf()	6	46	345	666	356
compound	3	99	6	663	843
utils.py	30	162	110	381	842
scatter3d	25	136	208	193	910
viewers	73	125	248	276	304
mystery	29	28	395	659	571
deep=true	48	134	158	290	827
pc2	61	281	175	22	995
pc1	33	281	175	22	995
pandas.index	9	109	331	594	386
micro	80	197	73	574	931
repeating	3	297	182	534	526
256gb	22	182	480	785	236
allalexaandgoogleinfo.shape	1	57	180	215	849
suspecting	29	231	395	791	568
raw_input()	90	46	345	599	356
get_ylim	58	44	494	341	683
tableau	86	68	119	370	126
asarray	9	204	295	453	280
delim_whitespace=true	76	199	322	51	189
quiver3d	0	275	295	684	231
pandas.hdfstore	86	222	367	107	519
they'll	29	13	246	500	196
evaluation	79	10	324	744	382
dvipng	73	170	94	91	482
email_cnt	52	19	160	284	622
enforcing	29	99	306	791	724
tox	83	206	178	202	380
mmm	65	291	258	407	410
set()	19	12	455	480	806
dataframe.__getitem__()	38	254	234	302	421
backed	38	171	386	691	359
graph.py	30	162	486	540	383
beginning	29	263	306	468	214
constraining	79	10	324	487	531
zgesv	16	94	462	782	800
needing	74	232	246	209	526
taht	29	28	306	209	472
wither	29	28	227	209	472
varibale	0	106	140	684	699
configurations	83	227	159	161	905
n00b	17	190	377	451	98
eqs	79	186	25	744	610
advertisement	17	241	395	500	327
libpython	30	170	486	165	960
cx_oracle	86	68	119	478	596
bug-prone	82	241	479	537	246
pkgconfig	30	259	277	159	960
c^t	72	178	25	562	726
pngs	73	125	248	276	304
log()	57	193	8	673	62
array.shape	1	19	112	677	714
a.clip	87	57	4	215	99
itertuples	92	156	78	47	971
repnum	44	164	181	700	895
relink	13	170	50	104	485
ton	17	291	274	205	767
start_byte	70	59	74	332	979
df.a.shift	11	52	180	770	437
scipy.stats.chi2_contingency	79	26	332	638	816
activepython	13	128	5	104	482
-long	71	64	268	139	684
c^2	11	234	242	531	56
differentiate	61	232	37	631	762
np.copy	48	219	102	401	280
d.get	87	55	493	76	591
cyclic	99	151	404	429	762
bucketed	78	56	445	41	931
substracting	98	146	148	598	62
dt.time	43	201	180	76	99
use_index=false	64	44	166	706	683
debugging	27	62	305	361	328
np.linalg.matrix_rank	16	94	462	782	659
tertiary	74	232	37	209	36
char*	0	204	29	790	64
1:00	67	260	12	530	958
3-tuple	84	195	51	592	684
dynamic_lookup	50	259	133	117	160
metaframe	43	72	231	265	987
ax.yaxis.set_ticks_position	58	44	452	642	599
.boundscheck	19	204	422	642	761
17:19	67	213	95	2	24
temp.win32-2.7	50	145	133	138	204
17:15	67	213	95	185	51
img_filtered	48	219	180	401	159
plt.quiver	60	102	418	319	910
openshift	83	84	178	184	467
.sort	44	175	181	700	895
programmers	10	1	479	396	354
chars	32	16	420	477	768
colorbrewer	25	119	320	49	296
chart	61	136	175	22	847
ncol=2	60	138	495	651	285
charm	35	207	274	205	767
services	23	84	69	184	431
11:13	52	0	263	284	855
.fillna	44	164	181	700	691
869	98	132	127	191	981
key-value	3	297	280	776	903
pyproj.py	50	267	118	483	927
shutil.move	22	171	388	534	68
theano	55	174	408	90	651
imdata	74	232	246	605	508
last_name	43	67	223	145	567
python34\scripts\	50	145	486	138	204
database-like	38	50	291	663	79
converge	79	22	324	566	13
node.js	23	84	294	184	625
quote_df	43	72	68	265	708
businesses	78	150	163	479	798
double*	9	204	29	790	64
cell	74	110	37	746	868
merger	3	110	6	354	125
merges	3	156	182	354	125
-40	15	194	269	606	212
-45	33	194	287	606	212
sanitize	27	237	305	468	215
log=true	51	44	195	557	780
volatile	82	50	291	497	628
aspect=	58	243	494	775	599
merged	3	110	6	354	125
generalizations	82	241	159	334	79
kubuntu	85	276	233	393	858
express	74	232	80	209	634
a_vec	72	186	25	683	19
interprocess	23	85	71	349	431
patchify	82	184	341	691	219
columndatasource	51	136	195	418	12
agegroup	78	93	445	463	604
test.index.hour	12	78	162	133	272
spikes	77	29	20	574	227
pip2.7	13	170	244	165	174
worst-case	88	180	55	337	89
asset_gainpct	75	64	206	673	981
doubled	88	283	306	680	417
wspace=0	58	290	494	391	299
set_index()	92	156	78	763	971
logistic	79	26	354	135	816
to_clipboard	92	185	226	183	699
doubles	88	100	325	790	22
restaurants	78	93	163	463	604
set_zlim	58	44	494	341	599
block-by-block	55	50	341	691	122
x_new	72	102	349	539	412
no-op	9	106	295	756	782
x_size	15	211	214	364	99
curvilinear	33	176	282	617	908
latlon	25	102	226	641	683
stringify	92	156	397	105	699
expert	17	43	377	396	803
.pkl	86	222	329	102	820
factorisation	28	94	462	782	970
newcol1	44	93	82	99	832
python-2.6.1	50	259	277	303	469
.loc	92	104	23	733	92
pyplot.gcf()	6	139	90	543	481
data's	77	151	106	631	668
subscript	32	166	420	403	898
merged.to_csv	76	199	286	283	987
concatenate	3	294	6	278	470
__init__.pxd	30	162	478	381	960
essay	34	173	250	97	275
presumption	98	263	317	155	655
off-diagonal	16	94	462	562	800
premise	10	137	459	756	135
restaurant	78	250	445	479	604
foreign	86	1	163	482	354
fittedvalues	79	23	332	638	11
!!!!!!!	35	207	274	205	767
elaborating	34	190	307	590	216
point	99	13	306	631	868
inplace=false	44	175	2	621	130
globals	9	237	397	436	864
expensive	82	50	100	497	463
backend	73	38	134	635	810
fused	55	204	29	790	64
n_particles	71	142	268	305	175
ohlc	80	116	299	581	466
matplotlib.mlab.psd	87	55	201	673	382
30ms	88	197	55	337	89
d.to_datetime	43	201	309	727	852
np.in1d	19	42	296	13	886
in-place	75	184	158	476	757
arcpy	23	1	128	317	866
axis()	58	44	494	65	388
assorted	64	254	159	161	746
ajcr's	35	238	187	187	308
pylot	83	136	175	626	847
25.000	80	160	220	80	54
server's	23	84	27	184	127
deferred	22	85	294	128	214
a.transpose	1	57	41	232	726
n=3	71	274	268	593	306
split()	32	54	109	512	808
century	32	163	284	482	897
faceted	51	6	390	78	847
jorgeca	35	238	326	187	336
symmetrize	16	94	462	139	800
period_range	44	149	447	460	612
lomax	79	23	332	511	239
.mean()	87	164	181	700	419
righthand	74	232	443	661	370
npy_no_deprecated_api	63	244	58	553	30
dominators	98	146	317	605	602
randomization	22	85	294	628	507
corridor	78	286	163	425	798
last()	92	156	78	105	971
ndimage.convolve	19	101	140	13	547
development	46	221	124	202	435
currencies	3	56	6	354	67
joran's	82	238	187	187	308
ipyhton	83	15	189	226	818
maxy	60	194	418	65	533
stripe	20	31	259	757	786
parfait	35	207	371	205	118
ifft	77	292	20	430	547
numpy.fill	19	294	296	231	782
subplot's	37	290	90	391	76
plot's	37	290	90	391	388
iffy	82	241	395	334	589
.sub()	19	214	154	231	650
a.strides	1	19	41	677	60
col_sig_squared	75	106	421	471	77
traffic	23	14	294	94	257
corrwith	92	156	424	414	971
darn	65	291	274	281	345
from	74	232	37	209	36
1960	80	163	284	723	897
izip	19	12	455	480	806
outfile.write	76	205	346	177	736
stata's	32	68	367	703	392
snow	85	276	233	198	858
segregate	3	232	6	94	625
shape	71	274	268	305	981
np.array	1	59	112	232	21
alternative	82	241	378	573	669
2-digit	80	163	254	706	897
cut	37	13	143	39	589
v1.0.1	13	170	211	104	482
cur	47	52	198	605	985
pyplot.bar	51	136	24	272	780
add-ons	83	1	69	461	637
cuz	65	118	227	791	999
myarray	1	19	112	471	622
kinect	77	176	282	623	762
source	83	162	27	302	564
cue	10	28	306	791	473
hyperlinks	73	125	248	276	304
hlines	51	161	208	777	481
column-oriented	86	50	426	611	843
cum	98	258	148	796	347
im_array	52	0	263	284	19
column.values	70	273	309	727	852
master_mask	52	148	273	73	77
start_ix	52	72	68	290	708
df.date_time	76	72	30	155	987
reliable	82	241	106	497	970
coulmn	98	258	454	796	984
f=0	77	151	282	631	762
reusability	10	43	377	590	354
knock	82	137	88	458	953
addressed	34	173	116	173	208
borrows	34	254	234	302	421
pd.excelfile	76	199	286	283	736
foolish	65	291	258	26	345
k.shape	1	57	112	232	726
valleys	77	151	282	623	563
lastest	46	221	211	202	435
absolutely	65	291	258	407	887
timerange	77	29	73	77	931
delegation	9	109	479	732	354
segfaults	55	174	29	361	455
candle	37	86	299	22	466
sizeof	70	59	325	332	64
.set_xlabel	60	17	240	485	162
culprit	29	147	143	173	568
l14	11	234	4	531	99
decision	28	26	354	135	816
proficient	17	43	377	396	803
5:10	52	47	68	290	776
modest	88	30	55	785	89
centroid	99	288	11	315	744
\python	50	145	118	138	204
fixations	77	29	148	528	616
np.var	87	275	121	786	484
phone_number	43	72	68	265	708
intial	74	232	386	791	874
fltkagg	73	38	248	635	810
fit_fn	60	155	240	129	773
stats.linregress	52	0	418	471	591
fortran-order	40	184	153	453	122
.xls	86	91	367	107	86
my_array.reshape	1	274	112	677	159
rawarray	22	184	153	691	282
config.h	50	259	133	117	160
uart	23	187	365	595	257
monkeypatch	9	109	397	436	669
1.1.1rc1	46	221	151	681	380
1.1.1rc2	46	221	151	681	380
per-row	98	193	148	98	347
tiff	84	192	123	607	427
autodateformatter	64	185	166	560	184
16bit	84	192	123	592	946
interacted	78	150	445	41	604
errno	63	244	283	553	323
normality	79	227	332	457	905
.nonzero()	52	42	198	725	714
numpy.repeat	19	42	296	13	512
1.57	47	194	61	606	954
9000000	11	234	4	215	743
1.58	15	272	61	225	544
translate	74	232	37	110	141
rfftfreq	81	101	125	202	547
invite	34	190	307	321	328
scipy.sparse	16	94	333	455	788
seaborn.facetgrid	37	136	24	391	847
bottom=none	60	138	495	651	162
pickled	86	222	426	102	820
underlined	37	31	24	780	851
#code	74	137	459	15	421
subsidiary	29	118	116	97	472
zhu	35	238	326	8	336
pickers	6	69	32	572	536
non-indexed	3	110	6	354	125
1.5m	88	160	220	80	54
planet	33	176	282	617	563
1.5s	88	197	73	196	217
planes	61	288	282	315	138
y_axis	58	44	166	706	76
1.5x	88	180	55	337	89
quickfix	23	84	250	361	257
constant	77	151	485	631	668
stripped	27	263	420	468	655
notadirectoryerror	81	88	110	553	584
consulted	64	6	80	732	370
cure	29	28	227	432	472
single-pass	89	180	207	261	90
obtuse	10	43	395	335	803
type_num	70	204	74	594	64
curl	13	170	244	481	174
sourceforge	13	261	5	797	535
encoders	38	1	69	317	564
backend_bases	81	88	110	483	927
azimuths	77	197	162	528	616
composing	74	117	152	122	673
textwrangler	83	84	329	540	467
rand_image	52	219	102	476	757
b&w	84	195	128	607	427
confine	99	288	339	646	138
anser	35	207	371	205	336
cc=gcc	47	232	329	110	588
lower-triangular	16	94	462	782	800
excelent	35	207	371	205	767
cellar	30	259	277	340	752
iterators	19	12	455	480	806
dataframe.from_records	92	99	275	183	658
cater	38	227	291	525	79
utterly	17	43	395	335	803
excelwriter	86	91	367	183	86
sudoku	28	14	267	710	841
dtype=int16	48	19	112	305	159
implies	10	117	152	791	999
overlooking	17	43	227	451	803
.rename	44	134	181	700	827
cooked	27	137	459	15	421
implied	10	118	116	590	999
presenting	10	43	377	590	999
levenstein	28	26	185	293	816
xedges	60	102	63	557	780
ready-made	53	6	125	293	542
os.path.join()	19	12	455	480	806
unittesting	65	291	258	791	874
time-zone	80	285	323	781	920
pylab.show	90	46	345	599	356
wrangle	3	62	88	458	417
radix	82	180	341	537	720
self.a	0	55	295	684	231
amplified	77	151	106	429	303
wavfile	84	192	123	676	946
compose	74	232	37	110	141
im.convert	76	219	102	401	721
calcuate	74	146	185	98	347
numpy.array2string	38	214	125	78	382
matplotlib.patches.polygon	25	161	208	543	109
pleasing	64	6	390	78	256
jakob	35	207	371	205	336
presently	74	137	459	15	421
\mpl_toolkits\mplot3d\	50	162	118	483	927
implicitly	74	99	152	200	638
2rd	98	258	273	796	428
panel4d	3	156	386	354	125
astype()	92	185	78	105	325
currentindex	52	0	263	215	19
vis.py	30	162	486	247	344
chan	78	17	223	4	567
dupe	34	173	307	702	216
y_vals	72	148	418	73	77
backtesting	23	116	299	581	67
-pro	65	291	258	407	887
csv.reader	76	54	382	260	698
havent	29	62	410	161	457
pkg	13	170	244	165	482
zticks	64	290	166	706	76
rivers	99	176	282	212	563
lsuffix=	43	2	231	71	895
bitstring	70	100	357	260	405
self.canvas.print_figure	0	224	58	424	8
carlo	28	14	267	710	841
append	3	50	497	534	68
donut	61	136	175	158	847
a.index	44	134	181	290	459
access	74	232	37	110	161
subcube	99	288	127	73	744
sub-sub-lists	98	281	454	73	77
%m%d%y	43	273	309	727	24
qcentralwidget	6	69	90	572	449
non-linear	79	10	324	214	610
data-sets	28	26	354	94	816
packing	75	283	10	691	28
retina	85	30	233	72	858
rss	88	283	373	549	236
safer	82	241	378	573	29
np.dstack	19	294	296	278	470
truthiness	9	106	421	505	135
scikits.image	84	230	123	607	427
new-style	9	109	331	594	386
implement	28	137	341	525	382
honor	9	109	152	594	638
biases	79	151	106	631	303
composed	74	110	386	746	684
vips	84	230	123	607	353
x-coord	98	281	280	73	77
twin()	58	44	90	341	683
composer	96	45	264	650	634
event.inaxes	6	161	90	543	112
.iteritems()	47	12	461	776	582
che	32	16	58	482	888
chf	80	78	197	133	272
chg	52	148	206	476	714
import_array	9	204	29	498	64
escapes	32	282	190	477	5
readable	82	241	378	573	29
chm	23	125	486	247	127
readably	82	241	378	573	29
chr	47	130	461	424	764
printouts	27	192	329	122	508
chu	65	118	116	407	887
up-vote	34	190	3	702	915
convolutional	28	26	354	135	816
apple's	13	128	5	197	482
loadtxt	76	54	382	260	698
ord()	32	106	109	471	808
use()	81	171	226	684	699
y-index	75	132	273	73	77
escaped	32	282	190	403	5
fooling	17	62	88	161	647
decouples	37	290	166	706	76
df_test	52	134	349	539	622
primer's	35	238	187	187	308
1000.00	15	211	61	606	10
ch1	47	224	30	424	736
ch4	15	284	256	145	110
closing	22	187	108	361	248
didnt	65	291	410	407	457
fetch	74	232	37	370	161
decoupled	37	290	388	780	851
continuity	77	151	106	631	762
sqlite	86	68	119	478	126
high=	93	123	173	606	361
invoices	78	56	445	479	897
high0	43	105	93	177	832
pandas.concat	44	2	260	33	176
reran	83	206	151	361	728
canopy's	83	15	189	540	818
columns={0	43	47	231	700	895
df.info`	27	293	202	183	188
non_zero	52	19	112	284	714
sizers	90	69	46	380	384
varied	74	232	159	94	36
noises	28	230	428	429	353
holds	74	117	386	746	161
varies	77	281	97	746	668
draggablepoint	6	69	46	572	384
profile	27	147	294	525	421
isoline	33	176	282	617	908
figurecanvasqtagg	6	69	46	380	384
hight	37	290	443	207	668
bernier	65	207	409	407	887
chasing	17	62	88	39	180
locates	74	232	37	746	868
non-finite	98	146	424	414	509
platypus	73	6	278	158	405
congruent	98	281	317	605	602
940	15	256	488	751	96
941	47	224	246	209	472
49000	98	146	454	139	756
1d_array	98	148	461	471	622
float_format=	76	205	346	177	576
subsequently	74	171	306	190	673
64-bits	57	100	325	86	22
h5f	52	72	68	265	622
np.random.permutation	87	42	296	13	886
afterwords	29	171	246	190	629
non-integer	57	89	8	788	62
20:00	67	260	12	2	958
symbols	32	16	420	482	898
sigmoid()	0	275	140	684	231
grp2	43	164	231	204	612
galaxy	77	250	77	623	441
grp4	78	56	445	10	66
eul	79	275	140	566	292
y.size	1	274	112	139	60
located	74	162	27	746	161
*log	89	234	207	261	90
accredited	32	110	223	482	385
cumtime	0	147	125	524	142
testing_matrix	1	274	112	305	159
pop-up	90	187	32	624	536
tsv	86	91	329	107	519
tst	47	67	223	145	764
tss	28	14	114	425	841
eur	80	116	197	581	67
bolder	37	31	467	780	851
bolded	27	137	116	482	328
10.5.8	85	276	233	198	858
libjpeg	13	128	211	104	482
df1.iloc	52	47	68	290	288
sebastian's	35	238	187	187	308
psutil	46	206	80	202	435
backend's	90	187	108	599	248
gillius	30	166	134	764	862
fcompiler=gnu95	13	170	133	481	30
ts2	80	35	26	781	377
current_drop	52	0	180	215	19
ts1	80	258	26	155	377
0.25978994	15	211	64	364	265
3,000	12	160	220	80	149
ndenumerate	19	42	296	13	601
ipython_kernel_config.py	30	122	478	159	181
np.fft.rfft	87	55	121	673	612
sub-histograms	51	290	90	391	388
multiindex'ed	3	116	6	370	125
popping	90	187	108	361	248
dataframe.update	92	156	65	587	971
8-d	47	224	30	283	736
arrayfun	38	214	125	703	392
80gb	88	182	373	549	236
python-3	83	206	178	197	854
p-value	79	23	332	638	11
plt.table	51	44	90	418	683
scipy.ndimage.interpolation.zoom	84	219	102	193	427
flushing	22	61	388	358	282
row_number	52	72	68	290	154
ani.save	76	144	30	16	413
approached	82	10	341	744	610
workflow	23	137	294	525	866
qux	43	200	231	204	708
clarify	27	118	116	590	328
approaches	82	227	159	321	905
_from_ordinalf	60	201	180	424	8
que	78	200	243	550	984
font-family	73	166	134	764	862
supose	82	137	459	574	214
plt.ylabel	58	44	494	341	890
backwards	40	13	270	791	363
1430	47	105	58	133	588
recipes	38	254	234	302	565
yarr	27	293	403	695	719
right-most	37	281	443	191	851
errorbars	51	136	24	22	847
72000	48	142	268	305	60
suffix	32	110	243	33	176
dataset's	64	161	90	122	421
sunday's	80	56	254	723	897
df.cola	98	258	26	290	377
reaches	22	283	485	361	214
sloped	79	23	332	511	239
lagging	29	231	143	161	473
reached	22	13	485	361	214
spelling	65	118	305	407	887
braces	32	16	420	403	768
libgfortran	13	170	211	197	482
scanf	32	222	329	601	768
2-norm	16	94	391	293	716
fahrenheit	33	281	77	623	210
intermediate	82	50	153	691	359
a=true	72	130	25	174	792
str.join	19	12	455	480	806
programmable	86	232	329	110	405
datasize	88	180	55	441	89
listcomp	19	294	455	231	512
scans	22	197	497	534	257
explanation	68	207	371	205	328
acquire	22	85	294	349	257
uniquify	71	64	10	139	981
2011-02-09	67	213	95	185	51
scipy.sparse.coo_matrix	16	94	333	455	788
df.col1	87	52	68	181	985
wishlist	46	173	359	604	208
dependent	74	232	37	768	36
df.col2	43	52	68	181	985
detection	28	230	428	429	353
cv2.filter2d	1	19	102	284	855
rbox	72	288	11	315	138
pl.figure()	6	46	18	418	356
abstracts	17	43	143	732	354
subok=false	48	59	2	621	681
hava	74	232	37	209	868
fast_path	0	106	140	684	508
have	29	28	306	209	36
cross-validate	79	26	354	135	816
agglomerative	28	26	354	293	716
dateutil.parser	86	35	245	560	879
child's	22	85	163	85	798
63-1	57	89	325	332	22
current_date	87	258	493	155	377
concerns	10	118	17	173	999
prefer	82	241	246	500	669
x-limit	37	290	443	706	388
c-cr	72	186	25	683	56
func_ranges	75	132	273	73	77
epstopdf	73	144	248	91	304
unfortunatelly	29	206	178	202	473
mimick	27	137	459	15	421
mimics	27	117	459	15	421
.to_dict	44	134	202	265	188
new_column	43	72	68	265	852
payment	78	150	430	479	604
distance_transform_edt	16	214	125	293	716
pythonicity	82	180	479	537	246
2008-12-31	43	72	231	265	708
disease	78	250	445	479	604
agg.path.chunksize	30	185	452	641	383
1,000	88	160	220	80	54
occasion	65	62	258	236	874
air-pressure	32	17	420	4	385
marius's	64	28	459	15	421
empid	78	93	243	41	965
visualizer	23	84	294	595	127
visualizes	28	14	267	710	841
setted	74	171	306	122	508
rotating	37	31	443	617	908
continually	22	187	388	534	214
thicker	37	31	24	780	276
setter	9	109	331	594	386
.shift	44	47	181	290	827
4.0.0	85	276	42	685	621
knowledge	17	43	377	321	354
4.0.6	85	276	151	685	380
upvote	34	190	3	702	915
autoscale()	64	44	90	572	683
fill_reject	98	258	445	796	377
minimising	82	50	341	537	246
bokeh's	64	136	175	158	847
amplify	77	151	20	430	547
pitfall	10	231	17	335	568
regularly	53	29	339	720	340
presorting	88	160	220	80	54
700,000	88	160	220	80	54
thearray	52	12	461	471	77
quad-core	85	30	480	785	858
reputations	34	190	3	702	915
.nth	44	164	181	700	419
.round()	87	59	309	727	522
scipy.optimize.fmin_bfgs	79	22	324	566	13
axes.formatter.limits	58	166	452	764	290
fixes	46	221	359	173	284
teams	78	150	445	479	604
spark-env.sh	30	170	244	165	181
gnuplot's	61	125	175	626	392
won't	29	28	410	209	196
fixed	46	221	124	791	435
delimitated	32	16	420	468	768
2066	67	213	95	185	51
-ed	9	106	306	791	473
covert	74	99	37	601	141
transpositions	40	178	154	150	122
timezones	80	285	86	781	920
np.take()	19	42	296	13	512
intensity	77	195	51	137	210
dataframe.sort()	3	156	182	587	125
single-element	75	106	421	471	650
racket	34	1	291	525	275
3.962492	15	211	263	364	265
wx.index	76	39	309	183	934
b.size	1	57	41	232	726
reform	10	118	227	590	472
std()	79	193	121	31	484
difficulties	17	62	88	161	526
sse4.1	55	174	325	756	651
event_num	6	46	345	44	112
invariant	71	195	106	631	476
boundary	99	288	282	315	138
:(	29	28	410	236	457
column-based	86	50	426	279	843
thansk	35	207	371	205	767
pyplot.fill	77	146	140	646	509
np.ma.masked	52	220	198	770	714
jgene	78	93	82	558	965
reproduces	27	293	403	420	579
pca.components_	16	94	268	150	412
newz	1	57	112	232	726
commenting	65	291	305	407	887
tkinter	90	69	46	380	384
normstrike	98	258	485	141	377
joke	65	43	258	236	812
lognorm()	25	119	320	49	845
dfrm	43	72	68	265	708
pickle.dump()	9	185	357	260	405
trips	78	286	163	425	953
kosher	82	241	378	573	29
newy	1	102	418	129	910
df.insert	44	134	82	204	827
sheet1.xml	86	110	243	381	588
plotinfo	81	5	110	4	385
i+=1	82	241	341	500	219
denis	35	207	326	205	336
combine_first()	92	156	78	414	971
.transpose	1	57	41	232	726
rdbms	86	68	119	478	126
it's	10	241	395	209	999
arbitrary	74	232	37	209	382
datetime64's	80	35	245	781	920
your're	83	206	80	165	284
it'a	65	291	258	236	345
anomaly	33	13	282	631	709
it'd	82	241	246	500	196
haopen0	87	105	231	673	255
ewmstd	92	193	447	614	347
aranges	57	89	8	788	62
6482	1	274	112	305	436
plt.pause()	6	46	345	599	811
__sub__	9	109	331	55	878
frustrating	17	62	395	659	327
trailer	76	54	329	712	444
interpolate.interp1d	53	101	238	720	396
readin	3	110	329	712	519
weighed	77	292	148	98	347
python27.dll	30	162	486	247	344
arrangements	71	274	159	305	981
well-behaved	79	10	324	214	970
partner	98	297	454	587	984
sequentially	22	50	497	534	953
whirl	68	207	371	205	767
productivity	17	1	377	396	275
fabs	11	55	201	664	743
np.fill_diagonal	19	294	296	231	512
)	74	232	306	209	36
df.x.unique()	1	57	173	50	591
__version__	81	88	383	616	477
powell	79	22	324	566	13
extention	86	222	329	260	405
update-alternatives	13	170	50	481	174
discontiguous	40	184	153	453	122
cv2.waitkey	47	224	102	424	162
commenters	35	238	326	187	336
recourse	22	197	497	534	68
neural	28	26	354	135	816
nevertheless	29	28	246	209	472
keyboardinterrupt	90	187	108	361	248
builder	38	1	80	317	564
difflib	19	214	185	293	512
data-set	27	160	459	15	421
exceedingly	82	241	395	334	463
st2	83	206	178	165	588
residuals	79	23	332	363	11
bboxes	37	31	90	780	851
comparisons	75	227	198	457	135
ajean's	35	207	371	205	336
recasting	70	99	386	332	979
cohere()	22	13	143	684	231
stores	74	117	386	58	161
storer	86	68	379	285	502
numpy.arange	93	123	173	50	361
numbering	37	263	182	713	363
array.array	9	135	357	790	681
stored	74	110	386	746	161
localize	80	285	86	781	920
wether	29	28	317	631	999
arraylike	9	109	331	594	386
gmm	79	23	332	638	531
operands	70	278	421	715	436
onward	80	163	254	723	428
demographic	78	116	299	479	67
recommending	34	173	307	97	142
288	12	279	319	751	175
281	15	256	236	196	432
280	12	279	488	751	465
283	12	279	488	111	132
gmp	96	174	408	90	455
285	12	279	319	528	465
284	15	256	236	196	432
287	15	279	64	172	96
286	12	279	488	751	465
resolved	29	173	116	173	284
xmlrpc	23	85	69	595	257
np.__file__	81	15	110	199	870
datetime.strftime	92	35	245	560	934
elapsed	80	197	73	77	931
io.imread	84	144	102	401	736
resolves	46	171	116	173	284
df_final	43	52	68	693	985
mintab	75	103	206	73	77
displaced	37	31	443	780	851
x.date()	87	201	493	76	593
28l	48	0	180	424	159
success	29	62	272	161	457
admitted	29	28	306	791	655
lt.figure()	58	139	18	324	543
28s	88	147	55	337	89
classical	82	50	341	497	999
writerow	32	106	420	468	768
pandas.dataframe()	92	156	65	155	971
hail	78	281	132	479	995
hair	17	13	56	753	180
brian	35	115	409	20	423
recommendation	34	238	116	97	328
modulate	68	207	371	432	328
diagonalizing	16	94	462	782	800
happens	29	28	306	361	473
woud	27	137	116	590	328
fm.fontproperties	30	144	478	764	588
pie()	63	83	226	641	676
results=	47	224	30	424	881
hurricane	99	250	280	42	995
:-d	35	207	274	205	767
x_trainn	48	274	349	172	159
happend	29	28	227	432	571
screwed	29	171	88	458	417
:-p	65	291	258	236	345
pollute	81	237	390	739	864
bar-chart	51	136	175	22	847
fucntion	9	214	140	684	699
propably	64	28	306	732	370
recieving	29	28	306	361	473
reindex()	92	156	78	763	691
dct	84	195	428	166	353
automagic	38	241	291	317	628
sbin	30	259	244	303	960
:-)	65	291	371	236	345
justin	35	238	326	187	336
introduces	74	117	152	173	305
introduced	46	221	124	791	435
masterarray	43	72	68	265	708
beeswarm	51	136	175	272	847
afterall	10	118	395	590	999
preexisting	3	136	386	436	526
hexes	37	31	467	646	851
numpy.core.records.recarray	63	83	275	616	699
k-nearest	99	288	354	293	716
female	78	200	252	584	604
np.hypot	19	178	121	562	608
bitwise-or	19	214	154	113	135
spectogram	61	136	175	626	847
1632	12	267	58	111	132
x.t	16	178	462	562	726
elastic	83	84	376	670	467
rushed	65	291	258	236	345
x.y	30	259	244	303	960
x.x	30	259	244	381	588
0.11.0	46	221	151	157	621
0.11.1	46	221	124	331	435
x.a	1	55	493	232	726
x.b	87	55	493	76	593
byhostandop	43	47	231	265	593
crucially	74	232	37	587	668
hotspots	82	241	341	537	246
coke	43	258	231	133	708
28*28	77	195	128	674	353
py.test	23	227	294	457	905
beetween	3	146	454	601	141
versatile	38	6	291	78	628
webservice	23	84	294	110	127
x.1	47	134	68	155	622
scrollable	37	136	175	391	847
.diagonal()	1	178	112	232	726
1184	15	267	236	514	980
flip	40	13	443	661	363
16bits	84	192	123	592	353
t_date	43	47	231	265	708
recd_date	43	201	309	727	987
farray	48	204	74	790	64
sophos	83	206	178	197	467
tastes	38	1	291	525	354
inspite	20	119	259	757	664
replying	35	207	371	205	767
exceeded	63	83	485	574	39
levenshtein	3	286	185	293	798
well-defined	10	151	106	631	999
periods	80	29	299	77	333
identities	28	297	185	744	382
\matplotlib\backends\	50	145	225	168	679
-argument	64	161	226	641	683
`")	32	17	170	4	385
detail	34	254	234	97	328
duplications	3	146	454	587	984
tests.py	30	162	244	165	383
sepallength	3	93	65	390	984
pandas.tslib.timedelta	92	35	245	781	920
appends	22	50	497	534	68
adam	35	115	409	20	336
wordlist	98	286	163	253	798
conveys	17	43	377	525	951
c_void_p	9	109	331	594	386
svms	28	26	354	135	816
df2.reset_index()	44	2	181	700	895
lag_plot	51	136	195	272	847
ramble	34	118	234	590	328
theodros	35	207	371	187	308
columsn	3	110	6	354	984
non-native	70	99	17	691	843
axles	80	56	26	390	828
pyarray_simplenewfromdata()	9	109	331	594	699
t_	98	186	25	129	756
view_init	33	176	28	617	908
reprocess	67	78	223	133	272
fathom	29	28	410	161	457
easting	4	176	135	745	722
interpreters	83	15	189	540	818
if-else	19	214	198	113	135
34%	20	119	259	592	979
explainations	35	207	371	205	328
30min	80	149	447	77	612
pprint	81	5	289	739	870
extent=extent	60	155	240	193	285
345	12	279	488	111	465
347	12	267	488	111	132
341	12	279	488	751	132
342	12	256	488	196	432
343	12	267	488	111	132
90k	88	160	220	80	54
348	12	279	488	111	132
localtime	70	35	245	781	920
@	35	115	409	20	336
50mb	88	182	373	549	236
np.flipud	1	57	112	232	280
50ms	88	197	55	337	89
vastly	82	180	55	497	246
gen()	75	106	497	534	68
line.startswith	76	51	487	177	413
subexpressions	3	50	497	534	953
school	17	150	377	149	275
__nonzero__	9	109	331	55	386
open-source	38	1	69	461	637
loess	79	23	332	761	620
parse_date	76	35	322	51	987
glued	3	31	6	354	673
unpythonic	82	241	378	334	29
martingale	28	14	267	710	841
return_inverse	19	42	296	121	886
gmpy2	55	174	408	756	651
pylab.py	30	259	478	159	960
netbeans	83	206	178	361	473
put()	75	294	10	231	782
isused	3	134	93	155	832
guidelines	34	254	285	321	565
direct	82	241	378	573	29
nail	17	62	311	39	180
actualrgn	1	52	198	232	714
log-linear	61	136	175	626	614
colordown=	60	155	240	495	285
kivy	83	84	178	197	467
x_vals	72	148	418	73	77
hashtable.pyx	50	267	118	580	429
b=2	52	130	263	174	306
b=0	72	130	25	174	306
b=1	72	130	25	174	306
hide	64	290	90	572	370
pctresults	52	0	263	364	288
revolves	17	62	88	161	746
c_double	1	59	41	50	21
liberty	27	118	116	97	328
mne	23	192	365	676	519
blur	84	230	428	166	353
lsoa11cd	43	72	68	265	602
supplies	74	117	152	595	638
matplotlib.pyplot.bar	51	161	195	272	481
revolved	33	176	88	161	762
op_axes	52	220	270	284	650
discontinuity	33	176	282	212	725
in_array2	70	204	74	332	64
fs.scores_	47	224	93	177	764
out.txt	30	162	478	247	344
hardcode	74	232	246	209	629
tolist()	19	12	455	480	806
\numpy\core\	50	145	225	168	679
chunked	86	50	426	611	820
tkinter.ttk	81	5	110	130	584
-lagarde	65	291	35	236	142
recursive	82	214	341	744	219
leaves	29	117	306	58	305
settles	65	291	258	407	887
b=c	47	130	162	556	764
month-year	80	35	245	781	410
b=a	52	220	158	476	757
settled	17	62	88	161	874
tt	72	102	349	539	756
prints	74	117	306	58	508
tabulators	32	263	420	468	768
patience	68	207	371	205	767
pyramid	61	136	128	158	847
printf	70	204	74	790	7
pylab=inline	90	15	189	226	818
_isurl	9	109	331	594	386
would	74	232	246	209	196
create_engine	76	68	119	478	824
pd.multiindex.from_arrays	44	134	181	700	827
-av	86	293	202	285	502
tail	29	23	332	511	239
distributing	55	14	80	570	564
spike	77	266	73	574	227
y.t	11	178	242	562	726
replys	34	115	409	20	423
th	98	132	273	73	77
vps	83	84	376	670	467
xidx	52	148	273	284	458
iso8601	32	99	245	601	920
excellent	35	207	371	205	767
expenses	23	116	27	370	161
supplemental	3	110	6	479	984
abundance	77	176	77	623	210
numpy.ctypeslib	9	204	29	790	64
y-axes	37	290	24	391	388
0.35355339	15	211	64	364	265
ndimensional	75	64	10	519	684
one-item	75	106	461	471	903
geometry	99	176	282	617	908
tom10	35	238	326	187	336
deficiencies	34	173	116	97	328
np.roll	19	294	296	13	280
max_index	1	274	112	770	60
aa.axes	58	44	494	418	162
plat-mac	50	259	277	303	469
estate	77	31	467	94	214
preserving	74	117	182	548	526
hexagons	99	288	467	646	138
captcha	73	136	128	158	847
jumble	3	297	454	110	161
attract	34	190	307	702	994
unordered	3	297	182	776	903
suppress=true	57	59	452	171	290
talked	65	118	116	233	874
multiband	84	195	128	607	353
workbook	86	91	367	107	86
im1arr	84	195	51	592	427
actuality	3	160	342	80	54
0.5.0	46	221	151	331	435
0.5.1	46	221	151	681	252
dialect	86	68	119	478	444
gdalinfo	86	222	329	260	405
description	27	118	116	97	328
insecure	46	222	329	202	820
imaginable	82	241	341	573	669
lump	3	110	6	110	953
linalg.svd	16	94	462	782	800
befor	29	28	306	122	508
htseq	83	206	178	197	467
tidying	17	62	116	525	328
parallel	55	85	71	349	431
luma	84	230	51	137	427
duplicated()	92	76	78	105	971
fabio's	34	238	187	97	308
amin	87	193	121	673	608
undesired	29	231	389	173	303
splendid	35	207	371	205	767
iter_csv	76	199	30	283	736
datatype	70	99	74	601	979
austin	35	115	35	20	142
summing	40	146	154	98	678
upside	20	31	259	191	845
test.out	76	144	30	283	754
-lcblas	50	259	133	117	160
plumbing	64	13	143	732	370
re-calculate	82	232	148	98	347
amis	83	84	211	197	467
file-like	86	54	382	306	405
fetchall	19	12	455	480	806
numpy.average	53	193	140	31	347
b'hello	76	205	346	177	576
dijkstra	99	288	11	293	716
isize	1	19	263	677	99
dataframe.from_records()	46	221	124	202	699
forehead	17	206	250	39	345
40%	88	197	22	337	89
unzipped	30	261	486	797	368
img	84	219	102	401	427
pkid	44	93	65	558	965
succeeds	29	117	306	58	473
40+	23	192	365	94	888
imo	82	241	395	334	327
16.7	15	256	236	514	980
imp	47	134	461	204	832
405	12	267	488	751	132
404	63	244	283	553	39
402	12	279	52	751	265
401	12	279	488	111	465
16.0	46	272	490	331	544
16.9	15	211	236	364	265
16.8	15	265	61	225	432
diseases	78	250	445	479	604
prevented	29	171	306	173	378
30th	80	163	254	723	72
to_csv	76	54	322	183	698
17th	12	263	420	468	428
alex	35	238	326	187	336
appart	27	254	234	302	421
mincnt=1	60	102	418	495	910
numpy.int	70	59	74	332	522
40m	88	160	220	80	54
40k	88	160	220	80	54
im1	84	219	102	401	427
load_fast	74	232	306	209	36
im2	84	219	102	401	427
40s	88	197	55	337	89
numpy.inf	57	99	424	108	203
40x	88	180	55	337	89
consolidate	3	50	6	110	953
co-occurrence	71	297	333	455	329
floodfill	99	230	428	429	353
t3	78	200	82	204	832
juggling	17	50	88	458	79
pandas.tseries.converter	81	5	110	199	870
t1	72	130	431	174	624
tkinter.py	50	145	118	483	927
saturday	80	163	254	723	72
revisions	34	173	359	604	208
channelsel	52	148	273	471	622
100-200	88	266	22	574	668
psychic	17	43	377	236	345
day2	80	163	254	723	931
sand	78	250	132	149	604
day1	80	56	26	149	410
laid	40	232	386	663	161
newly	74	171	388	190	673
independence	79	23	332	638	11
non-iterable	75	106	421	601	979
associate	74	232	37	746	868
coeffs	72	186	25	129	292
klmn	3	134	65	354	622
boosting	28	26	354	135	816
hyperbolic	33	10	11	487	725
days	80	163	254	723	897
3x3x3	71	64	213	38	95
tolerant	16	227	424	457	509
filter	77	146	428	166	547
heck	17	291	227	659	345
separable	53	101	428	166	531
pyrex	55	174	408	90	455
researcher	34	1	377	461	637
researches	29	62	272	161	746
primary	3	232	182	587	305
fantasy	78	150	430	149	423
relations	28	227	185	214	153
)"""	47	51	487	151	244
researched	29	62	247	161	746
tbl_ind	43	72	68	290	260
1.e15	52	0	112	696	714
bitcoin	23	116	250	604	118
heights	37	281	63	557	780
mymask	1	57	112	368	714
confirming	46	221	151	407	284
formated	86	110	329	110	519
boundingbox	64	125	248	276	449
corpus	28	286	163	253	798
numpy.unravel_index	19	42	296	13	601
geocode_data	43	72	93	265	622
yourusername	30	259	277	159	960
leaking	22	61	71	349	282
repeatably	22	197	108	540	248
6.4	85	272	61	225	544
repeatable	22	231	395	153	507
incur	22	50	153	537	59
.com	34	225	223	127	567
gc'd	22	61	388	358	282
frankly	17	43	395	236	345
6gb	88	182	373	549	236
minvalue	98	148	317	155	602
company's	23	116	430	149	67
h	72	186	25	129	756
df.sum	87	164	181	700	827
bridge	55	30	480	785	729
col_index	52	104	23	733	776
__radd__	9	109	331	55	878
screwy	29	231	227	335	655
colspecs	76	199	322	51	698
screws	82	117	388	458	417
configure	83	170	244	165	467
maxx	60	102	418	65	644
traditionally	64	136	390	732	847
other_series	44	134	260	290	827
thoroughly	34	254	247	161	746
savings	88	180	100	574	246
thorough	35	207	371	205	328
brandon	35	238	409	187	142
maxi	52	224	461	471	582
hatch	20	119	24	757	664
maxc	11	52	4	770	714
second_mask	52	148	206	605	602
n*	89	234	207	261	90
shape_base.py	50	145	118	483	927
apologise	65	190	307	451	98
left-to-right	40	13	270	191	363
bigquery	86	68	398	478	126
aproximation	61	13	443	212	762
rownames	49	110	93	155	125
scipy.curve_fit	79	22	140	566	13
7.33613e-07	15	157	64	514	144
promotions	70	99	331	594	979
mininum	98	146	185	73	77
wave.py	55	214	80	756	382
mytup	47	134	206	471	622
data-type	70	99	74	601	681
fontsize	58	166	90	764	76
xaxis_date()	64	44	166	641	683
seasonal	80	163	299	723	897
pkp	47	105	93	177	475
dups	3	156	182	285	125
x-x1	11	234	242	531	56
x-x0	11	234	242	531	56
colors	20	119	259	757	664
qstring	63	83	383	616	286
matplotlib.backend_bases	81	88	110	739	584
analogue	38	101	125	703	382
pkl	86	222	329	107	519
absolut	80	146	246	788	897
do_some_work	90	46	345	599	356
2,2,100	1	274	268	305	60
spite	29	28	306	791	999
situations	10	231	17	500	79
df.values	92	134	158	232	827
spits	29	28	306	122	508
543	12	181	58	24	888
540	12	181	488	751	888
547	50	267	118	483	132
forecasts	80	56	299	94	67
545	12	267	488	111	132
.data	9	220	158	476	757
3-channel	84	195	51	592	427
.date	92	35	309	727	852
borrowed	34	238	234	302	142
.assign	87	55	493	76	593
color1	20	155	24	42	664
color2	20	155	24	42	995
despite	29	28	306	791	473
knocks	88	197	55	139	89
toolbox	38	1	69	317	564
color=	60	155	240	603	285
fig.text()	64	136	90	391	370
yerror	61	281	97	646	358
numpy.in1d()	19	42	296	13	512
heatplot	61	31	175	780	851
earncat	78	56	445	479	832
pandas-0.10.0-py2.6-linux-x86_	50	259	277	303	469
$pythonpath	30	122	478	159	181
disturbing	82	13	106	631	589
mut	43	134	93	556	832
wave_data	52	0	263	284	855
bins=10	60	194	63	557	780
binary_erosion	84	230	428	166	353
finger	17	62	250	39	180
hopefully	68	190	116	432	328
d50	20	119	259	757	786
mul	92	156	78	113	135
discovery	28	14	267	710	841
reiterate	74	232	116	190	472
newb	17	43	377	451	98
however	29	28	306	209	36
pythonish	82	241	378	573	29
atetime64	48	273	309	727	24
newx	1	102	418	471	881
scipy.sparse.linalg.svds	16	94	462	782	512
news	65	291	258	236	345
rngs	55	85	100	537	807
point-cloud	99	288	11	315	744
mu1	72	102	418	129	756
ell	72	186	25	129	756
isnull()	92	193	424	414	691
mu2	72	102	268	129	756
fault	63	28	389	361	473
vibration	78	110	430	482	798
mildly	82	241	341	334	215
extobj=extobj	47	224	162	424	888
expense	82	50	100	537	246
standings	3	56	6	354	720
dx_dt	0	275	397	44	231
fillna()	92	156	424	414	691
bincount()	19	42	296	13	512
conference	34	150	430	149	423
5m	88	160	135	80	54
commutative	16	178	462	562	135
foo.bar	0	5	110	424	889
numerictype	29	28	410	791	979
least-squares	79	10	324	214	620
sucessfully	83	84	178	540	467
least-squared	28	151	282	525	762
unchanged	40	171	388	548	673
nolearn	83	206	178	106	842
%prun	27	147	202	226	188
anchors	37	31	443	191	964
xxx	47	224	30	424	588
data-types	70	99	74	756	979
vulcan	83	170	80	197	564
unkown	32	99	420	601	444
xxd	30	144	327	165	383
behzad	35	207	371	407	336
tracebacks	27	293	305	420	579
arrayobject.h	30	244	94	553	323
constant_values	60	194	495	129	221
combos	78	297	182	587	984
censors	43	72	93	265	708
chunker	47	224	30	283	736
n	89	186	207	683	90
datelocator	58	35	166	560	184
plt.ion()	90	46	345	599	356
dashboard	23	84	27	595	127
bidimensional	71	64	268	519	684
matplotlib.pcolor	25	119	175	49	36
axis-labels	37	290	467	207	668
print_png	6	144	102	483	405
from_csv	92	185	322	51	698
ccny	39	163	73	196	931
beside	37	31	175	780	214
enlightenment	68	207	371	205	767
countif	78	262	430	98	347
3-element	71	64	10	519	684
single-valued	77	29	6	94	340
80000	88	160	220	80	54
occassionally	22	171	100	691	673
peaks	77	292	20	430	227
screw	29	13	143	458	417
numerical	28	10	8	744	610
y_trainn	48	274	349	539	159
scikits.learn	28	26	354	135	816
goofed	65	291	258	407	887
shortly	46	221	124	604	435
yearlocator	64	44	166	560	184
_assertrank2	50	267	118	168	679
ocean	33	176	137	623	563
jean	35	207	371	187	336
possesses	71	64	127	150	988
assembling	74	50	497	534	526
graded	34	150	307	233	275
proposed	35	238	187	187	308
able	29	232	246	209	196
proposes	35	238	187	187	308
grades	78	150	445	479	604
prepares	74	117	152	122	508
np.isnan	87	52	198	181	985
scattering	77	29	114	94	340
enlighten	68	43	465	432	571
columned	3	110	77	623	293
scatterpoints=1	51	155	195	272	664
pickle.highest_protocol	70	222	357	260	820
megabyte	88	160	220	549	54
greater-than	32	214	198	756	135
x-coords	98	281	454	646	221
gave	29	28	306	791	508
np.memmap	86	222	426	102	820
breaks	29	117	306	58	473
singe	3	110	175	85	214
yymmdd	80	35	245	781	410
descending	40	175	129	524	9
np.random.rand()	27	293	305	468	444
shipmentid	98	146	82	41	984
memoized	88	147	497	534	953
59	12	267	319	111	956
appendable	86	68	379	611	820
sharey=	58	44	90	418	890
64kb	86	283	426	611	820
58	12	279	319	111	465
melting	3	156	182	354	81
broadcasted	75	64	154	231	981
renames	81	162	367	247	655
contradict	10	118	116	97	328
pandas.get_dummies	92	26	168	135	412
sub-level	3	93	65	155	984
renamed	46	171	397	791	864
peeves	82	241	250	236	812
0-100	77	281	269	42	995
avatar	65	190	307	702	345
matchup	44	93	65	155	965
57	12	279	319	111	465
pyx	0	162	29	790	455
hunt	17	62	143	500	327
envision	61	232	175	646	951
excerpt	27	137	459	15	421
zoom	37	69	32	624	536
9999	98	78	424	528	509
radiobutton	90	69	32	624	536
self.ax	6	139	18	324	543
np.angle	19	292	20	430	830
dataframes	3	156	6	354	125
mystified	17	43	227	791	803
allocate	22	184	153	358	387
num_rows	1	57	41	50	21
borderpad	58	138	495	651	299
tkost	78	56	445	41	604
hsd	79	23	430	638	11
deleted	65	171	388	791	655
hsi	20	119	301	137	786
df.isin()	92	156	78	105	808
hsl	84	119	51	137	296
5%	88	266	22	574	668
quaternion	9	204	331	790	64
non-monotonic	29	29	49	587	340
newcomer	17	43	377	451	98
hst	10	192	123	791	999
alpha=	60	155	240	603	285
owndata	9	220	85	476	191
attacks	10	1	69	128	215
cuv_list	98	297	454	73	77
choke	29	99	275	601	568
dataframe1	44	93	65	390	965
ahmedkhalifa	50	259	277	303	469
dinner	65	17	223	4	423
ensure	74	232	306	209	629
connected	99	288	11	329	83
memory_profiler	22	147	71	349	431
little-endian	70	100	325	86	22
mistyped	65	291	258	407	887
ppc	96	45	264	117	858
ppa	46	221	211	202	435
aha	65	291	258	407	887
ppf	79	23	332	511	239
[[	52	19	303	364	640
ahh	65	291	258	407	887
ppm	84	192	123	607	946
ppl	68	190	371	236	345
pps	35	238	409	187	336
differnet	57	30	325	785	905
ppt	73	125	248	276	304
annotating	61	136	278	780	276
predict_proba	79	26	354	135	816
vode	79	22	324	566	13
subvector	98	148	127	73	77
stuck	17	62	88	161	803
striding	40	184	270	453	122
nelder-mead	79	22	324	566	13
indexers	92	104	23	733	154
.__init__	0	46	345	44	8
-operator	9	104	331	113	135
bottlenecks	55	147	479	537	219
_ilocindexer	9	106	383	616	699
+str	47	51	487	177	244
subclassing	9	109	331	404	386
fig.legend	58	44	90	418	481
moveto	47	224	223	436	622
woodchopper	35	207	409	20	336
flavour	38	68	119	478	126
attr	9	17	331	594	699
[:	52	0	160	284	776
[8	52	19	303	364	640
intra-day	80	29	299	77	67
unboxing	75	50	153	691	122
replace=false	93	123	173	628	361
[(	52	52	180	290	371
[/	52	19	263	485	855
cobbled	17	62	88	573	746
matrix_of_coupons_and_facevalues	52	19	263	284	855
decrypt	29	28	227	420	472
suspicions	82	62	88	236	246
0.60	15	194	269	606	10
0.61	15	211	61	606	10
0.62	57	211	269	45	743
sometime	17	62	250	39	345
object-orientated	64	241	390	732	370
0.65	11	194	269	606	10
0.66	15	211	61	606	10
0.67	15	211	61	606	10
0.68	15	211	61	606	10
perez	38	6	35	579	745
plt.legend	58	155	495	651	890
regime	89	151	106	631	905
u'34	67	200	231	71	255
when	29	28	306	209	473
c_i	72	186	25	683	306
setting	64	232	306	190	526
papers	28	254	35	321	275
whey	38	232	341	209	382
erosion	84	230	428	166	353
1.875	52	19	162	556	622
picture	61	31	175	122	951
dark2	20	119	259	49	846
flushes	22	61	388	358	282
uint8	70	100	74	332	522
webserver	83	84	376	184	831
=false	73	166	452	764	862
64x64	71	195	213	674	95
flushed	22	61	153	358	282
disk-based	86	50	426	611	820
faster	82	180	55	337	89
initiates	30	162	27	122	383
uncovered	10	231	88	173	746
3.2.5	85	206	178	685	380
fasted	38	50	341	497	564
3.2.0	85	276	151	685	621
3.2.1	46	221	151	685	621
3.2.2	85	276	42	685	858
remarked	35	238	326	187	336
unicodedecodeerror	63	83	190	477	261
nuclei	84	78	430	463	353
mpfr	96	174	408	90	455
roi	99	176	89	646	496
logarithms	79	10	8	744	610
df.to_sql	76	68	119	217	824
subtotals	3	56	6	354	125
ta.sma()	22	214	497	684	231
set_scale	58	44	208	341	599
iwwgdw	43	72	231	265	708
roe	78	200	252	81	832
.get_major_formatter()	58	44	452	642	162
recode	3	232	168	482	141
.05	11	284	4	606	10
ror	47	200	430	149	423
.06	15	194	269	606	10
.01	11	194	269	606	10
.00	67	213	95	185	51
.02	57	89	8	664	62
inverse	16	94	462	782	800
clarification	35	190	307	702	216
numpy.subtract	87	214	295	139	726
valuetype	98	258	243	796	984
cloud9	83	206	178	197	467
.shift()	43	47	68	290	985
bests	74	214	125	761	382
ajean	35	207	371	205	336
t11	33	281	443	719	995
cblas	96	174	408	90	729
costfunc	79	275	418	129	292
cantilever	61	176	282	626	762
frequencies	77	292	20	430	227
.0f	76	205	346	177	576
unfamiliar	17	43	377	396	803
12m	88	283	373	549	54
1.125	15	211	61	606	10
300dpi	73	125	248	276	304
endpoint	93	13	193	192	507
df.xs	44	164	181	700	895
tanks	68	207	371	597	767
cyan	20	119	259	757	786
emphasized	10	118	246	631	999
#ffffff	12	105	231	71	255
oftentimes	3	50	6	663	843
nbins	71	142	173	207	393
clouds	99	288	282	315	138
impressive	17	180	274	337	628
level	74	232	6	354	36
set_index	92	156	78	763	971
posts	34	254	247	97	746
iter()	0	12	455	480	761
standards	10	43	17	321	354
y-ticks	37	290	166	706	76
differential	79	10	324	487	610
numpy.object	70	59	74	332	681
my_function	0	12	461	44	8
illustrating	27	293	403	420	579
tougher	82	241	106	334	327
trend	77	23	332	638	620
x.strftime	43	205	493	125	879
ubiquitous	82	241	395	334	812
long-winded	65	241	395	334	327
colin	35	207	371	205	336
port	83	84	178	197	257
plt.contourf	25	102	320	193	845
81.00	67	213	95	185	51
25mb	22	61	153	358	282
beautifulsoup	86	68	275	107	126
explictly	64	243	246	16	629
u32	70	105	74	53	522
2015-06-17	15	284	92	10	110
np.version.version	81	5	151	199	443
scripted	10	232	246	209	370
kama	28	193	148	98	347
tabulation	32	214	420	468	768
recarrays	75	99	10	663	843
sortlevel	44	175	181	524	9
witch	74	232	140	626	214
6-7	88	197	73	80	217
agentid	78	93	82	463	965
library.zip	30	162	486	247	344
rethink	82	241	341	500	118
hsv	84	119	51	137	922
pl.tight_layout()	6	46	345	599	356
dumb	65	291	258	236	345
subcategory	78	93	454	796	984
pauldufosse	50	145	118	734	469
problematic	29	231	395	173	568
3800	12	142	162	528	931
subnormals	57	89	8	654	215
xls.parse	29	28	30	155	473
case2	98	146	148	796	984
init.tcl	30	162	94	247	960
\alpha	32	166	134	131	862
dict.items()	9	12	280	776	903
linespacing	58	44	166	641	683
set_titles	58	44	90	642	683
pred	47	134	349	539	412
text-based	3	232	6	110	508
prec	98	258	148	796	428
andy	35	207	409	187	336
head_width	64	185	226	641	683
hinton	61	136	175	626	951
deletes	22	117	388	58	655
prep	23	50	294	370	866
diagrams	61	14	175	158	951
numpy-1.8.0	83	206	178	165	380
plug	74	137	37	525	118
numpy-1.8.2	13	261	244	165	368
load()	86	222	382	260	405
comments=	76	199	286	51	413
str.lower	92	12	78	105	971
cased	32	99	270	791	509
.diff	92	156	78	105	827
pathpatch	25	161	208	543	109
attained	40	64	154	150	673
2.4.9	83	206	178	685	380
2.4.8	83	206	178	197	380
linspace	93	123	173	291	361
employed	28	137	341	525	382
2.4.3	83	206	151	685	380
2.4.2	46	206	151	202	380
cases	10	227	17	457	382
2.4.0	85	276	42	685	621
2.4.6	83	206	178	685	380
ucs4	13	170	211	104	482
stackflow	34	62	247	97	746
timepoints	77	29	148	77	616
py27	30	259	244	159	960
read.csv	86	68	275	183	322
dpaste	34	254	234	302	565
lineterminator=	76	199	286	177	413
pickle	86	222	426	102	820
ax.barh	60	44	90	418	162
usability	38	50	291	317	628
count=1	80	258	254	133	931
figure	6	69	46	572	536
backslash	32	282	190	403	5
dataframe2	44	93	65	558	965
inexperience	17	43	377	451	803
critic	43	200	430	204	423
slows	22	283	100	497	463
11:00	67	260	12	372	958
z-label	37	290	443	706	76
10*10	71	142	268	738	95
p.s.	65	28	227	97	472
event_id	78	93	243	390	965
inner=	51	17	351	4	385
meager	17	190	88	236	345
tic-tac-toe	28	14	267	710	841
vital	10	151	106	631	999
over-writes	40	184	388	548	655
col_4	98	258	171	558	377
fourth	98	263	454	746	428
c_contiguous	48	220	85	453	191
displacements	33	14	114	623	210
denormals	82	13	341	537	246
$100	88	283	373	574	236
np.s_	19	294	160	359	601
digesting	29	28	306	791	473
xtics	37	290	443	780	851
numpy.savez	86	222	426	102	820
flattens	40	294	10	231	678
informs	29	187	108	361	473
xtick	37	290	166	706	76
re-running	22	171	108	361	905
4500	88	142	220	528	106
mixin	9	109	331	594	386
representations	38	99	17	788	141
12-jun-13	15	211	236	514	144
vectorizable	82	241	378	497	29
\n\r	32	16	190	477	768
liblapack3gf	13	170	50	104	485
succeeded	29	62	272	161	457
list.index	75	106	461	776	903
series.interpolate	92	156	424	414	691
inform	10	231	389	716	215
evector.apply	87	55	493	675	593
representation	74	99	17	788	141
if-elif-else	3	110	454	155	673
\n\n	32	51	487	177	244
apreciate	68	207	465	432	343
wofz	79	22	324	566	13
multi_df.index	52	104	68	290	154
call_time	44	72	82	204	708
cusips	44	93	82	558	965
numpy.linalg.cond	16	94	462	782	800
dataframe_1	98	146	317	155	984
dataframe_2	3	110	6	155	655
scrolling	90	69	46	380	536
platform	83	30	69	768	467
axes.facecolor	58	166	452	764	664
locale.setlocale	76	144	452	177	593
ppi	88	195	53	674	353
el-get	30	170	244	165	960
lattitude	33	281	135	617	298
scipy.signal.resample	77	197	20	430	547
qualifies	10	43	395	791	693
qualifier	32	67	317	482	768
dataframe.loc	92	104	23	733	92
dfmi	43	72	68	265	708
matrix_power	16	94	462	782	800
arrow's	37	31	443	207	449
qualified	10	118	397	791	999
d.dataframe	44	201	181	348	827
unvectorized	82	180	55	337	29
permissions	30	162	376	250	348
inheriting	9	109	331	404	386
debating	34	118	247	161	803
-wise	78	193	78	414	121
importation	81	88	329	595	854
ax.imshow	58	219	494	193	845
matplotlib-venn	83	206	178	197	482
np.square	1	57	112	232	726
non-object	75	99	10	663	843
mapplotlib	29	28	246	209	473
catching	65	291	258	407	887
const1	98	56	445	796	66
const2	78	56	445	796	66
x-forwarding	90	15	376	184	831
123456	78	200	223	204	423
grouped-by	3	156	65	354	125
cvmat	84	219	102	607	694
concur	29	227	227	457	905
numpy.logical_or	19	42	296	13	512
pd.to_timedelta	43	273	309	727	852
non-na	98	146	424	613	509
dis.dis	0	147	295	684	881
statically	55	174	29	790	455
20130501000000	67	213	95	185	311
20130501000001	15	157	64	296	837
matplotlib.backends	81	88	110	739	889
importances	28	26	168	135	816
buffer_.close()	22	171	389	361	473
randwalk	0	275	295	684	231
df_result	44	93	65	155	965
succesfully	83	206	178	197	380
addtional	74	232	386	534	526
.tex	73	125	248	91	304
\d{4}	43	51	487	151	244
yup	65	291	258	407	887
yuv	84	192	123	592	427
turn	74	232	37	58	141
yum	13	128	50	104	482
backend_agg.py	50	145	118	483	927
ufuncify	19	214	422	641	761
mkl_set_num_threads	55	174	29	90	455
dataframe.from_dict()	92	156	78	105	971
-110	12	194	162	528	212
scipy.linalg.eig	16	94	419	782	800
walkthrough	35	207	371	205	767
closed-form	79	10	324	214	610
s=none	1	275	295	193	910
python3.4.3	83	206	178	197	380
squashed	37	31	467	780	851
math.net	55	1	29	317	564
renderings	6	161	90	732	481
easier	82	241	378	573	29
2013-11-25	15	211	95	364	265
texlive-latex-extra	13	128	50	104	482
men's	78	190	307	702	915
minimalistic	27	293	403	420	579
np.copyto	19	42	198	13	714
ax.draw_artist	6	46	345	418	373
resource.setrlimit	22	283	373	549	452
qtcore	81	88	110	739	584
embeded	32	99	329	601	519
order()	3	156	6	354	125
h-index	78	150	252	479	604
posix	55	85	245	781	920
n'th	64	263	443	191	428
cards	23	150	69	149	201
havnt	82	180	341	537	219
pylab_setup	50	267	118	483	679
plotquadtree	6	46	345	44	356
measure	77	151	185	293	970
pandas.merge()	92	156	78	354	125
typedef	70	204	29	790	64
exchanging	74	99	386	601	141
amateur	17	43	377	57	98
``]	87	39	1	724	502
```	47	224	15	209	379
t.hour	43	201	309	727	593
datapath	76	199	452	51	987
np.irr	55	180	422	537	219
sciences	28	14	377	396	275
ortho	33	176	135	617	908
attempted	29	28	272	161	457
resembling	27	137	459	15	421
surf	25	119	320	49	845
sure	29	28	227	209	472
transposes	40	64	154	231	678
printable	32	16	190	477	444
pd.cut	92	193	63	31	66
insets	37	139	272	391	543
platecarree	33	176	135	617	908
donation	78	56	445	41	604
lut	71	195	51	73	744
icol	47	12	273	139	591
icon	90	69	32	624	536
latex	73	166	134	131	862
``'	92	39	1	285	502
time-based	77	29	447	77	612
``)	92	39	1	285	502
later	29	171	246	190	629
-style	38	67	390	200	650
.set_linewidth	60	0	263	485	162
generator-based	82	180	100	497	463
user-specified	74	232	37	746	868
gtk3agg	73	38	178	635	810
replied	65	190	307	702	915
ax.azim	58	44	90	543	683
spaced	53	29	339	646	340
cheat	64	6	234	525	669
allocatable	55	204	29	790	64
cheap	82	50	100	497	463
spaces	32	16	420	468	768
tks	35	207	371	205	767
2.3.5.2	85	276	42	685	380
pelson	35	207	371	205	767
ax.xaxis_date()	58	35	166	560	875
.datetime	52	19	206	284	855
-0700	67	285	323	2	24
sma_15	98	258	317	141	377
555-9898	43	47	231	71	454
glmer	79	101	125	345	392
aubio	83	261	178	197	368
believing	17	43	143	236	345
.for	98	258	454	593	306
dd-mm-yyyy	80	35	245	781	920
syntaxes	29	104	272	200	622
unsure	29	43	227	432	803
h-1	89	186	207	683	90
z-axis	33	176	443	191	762
.next()	0	12	461	684	699
cylinders	99	288	282	315	138
assignation	75	297	127	587	673
outperform	55	180	341	537	219
multiprocessing's	38	85	80	349	564
copy-pasted	27	293	27	420	579
predicted	79	23	332	638	11
cx_freeze	13	128	5	197	368
jit-ed	82	241	341	691	219
y'all	68	207	465	432	343
n10	43	72	231	265	708
matplotlib.figure	6	139	18	324	543
freeimage	83	206	178	64	482
signs	32	16	420	661	898
1920	71	142	268	528	175
1921	12	163	162	133	272
1922	47	130	243	305	888
42000	71	195	213	674	175
back-end	73	38	248	184	810
surfaces	61	176	282	212	138
list_of_floats	60	224	180	424	910
mol	98	281	162	796	984
paging	22	182	373	128	236
insted	29	28	227	432	472
getattr	81	37	110	130	736
surfaced	29	28	306	202	568
guitar	77	227	20	631	547
np.corrcoef	16	94	121	562	608
set_printoptions	70	185	452	171	290
pass-through	82	214	341	756	382
acquiring	22	171	497	534	161
mylegend	60	44	461	418	162
item_a	98	146	317	141	602
quiet	29	28	410	429	509
contract	80	56	299	723	67
patient_id	3	156	65	155	125
999999	12	19	162	528	212
fmin_bfgs	79	22	324	566	13
ami's	35	238	187	97	308
filtering	3	50	428	429	526
re-usable	38	237	397	436	382
matplotlib.rcparams	73	166	134	764	862
period	80	29	299	77	931
insist	10	232	246	500	472
o-bound	82	241	341	497	29
newbee	17	43	377	396	275
down-voted	34	190	307	233	216
cv2.resize	84	219	102	401	427
subscriber	23	85	294	595	257
direction	33	13	443	191	725
andrey	35	207	371	205	336
1217	15	19	162	364	265
1215	50	145	231	71	255
linalg.norm	19	214	55	337	89
andrew	35	115	409	20	336
os.urandom	93	5	193	628	361
recolor	37	31	467	780	851
rbga	20	119	51	592	922
ironpython	55	174	178	90	564
andrea	35	207	371	205	767
__eq__	9	109	331	55	878
spirit	82	241	378	573	29
protocols	23	85	71	349	820
case	74	232	246	209	999
with-statement	22	231	80	500	568
cash	62	258	26	581	377
df.index.day	43	47	68	290	407
cast	70	99	74	332	979
0.63	15	211	263	364	265
irrespective	74	56	445	746	868
480,640	48	274	102	305	175
focussed	38	151	106	768	970
my_func	0	55	295	684	231
duplicating	3	50	182	548	526
acess	52	19	246	471	622
participant	78	110	243	479	984
author	34	173	35	233	142
reshape	40	294	10	231	678
granted	38	241	17	209	305
ecolor	64	119	226	641	664
os-release	83	30	480	785	588
time_a	78	258	26	41	377
np.may_share_memory	48	220	85	476	280
~1000	88	160	220	80	54
status	78	150	445	41	423
a.dot	16	178	462	562	800
typecode	70	204	74	332	64
kelvin	33	281	443	780	995
weed	22	146	497	39	68
director	78	150	223	149	423
numpy.nditer	19	294	296	231	782
one-by-one	22	50	497	534	68
delicate	28	151	106	631	970
facet_wrap	51	136	390	272	847
3,500	52	19	263	284	855
relies	38	117	152	768	305
time_0	76	105	93	51	987
~100k	88	160	220	80	54
ascomb	43	72	68	265	708
without	74	232	246	209	526
~100x	82	180	55	337	89
relief	61	176	282	617	908
relied	29	231	395	335	568
inability	29	231	395	458	473
binaries	13	128	5	797	391
macbookpro	88	30	480	785	858
bodies	61	297	114	695	210
justify	10	190	17	590	246
df.column_name	92	104	23	733	154
ninth	98	263	254	788	428
pairtime	47	106	383	471	881
stringio.stringio	76	16	190	477	932
sample's	77	281	148	10	347
polish	64	137	116	525	370
univariate	79	23	332	511	531
ill-conditioned	16	94	462	654	970
unconverted	80	83	283	781	39
.match	43	47	68	181	985
invalid_raise=false	76	54	382	641	698
\0	32	105	487	415	413
scipy.ndimage.convolve	53	101	125	166	782
\$	32	205	346	177	475
u.shape	52	0	180	215	19
devflux	15	157	64	296	144
flashing	90	187	108	624	248
fan_corrq	11	157	180	172	99
-fwrapv	50	157	133	117	160
grid.shape	52	194	173	65	19
co-ordinates	33	176	135	617	908
delhi	12	279	162	528	106
data.ndim	1	106	295	684	699
match_array	75	148	206	519	981
quantiles	79	193	332	10	347
itertools.compress	19	214	78	13	512
series.to_dict()	92	156	78	776	903
\w	32	51	487	151	244
\t	76	199	286	51	413
\r	32	282	190	477	5
\s	32	51	487	151	244
deta	0	275	295	684	231
patrick	35	207	371	205	336
\x	32	16	190	477	5
\f	32	282	190	403	5
\d	32	51	487	151	244
\b	32	51	487	151	244
\a	32	51	487	151	244
\n	32	51	487	177	244
tower	70	99	74	332	979
1989	67	163	319	718	272
dijkstra's	28	14	267	710	841
simulator	28	14	267	710	841
-mu	11	234	242	531	56
in1d	19	42	296	13	886
connectionpatch	64	136	208	543	847
competition	34	150	35	179	275
2000,200	88	142	220	528	60
preallocating	88	184	153	358	359
developmental	46	221	124	604	435
imputer	92	26	424	135	967
swaps	40	117	154	548	678
ported	55	174	29	90	564
googled	29	62	247	161	746
moon	33	176	282	617	725
mathcad	79	10	324	744	610
ifelse	19	214	222	466	392
imputed	61	31	24	329	786
index_data	43	52	68	290	708
gridsizer	37	69	46	780	536
googles	34	173	234	97	142
n156	67	181	95	24	323
freed	22	61	153	358	282
football	78	150	252	479	604
scremato	15	211	61	606	10
unmask	75	148	206	605	714
abstractions	38	1	291	317	354
100hz	77	29	365	77	227
elementtree	86	222	275	183	405
dicey	22	85	100	732	370
11gb	88	182	373	549	236
np.double	70	59	74	144	522
discussed	34	173	234	97	208
gridpoints	99	288	339	646	744
whence	82	214	8	756	62
estimator	79	23	332	638	531
numpy.linalg.eigh	16	94	462	782	800
discusses	34	254	234	302	565
12.300000	15	211	236	514	980
interfacing	55	1	479	317	354
\numpy\linalg\	50	145	225	168	679
instruments	28	29	299	94	67
classes_	72	148	349	73	756
annotate	64	136	90	777	76
300mb	88	182	373	549	236
rising	77	151	106	430	194
newentry	3	110	6	155	622
item_list	44	134	260	471	827
dataset2	74	110	163	746	519
right=none	60	194	495	193	910
reassigns	9	134	158	476	757
there	29	28	227	209	472
ehm	65	291	258	407	887
ehh	65	291	258	236	812
edge_length	1	12	280	776	329
non-unique	3	156	49	587	125
traindf	43	72	68	265	708
ended	29	62	88	458	417
numpy.linalg.solve	16	94	462	782	800
datasets	3	50	100	94	953
offical	83	206	234	302	565
savez_compressed	86	222	426	102	820
wholesale	10	43	17	500	215
1800	12	279	220	528	106
plt.autoscale()	58	44	494	642	683
grasp	17	43	377	321	354
grass	99	176	132	623	563
creeping	22	283	373	549	417
indx_j	72	186	25	139	756
threading.thread	9	61	71	44	807
taste	10	241	17	334	812
felix	35	115	409	20	336
n*2	71	64	268	519	684
n*1	72	132	25	150	756
datedpt	78	258	26	558	377
map's	33	176	135	617	908
designinfo	81	88	110	739	183
overflowing	57	89	325	788	62
onerous	82	241	395	334	327
deserve	65	190	307	702	915
rosen	0	275	295	44	231
mpl-data	30	122	486	350	181
2015-10-05	67	213	95	185	51
4096	71	142	268	139	60
n*k	89	184	207	261	90
3.2.3	85	276	42	685	858
avg_low	87	52	68	673	985
n*n	71	64	207	738	95
n*m	89	274	207	261	90
specgram()	51	136	140	626	847
n*q	1	19	112	284	855
n*p	57	89	8	664	62
m.mean	1	57	112	232	726
binning	77	151	63	31	780
finaly	35	207	371	205	767
raspbian	83	206	178	685	467
padraic	35	207	409	187	336
websites	34	254	247	321	746
directors	23	1	430	595	423
directory	30	162	486	247	344
graham's	53	10	324	214	610
astropy	86	6	278	607	564
------------	15	213	64	550	888
generalize	82	137	37	525	382
denotes	98	117	454	746	638
decisions	10	43	479	321	354
glimpse	37	13	143	631	668
matrice	71	64	127	738	95
ron	35	207	371	187	336
uint8_t	70	204	29	790	64
v3.4	85	206	178	685	380
use_index=true	60	155	240	495	12
76800	1	274	180	215	19
extraneous	32	263	420	468	655
4000000	88	142	268	139	60
1-99	72	281	162	593	306
shameless	34	173	234	302	142
immutable	9	99	421	594	903
y_values	60	44	173	65	162
bdate_range	80	35	245	560	333
linearsegmentedcolormap	25	119	320	49	296
j-1	52	132	273	284	19
rand_max	57	89	325	141	22
ytick	37	290	166	706	76
numpy.memmap	86	222	426	102	820
.filter	87	164	493	76	419
treating	74	99	386	601	141
index_tricks.py	30	162	118	381	842
headwidth	64	44	265	641	683
lisp	38	1	479	317	354
list	75	297	461	776	903
pnoise	52	0	180	364	288
lisa	78	115	252	479	423
numpy.recfromcsv	76	54	382	283	698
employing	35	62	341	161	746
abstracted	38	6	291	732	79
haar	28	230	428	429	353
translating	17	43	377	396	141
alters	74	117	158	548	526
vmax=max	60	57	173	193	910
freqdf	47	28	459	15	421
listbox	90	187	32	624	112
appropiate	74	232	386	663	36
sue	75	99	246	601	979
ros	90	171	128	595	257
brien	65	291	258	407	887
sun	33	176	254	623	725
sum	98	193	148	98	347
brief	27	254	234	302	328
version	46	221	151	202	380
dataframe.mean	10	185	226	641	699
row	98	110	454	796	984
compresses	86	222	426	611	820
toes	68	207	371	205	767
christian	35	207	409	187	336
opteron	96	30	480	785	729
themself	3	110	6	706	851
compressed	86	222	426	611	820
line.split	76	51	487	177	244
frozenlist	9	109	331	776	903
equations	79	10	324	214	610
uploading	23	84	294	676	257
zoom-in	37	31	32	624	536
qualify	10	227	317	773	707
stiffness	16	94	462	150	800
john's	65	238	187	233	308
exited	63	244	108	553	248
mul_df()	3	137	459	15	421
stopiteration	63	83	389	715	734
dimention	71	64	268	519	684
pdfs	73	125	248	276	304
block_size	1	274	173	677	60
globals()	0	237	461	776	864
emoji	73	125	178	131	854
python-matlab	83	206	178	197	380
hurray	35	207	371	205	767
])])`	52	0	263	364	640
xrange	93	123	173	480	806
functools.partial	19	214	226	105	761
flat	40	232	10	519	678
israel	43	200	256	145	764
presumes	77	29	148	77	931
dataframe.to_excel	86	91	367	107	86
pairs	99	297	185	73	744
flag	29	185	452	716	130
pdf1	11	234	242	129	56
presumed	65	118	258	791	999
candle_height	77	86	73	574	931
pandas.melt	44	156	181	763	971
sklearn.linear_model.linearregression	38	214	125	302	854
caveat	10	231	17	209	305
pandas.read_excel()	86	110	275	107	519
mymodule.py	81	88	178	595	383
k=10	88	142	55	337	89
100's	88	297	100	94	953
spearman	79	23	185	638	11
_exact_	27	293	403	420	579
ax.margins	58	138	495	642	299
dict-like	9	109	331	776	903
rather	74	232	246	209	36
dataswede	35	207	409	205	336
occasionally	29	231	159	94	509
histogram-based	79	23	332	511	531
rebalance	0	258	158	614	154
distro	83	128	211	393	482
plt.axis	58	243	494	775	599
okay	65	291	258	407	887
df.groupby()	92	164	78	105	121
chunking	86	50	426	611	820
orbits	61	288	282	212	762
perl	38	1	479	317	354
sven	35	238	326	187	336
isdigit()	92	156	78	105	971
lighting	28	151	106	429	303
install_superpack.sh	30	170	244	165	174
concentrating	74	28	497	534	214
contingency	79	23	332	638	11
ccrs.platecarree()	58	44	494	642	162
short	27	137	459	209	421
9.744	15	157	64	296	837
clean_tweet	55	147	341	537	219
extrapolation	53	151	238	720	396
lhs	40	104	23	661	154
hyry's	82	238	187	187	308
balloon	37	31	467	780	536
get_xlim	58	44	494	341	683
closeness	79	227	185	457	970
_lut	25	119	320	49	296
isnt	29	28	410	209	472
10:55	67	213	95	185	51
sciruby	34	173	35	604	142
nantu	65	291	258	407	887
level_0	44	93	65	390	965
level_1	44	164	181	700	895
fontname	64	166	134	764	862
boud	35	115	409	187	336
clashes	10	237	397	436	264
curve_fit()	79	22	140	566	13
jacobi	28	10	324	744	610
bout	65	283	227	432	345
soccer	28	250	252	149	604
t-tests	34	137	234	97	328
somebody	68	190	227	432	571
schematic	27	137	459	15	421
numpy.linalg.solve()	16	94	462	782	800
hunter	34	173	35	233	142
scipy	38	206	125	761	564
x-scales	61	250	77	94	210
memory-friendly	82	50	341	497	463
adventurous	17	13	250	39	118
scipt	22	151	80	361	383
instructions	83	254	234	302	565
mathematician	28	43	377	396	803
axes3d.py	30	162	478	483	927
likelihoods	79	23	332	744	531
fromiter()	19	294	357	231	899
tilted	33	31	282	617	851
weight	79	23	185	638	11
40,000	88	160	220	80	54
loopy	82	180	55	337	219
loops	82	180	422	537	219
xval	72	194	418	129	221
109.95	15	213	236	514	51
errror	29	83	227	715	473
foolproof	82	241	378	573	29
pd.dataframe()	0	134	260	183	827
faqs	34	173	234	302	565
display.max_colwidth	58	243	452	171	290
hill	56	14	267	710	841
compounding	10	227	17	457	135
w_in	16	178	462	562	800
group_keys=false	44	164	181	700	895
_new	75	146	158	605	602
df2.plot	58	155	495	418	162
_m_	88	197	55	337	488
guess	29	28	227	791	472
side-effects	10	237	397	335	215
0-dim	75	106	421	594	681
\s*	32	51	487	151	244
\s+	76	199	286	51	189
numpy.bincount	19	42	296	13	886
colorbar()	25	119	320	49	845
ptrepack	86	68	379	217	502
jez	35	62	88	236	345
scrolls	90	69	46	624	536
numpy.longlong	70	220	206	476	681
seperately	74	232	37	209	36
column's	3	146	65	155	984
sys.maxint	57	89	325	86	907
seeming	29	62	88	173	568
1600000	57	142	162	139	60
moderately	82	241	100	497	463
contributions	34	173	359	604	208
traveled	99	56	185	293	347
enlarged	37	31	467	780	851
dejavu	73	166	134	764	862
stdlib	81	88	455	739	183
gpl	96	1	69	461	648
story	10	231	395	236	812
"	29	17	170	4	385
leading	32	263	420	468	655
design_info	9	88	383	616	477
gpy	83	170	178	197	482
storm	23	250	132	623	293
gpu	55	174	408	90	651
numpy.random.permutation	19	294	296	231	512
store	86	50	426	110	161
gps	33	176	135	623	293
test.h5	76	199	30	283	736
os.path.exists	30	144	58	381	588
luckily	38	241	291	317	305
df_origin	92	104	158	155	655
versatility	38	6	291	78	628
shrunken	37	31	467	780	851
scipy.signal.savgol_filter	79	10	428	761	531
king	35	207	371	205	336
kind	10	231	17	432	79
dfa	44	97	65	558	965
kink	29	28	227	631	473
aptana	83	206	178	197	467
axisartist	58	44	90	341	683
verlet	28	10	324	487	942
8:31	80	260	142	372	958
12345	48	105	256	145	764
motivation	10	118	116	590	999
did't	65	62	410	236	457
headlength	37	31	443	780	76
higher-level	38	1	17	732	389
bitwise	75	104	198	113	135
memory-efficient	82	241	378	497	29
scipy.stats.gamma	79	23	332	511	531
hopelessly	82	13	143	39	589
diziet	35	207	326	187	336
wolframalpha	11	186	242	744	610
reduce_c_function	25	119	63	557	780
datetimes	80	35	245	781	920
conforming	74	232	37	316	868
entirety	27	171	27	84	161
scipy.stats.pearsonr	79	94	185	638	11
longish	82	137	106	497	246
gill	73	166	134	131	862
electric	28	14	267	710	326
populate	74	232	386	110	359
exec	76	37	327	130	383
customize	64	6	390	78	370
eee	43	105	231	71	255
aman	35	238	187	187	308
amat	98	220	273	476	757
exes	83	206	178	197	467
probabilistic	28	26	354	656	531
amax	87	214	121	673	608
a*x	16	186	462	214	620
unsupervised	28	26	354	135	816
datetime1	67	201	309	727	24
a*v	16	94	462	150	800
traditional	38	50	291	317	118
new_ax	47	186	25	366	756
sub-series	98	146	140	155	347
adaboost	28	26	354	135	816
caching	22	50	100	128	246
a*a	16	178	462	562	800
a*b	16	178	473	562	266
a*c	11	178	4	562	56
lying	99	288	282	646	138
set_extent	58	44	494	642	683
pd.read_pickle	81	5	30	739	736
numpy.einsum	16	178	473	291	884
value_counts()	92	193	78	31	121
stumped	17	62	88	659	803
inflexible	82	241	378	334	29
idxs.t	1	19	112	284	726
simulating	28	14	267	710	841
fractions.fraction	70	99	331	756	979
iep	83	206	178	540	818
ier	52	0	263	129	855
2015-03-31	80	260	254	2	24
set_array()	25	275	208	684	481
drop-down	90	84	189	540	127
pandas.dataframe.groupby()	92	164	78	105	832
triangle	99	288	11	315	138
goes	29	13	143	39	214
invoke	81	187	397	739	383
precission	57	89	8	654	970
ewma	80	193	447	614	347
squareform	16	94	462	562	716
x_compat=true	58	290	166	706	875
dataframe.to_json	92	68	275	183	322
polynomial.py	30	162	478	381	842
emails	78	150	163	479	798
brendan	35	207	371	205	336
factorization	16	94	462	782	800
fig.canvas.draw	6	46	345	572	373
kptrain	48	59	180	50	159
buy_he	43	155	452	689	12
wrote	27	137	459	15	421
forego	82	50	246	691	246
matplotlib.figure()	6	46	345	599	356
]]	52	0	303	364	640
maskedarrays	38	99	17	756	782
defense	65	291	258	482	812
city2	43	72	231	265	708
pivoted.resample	43	149	447	460	612
city1	43	72	82	265	708
cutoffs	77	103	63	504	66
numpy.concatenate()	19	294	296	278	470
visualize	61	136	175	626	625
_actual_	27	118	116	420	579
init()	0	46	345	44	635
matt_s	27	137	459	15	421
]`	52	19	160	284	776
auto-detect	83	206	80	202	564
httperror	63	83	283	715	39
newdf	44	164	181	700	827
blurb	65	291	116	97	328
soln	35	238	187	285	919
matricial	40	104	154	150	650
unaligned	3	110	6	354	125
sole	9	117	152	594	267
df.index.dtype	70	273	309	781	979
outfile	76	199	286	283	736
df.plot	51	155	195	272	12
subdividing	77	29	148	646	66
time.mktime	47	201	309	727	852
chinmay	35	207	371	205	767
0.97	15	211	495	606	10
unravel_index	19	42	296	291	601
paradigms	38	1	390	321	354
<=>	70	100	325	332	979
]=	52	0	303	284	19
];	52	0	303	284	640
]:	52	224	303	737	640
]'	43	273	93	145	764
16.5	15	256	236	514	980
<=-	52	0	180	215	437
]"	52	17	223	4	640
bond	78	67	132	425	948
])	52	0	303	364	640
9:00	67	260	12	372	958
ax.invert_yaxis()	58	44	494	418	162
col+1	52	19	263	284	622
sweet	35	207	274	205	924
dataframe.drop_duplicates	92	156	78	105	971
sweep	77	101	140	430	547
distros	83	128	211	393	637
2012-01-01	67	260	12	2	24
2012-01-02	67	260	12	2	24
unflatten	40	294	10	231	678
all_x	60	57	173	50	21
outdegree	72	132	273	683	756
df.values.shape	48	274	112	305	159
backends	73	38	248	635	810
anisotropic	77	151	213	674	353
sys.path.insert	30	5	244	381	588
flight	23	29	365	676	257
setup=	93	5	110	50	870
+len	89	234	180	261	591
outarray	52	19	263	284	855
zfilt	98	281	162	528	221
precision	57	89	325	788	22
zfill	32	16	109	512	808
demand	23	50	294	691	67
instructor	28	115	252	20	531
noticeable	82	180	100	537	246
frozen	90	187	108	361	689
healthy	22	283	294	574	214
raw_name	78	110	243	390	965
homework	17	43	307	396	812
exasol	46	68	119	478	126
struct_time	92	35	245	560	920
k2ij	11	234	207	215	99
shortened	27	137	459	15	421
concurrently	23	85	71	349	431
credence	10	231	395	335	812
imv	16	178	154	150	800
smci	35	207	371	205	767
demos	34	6	278	302	450
obstacle	55	14	267	710	219
pd.rolling_apply	87	193	447	614	612
ios_id	78	93	445	41	984
hadoop	23	84	119	670	126
wierd	29	28	306	335	473
9	12	279	319	528	465
humedad	80	200	77	550	888
prerequisite	83	206	80	197	467
higher	77	151	106	631	668
violinplots	51	136	175	272	847
monolithic	83	1	80	197	564
sndarray	29	231	395	335	473
kmeans2	25	26	140	135	854
would't	10	190	307	590	571
noticeably	88	180	55	337	89
spliting	3	297	6	534	953
objecting	10	118	395	590	999
howver	74	110	37	525	999
framedata	0	275	295	44	8
f2.function	0	204	295	684	231
try	29	28	246	209	472
b.t	1	178	462	562	726
historic	23	116	77	581	67
machinery	38	231	17	691	305
functools.reduce	87	55	295	684	231
chosing	3	110	37	110	673
latex_template	50	145	118	734	679
unseen	3	26	168	680	509
_timestamp_to_mysql	9	83	383	616	477
self.df.iloc	52	19	263	364	265
\pandas\tseries\	50	145	225	168	679
questions	34	190	247	97	216
huffman	28	14	128	429	615
continent	61	250	132	757	293
hello-world	90	187	108	361	383
0.12.1	46	221	151	681	380
ax=ax2	60	155	240	495	285
ax=ax1	58	44	195	418	162
10000,100	48	142	220	196	106
count_nonzero	19	42	125	13	512
2.16	47	256	162	196	432
acrobatics	3	50	6	354	125
euler	28	10	324	487	610
dataerror	63	83	389	715	39
desolve	79	22	324	566	610
kdtree	53	288	11	293	716
question-	65	291	371	236	345
10^10	57	142	220	686	60
10^12	57	89	73	788	217
free()	22	61	153	358	282
matplotlib.hist	19	214	63	557	780
question2	47	134	68	290	622
verion	46	221	151	202	380
numpy-array	75	106	10	519	684
numpy.seterr()	29	231	389	716	568
skeptical	17	43	341	537	803
numpy-style	82	214	422	200	219
systematically	29	232	159	94	746
p_data	0	224	30	595	699
pascal's	98	132	443	191	725
mckinney's	34	254	234	179	565
new_spin	98	148	317	605	602
separately	74	232	37	209	36
collect	74	297	37	110	953
exploiting	82	50	341	537	246
np.savez()	86	222	382	102	405
read_sql_table	92	68	119	478	824
3x^2	11	234	4	531	56
user-defined	74	109	152	436	638
numrows	71	274	268	519	981
case1	98	146	317	587	868
1.4030900e-06	15	157	64	296	837
new-ish	85	30	151	685	380
n0_yldf	78	93	82	558	965
matplotlib.delaunay	83	206	178	361	854
retry	46	221	124	331	284
512mb	88	30	480	785	236
rbind	3	156	6	703	392
leftmost	37	281	443	191	964
minimize()	0	275	295	318	231
brionius	35	115	409	20	142
lowest	98	146	148	796	868
contrasting	38	232	159	78	79
numpy.random.poisson	77	292	140	511	531
perpendicular	33	31	443	191	725
scipy.sparse.csc_matrix	71	64	333	455	788
refused	83	206	80	197	467
zombie	22	187	250	39	248
refuses	29	28	410	791	457
exemple	27	137	459	15	421
min_85	77	63	262	182	995
pipeline	23	26	354	135	816
asserting	3	227	317	457	905
violins	64	136	24	78	76
result.params	47	275	452	129	881
finalresult	32	224	420	403	508
range	93	194	269	65	221
append_axes	64	290	90	391	481
complimentary	38	23	332	511	531
f.groupby	44	164	181	700	895
-dimensional	71	64	268	683	684
therein	34	173	234	97	564
32536365654	3	134	317	155	509
helvetica	73	166	134	764	862
pdfrw	73	125	248	276	304
restype	9	204	331	594	64
gcc4	50	145	133	117	160
ix_	19	294	296	291	601
+++	47	224	223	424	767
.rebal_wgt	11	234	4	172	99
ellipse	33	288	282	212	138
rowp	47	12	461	480	806
impressed	17	43	377	396	803
.column2	89	132	207	215	139
rows	3	146	454	587	984
entitlement	22	84	294	110	161
question	34	118	116	97	216
long	29	197	100	209	463
ixs	1	0	112	215	19
lons	33	102	135	617	298
~isnan	87	57	112	770	714
belonged	78	110	430	482	588
rown	12	142	162	528	175
xpt	60	102	240	193	910
deviations	77	23	332	10	11
memory-inefficient	82	50	100	497	463
a-f	99	281	114	646	744
row0	11	130	4	174	56
row1	43	93	82	558	965
row2	43	93	82	558	965
.columns	44	134	260	700	827
row4	98	93	82	796	984
nessi	83	206	178	197	467
list's	75	106	421	471	903
memmapped	40	184	153	453	122
row=	60	155	240	495	12
possition	33	176	443	572	214
today	17	62	250	236	180
lon1	72	130	431	174	624
fluctuations	77	151	106	710	194
row*	98	263	454	468	984
lon2	72	130	431	174	624
row-	3	232	182	587	36
entropies	72	186	25	615	756
modeled	74	117	459	15	421
\frac	32	16	420	131	898
user2	78	93	252	463	604
well-supported	38	1	390	200	79
steeper	61	13	443	212	762
dilated	84	195	51	166	353
rainbow	20	119	259	757	846
diurnal	77	29	77	623	210
peach	78	200	252	145	804
fun()	0	214	140	684	231
peace	27	293	305	420	579
backs	6	46	345	793	112
3ms	88	180	55	337	89
nick	35	115	409	20	336
s.min()	72	130	162	174	377
3.25	15	272	61	225	980
w-sun	80	205	346	177	475
non-masked	75	146	424	414	608
entrytype	43	47	68	290	708
nice	82	241	274	573	628
users	34	150	35	321	275
dali	35	238	326	187	308
maximise	79	23	332	638	643
meaning	74	232	306	209	999
allowing	74	232	152	691	305
extra_compile_args	30	185	133	138	30
posters	34	190	307	590	216
wrinkle	37	232	17	631	305
c.t	11	178	473	562	726
parse_dates=	76	185	322	51	698
departments	78	150	445	479	604
dragged	90	69	32	572	536
pointplot	51	136	195	272	847
enpkg	13	128	50	481	174
ternary	10	214	198	744	135
33.33	77	266	22	574	227
sscce	27	293	403	709	579
negations	3	286	163	85	798
mini-language	32	205	346	706	898
pre-merge	88	283	373	549	236
subplotbase	6	109	331	543	386
multiprocessing.pool()	22	85	71	349	431
winds	77	29	77	458	417
0f}	60	205	256	177	576
2.4.1	85	276	42	685	380
functools.wraps	9	214	295	684	699
numpy.random.seed()	10	109	193	628	215
rewarding	17	190	377	321	275
languages	38	1	479	317	354
haffner	35	115	409	20	336
z_i	72	186	25	683	306
include	27	137	116	420	328
]])]	52	0	263	364	288
49.x	77	103	467	646	750
fwiw	29	137	395	209	905
confirmation	68	173	359	604	208
mainstream	55	1	80	237	94
somecolname	43	72	93	265	622
]]);	52	211	263	364	265
\xc2\xa0	76	16	190	477	413
5300	3	160	497	534	953
1063	71	94	333	455	788
img_buffer	48	59	102	305	280
npts	33	102	135	129	910
disclaimer	34	43	35	461	142
concluded	29	28	272	791	874
you'd	74	232	246	209	196
fqtr	78	258	82	796	377
wrestling	17	62	88	161	180
endian-ness	70	100	325	86	22
fold	28	266	354	311	578
kington	35	238	326	187	336
ummm	29	28	246	209	472
foll	3	110	6	15	156
acid	78	286	114	425	995
makers	0	31	306	684	231
folk	10	231	395	500	812
compat	46	221	432	202	435
unavailable	22	171	80	197	584
showcase	27	137	459	15	421
etime	98	93	82	796	984
alert_v	43	78	52	265	272
blender	83	206	178	197	564
chose	29	28	246	209	472
degree	33	151	282	487	762
tmp.txt	76	199	30	283	736
usaf	78	110	243	463	984
explore	38	6	294	525	79
axes_grid	64	6	90	78	683
pandas.nat	98	148	206	141	622
settling	22	13	250	39	180
larger	88	266	100	497	668
shades	20	119	230	757	786
shader	84	195	128	429	353
leaving	74	263	306	548	655
49.49781571	15	157	64	296	837
suggests	29	28	116	791	638
esmit	65	291	258	407	336
shaded	20	31	24	757	786
suprising	65	291	395	236	345
up-to-date	13	128	211	104	482
pxx	77	292	20	430	547
matplotlib.mlab.pca	81	26	354	122	508
apr	67	163	284	718	483
app	23	84	376	184	467
mystuff	19	12	455	480	806
apt	13	128	211	104	482
improbable	32	16	190	477	509
api	38	1	390	317	79
apl	17	1	479	396	275
duck	10	241	479	377	354
pxc	98	297	454	796	984
bindings	38	1	278	317	564
nditer	19	294	296	231	601
lottery	23	150	175	479	625
mllib	38	259	80	381	842
hypothetically	77	151	106	631	762
examination	22	50	294	525	328
]])	52	19	303	364	640
xx-small	20	166	134	764	475
_one_	22	50	341	534	953
clever	82	241	378	573	29
factor	88	266	55	574	668
pdfpages	73	125	248	648	304
matplotlib.pyplot.close	6	46	345	599	356
numpy.random.choice()	19	214	295	684	782
sectionwise	61	176	282	626	847
df.max	87	164	121	700	608
raw_input	90	46	345	599	356
matplotlib.pyplot.figure	6	139	18	324	543
pyfftw3	55	174	408	90	651
na_values=	76	199	322	415	413
finfo	57	89	325	86	907
dissolve	74	232	10	98	141
numpy.cov()	79	94	140	782	800
centroiding	55	180	100	537	246
perms	72	130	25	174	756
re-set	64	290	166	190	629
inaccessible	9	171	397	595	370
assumptions	10	227	17	321	970
xmin	58	198	269	65	221
deepcopy	9	184	158	453	200
linestyle	51	119	24	42	664
ytest	52	19	263	284	622
struggles	29	117	306	458	214
100x100	71	195	213	674	95
np.tile()	19	294	296	231	782
struggled	17	62	88	161	976
d**	11	234	4	664	743
restructured	27	137	116	40	673
timeframes	80	29	299	94	67
attend	34	227	252	97	423
dbo	86	68	119	478	454
tact	3	146	182	587	984
tack	74	263	246	190	629
1881	52	0	263	364	288
1880	52	163	319	133	272
somethin	47	137	459	573	29
aus_lacy	35	207	371	205	336
$home	30	122	478	159	181
scenarios	82	227	159	94	36
d*d	16	178	462	562	726
freebsd	85	30	480	785	858
takeaway	40	184	153	691	122
sanctioned	10	241	17	500	812
2008-08-05	67	213	52	185	51
interpreted	74	99	152	601	638
numpy's	19	214	125	756	782
whilst	74	232	306	209	36
interpreter	83	15	189	540	818
unchecked	90	187	32	716	536
superior	82	241	17	497	305
amsmath	73	166	134	91	862
w.r.t	77	266	106	631	668
holiday	80	163	254	723	333
google-api-python-client	46	221	151	202	284
anchored	37	290	443	780	76
devel	13	170	211	197	482
3.29473	15	157	64	296	144
h5	86	222	426	611	820
.arff	23	110	329	110	519
tvals	60	44	418	642	162
articles	34	254	247	321	565
edit	27	118	116	407	887
powerfull	38	6	291	317	628
read_csv()	76	54	322	51	698
10.7.5	85	276	233	198	858
10.7.3	85	206	233	198	858
trimmed	29	263	306	122	214
softmax	79	26	354	135	816
cursive	73	166	134	764	862
20140101	80	260	254	2	24
friends_df	78	93	243	558	965
bytes	70	100	357	86	22
initialisation	9	171	386	436	359
_block_max	70	59	74	332	522
stacked=false	20	155	240	495	12
our	74	232	37	209	36
lookup()	88	197	497	534	68
mrcl	35	115	409	20	336
merged2	52	0	263	290	288
out	29	28	306	209	472
x_val	60	155	240	495	285
dbscan	28	26	354	293	716
sentiment	23	150	163	479	798
sufficed	46	68	124	500	435
chaos	28	14	267	710	841
]'`	52	273	93	678	700
disaggregate	77	56	299	10	66
suffices	29	28	410	209	829
row-by-row	82	50	497	47	68
disclose	10	28	395	236	812
get_val	98	258	65	155	377
eventname	47	17	223	4	385
t.switch	57	52	269	309	221
crop_stats.py	50	267	118	483	383
pixelated	73	125	248	276	304
numpy.take()	29	28	306	684	782
cosinus	61	31	175	212	762
imprecision	57	89	8	654	970
city_2	12	78	488	751	272
g	47	186	25	129	756
col_indexer	52	80	23	733	853
self.pca_data	71	274	206	305	981
linearized	79	10	324	223	620
no-index	30	170	244	481	174
hence	74	28	306	209	36
quadratically	77	151	106	574	668
]')	70	273	309	678	700
csc_matrix	16	94	333	455	788
exam	78	150	250	479	345
value_counts	92	156	78	763	121
arange()	9	106	193	628	782
n-th	74	232	37	746	428
backend_ps.py	50	145	225	168	679
doesn't	29	28	410	209	196
fun1	87	55	295	673	591
priorita	1	178	112	305	726
unknown	74	232	306	746	868
priority	10	227	317	691	246
1500	88	160	220	528	106
655	12	181	58	24	132
stephan	34	115	35	302	142
650	12	142	173	528	106
bundling	83	206	80	197	467
dataseries	92	193	65	354	243
misunderstood	65	118	258	407	887
numpy-specific	82	241	378	200	29
tidbit	68	207	371	205	767
-method	64	161	208	543	481
labelspacing	64	138	90	207	683
palatino	73	166	134	764	862
retyping	82	241	378	497	463
commodity	78	116	299	581	67
3882	67	78	52	2	272
150k	88	160	220	80	54
65k	88	160	220	80	54
enought	17	43	377	375	345
id()	9	220	421	594	386
10-1	15	142	173	172	99
prepended	32	263	420	468	768
mathtex	73	166	134	131	862
tracts	77	250	445	10	66
datetime64converter	0	109	2	44	8
ipykernel	50	259	277	303	842
value-by-value	75	227	341	756	135
percall	0	147	125	302	8
linker	30	170	94	650	166
queryset	86	68	275	370	141
frompyfunc	19	214	422	13	761
y_coords	1	102	418	305	910
sc.textfile	86	222	30	283	736
clim	25	44	320	49	683
linked	34	254	234	302	142
cross_validation	81	26	354	135	816
pandas.timeseries	80	35	299	77	333
figsize=none	60	155	240	495	285
^=	87	57	198	232	726
pip3	13	128	50	104	482
pip2	13	170	50	104	174
\ufeff	32	16	190	477	261
k*k	1	142	207	139	60
^2	11	234	242	531	56
^3	89	234	207	261	90
scatter-matrix	3	110	459	15	156
ts.plot()	58	46	345	599	875
^-	43	51	487	71	255
k*t	11	234	242	531	56
numpy.bytes_	70	83	74	177	979
unbearably	88	197	55	337	89
order_datetime	43	47	231	265	708
minor_axis	44	93	82	33	436
whe	75	64	10	231	981
datafiles	86	110	329	110	519
^^	65	291	258	236	345
.as_matrix()	72	130	431	174	624
whl	13	261	5	797	368
1e14	37	290	269	686	76
dtime	47	110	93	155	622
1e16	57	89	8	686	743
1e10	57	142	220	141	106
1e13	60	194	269	65	221
1e12	57	142	325	139	60
whs	43	72	68	265	708
why	29	28	227	209	472
administrators	83	190	80	197	564
numpy.split	19	294	296	13	512
libblas.so	30	170	94	165	960
untrusted	86	85	329	595	257
%reset	22	15	189	226	282
pipe	22	85	327	147	257
numpy.concatenate	19	294	296	278	470
hi	35	207	409	205	336
^m	11	234	242	531	56
^n	89	289	242	531	56
^a	76	199	286	51	413
oscillates	77	14	114	602	841
^d	52	19	162	133	888
syntaxerror	63	83	283	715	39
chapters	34	254	234	321	565
input_list	98	148	461	73	77
rn_x	78	110	243	390	984
weekly	80	56	299	77	67
matpy	38	1	80	317	564
feat	17	291	274	236	345
pleased	17	43	377	236	803
subsections	3	110	6	354	953
nearer	57	103	443	631	762
raw=true	92	156	78	105	761
ds2.groupby	52	0	68	290	714
150x	55	180	55	337	89
row_count	52	134	461	471	985
h.max()	98	148	206	673	77
local	30	259	478	381	960
np.random.rand	93	123	173	50	361
cube	99	288	282	315	138
my_dataframe	87	52	198	770	985
qualityissue	43	72	93	204	708
numpy.random.multivariate_normal	79	23	332	511	239
pd.concat()	92	156	260	33	176
married	78	200	252	463	423
series.str.replace	32	51	109	512	808
date_parser	76	185	322	51	189
scipy.integrate.quad	79	10	324	416	13
15th	80	163	254	723	72
avoidable	82	43	377	500	803
ascertain	74	232	37	209	999
numeric.py	50	145	118	483	927
available	38	206	80	202	564
requirement	10	232	80	209	999
1984-12-12	67	213	95	185	51
truncating	29	263	8	788	62
gmail	83	84	119	604	126
image_2	71	195	454	674	353
1.13	93	123	173	337	89
breakpoints	27	146	317	716	66
favor	10	43	17	500	215
g++	96	170	94	650	30
725	70	78	52	332	764
identification	3	227	163	587	868
crude	82	137	459	573	669
set_data()	6	46	208	572	356
bought	78	150	445	581	67
cythonising	82	137	341	525	246
ability	38	6	291	317	305
opening	86	222	329	107	519
joy	17	62	272	161	746
y_dates	52	19	263	485	855
60-90	37	31	467	757	851
job	82	241	274	573	669
joe	35	238	326	187	336
scipy.__version__	81	5	110	199	443
jon	35	115	409	20	274
goal	74	137	37	15	36
respondents	78	150	445	479	604
april	80	163	284	718	72
grounds	10	190	17	590	246
myagg	44	164	181	60	895
unclear	10	118	227	590	999
rpt	43	72	68	265	708
rpy	38	1	125	703	392
cxy	11	0	263	215	19
totalids	98	142	454	139	616
virtualenv_directory	30	259	277	303	469
environments	83	128	69	197	637
rpc	23	84	376	184	431
rpi	83	206	178	184	467
rpm	13	128	211	104	482
unclean	3	150	378	573	29
1.55348	15	157	64	296	837
~2x	82	180	55	337	89
occured	29	28	306	361	473
second	74	263	306	746	428
subset=	44	164	181	700	895
decent	82	241	106	525	327
math.fsum()	57	89	8	788	62
responds	90	187	32	624	112
730	12	279	488	111	465
cauchy	16	94	462	150	988
start_exon	43	72	68	339	199
fracs	37	31	443	780	76
736	71	64	268	519	684
porting	17	1	377	396	803
add_axes	58	139	90	324	543
gnibbler	35	207	371	236	345
general	82	241	17	525	999
ensuring	74	232	152	548	305
remedied	22	171	386	716	807
altinstall	83	206	244	165	960
subsets	3	146	6	587	953
]])')	15	211	263	364	265
~20	88	160	73	80	54
metpy	38	1	178	761	564
stunning	64	28	306	791	370
post-hoc	74	232	246	190	370
columns=list	44	201	181	348	895
~	88	197	220	381	588
motif	98	286	241	717	639
ringing	77	292	20	430	303
thus	74	232	306	209	36
dimentions	71	64	10	519	684
lightweight	38	1	291	317	628
opendap	23	84	426	611	127
bitwise_xor	63	83	421	113	286
perhaps	29	137	246	209	472
maddening	90	187	108	361	473
tom10's	35	238	187	187	308
list_list_values	1	148	461	471	77
geographical	99	176	135	623	293
df1.join	44	2	253	33	176
difficult	10	241	395	334	327
ddply	92	156	78	703	392
numpy.logspace	93	44	226	557	780
slave	23	84	376	184	467
heapsort	92	175	78	524	718
disagree	10	118	307	590	351
laborious	17	241	80	334	327
non-valid	92	263	306	601	655
qnames	47	51	58	424	523
\spyderlib\widgets\externalshell\	50	145	225	168	679
two-tuple	3	297	280	776	903
correspondent	74	281	454	746	673
afplot	78	134	93	155	832
banging	17	62	56	753	180
explicilty	64	185	226	641	683
pre-filter	92	227	78	587	512
excessive	88	283	100	729	463
heavily	38	180	17	768	219
should've	65	291	258	571	887
tcp	23	85	71	349	257
timeserie	61	29	175	626	340
scipy.linalg.lstsq	79	23	332	363	620
tcl	13	38	94	635	810
):	74	137	459	15	421
tck	53	102	238	720	396
ax2.legend	60	155	495	651	162
untested	27	137	459	15	421
pythons	38	1	80	209	564
win8.1	85	30	480	785	858
anim.save	76	144	18	16	721
jaro	78	67	185	293	948
guts	38	13	143	312	589
python\	50	145	118	168	204
a.mean()	87	55	93	673	832
usage	22	283	373	549	236
host=	63	5	58	553	454
python-	74	232	152	746	36
provisions	38	232	17	209	305
python*	30	259	244	381	960
element-wise	75	214	154	113	135
term	28	232	106	631	999
python=	85	206	151	685	380
where()	19	42	296	13	512
facial	33	230	128	429	353
press	90	187	32	624	536
redesign	82	137	341	525	118
python3	83	206	178	165	932
3-scale	32	125	248	131	898
dimensional	71	64	268	519	684
check-out	98	146	148	293	970
pd.groupby()	3	136	272	354	847
safest	82	241	80	500	564
%y%m%d%h%m%s	76	205	346	125	879
datapoint	80	281	254	646	931
pcolormesh	25	119	208	49	845
xml-rpc	38	109	29	317	564
wonders	68	207	274	205	767
exhaustively	28	227	341	537	970
exceed	88	266	485	574	668
p_welch	11	234	4	562	743
smoothly	61	13	175	39	762
vector-valued	79	10	324	487	13
np.bitwise_and	1	57	198	113	135
df.high	98	258	290	796	428
superclass	9	109	331	594	386
employment	78	56	299	723	67
tprep	11	234	4	531	99
jeremy	35	115	371	205	588
time_stamp	78	56	445	41	67
ripped	34	254	234	302	142
sample.txt	30	162	30	247	754
acronym	78	150	430	479	423
numpy.py	30	162	486	247	344
\appdata\local\temp\	50	145	133	138	204
dataframe.where	92	156	78	105	971
paste	27	293	305	420	188
rare	10	231	395	500	812
carried	17	13	143	39	874
methinks	82	50	100	497	118
carries	28	14	294	710	841
carrier	77	250	77	425	210
constructor	9	109	331	594	699
.html	86	125	329	247	127
matplotlib.pyplot.hist2d	53	102	208	626	908
desires	29	43	306	791	473
outset	40	232	37	110	118
polished	17	43	410	161	79
strangeness	29	13	459	15	421
numpy.int8	70	59	74	332	522
weather	23	116	77	182	293
promise	68	190	307	236	915
torch7	40	232	154	573	382
data.keys()	3	297	182	776	903
propery	74	106	386	601	699
opentype	73	166	80	131	862
2014-12-03	67	213	95	185	51
skimage.io.imread	84	219	102	607	427
spiral	61	288	282	212	762
replot	6	69	388	572	536
0.13.2	85	276	151	681	621
0.13.3	85	276	151	157	621
0.13.0	46	221	151	331	621
0.13.1	46	221	151	331	621
automates	64	241	341	732	370
my_array.dtype	75	106	317	139	472
volume	77	29	299	581	67
platform-dependent	70	100	325	86	22
marginals	37	23	332	511	531
np.mod	72	148	4	770	714
pycrypto	83	206	178	202	564
graphite	29	231	80	791	564
0.13.x	46	221	151	685	380
cake	82	137	479	334	275
arno	73	166	134	131	862
blogs	34	254	247	321	565
horrific	82	241	378	573	29
intimidating	38	254	291	302	628
kind=	51	155	195	495	12
remove	74	263	37	190	655
10^3	88	142	220	686	393
cm.scalarmappable	25	119	320	49	845
relevant_gages	43	72	298	378	945
testfun	98	148	206	673	591
d4	72	130	431	174	624
incredible	68	207	274	205	767
fenwick	99	288	339	293	616
.add()	92	156	78	105	675
incredibly	82	241	274	497	463
conclusion	65	118	116	97	905
kinds	38	227	159	321	79
lmjohns3	35	207	326	187	336
np.loadtxt	76	54	382	260	698
m.i	16	94	462	782	800
_last_	98	104	317	713	650
kinda	17	43	395	236	345
table=true	86	68	379	217	502
one-based	40	104	270	713	650
fh.write	1	205	346	177	576
cliff	99	14	114	710	563
coupling	38	85	397	349	564
2015-01-23	70	78	52	145	764
activity_data	43	200	68	265	708
data-units	37	290	443	207	449
dominoes	99	31	454	646	851
secondly	74	232	246	209	472
yellow	20	31	259	757	786
prefix	32	170	244	165	768
del2	29	101	125	703	905
fig2	6	139	18	324	543
fig3	6	139	18	324	543
x.tolist()	87	12	461	471	903
fig1	6	139	18	324	543
60,80,100	11	234	4	531	99
payoff	88	180	55	139	89
zelazny7's	27	238	187	97	308
electricity	80	116	299	723	67
length-2	75	64	10	519	684
length-1	75	83	421	146	286
unanswered	34	173	3	702	216
length-4	74	64	10	519	684
openmpi	55	174	408	90	651
my_filename	52	72	68	290	855
valeur	98	186	317	141	221
numpy.fromfile	86	54	382	260	405
time.sleep	6	46	345	599	811
retail	78	56	445	41	67
regional	78	150	445	479	604
dell	85	30	480	785	858
cilinder	33	127	282	623	908
figs	6	46	90	732	370
uncertain	29	43	227	451	803
differentiated	74	297	454	587	673
prize	17	190	250	236	275
reformatted	27	137	116	97	421
length-n	71	64	10	6	684
succession	22	187	154	534	214
reframe	35	190	116	590	216
subindex	44	134	65	155	125
linalg.eigh	19	214	295	684	782
orientate	37	232	246	780	36
struct.error	70	83	283	715	676
miller	28	115	409	20	888
pandas.__version__	46	221	151	199	443
storm's	20	119	259	757	786
empirical	79	23	332	511	531
myusername	30	259	277	421	469
sklearn.cluster	81	88	354	761	854
csr_matrices	75	297	10	587	903
this'll	82	241	341	573	953
ys-l	35	207	371	205	336
np's	29	28	227	209	473
negates	75	180	198	113	135
findall	92	12	109	512	808
nx.draw()	6	161	208	543	481
subframe	92	93	65	155	121
negated	74	263	317	661	363
vpython	61	6	278	158	450
dataframe.query()	92	221	124	569	435
reliably	10	28	246	209	472
interrupt	90	187	108	361	248
error	63	83	283	715	39
interdependent	10	146	106	631	999
edges.data	52	52	198	770	714
10.04.4	83	206	178	685	380
gmres	16	94	462	782	800
%load	22	15	189	540	383
nucleotides	74	297	454	601	141
scipy.signal.correlate	19	6	125	302	512
i'v	29	28	272	161	457
substance	34	29	116	97	216
i's	98	297	497	534	77
roc	79	26	146	638	816
i'd	74	232	246	209	196
drop_duplicate()	3	156	182	587	655
i'm	17	43	227	209	803
i'l	35	207	371	205	767
y1.shape	1	274	112	305	120
sns.boxplot	44	134	93	204	987
re-arrange	40	232	182	587	158
c-api	55	174	29	790	64
explained	34	118	234	97	999
precincts	78	56	445	41	832
\xef\xbb\xbf	32	16	190	477	768
txt	86	110	329	107	519
txs	35	207	371	205	767
cheating	82	241	395	334	812
.labels	0	161	461	44	699
spoke	65	291	250	236	345
appname	30	259	478	159	960
sstate	72	186	25	562	292
axissubplot	51	161	208	626	481
sub-group	98	56	243	796	984
relax	82	151	106	631	970
successful	29	28	272	161	457
10gb	88	182	373	549	236
hurt	82	241	395	500	463
tying	74	28	37	68	953
addon	55	1	29	317	564
read_sql_query	92	68	119	183	824
accum	19	214	295	284	726
load_data	81	26	349	135	816
year-month	80	56	245	390	410
x.time()	87	47	493	76	593
table-like	86	50	426	619	843
organized	3	110	6	663	161
v1.5.1	46	206	151	202	380
*matrix	1	178	112	562	726
x.name	52	72	68	290	622
fromfile()	9	184	153	358	782
organizes	17	43	377	396	803
preferably	74	232	37	209	36
re-arranging	40	50	10	231	678
minitab	79	23	332	626	531
df.x.apply	87	47	493	76	593
complaining	29	28	227	791	473
win1	98	258	206	796	984
damage	29	28	227	432	215
i686	85	45	264	718	483
machine	83	30	480	785	467
nontrivial	10	151	106	631	970
keep=	44	93	82	700	895
preferable	82	241	17	497	305
wolfram	79	292	20	430	547
np.unravel_index	1	42	296	13	601
v1.5.x	46	221	151	681	380
modulation	28	292	20	429	547
major_axis	44	93	82	33	436
input-output	27	297	459	15	421
misunderstanding	10	118	227	335	999
diagram	61	136	175	22	951
plyr	38	1	125	703	392
df.to_string()	32	16	202	183	188
key_press_event	90	38	32	624	112
newax	6	44	494	418	162
marginalize	79	193	154	98	347
effective	82	241	378	573	29
wins	88	180	215	337	720
tricontour	25	161	208	543	481
specks	77	195	428	429	353
keeps	22	117	306	58	473
wing	83	15	189	540	818
wind	33	176	77	458	210
wine	28	26	354	135	816
__	9	237	397	436	983
restriction	10	232	17	209	999
find_objects	99	230	428	166	353
vars	74	237	397	436	864
vary	77	232	37	768	668
uint8s	88	142	100	497	463
vara	1	106	461	471	881
1-10	98	281	454	528	428
two-level	3	156	6	354	125
varb	52	0	263	284	19
diagonally	99	288	127	191	744
v_h	72	186	25	683	306
v_i	72	186	25	683	756
_y	44	2	253	33	176
directional	33	176	282	617	908
rankings	3	227	185	293	905
closed=	44	149	447	460	861
_t	70	204	74	790	64
diffrent	74	232	152	746	638
_r	20	119	259	49	846
_p	48	59	41	232	21
_m	1	57	112	232	726
_i	47	224	246	482	475
_f	11	204	242	562	292
hidden	29	231	306	732	370
_c	30	162	478	381	588
_b	43	67	93	145	965
_a	10	17	223	4	812
var4	78	262	252	174	624
workhorse	38	1	329	317	564
var1	72	262	82	174	832
v_1	72	186	273	683	756
var3	78	262	252	204	832
var2	43	262	82	204	832
enrich	3	110	6	110	36
av_density	78	17	351	4	385
datetime.strptime()	92	35	245	560	934
slicing	40	104	23	231	650
ebarr	35	207	371	407	336
scipy.array	1	294	112	232	681
silver	78	200	430	149	423
structural	28	14	267	710	841
represents	74	281	77	746	868
libblas3	13	170	50	197	482
queues	23	85	71	349	431
_2	78	93	243	558	965
multi-color	64	6	152	131	847
dumps	86	222	275	370	820
\x00	32	16	190	477	5
255,255,255	20	219	51	592	922
h5py	86	222	426	611	820
pandas.read_fwf	76	54	322	51	444
misspellings	3	227	6	479	953
32x32	71	195	213	674	95
preceded	32	16	420	482	768
financial	23	116	299	581	67
250,000	88	160	220	80	54
displacement	33	176	282	351	908
.and	98	146	430	155	410
swaths	40	50	100	691	122
squeeze=true	76	185	322	51	189
ashwini's	82	238	187	187	308
precedes	98	110	317	746	638
sensor1	43	72	309	265	708
laboratory	83	14	267	710	841
overwrite	74	171	388	190	629
multi-threading	55	174	422	90	651
numpy.correlate()	38	101	125	703	782
.any	87	52	198	181	985
dst	80	285	102	475	427
basedir	30	259	478	159	181
sms	98	281	443	528	212
2013-01-03	43	72	52	265	708
dsp	23	292	365	430	547
smp	67	45	264	718	483
dsl	38	1	479	317	354
dsm	35	238	326	187	336
print_fig	6	139	18	324	543
boston.data	48	274	112	305	159
0,0,255	48	219	418	305	175
sma	80	197	73	10	931
165340	98	146	454	141	77
example_array	52	148	206	284	714
assured	10	227	17	691	509
09:30	67	260	12	372	958
x_locs	75	106	421	471	681
midpoint	33	288	443	10	762
inscribe	37	31	443	207	449
necessarily	10	232	17	209	999
ra-dec	99	176	282	646	908
dependancies	13	170	50	104	482
sensors	23	29	77	182	210
auto-correlation	79	23	332	638	11
yaxis	37	290	166	706	388
.to_sql()	86	68	119	478	126
ds2	98	148	206	471	714
ds3	29	137	459	15	472
ups	55	180	55	537	246
choices	10	227	159	200	36
reference_array	71	297	454	587	984
necessity	10	231	17	774	246
"))	47	17	170	4	567
")'	76	5	170	130	385
subtlety	10	231	17	335	79
")"	65	17	170	4	385
instruct	74	232	37	190	629
179	12	279	488	751	132
178	12	279	488	751	465
177	63	83	283	715	39
176	12	279	488	111	132
175	12	256	488	751	432
174	12	256	162	196	432
173	12	256	488	196	432
172	88	197	73	196	432
171	12	267	488	111	132
170	12	279	488	528	106
multiprecision	55	174	408	756	651
bottom-up	37	31	467	482	786
continuum.io	83	206	211	197	637
%mm	47	224	346	133	24
engagement	43	72	309	265	708
bsxfun	16	178	154	703	726
listed	74	232	159	746	36
vogrd	33	102	135	617	298
to_sparse	88	180	55	337	89
listen	22	187	294	624	257
17m	29	28	246	209	472
collapse	40	64	154	354	678
predictably	29	28	306	15	473
over-fitting	79	151	106	638	970
coursera	28	26	354	179	816
")`	76	17	170	4	385
wisdom	68	43	377	432	571
max_val	98	194	269	141	221
predictable	10	151	106	631	970
cdata	32	67	275	482	622
unreachable	29	28	58	165	588
df1+df2	75	106	295	139	881
date_format	92	185	245	560	934
point-by-point	75	227	154	98	382
iteration	22	50	497	534	68
code_obj	50	267	58	424	679
")]	43	17	170	4	567
rects	60	155	240	485	12
monkeypatching	38	109	341	732	370
recheck	65	291	250	407	345
10min	80	149	447	460	612
entail	82	50	341	534	526
1294531200000	67	213	95	185	51
aapl	78	116	26	581	67
parsers	86	222	275	107	444
y002	78	258	445	796	832
company.idx	76	199	286	283	204
person	78	150	445	479	423
responsible	10	231	294	716	370
eagerly	10	43	17	691	999
causing	29	231	227	173	568
person_id	44	93	82	558	965
pylab.poly1d	61	136	175	626	847
cv2.imread()	84	195	128	592	353
paintbrush	40	151	428	429	353
array.astype	70	59	74	332	522
np.arctan	11	55	4	664	743
x.replace	43	51	493	76	593
svedoc	0	134	295	684	231
na.rm	87	52	222	181	985
letter	32	286	163	482	898
breakpoint	22	13	305	39	383
retaining	74	117	182	548	526
pool()	22	85	71	349	807
tridimensional	72	102	25	129	756
professor	28	14	267	396	275
detectors	98	281	454	796	984
lpr	47	144	452	424	383
max_time	52	52	15	770	985
np.arccos	11	178	201	562	800
lpc	28	292	267	430	547
bomb	22	283	250	39	236
axesdivider	64	6	116	525	308
.mnky	35	207	409	407	887
sparseseries	9	50	333	455	788
gauge	77	86	485	77	466
messageid	78	150	445	390	984
a.indices	52	220	206	476	77
shuffling	40	50	182	534	678
ment	65	115	227	407	423
cousins	17	232	246	209	382
topological	28	14	267	710	589
theme	61	62	272	161	746
horizontalalignment	58	138	265	651	224
specify	64	232	152	641	638
pd.multiindex.from_tuples	44	164	181	700	260
set_xlim	58	44	494	341	388
4.00	15	211	162	606	110
random.uniform	93	123	193	628	361
numpy.apply_along_axis()	19	214	125	231	512
width=20	60	155	240	495	285
plt.imshow	25	219	320	193	845
data.ravel()	1	274	112	305	60
fig.add_axes	58	296	494	324	543
ambigous	75	106	317	200	699
reversal	40	184	158	476	363
os.path.join	76	199	286	283	413
mpl_connect	6	46	345	44	112
postactivate	30	122	478	159	181
maverick	83	206	233	197	858
hspace=	58	138	495	642	299
12125.0	15	157	236	514	980
0-indexing	40	263	182	407	887
respond	90	187	250	624	915
blew	17	283	88	39	180
mandatory	74	28	152	209	638
disaster	10	13	106	629	589
fair	65	291	395	153	812
imho	10	241	291	334	628
y-array	98	281	97	73	77
3040	70	78	52	155	272
fail	29	28	389	209	568
best	82	241	341	573	29
multindex	3	156	65	354	125
jianxun's	35	238	187	590	308
score	78	150	445	479	604
boiler-plate	82	241	395	334	463
edgecolors=	20	155	240	603	285
conceptual	10	118	17	590	999
preserve	74	232	182	548	305
f.index	44	164	181	348	895
modeller	83	206	178	197	467
currentdate	43	134	26	155	410
carbon	77	250	77	623	293
angling	37	290	443	780	76
outcome	27	137	459	15	508
30mins	80	29	229	77	931
df.combine_first	44	156	260	700	827
adapter	86	68	119	478	126
conclusions	34	151	106	631	303
tidyr	38	214	125	703	392
up-front	82	50	100	663	387
naics.indnaics	43	72	68	265	708
adapted	27	137	459	525	421
index_col=false	76	185	322	51	189
vain	29	28	272	161	457
1250	12	19	162	133	272
user1827356	35	238	326	187	308
active	90	187	108	624	214
258	12	267	488	111	132
numpy.uint64	70	59	74	332	522
252	12	279	319	111	465
253	12	279	488	111	132
250	12	142	220	528	106
251	12	279	488	111	465
256	84	142	213	528	175
257	50	267	58	483	132
254	12	279	488	111	465
255	84	219	51	592	922
penalize	10	26	354	590	812
contestants	28	227	154	150	382
asmeurer	35	207	371	205	336
chrome	73	84	489	72	818
navigationtoolbar2	6	69	46	380	384
chroma	84	230	51	137	353
extraction	28	215	354	135	141
pylabs	90	125	128	158	127
tutorials	34	254	247	321	565
25k	88	160	220	80	54
life	17	62	88	334	327
sawtooth	61	31	282	212	138
writting	17	43	88	595	803
na_rep=	76	199	286	51	413
catchment	99	288	11	315	138
25x	88	180	55	337	89
pytz	13	128	50	104	715
child	22	61	71	349	807
truncate_colormap	20	119	259	557	221
chill	3	110	6	155	832
near-zero	98	146	127	654	509
8-core	88	30	480	785	89
discretize	77	292	148	626	66
filename=	47	144	30	283	736
top=	58	138	495	651	299
a23	72	258	224	449	77
a25	70	105	74	53	413
a2=	1	142	173	50	106
visualised	77	176	77	623	210
obeying	29	185	152	641	638
code**	27	293	305	420	579
trusted	83	206	80	500	564
np.tensordot()	19	214	296	231	782
x_pos	75	148	206	231	981
cumulative	79	193	148	98	347
end-goal	82	137	227	209	472
fairly	82	241	395	497	463
0.610	12	279	236	514	96
matplotlib.image.axesimage	25	161	208	543	481
tops	37	31	467	212	851
gdal's	38	6	128	607	353
filenames	86	297	163	110	798
a2d	98	148	273	73	77
file.seek()	86	263	246	110	405
.drop	44	164	181	700	895
univariatespline	53	10	238	720	396
which=	58	112	240	603	599
equispaced	53	288	339	720	340
suffering	10	231	88	173	378
18.381	32	51	487	177	244
abs_val	43	72	93	265	708
countvectorizer()	79	26	293	135	412
l2-norm	16	178	154	150	800
opinions	34	190	307	321	216
dosomething	87	52	68	290	985
kron	19	294	296	291	601
contact_id	78	93	82	204	832
csv_1	3	110	243	712	984
csv_2	3	110	243	712	984
tilda	98	52	198	605	602
tilde	32	104	198	113	135
waht	47	224	227	424	472
find_inf	74	232	306	209	36
.lastqu	52	0	263	215	288
ed's	35	238	187	187	900
__len__()	9	109	331	594	386
animation	90	69	278	572	107
collections	99	161	208	543	109
step2	47	224	25	593	306
matplotlib.patheffects	81	88	110	739	584
:-/	65	291	258	236	345
column_name	43	72	68	733	154
1158	60	201	58	424	162
total_seconds	92	35	383	616	477
1157	60	267	58	424	132
measurement	77	29	77	182	210
1150	15	279	231	71	255
pool.py	50	145	118	483	679
possibly	29	231	246	209	36
fontdict	64	166	90	341	683
ind2sub	40	148	127	150	601
birth	78	258	26	463	410
unique	3	297	454	587	639
tupples	71	64	10	519	684
massively	88	180	100	537	246
case-sensitive	32	237	397	436	864
county	78	250	132	463	604
articulated	34	118	307	590	216
jsons	86	110	275	601	519
df.sum()	44	193	181	700	827
steps	74	137	306	209	36
multi-indices	3	156	6	354	125
.equals	87	39	158	290	985
geophysical	61	176	128	623	293
\xff	70	105	346	177	576
truncated	29	28	306	788	508
left=	58	138	495	651	299
klepto	86	85	426	611	820
truncates	70	99	325	788	979
bago's	82	180	187	337	308
fig.get_size_inches()	58	19	18	485	543
qimage	84	192	123	607	427
left-	16	94	443	150	988
fot	68	207	371	432	472
fov	47	146	148	155	756
.total_seconds()	80	35	309	727	852
for	74	232	306	209	36
space-efficient	82	50	378	497	29
fox	47	67	223	145	567
reptilicus	83	85	80	197	142
fog	20	144	259	42	786
landscape	73	125	281	276	304
umm	65	291	258	407	887
gexf	86	125	329	595	519
foo	47	134	93	155	622
lines.linewidth	58	243	452	764	664
matplotlib.pyplot.plot()	51	136	208	272	664
infer_datetime_format=true	76	39	322	51	934
------------------------------------	47	224	58	424	588
shifting	40	146	148	548	526
sys.getdlopenflags()	30	170	244	165	960
poly_key_i	43	164	82	204	832
matlab-style	38	232	390	200	389
dollars	78	150	445	479	720
despair	64	6	143	732	370
bendersky	34	254	234	302	565
numpy.uint8	70	59	74	332	522
store.keys()	92	68	461	776	68
pylab.legend	58	44	90	418	481
vlookup	3	91	367	354	125
attrition	43	72	68	265	708
reducing	88	266	100	574	668
unambiguous	10	241	152	200	999
combinatorics	17	151	106	631	970
one-time	22	50	341	537	246
avail	29	62	272	161	746
width	37	31	443	207	449
copy-pasteable	27	293	202	420	188
physicists	17	43	377	396	803
step-by-step	68	137	465	432	328
call	0	46	295	684	231
panel2	6	69	90	572	481
python25	30	162	244	165	960
ecolor=	60	155	240	495	285
python26	13	261	486	165	368
simplifications	38	227	8	744	382
refcount	22	61	153	358	282
hemisphere	33	176	282	617	725
#value	47	78	30	415	987
2186	67	78	355	133	272
d.shape	52	19	263	364	855
sub2ind	19	214	125	703	601
2048x2048	84	195	213	674	353
discretized	77	292	339	626	762
wxpython	90	69	46	380	384
pip-build	50	145	133	117	160
panels	3	136	6	94	125
pd.dataframe.plot()	64	6	90	78	370
8.6	83	206	178	197	380
khz	77	29	20	530	227
proud	17	43	377	396	803
proved	17	62	395	334	628
numba.jit	55	214	422	756	219
ddof	79	23	121	786	484
tournament	78	150	445	479	541
proven	28	43	377	396	382
proves	82	180	341	537	246
exist	74	28	410	209	472
accounting	77	50	100	548	141
nx4	71	64	268	519	684
linearsvc	28	26	354	510	816
nx1	71	64	268	519	684
numpy.histogram()	19	42	63	31	780
dotted	61	31	24	212	276
nx2	71	64	268	519	684
id_col	44	134	260	155	827
rowsum	98	148	273	139	77
actor	78	150	430	482	604
unambiguously	75	99	421	601	979
200ms	88	197	73	549	217
ft2build.h	30	259	94	553	960
developers	34	173	359	604	208
expose	38	109	29	732	564
origin_zip	43	51	487	512	244
qt-console	83	206	178	197	467
train_targets	52	19	206	284	77
demonstrative	27	293	403	420	579
substract	80	146	148	98	62
invested	17	62	377	334	327
1-5	88	160	220	574	54
pandas.hashtable.int64hashtable.get_item	50	267	118	580	429
column_names	44	134	260	155	827
reorganization	82	50	291	503	359
shape()	64	275	295	684	782
nxd	71	64	268	519	988
modflow	86	222	329	676	519
nxm	71	64	268	519	95
sniffer	86	54	275	260	444
nxn	71	64	268	738	95
1000,100	1	142	173	305	795
acessing	74	50	426	663	161
elyase's	92	156	168	105	971
np.linalg.eig	16	94	462	782	800
test_df	44	134	68	733	827
index-column	78	297	163	390	984
scipy.signal.lfilter	79	101	125	487	610
warpperspective	84	230	102	166	427
line3dcollection	64	161	208	543	109
viceversa	40	146	182	661	363
re-sizing	37	69	46	207	449
ver	85	276	151	681	621
vep	47	224	202	424	508
df2.id	43	72	68	558	622
blurriness	77	151	106	429	303
draw_networkx_edge_labels	47	12	280	641	699
intergers	75	99	10	601	979
de-facto	38	214	125	756	612
veg	78	150	445	479	423
sparse.csr_matrix	16	94	333	455	788
vec	52	19	206	284	622
scipy.stats.rv_continuous	64	214	193	511	239
vel	72	102	418	129	910
df2.ix	52	0	260	769	827
yerr	51	155	226	557	926
1294444800000	67	213	95	185	51
pivottable	3	110	6	354	125
float96	70	100	325	86	22
two-way	28	151	106	761	531
matplotlib._path	81	88	110	739	183
5min	80	149	447	77	612
92.6	12	279	488	751	465
scipy.ndimage.morphology.binary_fill_holes	99	230	428	166	353
07:00	67	260	12	372	958
-bash	30	244	94	553	960
solver	79	22	324	566	610
tear	6	69	143	572	112
homebrewed	83	206	80	197	564
numpy.logical_and()	75	106	421	756	782
solved	35	207	116	173	336
0.13rc	46	221	124	331	435
fixedformatter	58	44	166	341	184
datenum	80	35	173	727	12
edchum's	35	238	187	187	308
prevent	29	231	306	716	378
\appdata\local\continuum\anaconda2\lib\	50	145	118	168	679
missmatch	29	28	306	173	568
x.t.dot	16	178	462	562	800
2014-12-14	67	213	95	185	51
chemstation	86	171	329	107	519
pd.read_clipboard()	27	293	202	183	188
05:00	67	260	12	372	958
educate	68	190	307	432	571
listcomps	19	180	55	337	89
cleanliness	23	232	430	149	36
current	74	171	306	190	214
u'no	63	83	283	715	39
np.ma.masked_where	87	219	198	56	714
dropdown	90	84	32	624	536
xpdf	73	166	248	91	304
ax.yaxis.grid	58	112	452	642	599
studied	17	43	377	396	803
wherever	74	232	317	605	629
commonly	38	1	17	317	79
cellarray	9	106	386	594	699
immgen	0	224	30	616	699
studies	28	14	267	710	866
reclaim	22	61	153	358	282
`"	32	67	170	4	385
ipc	23	85	71	349	431
love	68	190	465	432	343
`'	32	99	93	177	475
ipe	76	144	327	147	383
colorjh	52	19	160	284	776
`)	74	232	152	209	638
bloody	17	43	274	236	327
ipr	78	93	243	712	965
ips	78	150	73	41	639
inverses	16	94	462	782	800
traversing	40	50	497	534	68
ipy	83	15	189	226	818
2.6.x	83	206	178	197	380
b.max()	87	57	295	642	714
akavall's	35	238	187	187	308
4.52838	15	211	263	364	265
positive	57	146	8	141	509
predictions	28	26	354	135	816
tightly	37	31	467	207	489
value4	44	93	82	558	965
value3	44	93	82	558	965
prefix=~	30	170	244	165	960
value1	78	93	82	558	965
value=	43	17	223	4	567
cann't	22	28	80	361	472
introducing	10	231	17	548	526
``	92	39	1	285	502
afford	88	283	100	549	236
apparent	29	231	306	173	568
visual	83	206	178	650	634
degrade	89	50	100	537	246
line3d	9	161	208	543	109
easiest	82	241	378	573	29
behalf	65	118	116	590	887
2.6.9	83	206	151	202	380
parameterize	74	232	37	110	868
valued	3	146	49	587	509
+32	52	211	263	364	265
2.6.1	85	276	42	685	858
2.6.0	46	221	151	331	435
overloaded	9	109	331	113	135
2.6.5	85	276	42	162	858
2.6.4	85	276	42	685	858
2.6.7	85	276	233	198	858
believes	34	190	80	500	812
instable	28	151	106	654	970
descriptor	86	222	383	260	405
groupby()	92	156	78	763	121
vega	23	116	430	761	127
values	98	146	454	746	509
slowness	22	180	100	537	246
believed	29	28	395	791	874
value}	47	67	256	145	764
`]	38	6	125	724	512
colocated	98	146	339	646	340
colorbarbase	64	161	90	78	683
no-data	20	195	51	674	786
frogs	52	19	162	284	622
dat2	43	134	68	265	827
hides	37	117	152	58	305
legendre	79	10	324	363	620
winter	80	163	284	723	897
sector2	43	200	82	145	764
log_ssfr_dagn	20	119	259	757	340
re-plot	6	187	388	572	536
fpr	72	194	25	129	221
s_high	98	258	454	796	58
parameter	64	185	226	641	638
snaps	64	31	443	572	536
log-space	79	10	8	487	620
spot	68	13	227	39	589
nvals	52	0	263	284	855
applications	23	1	69	317	866
spoj	63	28	227	715	39
snape	35	207	409	20	336
date	80	35	26	781	410
data	74	232	37	110	36
sectors	77	29	467	646	668
mouse-over	90	69	32	624	536
stdin	86	222	327	147	257
yielding	74	214	459	15	508
re-assign	9	237	158	190	629
definitions	38	237	397	436	382
upvoting	34	190	3	702	915
wavelengths	77	194	269	129	221
backfilled	98	258	317	796	984
unacceptable	29	231	395	122	473
kong	12	115	162	550	888
rolling_product	82	241	341	756	219
hiring	78	150	445	479	604
.all()	87	52	198	181	985
zero-crossing	10	151	106	631	999
stills	84	219	102	401	427
isosurface	61	6	278	158	450
wspace=	60	194	495	606	162
type-check	82	99	341	756	219
cleanest	82	241	378	573	29
r_np	52	19	160	284	776
np.nonzero	19	42	198	13	714
scipy.misc.logsumexp	19	214	125	13	512
creations	75	50	10	691	122
urls.py	23	84	27	595	127
index_values	75	19	461	471	622
decades	55	1	35	233	275
c4163	63	244	283	553	323
get_dummies()	92	156	168	105	971
07:30	80	258	254	723	931
matches	98	146	317	587	868
matcher	34	227	459	15	79
records	3	110	6	41	984
arriving	34	29	294	97	161
happenning	29	28	227	432	571
df_azure	52	47	68	290	288
matched	3	146	243	587	984
larkfield	78	150	445	479	604
keepdims=true	1	178	121	232	726
revert	29	171	246	190	629
scipy.stats.mstats	38	214	125	756	382
0.056	11	234	4	606	743
df.to_html	76	144	275	183	322
bigarray	1	294	461	278	470
subdirectories	30	162	478	247	344
revised	27	238	116	187	308
breakthrough	35	207	371	205	767
int}	76	199	286	51	987
pydicom	86	192	123	344	405
data_property	84	219	51	592	427
vsplit	19	294	296	278	470
canvas	6	69	46	380	384
container	9	109	386	691	903
undergoing	82	50	341	756	141
jokes	68	190	143	432	328
rounding	57	89	8	654	62
weights=	87	193	63	557	780
if-statements	88	197	73	189	217
collisions	10	237	17	500	215
contained	74	110	37	746	161
ax.text	58	44	265	651	890
suggesting	29	28	227	791	472
fig.number	6	46	345	418	356
clustering	99	26	354	293	716
higher-precision	70	59	74	332	979
dodgers	43	200	223	4	567
departure	80	56	445	41	67
__builtins__	9	237	397	436	864
million	88	160	220	80	54
governing	10	43	17	128	999
|anaconda	85	276	42	163	621
from_csv()	92	185	226	641	130
___	0	224	164	499	557
prefered	74	214	152	209	638
12:15	52	19	263	284	855
liberally	27	263	305	458	472
collapsing	40	64	154	354	678
re-format	27	137	246	420	328
bothersome	82	50	341	497	382
misused	10	43	395	590	812
using_filters	19	42	198	13	602
intuition	10	13	106	631	812
jarray	75	106	10	519	684
16-bits	84	192	123	592	946
.sebastian	35	238	409	407	887
2007-01-24	67	213	95	185	51
u1	70	105	74	224	764
mlab.griddata	53	10	238	720	396
nested	75	297	455	776	903
vote	34	190	3	702	915
.tz_convert	43	285	309	2	24
fig.canvas.mpl_connect	6	46	345	44	112
imshow	25	119	320	49	845
indicate	74	232	306	746	868
smp2	78	200	223	204	832
2	47	19	162	305	855
typing	29	15	305	540	383
sub-class	9	109	331	594	386
500-1000	88	142	55	139	89
ndmin	19	185	226	641	782
normal()	93	106	295	684	782
lsqr	16	94	462	782	800
u*	11	234	4	531	56
histogramdd	19	101	63	557	780
raise_on_error=true	48	59	2	621	130
padding	37	31	467	207	668
barh()	51	83	226	641	676
0,360	33	102	135	65	212
int_	70	100	74	332	681
numpy+mkl	96	174	408	650	455
2=	11	234	4	531	743
interpolate()	92	156	238	414	691
future	34	190	359	604	208
idenrows	1	19	112	284	855
landuse	80	200	93	204	410
libopenblas-base	13	170	50	104	485
a.draw	0	224	58	424	8
nicer	82	241	378	573	29
considerably	82	180	55	337	89
quadrants	33	281	443	191	725
lurking	10	173	359	604	208
target_vector	1	275	112	129	221
ax2	58	139	494	324	543
ax3	58	139	494	324	543
ax0	58	139	494	324	388
ax1	58	139	494	324	543
y_hat	72	186	25	556	756
ax4	58	139	494	324	543
ax5	58	139	494	324	543
apply_over_axes	19	294	422	231	782
ax=	58	139	494	324	543
v_max	60	194	418	129	221
take	74	232	246	209	36
x-variable	60	281	82	42	12
altered	74	171	306	122	673
custombusinessday	80	35	245	560	333
axs	1	139	112	324	543
axp	32	67	223	4	244
butterworth	77	292	428	429	547
re-ran	29	171	272	361	905
self.unit	0	224	58	424	881
managing	38	50	291	317	79
df.shift	43	52	68	290	985
alejandro's	88	180	55	337	89
refining	68	13	116	39	589
axe	37	290	90	391	687
hmag	52	19	263	232	855
zdir=	60	155	240	495	285
archs	96	206	80	197	564
grepping	29	13	143	534	746
walking	40	13	163	429	589
surplus	32	263	420	468	655
df.index.isin	44	47	68	181	827
usualy	83	15	80	165	467
series.plot()	51	185	226	641	499
to_timedelta	92	35	245	490	934
xml	86	222	329	107	519
x.flat	1	220	206	476	714
conduction	28	10	267	487	841
withing	74	232	37	534	161
considerable	82	180	100	537	246
candidate_id	78	93	82	558	965
equipped	38	1	291	317	79
neato	73	125	248	158	329
1377565195000	15	211	236	514	96
np.nanmean	87	57	121	414	608
nabble	34	173	307	97	208
morphological	84	230	428	166	353
f1()	0	12	295	684	231
get_loc	92	104	23	733	971
string.join	76	224	487	177	736
prefixing	32	16	190	477	768
.dot	16	178	462	562	726
cid	78	258	26	411	377
fd	76	224	30	283	736
ordereddicts	86	297	275	663	519
conundrum	17	231	395	205	345
weeknum	43	258	26	204	410
xmax	58	198	269	65	221
liable	10	241	17	500	215
johne's	35	238	187	187	308
to_clipboard()	92	185	275	477	444
16th	80	163	254	723	72
c-function	9	204	29	790	64
dived	29	28	100	691	219
regressor	79	26	354	135	816
differentiable	79	10	324	487	13
windows\system32	50	261	486	138	204
spellings	78	150	163	479	604
enlightening	35	207	371	205	767
maturity	43	200	430	406	708
dia_matrix	16	94	333	455	788
2015-01-15	43	200	26	204	708
affecting	29	171	306	548	526
6804	71	281	268	646	684
inappropriately	38	99	390	482	444
100,100	1	274	268	305	726
uk	78	150	132	463	765
100milliseconds	80	29	299	77	931
data.pyc	50	145	118	168	204
plt.axhline	60	155	240	777	162
marnach's	35	238	187	187	308
memory-bound	55	180	341	537	246
datafile.txt	76	199	286	283	736
first()	92	156	78	105	971
cv2.so	30	259	277	303	960
1:30	80	29	73	77	931
ndarr	1	19	112	305	981
deduction	87	57	295	232	726
array()	9	106	295	231	782
tsteps	11	55	295	139	726
expression	75	214	109	744	135
dateutils	81	170	110	165	584
ants	23	14	294	39	275
pandas.core.series.series	9	35	383	616	31
twin	37	290	166	391	388
prun	27	147	202	183	502
anti	38	6	278	732	542
lagrange	79	10	324	487	610
tricontourf	25	136	208	49	908
combines	74	117	152	58	638
myfunction()	75	106	227	684	699
-by-	71	274	268	683	95
linspaces	75	102	10	73	684
needlessly	10	241	395	334	463
combined	74	232	6	354	36
harmonics	77	292	20	430	942
influence	77	266	106	395	668
thousand	88	160	220	80	54
antivirus	83	84	376	184	467
multirow	3	156	182	354	125
indents	27	263	305	468	768
np.unique	19	42	296	121	886
ng's	28	26	354	179	816
pylab.plot()	6	46	345	599	356
new_figure_manager	50	267	118	483	927
globally	64	237	397	436	370
misremembering	82	241	395	500	874
-70	33	194	269	606	212
inelegantly	82	241	246	40	472
1+exp	11	234	4	664	743
variances	79	23	332	638	11
bit-wise	75	214	198	113	135
diverse	38	1	69	317	79
pyhon	85	206	151	685	380
mgrid	19	294	296	291	601
.dfont	73	166	134	91	862
read_table()	86	54	322	260	698
concatenation	75	50	154	231	678
13.8	15	272	236	514	980
datapoints	61	29	339	646	340
13.6	15	256	236	514	980
13.7	15	211	236	514	980
13.4	15	256	236	196	980
13.5	15	256	236	514	980
a.tostring()	48	59	357	677	681
13.3	15	256	236	196	432
__init__	9	109	331	44	386
13.1	85	221	151	331	380
stockinfo	37	136	175	22	214
fractals	28	14	267	710	841
hxr	0	275	295	684	231
arctangent	79	275	295	744	292
workout	17	118	227	236	345
cramming	17	50	143	548	118
unidimensional	40	64	10	519	684
breakdown	27	137	459	15	421
oceanographic	23	14	267	623	866
utf8	76	16	190	477	261
pymunk	30	162	27	247	344
allocation	22	184	153	358	387
bulletproof	17	43	377	396	275
harris	35	115	326	429	336
station_id	78	56	148	796	347
calloc	9	184	153	358	282
wpf	90	69	46	380	384
2013-04-01	80	35	26	155	410
liblapack	96	170	244	165	960
2013-04-04	80	35	26	155	410
piecewise-linear	79	10	324	487	610
cmap.to_rgba	60	155	240	193	910
undefined	63	237	389	436	864
academics	96	174	69	461	637
afaict	38	214	125	431	305
costs	22	50	100	537	246
trains	28	197	114	94	616
trainy	19	148	273	73	77
slow-down	22	231	153	658	219
perlin	77	151	128	429	353
1.1.1rc	85	276	42	681	252
planck's	11	186	242	531	56
underline	37	31	443	122	76
afterwards	74	171	246	190	629
searchkey	52	134	461	471	622
pivot_table	92	156	78	763	971
litte	82	137	116	334	328
photons	77	29	114	710	616
_might_	82	241	80	500	208
scale=stddev	11	234	242	129	230
prominently	82	241	395	334	999
cm.get_cmap()	84	119	51	122	427
sebix	65	291	258	407	887
df4.index	43	2	181	700	895
resave	86	91	329	107	519
hovertool	64	136	278	158	847
part	29	137	306	209	421
_exactly_	27	293	227	420	472
df.stack	44	156	78	763	971
60	12	279	319	528	106
-m64	50	145	133	117	160
sub-pixel	99	288	282	617	908
62	12	279	319	111	465
data.info()`	27	293	202	183	188
ndarray.resize	9	184	153	453	280
integrals	79	10	324	487	610
clay	61	176	282	623	951
10qs	78	56	299	41	259
pylab.savefig()	90	187	46	572	107
grouping	3	156	6	354	125
iterations	88	197	497	534	616
qhull	53	22	11	720	716
poi	78	200	454	463	984
imshow-like	84	195	128	122	353
dpi=	58	243	18	16	721
yyyy	80	35	245	125	742
coordlist	9	59	331	594	681
256x256	71	195	213	674	95
thinks	29	28	152	791	638
returnsdf	52	134	260	155	622
tavg	43	258	231	265	377
authenticate	83	84	376	184	467
animation.py	50	145	118	483	927
anaconda\scripts	30	162	486	138	204
tube	74	13	250	39	214
subquery	92	68	125	703	382
node's	99	250	77	94	563
unoptimized	55	180	55	337	89
xgrid	0	294	226	641	782
installable	13	128	211	197	482
unsuccessfully	17	62	272	161	746
destroys	22	61	388	548	282
accessing	74	50	386	691	526
.values()	92	12	461	776	903
np.histogram2d	51	102	63	557	780
ration	37	243	494	207	449
ratios	77	266	467	207	668
^-1	11	186	25	531	56
coretext.framework	30	259	94	381	960
__name__	81	237	397	739	864
float64s	88	142	220	337	89
50+	86	160	329	107	519
acc	0	275	447	460	775
nanmean	92	193	121	414	608
acf	79	292	332	638	547
ewchan	65	115	409	20	887
special_object	0	237	397	44	807
ack	65	291	258	205	345
pylab.pause	29	46	452	642	162
industry	78	150	445	479	604
ataframe	44	134	260	348	987
value.values	47	12	461	776	260
acm	12	279	162	196	106
practicable	82	151	106	631	970
act	74	117	152	58	638
non-obvious	10	231	395	334	327
stemlines	64	161	90	42	499
-openmp	96	170	133	117	30
flawed	10	118	395	631	999
hashability	9	109	331	594	354
figurecanvasmac	63	83	383	616	477
idxmax()	92	156	78	105	121
covariance_factor	79	275	140	684	13
encapsulating	9	109	386	595	699
tie-breaking	57	227	8	631	970
hstack()	75	294	153	278	470
technically	10	28	152	209	999
how's	65	118	227	407	472
origin=lower	58	44	494	642	845
qt5agg	73	38	134	635	810
tick_params	58	44	166	341	184
how'd	65	43	227	236	472
cursor.fetchall()	86	68	119	478	824
.yaxis	58	44	166	341	599
recommends	34	173	234	302	142
0.9999	87	55	4	770	743
mantissa	57	89	325	788	22
np.around	57	89	201	559	907
non-rectangular	99	288	339	315	138
cloned	13	128	5	797	368
clones	22	13	159	732	36
pandas.core.frame.dataframe	9	109	331	616	31
buying	88	283	22	574	236
they're	10	227	159	209	999
wafer	77	250	114	746	995
attenuate	72	186	25	795	756
503	71	274	268	305	436
200,200	71	274	268	305	756
ex-ante	37	232	246	190	629
-------------	47	224	93	550	888
13-7-2015	67	213	95	185	51
agree	65	118	395	407	351
set_under	25	119	320	49	618
aa	47	134	223	556	622
isfloat	0	55	295	684	231
ac	72	130	223	556	272
datset	27	137	459	15	421
ohh	65	291	258	407	887
gona	52	19	263	284	622
ag	43	105	231	71	255
af	70	59	74	332	881
ai	72	186	25	174	624
ohe	64	185	226	641	444
ak	72	67	256	145	475
aj	89	178	207	683	306
am	29	28	272	161	457
al	28	14	267	317	841
an	74	28	306	209	36
ap	72	130	457	174	624
hand-drawn	61	137	175	22	951
ar	47	148	349	471	881
at	29	13	306	209	36
aw	65	291	258	236	345
av	47	186	25	88	756
ay	72	186	242	129	624
ax	58	139	494	324	543
az	60	155	240	42	285
na's	3	156	424	414	967
mathematic	38	1	291	744	354
subtract_me	52	52	198	770	714
join_by	29	231	395	173	568
collector	22	61	388	358	282
get_data	0	161	345	44	481
novice	17	43	377	451	98
spatial	77	176	339	623	908
a_	72	130	431	174	624
bizarrely	74	28	386	209	36
groubpy	3	156	6	354	125
vocabulary	28	26	354	135	816
a+	16	59	201	562	726
a*	11	234	242	562	56
ggplot	51	136	390	272	847
upd2	29	137	459	15	421
a1	72	130	431	174	624
a0	72	130	431	174	624
a3	72	130	431	174	624
a2	72	130	431	174	624
a5	72	130	431	174	263
a4	72	130	431	174	624
a7	72	130	431	174	624
rpy2	38	1	80	761	392
a9	72	130	431	174	624
a=	48	123	41	50	21
deadline	17	62	250	753	180
cpi	78	258	26	796	377
on_click	6	46	345	44	112
neuter	98	93	317	155	984
cpc	44	258	82	558	832
rxy	52	19	263	284	855
mimic	10	231	390	703	392
cpp	55	174	29	790	455
cpu	55	30	480	785	431
arb_vars	0	106	295	471	881
scipy.spatial.kdtree	53	42	11	293	716
externally	86	171	329	607	405
random_integers	93	123	193	628	361
on-the-fly	86	50	426	691	127
reasoning	10	118	227	335	999
improperly	29	28	306	122	473
particles	99	14	114	710	616
caveats	34	254	234	302	565
%y%m%d	76	205	346	125	879
__cmp__	9	109	331	55	386
v1.1	46	221	124	681	435
v1.0	46	221	401	202	435
v1.3	46	221	151	681	380
v1.2	46	206	211	681	284
v1.5	46	221	124	202	435
v1.4	46	221	124	681	435
df.drop_duplicates	44	164	181	700	895
np.bool	70	59	74	332	522
v1.9	46	221	124	202	435
zmq	90	38	71	349	810
pl.show()	90	46	345	599	356
randomop	93	85	193	628	507
linthreshy	58	290	166	341	683
puzzled	29	43	227	335	803
tick-marks	37	290	443	706	76
warnings.warn	63	248	283	715	385
state-machine	6	139	390	732	389
puzzles	65	291	227	236	345
scipy.cluster.vq	99	288	185	293	716
interpreting	29	231	152	791	638
manageable	82	283	100	497	953
mplstyle	64	144	329	595	383
condition	98	146	317	605	602
2013-09-09	67	260	95	185	51
accompanying	74	254	234	362	565
marvellous	35	207	274	205	767
plt.figsize	60	123	173	642	162
scrapping	82	13	143	370	118
numpy.array()	9	106	331	594	386
sensical	10	118	227	631	999
pseudo-code	27	137	459	15	912
antibiotic	78	250	70	295	604
lapack_lite.so	30	259	94	553	960
numpy.distutils	81	88	110	739	584
penalties	82	50	341	537	246
sync	22	85	294	110	214
pics	73	125	248	276	457
pull-request	68	173	359	604	919
recalculate	74	232	148	98	629
situated	99	176	443	191	563
do_long_fitting_process()	6	46	345	44	807
min_periods	92	193	447	614	612
section	34	254	234	302	565
-lf77blas	50	259	133	117	160
np.sum	87	55	121	673	608
.to_list()	43	47	68	727	827
avenues	68	190	307	472	746
contrast	74	117	152	209	305
christophe	83	206	80	197	368
installations	13	128	5	104	482
api.log	74	110	27	712	161
coverting	3	50	6	663	953
my_average	98	281	461	73	77
mainmodule	47	224	58	550	888
voltages	77	151	77	623	210
hours	80	197	73	77	931
smartest	65	118	116	590	472
round-trip	3	156	182	354	125
pchip	53	10	238	720	396
ser.read	47	224	173	424	162
st.int.arvl_ii	89	186	207	243	139
sklearn_pandas	28	26	354	761	816
dateformatter	58	35	166	560	184
numpy.flatnonzero	19	42	296	13	512
hitzg	35	238	409	187	336
1min	80	149	447	77	612
-arr	52	0	263	284	855
pick	74	13	37	190	868
action	23	232	294	209	214
voxels	99	288	127	646	744
verbose	82	241	378	334	29
summations	82	180	154	150	833
excellently	35	238	326	187	308
pl.imshow	60	219	320	193	845
coercion	70	99	17	756	843
midpoints	99	281	443	646	744
executable	83	261	486	247	368
857	50	267	58	483	842
integrationwarning	63	83	283	715	39
dtype=int64	48	19	52	364	265
etc	74	232	159	209	36
858	12	267	488	172	159
85%	88	197	73	337	217
archives	83	264	486	247	368
clabel	25	161	208	543	683
nomask	75	220	317	605	602
0.11rc1	46	221	124	331	435
df.columns.name	44	134	93	155	987
bin_range	98	146	63	141	66
numpy-groupies	83	170	244	302	482
uint64	70	100	74	332	522
evolves	28	14	267	710	672
keeping	74	232	182	548	526
science	28	159	377	396	866
temp.png	73	144	18	708	202
4:00	80	260	12	372	958
person1	78	78	223	145	272
integrate.odeint	0	275	324	566	292
indicating	74	117	306	746	868
beautiful	35	207	274	205	767
rodrigues	79	10	324	487	610
impacts	10	231	17	500	246
stated	29	118	116	791	999
neglected	65	208	258	791	887
accept	35	190	3	702	915
states	74	117	152	746	638
sense	10	241	395	209	999
rosen.py	30	162	244	165	383
dataframe.pivot	92	156	78	105	971
axis	37	290	443	706	388
information	74	254	234	97	328
__array_finalize__	9	109	331	594	300
equities	78	116	430	581	67
earnings	78	56	445	479	604
machine-learning	28	14	377	396	275
unattended	83	206	80	197	564
phidget	86	192	365	676	257
upto	98	197	73	528	428
np.ma.masked_invalid	87	42	424	414	203
libxft-dev	13	170	211	104	482
238377	1	274	180	215	849
pixel_output	47	224	461	471	622
state1	43	72	68	265	708
num=1	58	139	18	324	543
evaluations	79	10	324	566	13
gmpy2.mpfr	57	89	325	788	22
c_number	43	72	68	265	164
yxd	34	173	234	97	142
summarization	74	227	317	631	668
imagery	84	192	128	676	293
sence	10	241	17	334	812
atan2	33	292	242	664	292
c_idx	1	19	112	677	726
rotation=90	58	44	450	341	890
ylim_changed	6	69	32	572	112
colourmap	25	119	320	49	296
geographic	33	176	135	617	293
doc_id	43	105	93	145	764
checkbox	90	69	32	624	536
time_x	76	134	30	155	987
redefinition	37	290	443	207	388
args=	0	185	226	641	761
pane	90	69	46	624	781
chronologically	3	56	144	41	9
16.2	46	221	151	331	380
myarr	52	148	206	471	77
time_list	75	297	454	94	903
coarser	53	288	339	720	396
dosen't	29	28	306	209	473
wipe	22	171	388	190	629
value_count	92	193	78	31	121
travelling	99	14	122	710	841
skipped	29	263	306	791	655
mapinfo	3	110	65	155	68
propose	82	137	187	573	308
srgb	84	292	51	592	547
l-bfgs	28	22	324	566	13
00000000011100000000000000000000	52	19	263	471	622
misuse	10	43	395	451	98
buffering	22	61	153	358	282
expresion	75	214	158	231	650
np.logical_not	19	52	198	770	714
truthy	9	106	317	505	602
always	29	28	246	209	472
troubleshoot	27	293	403	420	579
fliplr	1	178	296	291	726
calcbench	27	137	459	15	421
uploads	23	84	294	676	127
arrray	84	195	10	519	427
contourplot	61	136	175	626	847
week	80	56	254	723	897
.ravel()	1	57	296	232	280
accelerator	55	174	422	366	651
catalogues	3	110	6	746	36
crontab	30	84	376	184	181
iteractive	90	15	189	226	508
20.0	15	272	236	514	980
prop.get_family()	15	0	180	71	288
20.4	15	157	64	296	837
psychology	28	14	267	710	866
mattered	29	28	306	791	874
valueerrors	92	291	389	236	345
misses	10	231	395	574	246
null_index	43	72	68	265	133
numpy.ogrid	19	42	296	13	512
nest	19	12	455	480	903
highway	33	176	282	623	563
pil.image	84	219	102	607	427
reformulated	65	118	116	590	887
localization	28	150	430	429	604
acorr	51	136	240	272	12
pitfalls	10	231	17	321	215
proxy	64	161	90	543	109
imagine	82	232	246	209	36
pandasql	81	68	119	478	126
matrixxd	9	204	29	790	694
bumped	17	62	88	458	874
100x9	71	64	10	519	684
feasable	22	171	497	534	953
colorconverter	25	161	320	49	296
positioning	37	290	90	391	76
100x1	71	64	268	519	684
rack	47	67	223	133	888
w	47	186	25	129	756
expedient	82	137	341	573	29
reversing	40	232	182	548	363
slipped	65	291	258	236	345
girls	78	200	132	42	423
thereafter	22	171	306	534	214
plt.acorr	79	101	390	470	389
number	74	232	37	746	868
sympy.cosd	0	275	295	664	292
ix_()	75	104	296	231	650
womenmeans	60	102	418	129	221
ax.quiver	0	44	295	418	162
unexplained	10	231	106	268	303
974	99	288	306	646	138
heads	65	291	371	458	417
972	50	267	118	483	679
978	52	78	52	305	272
!...	35	291	274	205	767
97%	88	160	220	80	54
imdecode	84	219	102	607	405
exponents	57	89	8	788	898
npy_1_7_api_version	63	244	58	24	30
relationship	79	23	185	638	11
immediate	29	28	116	173	999
appreciation	68	190	371	702	216
numpy-refactor-refactor	50	145	118	138	679
.emacs	30	259	478	165	960
consult	34	254	234	302	565
scatterplot	61	136	175	22	847
locator_params	58	44	90	341	683
v0.14	46	221	151	331	380
v0.15	46	221	124	331	435
v0.12	46	221	124	331	435
v0.13	46	221	124	331	435
v0.11	83	62	247	161	746
diffusion	28	14	267	710	841
determines	74	117	152	746	638
head2	43	67	93	388	987
head1	47	67	223	388	764
head0	44	164	181	700	895
pear	78	200	223	4	567
determined	74	232	37	746	868
show_graph	81	88	110	739	584
remembers	74	117	152	732	370
.tail	43	47	493	76	593
*data	60	0	418	232	910
basicly	65	134	461	471	622
get_chunk	47	224	30	684	655
pepcn2	78	200	82	95	965
pepcn3	78	200	82	95	965
0.20000000000000001	15	211	61	606	10
pepcn1	78	200	82	95	832
pyserial	23	192	365	676	257
df.index.to_series()	43	47	493	76	593
python.h	13	244	94	553	323
presorted	75	180	100	497	122
node_size	25	161	280	641	481
positionally	3	146	182	587	984
analogy	82	43	291	525	79
analogs	38	99	245	756	141
play	64	62	88	458	647
yhat	47	23	430	638	620
effecting	98	171	388	155	214
toss2	70	273	309	678	612
df.index.apply	87	201	493	76	593
plan	23	232	246	525	118
a.mean	1	57	41	232	726
cccc	78	200	93	463	832
exe	83	261	486	797	368
unequal	75	64	10	519	340
exc	63	83	283	715	39
10-fold	28	180	55	537	651
cover	99	31	467	646	668
ext	76	144	30	283	736
researchers	28	1	69	317	450
exp	11	234	242	664	56
attacking	17	43	377	396	803
scipy.stats.percentileofscore	19	214	140	31	512
end-user	38	1	80	317	564
wsgi	83	85	71	349	431
label=label	60	19	418	485	910
nextday	92	147	422	614	231
session	90	15	189	226	818
impact	10	180	17	395	246
indicator	74	232	168	746	509
group_indexes	98	104	317	605	602
condor	83	206	376	184	467
1.6.2	85	276	151	157	621
failed	63	244	283	553	457
1.6.0	85	276	42	157	621
1.6.1	85	276	42	157	621
np.swapaxes	1	294	296	278	470
|u|	72	186	242	531	56
1460	1	274	162	305	60
loved	83	1	80	197	637
pl.draw()	90	187	108	361	248
training_set	52	19	263	284	855
out_list	98	148	185	73	77
queue.queue	9	61	71	349	807
they'd	10	99	246	500	196
24787	52	72	68	284	369
preparing	23	137	294	525	625
closely	10	118	234	97	999
1x10	71	64	268	150	981
scipy.ndimage.label	99	230	428	166	854
tumors	78	150	454	94	984
inbuilt	38	6	125	573	382
your's	82	238	187	337	308
update()	0	46	345	44	231
numpy.lib.recfunctions	81	88	110	739	183
select_column	92	12	78	285	512
overdrawn	37	31	467	780	851
ser	44	134	65	155	827
seq	47	12	461	471	806
x2-x1	11	234	242	531	56
overwhelm	17	62	88	161	746
line_no	47	200	430	133	832
:-))	17	291	250	236	345
sex	78	200	252	584	604
seg	63	28	389	361	473
see	29	28	306	209	472
sed	32	16	327	147	768
sec	88	197	73	196	217
migration	34	190	35	396	275
sea	33	176	77	623	563
sem	87	193	121	673	347
sel	52	148	273	471	622
outward	37	290	443	780	723
umath	50	259	277	117	842
topmost	37	31	443	780	851
isin()	92	156	78	105	971
libpng	13	128	50	104	485
nope	65	291	258	407	887
optimize.fmin	79	22	324	566	13
')))`	47	105	493	177	593
redesigning	82	241	341	500	219
1690784	78	78	52	796	272
.bash_profile	30	122	478	159	181
size=500	93	123	173	50	361
selectively	74	232	246	190	629
numpy.fft.irfft	16	101	20	430	547
adressing	52	19	160	284	776
imageio	38	6	80	381	564
hyperlink	90	69	46	624	127
x1-x2	11	234	242	531	56
arraylist	75	106	29	756	382
cumprod	19	193	422	614	121
100-1000	3	160	454	80	984
long-term	28	85	106	128	246
cparsererror	63	244	283	715	123
whole	74	232	497	534	36
draw_idle	6	46	345	572	356
geolocation	99	160	220	80	293
.names	43	72	93	471	622
corresponds	98	281	37	746	868
community	34	190	35	461	216
hollow	61	31	282	212	138
agents	23	85	294	94	625
pycon	34	254	35	179	565
worthless	10	231	395	590	999
acceptance	34	190	250	702	720
lets	74	232	246	209	36
list_data	52	19	173	50	19
hitting	22	13	143	39	589
set_radius	64	28	246	684	472
axes3d.plot_surface	25	102	208	193	845
format=	76	205	346	125	879
run.py	50	145	118	483	204
firm	78	116	430	149	67
fire	90	187	108	624	248
what's	29	28	227	432	472
python-numpy	13	170	50	104	482
plt.grid()	6	44	90	418	481
fund	92	116	430	581	67
2^8	40	31	154	191	363
data.merge	44	2	253	700	895
func	0	275	295	684	231
adjusted_cov	16	178	462	562	800
matplotlib.axes	6	161	90	543	481
matplotlib.text.annotation	64	161	90	543	683
tweaked	27	137	116	525	328
22:30	67	213	95	185	51
\*	32	284	61	131	916
formats	86	222	329	601	519
matlab's	38	101	125	703	392
x_sub	52	52	273	284	19
400	88	142	220	528	106
dotting	71	64	268	150	95
level1	43	72	82	265	708
level2	43	200	223	145	708
vanish	29	231	388	716	568
level=	44	164	181	700	419
matrix.shape	1	274	112	677	60
lat_0	33	155	265	319	224
df.as_matrix	1	57	112	232	21
funny	29	231	395	335	473
scipy.integrate.dblquad	79	10	324	416	13
feedtype	43	200	82	204	832
kills	22	48	100	458	417
choking	29	283	395	361	473
scipy.io.savemat	86	222	426	102	478
x64	85	276	42	685	858
elevated	83	84	376	184	467
2035	67	213	95	185	51
futzing	82	241	395	334	327
\\	32	51	487	151	244
underspecified	34	190	307	590	216
2015-08-10	43	72	68	265	708
do_3d_projection	9	161	383	616	477
scipys	53	101	140	720	943
indicies	40	297	182	587	650
gdps	78	56	445	796	984
levels	3	119	182	587	125
invalid_raise	64	185	452	641	130
focal	99	288	114	646	744
recent	46	221	124	741	435
canned	38	254	247	321	79
set_alpha	25	161	208	49	664
numpy.savetxt()	86	54	382	260	698
mingw64	96	170	211	197	482
per-column	92	193	424	414	967
return_index=true	19	42	296	121	886
comprise	78	160	454	746	616
2001-01-01	80	260	254	723	931
simd	55	174	408	90	651
gplot	27	137	116	97	472
foo()	9	204	295	44	231
.vimrc	30	162	478	159	181
snappy	35	207	274	205	767
ellipsoids	61	136	175	158	951
multiarraymodule.c	9	109	29	381	842
relevance	34	173	359	432	868
pyplot.table	64	6	90	78	370
scipy.signal.fftconvolve	19	101	125	430	547
sim0	98	146	454	796	984
matplotlib.pyplot.savefig()	73	125	248	276	304
y-direction	33	281	443	191	964
demands	10	227	17	500	305
figure.dpi	64	243	90	207	449
data4	43	200	82	204	965
document_id	44	93	93	155	903
pertinent	27	137	27	482	421
gnumpy	55	174	408	90	651
ax.set_color_cycle	25	44	320	49	481
mask.nonzero()	52	19	160	284	855
exmaple	27	137	339	646	951
pandas.tseries.index.datetimeindex	92	35	245	781	31
1.4.3	85	276	42	681	252
hue=	51	17	351	4	385
manipulated	74	171	386	40	673
form's	23	171	27	122	127
np.random.shuffle()	19	294	296	231	512
.mp4	73	125	248	276	107
b-	60	155	240	603	285
lanczos	79	94	462	782	531
b*	11	234	4	562	743
b4	72	130	431	174	624
subscripting	52	104	23	733	821
b0	72	130	431	174	624
b1	72	130	431	174	624
sight	17	13	250	39	345
b3	72	130	431	174	624
b=	1	57	41	50	21
sheesh	65	291	371	236	345
qpython	86	68	275	478	126
getfromtxt	86	222	329	260	405
causal	80	118	447	97	612
efficiencies	3	50	100	663	843
artist's	6	161	90	572	481
donations	78	150	445	479	604
\int	11	234	242	531	56
machine's	22	182	480	785	0
inclination	33	176	282	617	326
machin	35	238	187	187	308
be	74	232	246	209	36
bf	47	110	243	712	984
bg	84	195	102	122	673
ba	52	220	273	556	622
bb	47	134	273	556	622
bc	47	200	223	556	588
bl	47	148	273	139	756
2^16	57	89	4	141	743
bn	72	130	431	174	624
bo	60	155	240	603	285
bh	79	23	332	638	11
agreement	34	151	106	631	970
bj	72	130	273	174	756
bt	47	224	58	366	588
bu	29	28	272	361	457
bw	84	195	51	592	427
bp	78	200	280	42	475
bq	80	149	447	77	612
br	78	67	93	482	475
bs	47	297	461	534	306
tidal	61	176	175	626	908
seasonal_decompose()	92	106	140	105	699
bx	11	186	242	531	56
by	74	232	306	209	36
asymptotic	89	151	207	654	90
b-tree	86	50	426	611	820
anything	29	28	410	209	472
fill_betweenx	25	161	208	777	481
hatches	64	136	24	78	664
numpy.digitize	19	42	63	31	780
maxlen	1	274	41	677	867
stdcst	12	279	263	364	265
unsorted	40	297	182	524	9
np.char.split	47	224	246	13	512
hatched	61	136	24	757	138
b_	70	105	74	53	681
cashflows	78	56	299	479	67
computational	28	14	341	321	246
yloc	51	44	195	272	12
integral	79	10	324	416	610
targets.csv	86	222	100	260	405
4-tuple	25	119	208	49	845
iterate	74	297	497	534	68
next	74	13	306	190	214
re-define	74	263	37	190	629
criticisms	68	190	465	432	343
238.00	67	213	95	185	51
retrieving	74	232	386	370	161
16.18	47	224	162	424	60
.idxmax	98	42	68	13	985
textual	23	110	329	482	519
occupy	37	283	373	484	668
unknowingly	68	190	17	537	246
rand_draw2	9	237	158	476	757
pandas.to_datetime	92	35	245	781	934
compressible	77	151	100	611	463
relaxed	46	221	124	202	435
tally	78	56	445	41	604
linq	38	1	80	317	564
archaic	82	137	80	500	472
link	34	254	234	302	565
10.11	85	276	233	198	858
10.10	85	276	233	198	858
line	61	263	306	212	276
step-wise	27	137	305	420	328
main.py	81	162	189	540	383
msvcr71.dll	30	261	362	247	368
tcaswell	35	238	326	187	336
.000000000	67	273	309	2	24
customers	78	150	445	41	604
mature	38	1	291	317	450
horner	79	10	324	744	610
likebeta	0	275	295	129	292
medical	84	192	123	149	353
impl	10	180	359	537	122
supervisor	28	14	267	233	116
defined	74	237	397	436	638
nighttime	80	29	299	77	931
code\	50	267	118	483	383
side=	58	42	253	651	599
gene.symbol	43	72	68	265	708
one-sided	79	292	20	430	547
defines	74	117	152	58	638
phantom	37	31	467	780	370
coder	17	43	377	396	275
codes	27	137	163	482	421
leftward	37	195	443	191	353
preventing	29	231	306	173	378
codec	63	16	190	477	261
actors	23	150	294	94	118
datax	98	148	206	73	77
700000	71	160	220	80	54
wrongly	29	28	306	791	874
csv.quote_none	76	185	322	51	189
sided	77	292	20	430	547
robots	99	14	114	710	616
__array_interface__	9	109	85	594	386
sides	37	31	443	661	851
mood	17	43	377	396	803
code1	3	110	306	122	508
code2	44	93	82	558	965
numpy.max	87	214	121	673	608
onepoint	0	106	317	605	602
kinetics	28	14	267	710	841
walked	22	62	88	39	874
equivalently	19	214	246	231	659
12.10	85	276	233	393	858
walker	13	162	486	247	344
code*	27	293	403	420	579
sns.violinplot	51	155	351	42	12
code-	29	28	227	361	473
findfont	63	248	134	422	862
lmdif	55	184	153	358	282
ax.set_ylabel	58	44	166	341	890
code	27	137	459	15	421
ypred	47	224	306	424	881
libfreetype	13	170	94	104	482
p2de	52	19	160	284	855
results	29	227	306	122	508
actualy	10	118	227	432	472
quad()	79	214	125	566	13
np.array_split	87	236	260	290	827
tissot	33	176	282	617	908
send	23	85	294	595	257
citing	34	173	35	97	142
outwards	37	290	443	780	76
sens	10	28	395	335	472
dislike	10	241	390	334	813
sent	23	171	27	595	257
moot	10	231	395	500	150
unzip	13	252	486	797	368
j_sorted	29	28	227	791	473
booleans	75	106	421	605	135
input_1	98	148	206	141	886
result2	1	106	198	457	881
result1	1	130	206	457	881
date_range	80	35	245	781	333
code_generators	50	259	277	381	842
lines.py	50	267	118	483	927
1.000000	67	284	92	550	110
categories	78	150	445	584	604
colindex	78	148	454	796	984
labels=false	92	134	452	105	827
subprocess.popen	76	144	327	147	383
sr.values	52	220	160	476	757
np.uint64	70	59	74	332	522
disordered	3	297	6	663	161
sorted_array	52	57	112	232	714
non-ideal	82	241	378	573	29
ptcblas	96	259	277	117	469
mysqldb	86	68	119	478	126
le8	37	31	351	780	385
punctuations	32	263	420	468	655
index	3	146	65	587	125
anton	35	207	409	187	336
analogously	10	146	17	587	363
$display	90	15	376	184	831
backend_gtk3agg.py	81	171	80	190	473
tick_increment	11	52	4	770	985
x+2	72	102	418	129	358
firms	78	286	163	425	798
x+1	11	234	242	129	591
bird	78	200	132	463	604
twiny	58	290	494	391	388
twinx	51	290	494	391	388
leb	35	291	409	407	336
openmm	55	147	69	349	997
lee	77	151	106	429	762
leg	58	138	495	651	162
straight-forward	82	241	378	573	29
.pth	30	162	478	247	344
len	87	123	180	50	591
non-linearly	88	142	55	574	668
24-bit	84	192	123	592	946
les	27	137	459	15	421
let	68	190	227	432	571
lev	35	115	409	20	336
downvote	65	190	307	702	216
openmp	96	174	408	90	455
ravels	75	294	154	231	981
engage	10	43	17	200	79
x+c	11	186	242	129	56
designmatrix	81	237	168	761	183
stringvar	9	109	331	594	699
x+y	11	102	418	129	591
staticmethod	9	109	331	594	386
tp1	98	258	454	796	397
binary_dilation	38	214	125	703	782
locb	72	132	273	174	792
335	15	256	162	133	888
334	12	279	488	751	465
parallelised	55	85	100	90	651
336	12	200	488	751	272
330	12	279	488	528	106
333	12	279	488	751	465
332	12	256	236	196	432
v1.3.0	83	206	178	202	467
v1.3.1	85	276	42	681	252
convert_numeric	92	39	452	171	934
33%	88	197	55	337	581
numpy.any	87	57	198	770	985
standing	74	13	250	39	214
instantiation	9	109	386	594	370
))`"	48	274	256	305	764
<--	64	31	395	791	345
recalling	34	118	272	97	746
))`)	1	57	173	50	371
doubt	82	241	17	500	246
<->	64	13	246	200	363
linest	79	10	332	363	620
occurred	29	28	306	361	568
__call__	9	109	331	594	386
c_ubyte	70	204	74	790	64
labelled	37	281	454	22	851
sharply	22	283	485	574	668
v1.3.x	83	206	178	681	284
subscripted	37	31	443	780	851
65283	57	100	325	141	22
pythonista	82	241	378	573	29
))``	87	55	1	50	371
insists	38	117	152	595	564
slit	77	292	20	430	547
reproduce	27	293	403	420	579
drill	44	13	143	39	589
ax.legend()	6	161	90	418	481
streamed	23	110	329	110	257
bent	61	176	282	212	138
xout	75	102	418	557	684
bend	17	151	282	631	589
simpleitk	84	230	123	607	427
np1	47	72	93	155	622
c*z	11	186	242	531	56
00,197	67	213	95	185	51
datetimeindex	80	35	245	781	333
compounded	77	266	148	574	347
cv2.findcontours	0	106	208	684	481
numpy.tril_indices	19	42	296	13	659
00,198	67	213	95	185	51
negation	75	146	198	249	135
uncompressed	86	222	426	611	820
skeletonization	84	230	428	166	353
.matplotlib	30	122	478	350	181
animal	78	250	445	584	604
as_index	92	185	78	105	130
tiago	35	207	371	205	767
stand	65	28	227	209	472
m.ndim	52	19	263	215	99
blocks	74	232	10	534	953
npe	65	118	326	187	336
await	35	207	371	205	767
docstring	64	185	226	641	638
educational	17	43	377	396	275
blocky	84	195	428	166	353
notebook	90	15	189	226	818
npy	86	222	382	102	820
demonstrating	27	293	403	420	579
npz	86	222	426	102	820
out-of-memory	22	283	100	549	236
qtimer	6	46	345	599	112
efficiently	82	50	341	40	382
alloc	22	184	153	358	229
super-fast	82	180	341	497	463
selectors	3	104	23	733	154
sizeable	88	283	100	549	54
allot	17	207	371	451	767
nancy	43	200	231	265	260
ravelled	75	42	10	231	122
plt.colorbar	25	44	320	418	162
np.random.dirichlet	93	275	193	628	361
vml	96	174	408	90	729
bundle_files	63	170	283	553	584
comma	32	16	420	468	768
vms	23	84	376	670	467
operative	10	227	317	605	999
csv.quote_minimal	76	185	322	51	413
recreating	22	171	386	548	526
curses	22	171	397	361	473
designs	38	227	159	321	354
piecing	17	62	88	458	746
x-range	37	290	269	207	388
disapear	90	187	175	624	536
establishes	74	117	152	548	638
.to_pickle	88	283	373	549	246
multiprocess	22	85	71	349	431
1294617600000	67	213	95	185	51
welch's	79	292	20	430	547
sucess	29	28	395	574	345
merge	3	156	253	33	125
scipy.optimize.basinhopping	79	22	324	566	13
sheet.cell_value	52	0	180	215	19
cythonizing	55	180	341	537	219
recl_2007	98	93	82	796	272
main.cpp	30	162	244	165	383
beginner	17	43	377	451	98
frequency	77	292	20	430	227
how=inner	3	156	65	587	125
banal	82	241	88	334	463
zero-d	75	50	10	691	678
agriculture	43	200	93	463	965
float16	70	100	325	86	22
bunched	37	31	467	780	851
axises	37	290	443	391	388
shallow	9	184	158	476	200
microscope	84	192	365	676	946
matlab-like	38	6	390	732	389
bunches	10	227	159	587	509
adc.read_voltage	0	224	162	424	881
s_i	11	186	25	683	56
animated=true	6	46	345	572	373
as_index=false	44	164	181	763	419
interactions	23	14	294	94	625
d.bands	1	148	206	471	77
24000	71	64	268	519	684
surely	82	241	378	573	29
xcoord	77	195	114	182	682
as_matrix	92	156	78	105	971
s_1	11	186	4	562	56
stylesheets	73	125	248	91	304
spill	22	13	294	39	214
followings	27	137	459	15	421
david	35	115	409	20	336
quaternions	75	64	10	234	684
pathname	30	162	244	165	181
frontend	90	84	278	158	450
kendall	79	23	185	638	11
ax.xaxis.get_ticklabels()	58	44	452	642	162
blown	17	137	274	376	417
450	12	142	220	528	106
454	12	279	344	111	132
455	12	279	319	751	465
456	12	279	36	751	132
1e3	93	123	173	686	393
1e2	57	194	269	686	393
savitzky-golay	53	10	428	487	531
1e4	88	142	22	686	393
1e7	57	142	269	686	393
1e6	88	142	220	686	393
owner	30	170	244	250	348
1e8	88	142	22	686	393
blows	88	283	100	458	417
image_box2	9	204	295	790	64
histograms	51	136	175	22	847
if's	82	241	378	573	986
python+numpy	55	174	479	90	651
plt.subplot()	58	139	494	324	543
painful	17	241	291	334	327
group.type	43	72	68	339	199
pythonstartup	30	15	189	159	181
textscan()	38	214	125	703	782
np.arrange	93	123	173	664	743
45k	88	160	220	80	54
thresh	87	52	424	43	608
colleagues	17	62	69	233	275
ax.contourf	58	44	494	418	162
tortured	82	12	378	200	29
stem()	51	161	90	543	499
iris.field	60	155	240	193	910
plotly	51	136	278	158	847
steep	17	151	377	179	628
steer	17	13	143	659	589
matplotlib.collections.polycollection	6	161	208	543	109
large-ish	88	160	220	80	54
conciseness	10	180	479	537	246
spelled	10	118	152	200	999
*exp	11	234	242	531	56
m_srcaddr	51	56	195	520	12
seaborns	64	6	234	761	854
location_id	78	93	82	204	832
clearly	29	118	227	791	999
documents	23	150	163	482	798
avarage	98	56	148	574	931
studying	17	25	247	179	746
mechanism	38	85	17	691	305
decomposing	16	94	462	150	800
regard	10	231	17	432	999
to_pickle	86	68	367	183	322
said	65	28	258	791	472
medal	78	111	445	479	604
latin1	76	199	190	477	413
left-over	29	263	306	791	655
.gt	87	89	198	113	135
you'll	74	232	246	209	196
function()	0	275	295	684	676
ymargin	29	231	395	716	473
.gz	86	261	486	797	368
2011-01-10	80	260	12	372	958
test.exe	81	15	189	540	383
bikes	43	52	68	693	437
postcode	78	200	132	463	423
hops	22	263	454	534	214
out_degree()	89	180	55	337	89
mtrand	81	88	110	739	584
molecules	28	14	114	710	616
hope	68	190	116	432	328
exchanged	74	56	299	209	67
acces	74	189	37	110	161
\text	73	166	134	91	862
aa*bb	60	224	173	50	910
exchanges	23	116	299	581	67
cv2.threshold	84	219	102	401	427
pivot()	92	156	78	763	971
scipy.interpolate.interp1d()	53	10	238	720	396
streamlines	33	176	282	617	326
run_code	50	145	118	168	679
rebase	83	170	244	165	467
undergrad	17	43	377	396	275
streamlined	82	241	378	573	29
test.xlsx	76	91	367	283	86
nist	86	110	329	107	519
trainlabel	47	134	30	155	508
temporarily	22	171	388	190	629
stock-mach.py	50	267	118	734	679
catastrophic	57	89	8	654	970
ky=1	60	102	418	129	910
ax.get_yaxis()	58	44	494	341	599
edition	85	45	264	461	634
slanted	61	31	317	212	138
99.91765345	15	157	64	296	837
bidders	44	93	82	558	705
interacting	38	1	386	732	79
non-pep-8	38	1	479	317	628
sys.setdefaultencoding	76	5	286	130	413
yearmonth	44	93	82	204	832
numpy.random.sample	46	221	124	628	435
email	78	150	445	479	423
classless	82	241	187	573	669
pcolormesh()	25	161	208	49	845
b.ravel()	1	57	41	232	726
figure1.legend	68	224	371	432	328
restrictions	10	227	17	321	999
figured	65	62	88	161	874
.readline()	76	199	30	283	736
valgrind	55	147	143	312	219
drug	78	150	445	479	604
figures	90	125	248	276	304
cj	72	186	25	424	19
adjusted	37	232	148	207	668
ch	47	105	162	53	764
co	47	200	430	550	423
cn	72	130	431	174	624
cm	20	119	259	764	846
cl	98	200	162	133	272
cc	47	200	244	556	588
cb	60	194	418	485	162
571	12	279	488	751	132
570	43	78	52	145	272
cg	16	22	125	566	392
allocates	22	184	153	358	225
ce	30	170	244	165	960
cd	30	261	244	159	368
cy	72	102	418	129	756
cx	72	102	418	129	910
crafted	74	137	459	663	670
cs	47	102	418	129	910
cr	34	118	307	482	216
allocated	22	61	153	358	282
cp	30	259	277	381	552
cw	46	221	124	604	435
cv	84	230	102	607	694
kipp_macht	3	148	65	587	125
ct	35	238	326	8	336
whatever's	22	263	246	500	215
trajectory	33	176	282	710	326
non-filled	61	31	24	212	276
c_	19	12	160	359	601
2019	98	78	162	133	272
recurring	80	56	299	77	931
2018	67	213	95	185	51
c*	11	234	242	531	56
c-	75	184	29	200	122
c#	55	1	29	317	564
c8	72	130	431	174	624
c=	60	155	240	603	285
2014	80	163	284	718	483
c3	44	130	431	174	624
c2	72	130	431	174	624
atlanta	12	279	236	514	96
c0	72	130	431	174	624
c6	72	130	431	174	624
c5	43	130	431	516	624
np.vstack	1	57	296	278	470
2016	80	163	284	718	483
laser	33	176	282	212	563
expiration	80	258	26	781	742
np.argmax	87	42	296	13	886
delaying	17	43	341	236	803
surprisingly	29	28	395	497	905
polar=true	51	44	208	272	481
chisquare	79	275	140	684	239
pandas.dataframe.replace	92	214	109	512	808
spmatrix	55	174	408	178	564
highlighter	61	31	443	212	276
np.sqrt	11	55	201	562	56
highlighted	61	31	443	212	138
df2015	3	258	65	796	984
model.predict	47	224	162	539	159
dedent	0	46	345	44	231
phi	33	186	25	129	725
ball	99	150	163	149	423
lineplots	61	136	175	158	847
wikis	34	254	234	321	79
phd	28	150	377	149	561
.t()	9	106	295	231	699
eulerian	28	14	267	710	841
concordance	98	56	454	796	984
lib-old	50	259	277	303	469
colour	20	119	259	757	786
otype	19	185	226	641	782
s21	70	105	93	53	475
command	90	15	189	540	383
non-chinese	32	150	163	482	798
bananas	78	200	252	145	423
moments	79	23	332	638	11
glut	83	38	69	635	810
1.7976931348623157e	57	89	325	559	907
pyplot.hist()	51	44	63	557	780
set_size_inches	58	139	18	324	543
total_val_count	92	104	461	471	622
glue	38	232	80	110	118
3-tuples	99	288	135	646	684
generous	82	241	274	334	628
derivate	79	23	332	487	942
100,100,100	71	274	268	305	175
column_with_times	43	47	68	265	708
cdfs	79	23	97	511	239
series.str	92	156	109	512	808
"`)	32	17	170	4	385
fluctuating	88	283	373	549	236
magnify	37	31	467	207	536
re-think	82	50	341	500	118
g.copy()	0	224	295	476	231
pyplot.scatter	25	161	208	49	481
macosx10.6.sdk	50	259	133	117	160
z.ravel()	1	102	418	193	910
mhm	29	28	227	209	472
crisp	99	288	274	429	550
mhh	60	224	418	129	910
accelerating	28	180	341	537	219
pyplot.quiver	61	136	175	626	847
100.000	88	142	220	373	54
mhz	77	29	20	430	227
appriciated	68	207	465	432	343
replacement	74	232	184	628	382
deviation	79	23	332	10	11
indications	34	254	234	321	328
guaranty	10	104	317	587	154
habitat	99	250	70	295	563
0.15.x	46	221	124	331	435
rfft()	77	292	20	430	547
springs	99	14	114	710	563
mode=none	60	155	297	193	285
psd	77	292	20	430	547
transport	23	85	365	149	257
ylabels	37	290	166	706	76
avoid	82	50	341	500	215
cosines	79	292	20	430	942
ether	64	44	90	543	683
timeit.timeit	81	5	110	737	870
pd.grouper	87	149	447	460	419
leverages	38	1	291	317	79
0.15.0	46	221	124	331	435
0.15.1	46	221	151	331	621
0.15.2	46	221	151	331	621
128gb	88	30	480	785	236
importerror	63	244	283	553	584
proceeded	29	171	272	190	874
stage	29	13	250	39	214
gained	82	180	55	537	246
sister	38	6	128	302	564
firsttime	70	273	93	781	410
edit**	65	118	116	97	887
ingest	86	222	329	110	519
seeds	93	288	193	628	507
ax.axhline	60	155	240	777	910
language's	10	227	17	200	354
priorities	10	227	106	631	970
np.tril	1	57	112	232	726
_data_	37	31	467	207	449
df.count()	87	134	68	700	827
plt.step	19	123	63	557	780
'''	47	224	30	424	588
recompiling	96	174	80	160	455
np.triu	19	294	296	231	659
'')	43	51	487	151	244
exactely	65	291	371	236	345
95th	98	266	287	10	358
housing	88	29	299	94	67
python-3.3	46	206	151	685	380
unresponsive	90	187	108	624	248
index.names	29	28	306	791	473
naturally	82	232	182	209	382
function	0	214	140	684	231
funnel	23	116	299	581	67
funneg	98	106	317	684	231
delivery	80	56	445	41	749
construction	74	50	386	663	359
''`	76	185	452	415	413
make_lite.py	55	174	408	247	455
delivers	29	28	306	122	508
.idxmax()	43	47	68	76	419
illustrative	27	137	459	15	421
count	98	146	445	41	639
matplotlib.colorbar.colorbarbase	58	155	240	495	162
'']	43	105	487	145	244
official	83	254	234	302	565
smooth	53	151	238	720	762
text.usetex	73	166	134	764	862
bearing	33	176	282	617	725
wifi	23	250	114	479	604
dayfirst=true	76	185	322	51	189
timespan	80	35	299	77	333
recognize	29	28	152	601	638
kingston	35	238	326	187	336
denote	74	232	37	746	868
np.logical_or.reduce	87	52	198	770	714
.get_loc	92	104	23	733	154
store-day	78	93	445	41	984
.dropna	44	164	181	700	827
variety	38	6	159	78	79
outer-product	40	64	154	150	981
ps2pdf	73	125	248	91	304
hpc	96	174	69	785	729
_article	43	72	93	204	410
lil_matrix	16	94	333	455	788
_ndframeindexer	9	109	331	594	386
2015-05-17	67	181	58	24	888
baffling	29	231	395	335	473
metallicity	33	23	282	638	725
s.apply	87	55	493	76	593
matrix	16	94	333	455	788
data_columns=true	76	68	379	217	502
borderline	88	283	100	497	463
0.50	98	194	61	606	10
lambdify()	19	214	295	684	761
1366	47	224	273	155	622
exprs	47	224	30	155	699
scipy.stats.scoreatpercentile	19	214	140	684	782
lineplot	61	136	175	158	847
bytearray	70	100	357	332	405
consolidated	86	91	6	107	953
statsmodels.api	81	88	110	739	183
setmember1d	19	180	55	337	89
oldest	80	56	124	723	435
formating	32	290	420	403	898
pyplot.clf()	6	75	227	173	568
lgpl	96	1	69	461	648
pth	30	162	478	247	344
slowest	82	180	55	337	89
numpy.linalg.svd	16	94	462	782	800
blanket	82	185	389	716	215
str.extract	92	156	109	512	808
distort	37	151	467	207	449
pta	12	78	52	133	272
pyplot.py	50	145	225	27	927
set_value()	22	197	497	534	463
-related	30	162	80	247	564
t-1	72	186	242	531	56
owning	22	184	153	358	282
.sort()	44	175	158	524	280
upload	27	293	27	420	127
skipna=true	87	164	2	621	130
indices	75	148	127	587	77
.duplicated()	44	134	68	155	827
editted	65	118	116	407	887
pyfunc	0	275	295	684	231
como	15	200	64	550	888
29th	80	163	254	723	72
array_length	70	106	74	594	681
self.values	0	224	180	424	881
re-enable	90	171	388	190	629
codec=	63	144	170	16	721
config.py	50	162	118	483	927
established	38	1	17	317	79
+	11	234	4	531	56
0.3s	88	197	55	574	89
ptr	48	184	153	358	681
gropuby	92	193	162	155	612
alp	11	0	242	215	19
reconstruction	28	151	106	631	762
hmmm	65	291	258	407	887
counters	82	297	461	776	903
textures	84	230	128	607	353
extremly	82	50	100	497	463
notions	10	227	159	321	79
python-related	17	43	80	500	564
167197	71	274	268	305	175
codecs	73	222	367	107	444
brentq	79	10	324	416	13
0.38	15	272	61	225	544
0.37	15	272	61	606	10
0.36	20	119	259	757	786
0.35	11	194	61	606	10
0.34	15	211	61	606	10
0.33	15	211	61	606	10
0.32	77	194	269	606	227
adminarea3	43	200	93	463	708
k2arr	1	274	112	305	159
aka	74	232	37	746	36
-14	60	218	269	606	212
diameter	33	288	282	617	138
secure	23	68	119	478	126
col_num	52	130	273	284	792
pacakge	83	170	80	197	848
initialize	74	232	386	680	359
overplotting	61	31	394	780	851
off-site	34	254	35	669	994
glance	29	231	143	334	669
+log	11	27	4	215	56
linearly	77	151	97	646	340
experimentation	17	62	88	161	746
chooses	74	117	152	58	638
choosen	98	146	454	796	984
np.isnan()	19	214	198	13	782
reproducibility	55	231	106	537	507
temp.linux-x86_64-2.7	50	259	277	117	160
fractions	57	89	8	788	898
nonunique	3	156	49	354	125
adjacency	71	297	333	455	329
snarky	34	190	307	590	216
ammount	88	283	373	549	236
rootdir	76	144	379	217	413
continual	3	146	6	587	868
tariff	78	200	132	479	604
r.close	43	134	93	727	622
permits	22	85	294	691	305
skip_footer	76	185	322	51	698
elegantly	82	241	378	40	29
16gb	85	182	480	785	236
il	72	130	473	743	792
pnpoly	0	224	306	424	874
quiver	61	136	208	319	326
unstack()	92	156	78	763	971
mid-day	80	56	299	723	897
unreadable	82	241	395	334	327
logical_or	19	214	198	113	135
pylab's	64	136	140	626	847
unsatisfying	82	241	395	334	327
indifferent	10	43	377	396	354
altitudes	33	288	135	646	744
bcast	9	85	71	349	807
v1.7.1	85	276	151	157	380
wc_class	81	88	110	739	183
ordinary	74	232	152	744	382
if	29	28	246	209	472
fudge	77	266	467	574	366
grown	23	257	294	429	275
historgram	37	136	175	22	847
doable	82	241	378	334	327
bday	80	35	447	77	333
multiprocessing.manager	9	85	71	349	807
mayavi	61	6	278	158	450
stefano	27	137	116	15	421
l-bfgs-b	79	22	324	566	13
usecols	76	54	322	51	189
beautifulsoup4	81	5	110	165	584
lnk1120	67	244	95	24	323
09:10	67	213	95	185	51
09:15	67	260	12	372	958
regularly-spaced	53	176	339	617	908
greek	73	166	134	131	862
green	20	119	259	757	786
zmatrix	52	19	263	284	855
r1c1	86	91	367	107	86
initial_theta	1	275	112	129	292
eigen	16	94	462	150	694
parsed_json	43	72	223	4	260
plt.hold	6	46	345	418	356
zen	32	173	479	200	215
tricked	65	291	258	791	887
6.7	15	272	61	225	544
6.6	15	272	61	225	544
6.5	15	272	61	225	544
staggered	74	232	37	646	36
6.3	15	272	61	225	544
subindexing	3	104	182	354	125
6.1	15	272	61	225	544
6.0	15	272	61	225	544
mayor	72	200	132	550	888
6.9	15	272	61	225	980
6.8	15	256	236	196	980
sm.ols	79	23	349	363	620
1.0s	77	146	317	631	509
somewhere	29	28	227	791	472
adaption	27	137	116	97	328
iplots	38	1	80	317	392
numpy.vstack	19	294	296	278	470
quant	78	200	223	4	832
df.groupby	44	164	181	700	419
then	74	232	246	209	36
them	74	232	246	209	36
affected	29	171	306	122	673
fragment	27	137	459	15	421
thee	68	13	371	97	589
amenable	82	50	291	497	29
lapack_lite	96	174	408	90	842
findcontours	84	230	428	166	854
they	29	232	159	209	36
thet	65	28	227	407	472
ther	29	28	227	791	655
6.x	85	30	480	393	858
1.01	60	194	61	606	954
1.00	15	284	61	606	110
1.03	11	234	4	606	743
1.02	15	194	495	606	10
1.05	60	138	495	651	10
left-join	44	156	65	587	125
1.09	15	211	61	606	10
classified	78	250	252	584	604
backgrounds	73	31	248	276	303
system32	30	162	362	247	344
a.ravel()	1	57	41	232	280
ts.asfreq	43	149	447	460	612
block-diagonal	16	64	127	150	95
classifies	28	250	114	638	616
classifier	28	26	354	135	816
minicube	33	281	287	719	358
occurrences	98	146	445	41	639
voxel	99	288	213	674	744
hosted	83	84	27	393	467
!!!!!	35	207	371	205	767
dialects	38	1	119	317	126
vessels	78	258	82	204	832
lvaro	35	115	409	407	336
np.pi	11	234	242	664	743
i3	71	30	480	305	263
ynew	72	102	418	129	56
putty	83	84	376	184	831
subsequences	71	64	127	519	684
people's	34	190	247	321	275
np.identity	1	57	41	232	21
incorporates	74	137	459	525	421
pandas.util.testing	92	39	78	457	512
2010-01-01	67	260	12	372	958
recovering	29	28	306	122	161
installs	13	128	5	104	482
x-axes	37	290	175	391	388
patchcollection	25	161	208	49	109
iiuc	92	156	78	763	971
waterfall	61	136	278	626	854
incorporated	35	207	116	187	336
_slightly_	65	275	55	470	89
programme	22	187	108	361	248
record's	98	258	445	41	377
f.plot	60	155	240	418	12
chopped	37	31	467	780	851
organize	3	50	37	110	625
outlying	99	151	106	646	851
onclick()	9	237	397	436	699
up-voting	35	207	3	702	216
matplotlib.widgets	90	69	278	158	384
premultiply	16	94	462	782	800
cross-posting	34	173	307	97	216
"]')	43	200	231	71	567
''))	43	105	487	71	593
airs	77	29	77	623	563
inflate	40	50	10	663	122
40th	98	281	454	796	744
histtype=	51	155	195	557	12
enhancing	10	254	234	445	565
numpy.int16	70	100	325	332	522
mingw\bin\	50	145	133	138	204
binned	51	136	63	22	780
basecommand.py	50	145	118	483	679
cloudpoint	99	288	11	315	908
glorified	38	50	479	691	122
raspberrypi	23	30	480	785	467
binds	9	237	397	436	864
splendidly	35	207	274	205	669
rgb2hex	20	119	259	49	845
5mb	88	283	373	549	236
'')`	32	51	487	151	244
solely	10	227	17	587	305
a.max	87	57	121	673	608
interests	99	250	159	321	79
.pdf	73	125	248	276	304
manner	74	232	37	40	382
strength	77	14	114	710	210
freq_chan_unfolded	52	19	112	471	881
ypt	60	102	240	193	910
textctrl	90	187	32	624	536
-9999	84	79	424	414	203
track_id	98	258	82	796	377
unstack	44	156	78	763	971
xjv	72	178	154	150	75
fname	76	199	286	283	413
conducive	82	241	100	497	463
new.map	29	106	306	471	508
400,000	88	160	220	80	54
compiler=mingw32	30	170	244	481	30
nodeid	75	12	461	471	806
prohibitive	88	283	100	497	463
cumulatively	98	146	148	98	347
sub	74	232	6	448	36
__pyx_t_npy_float64_complex	70	204	29	790	64
neighborhoods	99	288	185	646	744
pd.to_numeric	92	39	309	183	934
accounted	10	151	17	631	999
exponentially-weighted	79	193	148	98	347
2*10	71	274	268	305	60
py_ssize_t	70	204	74	790	64
notion	10	227	17	631	305
fussy	10	43	395	334	803
heuristics	10	151	106	631	970
sebago	52	52	198	476	714
subtly	10	231	17	335	568
-len	11	0	180	215	19
mock	27	137	403	15	421
endianess	70	100	325	86	22
7.2	15	272	61	225	544
7.3	15	272	61	225	544
7.0	15	228	61	225	544
d=	47	224	58	366	588
7.6	15	256	236	196	980
7.7	15	256	236	514	980
7.4	15	272	61	225	980
7.5	12	272	61	225	106
subtle	10	231	395	335	568
7.8	15	272	61	514	980
d5	78	130	454	796	984
d2	72	130	431	174	624
d3	23	125	430	149	625
d0	72	130	431	798	624
d1	72	130	431	174	624
numpy.meshgrid	19	294	296	291	601
latent	28	14	267	639	841
alluded	34	118	116	97	142
guidance	68	190	465	432	343
appended	3	110	386	155	673
fast-path	47	134	26	155	410
back-and-forth	34	173	143	97	589
summarizing	3	50	6	354	866
setup.py	13	261	486	481	368
dn	72	186	25	174	756
do	74	232	246	209	472
dl	0	275	110	784	183
dm	11	186	242	365	56
-120	60	102	173	418	162
dk	44	164	93	204	832
dh	72	130	82	174	832
di	47	297	280	556	903
df	44	134	68	155	827
dg	0	130	493	174	306
dd	80	35	26	125	742
de	47	115	430	550	588
-128	57	100	51	592	922
matplotlib.patches.rectangle	6	161	90	543	109
da	47	186	242	129	56
non-array	75	106	421	756	113
pandas2ri	29	171	389	716	568
pip3.4.exe	50	145	486	138	204
dx	72	186	242	129	56
re-construct	40	64	154	98	382
dv	72	186	25	129	292
dt	47	35	245	727	852
du	72	186	25	129	292
dr	47	186	25	703	392
ds	47	183	68	556	622
dp	0	55	201	664	743
infrequent	34	190	307	590	275
test.shape	52	19	263	284	855
file_data	76	49	30	283	170
multipage	73	125	248	276	304
_full_	27	293	305	420	579
c2h5oh	35	207	409	187	336
unassigned	98	106	93	605	602
agg()	92	193	78	31	121
facts	34	43	377	321	803
depends	10	117	152	768	999
lowpass	77	292	428	430	547
o_o	65	291	258	236	345
co2	80	78	77	133	272
symmetric	16	94	462	782	800
,.....	67	130	256	145	272
,....,	72	130	431	174	624
props	35	238	371	187	308
sloooow	37	31	100	534	463
collections.defaultdict	19	12	455	480	806
imsave	84	219	102	607	427
excel-file	3	110	6	107	519
n_bins	60	142	63	557	780
packaged	83	128	5	197	637
pd.series.diff	82	180	55	285	612
ctypes	55	204	29	790	64
xfinish	60	194	263	485	221
packages	13	128	5	197	482
downgraded	46	221	151	681	284
cos	11	234	242	531	56
cor	6	139	18	324	543
kdeplot	51	136	195	272	847
cow	23	115	430	195	423
cov	16	275	121	562	800
coz	29	28	410	209	472
.shp	86	222	329	260	405
coe	87	57	112	770	714
cod	78	150	252	479	423
with_labels=false	58	155	240	495	162
requests	23	85	294	349	257
com	47	68	430	478	126
col	52	134	68	155	622
coo	16	94	333	455	788
con	47	68	119	478	454
abbreviate	64	290	166	706	76
guis	90	1	278	158	450
np.logical_and	87	52	198	113	985
polynomial	79	10	324	363	620
*12	47	201	180	50	99
*10	93	194	173	606	10
flexibly	82	241	378	573	29
sub-columns	3	110	6	354	125
rfftn	1	57	112	232	726
longdf	3	93	65	155	410
,....	47	67	223	145	640
,...,	72	130	431	683	306
df2.set_index	44	2	181	700	895
locationid	43	72	68	265	696
dozens	74	160	159	94	746
trusting	17	43	377	236	118
print-out	29	28	306	122	508
gui=	64	15	452	226	889
families	78	250	163	425	798
exp()	57	275	201	664	743
coherent	28	14	106	710	327
629.5317666666666	15	157	64	296	837
physician	78	93	223	463	984
gentle	68	190	377	451	98
look_for	98	148	82	558	965
formatting	32	16	420	403	898
abrupt	61	231	175	631	303
records_data	43	72	231	265	708
voice	23	14	365	429	257
beer_name	43	47	231	265	708
store_id	3	110	243	390	965
output_items	52	220	158	486	757
pd.set_option	58	243	452	171	290
9.74	15	157	64	296	837
ax.plot_date	60	44	418	418	162
hebrew	32	16	420	131	898
comparative	82	13	106	321	328
biomed	83	206	178	184	781
confirmed	29	171	306	791	902
2014-08-29	67	213	95	185	51
punctuation	32	16	420	482	768
ep1	47	134	93	155	622
extremes	77	31	443	757	786
ylin	75	64	10	519	981
plates	77	250	77	646	563
h*w	1	142	268	305	60
word2vec	28	26	354	135	816
.split()	43	51	487	151	244
userids	78	93	445	41	705
read_frame	92	68	119	478	824
evil	10	1	69	396	741
hysteresis	61	151	175	626	762
norwegian	32	16	190	477	444
hover=true	58	44	90	341	599
,..,	72	4	431	516	624
,...	47	130	162	133	888
self.weights	0	224	295	684	881
kept	29	171	306	791	673
dishes	98	146	454	796	984
scenario	10	137	459	15	421
thx	65	207	371	205	767
1977	67	78	52	133	272
1976	12	279	162	528	52
thu	67	200	231	2	24
1974	67	200	256	133	888
recurse	9	109	397	594	589
kyle	35	207	371	205	336
lambdify	19	214	324	416	761
1970	80	35	245	781	920
iminuit	34	190	307	590	216
vbeta	75	64	154	150	981
dominating	88	266	100	574	463
epd	13	128	5	461	637
tha	74	28	306	122	868
textsize	64	290	467	207	668
eps10	73	125	248	276	304
00.006000	67	213	95	185	51
repost	34	190	307	702	216
under-the-hood	38	241	17	500	79
transformer	28	26	168	135	816
hills	28	14	267	429	563
flooring	75	214	17	756	382
27th	80	163	254	723	72
alchemy	86	68	119	478	126
spread	77	29	467	94	340
transformed	74	232	37	746	673
zillion	22	147	159	361	905
---------	15	267	58	550	888
behind-the-scenes	6	161	390	732	389
2^30	88	142	373	139	60
mocked	27	137	459	15	421
df.year	43	47	309	507	852
maxval	52	194	269	43	221
.45	15	194	162	606	212
aray	29	195	306	122	673
caps	51	31	24	212	664
xdata	60	44	418	129	388
networkx.draw_graphviz	64	6	278	543	329
korean	86	110	329	107	519
vertexes	99	288	32	572	138
aram	60	155	240	495	285
standardization	79	23	332	638	531
new_ids	1	19	461	471	622
table's	3	110	182	354	125
arange	93	123	173	291	361
self.train_stack	1	19	112	471	881
qxq	72	186	25	683	756
reassign	74	237	158	190	629
overfit	28	26	354	269	128
security	23	84	69	128	67
;-(	29	28	227	791	473
x_train.shape	1	274	112	305	159
system-site-packages	13	170	50	481	174
sends	23	85	294	595	257
s100	70	105	74	53	475
.tail()	92	149	78	105	612
cxfreeze	83	168	178	197	467
critique	34	190	3	702	735
expanding_apply	92	193	78	105	121
df2's	44	93	82	558	410
fillvalue	19	12	455	480	806
multi-variable	79	10	324	744	382
purple	20	119	259	757	786
df.index.tolist()	44	134	461	471	827
comments	34	238	116	187	336
senders	3	110	243	479	604
someway	29	13	246	190	472
mpl's	64	125	390	732	389
minimization	79	22	324	566	13
rescale	37	290	269	207	388
pyfloat_fromdouble	70	204	74	790	64
graduates	77	250	77	623	293
10times	55	180	55	337	89
numpy.asarray()	75	99	421	601	979
graduated	17	62	88	236	275
dtype=uint16	48	219	102	305	60
b.dot	11	178	4	562	726
i.m.o	82	241	291	334	327
impenetrable	17	62	143	161	746
theirs	29	13	80	173	589
opinion-based	34	190	307	590	216
continous	61	136	175	22	625
deconvolve	53	101	428	166	382
lolims	37	290	317	631	683
dilemma	68	43	465	432	343
pays	34	50	143	497	118
subinterval	79	10	324	487	531
delighted	68	190	116	525	328
python.sublime-build	30	162	478	247	344
balances	28	266	148	574	347
padraic's	35	238	187	187	308
work-arounds	27	293	403	420	579
balanced	88	283	100	728	616
dispersion_plot	81	88	110	739	584
searchsorted()	19	42	296	13	512
unchanging	99	103	97	524	868
.config	30	122	478	350	181
1's	98	146	454	680	509
fight	17	190	80	500	118
accordingly	74	232	116	190	629
150,000	88	160	220	80	54
-thanks	35	207	371	205	767
ax.set_yticks	58	44	494	642	162
so-called	74	232	152	200	638
calcfield	0	275	295	684	231
encodes	74	232	168	746	141
encoder	86	26	168	135	381
encoded	32	16	190	477	444
other=nan	0	220	2	621	130
reset	3	171	388	190	629
str.contains	92	156	109	512	808
responding	90	187	108	624	248
dataframe.merge	3	156	6	587	125
curand	55	85	69	128	507
page_id	98	12	461	41	639
picamera	23	230	128	607	257
unhashable	63	83	283	715	286
read_csv	76	54	322	51	698
sklearn	28	26	354	135	816
np.dtype	70	59	74	53	522
tupline2	63	224	389	361	198
tesla	96	30	480	785	729
statistic	79	23	332	638	11
flaw	10	231	17	590	215
evidence	10	231	17	791	812
physical	77	283	373	128	236
higher-dimensional	75	64	10	231	650
handmade	82	137	116	525	328
array-value	87	52	4	673	221
re-generate	27	137	37	110	673
interested	10	43	17	209	999
catalog.logg	52	52	180	290	437
double-quotes	32	16	420	403	768
f-test	79	23	332	487	531
mac's	83	84	178	197	467
polite	34	190	307	702	216
traindata	47	224	30	283	881
sources.list	30	259	478	159	960
sum-of-products	55	214	422	756	219
i*j	1	178	473	232	726
modules	83	88	80	197	564
together	3	232	6	110	953
myplot()	61	136	175	626	847
notification	34	190	307	702	915
multiindex.from_product()	92	156	78	354	125
.flat	19	294	296	453	280
t.txt	76	199	30	283	754
appdata	30	259	277	381	960
numpy.spacing	57	89	8	559	907
global	9	237	397	436	864
datum	33	34	135	4	385
known	74	232	37	173	868
axis-1	87	148	154	139	981
anand	35	238	326	187	336
np.maximum.accumulate	19	42	296	13	512
rectangles	61	31	467	212	138
supposedly	29	117	306	15	382
szl	65	291	258	407	887
zone	80	285	86	781	920
flask	23	84	376	184	127
graph	61	136	175	22	951
flash	23	84	489	72	127
pandas.dataframes	88	50	100	139	135
rightmost	98	31	443	191	964
uniform_filter	19	101	125	684	782
permanently	30	171	388	190	629
humm	35	207	274	205	767
explode	22	50	100	128	953
jreback	35	207	124	604	435
ny_winter_dat	52	0	214	485	288
orthogonal	16	94	462	150	988
goertzel	79	292	428	430	547
anonymous	9	237	397	436	864
forgiving	10	241	395	500	812
blast	17	43	377	396	275
responders	34	118	307	590	216
bitshifting	82	241	341	500	246
altering	74	232	386	548	526
fragile	82	241	395	334	327
numpy-1.6.2	13	261	178	383	368
{column	92	12	65	776	903
numpy-1.6.1	83	45	244	165	960
p	72	186	25	683	756
hdf5store	86	68	426	611	820
eventlookup	43	47	493	76	593
netcdf3	68	62	80	432	746
pylab.scatter	60	155	208	272	910
netcdf4	86	222	329	260	882
ncdump	86	162	329	122	508
repetitive	82	241	378	334	463
lastalda	74	232	306	209	36
levenberg-marquardt	79	22	324	566	13
bold	73	166	134	131	862
re-sampling	18	149	447	77	612
versioned	83	170	80	202	435
noloop()	88	197	55	337	89
relational	23	50	119	619	866
coefficents	79	10	332	638	620
satisfy	98	146	317	605	602
supporting	38	1	17	317	79
explosion	22	231	389	173	568
2014-04-29	67	213	95	185	51
floatingpointerror	63	83	389	428	57
commandline	83	15	189	540	818
adressed	34	118	116	97	142
apache	83	84	376	184	831
hoops	17	40	143	500	327
appears	29	28	306	791	473
outer_df	43	72	68	265	708
a_array	75	106	421	471	981
numpythonic	82	241	378	573	29
precursor	23	14	128	317	118
gbpusd1d.txt	30	162	30	247	754
.exp	86	110	27	534	161
exiting	90	187	108	361	248
matplotlib.mlab.magnitude_spectrum	0	101	140	684	231
trial	29	62	272	94	874
menmeans	60	102	418	129	221
wx.panel	6	69	46	380	384
.spec	83	162	486	247	344
.exe	13	261	486	797	368
inference	79	26	168	135	816
jar	22	84	250	39	118
9.10	83	206	211	202	380
last_received	52	0	263	290	288
immediatly	6	46	345	572	356
rarely	10	231	17	500	463
take()	19	294	296	231	601
test_func	75	106	140	684	231
2**n	89	142	207	139	90
pixelwise	98	146	497	139	744
entities	3	250	159	94	798
covariant	16	94	462	782	988
y_m	72	186	25	129	756
live	23	187	294	158	257
jam	82	50	341	110	118
marginally	82	180	55	337	89
entrance	78	150	132	463	888
towers	99	103	185	293	744
ctype	70	204	158	790	979
hyperbolas	33	176	282	617	725
postgresql	86	68	119	478	126
misconception	10	231	17	335	999
clumps	71	64	268	680	509
markerfacecolor=	20	155	240	603	285
logarithm	79	23	332	487	62
jab	35	207	371	205	767
jac	79	269	324	566	13
labeled	74	110	454	746	851
indexed_orders	3	110	6	155	410
incidents	78	56	445	41	604
1.2.2	83	206	178	202	380
spx	47	200	30	204	754
spy	80	116	430	581	67
dedicated	23	85	294	317	866
dxx	52	52	198	770	714
numpy.zeros	48	59	41	232	21
m.shape	52	0	41	284	19
spt	43	72	309	727	164
dataframe.lookup	19	294	296	573	512
sub-select	3	156	65	587	602
substring	32	286	163	253	808
spl	47	224	418	424	881
purity	82	43	479	537	720
dcount	43	72	309	727	987
dxf	73	125	248	276	304
distinguishable	99	31	259	757	786
pre-defined	74	232	37	746	868
productive	82	190	359	590	328
24gb	88	182	373	549	236
bonds	78	200	132	406	708
criterion	98	227	317	457	602
allowable	57	227	100	654	623
test.py	30	162	478	247	344
staircase	99	151	185	191	988
sp1	85	223	264	650	634
sp2	43	223	82	558	965
sp3	85	30	480	393	858
uint	70	100	74	332	522
csv.writer	76	54	382	283	698
compatibility	46	221	124	202	435
chaco	38	6	278	158	450
remember	65	28	246	791	472
parallelisation	55	174	341	537	651
candles	80	86	299	77	466
explicit	82	241	246	573	215
ghz	85	30	480	785	858
take_last=true	44	164	181	700	895
progressively	22	13	485	574	214
idiosyncratic	10	231	80	500	999
gages.txt	78	110	77	182	754
tagged	34	173	35	97	142
colz	44	93	82	558	965
.isin()	92	156	78	105	971
colx	44	93	82	558	965
coly	44	93	82	558	965
indeed	65	28	274	407	887
colt	55	1	408	90	651
cols	47	134	65	155	622
graphviz	73	125	278	158	329
coll	60	155	240	495	162
tagger	28	26	492	135	816
df.h.shift	11	234	180	215	99
cold	78	56	148	149	423
multi-regression	28	26	354	761	816
colb	43	258	82	353	708
birds	23	150	132	149	423
cola	43	93	82	353	965
non-zero	98	146	127	680	509
df.convert_objects()	92	39	1	285	934
log-scaling	37	290	175	706	76
acknowledge	10	190	116	500	345
selves	6	161	90	572	370
amazon's	83	84	376	670	467
""`	32	16	487	415	768
broadcasts	40	64	154	231	981
df.loc	43	72	68	733	154
basemap's	61	176	282	255	908
gains	82	180	55	537	246
sub-sample	3	232	37	587	616
col=	51	17	351	4	385
halt	88	283	373	549	236
col6	43	93	82	204	804
np.imag	11	57	418	562	591
col4	44	93	82	558	965
col5	78	93	82	558	965
col2	44	93	82	558	965
col3	44	93	82	558	965
col0	52	52	180	290	437
dimshuffle	19	294	296	231	470
equidistant	33	288	339	617	340
half	77	266	22	574	668
recap	29	13	176	791	999
plt.plot_date	60	205	346	125	879
valarray	75	12	455	480	806
hall	17	43	267	396	841
halo	77	13	114	757	563
wont	29	28	410	209	196
ignore-installed	13	170	50	481	174
"")	32	51	487	151	244
anti-pattern	10	241	17	500	117
matplotrc	73	166	452	764	181
"""	32	224	30	424	736
pycharm	83	15	189	540	818
entirely	10	28	227	209	999
feat1	70	105	74	770	764
queryable	86	68	379	285	865
feat2	70	105	74	332	764
em	28	26	128	429	816
el	47	74	233	550	888
en	47	200	93	550	475
ei	57	186	317	141	756
eh	65	291	258	236	812
trade-offs	10	151	106	537	970
ee	28	250	430	149	275
ed	35	207	409	205	336
nanargmin	19	42	296	13	512
ef	47	102	93	556	622
ea	78	93	82	204	965
indnz	1	148	273	471	77
eb	13	128	5	670	482
goose	17	62	250	236	180
fires	90	187	32	624	112
ey	72	186	25	150	756
ex	47	232	37	746	36
ez	38	14	128	150	293
eu	34	13	116	788	328
new_arr	1	19	112	476	855
ew	22	91	388	94	294
ev	11	234	242	664	743
eq	47	214	295	684	231
ep	47	186	25	133	588
8.75	33	281	269	528	212
er	47	224	246	209	472
out.h5	76	144	379	217	502
shown	27	137	459	122	421
opened	90	171	329	107	208
space	37	31	467	207	668
list-based	82	180	341	537	219
m5	72	130	162	530	616
pandas.panel	3	156	6	663	125
`'`	32	16	420	403	768
0.6.28	13	170	244	165	174
receiving	63	83	283	715	39
viable	82	241	341	497	463
shows	29	117	306	122	508
inevitably	10	231	17	500	999
lmt	80	285	245	781	920
size=1000	93	123	173	50	361
e=	11	234	4	562	726
fire2	43	200	82	204	708
multialignment	58	44	265	651	683
line-by-line	86	147	497	534	219
e4	72	130	162	133	624
e6	70	105	93	53	764
e1	72	130	25	174	756
e0	43	52	68	265	708
e3	72	130	25	174	624
e2	72	186	25	129	756
rearrangements	78	200	82	463	792
milestones	3	110	6	587	67
84.50	67	213	95	185	51
gb2312	76	16	190	477	444
iqfeed\	76	199	286	283	987
`''	32	51	487	177	244
mpl_style	64	185	452	641	903
stdout=	76	144	327	147	383
promotion	63	83	389	357	979
lambda	87	55	493	76	593
0d-array	75	106	421	519	981
benefited	34	62	247	97	746
striking	61	14	106	631	762
omitted	29	263	306	468	655
xlswriter	64	68	275	285	444
50hz	77	292	20	430	227
orthographic	33	176	282	617	908
comprises	74	117	37	746	161
impossible	10	241	395	334	999
forwarding	90	84	376	184	831
size	71	142	213	207	668
sheer	88	180	100	537	246
sheet	86	91	367	107	86
silent	10	231	389	716	568
categorical	3	26	168	135	816
bookmark	27	13	143	39	421
implimentation	38	6	125	761	382
pythonhome	30	170	244	165	181
df2.size	98	134	317	558	512
\xlrd\	50	145	225	168	679
f_1	32	51	487	177	660
f_2	16	94	462	150	800
initialising	74	263	386	534	359
friend	35	207	371	97	336
useage	82	50	153	691	122
mostly	10	231	17	500	79
numpy.floor	1	224	112	424	881
plat1.csv	29	263	420	468	655
edgelist	99	26	280	623	329
transverse	74	176	135	122	908
optimise	82	180	341	537	219
xestime	1	235	349	539	412
$10	78	116	430	149	67
ax.set_ylim	58	44	494	642	388
f_c	72	186	25	683	756
f_l	89	234	242	531	56
f_i	72	186	25	129	756
10:00	67	260	12	372	685
f_k	11	234	242	531	56
changepoint	28	14	148	661	363
f_s	72	186	25	683	756
ylims	37	290	443	207	449
sublime	83	15	189	540	818
x=-3	33	281	287	719	358
x=-1	61	281	287	719	358
surname	78	110	243	390	604
angel	68	207	371	205	767
correction	65	207	258	407	887
__getattribute__	9	109	331	594	386
13th	80	163	254	723	72
stash	22	85	397	110	629
tick-labels	37	290	467	706	76
notimplementederror	63	83	283	715	39
rectbivariatespline	53	101	238	720	396
output.csv	76	199	286	283	754
trellis	61	136	175	22	847
z-scores	3	146	148	98	347
scipy.interpolate.regulargridinterpolator	79	101	125	703	512
once*	81	162	110	247	588
objective	79	10	324	566	13
ufunc.at	19	214	125	13	512
diagonal=	60	155	240	495	285
google-fu	29	62	88	161	746
q&a	34	173	307	669	216
collections.counter	19	12	455	480	806
verticalalignment=	58	138	265	651	224
unmelt	3	110	6	354	125
000000	47	224	162	601	622
largish	88	50	100	94	616
mydata.txt	76	110	30	283	754
numpy.astype	70	59	74	332	522
idx-1	52	104	23	733	154
sunset	80	56	26	77	931
diagonals	71	64	127	738	95
nuclear	33	13	143	39	725
dispersed	37	232	159	94	36
.pivot_table	44	164	181	700	895
writer.writerow	76	224	30	177	736
ds2.values	52	0	263	284	288
f.close()	76	199	286	283	736
miniconda	13	128	5	797	482
7-zip	83	261	486	797	368
frame.py	50	145	118	580	429
geography	78	250	132	479	604
ratio	37	243	467	207	449
proportion	77	266	148	574	668
texture	84	195	128	607	353
subfolders	30	162	486	247	344
worthwhile	82	241	359	500	327
nalt	1	102	418	305	175
\pi	11	186	242	531	56
mdates	81	237	397	560	183
event	90	69	32	624	112
9da899b	46	221	124	331	435
posarray	98	19	273	556	622
mid-point	98	266	148	141	221
homegrown	38	62	88	161	746
data1.txt	76	199	30	283	754
verbosity	10	137	305	732	215
ffmpegwriter	63	144	383	616	584
100,000,000	88	160	220	80	54
=1000	43	52	180	290	437
sonar	77	192	365	623	563
start=0	98	19	162	796	428
barchart_demo.py	27	137	459	15	421
everything's	65	291	274	190	284
time.strptime	47	35	346	125	879
reconnect	90	187	108	624	83
df1.reset_index	44	164	181	700	827
aperatureimage	47	195	306	139	60
np.random.randn	93	123	173	348	361
set_ylabel	58	161	90	341	109
nonstandard	38	1	80	500	564
concern	82	180	116	537	246
tackling	17	62	88	432	803
avenue	82	62	395	525	836
justifies	10	180	17	537	246
datastructure	3	50	426	663	359
justified	10	118	106	631	970
ambg	52	148	160	284	622
dirviento	47	130	25	550	888
50000	88	142	220	80	106
pthreads	96	174	408	197	729
2^n	89	142	207	139	90
distribute_setup.py	30	170	486	165	960
rollstocks	3	134	65	155	622
article	34	254	234	302	565
np.amax	87	57	121	673	608
v3.4.3	85	206	42	685	380
attaches	9	61	388	436	370
element's	71	106	421	73	684
ballpark	79	151	106	631	970
_execute	0	224	30	44	231
1.1760001652770353	11	234	242	172	99
groupsize	75	148	100	139	512
timedelta.total_seconds()	92	214	275	560	979
comes	29	117	306	458	417
classid	3	146	182	587	984
timedanimation	6	109	345	44	807
prefix=	30	170	244	554	174
characterization	10	151	106	631	970
mirroring	37	31	443	191	851
kdeplots	51	136	175	22	847
msvcrt.dll	50	145	118	138	204
moreover	74	232	306	209	36
_have_	65	291	246	500	472
scikits.bvp_solver	28	10	324	744	610
0.6.1	46	221	151	331	435
0.6.0	46	221	151	681	621
record_array	75	184	206	476	681
4-d	71	64	268	519	684
dangers	10	231	17	500	215
rebuilt	13	171	211	104	485
.append	52	12	461	471	260
vector-vector	55	174	408	90	651
1ms	88	197	73	337	89
observers	98	146	454	646	744
1mm	88	160	220	80	54
covers	74	117	152	58	638
stems	10	231	17	173	378
ndim=1	48	204	85	790	64
1mb	88	182	373	549	236
countless	29	62	247	161	746
4-1	11	19	4	215	19
4-5	88	197	220	80	217
4-6	88	197	73	196	217
developing	23	1	377	396	866
4-8	88	197	73	528	217
geodetic	33	176	282	617	908
pythonanywhere	23	84	119	478	126
wx.app	6	69	46	380	384
shift()	92	156	78	614	971
fortran90+	55	174	29	90	651
3.3832500e-07	15	157	64	296	837
soil	77	250	77	520	574
resorting	82	50	341	573	219
bias	79	23	332	638	11
embrace	17	43	88	500	118
ship	83	84	69	461	637
borderaxespad=0	58	138	495	651	224
11.9	15	256	236	196	432
eryksun	35	238	326	187	336
11.4	85	272	61	225	544
media	23	84	430	149	423
11.6	15	256	236	514	980
11.0	46	272	151	225	544
11.1	46	272	124	225	544
11.2	15	256	61	196	980
11.3	15	272	236	514	980
epoch	80	35	245	781	920
shit	65	291	258	236	345
streams	23	85	365	676	257
document	73	125	163	482	798
contouring	99	176	282	271	908
setupext.py	30	122	478	159	181
pedantic	10	118	395	590	999
finish	22	197	250	39	248
mukey	44	93	82	544	965
9x1	16	186	25	150	756
trawled	17	62	247	161	746
non-sense	29	28	227	432	472
fruit	78	93	445	41	604
:]])	52	0	263	290	288
traps	90	1	294	716	215
locality	40	50	153	128	122
trapz	79	101	140	416	314
rder	48	59	2	453	280
0,200	15	194	173	686	393
isinstance()	9	109	331	594	386
042711_u.nc	81	162	478	247	344
pickle.dumps	86	59	357	260	820
redirects	30	162	27	147	127
merge.py	50	145	225	168	679
vectorised	82	214	109	512	808
touch	29	13	246	209	589
speed	82	180	55	537	246
flierprops	64	185	226	641	683
isscalar	9	109	331	594	386
struct	9	204	357	790	405
legitimately	10	151	106	631	999
desktop	30	30	480	785	960
9:34	80	258	254	723	377
9:35	67	260	12	372	958
9:30	80	260	12	372	958
treatment	10	227	17	94	568
martist	81	88	110	739	584
complements	61	31	443	212	138
struck	17	62	395	334	327
xend	33	102	418	719	725
momentum	74	232	148	98	328
real	29	151	106	631	999
hover	90	69	32	624	536
np.float64_t	70	204	74	476	681
itertools.permutations	19	12	461	139	512
read	86	222	329	110	519
usefully	82	241	116	432	571
libraw	38	254	234	317	405
detract	10	190	307	590	812
draw_networkx	6	161	208	543	481
execution	22	147	108	361	248
pounds	78	258	252	796	272
darkgrid	20	119	24	764	664
1-cdf	79	23	332	511	239
newid	3	146	65	155	984
s.loc	52	104	68	290	154
densest	61	176	282	212	138
hacky	82	241	378	573	29
findobj	64	161	90	543	481
uppercase	32	237	420	482	898
legend()	6	161	90	543	481
1.6gb	88	182	373	549	236
hacks	82	241	378	573	215
event-handling	90	85	294	349	112
contour()	25	161	208	319	481
index=range	44	134	260	348	827
duration	80	56	299	77	931
nonzero	75	42	127	605	788
name2	78	93	82	390	965
stringio	76	54	382	306	405
recorded	77	29	77	182	931
bigdata	22	50	100	534	953
conservative	10	151	106	631	812
deficit	98	266	22	574	668
dies	22	283	108	361	248
recorder	23	84	69	676	257
putted	27	137	459	15	421
dtype=float	48	59	74	332	21
felt	65	291	258	236	874
nmf	16	26	354	782	816
credits	34	190	3	702	915
sys.getsizeof()	22	184	153	358	874
ontology	78	56	430	479	604
output.txt	76	144	30	283	754
central	99	288	282	631	762
easy-to-read	82	241	378	573	29
paints	90	187	108	572	214
z's	33	281	454	646	744
chol	16	94	462	782	800
chop	74	263	246	680	118
numpy.linalg.inv	16	94	462	782	800
greatly	68	207	465	432	343
underway	34	173	359	604	208
ones_like	19	294	246	231	782
heater	77	29	148	94	214
researching	17	62	247	161	746
cv2	84	230	102	607	694
operator	9	214	198	113	135
logicals	75	227	17	756	650
data_b	0	148	206	73	77
data_a	52	148	206	284	855
prepare	74	232	37	110	625
bucketing	80	29	148	77	66
data_y	98	148	206	796	77
df._get_numeric_data()	92	39	1	285	934
gridsearch	28	26	168	761	816
data-point	77	281	162	646	340
pdf.fonttype	73	166	134	764	862
compensating	77	151	106	537	246
plt.imshow()	25	46	320	49	356
training_data	47	134	30	424	260
629.508	15	157	64	296	837
0-360	33	194	269	65	922
\approx	32	16	190	477	576
hire	23	150	377	149	275
fontproperties	64	166	90	764	41
5-dimensional	88	160	220	80	54
non_bookers	78	93	243	558	705
bucket	78	56	148	77	66
dabbling	17	62	88	396	803
postive	77	281	259	757	786
data_2	40	134	65	524	363
data_1	44	134	65	700	827
table_name	76	68	119	478	824
builders	38	6	80	317	564
delimiter=	76	199	286	51	413
momentarily	90	187	108	624	536
describe	27	137	227	420	999
moved	29	171	306	791	214
sales	78	56	445	41	604
plt.annotate	58	44	265	651	224
moves	74	13	443	191	214
completeness	27	238	187	187	308
destrain	48	59	180	50	159
mathematica	79	10	324	744	610
storage	86	50	426	611	820
execfile	81	15	189	540	870
mathematics	28	1	377	744	610
textfile	86	110	329	107	519
string2	52	130	25	174	100
string3	43	130	180	145	764
string1	47	134	223	556	622
gaining	82	180	341	537	246
polar	33	176	282	617	908
v7.3	86	222	426	260	478
mutability	9	109	331	594	386
delimiters	32	16	420	468	768
string_	70	99	74	601	979
codecademy	34	254	234	302	565
flattened	40	64	10	231	981
coverage	80	116	299	10	347
d.items()	52	67	461	145	764
fig.colorbar	58	44	494	418	162
strings	32	99	420	601	979
is.na	11	234	222	76	591
.savefig	6	144	18	16	721
large_repr	76	105	452	177	987
pointing	35	207	371	205	336
splitting	3	50	6	534	953
mp4	73	125	248	276	107
magviento	43	200	231	71	255
country_code	80	56	445	41	279
np.busday_count	70	35	309	727	852
boost.numpy	55	1	29	317	354
batches	88	50	100	94	953
sl4a	23	84	69	149	127
referring	10	118	227	791	999
nonlocal	9	237	397	436	864
rtol	57	89	201	559	907
batched	86	50	426	611	820
skip	74	263	246	468	655
=25	52	52	180	290	437
nodes	99	288	280	646	329
=20	87	52	4	770	437
subtleties	10	231	17	321	215
mpg	78	56	445	479	604
amplitudes	77	292	9	430	547
vert	77	151	185	293	762
confidential	27	293	403	420	579
very	82	241	274	497	463
armax	28	26	299	761	816
mpl	46	38	46	202	384
obs2	72	148	273	73	77
1-hour	3	29	299	94	340
mpi	55	85	71	349	431
vera	73	166	134	422	862
me	68	28	227	432	571
1px	37	195	213	674	449
verb	47	106	430	684	699
uncompiled	55	174	80	90	905
mpz	75	99	10	756	979
cartesian_product	46	221	124	604	435
randomness	28	151	106	128	507
rasters	99	176	128	623	293
np.argmin	87	42	206	673	608
%config	58	243	452	16	721
node2	72	297	280	776	329
entires	88	160	220	80	54
statmodels	38	1	354	761	564
voxels2	52	0	263	284	19
opting	10	43	196	500	118
3.14	11	224	162	664	743
pandas.read_table	76	54	322	51	698
self-contained	27	293	403	420	579
answer*	34	190	307	702	216
parser.pyx	50	267	118	580	429
sould	65	28	246	432	196
canonical	82	241	378	573	29
bilinear	53	101	238	720	396
julia's	38	6	459	703	392
accumulator	75	184	485	332	782
citations	78	56	445	479	604
c-d	11	0	180	215	99
jedi	81	170	244	165	870
fractional	57	89	8	788	62
np.poly1d	79	275	295	363	292
unsurprisingly	88	180	55	337	89
friday	80	163	254	723	72
minimize_scalar	79	22	324	566	13
ma	87	224	121	140	608
rudimentary	17	43	377	15	98
misread	65	118	258	407	887
answers	34	190	307	97	216
pyplot.legend	58	44	90	418	481
answere	65	173	258	407	887
strong	10	43	17	500	812
colored	61	136	24	757	786
ahead	17	13	250	39	118
np.exp	11	55	201	664	743
doctest	81	231	395	335	568
permutation	16	94	127	150	800
.tolist	75	12	455	480	806
c-1	72	186	25	683	56
stuffing	74	117	386	58	526
matplotlib.rc	73	166	134	764	862
vc	30	162	244	165	516
add-on	34	1	35	461	142
chunks	86	50	100	534	953
spawned	22	61	71	349	807
easy-to-use	23	1	69	317	866
numpy.fromiter()	19	214	455	480	806
finally	29	232	306	190	36
sweep1	43	72	68	265	708
model's	23	26	37	110	816
injury	78	150	445	479	604
erode	84	230	428	166	353
abridged	27	137	459	15	421
descriptors	84	230	128	663	271
copy-paste	27	293	403	420	579
ohlcv	80	133	299	581	466
numpy.corrcoef	16	94	462	782	800
broke	29	62	88	458	874
yyyy-mm-dd	80	35	245	781	742
hurry	17	291	250	236	345
e.g	74	232	37	746	36
sweeps	77	29	339	94	616
nine	80	56	299	723	897
infer_types	65	185	389	716	655
reshaping	40	294	182	231	678
nonsingular	16	186	462	683	988
spreadsheet-like	38	50	291	619	843
f0	70	105	93	53	764
f1	47	130	93	174	764
f2	72	4	431	174	624
f3	43	105	93	53	764
f4	70	105	74	53	255
f5	47	15	93	540	383
f6	47	15	189	540	818
f7	78	200	252	550	888
f8	70	105	74	53	522
f9	47	200	93	550	888
underflows	57	89	8	654	743
f=	60	57	173	139	743
pushed	22	13	143	39	673
f#	55	1	479	317	354
axes.spines	60	155	452	485	162
exclude	74	146	37	746	655
lacks	10	117	17	525	305
f-	11	234	4	531	56
.dtypes	43	201	309	727	987
1050	12	142	162	528	106
t.t	16	178	462	562	800
1052	47	224	58	424	743
numpy.core.numeric	81	88	110	739	584
chops	57	263	420	788	428
complication	10	231	17	525	305
^1	89	234	207	531	56
zero-order	53	101	125	720	382
fp	47	224	418	424	292
fq	80	56	299	723	410
fr	78	200	132	463	832
fs	77	292	20	430	227
ft	77	292	20	430	547
fu	17	62	274	161	746
fv	99	288	11	315	988
fw	43	200	93	204	832
fx	47	116	430	581	588
datetime.date()	70	35	245	781	920
9.699	15	157	64	296	837
f}	47	205	346	177	576
fa	12	256	55	196	432
fb	47	297	461	776	903
fc	47	142	333	455	788
off-load	55	174	422	756	219
ff	12	181	319	111	465
fg	20	200	132	757	786
fh	76	199	286	283	413
fi	47	200	430	133	588
fk	3	99	6	601	125
fl	43	200	231	265	708
fm	90	292	20	430	547
fn	0	55	295	424	736
fo	35	134	497	534	622
qtgui	81	88	178	739	889
mtrand.c	50	267	118	483	679
prerequisites	13	170	5	197	482
fallen	65	291	258	39	874
documentation	64	254	234	302	565
overnight	22	197	250	39	338
inline	90	15	189	226	818
pre-build	83	28	80	209	472
8640	88	142	220	528	106
width_ratios	58	139	495	324	543
feed	74	232	37	110	141
mpldatacursor	64	6	278	78	450
dsplit	19	294	296	278	470
pyplot.subplots	6	139	90	324	543
750k	88	160	220	80	54
foo1	87	55	295	337	881
foo2	43	134	93	204	764
non-negative	79	94	127	214	988
pyside.qtcore	81	88	110	553	584
botched	83	206	80	197	467
fruitful	17	62	247	161	746
segfault	22	231	389	361	473
pandas.read_excel	76	91	367	107	86
np.float32	70	59	74	332	522
sys.byteorder	10	100	325	86	905
myf2py	81	88	110	739	183
numpy.delete()	75	294	296	231	782
funcformatter	58	44	166	341	184
finer	53	29	339	720	340
left-most	37	31	443	191	964
food	78	200	430	149	423
min_value	87	52	198	770	985
sweeping	10	151	106	631	999
omp_num_threads=4	88	197	71	196	807
gcf()	6	46	345	599	356
desperately	17	43	377	451	803
12min	67	255	223	550	888
zfit	98	148	273	141	397
meddescription	44	93	253	558	965
read_stata()	86	222	329	107	444
fully	29	28	410	209	999
27.82	15	194	490	606	212
-vcodec	76	144	327	147	383
capability	38	6	291	317	79
isn't	10	28	410	209	999
referred	29	118	306	791	638
neil	35	238	326	187	142
expanding_mean()	80	56	447	77	612
cast=true	1	59	295	232	726
backend.qt4	73	166	134	764	810
f.cpp	30	170	133	138	30
34sec	67	255	223	550	888
wacky	29	171	306	791	473
pygame.surfarray.pixels3d	1	57	112	232	512
svm.svc	28	26	354	135	816
numpy.ndarray.tofile	86	222	329	260	405
-builtin	55	174	29	716	564
scipy.stats.chisquare	79	23	332	638	531
scipy.stats.kurtosis	87	275	121	673	608
robert	35	238	326	187	142
since	29	28	306	209	999
col_id	75	148	206	556	622
half-way	29	13	143	458	589
dirs	30	162	478	247	344
pun	10	43	395	236	812
pythagoras	99	288	185	293	762
bass	77	292	20	430	227
ast	81	12	275	480	808
timeline	61	29	175	22	625
asc	98	110	129	524	9
mathy	68	207	371	432	345
base	74	232	306	209	36
coastline	99	176	282	617	563
asd	47	105	93	145	764
maths	17	43	377	396	275
asn	43	200	231	204	832
bash	30	15	189	540	383
pyyaml	13	170	178	197	482
v1	72	130	25	120	624
dip	33	176	282	623	908
persists	29	28	306	173	284
v2	72	130	25	120	624
caption	32	31	420	403	76
distribution's	83	206	468	109	239
\numpy	50	145	118	138	204
subframes	3	156	6	33	125
dis	79	214	185	293	716
architectures	96	30	69	785	729
knots	53	10	238	720	396
singleton	75	106	421	231	981
probability	79	23	332	511	239
encoding	32	16	190	477	444
r**2	11	234	242	531	56
10^6	88	142	220	686	393
reflected	74	171	158	661	673
scrolled	90	187	46	624	536
infinite	79	151	485	654	970
.group	92	134	260	183	827
.5f	32	205	346	177	576
0.4.0	83	206	151	681	380
northing	4	176	135	745	722
doctests	10	1	29	500	215
bitness	83	206	80	197	467
skipna	87	185	452	621	130
shifted	40	146	148	661	363
recursively	74	232	497	534	68
jamie	35	238	326	187	336
.50	15	284	162	133	110
.51	98	258	162	796	306
re-state	10	118	116	590	328
jordan	16	94	462	487	610
alphabets	3	297	454	482	898
include_dirs	30	162	94	138	30
user3666197	35	207	371	187	336
.endswith	47	17	223	4	567
.tiff	84	125	248	276	304
inputfile	76	199	30	283	754
deciding	17	13	143	39	589
users\pauldufosse\anaconda\lib\	50	145	225	168	679
1.4.x	46	221	151	681	252
gedit	73	15	189	540	818
unboundlocalerror	63	237	389	436	864
juice	78	200	430	204	832
20544	98	78	52	796	272
substantial	82	180	55	537	246
karg	64	232	152	641	638
2013-08-30	67	200	132	550	626
scipy.special.binom	19	214	295	139	512
vulnerable	10	13	8	654	215
image.fromarray	84	219	102	401	427
datetime.date	80	35	245	781	31
u.t	16	178	462	562	800
vectorize	82	214	422	537	219
date_start	43	72	298	378	506
jacobian	79	269	324	705	13
1.4.0	46	221	151	681	252
1.4.1	85	276	42	681	621
1.4.2	85	276	42	681	252
towards	10	13	106	631	589
d.keys()	9	12	455	480	806
quote	32	16	420	468	768
rhs	75	104	158	661	154
time-wise	98	146	317	141	509
matplotlib.colors.lognorm()	60	155	320	193	845
inputed	23	137	459	595	421
renormalizing	77	29	148	77	340
secound	37	290	306	706	851
eaten	22	283	373	574	226
salary	78	56	445	41	832
audio	77	192	365	676	946
artefacts	61	151	282	212	303
start_df	78	93	243	390	965
subgroup	3	193	445	31	347
blend	61	31	467	757	786
4-byte	70	100	325	86	22
669	12	279	488	172	96
666	12	256	488	751	96
adamsbashforth4	50	267	118	168	679
matplotlib.pyplot.plot	6	161	208	543	481
tfidfvectorizer()	47	26	354	135	816
662	12	279	180	172	96
multi-gigabyte	55	50	100	691	122
3x1	71	64	268	738	95
3x2	71	64	268	738	95
3x3	71	64	213	738	95
3x4	71	64	268	738	95
image.shape	1	57	112	677	855
0,2,100	93	123	173	50	630
celltool	30	261	486	247	368
maxymoo	35	207	371	205	336
bias=1	16	275	121	562	800
completion	22	15	189	29	818
askewchan's	35	238	187	187	308
userwarning	63	248	283	422	927
df1=	47	224	30	424	736
matplotlib.pyplot.savefig	73	144	248	16	721
pretty	82	241	395	334	463
diff_a	98	148	206	673	77
rigth	37	31	443	191	851
template	84	125	248	607	127
meanwhile	29	28	246	209	472
pois	99	176	282	212	563
trees	28	26	354	135	128
de-coupled	37	290	166	706	76
famous	34	254	234	101	565
1.80	12	272	480	196	544
numbers.app	32	16	329	477	444
1.82	88	256	55	196	432
withe	61	136	175	626	847
column-major	40	184	270	453	280
videocapture	84	192	365	607	405
witht	37	13	175	22	214
scanning	22	50	497	534	161
backtrace	27	293	305	420	579
train.csv	76	162	30	283	754
descriptions	27	254	159	482	328
deploying	83	84	376	670	467
e-e	11	234	242	531	56
revolution	61	151	282	626	951
heads-up	35	207	371	205	767
level=none	87	57	2	621	130
wow	65	291	274	205	767
_which_	10	263	305	468	655
won	78	150	250	479	876
numpy.fromiter	19	12	455	480	806
risks	23	13	69	128	215
notoriously	55	231	80	173	463
fontname=	76	205	346	177	576
spectrumnoise	51	106	63	557	780
french	32	116	430	482	275
np.sum()	19	294	121	673	608
joblib.load	86	222	329	260	405
jinja	73	125	248	276	127
useable	38	85	80	497	564
wee	82	241	143	334	327
openopt	55	10	324	744	610
1.0001	11	234	4	664	743
1.0000	15	211	4	531	743
block=true	6	46	345	599	356
hbar	61	136	175	22	951
conv2d	16	101	125	150	782
circle's	33	288	443	617	908
1e20	98	146	424	414	509
each	74	232	37	746	868
googlers	35	190	116	187	328
weckesser	35	238	326	187	336
subgraphs	37	281	454	646	616
skips	74	117	152	58	655
7d	80	149	447	460	612
likes	74	117	152	58	36
b_0	16	186	462	284	306
b_1	72	186	25	683	756
cumulated	77	29	73	77	931
mkl-cp27-none-win32.whl	13	261	244	138	174
scipy.sparse.lil_matrix	75	50	333	455	788
described	74	137	234	15	421
acheived	29	28	27	122	905
describes	74	117	152	746	638
.whl	13	261	486	797	368
maintenance	55	174	124	128	215
geopy	23	176	185	370	854
marray	78	200	93	463	260
label's	37	290	443	706	76
b_i	72	186	25	683	306
suspicious	10	231	395	335	327
partly	29	231	17	97	874
super()	6	46	345	44	481
wet	78	250	445	450	504
else	29	28	227	209	472
b_x	43	200	93	204	965
like=	43	51	487	151	990
re-test	83	206	80	197	467
rgb2gray	84	219	102	401	427
to_hdf()	22	180	55	537	89
scipy.spatial.distance.cdist	16	101	185	293	716
y-values	37	281	97	646	358
ex-post	79	23	332	638	11
matplotlib.patches.ellipse	61	136	90	158	951
kdtrees	53	6	341	293	716
python-gtk2-dev	13	170	50	104	485
detailed	68	254	234	205	328
numpy.random.uniform()	79	214	140	684	782
voters	34	150	307	590	216
overlooked	65	291	258	407	887
totaldata.fy	60	155	240	495	12
herein	29	28	306	684	473
jpg	73	125	248	276	304
dim2	1	204	112	325	237
dim3	1	19	112	325	237
dim0	72	281	162	174	756
dim1	70	204	74	325	64
terminator	32	16	420	468	768
0.2.1	83	206	178	202	380
svmlight	86	222	329	611	519
legend=false	58	44	195	418	162
anymore	29	28	410	209	473
.tz_localize	43	285	309	727	24
belong	74	281	454	746	868
zvals	75	275	418	557	910
output's	70	99	421	601	979
octal	32	16	190	477	5
interpolation	53	10	238	720	396
dimb	71	64	268	305	981
array.cumsum	11	57	4	215	99
dima	71	64	268	305	981
temporary	22	184	153	691	359
here-	29	28	227	631	999
loc=mu	11	275	242	129	230
.map	43	47	493	76	593
.mat	86	222	426	102	478
2d-arrays	71	64	10	519	684
dims	75	64	10	305	981
uses	74	117	152	58	638
user	23	84	294	595	127
chaning	22	171	388	190	655
75000	43	200	231	71	255
sumofdiagonal	0	19	461	471	497
rodin	35	207	371	205	767
grind	61	13	100	39	118
segmented	99	288	339	166	563
cleary	10	231	395	335	905
rollreturnrandomdf.iloc	52	0	263	290	288
kx=1	60	102	418	129	910
clears	6	46	388	666	356
wedges	37	31	24	780	76
transactional	3	110	6	370	519
_path	81	88	110	553	584
distances	99	288	185	293	716
768	71	142	213	674	175
762	12	283	162	528	60
quarters	80	56	299	723	897
12.400000	15	211	236	514	980
useful	82	241	291	334	628
$	30	51	244	366	174
png's	73	125	248	276	304
df.any()	87	52	198	605	985
guaranteed	10	227	317	587	999
anova	79	23	332	638	11
nth()	92	156	78	105	971
sphinx's	81	162	329	247	405
+pi	11	234	242	531	725
guarantees	10	227	17	691	305
transformation	74	232	128	98	141
...	29	28	227	209	472
..,	1	142	162	305	585
march	80	163	284	723	72
gridspecs	64	139	175	391	847
evaluate	79	10	324	744	231
xterm	90	15	189	540	383
13:03	67	213	95	185	51
tiring	82	241	395	334	327
..!	68	207	274	205	767
13:00	67	260	12	372	958
..?	29	28	227	209	472
numpy.isclose()	19	214	125	13	512
atleast_3d	1	57	112	232	726
18000	88	142	220	80	106
tinkered	64	62	272	161	457
overriding	9	109	331	594	386
pyplot.text	64	161	226	543	699
activex	90	69	46	380	384
submission	27	137	116	15	421
interestingly	29	28	306	791	905
resorted	82	62	88	458	874
a.nbytes	48	274	112	677	60
mgilson	35	238	326	187	336
1.8.1	85	276	42	157	621
32bit	85	30	480	685	858
fig.patch.set_alpha	60	194	495	642	162
pygnuplot	35	207	35	205	767
#plot	61	31	175	42	951
775	12	279	488	751	132
yellow-red	61	31	443	212	786
creation	74	50	386	691	359
7%	77	266	22	574	194
trends	77	29	299	94	210
100k	88	160	220	80	54
random.randint()	93	275	226	628	361
thanksgiving	80	163	254	723	72
exceeding	57	89	485	654	668
pythonically	68	241	341	432	29
python-level	82	180	422	537	219
slash	32	282	190	403	5
cgi	23	84	376	184	127
perc	98	93	243	558	705
np.real	11	234	242	129	292
run	22	187	108	361	383
rub	10	241	17	732	812
processing	23	50	294	429	866
cge	35	207	409	205	336
rug	61	136	175	626	847
redundancies	98	146	454	587	984
numpy.percentile()	57	193	424	414	509
faith	17	190	377	236	345
ill-defined	65	118	116	590	812
allotment	78	93	243	41	937
featureset	47	297	461	471	903
equal-sized	40	50	10	231	678
seeing	29	231	227	791	999
gufuncs	55	174	125	302	565
0-d	75	106	421	519	681
offset=0	48	59	74	332	681
0-n	75	148	206	471	622
rutger's	35	137	116	187	308
rolls	98	146	443	191	744
numdifftools	79	10	324	744	610
insides	64	232	246	209	370
grids	99	288	339	646	340
lammps	38	1	69	317	564
unique_df.loc	43	72	223	386	569
eventhough	29	28	306	122	457
consultation	43	72	93	204	832
0-4	98	281	454	704	984
0-5	98	281	454	528	428
0-6	80	163	254	723	897
himself	34	173	35	233	142
0-1	20	119	51	592	922
0-2	98	281	162	528	20
tupleize_cols	76	185	322	51	698
0-9	32	51	487	307	244
key=len	87	55	493	673	591
np.trunc	57	89	201	664	743
set_facecolor	25	161	208	543	109
russian	34	1	329	482	275
algebraically	79	10	324	487	610
denormalized	57	89	325	788	22
...!	65	291	88	236	345
truetype	73	166	134	764	862
....	65	291	258	209	472
...,	60	19	162	364	855
autocorrelation	79	292	332	430	547
...?	29	28	227	209	472
pageviews	47	56	430	204	832
doesn	29	28	410	609	649
movingols	79	26	354	761	816
--->	12	5	58	737	454
tomography	61	176	282	623	951
ymax=	60	155	495	495	285
color=colors	60	155	240	42	910
f.iloc	43	47	68	290	708
numpy.s_	1	57	112	677	726
markevery	64	161	24	543	664
400000	52	19	263	364	855
forgo	64	214	246	209	472
setenv	30	170	244	165	383
mouseclick	90	69	32	624	536
']])`	43	72	231	265	708
forge	83	206	5	797	142
suite	83	174	80	197	564
product_name	44	93	82	204	832
1.4.0rc1	46	221	124	202	435
1.4.0rc2	46	221	124	202	435
sigmaxy	72	102	25	129	756
wihtout	74	232	386	534	731
visits	78	56	445	41	832
multidimensionnal	74	232	37	209	36
numpy.datetime64	70	35	245	781	920
evan	35	115	409	20	336
codeline	27	137	459	15	421
eval	0	12	455	480	806
linprog	79	22	324	566	13
-1000	57	194	269	686	743
cdict	20	297	280	776	903
required	74	232	306	209	36
hsplit	19	294	296	278	470
depth	77	232	77	746	210
heats	77	29	106	94	616
she's	34	173	234	302	142
requires	74	117	152	58	305
evenly	77	29	339	646	340
gw	52	0	263	284	855
gt	78	200	252	149	423
gs	58	139	494	324	543
gr	47	186	25	683	764
gp	28	115	430	149	423
maxfev	0	275	485	566	231
cdf	79	23	332	511	239
gy	72	102	25	129	756
gx	72	102	25	129	756
gg	43	200	231	265	708
gf	89	65	205	292	651
ge	78	116	430	581	423
gd	32	110	329	482	519
gc	22	61	388	88	282
gb	88	182	373	549	236
ga	23	84	430	149	423
go	74	13	143	39	118
gm	35	115	409	20	336
gl	81	162	46	247	127
gi	50	244	277	553	842
gh	46	173	359	604	208
non-datetime	92	104	23	733	154
g_	70	274	74	305	681
3:6	52	104	160	284	776
wizard	17	43	274	236	345
blindingly	82	241	100	497	463
.canvas	6	46	345	418	373
breakout	77	14	365	676	257
ntile	3	193	148	98	66
relocated	47	110	454	155	984
g7	50	259	277	303	469
deprecation	46	221	389	202	435
dtype_t	70	204	74	790	64
g4	12	200	430	204	588
g3	43	130	431	174	100
g2	72	130	431	79	390
g1	72	130	431	79	390
g0	72	4	431	516	624
portfolios	78	56	445	41	347
g=	47	224	30	424	881
scipy.linalg.solve	16	94	462	782	800
tradeoffs	10	227	17	321	970
underscore	32	16	420	468	768
1.00999999046	52	0	263	290	622
on_press	6	161	32	572	112
xquartz	13	128	211	104	482
np.partition	19	42	296	13	886
in-loop	0	10	497	684	231
mouthful	82	241	395	334	327
deleting	22	171	388	190	526
row.b	43	130	461	174	566
row.a	43	130	461	174	566
numpy.transpose()	40	184	153	691	122
re-structure	82	137	341	497	953
download	13	261	5	797	368
click	90	187	32	624	536
opaque	20	31	24	757	786
vales	98	146	454	520	347
.tsv	86	222	329	107	519
date's	80	56	299	723	67
quivers	33	176	282	623	908
.axis	60	194	495	485	221
experiment	77	14	294	94	36
selecting	74	104	37	587	526
;	47	28	306	209	472
focuses	34	254	234	97	565
matplotlib	64	136	175	158	847
focused	34	190	307	97	216
~10k	88	160	220	80	54
repes	0	237	397	436	864
products	16	64	154	150	651
postprocessing	29	125	329	110	669
fortran-style	40	184	270	453	122
examining	74	227	239	15	526
([(	47	105	303	53	371
.reg	30	162	478	247	273
crazy	17	62	395	659	345
([:	1	19	112	284	855
([8	48	78	52	364	21
convert_object	92	39	383	616	477
1-based	40	104	270	713	650
groupbys	92	156	78	354	125
anomalies	28	14	106	429	841
fallocate	86	222	426	497	820
manipulate	74	232	37	110	629
.get_position()	52	19	263	485	855
itk	84	192	123	607	405
onpick()	90	46	345	572	112
deque	19	184	153	358	806
performs	82	117	125	58	382
counties	99	176	128	646	293
32400	52	52	198	770	437
reflects	74	117	306	631	999
numpy.void	9	109	331	594	681
optimizing	82	180	341	537	219
df2.drop_duplicates	44	164	181	700	895
tennis	78	150	445	479	604
xytext	58	138	265	651	224
benchmark	27	180	55	337	905
index's	3	297	6	155	868
image_size	48	219	41	305	21
chaudhary's	19	238	187	187	308
([[	52	19	303	364	640
scikit-bio	83	206	178	202	854
total_img	75	195	10	139	979
-sin	11	234	242	531	56
drops	40	117	306	58	655
depricated	46	221	124	331	435
]``	52	104	1	285	154
providers	23	150	69	149	791
sudo	13	128	50	481	174
using_tzset	98	180	55	337	89
^t	11	186	25	531	56
ffill	44	149	447	414	691
multi-dimension	74	232	140	519	684
key_1	78	93	445	41	984
documenting	10	231	143	716	215
key_2	78	93	243	41	984
np.linalg.det	16	94	462	782	800
sample()	46	214	125	202	782
hesitate	34	190	307	702	915
friendlier	38	1	291	317	628
r^3	99	288	282	617	908
r^2	79	23	332	638	11
round-about	82	241	378	573	29
plot_number	58	139	90	324	442
spurious	29	151	106	631	303
ctypes.c_void_p	70	204	74	790	64
elliptical	33	176	282	623	725
argsorting	19	146	424	414	509
]`'	52	19	160	284	855
int16	70	100	74	332	522
]`"	52	19	206	284	855
-ish	88	160	100	497	463
allalexaandgoogleinfo	1	39	349	539	881
hashed	9	106	421	776	903
]`)	52	19	160	284	776
hashes	3	297	163	776	903
pydev	83	15	189	540	818
rwidth	58	44	63	557	780
ller	65	115	409	407	887
prettify	68	241	227	432	29
sys.float_info.epsilon	57	89	325	559	907
object-oriented	38	1	390	732	389
r^n	79	64	154	150	988
agenda	34	190	377	396	275
healthcare	50	157	277	71	469
fastest	82	180	378	573	29
unsolved	34	173	116	173	216
2001-02-02	78	258	26	2	377
insert_image()	76	91	367	183	768
pylab.figure	6	136	175	272	847
ideone	83	206	151	202	380
cvtcolor	84	219	102	401	427
letters	32	286	420	482	898
brittle	10	231	395	334	327
gnuroot	83	84	376	184	467
exclusion	32	232	8	525	868
lapack	96	174	408	90	729
help()	38	15	80	165	383
np.empty	48	59	41	232	21
compiler	96	174	408	650	455
pixel	84	195	51	674	353
auto	64	243	452	207	449
!..	65	291	371	205	767
ctor	92	156	126	105	971
scipy.integrate	79	10	324	416	13
non-nans	98	146	454	796	509
onpick	6	46	345	44	112
mods	27	137	116	236	421
uogrd	33	102	135	617	298
fundraisers	78	150	445	479	705
pathway	78	110	163	746	868
---------------------------------------------------------------------------	63	83	283	741	39
moda	90	187	108	595	383
mode	90	15	189	226	383
pools	22	85	71	349	431
upward	33	13	443	191	725
get()	9	106	397	44	699
x.groupby	43	164	493	76	419
psd()	51	136	140	626	847
chunk	22	283	497	534	953
inverted	37	31	443	661	363
2015-07-30	67	260	95	372	958
ec2	83	84	376	670	467
ec=	60	155	240	603	285
macs	83	128	5	197	467
sandy	96	30	480	785	729
accessors	80	35	245	77	333
repositioning	37	187	388	207	214
reboot	22	187	108	361	248
testfunction	87	55	493	76	591
ax.get_xaxis()	58	44	495	642	599
wich	74	232	37	746	36
ivisual	28	137	80	525	564
hd5	86	222	426	611	820
pylab_setup()	6	46	58	483	162
zinjaai	35	238	116	187	336
one's	82	241	246	334	327
ecg	28	14	267	710	841
ecc	82	241	69	149	423
date2num	80	35	245	560	920
terminated	22	244	108	361	248
reacts	90	69	32	624	112
diagonal	16	94	127	738	659
memoryviews	55	204	29	790	64
ect	74	232	246	209	370
advisor	17	227	250	361	905
image.py	50	144	118	483	927
set_xlabel	58	44	90	341	683
route	82	13	246	500	118
keep	74	232	246	190	629
keen	17	43	377	500	803
ands	75	104	198	113	135
converters={	76	199	286	177	987
show_map	0	224	58	424	8
shoehorn	17	43	154	458	118
x86_64-linux-gnu-gcc	63	244	133	553	323
clip_on	58	44	494	642	683
christoph	13	261	5	797	391
solf10	48	59	74	50	881
maturity_dt	80	93	26	558	377
matploblib	74	6	278	626	854
2-d	71	64	10	519	684
prng	93	85	193	628	507
b**2	11	234	4	531	56
np.amin	87	57	121	673	608
datetime.time()	92	35	245	781	920
mergedmatrix	52	148	206	538	719
adjoint	16	94	462	150	800
data_length	98	148	273	139	77
symlognorm	25	290	320	49	296
well-formed	75	99	152	601	843
attach	27	293	37	110	421
attack	17	62	341	432	589
pandas.date_range()	92	35	245	560	333
widgets	90	69	46	380	384
row-based	3	50	426	663	843
non-parametric	79	23	332	511	531
2-3	88	197	73	80	217
2-1	11	234	4	531	56
2-7	88	142	220	141	60
2-4	88	197	73	574	217
2-5	90	197	73	94	217
np.linalg.inv	16	178	462	562	800
dyno	23	84	27	370	161
fuzzy	3	227	163	525	669
overwhelming	17	62	291	334	628
updating	22	171	388	190	526
data-points	61	288	339	646	340
achieves	82	180	459	15	905
ben	34	115	409	20	588
fscanf	86	222	329	703	392
distinguishes	10	227	317	275	363
30:61	52	0	263	290	288
beg	80	258	82	41	749
bed	65	291	250	39	180
bee	61	13	143	212	589
providing	74	137	152	525	526
distinguished	99	288	467	657	563
bet	82	241	246	500	118
exhibit	10	231	106	631	568
lightly	27	137	116	15	421
unixtime	80	35	245	781	850
p.s	34	118	307	97	216
msec	88	256	55	196	432
0000000	93	123	173	50	888
constrained	79	10	324	214	13
border	37	31	443	212	851
_list_	75	294	10	278	68
instance	74	232	386	436	699
nbconvert	73	125	248	91	304
0xef	32	16	190	477	261
rand_pos	75	106	497	534	953
plugging	34	13	143	458	118
nuisance	32	231	420	468	655
scipy.sparse.vstack	19	294	296	278	470
interpretter	83	206	178	197	467
0xe2	63	16	190	477	261
consequences	10	231	17	335	568
colorup=	60	155	240	495	285
_show	50	267	118	483	679
0xe9	63	16	190	477	261
over-written	22	171	388	361	673
nsmallest	19	42	78	524	556
~10^6	88	142	220	139	54
canvas.draw()	6	46	345	599	356
qpixmap	84	69	46	380	384
abundanceframe	3	156	6	354	125
rob's	38	6	125	302	308
barplots	51	136	175	22	847
12k	88	160	220	80	54
anyway	29	28	246	209	472
_wrapit	48	57	2	453	280
c_mat	48	283	373	469	778
12x	88	180	55	337	89
rec_history	75	106	461	471	622
12}	47	130	256	145	764
unioned	75	146	10	587	509
7x7	71	64	213	239	95
envs	30	259	277	159	469
c_double_p	1	204	41	232	64
math-mode	64	166	134	131	862
datetime's	92	35	245	781	374
envi	86	192	123	607	405
ethan	35	115	409	20	888
1.20897e-06	15	157	64	514	144
np.loadtxt()	76	54	382	260	698
equivalents	38	214	291	756	382
complex256	70	100	325	86	22
positive-definite	16	94	462	782	800
quantified	57	151	106	631	970
120	12	279	319	528	106
121	12	279	488	751	465
122	12	279	488	111	465
123	12	279	319	111	465
124	12	279	488	751	465
125	12	279	488	314	106
126	12	279	488	751	465
127	12	279	488	592	922
128	12	279	488	528	175
129	12	279	488	751	465
ems's	35	238	187	187	308
shp	48	274	112	305	159
evolution	28	14	267	710	841
gridpoint	99	281	114	646	744
evident	74	117	459	15	421
shy	22	13	143	39	118
matplotlib.colors.linearsegmentedcolormap	25	119	320	49	296
qcoreapplication	90	187	108	361	248
simplier	82	180	378	573	29
matplotlib.__version__	81	5	151	199	443
she	34	115	409	233	142
datingdatamat	52	19	263	284	855
shm	28	14	267	710	942
dpi	73	243	18	16	721
np.einsum	19	178	473	743	884
trendline	79	23	332	208	620
inkling	65	291	88	236	345
legacy	38	1	17	637	564
usefulness	10	241	17	500	215
b-splines	53	10	399	720	396
init=	0	275	293	641	412
left-aligned	37	290	166	706	76
2014-09-30	80	258	223	155	832
horribly	82	241	395	334	463
arr.data	9	184	158	476	757
labled	37	281	175	22	851
lua	38	1	479	317	564
written	38	137	459	15	421
luc	74	232	306	209	36
lue	20	119	259	757	786
correctly	29	28	306	209	472
horrible	82	241	395	334	327
lables	37	290	166	706	76
neither	29	28	410	209	527
sold	78	56	445	41	604
birth_year	43	72	93	265	987
jan-dec	37	290	166	706	76
spares	82	241	341	497	463
precious	35	207	371	205	767
np.invert	87	220	198	770	714
undetermined	79	10	324	744	610
interpretations	34	288	159	646	744
permutated	78	56	445	796	984
uncaught	63	83	389	715	39
jersey	78	146	132	796	363
quadrilateral	99	288	11	315	138
bitwise_or	92	99	421	105	979
cohere	0	275	295	129	292
addition	74	232	17	209	36
solr	23	50	294	370	79
autolabel	51	136	195	272	481
gradoffice	47	259	277	381	588
minimise	79	10	324	566	643
isolating	74	13	143	161	746
username	30	259	478	159	588
0.067139	15	157	64	296	837
releasing	46	221	124	331	549
ax.locator_params	58	44	494	341	599
samplemeta	78	93	82	204	832
preciacu	80	56	77	550	272
1000x100	71	64	268	738	95
expenditure	51	93	65	354	937
ours	10	1	80	500	275
kicks	29	227	88	361	874
pure-numpy	82	180	187	337	308
novel	10	43	377	590	812
contexts	38	227	159	328	382
tshift	92	149	447	763	612
example**	27	293	403	709	579
owns	9	61	85	358	282
dbapi2	86	68	119	478	126
pad_inches	58	243	495	651	299
0,255	84	219	51	592	922
lamba	17	43	88	236	457
non-structured	75	106	10	231	650
neuron	72	132	114	182	210
lambd	57	89	8	511	239
tcaswell's	35	238	187	187	308
quantization	84	230	51	137	353
1-exp	11	234	242	531	56
orbital	28	14	267	710	942
missing_value	9	109	383	616	477
sparray	9	109	125	178	564
lmplot	51	136	195	272	847
qgraphicsscene	99	288	175	158	138
start=	67	201	309	2	24
dir()	81	109	397	83	386
cross_val_score	79	26	354	135	816
pythonx.x	30	259	277	159	960
ordinal	32	16	190	477	261
rightfully	10	237	397	436	864
absorb	17	137	116	236	345
feet	99	250	77	450	563
4.5x	88	180	55	337	89
2004-05-30	15	213	95	514	51
2004-05-31	15	213	236	514	980
transaction	78	56	445	41	67
reflection	28	151	106	710	970
i	29	28	306	209	472
ezanova	38	206	178	703	392
draggable	90	69	46	572	384
user-friendly	10	241	291	500	327
modeler	23	26	354	761	866
reside	74	50	37	663	161
taller	37	31	467	780	851
accurate	82	151	106	631	970
26l	48	274	180	172	159
markeredgecolor	25	161	24	49	664
datarr	75	106	295	471	881
low-level	38	1	291	732	354
multievent	3	50	100	94	868
numpy.put	19	294	296	231	782
nats	57	99	424	414	509
size=	58	138	495	651	599
fine-tune	64	290	467	78	370
3.3	85	276	42	685	380
extends	37	117	443	207	851
warrant	82	241	359	590	208
nate	35	207	371	205	336
xvars	0	12	461	480	591
definitive	34	190	307	590	812
263	12	267	488	111	132
262	12	267	223	111	132
261	50	267	118	483	132
260	12	279	488	111	465
267	12	19	488	111	132
266	12	274	112	305	175
265	88	160	220	80	54
sequencing	23	14	159	321	275
y_test.shape	1	19	112	284	756
269	12	279	488	751	132
268	12	267	58	111	132
temp.macosx-10.7-x86_64-2.7	50	259	133	117	160
prominent	37	31	467	78	628
sizer	90	69	46	380	384
sizes	74	232	100	207	668
alternatively	74	232	246	209	629
sizey	11	234	4	50	99
candy	78	150	445	463	604
sized	71	232	10	674	340
tick-mark	34	13	359	525	328
str.replace	92	54	109	512	808
np.show_config()	96	174	408	199	411
pinging	34	173	307	97	142
extend=	60	112	240	495	599
lends	82	50	341	497	246
ax.bar	51	44	195	777	12
dstart	60	201	309	727	743
a-c	72	130	431	174	624
a-b	11	234	4	562	56
a-e	11	130	25	174	306
a-d	72	130	431	174	624
crypto	88	142	267	196	888
json.load()	86	222	275	370	519
a-z	32	51	487	307	244
np.any	87	42	198	13	985
liking	64	137	246	525	327
.abs()	43	47	68	290	708
df.dropna()	44	24	424	414	691
1km	77	176	135	646	563
__contains__	9	109	331	55	878
polinomial	53	151	238	487	762
16x16	88	195	213	674	353
sys.prefix	81	5	110	199	870
pd.factorize	43	72	68	265	708
mark's	65	291	258	407	887
chokes	29	28	272	361	473
expansion	79	10	154	744	382
2000.0	60	194	162	133	888
sklearn's	79	26	354	135	492
a-1	52	19	273	284	855
set.intersection	87	224	295	684	881
ordered=true	70	105	93	53	764
recognized	29	99	152	601	638
820	90	144	108	361	383
matplotplib	64	136	175	158	847
recognizes	74	117	152	58	638
file-object	9	222	29	260	405
h9	22	162	478	247	344
?????	47	115	227	4	888
h=	47	224	30	424	881
h2	72	130	431	174	624
h3	72	130	431	174	624
h0	72	130	431	174	624
h1	72	130	431	174	624
h7	47	17	351	4	385
h4	72	130	431	174	624
d.values()	47	12	461	76	260
pixel_array	1	52	198	43	714
bson	86	222	275	260	405
.join	47	51	487	151	244
noticed	29	28	306	791	874
~mask	52	52	198	43	714
vein	34	238	116	97	216
tight_layout()	58	46	90	599	356
notices	22	187	108	361	305
pathcollections	25	161	208	543	481
hz	77	292	20	430	227
ghost	28	14	106	429	563
hy	27	137	459	482	421
hr	80	29	299	77	931
mucked	29	171	80	458	417
hp	28	30	480	785	841
hv	1	186	25	139	756
hw	23	30	69	149	423
ht	12	186	252	133	272
vgene	78	93	82	558	965
hk	47	130	162	425	888
hh	80	35	245	125	742
hierarchical	3	156	6	354	125
hn	11	234	4	215	830
ho	47	115	162	550	888
hl	87	55	293	539	412
hm	65	291	258	407	887
hb	47	52	4	556	437
hc	11	211	162	215	99
overflow	57	190	389	654	57
ha	65	291	258	407	887
hf	11	186	242	129	221
hg	30	170	244	381	588
hd	47	30	480	785	423
he	65	118	116	233	142
modifiers	64	69	32	624	112
dmg	13	128	5	797	368
carriage	32	16	190	477	5
projecting	99	176	282	617	908
limit	57	266	485	207	668
mrdivide	16	94	391	782	392
mechanics	10	43	17	744	610
thnks	65	28	227	236	345
pekar's	35	238	187	187	308
tb	88	182	373	549	236
twist	29	232	306	209	305
lobes	77	151	106	631	303
3d-array	71	64	10	519	684
median_diff	43	72	231	265	708
worse	82	180	100	497	463
.xlsx	86	91	367	107	86
img.ravel()	1	219	63	557	780
$path	30	122	478	159	181
x-value-window	77	281	114	10	66
ungrouped	3	146	182	587	673
self.foo	0	109	295	44	881
standardise	3	26	168	135	816
sweep()	19	214	125	703	392
disposing	22	50	143	691	118
my_df	44	134	260	155	827
transferring	86	192	329	676	257
rdms	23	68	119	478	126
expressible	16	94	8	150	62
enviroments	83	206	80	197	564
my_dt	43	273	309	727	852
pathways	82	227	159	94	36
r**	72	186	4	531	56
ast.literal_eval()	32	12	275	183	979
non-existing	74	171	37	190	629
pip3.4	13	170	50	165	174
imageqt	81	144	102	607	405
pip3.3	13	170	50	165	174
clevs	60	102	418	193	910
tightest	99	31	443	572	138
pandas.plot	51	290	166	272	847
ode45	79	10	324	487	610
dynamic	38	232	294	691	36
zelazny7	35	238	326	187	308
np.savez	86	222	382	102	820
protest	10	241	17	525	305
extrapolated	53	10	238	720	396
bytecode	55	174	29	90	455
6pm	80	163	254	723	72
streamplot	33	176	208	319	326
2.8.12.1	85	276	178	681	380
.extract	43	51	487	151	244
python-2.7.9	30	170	244	165	960
fronts	17	13	106	525	327
df's	3	156	65	33	125
np.outer	19	178	296	291	884
python-2.7.2	50	259	133	117	160
python-2.7.3	83	206	178	197	380
python-2.7.5	30	259	244	138	204
python-2.7.6	50	259	277	138	204
aliased	81	237	397	436	864
freqency	80	29	148	77	931
myscript.py	30	15	189	540	383
endianness	70	100	325	86	22
up2	52	263	263	485	855
up3	52	19	263	485	855
t.startswith	87	55	493	480	591
rescue	35	207	274	205	767
downstream	23	171	294	691	655
activation	79	26	146	552	13
pandas.io.gbq	38	231	17	500	79
2012-03-01t00	67	213	433	185	51
149x56	28	26	354	135	412
boot	88	30	55	337	89
affect	74	117	306	548	305
web-service	23	192	329	595	519
alpine	83	206	178	197	467
*xs	72	186	25	363	620
df2.divide	44	2	260	700	827
upd	27	137	459	15	421
companies	78	116	445	479	67
solution	82	238	187	573	669
optimize.minimize	79	22	324	566	13
indefinitely	90	187	108	624	248
vector	71	64	268	150	684
reshuffling	40	50	182	548	122
heading	32	110	420	468	768
build-up	22	283	106	128	246
locus	99	286	114	73	616
pd.options.display.max_columns	47	224	58	424	588
concise	82	241	378	573	29
numpy.packbits	70	59	357	332	522
exec()	0	237	397	540	383
output.dat	76	222	382	283	736
pythonic	82	241	378	573	29
neg	47	297	280	556	148
ned	34	173	35	97	142
kernel's	22	283	428	128	282
comparision	3	227	6	354	135
new	74	171	388	190	629
net	28	254	247	161	746
axhistx	58	44	494	418	162
37*100	0	106	461	471	881
aptus	13	170	50	165	482
evolving	10	43	17	500	246
centric	74	232	80	98	36
screams	17	43	35	233	142
never	29	28	410	791	874
drew	61	31	175	212	276
60000	71	142	220	528	175
facetgrid	51	136	195	272	847
init_fn	72	102	418	129	910
bitrate	58	243	18	16	721
interpret	74	28	152	601	638
rqdrecord	87	193	148	673	347
libpng15.15.dylib	30	259	94	159	960
5,000,000	88	160	220	80	54
pandas.io	81	88	110	739	183
hunch	65	118	88	791	874
elaborated	65	118	116	187	887
term-document	28	94	354	135	988
.resample	44	149	447	460	612
elaborates	34	238	116	97	308
counts	78	56	445	41	639
v.s.	77	193	148	638	347
fixed-width	86	54	382	260	444
numpy.copy	1	219	102	453	280
right=	58	138	495	651	299
timecondition	87	52	198	139	437
.yml	30	162	486	247	368
precompiled	13	128	5	797	391
typo	65	291	258	407	887
recommend	38	6	246	500	118
0-23	80	56	254	723	897
0-20	37	194	269	141	221
type	70	99	74	601	979
tell	29	28	227	432	472
tweepy	23	84	294	370	257
made-up	27	293	403	420	579
posting	34	173	307	97	216
big-endian	70	100	325	86	22
numpy.roll	19	294	296	291	601
freetype-devel	13	170	50	104	482
count1	78	93	445	796	965
pre-processing	28	26	354	135	816
cl.exe	50	145	133	650	634
np.tri	1	57	41	232	659
kumar	35	238	326	187	336
np.frombuffer	70	59	357	332	522
ssh-ing	23	84	376	184	467
rights	13	128	376	250	348
2.66	85	30	480	785	544
2.67	19	180	55	196	432
2.65	85	276	42	685	380
endog	79	275	349	518	412
avgdegf	32	258	93	788	410
whack	37	31	467	432	851
2.1.9	83	206	178	681	380
reversed()	19	42	296	13	512
alternating	74	146	454	680	363
give	74	28	246	209	472
df_cleaned	43	72	309	265	164
gsl_matrix	9	204	29	790	64
dataframe.from_items	47	134	461	700	827
dataframe.applymap	92	156	78	105	971
v1.1.0	85	206	151	681	380
v1.1.1	46	206	211	681	380
shapefile	99	176	128	617	293
auto-complete	90	15	189	226	818
re-shaped	71	64	268	155	673
_tried_	27	190	227	420	579
stupidity	65	118	250	451	98
reindexing	92	156	49	763	125
hist_data	47	130	334	145	582
accumulate()	29	214	125	202	782
df.tail	44	134	260	290	827
geo\time	76	199	30	406	754
hsls	52	19	273	707	964
15x	88	180	55	337	89
asanyarray	48	204	2	790	681
summarize	3	137	37	110	953
team's	78	150	445	149	604
bboximage	73	161	90	543	683
count=-1	48	59	74	332	522
idiosyncrasy	10	241	395	200	812
accumarray	19	101	125	703	392
.swaplevel	43	47	181	71	895
bytestrings	70	100	357	477	405
mx2	71	64	10	519	684
mx3	71	64	268	519	684
mx1	71	64	268	519	684
p.get_x()	60	194	495	485	190
keyboard	90	69	32	624	112
myplot	0	46	345	418	356
_every_	74	232	37	98	347
scipy.optimize.linprog	28	43	377	396	803
1xn	71	64	268	519	684
__class__	9	161	331	543	109
20140103	80	163	254	723	931
to_html	92	68	275	183	322
featurefolds	1	0	112	232	855
np.recfromcsv	75	222	10	260	782
scipy.weave	55	174	29	90	219
googleing	34	62	247	161	746
plt.savefig	73	243	18	16	721
stubbornly	10	290	390	732	370
sys.argv	76	224	327	147	383
mxp	71	64	268	738	95
mxn	71	64	268	519	95
enthought's	85	276	5	461	637
yearid	44	93	82	204	832
mxm	71	64	127	738	95
aborted	63	173	283	553	584
mdates.strpdate2num	76	199	93	177	987
anaconda\lib\xml\etree\	50	145	225	168	204
volume_overlay3	6	161	208	572	481
outputed	74	297	37	110	673
brightness	20	119	301	541	124
conn.set_converter_class	0	57	2	621	8
calibrating	22	151	106	572	214
.findall	43	51	487	151	244
1x2	71	64	268	17	95
1x3	71	64	268	738	95
numpy.histogram	51	42	63	557	780
1x1	71	64	268	738	95
1x6	71	64	333	455	788
np.random.randomstate	9	109	193	628	507
1x4	71	64	268	738	95
1x5	71	64	268	738	95
1x8	71	64	268	231	981
luck	68	62	272	161	746
t.ix	52	0	263	364	288
adobe	73	125	248	276	304
.h5	86	222	426	611	820
dawg	35	207	409	205	336
pearson's	79	23	185	638	11
f.columns	52	0	260	348	103
enclosure	67	181	64	24	193
gromacs	38	1	69	317	564
jet_r	20	119	259	42	846
scipy.optimize.fsolve	79	22	324	566	13
condlist	75	214	198	605	135
1000x1000	88	142	213	674	95
surprise	29	180	395	236	812
sluggish	55	180	341	537	246
1e-308	57	89	8	788	62
normed	51	23	63	557	780
script2.py	86	222	275	183	405
ax.vline	60	102	418	129	162
11.04	85	276	233	393	858
set_color_cycle	6	161	226	641	481
toeach_category	0	237	397	436	231
tk.tk()	30	144	58	483	383
-function	53	214	140	684	512
rgb_to_hsv	84	119	259	137	427
ind_1	52	19	160	284	855
sqldatabase	9	68	383	616	824
logging	23	85	294	716	257
fill=false	60	155	240	495	285
messages	63	187	389	361	39
ist	47	117	306	209	588
ish	88	283	100	139	668
iso	80	35	245	781	920
isn	29	28	410	609	457
numpy.fromfile()	86	222	382	260	405
cmp	19	42	455	13	512
loud	99	13	250	429	607
fill_between	51	161	208	777	481
2015-01-20	80	200	26	204	410
executions	22	187	108	361	214
stepfilled	51	155	195	272	12
hook	38	109	46	380	370
payload	32	100	325	601	22
hood	38	117	152	691	219
ieee754	57	89	325	86	22
a.size	1	57	41	677	21
numpy.float128	57	89	325	86	22
blasdot	50	145	133	117	160
mutate	9	237	158	436	864
stateless	6	237	397	732	389
lighttpd	30	84	376	184	467
b.y	11	186	242	531	56
tokens	32	286	163	96	798
fashioned	82	241	80	573	118
keyword	64	185	226	641	676
princeton	34	254	35	179	565
.json	86	110	329	107	519
column_headings	98	148	273	556	622
matteo	65	207	371	205	767
normalizing	77	292	148	98	62
matter	10	28	246	209	305
random.choice()	93	214	193	628	782
data_set	87	52	198	770	985
bidder	78	93	243	41	705
13.04	85	276	233	393	858
n^3	89	94	207	261	90
n^2	89	180	207	261	90
chen	47	115	430	20	588
with_default_value	0	106	295	684	699
magnified	82	151	467	207	668
lightblue	20	155	240	42	285
maxticks	64	185	226	641	683
point1	98	148	273	73	77
point2	98	148	273	73	77
np.amax()	92	214	125	105	782
df.set_value	43	72	68	265	708
pandas.series.apply	75	214	459	15	382
xsize	6	161	383	616	699
my_array	1	148	461	471	881
inconsistency	10	231	17	335	568
picklingerror	63	83	283	715	39
crossvalidation	28	26	354	135	816
logsumexp()	38	214	125	756	782
digress	90	46	46	732	389
points	99	288	339	646	138
pointx	98	263	206	471	428
pointy	98	263	485	141	221
----------------------------------------	30	259	244	138	588
one-dimensional	75	64	10	519	684
visitor	78	56	445	41	604
immutability	10	231	17	335	812
f.ix	43	47	231	265	708
single-index	3	156	65	354	125
pdf2ps	73	125	248	276	304
decoding	86	222	190	477	405
thirds	37	31	467	191	587
pyplot.subplot	64	136	90	391	481
pandas.hashtable.pyobjecthashtable.get_item	50	267	118	580	429
field2	43	105	93	265	764
field3	43	105	93	53	764
field1	43	105	93	53	260
gtk-2.0	30	259	478	483	927
xndrme	35	207	371	205	767
dt.date	80	201	284	727	852
integrate	79	10	324	416	610
folder	30	162	486	247	344
nanoseconds	80	35	245	781	920
lst2	1	12	461	471	881
8x8	71	64	213	738	95
stop	22	187	108	361	214
skulpt	23	84	294	158	127
pathpatch_2d_to_3d	33	102	140	617	908
sub-folder	78	110	243	712	519
comply	10	232	80	209	999
indenting	27	293	305	468	558
fields	3	110	6	601	843
pl.plot	60	102	418	129	910
fall-back	22	171	388	361	655
firstwords	12	78	488	111	272
reference	74	232	234	436	161
rockstar	35	207	371	205	767
y-vector	79	275	140	684	231
zones	99	288	70	295	772
d's	35	115	371	20	345
cublas	55	174	408	90	651
refresh()	6	46	345	732	370
np.diff	87	42	296	13	886
one-shot	3	50	497	534	382
there'd	82	241	341	573	196
duff	92	39	424	414	934
np.count_nonzero	87	42	198	13	886
sorta	65	291	395	236	345
setsize	0	224	58	424	588
scrap	65	291	371	407	887
np.timedelta64	70	273	309	678	700
summaries	23	56	445	94	67
tantamount	87	164	181	700	612
there's	10	241	246	209	472
timeframe	80	129	299	77	466
sorts	40	117	182	524	9
dtype=	70	59	74	332	522
plt.loglog	60	44	418	193	910
cleverer	82	241	341	573	29
series.where	92	185	2	621	130
residual	79	23	332	638	11
10,100,100	71	142	268	139	393
np.rot90	60	219	102	193	427
np.random.random()	93	275	193	628	231
price_data	78	116	26	581	410
modeling	28	14	267	710	841
picking	74	13	37	458	526
look_up_list	52	148	68	290	154
df.to_clipboard()	86	68	27	183	188
distinction	10	231	17	200	305
likert	78	150	252	584	604
minimises	79	10	324	214	13
appeared	29	28	306	791	874
quadrilaterals	99	288	11	315	138
xtol	79	22	324	566	13
plotting.py	50	145	118	580	429
recognises	29	117	152	791	638
particulary	74	232	246	110	36
n**2	89	142	207	261	90
particulars	10	227	106	768	36
orderdict	3	297	182	776	903
recognised	86	162	329	601	519
numpy	75	214	10	756	382
stresses	77	14	282	623	762
rhdf5	46	68	359	604	435
quantities	77	232	159	94	210
barf	75	99	421	601	843
_loc	9	109	331	594	386
swe_vals	72	102	418	73	77
dictwriter	86	222	275	260	519
xtrain	87	134	349	539	412
numpy.timedelta64	80	35	245	781	920
exception	63	83	389	715	39
tank	65	291	274	236	345
*-dev	83	206	178	197	467
tanh	79	275	8	638	13
t0	72	4	431	174	624
pdwls	72	281	25	129	756
near	37	13	106	631	762
neas	37	266	22	574	668
neat	82	241	378	573	29
finder	99	13	324	744	589
ipython-notebook	83	206	189	226	818
mangle	38	171	246	663	370
anchor	37	31	414	780	76
iy	52	102	418	284	19
ix	92	104	23	733	92
metropolitan	78	150	445	479	604
rfecv	63	26	293	135	816
ip	47	110	30	110	736
is	29	28	306	209	472
ir	33	176	162	429	888
submatrix	71	64	127	738	95
it	29	28	246	209	472
iv	79	115	430	638	888
ii	47	224	273	556	622
shame	65	291	395	236	345
ik	1	178	473	743	884
ij	1	178	473	743	884
im	29	28	227	209	472
get_figure	9	161	383	616	477
io	86	222	426	381	842
in	74	232	306	209	36
ia	72	130	25	174	792
vendor	23	150	69	381	423
np.setdiff1d	19	42	296	13	886
ib	72	200	430	174	792
ie	74	232	37	746	36
id	78	93	243	390	965
complains	63	83	283	715	39
np.size	87	164	295	673	419
nameui.py	90	144	46	540	383
tkagg.py	50	145	118	483	927
i8	70	100	74	53	522
advocate	34	190	307	500	215
i=	72	186	25	174	624
i1	70	130	25	174	263
i0	52	130	206	284	792
declaring	9	204	386	790	64
i2	70	130	74	53	263
i5	85	30	480	785	858
i4	70	105	74	53	522
i7	85	30	480	785	858
apt-cache	13	170	50	481	174
i+	52	34	273	556	622
i*	52	19	273	284	19
i-	72	178	25	562	19
potentials	77	14	114	623	210
']`)	43	72	93	265	708
multi-dtyped	92	104	158	733	154
fruit_type	78	262	252	338	602
nx*ny	71	184	10	519	684
practices	68	43	465	321	215
hyperparameter	79	23	332	638	531
netezza	86	68	119	478	126
_did_	29	28	246	190	472
answering	34	190	307	590	216
facto	55	1	69	317	564
terminal.app	83	15	178	540	383
sporting	35	115	252	20	750
bandwidth	77	151	106	128	668
psyco	55	174	479	90	219
identify	74	232	37	746	868
__dict__	9	109	331	594	386
set_offsets	25	161	208	543	109
$x$	47	17	170	4	385
linspace()	53	294	140	720	684
)))]`	87	0	180	290	591
regarded	38	99	152	601	354
initialise	75	232	386	680	359
]")	52	78	52	133	764
allele	78	150	445	796	984
munged	3	110	6	110	519
nsteps	11	275	162	305	221
scipy.linalg.blas	55	174	29	302	142
designate	74	232	37	746	868
opt	30	259	277	159	752
ops	82	227	17	756	382
df_base_val	98	148	206	556	622
rotate	37	31	443	780	908
3pm	80	258	254	723	72
clickable	90	69	175	158	127
depicts	61	14	282	626	951
subfig	37	31	467	780	851
matplotlib.pyplot.plot_date	51	136	175	626	847
wind_speed	87	102	297	414	612
ave_data	78	110	243	155	754
1553	1	274	112	305	436
nevermind	65	291	258	407	887
drawgreatcircle	99	288	497	646	744
equal-length	75	64	10	519	940
cum_edits.plot()	58	44	494	418	162
np.__version__	85	5	151	199	443
admittedly	82	241	395	334	327
]"`	47	67	256	145	764
www	30	259	478	159	588
35047	1	274	112	305	436
c-array	9	204	29	790	64
pseudo-random	28	14	193	628	507
rfft	77	292	20	430	547
invoice	78	150	445	479	604
drop_duplicates()	92	156	78	105	971
tripped	17	62	88	458	417
total	88	266	22	574	668
sys.float_info	57	89	325	86	22
tracked	29	13	143	173	589
-*-	32	16	190	477	413
yefremat	50	259	277	303	469
1sigma	79	23	332	511	239
x**2	11	234	242	562	292
daytime	80	56	445	41	931
mynumpy	9	109	331	594	699
tracker	34	173	359	604	208
im.getdata()	1	57	41	232	881
matrix-like	86	222	426	663	843
self.sigma	11	234	4	531	56
2014-08-08	67	213	95	185	51
var.theta	98	52	273	141	985
burn	65	291	250	39	180
libsvm	86	26	354	135	816
ali_m	35	238	326	187	336
id's	78	93	243	41	984
selectable	64	6	294	78	73
bury	10	118	116	590	812
interpolate.griddata	53	101	125	720	396
?!?!	29	28	227	791	473
wavelets	17	6	278	161	854
contigous	22	184	153	691	387
azure	83	84	376	670	467
islands	99	288	282	646	138
df.index.date	43	164	309	727	852
project's	83	84	35	302	127
motivate	34	190	116	590	328
**-1	57	275	8	664	743
bundles	83	206	80	197	564
plt.show	6	46	345	599	356
libstdc++	96	259	94	165	960
pair	98	297	185	746	868
platform's	57	89	325	86	22
python-based	38	1	291	317	450
get_level_values	92	156	23	763	971
yann's	64	6	278	78	450
applicationservices.framework	50	259	277	303	469
df.query()	92	156	78	47	971
lowering	77	151	485	574	194
1-dim	75	64	10	519	684
ax.add_patch	6	44	90	418	162
+0100	67	285	309	2	24
fork	55	85	71	349	823
pd.cut()	92	156	63	31	66
form	74	232	37	746	36
scikits.audiolab	83	222	178	260	946
fore	28	14	185	150	756
ford	78	200	252	149	604
31st	80	163	254	723	72
infos	34	254	234	97	328
numpy.ctypeslib.ndpointer	70	204	357	790	64
bundled	13	128	5	197	482
surprising	10	231	395	335	568
delete	74	263	388	190	629
high-dimensional	28	50	100	497	463
abusing	82	241	341	573	669
sticks	61	31	175	212	276
draw()	6	46	345	599	356
sidestep	82	241	246	500	215
big-oh	89	151	106	537	970
some_data	47	134	260	155	827
sticky	38	99	143	458	28
0.00000000e	15	211	64	364	265
ecatmur	35	207	326	187	336
mediocre	79	266	332	638	11
typeset	73	166	134	131	898
self-answer	34	190	3	702	216
oversimplification	10	118	395	791	999
alerts	92	156	275	183	699
sybase	86	68	119	478	126
magnitude_spectrum	77	292	20	430	547
digital	77	192	365	676	946
.min	87	47	493	76	593
exporter	23	150	405	149	275
pasteable	27	293	403	420	188
implmentation	82	137	497	534	219
sandboxing	55	1	69	317	431
mangling	22	171	359	468	655
sub-groups	3	283	6	94	953
diet	51	17	351	4	385
fell	29	13	250	85	589
exported	86	125	329	107	519
sliding_window	83	206	125	302	19
a*sin	11	234	242	531	56
transfers	23	85	294	595	161
died	83	15	108	540	248
billion	88	160	220	80	54
allright	65	291	258	407	887
assume	74	28	306	209	472
debian	85	276	211	393	858
remapped	12	19	268	305	436
t2mtr	60	102	418	129	910
argwhere	19	42	296	13	601
exponentiate	16	94	462	782	800
overplots	61	136	175	22	847
co-occurrences	3	297	6	587	984
stratifiedkfold	79	26	354	135	816
overplotted	61	31	175	212	851
kernprof	27	147	27	361	383
viridis	25	119	320	49	846
vector-matrix	16	178	154	150	651
invent	17	43	377	500	118
skim	82	13	143	39	118
skin	17	13	159	429	589
morphology	28	230	428	166	353
primes	89	297	207	261	90
primer	34	254	371	205	565
interp1d	53	22	238	720	396
my_proj_name	30	259	244	159	960
answerer	34	190	307	702	915
editors	73	15	189	540	818
answered	34	190	307	702	216
monotonically	77	103	97	511	102
elliptic	61	10	324	416	614
marks	37	290	166	706	76
string	32	99	420	601	979
block=false	90	46	345	599	356
newton-cotes	79	10	148	487	762
geometrical	99	288	282	631	970
io.open	76	199	286	283	413
1s	71	146	454	680	509
beanplots	34	173	359	709	208
1997	67	163	284	718	272
seed=none	93	123	193	628	361
accidentally	65	171	258	791	874
magnet	33	151	106	631	762
perceptual	20	151	106	137	762
shave	82	180	55	537	89
pd.unique	44	12	461	776	903
oscillation	77	292	20	430	942
nanstd	92	193	424	414	608
load_entry_point	81	5	110	130	584
operator.add	19	180	201	337	89
heres	27	137	459	15	421
artistanimation	6	161	90	543	107
transportation	78	250	132	479	604
urlopen	63	244	283	553	39
cython's	55	204	29	790	64
df2.merge	44	2	260	33	827
plt.show()	6	46	345	599	356
arr1.shape	1	19	41	677	159
dput()	27	137	459	703	392
eri	78	93	252	605	690
df.index.month	44	164	181	700	407
tvec	52	220	158	476	622
qstackedwidget	6	69	46	380	384
genuinely	10	43	16	590	999
ext_modules	81	162	58	138	584
evenly-spaced	77	29	339	646	340
libiomp5	30	162	94	247	960
dateindex	80	35	245	781	333
area_size*	15	194	269	606	10
np.atleast_2d	1	57	296	278	470
octree	28	14	125	710	841
planck	79	275	324	487	292
nat's	80	258	424	414	509
mpl.rc	58	243	18	764	890
cross-language	38	1	29	317	564
epsg	99	176	135	617	908
1x	72	130	25	465	764
axes.plot()	6	161	208	543	481
555	52	78	68	145	933
pd.timestamp	80	35	309	727	852
encode	32	16	190	477	261
0.0482x	11	224	4	664	743
jeff's	35	238	187	187	308
ax.get_legend_handles_labels()	58	44	90	543	481
outweighs	55	180	341	537	246
joris	35	238	409	187	336
ool	48	59	41	620	636
ooh	65	291	274	205	767
500ms	88	180	55	337	89
cautious	10	231	395	756	812
rigid	99	176	282	617	908
oop	38	43	390	396	389
autodoc	64	6	27	302	854
effort	17	190	377	236	328
capturing	23	187	294	595	257
bansal	28	14	267	710	841
python26\lib\	50	145	225	168	204
inkscape	73	125	248	276	304
make_axes	0	275	140	684	231
growing	22	50	100	534	463
rc_context	64	185	390	732	370
std_err	11	0	349	363	620
grained	64	6	90	78	370
return_type=	43	155	452	495	12
76.95	33	194	162	133	212
mongo	86	68	119	370	126
bottomline	82	241	246	209	472
licensed	96	1	69	461	648
overzealous	29	231	143	716	568
multi-dtype	3	104	124	285	154
coincident	29	151	97	631	762
0:9	52	19	263	284	855
pink	20	119	259	757	786
regularization	79	26	354	135	816
rays	33	288	282	617	725
dt.date.today()	43	273	309	727	852
libblas3gf	13	170	50	104	485
tilt	47	13	162	485	214
charset	32	16	190	477	261
ping	34	197	250	39	915
chemical	28	250	267	425	841
till	29	197	250	39	214
sunday	80	163	254	723	72
subfeature	98	146	317	587	509
pure	82	180	341	537	219
es	78	200	132	550	423
tile	19	294	296	291	601
sworn	65	291	258	407	874
pinv	16	94	462	782	800
pint	38	1	377	317	79
grok	17	43	377	396	803
memoizing	82	180	341	537	246
designer	90	69	46	380	384
downsampling	77	151	428	166	353
reps	93	142	268	139	60
np.zeroes	48	59	41	232	21
designed	38	1	291	317	79
guys	68	207	371	205	767
grow	22	50	485	574	668
down-vote	65	118	227	590	345
outline	61	31	282	212	138
16,000	88	160	220	80	54
maybe	29	28	227	209	472
readdata	92	156	78	105	971
u'time	43	273	309	727	987
fluent	38	43	377	396	354
thorny	10	231	17	500	327
gotoblas2	96	174	408	90	729
verify	29	227	306	457	905
numpy.linalg.eig	16	94	462	782	800
df.index.name	44	134	93	155	987
gesture	28	230	128	429	841
9999.0	15	194	269	141	203
cute	82	241	378	573	29
5x4	71	64	268	738	95
5x5	71	64	213	738	95
5x2	71	64	268	738	95
5x3	71	195	213	674	95
5x1	71	64	268	534	95
pointed	35	238	326	187	336
file1	76	199	30	283	736
5x8	71	195	213	674	95
entity	23	85	294	94	36
stability	28	151	106	654	970
cuts	74	13	143	39	589
differs	74	117	152	122	638
pointer	9	204	153	790	64
transaxes	37	290	265	207	449
designates	78	146	454	796	984
mockup	27	137	459	15	421
encompasses	99	288	339	646	563
texas	43	200	430	204	423
plt.matshow	25	161	320	49	845
3-space	99	288	282	646	138
mismatches	75	66	226	641	444
.format	47	205	346	177	576
finance	23	116	299	581	67
np.lib.pad	1	57	112	232	726
killer	82	180	341	537	463
sooner	17	291	250	170	345
16:20	67	260	12	372	958
touching	37	31	467	780	851
mismatched	29	231	182	536	568
killed	22	283	108	361	248
14.5	15	256	236	514	980
14.4	15	272	236	225	980
14.7	15	256	236	514	980
14.1	46	221	151	331	621
14.0	46	272	61	225	544
14.3	15	256	236	514	980
pandas.core.series.timeseries	43	35	245	616	31
pandas.io.ga	29	206	178	361	473
14.9	47	115	162	550	888
14.8	15	256	236	514	980
event.key	6	46	345	44	112
photometry	77	176	77	623	210
821	50	267	118	483	132
matplotlib.cm.scalarmappable	9	161	331	594	699
822	12	279	162	111	465
python-tk	13	128	50	104	485
medial	33	288	443	617	908
file*	86	222	275	260	183
pandas.dataframe.from_records	92	68	275	183	125
np.ma.masked_array	1	57	198	232	774
width=	60	155	240	495	285
df.apply()	92	156	78	47	971
interference	90	69	46	429	107
johne	35	207	409	187	336
country_codes	43	93	82	558	965
.flags	48	220	85	476	191
imperative	82	241	341	497	669
uint32	70	100	74	332	522
rotation=45	58	44	166	418	890
earlier	29	28	306	791	874
monster	22	61	153	358	282
.column1	89	132	207	215	139
hefty	17	50	100	39	246
runtimeerror	63	244	283	553	39
mechanisms	38	85	69	732	79
1-by-2	71	64	268	519	684
matplotlab	61	136	175	158	847
liclipse	30	15	189	540	344
semi-transparent	20	119	24	757	786
alphas	20	119	259	137	664
tuple()	9	12	455	480	806
force-reinstall	13	170	50	481	174
language	38	1	479	317	354
widths	37	290	63	557	780
unrolled	88	180	55	337	89
listings	78	110	163	479	798
unformatted	86	222	329	601	519
rewrites	22	85	497	691	219
anything's	46	221	124	604	208
os.environ.get	30	5	478	130	870
exotic	82	241	291	573	382
data-columns	10	50	17	691	68
kernel	79	101	428	511	531
lone	98	266	148	191	673
pandas.isnull()	92	99	424	108	203
carry	74	232	37	110	472
rome	80	285	323	742	765
3000x3000	88	142	55	337	89
workaround	29	241	359	573	669
ind_var	78	200	82	463	832
numpoints	58	138	24	418	664
org2	98	93	65	558	965
org3	98	93	82	558	602
org1	78	93	82	558	965
massaged	3	110	6	663	673
errfunc	0	275	140	129	292
xlsxwriter	86	91	367	107	86
continuous	77	151	339	511	762
accurately	28	151	106	631	970
maskedarray	9	220	331	594	782
massages	55	85	29	595	807
splprep	53	10	238	720	396
rdotphi0	11	0	180	215	19
colormapping	25	119	320	49	296
|s2	70	100	74	332	681
blurred	84	195	51	212	353
meshing	99	176	282	617	908
|s3	70	105	74	177	522
orgi	43	52	68	181	985
grammer	38	6	390	158	450
series.diff	19	42	78	13	121
gotta	17	291	274	236	345
hasty	65	291	258	236	345
full-fledged	38	241	359	604	78
venture	17	190	307	590	812
were	29	28	306	791	874
snippit	27	137	459	15	421
gigantic	88	160	100	497	463
mmap_mode	86	222	382	102	820
files	86	222	329	107	519
rstride=1	60	102	418	193	910
self.line	6	161	345	485	162
sans-serif	73	166	134	764	862
reg_per	43	72	68	265	987
mattdmo	34	118	116	97	328
fill=	58	46	452	642	599
converges	79	22	324	566	13
converged	79	22	324	566	13
personalized	99	288	114	293	329
re.escape	32	51	487	151	244
modulus	57	89	8	664	62
pain	17	241	395	334	327
investigations	34	190	116	97	328
shapely.geometry	81	88	110	739	183
paid	83	1	413	461	637
ordinates	33	102	135	646	995
nfft	77	292	451	430	547
contrasts	79	23	332	638	531
pyshp	99	6	278	302	854
fills	74	117	424	680	509
)]]`	52	0	180	284	371
']``	43	72	1	285	154
numpypy	55	174	422	90	651
df_temp	44	134	26	155	827
minibatch	28	26	354	135	816
10x10	71	195	213	674	95
talonmies	35	207	371	205	336
pvalue	78	200	430	204	832
delta	80	258	148	77	377
aggfunc=	44	164	181	460	419
-pi	33	194	269	617	725
cprofile	55	147	55	337	89
c-arrays	55	184	153	691	122
zwinck	35	115	409	407	887
df_conf	43	72	68	265	708
500mb	88	182	373	342	236
decimal=	76	199	322	51	189
re-create	22	171	388	190	629
black	20	119	259	757	786
all_treatments	43	273	309	727	852
splrep	53	10	238	720	396
nyquist	77	292	20	430	227
0.025	11	194	269	606	743
aggfuncs	68	156	182	52	125
pyfftw	55	174	408	90	651
0:5	52	19	160	284	776
0:4	52	19	160	284	776
0:7	60	0	263	485	288
0:6	52	0	263	284	855
0:1	52	19	160	284	776
0:0	72	130	26	59	742
0:3	52	19	160	284	776
0:2	52	19	160	284	776
n_sessions	43	130	180	290	377
row3	43	93	82	556	965
framing	65	118	167	97	999
geometric	99	288	11	315	138
r_ind_ind	52	72	68	290	260
2.3.0	85	276	42	163	621
idxmin	92	156	78	414	971
tiffs	84	219	123	607	427
communicates	23	85	294	691	257
summary	27	193	202	354	508
fulfilling	98	146	127	587	573
922	50	181	118	24	679
923	12	279	488	751	96
communicated	65	118	227	407	887
test_y	22	184	153	358	387
test_x	75	142	206	139	60
wiki	34	254	234	302	565
j=	52	132	273	284	19
linespace	93	275	63	557	780
j0	52	130	273	284	792
j1	52	130	273	174	792
j2	52	130	273	174	792
capitalized	32	237	93	482	864
colorbar.py	50	145	118	483	927
calendar	80	163	254	723	897
patching	94	109	143	732	370
date1	80	258	26	558	742
date3	43	78	26	145	742
date2	80	258	26	558	742
df.plot()	51	44	195	272	12
pearsons	79	23	332	638	11
date=	43	72	93	265	260
behind	10	231	17	335	999
reading	86	222	329	110	519
tur	47	115	409	20	888
deletions	89	50	100	537	246
]')``	70	273	309	678	700
tup	1	57	112	232	601
jp	12	279	488	550	888
31-1	57	100	325	86	22
pandaserror	63	83	283	183	39
jq	76	144	327	147	322
killing	22	61	108	361	505
jl	16	178	473	743	884
jm	48	274	112	305	60
jn	72	178	25	562	756
*len	1	57	180	50	371
jh	84	195	51	592	353
ji	70	178	473	743	884
jj	52	178	273	284	19
jk	72	178	473	743	884
jd	80	163	254	723	897
np.set_printoptions	57	89	452	171	290
jf	35	207	371	407	336
trolling	17	62	247	161	746
2.3.4	85	206	151	685	380
defsize	52	0	263	485	855
jc	12	224	162	133	888
dates	80	35	245	781	410
parentheses	32	263	420	403	768
a.sort()	19	220	158	476	280
configuring	83	171	80	716	467
figure_1.png	73	144	18	16	721
reddit	34	190	307	233	142
nomenclature	10	43	377	200	999
multicolor	61	230	128	626	353
easyinstall	83	170	178	197	482
dated	46	221	124	604	435
myfile.csv	76	199	286	283	413
make_axes_locatable	58	44	90	543	683
holders	23	56	299	94	67
decimals	57	89	8	788	898
python-dbg	83	15	244	165	455
forecasting	79	116	267	761	620
cancer	78	150	445	584	604
50,000	88	160	220	80	54
48000	77	192	365	676	946
cancel	22	187	108	39	214
freak	17	43	377	396	803
datetime.datetime.strptime	43	205	309	125	879
awsome	35	207	274	205	767
user1	78	200	252	463	604
ucla	77	29	77	623	293
tue	67	163	284	718	483
end-point	80	29	77	133	931
*max	60	194	4	65	743
settings.py	30	162	27	247	344
borders	37	31	467	780	851
.fit()	79	23	332	363	620
flebool	35	207	326	187	336
arr.strides	52	0	160	284	855
streaks	77	281	148	796	347
qss	64	161	46	380	384
bmp	84	192	123	607	427
bmu	35	207	409	187	336
those	74	232	159	209	36
art1	89	186	207	683	139
klaus	35	207	371	205	336
disconnected	61	31	24	212	138
map()	19	12	455	480	806
numpy.hstack	19	294	296	278	470
chunk-based	82	50	341	497	29
numpy.polynomial.polynomial.polyfit	79	23	332	638	620
compile	96	174	408	650	455
23000	12	279	162	528	106
sqlalchmey	17	207	274	205	345
n's	71	132	127	139	616
tickvalues	37	290	443	686	62
margin	37	31	467	207	668
from_json	92	68	275	183	322
utf-8-sig	76	16	190	477	413
trades	80	56	299	41	67
destid	98	93	82	558	705
01:57	67	17	223	2	567
sincere	68	207	371	451	98
06:00	67	260	12	372	958
01:50	67	213	95	133	51
middle	37	31	443	191	851
.donda	65	291	258	407	887
numpy.distutils.core	81	88	110	739	584
plot-able	77	195	339	646	340
wisely	34	254	234	525	118
ndimage.zoom	84	230	428	166	353
insofar	10	43	395	537	999
same	29	28	306	209	36
17.2	15	256	236	196	432
17.0	46	221	151	331	435
ax.set_xlabel	58	44	494	341	890
17.5	15	256	236	196	980
intermediary	22	50	426	691	359
kutta	79	10	324	487	610
10-20	88	266	22	574	217
inbetween	37	263	443	780	214
totally	65	291	258	236	345
aspect-ratio	61	31	467	780	851
drain	22	13	250	39	589
-mtimeit	81	5	110	739	361
intermittent	29	231	272	173	568
amazed	17	207	274	205	803
upsert	46	68	119	478	126
100,000	88	160	220	80	54
12:05	85	272	284	718	483
numpy.ravel_multi_index	19	42	296	13	601
reputable	34	173	410	197	915
12:00	67	260	12	372	958
scipy.spatial.ckdtree	53	42	11	293	716
1:9	52	19	160	284	776
presentable	86	6	278	78	628
1:0	15	284	162	606	10
1:1	37	290	443	207	449
1:2	52	19	160	284	657
1:3	52	19	160	284	440
1:4	52	19	160	284	776
1:5	52	19	160	284	597
1:6	52	19	263	284	320
re.compile	76	51	487	151	244
geoprocessing	23	6	69	317	866
line.set_data	6	46	345	418	356
changelog	46	221	124	331	435
newvalue	52	148	461	471	622
chamber	77	200	20	265	227
audience	34	190	307	321	354
nose	13	170	50	165	482
quantal	83	206	211	202	380
specifies	74	117	152	746	638
specifier	32	99	346	601	979
multiindexing	3	156	367	354	125
pip-3.2	13	170	244	165	174
pip-3.3	13	170	50	481	174
witchcraft	17	291	250	236	345
pre-calculate	99	232	185	293	953
testdf	44	134	260	323	827
pickle.pyc	50	145	118	734	679
specified	74	232	37	746	638
joan	35	207	409	20	336
fromnumeric.py	50	145	118	483	842
alternates	77	266	148	574	62
gross	78	56	445	574	347
station1	43	72	68	265	708
matrix-based	82	50	341	497	651
yoff	64	214	295	684	699
inject	27	293	305	420	215
x3d	23	84	278	158	127
i=i	1	224	461	471	881
lexicographically	98	175	129	524	9
models.py	23	162	27	595	421
seconds	88	197	73	196	217
arr_index	52	19	263	364	855
broker	23	116	294	595	18
broken	29	171	306	791	568
auto-scale	37	290	166	207	370
refers	74	117	152	58	638
seconde	80	110	93	601	410
df.data	98	106	317	746	868
i=1	72	132	266	593	306
i=0	72	132	266	593	306
df_arbitrage_opportunities	52	0	263	215	288
i=2	98	146	454	593	984
stations	78	250	77	94	293
othe	78	281	454	425	604
island	99	13	282	429	563
previous_row	52	0	68	290	855
regressors	28	26	168	135	816
somenumber	98	258	82	796	377
decimated	77	28	485	122	673
2015-08-23	67	181	64	24	888
1-liner	82	241	378	573	29
ewmcov	3	193	6	354	125
sandboxed	83	84	69	461	637
einstein	19	178	154	291	833
jointplot	51	136	195	272	847
26983	71	142	268	73	77
marray2	52	19	158	476	757
mingw32	96	45	5	650	634
georeference	33	176	135	617	908
brute	82	241	341	573	29
python-only	55	85	341	349	219
illustrator	73	125	248	276	304
matt's	35	238	116	187	328
mars	33	176	282	617	725
.dshwshr	35	291	409	407	887
client_id	43	164	493	76	593
holdings.date	43	47	493	71	593
happier	82	241	479	334	327
belated	35	238	371	187	336
blas_opt_info	96	45	408	650	729
wasn't	65	291	410	791	874
*map	87	55	493	76	591
strawberry	83	15	163	253	798
network's	28	14	267	710	841
.eps	73	125	248	276	304
plt.bar	51	155	63	557	780
unicodeescape	63	16	190	477	261
corrplot	64	115	125	302	142
leaked	22	85	397	128	282
videos	23	125	128	429	107
n=10000	88	180	55	337	89
importing	81	88	110	739	183
lifetime	22	61	485	358	282
4,000	88	160	220	80	54
mangles	74	171	152	458	638
fitcovariances	29	231	395	335	508
pylab=qt	90	15	189	226	818
memmapping	86	222	426	611	820
df_input	3	297	454	587	984
arrowhead	61	31	24	212	276
takewhile	87	57	295	232	726
un-accept	65	291	258	407	345
hybrid	38	13	341	458	79
field	74	110	37	746	868
facecolor=	60	155	240	603	285
utf-8	76	16	190	477	261
denom	98	146	198	139	62
month=1	80	35	65	155	333
offered	38	238	187	187	308
matplotib	61	136	175	158	847
opacity	20	119	24	757	786
textmate	83	15	189	540	818
obsessed	17	43	17	236	354
k-fold	28	26	354	135	816
students	28	150	445	479	275
durations	80	29	299	77	333
vertex	99	288	11	315	138
deriving	74	232	386	746	526
numpy.linalg.det()	16	214	295	684	782
brands	47	134	202	155	622
np.string_	70	59	74	332	681
.egg	13	261	486	247	368
pa.loc	52	148	273	284	776
remote	83	84	376	184	831
quadpack	55	174	125	90	651
hugely	68	241	465	432	343
starting	74	13	37	746	868
facecolors	25	119	320	49	845
preprocessed	74	232	37	663	673
matchtemplate	84	230	102	166	427
represent	74	232	37	746	868
....?	60	19	162	50	12
looped	74	50	497	534	68
ylim()	58	44	494	341	388
]])`	52	19	303	364	640
bugreport	46	173	359	604	208
08:00	67	260	12	372	958
remeber	29	28	459	15	472
rebind	9	237	158	436	864
....,	76	155	322	495	987
.....	47	224	30	424	588
invariably	10	231	17	500	215
talks	34	254	234	302	565
unplotted	37	263	443	191	851
liam	35	207	371	205	767
reluctant	17	43	377	396	803
textparser	92	68	275	183	699
storeid	3	93	243	558	965
strptime	92	35	245	560	879
dyld_library_path	30	122	478	159	181
dt.datetime.now()	43	201	309	727	24
dataframe.mean()	92	193	78	105	971
heterogeneity	10	227	17	537	246
_png.so	83	206	211	202	482
max_int	87	59	4	770	985
+t	52	0	263	215	288
art2	89	186	207	683	139
fall	74	13	37	646	66
bottleneck	82	180	100	537	219
extractors	28	26	354	135	816
zero-padding	77	292	20	430	547
reminding	35	207	371	205	767
data_array	47	49	461	471	77
copy-pastable	27	293	403	420	579
titled	74	110	306	746	36
periodicity	77	292	20	430	227
cm_tilde	1	148	112	231	981
19	12	279	319	111	465
titles	37	290	90	391	76
x.index	87	0	493	76	591
lawyer	78	150	252	479	604
val3	43	72	93	204	764
val2	43	93	82	204	965
val1	43	93	82	558	965
val5	78	134	65	155	965
centering	37	290	443	780	76
ffff	70	59	74	332	522
.sortlevel	44	164	181	700	827
vispy	23	6	278	158	450
time_string	76	199	487	125	244
1457	43	105	93	145	764
activations	77	266	445	479	616
pickable	6	161	388	572	109
outgoing	47	224	162	528	888
fastcluster	13	170	50	202	284
1.234	47	78	162	133	272
.value	43	273	309	727	321
qiime	83	206	178	197	467
title1	20	281	24	42	995
log_upper	78	258	82	558	377
jonas	35	207	274	205	767
vals	47	148	461	471	622
title=	60	155	240	495	12
search	74	232	37	293	3
upcast	70	99	421	332	979
y_data	60	155	177	42	910
c_clfgtlabels	75	106	10	601	979
narrow	37	31	467	631	589
pathological	10	231	17	631	215
superduper	78	93	445	41	984
debugger	90	15	189	540	383
np.random.binomial	11	123	173	50	60
calcs	3	50	497	534	953
~2000	88	160	220	80	54
summary()	92	193	125	703	392
debugged	17	231	395	335	874
np.histogram2d()	25	102	63	557	780
pretty-print	38	241	291	756	382
np.prod	87	57	121	673	608
establish	74	232	397	436	868
fixe	35	207	371	205	767
non-pythonic	82	241	378	573	29
libertine	73	166	134	764	862
python27\	50	145	225	168	204
non-	92	146	424	414	509
aperture	77	292	20	430	547
achieving	82	241	378	573	29
controlling	64	232	152	78	404
town	17	150	35	149	275
none	47	224	452	200	622
amro	35	207	326	187	336
vladimir	35	115	409	20	336
pip-installed	83	206	211	197	380
der	47	115	58	127	888
des	1	130	349	539	881
det	16	94	462	782	800
dev	46	221	124	331	435
arr.resize	1	57	41	232	21
num_cols	1	59	41	232	21
del	22	61	388	88	282
dem	33	176	135	623	293
den	11	186	4	664	743
strategies	28	116	159	321	79
deb	13	170	211	104	482
dec	80	163	284	718	483
def	0	224	295	44	231
deg	33	194	287	719	212
purchases	78	56	445	41	67
compare	74	227	37	457	905
.iloc	92	104	23	733	92
sub-totals	78	56	445	520	347
mergedmask	52	148	206	605	714
disparate	88	50	100	497	122
set_autoscalex_on	64	44	452	642	683
purchased	78	150	445	479	226
+3	80	258	162	796	377
df1.id	44	134	260	558	410
re-read	65	118	258	407	887
minor_xs	92	104	23	733	154
]]))	52	211	263	364	265
np.uint32	70	59	74	53	522
+0	57	89	201	770	681
lexicographical	57	99	182	524	9
mutable	9	109	421	594	903
df1.ix	43	72	68	290	708
1699	52	19	273	284	855
galactic	61	176	175	626	908
sim_extracted_dfs	9	106	421	594	699
hardcopy	73	125	248	276	304
par	88	180	55	337	89
numpy.empty()	75	294	246	231	782
blood	78	150	204	149	423
mariadb	23	84	294	370	126
coax	40	294	246	231	678
c-style	40	184	270	691	122
created_at	43	67	223	125	410
paw	34	115	116	97	328
250.000	88	160	220	80	54
coal	47	52	68	290	437
secs	88	197	73	196	217
npzfile	9	109	85	594	699
pleasure	35	207	371	205	767
nltk	83	206	178	197	816
\xc9	32	16	190	477	261
file_list	47	224	461	471	736
existence	74	227	317	457	868
buffer_df	47	134	260	290	827
rgb_image	75	106	421	471	881
thelist	52	72	30	471	622
energies	77	151	97	511	210
total_sent	78	56	445	41	832
authentication	23	84	376	184	831
squaring	16	94	8	562	62
wizards	68	241	341	432	571
*pi	11	234	242	664	56
x_id	32	144	58	708	202
return_index	19	42	296	121	886
timestamp	80	35	245	781	920
np.trace	9	106	295	684	231
uhh	65	291	258	407	887
walls	37	31	443	780	276
dim_x	1	132	273	139	77
values()	75	12	455	776	903
stepped	51	13	63	22	780
lat1	72	130	273	174	624
fancy-indexing	19	294	296	231	650
lat2	72	130	273	174	624
pam	81	162	486	247	344
token	23	150	163	479	798
habits	17	1	483	396	275
x_lim	64	28	452	642	370
clamp	79	103	317	436	744
idem	3	197	497	94	616
redistributable	96	45	5	650	634
everyone	35	190	371	205	345
myfield	70	105	93	53	764
low-pass	77	292	428	430	547
hundred	88	160	220	80	54
idea	68	28	227	432	472
prefilter	87	275	447	673	612
seniority	43	72	68	181	708
ides	83	15	189	29	818
oz123	35	207	371	205	336
buildozer	30	170	376	184	467
pigeon	78	67	223	463	965
projected	33	176	282	617	908
participants	78	286	163	253	798
_can't_	9	109	246	691	370
non-uniform	53	29	339	720	340
reviewdate_month	43	47	231	204	593
6x3	71	64	268	738	981
6x2	71	64	268	738	95
410	98	142	454	528	175
pathetic	17	62	274	161	345
10cm	71	281	114	646	995
malloc()	22	184	153	358	282
pleasant	82	241	291	78	628
disposition	74	232	152	746	638
up-voted	35	190	3	702	216
wafer_number	78	164	447	204	832
df.timestamp	43	273	309	727	852
gdal	84	192	123	607	293
recast	70	99	74	601	979
omit	74	263	246	468	655
running	83	206	108	361	467
audacity	23	192	365	676	946
scipy.stats.norm.pdf	51	23	63	557	239
opencv-python	28	230	128	429	841
pairwise_distances	16	94	293	293	716
utilizes	38	6	341	317	669
matplotlib.table.table	64	6	90	78	683
someday	17	190	377	396	275
utilized	55	85	69	349	431
approximately	88	197	73	80	217
py_finalize	22	46	108	599	356
scoping	10	237	397	436	864
wager	82	241	341	500	246
polygons	99	288	11	315	138
np.all()	19	42	198	605	512
.tostring()	48	59	357	332	15
wls	79	26	354	638	620
twenty	88	160	220	80	106
construct	74	232	386	110	359
obligatory	10	118	116	97	812
paint	61	69	282	212	786
01:00	67	260	12	372	958
pains	17	43	377	396	571
quadratic	79	10	324	487	610
needle	37	148	443	191	714
mentality	22	50	341	691	118
selector	64	104	23	733	154
woops	65	291	258	407	887
b	72	186	25	174	756
compliments	35	207	371	205	767
group-year	78	56	77	463	931
y_new	1	102	418	129	910
scalar_field	33	102	135	695	684
3.3.1	85	276	42	685	380
3.3.0	85	276	42	685	858
3.3.3	85	276	42	685	858
you'r	65	28	227	407	472
subfeature1	44	93	82	558	804
3.3.4	85	276	42	157	621
traveling	78	197	250	550	931
copy-paste-runnable	27	293	403	420	579
objgraph	29	171	306	361	473
84th	98	110	306	155	428
multivalued	40	232	154	626	382
usecols=range	76	199	286	51	413
confirms	29	28	306	791	905
1.2.x	85	276	42	681	252
verson	46	221	124	202	435
paths	30	162	80	247	344
nir_band	52	0	263	284	19
k*	11	234	4	562	19
matplotlib.pyplot.contour	29	28	208	684	481
k-	60	155	240	603	285
k3	72	262	25	174	624
k2	72	262	25	174	832
k1	72	262	25	174	832
k0	79	275	25	566	306
commentary	34	173	307	97	328
b^-1	16	178	462	562	800
pandas.date_range	80	149	447	77	333
k=	89	186	207	683	306
folders	30	162	486	247	917
vnc	90	84	376	184	831
bottle	22	147	100	537	219
significand	57	100	325	86	22
listedcolormap	25	119	320	49	296
farenorth	35	207	371	205	767
medium-sized	88	160	100	94	54
depths	77	29	77	623	210
nitin	35	207	371	205	336
foldera	47	200	58	550	588
skiprows=3	76	199	322	51	189
cygwin	13	128	5	393	482
skiprows=1	76	199	286	51	189
skiprows=0	76	199	286	51	413
60hz	77	29	339	429	353
12ms	77	197	73	574	89
df.iterrows()	92	12	461	47	68
data.view	48	59	41	332	522
kb	88	182	373	549	236
path1	30	162	30	165	588
kg	72	186	25	174	756
kf	0	275	461	684	231
ke	72	186	25	150	756
kd	28	227	11	293	716
kk	52	19	160	284	622
kj	11	178	473	743	884
ki	16	178	473	743	884
saturate	84	195	51	592	353
ko	60	155	240	42	285
kn	72	186	25	683	306
km	33	176	135	528	212
kl	16	178	473	743	884
ks	93	275	63	557	239
kr	72	186	25	174	756
kp	30	259	277	381	588
kw	0	224	226	424	8
kv	52	224	461	424	622
ku	16	180	55	150	89
kt	11	186	242	531	56
-200	12	194	103	606	206
ky	60	186	418	129	910
kx	11	186	242	129	56
lumping	78	56	445	796	984
thomas	35	115	409	20	336
numpy.power	57	89	201	664	743
scattered	61	288	339	646	340
veclib	96	45	408	650	729
corresponded	98	146	317	746	868
unsolvable	10	151	106	631	970
cstringio.stringio()	64	125	246	209	472
carefully	65	118	116	407	328
man's	82	137	106	525	246
a.fill	1	57	41	50	21
per-instance	64	109	90	732	370
df.boxplot	51	164	195	272	12
best-practice	82	241	378	573	29
df1.append	44	2	181	700	895
bitdepth	73	144	306	122	473
nervous	22	187	395	361	473
data.dtype.names	52	72	93	435	622
19th	80	163	254	723	72
generators	19	12	455	480	806
a_id	78	93	243	558	965
a_ij	72	186	25	683	756
capitan	85	74	233	198	858
4:5	43	72	68	265	708
notation	32	104	8	200	898
permission	30	162	94	250	348
luke	35	238	326	187	336
cheaper	82	50	100	497	463
recombining	3	50	6	354	953
most_common()	82	50	100	497	463
np.random.choice	93	123	193	628	361
xlabel()	6	46	345	418	356
real-life	82	137	291	525	970
restart	90	187	108	540	248
groupby.sum	22	50	497	691	68
whitening	77	146	148	98	509
np.convolve	19	101	447	13	612
altura	48	59	74	332	60
c=z	60	155	240	193	910
float*	71	64	268	519	684
between_time	92	35	78	614	333
individual	74	232	37	534	36
nunique()	92	42	78	105	121
float4	75	204	29	790	64
preformed	98	180	497	534	68
ascii-art	61	137	175	432	951
numpy-stl	83	170	80	197	467
halved	77	292	20	430	547
halves	40	64	154	534	953
myriad	73	125	248	131	304
envelopes	99	266	22	574	668
numpy-1.9.1	30	162	244	165	960
numpy-1.9.2	13	261	486	797	368
interfaces	38	1	390	317	389
c=1	72	275	25	174	306
floats	57	99	325	788	979
_may_	55	237	397	436	564
potentially	82	50	100	497	463
.reshape()	19	294	296	278	470
if-statement	75	106	497	684	231
float_	70	99	74	332	681
alot	35	207	371	205	767
optimize.curve_fit	79	22	324	566	13
non-pandas	82	137	416	573	29
supply	74	232	226	641	638
recycling	64	231	390	200	392
alloca	55	174	29	500	564
sci-kit	28	26	354	135	816
shutdown	90	187	108	361	248
file.txt	76	199	286	283	754
price2	80	258	26	558	377
zeta	52	148	273	139	714
throughout	74	171	306	94	36
suppressing	29	263	143	716	526
timedeltaindex	80	35	245	781	333
fontsize=15	60	155	240	495	285
rotatable	61	136	175	158	625
fontsize=12	60	44	452	642	162
create	74	232	386	110	359
aapl_ma	78	200	82	463	965
secret	17	43	227	233	571
erfcinv	17	13	395	654	345
astonishment	10	43	317	605	999
re.sub	32	51	487	151	244
6.12	83	206	178	685	380
6.10	83	206	178	685	380
ndframe	9	109	331	594	386
understand	29	28	227	209	472
grouper	92	156	78	763	121
prices	80	116	299	581	67
honking	10	291	479	321	812
classifications	28	26	354	135	816
comparator	9	106	397	684	761
bill	35	115	409	20	336
tolerate	10	151	106	500	246
substrings	32	286	163	253	798
avg_hr	43	47	181	700	895
price_	32	72	93	155	622
fun	17	291	274	236	812
matplotlib.pyplot.boxplot	64	161	226	641	664
sub-plots	37	139	90	391	543
shoddy	35	207	371	451	98
ordereddict	3	12	455	776	903
cents	65	137	116	97	812
4-dec-14	32	83	346	601	311
encountered	29	231	389	428	57
decoration	32	137	246	403	669
arenas	22	61	71	349	282
28.26	74	232	306	209	36
qobj	9	106	310	594	699
how=	44	149	253	460	861
.svg	73	125	248	276	304
emphasize	10	118	116	590	999
copying	40	184	153	691	526
lenient	82	241	10	497	122
mod_wsgi	83	84	376	184	467
definitively	10	118	395	236	999
assignment	75	104	158	476	154
moment	29	28	459	209	472
implicitely	10	43	227	500	999
aggregate	3	193	6	354	121
testpixels	48	19	112	305	21
java's	55	204	29	691	64
pyflakes	83	206	80	197	482
percentages	37	290	467	520	66
halve	88	283	373	549	387
spent	17	62	88	753	180
landmark	33	176	443	191	725
revising	34	137	116	590	328
chemistry	23	14	430	149	841
v1.8.1	85	206	151	202	380
v1.8.0	46	221	151	331	435
v1.8.2	96	206	211	157	380
numpy.choose	19	42	296	13	601
np.ma.masked_equal	87	57	112	232	714
distutils	30	170	94	165	455
np.fft.fft()	77	292	20	430	547
15:16	67	260	12	372	958
15:15	67	260	12	372	958
atomic	10	85	294	691	135
alignment	37	31	467	780	76
dslr	23	192	365	676	257
hated	17	62	88	396	275
alternate	74	232	187	209	36
32-1	57	89	325	141	22
excited	17	43	377	400	803
qframe	37	69	46	380	384
rebound	81	237	397	436	864
matters	10	227	17	209	305
expecially	38	1	291	317	79
truely	38	1	17	200	354
apply()	92	156	78	105	971
superpack	13	128	5	797	391
precipitation	80	29	77	77	210
asof()	92	156	78	47	971
apk	30	170	244	165	960
untyped	0	237	397	436	231
pyplot.hist	51	136	63	557	780
numpy.complex	75	99	421	601	979
indication	10	28	227	432	999
df.two	87	52	198	770	985
y_err	60	275	418	129	756
scrip	90	187	108	540	248
picarro	80	29	73	77	931
vols	98	146	26	155	509
inplace=true	44	164	181	700	895
back	74	13	143	190	141
test.xls	76	199	286	283	413
overdetermined	79	10	324	214	610
examples	27	254	234	302	565
0:10	52	19	160	284	776
matshow	25	119	320	49	845
0:12	67	19	162	305	159
3-way	22	61	388	128	214
ontop	61	176	128	158	908
0:16	52	0	160	284	776
pex	83	162	178	247	564
pet	78	150	39	584	423
pep	34	254	234	302	565
peq	72	19	25	139	756
per	88	197	73	196	36
pen	73	243	286	16	413
bogus	29	231	389	423	509
ellipsis	75	104	421	359	650
peg	65	13	143	39	420
notepad++	32	16	190	477	768
sub-image	77	195	213	674	744
google's	23	116	278	581	565
s12	70	105	74	53	764
example-	27	137	116	15	421
200x200	71	142	213	674	95
jterrace	35	238	187	187	308
example1	75	297	317	587	868
re-order	3	297	182	587	678
json.dumps()	92	68	275	183	322
wickham	38	6	291	302	628
string's	29	28	152	601	638
beans	78	200	252	42	423
consequently	74	232	152	209	63
skip_blank_lines	76	185	322	641	676
scripts	83	15	189	540	344
interpolant	53	10	238	487	396
script.py	90	15	189	540	818
fileinput	86	54	382	260	698
users\	50	145	225	138	204
aug-09	43	200	231	71	255
mkl	96	174	408	90	729
nframes	1	274	112	677	60
pared	27	238	187	39	308
infected	78	150	252	479	423
homemade	17	6	274	429	762
forward	74	13	148	98	509
paren	32	263	420	468	768
bored	17	190	250	236	345
re-shaping	3	50	6	354	125
adjusting	37	290	467	207	668
xy-problem	34	173	234	302	142
nutshell	10	232	152	112	999
rejection	79	151	428	511	531
element-by-element	75	64	154	113	135
labview	86	192	365	676	946
transaction_date_time	78	93	82	204	708
np.place	19	42	296	13	512
shopping	78	150	445	479	604
blit()	6	46	345	572	373
append()	19	294	455	278	782
engineering	28	14	267	396	857
tostring()	19	184	357	260	782
ndays	98	146	454	796	931
centerpoint	72	186	418	129	756
itertools.groupby	19	42	455	480	806
plugged	29	28	116	97	673
functionality	38	6	291	317	79
two-column	3	232	6	354	125
explaining	34	118	116	590	328
aggregates	3	193	6	354	451
guy's	34	190	307	500	215
f2()	88	197	497	337	807
fisher	79	23	332	638	531
aggregated	3	56	6	354	66
calculates	79	117	185	98	347
divide-and-conquer	89	94	207	261	90
out-of-bounds	63	104	49	715	650
statsmodels.tools.tools.ecdf	79	23	125	761	239
discards	74	117	317	58	509
non-zeros	71	142	127	139	988
minors	37	31	443	780	276
fminbound	79	22	324	566	13
?..	29	28	227	361	472
un-comment	0	46	345	572	231
query	86	68	119	478	126
successfull	29	62	272	161	457
reposted	34	190	307	702	216
ulimit	63	15	392	199	383
todense()	16	94	333	36	788
granular	80	29	467	22	931
striping	74	232	128	429	526
11:30	67	260	12	372	958
vectors.t	1	178	473	743	884
assay	77	281	114	425	563
mlab	38	6	278	158	450
confounding	17	62	88	161	874
greyscale	84	195	51	592	427
parfor	55	214	422	90	219
array's	75	184	10	231	122
severely	10	43	106	321	246
-0400	80	285	309	2	24
os.sep	32	162	420	468	768
$p$	82	50	341	497	219
choppy	61	151	282	212	303
optics	28	14	267	710	841
versioning	83	1	80	202	564
unsatisfied	17	43	377	396	803
1085	12	181	58	24	888
label=each	60	0	495	485	162
1080	71	142	268	305	175
0x0	71	195	213	674	95
crop	84	230	128	166	353
cron	23	84	376	184	831
layouts	64	32	278	78	450
read_hdf()	22	283	373	549	236
logscale	37	290	269	686	388
gnu95fcompiler	30	259	244	165	30
colors.py	50	145	118	483	927
fit_once	0	275	295	44	231
pycairo	73	38	248	635	810
tiff_files	65	118	397	436	864
-24	57	89	4	664	743
-25	15	194	269	606	212
-20	15	194	269	606	212
-23	15	211	236	514	980
gzip.open	76	199	286	283	736
secant	61	31	282	212	276
dendrogram	61	136	175	780	854
non-log	37	290	467	706	614
mathjax	73	125	248	131	127
id_y	44	93	361	126	965
consistant	22	283	100	548	668
multinomial	79	23	332	511	239
1337	47	224	162	424	888
np.int16	70	59	74	119	522
stateful	38	237	390	732	389
df.astype	70	39	309	332	522
bachelor	50	145	277	734	469
intercept	79	23	332	363	620
davidmh	35	207	409	205	336
anchoredtext	58	44	265	651	683
mindset	17	43	377	396	803
remark	35	238	116	187	308
id_2	3	110	243	155	984
id_1	47	110	163	482	750
sightly	79	137	459	525	382
named	81	88	110	739	584
nameb	47	67	256	145	764
results.append	47	224	263	424	881
swapfile	22	283	373	549	236
private	9	237	397	436	350
beanstalk	13	128	376	670	467
names	3	110	6	482	444
np19py26_0	85	276	42	685	621
oval	61	288	282	212	138
resets	22	117	485	58	214
apples-to-apples	10	227	317	153	135
.pip	30	259	277	421	960
distplot	51	136	195	272	847
pd.dataframe.from_csv	76	199	322	51	189
themselves	74	232	159	209	36
visible=false	58	44	494	418	890
x32	85	30	480	685	858
one-dimension	75	106	268	519	684
vlines	51	44	24	777	276
numrow	52	0	68	290	622
numpy-arrays	86	50	426	611	820
row-vectors	71	64	268	150	981
cv.fromarray()	9	106	29	607	782
windspeed	33	176	77	623	210
resolution=	60	155	240	71	255
ashamed	17	291	371	236	345
informally	10	231	17	417	999
arranging	74	50	386	548	526
unimplemented	9	109	331	691	564
name=	44	164	170	297	895
pathos	19	85	455	480	807
plotting_context	64	185	452	641	683
pagination	22	171	100	334	275
schorsch	35	207	371	205	336
gcc-4.2	30	170	94	165	960
gcc-4.0	13	170	94	104	482
chroot	83	84	376	184	467
max_columns	64	185	452	171	290
praise	34	238	187	97	308
abcd	47	67	223	145	764
proportions	37	31	467	207	449
usign	29	28	459	15	473
.set_axis_bgcolor	60	155	240	485	285
reconstructed	74	171	386	746	161
-m32	50	145	133	117	30
_center	0	46	345	684	231
excel.py	50	145	118	580	429
date.txt	76	201	309	2	987
afm	73	162	134	247	862
numpy.frombuffer	70	184	357	790	64
filepath	76	199	286	283	736
ax_direction	11	178	4	562	726
afg	35	115	162	133	888
regions	99	288	339	646	563
winners	78	56	445	520	347
datsets	74	232	37	110	36
xnd	75	294	10	278	470
buildings	99	250	282	646	563
frac	58	44	265	641	683
specifications	64	232	37	78	370
fran	75	28	306	209	36
struggeling	29	28	272	161	457
philosophy	38	1	479	321	354
bothered	17	43	258	236	345
blkproc	71	101	125	703	392
vtkpoints	74	232	37	626	684
np.argsort	19	42	296	524	886
0.13260155	15	211	64	364	265
italics	73	166	134	131	862
tochange	9	106	421	471	699
gigabyte	22	283	373	549	236
tucaseid	43	2	253	204	895
numpy.polyval	79	10	332	363	620
fallback	38	68	119	478	126
800,000	88	160	220	80	54
six	83	206	80	202	36
outermost	99	288	497	191	358
in-house	23	14	267	761	866
pd.dataframe.from_dict	44	164	181	700	895
lands	78	200	82	204	832
l_	1	274	268	305	726
surface-plot	25	102	208	129	910
bunch	74	232	159	458	36
lf	32	51	487	556	244
traders	80	56	299	723	67
tab-completion	64	15	189	29	818
le	87	57	112	232	726
lb	72	130	273	174	47
lc	91	237	295	436	231
la	47	115	128	550	475
ln	11	234	242	531	56
lo	47	115	231	550	888
ll	47	224	246	501	472
lm	79	23	462	638	11
lk	28	186	25	710	841
pd.expanding_mean	43	47	493	76	593
li	35	115	409	20	336
lv	72	186	442	174	161
deletelater()	6	46	345	599	356
lt	0	67	109	512	231
lu	16	94	462	782	800
lr	79	26	354	135	816
ls	30	259	244	366	588
lp	16	10	324	214	610
latitude	33	176	135	617	298
x.fillna	87	47	493	76	593
lx	72	186	273	683	306
ly	72	186	25	531	56
ax.view_init	58	44	28	418	162
__getitem__	9	109	331	55	386
installers	13	128	5	797	391
slinear	53	22	238	720	396
dayflag	43	52	68	290	708
.time	43	273	309	727	852
strive	75	50	100	691	122
data_all	1	142	461	139	756
covering	61	176	467	646	851
crudely	88	137	459	15	421
l6	72	186	25	150	756
ax.arrow	60	44	495	485	221
l2	16	178	185	150	756
recarray	75	99	10	663	843
l0	72	130	431	174	624
theano.config.floatx	70	59	74	332	522
l=	47	224	180	424	371
plt.text()	64	136	90	572	712
order=1	53	22	238	720	396
order=2	53	101	238	720	396
programmed	17	1	377	396	275
ndarray.t	19	294	295	231	782
syntatic	52	104	158	476	650
programmer	17	43	377	396	98
pd.plot()	6	161	226	641	481
marius	35	207	371	205	767
rez	89	266	207	261	90
df.hist	60	155	452	689	12
7.3-2	85	276	233	685	858
res	47	224	349	139	756
defend	38	1	80	732	564
req	30	259	58	381	588
rev	78	200	430	204	832
ret	47	224	158	384	757
wholly	57	89	8	654	246
flu_test	44	201	260	348	827
rel	78	200	252	204	832
rec	75	294	10	663	843
ref	47	224	234	746	161
cwd	30	162	478	247	344
red	20	119	259	757	786
plt1	0	224	226	418	162
const_min	70	78	74	332	694
generate_value	52	19	295	284	622
frank	35	115	409	20	336
0,111	52	211	263	364	265
likelihood	79	23	332	638	531
bleed	20	31	259	757	786
convert_numeric=true	44	39	309	171	934
s=10	60	155	240	495	285
set_clim	25	161	320	49	109
compatability	29	231	80	202	568
filtfilt	53	101	428	166	547
df.date	43	273	309	727	852
arbitray	82	50	6	663	246
mcve	27	293	403	709	579
nbids	63	28	485	361	39
elasticsearch	23	68	119	370	126
re-	61	6	278	302	565
retain	74	232	37	548	305
bytestring	70	100	357	260	405
subregional	78	56	445	10	66
scipy.stats	79	23	332	511	239
.transform	87	164	493	76	419
figure.figure	6	136	175	572	847
embarrassed	17	291	258	451	803
hurdle	17	62	88	161	180
numpy-way	82	241	341	573	29
set_ylim	58	44	494	341	388
it.operands	52	19	263	284	855
monkey	94	109	331	732	370
right-click	90	187	32	624	536
realistically	88	29	100	94	616
x.value_counts()	87	47	493	76	593
e2vec	71	64	268	305	981
contour-plot	37	136	175	780	847
loansdata	47	134	68	290	827
messing	17	62	88	458	417
bugfixes	46	221	124	202	435
num_features	88	142	100	139	60
kind-of	83	28	274	209	472
ogr	86	6	278	607	405
environmental	83	84	376	184	467
df.pivot_table	44	164	181	700	895
cairocffi	73	6	80	197	564
slack	40	50	100	537	122
pointers	68	184	153	691	64
df.unstack()	44	24	181	700	827
joris's	35	238	187	187	308
beauvel	35	207	371	205	336
w2	72	186	25	683	756
retreive	75	146	10	605	953
mp.dps	57	89	8	788	743
regenerated	22	171	388	190	214
tidy	27	137	291	458	628
comfortable	17	43	291	396	803
tide	80	29	77	182	995
imput	47	224	30	601	508
1-minute	80	56	299	77	67
elementwise	16	214	154	113	135
itertools.izip()	19	12	455	480	806
extremas	99	103	282	646	563
v2.6	83	206	178	685	380
v2.7	85	276	178	685	380
pickleable	9	109	331	691	370
gravity	33	14	282	710	725
v2.0	38	6	278	317	79
cdist	16	94	185	293	716
1.33	15	256	61	606	10
1-indexed	40	263	270	713	428
buggy	46	231	395	335	460
set_ticks	58	44	166	341	184
anonymized	3	160	243	80	54
callable	9	83	383	616	286
eight	71	160	454	674	953
transcript	27	293	35	420	142
hoogendoorn	35	238	326	187	336
data.iloc	52	19	263	284	855
enthusiastic	17	43	377	321	803
subplots()	6	139	90	324	543
__init__.py	81	162	478	483	927
callers	44	175	129	204	9
absurd	10	283	395	574	812
workspace	86	162	478	643	344
special-casing	57	28	410	788	812
charles	35	207	371	20	336
numpy.argmax()	19	42	296	13	512
one-off	82	241	341	497	463
gcc.exe	50	145	133	138	204
misclassified	74	297	163	746	798
stamped	80	29	299	77	466
coloring	61	136	24	757	786
axarray	52	148	206	471	622
fecha	43	35	26	204	987
c2054	63	244	283	24	323
anyone's	17	137	116	233	345
backend_bases.py	50	145	118	27	927
ambiguity	10	104	17	335	215
theta_matrix	98	132	273	796	77
chi-square	79	23	332	638	11
c2059	63	244	283	553	323
equilibrium	79	10	324	487	610
np.random.random_integers	48	123	173	50	21
edchums	35	238	187	97	308
list_of_objects	99	297	185	293	868
nrows	1	229	112	677	442
aforementioned	74	232	37	746	36
timing	88	147	55	337	89
dtype=int32	48	19	52	364	265
areas	99	31	282	212	563
np.ma	19	294	424	13	782
rebinning	53	101	125	302	565
organ	78	17	351	4	385
cached	22	61	153	358	282
encounters	29	117	108	361	568
color-code	61	136	175	22	847
recfunctions	38	88	395	739	183
pyobject_richcomparebool	9	109	125	594	699
pulses	77	292	20	430	340
pertains	29	118	116	791	214
dreamhost	83	84	69	197	467
caches	22	85	294	128	431
conform	10	232	152	190	456
untrue	10	263	317	791	655
plot_test	30	259	478	381	960
df.column	3	134	65	155	125
df.reset_index	44	164	181	700	895
x_arr	75	106	206	695	719
wd	72	186	25	182	210
cournapeau	35	238	409	187	812
wc	76	199	30	283	736
xxxxx	47	78	52	53	764
zeros()	19	294	296	231	782
exploited	82	297	185	293	382
literate	17	43	377	396	803
use-cases	10	227	291	321	79
straightly	64	6	359	604	208
os.path.dirname	76	144	286	283	413
wo	60	155	240	495	285
temp_g	72	148	206	476	757
2014-11-30	80	163	254	2	24
cmd.exe	30	15	189	540	383
grumble	10	190	341	500	812
batman	95	115	430	20	423
implementing	28	62	341	525	382
panda3d	83	43	377	396	812
plt.text	58	44	265	418	890
synced	37	31	467	780	851
optional	64	185	226	641	638
tensors	16	64	154	150	981
legit	65	291	395	236	345
d_idx	1	178	112	677	726
instant	22	29	73	361	214
freely	38	1	69	317	671
attributed	28	227	106	631	970
fulfilled	98	146	317	605	602
df.drop_duplicates()	44	164	181	735	827
divider.append_axes	58	138	494	418	543
attributes	9	109	386	436	386
passing	74	232	386	641	638
periodogram	77	292	20	430	547
glorious	65	291	258	236	345
comment	35	238	116	187	336
x-direction	37	281	443	191	964
commend	27	28	116	190	472
m10	72	19	112	215	19
laugh	65	291	258	236	345
add.reduce	19	214	121	673	761
r5j_bvnd2	50	259	277	117	160
15.10	85	30	480	785	380
numpy.ndindex	19	294	10	231	512
piecewise	53	10	238	487	396
.show()	6	46	345	599	356
package's	34	254	234	97	142
json	86	68	275	370	519
indicators	3	116	299	94	67
fp-model	96	170	133	117	30
kitchen	75	12	10	139	981
subelements	70	106	93	601	681
arises	29	231	306	173	378
perplexed	17	43	88	236	803
alko's	27	137	187	15	308
generate_wind_cap_new_data	43	149	447	460	612
essentially	74	232	459	209	36
-reina	65	291	116	407	345
append_fields()	75	106	10	231	981
napoleon	83	6	80	197	564
ax.set_xticks	58	44	166	341	184
df_out	44	134	93	204	965
7-8	88	197	73	528	217
atmospheric	33	176	77	623	293
poster's	34	118	116	590	328
data2.txt	76	199	30	283	754
__iadd__	9	109	331	55	878
df.filter	44	51	109	512	990
mat.shape	1	19	112	284	726
dtype=float32	48	19	112	364	265
contraints	47	224	162	424	588
follwoing	35	137	459	15	457
virt	30	84	376	381	960
serialnumber	78	93	82	204	965
slicehost	23	84	69	670	637
numpy.amax	19	294	121	13	608
respected	10	231	152	78	628
python-2.7.5.amd64	50	145	225	168	204
prose	34	190	116	590	328
arabic	73	125	134	131	862
.argmin()	87	0	4	673	830
bbox_to_anchor	58	138	265	651	224
progressing	34	254	247	321	328
indistinguishable	20	119	51	759	303
toggling	90	69	32	572	536
genfromtxt()	86	54	382	260	698
plt.axes()	6	139	90	418	543
price_trend	3	134	93	155	622
cubic	53	10	238	720	396
basemaps	33	176	77	623	293
py3k	46	221	124	202	435
%y-%m	43	205	493	125	593
assessing	28	23	354	638	531
countplot()	51	136	175	272	847
scipy.io	86	222	382	260	478
pre-create	22	294	153	231	629
center	33	31	443	191	964
oops	65	291	258	407	887
ananconda	83	206	178	197	467
creators	38	227	17	756	382
easy-to-understand	68	190	378	432	328
latest	46	221	151	331	435
test1	47	224	461	583	588
test3	43	200	231	583	804
test2	81	162	478	583	588
test4	47	200	231	583	708
open()	76	54	382	260	698
np.ix_	19	294	296	291	601
underlying	38	184	386	691	122
matplotlib.style.use	51	155	195	272	664
boundries	37	31	467	207	668
_backend_gdk	81	88	110	739	584
list_of_lists	52	19	461	471	622
senderle	35	238	326	187	336
str.replace()	32	214	109	512	808
dftask	43	72	68	265	987
_minimum_	27	293	403	420	579
nastier	82	241	291	334	327
bench	35	180	55	337	89
block's	40	64	268	534	122
np.inner	16	178	473	562	884
successor	55	174	80	197	564
ravel	19	294	296	453	280
tests	29	227	55	457	905
test.dat	76	222	30	283	754
re-arranged	35	291	258	407	887
-x1	11	4	242	516	56
testc	3	146	306	155	655
out-of-order	22	171	100	537	246
*20	60	194	173	606	10
pivot_table()	92	156	78	763	971
my_project	30	162	478	247	344
insert	74	232	37	110	629
11pm	80	260	254	723	931
arr2d	1	274	112	677	159
x1000	72	4	431	516	756
works	29	117	274	58	473
10.7.4	85	276	233	198	858
regularized	79	10	324	761	620
getdata()	75	106	140	684	782
liblmdb-dev	30	259	244	165	960
pd.to_csv	86	222	329	107	519
tmp	30	224	478	381	588
est	80	285	323	742	920
encouraging	65	190	307	236	345
esp	82	50	17	663	246
parallelization	55	85	341	537	431
esd	3	93	82	33	965
esc	0	224	58	424	383
octave's	16	101	391	703	392
panes	73	125	175	122	847
grrr	68	207	371	432	345
slight	27	137	187	525	308
y.min()	60	194	495	193	285
stack()	92	156	78	763	971
disastrous	82	50	100	497	122
10.8.3	85	276	233	198	858
worthy	34	173	359	604	208
periodically	22	61	388	595	257
simples	29	28	317	631	999
panel	3	69	6	354	125
tm1	61	250	24	42	995
tm2	61	250	24	42	995
re-written	27	137	27	15	421
tolerances	79	22	324	559	907
smartly	82	241	378	573	29
.set_index	44	164	181	700	895
petsc	83	6	80	197	564
flaky	23	62	88	161	874
off-topic	34	173	307	709	994
sys.stdin	76	54	382	260	736
atlas-base	30	259	277	303	469
predictor	79	26	168	518	816
as_strided	19	294	296	291	601
downvoters	65	190	307	590	571
!!	35	207	371	205	767
rendered	73	125	248	276	304
annotationbbox	73	125	248	276	304
submits	23	187	294	624	214
!,	35	291	371	205	767
billions	88	160	220	80	54
!.	35	207	371	69	767
1970-01-01	67	260	12	2	920
imagename	47	110	30	712	475
renderer	73	38	248	635	373
!?	29	28	227	791	472
1986	12	163	284	718	483
1987	80	163	162	133	897
1984	67	163	284	133	272
pybuffer	55	222	29	607	405
1982	67	78	52	2	272
legends	37	136	24	391	76
1980	67	163	284	133	272
1981	80	163	284	723	897
1988	12	163	284	133	272
ns.index	52	0	380	215	288
efficent	82	241	378	573	29
dayofyear	80	163	254	723	410
plt.autoscale	58	44	452	642	162
diagonalisation	16	94	100	150	651
sawarning	86	68	119	478	126
cartopy's	64	6	17	732	370
buy	78	116	317	581	67
bus	23	14	250	149	423
disambiguate	3	297	182	587	984
but	29	28	246	209	472
npe's	35	238	187	187	308
numpy.nonzero()	87	42	78	13	512
buf	76	219	357	283	15
bug	46	221	359	604	208
bud	43	200	93	145	423
partially	29	28	306	173	305
wise	40	50	154	98	382
ecosystem	38	1	69	317	564
variations	29	62	272	161	746
149.6	15	211	162	606	212
to_timestamp	92	35	383	616	477
npy_float64	70	204	29	790	64
minutes	80	197	73	77	217
rabbits	75	106	206	73	981
indate	80	273	309	2	24
99.98066963	15	157	64	296	837
histrogram	77	29	175	626	625
19:29	67	213	95	185	51
83	12	279	488	111	465
mysteriously	29	231	306	716	473
redder	20	119	259	240	786
bulky	82	241	378	334	327
virtual	83	84	376	670	467
84	12	279	319	751	465
collectively	74	232	37	646	616
xscale	58	44	494	341	388
utf-16le	76	199	190	477	413
flowcytometrytools	81	88	110	739	889
climate_type	3	156	182	524	9
errorbar	51	136	24	272	664
variation	77	151	106	631	762
chunkshape	86	185	379	217	820
seismic	77	192	77	623	542
from_product	92	156	78	105	971
nrow	1	274	112	677	442
-min	11	234	221	65	591
list.append()	75	184	455	231	782
experimenters	78	110	243	390	984
best-practices	82	151	341	631	246
")'`	76	5	170	130	567
baked	38	6	291	317	450
matplotlib.colors.rgb2hex	84	119	357	592	296
augmented	28	26	158	200	382
moarningsun	35	238	326	187	336
two-dimensional	71	64	268	519	684
hats	65	291	274	236	345
lighter-weight	38	6	291	317	628
hate	17	190	377	396	275
view_as_windows	19	230	428	166	782
tweet	78	110	163	85	798
axesimage	6	161	320	543	109
redrawing	6	69	388	666	373
s.o.	34	173	234	97	328
double-check	65	171	305	407	905
pride	35	207	409	20	336
matplotlib.pyplot.imshow	84	195	102	193	427
divergent	20	119	259	49	845
idomatic	82	241	378	573	29
reverse=true	1	175	129	524	591
okey	65	207	371	205	345
.month	43	35	309	727	852
tostring	19	100	357	260	782
pylab.gca()	58	44	494	642	599
upstream	46	221	124	604	435
evert	35	207	33	205	336
piecewisepolynomial	53	10	238	720	428
encounter	29	28	306	173	568
skipinitialspace	76	185	13	51	698
plural	10	118	351	482	999
degeneracy	28	227	324	214	970
enjoy	17	43	377	396	275
rotation_curve	0	102	418	129	910
obj_data	93	142	206	139	886
untransformedarray	87	234	121	673	99
estimates	79	23	332	638	11
post-processing	38	50	341	317	866
persuade	73	125	248	131	304
issubclass	70	59	331	675	386
code-wise	82	241	378	573	29
4x5	71	64	213	738	95
4x4	71	64	213	738	95
4x3	71	64	268	738	95
4x2	71	274	268	738	95
4x1	71	64	268	738	95
o.o	65	291	274	236	345
web-based	23	84	294	595	127
ali_m's	35	238	187	187	308
circlecollection	25	161	208	543	481
specification	64	232	152	601	638
beaten	35	291	274	236	345
itemcode	78	56	445	204	832
.kind	70	59	74	332	681
plt.cm.jet	20	119	259	757	846
conduct	28	227	354	761	763
axvline	58	44	90	777	481
df.drop()	92	156	78	105	971
lerp	75	106	295	684	231
my_file	76	199	286	283	413
myname	30	259	277	303	469
hundreds	88	160	220	80	54
asymmetry	37	151	106	631	668
sys.maxsize	57	89	325	7	907
studio	83	45	5	650	634
np.random.uniform	93	123	173	50	361
path	30	162	478	247	344
pymodules	50	259	277	27	927
2047	12	279	488	751	888
2042	67	213	95	185	51
2040	67	213	95	185	51
h.transpose()	35	207	274	642	767
------------------	47	115	214	550	888
2048	71	195	213	674	175
isympy	90	15	189	540	818
launched	90	15	189	540	818
fig.savefig()	6	46	196	418	356
ax.autoscale_view()	58	44	494	341	388
fmin_cobyla	79	22	324	566	13
investigate	68	13	143	432	328
i'ts	29	28	395	209	999
visibly	37	266	467	207	668
rstride	20	119	259	49	845
feelings	10	43	377	500	215
visible	37	31	467	780	851
lomb-scargle	77	292	20	430	547
8p	12	279	162	528	175
m-	11	234	242	366	56
thread's	22	187	108	361	248
m*	72	186	25	683	756
discrepancies	29	231	8	654	905
m4	72	130	25	174	624
m6	60	179	269	530	309
m1	72	130	25	174	624
m0	72	179	25	686	309
m3	72	130	25	174	624
m2	72	130	25	174	624
m=	89	186	207	562	306
tree-like	3	110	6	612	79
granularity	80	29	299	77	931
lts	85	276	233	393	858
onehotencoder	79	26	168	135	816
.3e	32	205	346	177	576
df.applymap	87	55	493	76	593
real-time	23	14	294	158	257
pandas.algos	29	231	389	202	568
outdated	46	221	124	202	435
p.shape	1	19	41	677	159
shoot	17	291	250	236	71
md	55	1	479	90	455
mg	12	160	220	528	106
mf	47	224	30	196	588
join	3	156	253	33	125
${python	81	5	170	130	584
mc	28	14	430	149	423
mb	88	182	373	549	236
mm	80	35	245	125	742
ml	28	26	354	135	816
mo	47	142	162	133	888
mn	89	186	207	683	90
mi	47	134	162	155	125
mu	79	275	332	129	292
mt	47	224	30	50	609
mw	98	52	198	605	297
mv	47	55	242	366	292
-ofast	96	174	408	90	455
mp	0	181	295	24	807
ms	88	256	73	196	432
mr	35	115	409	20	336
512^3	88	266	100	574	668
my	29	137	116	15	421
mx	72	186	25	129	756
zhu's	35	238	187	8	308
6_6	12	19	263	364	265
pandas.rolling_mean	87	193	295	614	612
sns.heatmap	60	155	240	495	12
np.fft	19	101	125	430	547
'])	43	47	231	265	419
file.dat	76	222	30	283	754
']"	43	200	231	265	708
']'	43	72	93	406	987
looses	74	117	152	548	305
minindex	47	134	295	471	881
enc	43	47	487	71	244
!!!	35	207	274	205	767
!!,	65	291	274	236	345
writers	86	222	329	107	444
ent	98	52	68	290	985
env	30	128	244	159	181
2000-01-05	65	291	258	407	655
2000-01-04	98	258	254	796	931
mystr	47	105	30	177	764
2000-01-01	67	260	12	2	24
2000-01-03	80	260	26	2	377
2000-01-02	67	260	12	372	958
color-bar	37	290	443	780	76
mess	29	13	88	458	417
urllib.request	81	5	110	130	584
.minute	80	258	26	723	377
array.dtype	70	59	74	332	522
900k	88	263	73	468	217
mesh	99	288	339	315	908
pyroot	38	1	80	461	564
']`	43	72	93	265	708
colormaps	25	119	320	49	296
np.equal	19	42	198	13	512
gluing	3	50	6	354	125
']]	43	47	231	265	708
bootstrap	23	26	354	761	816
qgis	83	206	178	158	450
mucking	38	109	29	732	118
algorithms	28	14	106	321	970
enter	90	187	108	540	383
jblasco	35	207	371	15	421
writer=	76	144	286	16	413
ndimage.map_coordinates	53	101	238	720	396
extents	37	290	494	207	388
cffi	55	174	29	790	219
thesis	28	14	267	179	275
-666	15	256	236	514	980
numpy.shape	1	219	102	232	881
expectations	10	227	395	590	999
exhibits	27	293	403	420	579
comprehend	65	291	410	236	457
data.loc	43	72	68	265	708
df2.values	44	134	260	290	827
ticker.multiplelocator	58	44	173	65	162
hourlist	12	110	461	471	622
gpbusd1d.txt	76	199	286	283	413
4800x4800	71	64	454	150	988
extent=	58	44	226	641	683
misdirection	10	151	17	631	999
1294185600000	67	213	95	185	51
notified	65	190	307	702	915
chuck	3	110	6	110	953
filling	74	146	386	680	359
df.resample()	92	156	78	105	971
2^64	57	100	325	469	22
notifier	37	290	443	780	388
lasting	88	197	73	94	36
itertools.islice	19	54	455	480	806
]]])`	52	19	263	364	265
interop	55	1	69	461	564
df2.iloc	52	72	68	290	708
metogram.py	12	267	118	111	679
combining	74	232	6	354	678
4000x4000	88	142	213	674	60
damped	77	14	267	710	942
multiindexes	3	169	6	354	125
msgpack	86	68	359	611	820
god	65	291	258	205	767
120.0	98	281	273	141	397
got	29	28	272	791	874
gov	3	297	243	390	965
scopes	10	237	397	436	864
mistaking	65	28	227	791	999
streamline	61	232	278	646	138
counterparts	38	99	8	756	382
scoped	9	237	397	436	864
acrobat	73	125	248	276	304
coloumns	98	146	454	796	984
go-	47	67	93	145	475
degeneracies	99	151	106	631	970
.hist	43	47	309	460	12
pclass	43	200	231	584	708
pyrun_simplestring	81	5	110	130	889
inefficent	75	241	100	497	463
erfc	11	234	4	562	743
group's	3	146	65	587	984
ostop	43	2	231	265	708
cooperating	83	206	80	540	383
takeable	74	232	306	209	36
erfi	16	178	154	150	726
already	29	28	306	791	472
algorithm's	10	151	106	631	970
coding	17	43	377	396	98
none's	75	99	424	680	509
common.py	50	259	277	381	842
disk-backed	86	50	426	611	820
sumif	3	193	154	98	347
categorize	78	150	445	479	66
matplotlib\	81	267	118	483	927
1502	12	19	162	528	855
geodatabase	23	84	329	595	519
a=1	72	186	25	174	306
exp2	15	157	64	24	598
exp1	72	4	160	516	598
a=2	52	130	263	174	306
value_vars	3	156	65	763	125
iso-8601	80	35	245	781	920
matplotlibs	51	136	278	272	847
canopy_64bit	30	259	277	303	469
pygtk-2.24.0	30	259	277	303	469
unmelting	3	156	182	354	81
ceiling	57	193	148	664	62
servo	15	157	64	798	888
tool	38	6	278	317	450
serve	23	6	294	525	127
took	88	197	73	337	217
compressor	86	222	426	611	820
western	78	250	132	482	765
whereby	74	232	37	746	868
range2	78	93	243	796	984
expr	9	109	397	744	699
matplotlib-	90	136	175	122	473
dt.dayofweek	92	35	78	105	333
0.33333333	15	211	263	364	265
.read()	76	37	286	283	413
libatlas	96	170	408	197	960
expn	52	0	160	284	598
expm	16	101	125	90	651
matplotlib=	83	206	151	681	380
lib-dynload	50	259	277	303	469
lbs	12	194	173	172	99
fashion	40	232	37	40	382
clusterings	16	28	349	122	508
talking	10	43	227	791	999
leafs	52	132	273	284	91
further	68	137	143	432	328
lbh	78	200	435	203	385
lbl	52	148	206	284	714
"'"	76	199	487	415	987
1619	65	142	162	528	60
"')	47	17	170	4	567
firmware	74	297	280	110	161
-	29	28	306	209	36
elegance	82	180	341	537	29
oriented	38	6	390	732	389
re-assigning	92	134	158	155	68
many-to-many	3	151	182	587	125
vice-versa	74	232	317	661	363
shelf	82	50	341	573	359
np.genfromtxt()	76	54	382	260	698
pd.multiindex	92	156	65	354	125
effectiveness	82	50	291	537	628
coarse-grained	53	151	246	525	542
inputvec	29	28	306	791	473
repeat=false	22	187	108	361	248
df.fillna()	92	156	78	105	971
savitzky_golay	0	275	140	684	231
masked_where	75	220	198	605	203
8.04	83	206	211	202	380
coin	28	14	267	710	841
unorthodox	82	137	459	525	669
$ld_library_path	30	259	478	159	181
opted	29	238	187	209	529
"'`	32	199	346	177	413
peers	23	1	116	461	275
logical_not	82	214	198	113	135
treats	75	117	152	58	638
flop	33	195	114	532	363
flow	28	14	267	710	841
flot	23	6	278	158	450
reflecting	77	151	175	122	673
enterprise	85	30	233	393	858
flog	43	258	82	204	377
sublimetext	90	15	189	226	818
inspire	34	190	307	590	216
ndice	71	142	268	139	60
reorganize	3	137	37	110	953
random	93	123	193	628	507
df.to_csv	76	199	286	283	413
0-length	70	99	421	601	979
substituting	74	263	306	458	526
foo.loc	43	47	231	71	708
idxmax	92	156	78	763	121
numpy.maximum	19	57	121	13	608
1-tuple	75	106	421	231	981
np.polyval	79	275	332	363	620
on-screen	73	125	248	276	304
abs	11	234	4	664	56
zipping	40	297	455	776	678
bitstrings	75	100	357	691	122
arr.ndim	1	57	112	232	985
geez	65	291	258	407	887
mixture	74	23	332	511	28
blinking	90	187	108	624	248
b.shape	1	274	41	677	955
csv.reader()	86	222	275	260	519
connectionstyle	64	161	90	543	683
countries	78	150	132	479	604
np.float64	70	59	74	332	522
dips	77	29	114	574	563
real_name	78	110	243	390	965
twice	29	197	497	534	36
interspersed	74	232	454	680	509
-number	30	162	58	165	588
shots	84	195	128	429	353
7680	71	142	268	139	60
0.13.0rc1	46	221	124	331	284
ruins	29	13	143	39	589
kwargs.get	60	224	452	642	162
nut	17	43	377	236	803
choice_txt	43	164	82	204	832
itertools.izip_longest	19	12	109	480	808
nul	32	16	420	468	768
num	47	224	461	424	881
np.hstack()	19	294	296	278	470
on-demand	38	85	17	691	382
tensor	71	64	154	150	981
tsset	3	116	430	354	67
urllib	81	5	110	130	584
366	12	163	254	723	897
chromagram	77	192	20	430	346
364	12	258	162	133	272
365	80	163	254	723	897
fft()	77	292	393	430	547
363	12	279	488	751	465
360	33	194	269	528	212
361	12	279	162	528	212
nneonneo's	82	238	187	573	308
confusion	10	118	116	590	999
between_time()	92	156	78	105	971
column-1	1	57	112	232	470
volumetric	77	176	128	623	268
boss	17	190	377	396	275
bias=false	92	185	226	641	130
ybound	58	290	494	65	388
y_test	1	148	349	539	412
improve	68	180	341	537	246
protect	22	237	397	436	864
all_regressors	43	72	68	170	164
favourable	82	227	341	457	905
undelete	35	238	3	702	915
extracts	74	117	27	58	161
participating	98	146	454	796	984
merging	3	156	6	354	125
layered	61	136	175	158	223
np.finfo	57	89	325	559	907
ipdb	90	15	189	540	818
operating	22	50	80	768	467
n_features	71	274	349	539	412
check_finite=false	16	22	462	782	800
kwh	98	93	26	558	965
numpy.inner	16	178	462	562	726
multi-axis	64	104	23	733	154
testable	82	137	378	573	29
2200	12	142	162	528	60
clip	20	31	259	207	353
beef	37	266	22	574	668
opencv	84	230	123	607	694
ropes	17	43	377	205	767
been	29	62	272	161	746
np.vsplit	1	64	296	278	470
beer	78	150	35	149	423
lassomanager	6	161	90	572	481
pyexcelerate	46	221	124	202	435
patchcollections	61	31	24	780	138
stats.mode	43	47	68	76	593
uncommon	10	231	395	335	999
values_block_0	47	78	52	133	764
_not	27	28	329	122	508
ngn_rate	9	204	331	790	64
lesser	82	241	378	573	668
site.py	30	122	478	159	181
getsizeof	57	89	325	139	60
histogram-like	61	136	175	22	847
)];	11	234	180	215	371
freetype-dev	13	128	5	104	482
disjoint	99	288	454	587	616
)]"	52	52	180	290	985
ramifications	10	43	17	500	999
misspoke	65	291	258	407	887
)])	47	201	303	50	371
boxed	61	31	467	212	851
backend_wx.py	30	162	46	483	794
containing	74	110	37	746	684
recursion	63	83	485	361	219
wound	35	62	88	458	417
bday()	80	258	447	723	333
complex	82	241	291	744	382
inventory	78	116	299	581	67
"]	43	17	223	4	567
several	74	232	159	94	36
"'	63	83	283	616	477
twiddling	74	29	388	190	214
""	32	17	30	4	385
mstats	75	214	125	756	782
rng	93	123	193	628	507
monotonic	53	103	97	524	102
)]`	52	0	180	290	371
pyzo	83	206	151	685	380
prioritize	78	56	445	479	347
)]]	15	130	180	750	371
lcd	61	31	175	489	214
greatest	98	146	148	746	868
x.price	11	55	493	76	593
fungicide	78	250	77	182	957
random.randrange	52	0	461	50	883
shadowed	81	88	397	739	183
1hr	80	56	299	77	931
band2	29	28	306	208	508
band1	29	28	306	208	508
fig.autofmt_xdate()	58	44	166	341	331
randomizedsearchcv	38	26	354	761	816
2013-10-01	80	258	26	2	24
interprete	29	99	275	601	141
darray	9	106	386	455	681
ax=0	72	186	25	683	988
group_by	3	193	78	354	121
interprets	74	117	152	58	638
lower-level	38	1	29	732	389
y-range	37	290	269	207	388
bands	77	195	51	137	353
init_func	0	46	345	44	8
apart	74	13	143	209	36
gifs	73	125	248	276	107
group.index	43	72	68	339	199
ditto	29	263	306	746	428
rsuffix	44	2	253	33	176
np.polynomial.polynomial.polyfit	79	275	332	363	13
specifiy	74	185	37	285	638
conv2	79	101	125	703	392
specific	74	232	37	209	36
cooler	20	31	467	757	786
componentwise	75	64	154	150	981
rec.array	3	297	10	492	903
makereg	1	52	198	181	985
lexsort_depth	92	156	182	524	9
xt2=	52	219	263	485	855
numpy.isnan()	9	99	424	108	203
numpy.random.randint()	93	109	193	628	361
meters	33	176	135	617	210
escape	32	282	190	403	5
precautions	10	227	17	321	215
order-of-magnitude	82	180	55	537	246
markers.py	64	259	278	381	588
bbox_extra_artists	58	243	18	16	721
ico	67	213	95	185	51
student's	78	150	445	479	347
.xs	44	24	23	733	154
icc	96	174	408	650	455
ica	28	26	354	761	816
ice	77	176	77	623	563
icd	47	110	430	155	382
429	12	267	58	111	132
sep=	76	199	286	51	189
420	12	160	220	528	106
422	12	274	488	751	159
425	12	279	58	133	132
christmas	17	207	250	205	767
ict	60	155	240	348	285
fencepost	29	28	227	209	472
core	55	240	480	381	842
ndimage	84	230	428	166	353
who	34	190	35	233	571
ironclad	83	206	178	197	564
.what	65	224	58	407	588
corn	78	163	254	723	897
mvlr	9	109	383	616	699
pypng	84	125	123	607	427
short-circuiting	19	214	198	113	514
corr	87	193	140	673	608
limitation	10	231	17	173	568
run-time	55	174	17	537	246
pandas.melt()	3	156	65	354	125
165037	89	180	55	139	89
surround	99	288	282	315	138
undocumented	64	109	331	732	370
misleading	10	118	395	335	999
algo	28	26	354	293	816
year_month	78	93	82	204	832
pyresample	53	230	278	166	353
sept	46	163	284	718	72
droplevel	44	156	78	763	971
primitive	38	99	291	756	843
froze	22	197	108	361	180
heffernan	35	238	66	187	336
readingtime	32	110	275	601	141
accommodate	37	232	485	207	668
timezone-aware	80	285	86	781	920
cid0	90	187	32	624	112
simillar	29	62	88	791	874
00:45	67	260	12	372	958
rely	10	231	17	768	305
categorization	3	232	37	587	868
relu	79	26	354	566	13
lags	28	14	267	710	942
purposely	29	28	410	791	874
head	17	62	56	753	180
medium	88	266	100	574	668
polyphonic	77	192	365	676	946
cidx	1	148	206	305	77
heat	61	176	175	626	951
hear	68	190	307	236	345
heap	22	283	153	358	229
.bin	86	222	329	260	519
#url	34	254	234	302	565
re-ask	34	190	307	702	216
r's	38	214	125	703	392
bids	78	56	445	41	377
1024,256	1	274	268	305	981
r'c	76	199	286	283	413
r'd	76	144	190	477	413
pyobjc	13	128	211	197	482
np.core.records.fromarrays	70	59	74	332	681
strftime()	32	35	245	560	879
-bundle	50	259	133	117	160
cross-posted	34	173	35	97	142
idxb	44	93	82	204	832
sub-module	81	88	110	739	183
.filter()	92	156	78	105	121
col11	43	164	48	204	832
n^	89	142	207	261	90
simulations	28	14	267	94	841
idxs	1	148	206	284	714
legend's	58	161	90	572	683
_numpyconfig.h	50	259	133	117	160
ax.hist	51	44	63	557	780
ni	72	102	418	129	756
nj	72	102	25	129	756
nk	72	130	473	743	884
nl	47	105	74	53	764
nm	47	142	162	371	588
nn	53	26	349	135	816
no	29	28	306	209	472
result.xml	47	267	58	381	588
na	92	146	424	414	967
nb	29	227	306	209	36
nc	47	224	30	424	881
nd	75	64	10	519	684
ne	47	105	74	424	764
ng	47	115	430	149	423
nx	72	102	418	305	756
ny	72	102	418	305	756
nz	1	274	112	305	756
2015-12-31	67	260	12	2	24
n}	1	67	256	50	764
np	81	88	110	739	183
nq	52	148	162	284	855
nr	47	224	30	155	736
values=2	44	134	65	155	827
nt	47	102	173	325	175
nu	72	186	25	129	709
nv	47	224	58	424	588
nw	47	115	132	550	475
reconsider	10	190	17	500	215
preceding	98	263	317	468	868
scipy.odr	79	22	332	363	283
idx2	52	148	206	558	965
idx1	44	148	82	558	965
stops	22	187	108	361	248
sinh	81	88	110	739	584
bitbucket	46	173	35	604	208
n+	89	186	207	683	90
bullet	65	13	143	236	589
629.5316666666666	15	157	64	296	837
dataframe.to_sql	86	68	119	478	824
data_bs_p.plot()	47	224	30	424	12
n=	88	142	173	139	60
n0	72	274	268	305	756
n1	72	186	25	683	756
n2	72	186	25	683	756
backward	46	146	124	414	509
n4	72	130	273	174	792
4999	80	163	254	723	272
dimentional	71	64	10	519	877
iterator	19	12	455	480	806
equalities	28	227	106	457	970
varying	77	232	37	94	668
ouch	65	291	258	236	345
datetime.today()	80	35	309	727	852
edchum	35	207	409	187	336
split_at	52	0	263	284	855
displaying	74	125	175	122	625
reassemble	40	50	182	548	594
psql	81	68	119	478	126
stoploss	98	258	317	796	377
your_data	1	19	112	232	714
advantage	38	180	341	537	305
scatter_matrix	51	136	390	272	847
sloppy	65	241	395	334	874
four-byte	70	100	325	332	22
temp_date	3	146	182	587	125
partitions	3	50	6	587	572
customer's	78	150	445	479	604
python-pip	13	170	50	104	482
addressable	22	182	373	128	236
participation	82	43	377	39	803
accumulation	22	50	341	691	246
numpy.fromstring	76	54	357	260	698
2082	67	213	95	185	51
\sklearn\svm\	50	145	118	168	679
63.51	74	232	306	209	36
group1	44	93	82	204	832
group2	43	262	82	204	832
reinstalling	13	128	5	104	485
fear	17	241	88	334	874
substitute	74	232	37	209	382
nonuniform	77	29	128	623	353
spectral	77	292	20	430	547
\pandas\	50	145	225	168	679
ax.set_title	58	44	494	418	890
agrees	79	101	332	703	239
525	12	279	488	111	132
sinc	77	292	20	430	547
527	12	160	132	528	106
520	50	267	118	168	679
521	47	267	58	424	132
528	12	181	488	751	888
529	12	181	488	24	432
costless	40	184	153	453	122
n_array	1	57	112	50	21
hairs	61	13	143	39	589
realizations	77	250	114	182	210
illustration	27	137	459	15	421
groups	3	297	6	354	66
[	52	0	303	284	640
groupy	92	156	78	763	121
toolbar	90	69	46	380	384
sobolev	35	207	371	205	336
delimited	32	16	420	468	768
thirty	88	197	73	534	217
6502	53	238	428	429	531
rolling_corr()	92	193	78	105	121
non-global	74	237	397	436	629
delimiter	76	54	322	51	698
weird	29	231	395	335	473
web.datareader	47	5	30	581	454
lowers	88	283	73	574	217
combs	52	19	162	364	855
gray-scale	84	195	51	592	427
non-default	64	166	134	764	862
matplotlib.finance	23	116	27	761	854
threes	98	263	454	680	428
max_open_warning	63	224	389	424	881
1st	98	263	454	796	428
threed	52	19	160	284	776
smallish	82	50	100	497	463
parms	23	171	294	595	127
scipy.signal.convolve	19	101	125	231	782
ping-matplot.py	30	162	478	381	588
companyname	44	72	82	204	832
bins=30	60	102	418	557	910
mst	80	35	430	133	920
msn	78	110	243	390	423
msk	52	104	23	733	154
msi	13	261	486	797	368
criteria	3	146	317	587	602
msg	63	83	318	715	39
mse	79	23	332	638	11
msd	33	266	114	574	762
msc	85	45	264	163	483
msb	40	100	10	139	122
msa	88	50	10	497	628
tclerror	63	244	283	553	777
epipolar	61	31	128	122	851
ax.yaxis.get_label()	58	44	495	651	890
chocolate	78	200	82	204	832
misreading	65	118	227	407	887
kurtosis	79	23	332	10	11
fuction	22	28	485	361	214
animation.funcanimation()	0	106	272	684	231
a**2	11	178	201	562	726
visualisations	23	6	278	158	79
districts	78	250	77	623	995
dcast	38	214	125	703	392
2000*2000	88	142	55	337	89
unconditional	22	224	389	361	383
corrupted	29	171	329	361	568
garbled	29	171	306	122	473
accepts	74	117	152	641	638
stroke	37	31	467	207	449
dropped	29	171	306	791	655
_values_	75	146	317	587	650
sub-matrices	71	64	127	738	95
requirements	10	227	80	97	328
eloquent	82	241	378	573	29
ravel()	19	294	296	453	280
7:00	80	260	254	530	931
speaks	10	43	17	233	812
get_color	6	161	208	543	481
kriging	53	101	125	761	531
3.45	15	211	61	606	10
irrational	57	89	8	654	62
obvs	3	56	445	796	984
numpy.sinh	81	88	110	739	584
pd.get_option	76	224	452	177	290
nsamples	1	274	268	305	159
unbelievably	88	197	274	337	111
reposition	37	69	32	572	536
prob	3	232	359	285	502
index-based	82	50	341	691	122
compressing	86	50	426	611	820
scipy.interpolate	53	10	238	720	396
constant-width	37	290	467	22	76
annealing	28	14	267	710	970
glancing	65	263	143	468	655
2-dim	71	64	10	519	684
superscript	32	166	134	131	898
backend-independent	90	69	46	572	370
blocker	17	13	143	39	275
ymmv	82	180	100	768	246
arm	96	30	480	670	467
blocked	90	187	108	361	560
array_a	75	64	127	605	602
array_b	75	64	127	587	981
c-compiled	9	214	29	684	901
c()	38	237	397	703	392
2.7.x	83	206	5	685	380
result_df	3	93	65	155	965
coordinates	33	176	135	617	908
tsplot	51	193	449	272	847
1695	78	93	82	204	984
fphysics	30	259	277	303	552
coordinated	72	102	135	73	744
python.org	13	128	5	797	391
meridian	33	176	443	617	76
parallelizable	55	85	341	349	431
timedeltaproperties	80	35	383	616	477
conversations	34	62	247	321	746
gaussiannb	9	109	331	594	676
axeshostaxes	63	83	383	616	477
_columns_	98	146	65	155	984
pandas.set_option	76	39	452	171	290
tarballs	13	170	244	165	482
_configtest.c	63	244	283	553	323
equality	57	227	198	457	135
scipy.cluster.hierarchy	81	88	175	739	854
_configtest.o	50	145	133	117	30
possibilities	38	227	159	321	79
array_2	72	148	206	73	77
realise	65	291	258	407	887
df.size()	0	134	65	155	231
df_min	3	156	65	47	125
overcomplicated	82	241	378	573	29
weighted	79	193	185	98	347
pylab.hist	60	123	63	557	780
approximates	79	10	324	487	531
set_figwidth	6	139	18	418	543
gaps	80	29	339	77	340
begun	17	62	88	161	275
approximated	79	288	185	487	762
adequately	27	118	116	97	328
'"'	76	199	487	151	987
ultimately	74	232	246	209	36
100l	60	149	447	460	612
scipy.interpolate.rbf	53	22	238	720	396
100j	52	19	160	129	855
coincidentally	29	28	306	122	473
interpolate=true	60	155	240	495	285
'")	63	5	170	616	477
someplace	27	293	305	420	370
bin_edges	60	57	63	557	680
cripes	65	291	258	407	887
100x	88	180	55	337	89
emp_id	78	56	445	796	347
bugging	17	62	88	236	345
date_string	47	35	245	125	879
theory	28	151	106	631	970
wan	84	195	246	209	353
clear_output	6	46	345	599	356
isotope	78	286	114	425	798
splev	53	10	238	720	396
non-normal	79	23	332	638	531
raster	84	195	128	607	293
100+	88	160	220	80	54
100*	11	234	4	664	743
'"`	43	105	93	177	764
connectivity	99	288	11	646	329
tbdata	86	110	93	556	792
100%	29	266	22	574	999
impose	10	151	106	631	305
1004	12	201	162	177	764
1003	67	163	284	133	272
1002	12	279	162	528	465
1001	12	279	319	528	106
1000	88	142	220	528	106
origin	33	176	443	191	725
simplifies	74	117	152	200	305
redhat	85	128	233	393	858
predictive	28	26	354	135	128
4-tuples	84	195	51	592	684
warnings.filterwarnings	63	39	389	171	686
read_fwf()	76	54	322	183	698
client-side	23	84	376	184	127
workbench	83	68	119	478	126
awfully	82	241	395	334	463
simplified	27	137	459	15	421
teegarden	35	238	326	34	336
millions	88	160	220	80	54
df.index	44	134	309	727	852
mutated	75	184	19	476	757
daypricesdf.iloc	52	0	263	284	855
xhtml2pdf	83	170	80	202	482
convention	10	231	17	200	999
circa	88	197	73	196	217
hue	20	119	259	137	786
lme	99	62	247	161	293
hub	78	56	430	390	984
million+	88	160	220	80	54
hum	65	291	258	407	887
huh	65	291	258	236	887
pyqt5	83	38	178	635	810
pyqt4	90	38	46	635	810
multi-processing	55	85	341	349	431
holder	22	171	388	436	655
intrinsically	82	50	341	537	246
np.genfromtxt	76	54	382	51	698
require	74	232	246	209	305
hyperthreading	96	30	480	785	729
lmax	79	186	25	129	292
r	47	186	25	703	392
multithreaded	55	174	408	90	651
variable_1	32	67	223	145	754
x()	0	237	397	436	864
stdlib's	38	222	80	317	564
and	74	232	306	209	36
file_1.csv	98	110	243	712	984
ang	72	186	25	129	942
ana	83	206	178	202	380
ann	28	26	354	135	841
prn	47	67	58	424	888
ani	6	61	345	44	112
trilinear	53	288	11	720	396
ant	99	14	267	710	214
prs	68	173	359	604	208
firelynx	35	207	371	187	336
whole-array	75	180	341	537	219
np.asscalar	70	106	74	332	979
any	68	28	227	432	472
pil's	84	195	123	607	427
rolling_*	92	193	125	614	121
exploratory	23	84	294	94	866
bars.ix	92	104	23	733	154
transcription	34	14	35	425	142
emphasis	34	254	234	302	565
xxxxxx	47	67	256	145	764
zorder=1	60	155	240	495	162
zorder=0	60	155	240	418	162
zorder=3	60	194	495	65	221
zorder=2	60	155	240	495	285
matplotlib.nxutils.points_inside_poly	53	214	125	720	782
falls	74	13	37	58	868
visitors	34	150	35	702	216
precludes	74	232	182	534	305
non-blocking	90	46	46	599	356
resident	22	283	373	549	229
neuro	78	250	445	41	984
considered	10	232	17	791	999
occurances	78	56	445	41	639
8mb	88	182	373	549	236
itertools.groupby()	19	214	78	105	512
peptides	98	286	461	425	798
indeces	75	297	182	587	650
logm-log_m0	11	234	4	664	743
-column	98	258	65	155	984
cbind	3	156	6	703	100
rasterization	73	125	248	276	304
timedata	3	110	6	155	984
recipe	38	254	234	302	565
timedate	80	35	245	781	410
0.48	15	272	61	606	10
stratdata	44	134	65	155	965
0.46	72	194	287	606	10
0.47	15	211	61	606	10
scipy-cluster	23	6	278	158	854
0.45	15	194	61	606	10
0.42	15	211	61	606	10
0.43	15	194	61	606	10
wstrict-prototypes	50	157	133	117	160
0.41	15	211	61	606	10
update_line	90	187	108	361	248
frame's	3	110	6	155	655
crime	78	56	445	479	67
explicitly	64	232	246	209	370
rootpy	83	1	80	461	637
datacursor	6	161	90	543	184
centrally	37	31	443	780	851
maximums	98	103	127	73	744
narrows	29	13	143	39	589
c2085	63	244	283	24	323
fsolve	79	22	324	566	13
begging	10	190	307	590	812
hist_strm	1	19	112	471	881
vera.ttf	83	182	373	549	236
tailor	27	293	403	420	579
ax1.set_xlim	58	44	494	65	162
freaking	17	291	274	236	767
closure	9	237	397	436	864
mapper	23	68	119	478	126
regarding	29	118	116	97	328
cvxopt.matrix	9	109	201	756	681
matplotlib.use()	81	38	110	635	889
mapped	74	232	51	746	486
m^2	89	142	207	261	90
^^2	11	234	4	531	99
.67	88	197	162	196	217
reveals	29	117	143	791	905
##	32	224	58	177	413
violated	0	227	317	744	231
innards	38	109	143	455	370
maximum	98	146	148	746	868
linalg.py	50	145	225	27	429
#3	29	137	214	441	308
#2	29	137	214	441	308
#1	74	137	214	441	308
#0	12	267	214	111	132
violates	10	106	17	587	999
#5	98	281	454	796	984
a.a	1	209	158	476	726
ax.transaxes	58	138	265	651	642
fails	29	28	306	361	473
scipy.interpolate.interp2d	53	102	238	720	396
invokes	22	117	152	58	638
.replace()	92	35	109	512	808
x_learn	1	57	112	50	159
#i	47	224	461	471	881
receivers	77	250	77	623	210
fortran_order	48	105	256	53	764
glcm	84	230	428	166	353
#s	27	137	459	15	421
lats	33	102	135	617	298
successes	77	266	22	574	347
method()	9	109	331	684	386
convert_objects	92	39	424	171	934
sql.py	50	145	118	580	842
propagation	28	14	267	671	841
z_col	71	64	63	519	684
authoring	38	1	80	317	564
shell=true	30	5	327	554	174
np.linspace	93	123	173	557	361
color	20	119	259	757	786
a.loc	43	72	68	290	459
poly	25	10	208	487	296
sampling	77	29	20	511	227
pole	33	176	282	12	725
werner	35	115	409	20	336
~unutbu	35	207	371	205	767
l_bought	43	72	383	616	477
colom	74	110	37	746	868
poll	78	85	71	204	952
shoudn't	47	224	461	139	472
late	65	291	257	48	345
command-tab	90	187	108	624	536
dataframe.drop	92	156	78	105	971
a.x	72	186	242	129	56
dict_keys	48	105	52	616	764
syscall	22	85	71	349	807
succesful	29	227	272	534	905
cords	33	176	135	617	908
hardly	10	231	17	631	463
random_sample	93	123	193	628	361
636	12	279	488	196	432
numpy.linalg.det	16	94	462	782	800
mocking	55	6	80	197	564
python3.4	30	259	277	106	960
python3.5	30	259	277	303	469
python3.2	30	259	244	106	960
python3.3	85	276	233	106	960
python3.1	13	170	244	165	482
hasattr	0	12	461	480	231
paying	55	180	413	537	246
shaft	37	31	467	207	449
serieses	92	156	78	105	971
volterra	30	259	478	381	842
amend	65	137	116	190	629
test_plot.py	0	162	27	684	383
tslib.pyx	50	267	118	580	679
port1	78	67	256	133	888
nlines	60	224	173	424	162
.remove()	6	46	345	485	622
natgrid	53	6	278	720	854
openexr	38	192	123	607	564
numofdayssincelastwin	98	258	317	796	377
polycollection	25	161	208	49	109
good	82	241	395	525	812
clutter	37	31	467	334	69
pruning	28	227	106	321	970
usart	90	187	365	595	257
alphabet	32	286	420	482	898
seeking	68	43	227	432	49
shifts	40	117	148	191	363
runge	79	10	324	487	610
buys	78	258	445	41	377
g.set	58	44	166	418	162
events	90	29	32	624	112
uhm	65	291	258	407	887
beaglebone	83	230	178	429	467
patches.circle	64	161	208	543	481
arose	29	231	389	173	378
changing	74	171	386	548	526
somecolumn	43	72	68	265	708
fictive	99	288	282	646	868
scipy.ndimage.interpolation.affine_transform	64	230	128	607	854
implements	38	109	125	317	382
np.float_t	70	204	29	790	64
threaded	55	174	408	90	431
modes	74	227	159	209	36
df_merged	43	93	26	558	965
termination	22	187	108	361	248
model	28	26	354	135	816
event1	44	2	253	33	176
axes3dsubplot	6	161	383	616	477
coolwarm	20	119	259	757	846
clob	86	68	119	478	444
guided	34	190	35	233	142
03:40	67	213	95	185	51
linearregression	79	26	354	135	816
unicode	32	16	190	477	444
clos	63	17	223	4	567
differentiation	79	10	324	744	610
guides	68	254	247	321	565
heuristic	10	151	106	654	970
overlapped	37	31	467	780	851
detach	90	187	108	360	248
math.floor	11	55	201	664	591
except	29	28	306	209	473
achived	16	214	154	150	382
pallet	84	195	51	592	427
cxx	30	259	133	117	160
decompression	86	222	379	611	820
libreoffice	86	91	367	107	86
ufunc	9	214	422	756	761
scheduled	46	221	124	604	435
match_up	43	93	82	204	633
loaned	78	150	163	482	798
touchpad	90	187	108	624	248
predetermined	74	297	37	746	868
scheduler	23	84	294	349	431
plt.pyplot.show()	90	46	345	599	583
x_i	72	186	25	683	773
stdint.h	70	204	29	790	64
scipy.interpolate.rectbivariatespline	53	101	238	720	396
birthdays	43	72	68	204	708
read_data	0	106	140	684	231
char_id	78	56	445	41	832
diagonalise	88	160	100	80	54
c-like	55	174	29	691	219
coords	33	102	135	617	910
num_dimensions	1	274	268	305	981
pandas.core.groupby.dataerror	63	83	383	715	39
min_periods=1	87	193	447	614	612
linewidth=	60	155	240	495	285
non-equal	37	146	467	207	668
pacific	80	285	323	742	920
11,000	88	160	220	80	54
.jpg	73	125	248	276	304
squeeze()	19	294	296	231	512
.mdb	23	84	119	370	126
df.to_records()	75	106	421	519	782
venv_test	30	259	244	159	960
provided	74	137	116	97	421
o-	60	155	240	495	285
somescores	98	78	243	155	984
literals	32	16	190	403	5
hashtable.c	50	267	118	580	429
2xn	71	64	268	519	684
redis	23	85	71	611	820
right-hand	37	104	443	661	363
legal	10	231	395	200	999
provides	38	6	291	317	305
provider	78	56	445	41	423
redid	65	291	258	407	874
o3	12	256	162	133	272
o2	55	203	55	238	617
o1	15	203	162	238	617
range()	93	12	455	480	806
multi-column	3	156	6	354	717
communicate	23	85	71	349	257
linewidths	20	119	24	49	664
previously-included	63	244	94	553	323
site.cfg	30	122	486	159	181
embarassing	65	291	258	236	345
rearranging	40	50	182	548	678
oo	6	139	390	732	389
on	74	232	306	209	36
ol	82	241	291	573	669
ok	65	291	258	407	887
demarcation	61	31	443	757	786
oh	65	291	258	407	887
scalex=false	58	44	494	642	162
of	74	232	37	209	36
od	47	224	37	424	588
oc	35	203	371	238	617
ob	78	203	447	238	617
oa	78	203	252	238	617
formatters	64	290	166	78	184
mutually	10	227	174	587	999
df.duplicated()	44	52	68	181	985
cuda	55	174	408	90	651
oy	33	224	58	424	588
ox	47	194	173	673	588
ow	47	224	58	424	736
ou	30	162	80	165	960
ot	29	28	246	209	472
2x5	71	64	268	738	95
numpy.int64	70	83	383	616	286
op	65	118	116	233	999
amber	27	137	116	757	786
numpy.around	57	89	8	788	907
numpy.allclose()	57	89	8	756	907
dplyr	38	1	390	703	392
wasteful	82	241	378	497	463
communication	23	85	71	349	431
names=	76	105	286	51	987
a=array	48	59	112	50	159
1.55344	15	157	64	296	837
tkinter's	90	69	46	380	384
speculated	10	241	17	500	246
pyobject_callobject	0	204	295	790	64
pythonwin	83	206	178	361	467
ommited	3	263	306	155	655
ipyhon	90	15	189	540	818
\delta	11	186	242	129	292
some_list	43	12	461	471	260
sparser	77	151	97	511	762
normalised	77	195	63	511	780
refinements	74	232	159	209	526
strictly	10	151	17	209	999
equates	77	292	317	605	227
strict	10	227	17	200	999
from_date	98	258	26	558	377
detectable	10	227	106	631	999
house	78	116	430	149	67
pretty-printing	34	173	234	302	142
734	12	142	52	528	175
753	12	267	488	111	132
750	12	142	220	528	106
jug	38	137	80	15	564
755	12	78	162	528	588
linalg	16	94	462	782	559
758	47	256	58	196	432
jun	67	163	284	718	483
snipit	27	137	459	15	421
jul	67	163	284	718	483
jus	32	263	420	482	768
upcasts	70	59	74	332	979
jut	38	6	291	317	628
photon	77	29	114	182	210
r_hat	72	186	25	174	306
7.1	96	272	264	246	544
applying	74	232	140	98	526
mortals	68	190	371	205	571
multiplicity	98	132	127	73	77
randomizedpca	16	94	354	135	816
obtains	79	193	332	98	347
strongly	10	1	17	500	215
13:55	67	213	95	185	51
cba	43	53	231	145	569
write_frame	86	68	119	478	824
totaling	86	160	220	80	519
sensor_data	98	110	65	155	602
rvs	93	23	193	628	239
asynchronous	23	85	71	349	431
politics	88	266	22	574	604
stumbled	17	62	88	161	874
fuzzywuzzy	3	156	163	354	798
idiot	65	291	258	451	345
idiom	10	241	378	200	29
sub-dataframes	3	156	65	354	125
re-framed	34	118	116	97	216
stumbles	34	190	307	233	571
2013-11-04	43	200	231	550	255
matplotlib.image	84	219	102	641	427
unneeded	14	263	388	458	655
2013-11-07	83	206	80	302	564
hardcoded	64	28	306	436	370
oneself	82	241	479	500	215
set_zorder	6	161	90	543	109
yahoo's	23	116	27	370	257
low_y	0	55	295	684	231
dof	79	23	332	428	484
includes	74	117	152	58	638
self.axes.plot	6	46	345	418	162
flower	78	250	252	463	604
bounded	79	288	324	487	762
included	29	137	306	791	421
procrustes	28	14	267	761	841
bilateral	77	230	428	166	353
+oo	11	234	4	215	56
ginput()	90	136	208	272	847
invest	17	190	377	321	118
odds	29	266	97	574	905
curve	61	23	332	212	762
00000	47	201	180	50	60
small_df	44	93	82	558	965
df1.mul	44	2	181	700	591
migrated	34	173	35	233	142
descartes	61	28	208	202	854
avaris	35	238	326	187	308
readlines()	86	54	382	260	698
**n	11	234	4	531	56
scalar	75	106	421	519	684
predefine	74	232	37	746	684
**k	11	234	4	562	56
iloc	92	104	23	733	92
follow	34	137	116	97	328
_need_	82	28	246	500	472
polarity	3	250	445	354	604
numpy.random.shuffle	19	294	296	231	280
backwards-compatible	38	1	291	202	327
removal	74	263	306	190	655
clip_on=false	58	44	494	777	683
non-date	3	110	6	354	410
program	22	187	108	361	248
sgemm	16	94	462	782	800
y.astype	87	59	180	50	522
presentation	28	125	294	525	625
fill-in	16	151	106	654	509
bitrate=-1	73	243	452	16	721
**=	11	234	4	562	726
woman	32	205	346	125	879
void*	9	204	29	790	64
data_column	3	68	1	285	865
**3	11	234	4	531	99
**2	11	234	4	531	56
over-write	29	171	388	190	629
lyapunov	79	10	324	487	610
worst	82	180	100	497	246
***	63	83	283	715	39
hatching	73	136	24	276	664
date_range()	92	185	78	105	971
bubbles	37	31	412	212	664
non-periodic	77	292	20	430	547
6x6	71	64	213	738	95
stats.friedmanchisquare	92	106	140	105	699
plt.fill_between()	51	136	208	272	481
numpy.amin	87	57	418	673	221
undone	37	28	443	207	62
k.index	47	52	180	290	985
conflicted	28	43	106	525	803
instantaneous	88	283	55	497	463
teh	29	28	80	209	472
rats	65	291	258	407	345
ten	88	160	220	80	54
tea	17	17	223	4	626
built-in	38	214	125	756	382
tee	81	144	327	147	383
direc	60	275	226	641	221
rate	77	29	114	574	227
design	10	231	17	321	354
~25	88	160	220	80	54
direction=	58	112	240	495	599
minimas	75	103	206	73	77
tet	98	148	206	73	77
axes.set_aspect	51	44	195	272	683
nonlinear	79	10	324	214	610
.fig	73	125	248	276	304
.fif	86	192	329	676	946
deeply	68	43	465	432	343
2014-01-01	80	260	12	2	24
piechart	61	136	175	158	384
.fit	84	26	349	539	412
memcached	23	85	69	128	431
segmentation	63	244	389	361	473
deserialized	86	100	325	601	22
andrews	61	136	175	42	847
directions	33	176	443	617	762
up-votes	34	190	307	97	216
every	74	232	497	534	214
.drop_duplicates	44	164	181	700	895
misinterpret	32	28	246	482	472
n*m*3	71	195	268	519	684
dict.get	92	12	78	105	699
created_date	98	146	82	796	984
options	64	6	159	78	79
sticking	17	13	88	458	118
thankfully	29	227	80	209	275
2000l	52	19	162	284	622
inrasters	47	224	30	283	622
8}	15	67	256	145	576
screens	23	36	175	122	625
texts	37	31	163	482	798
backslashes	32	282	190	403	5
gigs	88	182	373	549	236
1900	80	163	284	718	72
in_results	47	274	349	539	412
converterd	9	185	226	641	699
datanitro	86	68	275	370	126
gtpe	35	207	371	205	336
converters	76	54	322	51	698
windll.kernel32	55	85	365	349	257
tryng	29	28	227	432	472
unworkable	82	241	100	334	463
2000+	3	29	299	94	67
__setitem__()	19	214	331	13	512
re-sort	37	263	454	680	673
text1	32	16	420	177	768
surface's	33	176	282	617	725
20000	88	160	220	80	54
x.columns	0	134	461	471	260
radviz	28	6	278	158	854
text=	47	224	58	424	8
squish	37	31	467	780	851
quantized	98	275	317	141	756
data_file	76	199	30	283	736
equation	79	10	324	487	610
for-loop	82	180	497	534	68
17.1	85	206	151	685	380
pyproj	33	176	135	617	908
ophion	35	238	326	187	336
11x11	71	195	213	674	353
crosstabs	3	110	6	354	125
pandas-dataframe	3	232	6	94	36
embarrassing	65	291	258	236	345
num1	52	19	263	145	622
num2	52	19	263	145	622
num3	52	67	256	145	888
jan's	34	238	187	97	308
numpy.random.shuffle()	75	106	421	231	650
coerce	70	39	245	601	934
arise	29	231	389	173	568
matplotlib.pyplot.annotate	64	290	166	706	76
p.loc	52	104	23	733	154
display.max_rows	76	243	452	171	290
breaking	29	13	143	458	589
replotting	6	46	388	666	356
2.7.8	85	276	42	685	621
cleansing	3	137	291	188	866
sapply	47	47	68	290	100
scipy.spatial	53	88	11	293	716
by_tz_os.size()	92	104	78	105	699
passed-in	9	184	158	594	782
nump	30	206	80	381	588
firstname	78	93	82	558	965
nums	75	148	206	471	77
emulate	38	137	459	200	421
getframe	22	101	20	684	231
numy	29	206	80	197	854
trial-and-error	17	62	328	161	589
panel's	64	290	90	572	370
pd.timedelta	80	273	309	678	852
non-root	83	84	376	197	467
disable	64	231	389	716	370
_ndptr	9	109	331	594	386
capitalize	92	110	383	616	477
_plot	60	155	240	485	162
footer	76	54	322	468	698
unzipping	86	252	27	110	368
barbs	61	176	208	319	908
specifying	74	232	152	641	526
-man	65	291	258	407	887
list_of_arrays	1	12	461	471	806
matplotlib.pyplot.hexbin	51	136	175	626	847
september	80	163	284	723	72
banditgroup	9	109	331	44	386
mission	90	187	108	624	536
gete	47	224	25	424	881
python2.7-dev	13	170	50	104	482
.resample()	92	202	78	105	971
max_features	88	266	293	574	1
concentric	61	31	282	212	138
bcolz	86	222	426	611	43
susceptible	28	14	106	710	970
c_int	70	204	74	790	64
df2.groupby	44	164	181	700	419
co-ordinate	33	176	135	617	995
matplotlib.text	64	161	90	543	683
im.set_clim	60	44	494	65	221
might	82	241	246	500	196
alter	74	232	37	190	629
40ms	88	180	55	337	89
z_matrix	75	106	421	471	681
largest	98	146	127	141	868
units	37	290	443	207	449
outputing	22	171	329	110	526
smoothness	53	151	324	487	970
bigger	88	266	100	574	668
t.shape	1	57	112	305	830
ynd	75	294	10	278	470
256.0	11	234	4	664	99
inequality	79	227	324	457	135
itertools.count()	93	12	461	480	591
12th	80	163	254	723	72
inherent	10	231	17	173	305
unsing	61	6	278	626	854
memoryerror	22	283	373	361	236
fftw	55	174	408	90	651
formulate	82	118	307	590	216
deallocate	22	61	153	358	282
scratching	17	62	56	753	180
1*1	11	234	4	531	56
1*3	72	178	25	150	756
df.to_latex()	32	16	346	177	576
dataframe.eval()	92	214	125	569	435
4pm	80	29	254	723	931
fftn	16	101	20	430	547
ref1	78	146	445	796	984
health	78	150	430	149	423
benjamin	35	115	35	20	142
insort	89	241	341	497	90
concatting	40	146	182	587	125
experimenting	17	62	88	161	647
randall	47	115	430	20	423
teach	17	43	377	396	803
generate	74	232	37	110	36
thrown	29	231	389	716	473
sys.exit()	90	187	108	599	248
product_id	44	93	82	390	965
series.loc	52	0	68	290	855
openoffice	86	91	329	107	127
year's	80	56	299	723	897
area_size	60	194	269	65	221
numpy.resize	19	294	158	231	782
ui_mainwindow	0	106	295	684	699
ax.set_yticklabels	60	44	166	706	184
circuit	28	14	267	710	841
throws	63	83	283	715	39
$m	32	205	346	125	879
$h	11	205	346	125	879
$i	52	0	244	770	174
2599	1	274	112	172	159
linking	96	174	80	197	564
pd.multiindex.from_product	44	134	461	700	260
pandastable	81	206	178	739	584
defects	77	151	106	631	762
blank	29	263	420	122	655
$w	47	17	223	4	437
$s	32	205	346	125	879
temperatura	80	200	77	550	272
v.shape	1	274	180	177	764
temperature	77	250	77	182	210
utilization	22	147	71	349	431
pyobject_getitem	9	204	331	594	64
rails	23	84	377	149	275
data_gen	0	106	295	684	231
i-1	52	132	273	284	19
strategy	82	137	341	525	36
i-2	52	148	273	284	19
pd_data	43	72	68	265	708
np.apply_along_axis()	19	214	125	13	512
$-	32	16	420	415	768
string-type	32	99	420	601	509
$$	47	67	25	424	888
format_coord	6	161	90	572	481
labeled_comprehension	19	214	125	98	512
pandas.tools.plotting	51	136	390	272	847
axes.color_cycle	20	166	134	764	664
horrifically	82	180	100	497	463
$1	88	283	250	149	180
i-j	78	258	82	796	832
texel	99	288	339	166	744
pip.exe	30	261	486	165	368
i-v	61	14	267	623	841
by-hand	82	180	341	537	219
outstanding	34	173	359	604	208
measure1	43	47	231	265	708
krylov	16	94	462	782	800
eigvals	16	94	462	562	771
mydatalist	75	19	206	471	622
hexagonal	61	288	339	646	138
w4l	15	256	236	514	980
configparser	83	206	80	381	444
16777216	1	19	112	305	60
_list	3	297	461	776	903
interferes	64	231	152	716	370
eft	47	200	30	406	987
utctime	43	35	93	727	410
eff	32	263	420	468	768
added	27	171	116	791	421
warnings	63	231	389	716	686
reckon	82	28	227	432	345
measures	28	250	185	94	11
strongest	77	151	106	631	762
measured	77	29	77	182	210
pd.read_fwf	76	199	322	51	189
7.1.2	13	206	151	202	380
convert_dates	92	185	322	183	934
stones	28	14	132	149	563
_before_	81	46	192	642	889
.asof	92	149	447	460	612
panel.groupby	46	221	124	331	435
color=colors_dict	60	0	418	129	910
wolfz	79	22	140	566	13
600mb	88	160	373	549	54
sub-list	98	297	273	73	77
penalty	82	180	341	537	246
python27\lib\matplotlib\	50	145	225	168	679
)```	1	47	15	50	379
peaked	77	266	22	574	227
bfgs	79	22	324	566	13
time-consuming	82	180	100	497	463
treshold	98	146	127	98	744
ax.bar()	74	263	306	534	622
modifed	35	238	187	187	308
thereabouts	84	195	128	674	353
on_release	6	161	90	572	112
x.year	87	201	493	76	593
activity	78	56	445	182	604
sustainable	82	241	395	334	29
vincent	64	6	278	158	847
plt.savefig()	6	46	18	648	356
)``)	57	39	1	285	62
df_filtered	52	134	65	155	154
cond1	87	52	496	605	985
cond2	87	52	496	605	985
-100	93	194	269	65	212
2.9	85	272	61	225	544
.massias	65	291	258	407	887
precompile	55	174	80	756	564
2.3	15	272	61	225	544
2.2	15	272	61	225	544
2.1	15	272	61	225	544
2.0	15	272	61	225	544
2.7	85	276	42	685	380
pythonw	83	15	189	180	383
2.5	15	272	61	225	544
2.4	46	272	61	225	544
crunching	55	1	69	537	866
np.expand_dims	1	57	112	232	726
nailed	35	207	371	205	767
numpy.linalg.matrix_power	16	94	8	756	62
3.3.2	85	276	42	685	621
pyodbc	86	68	119	478	126
2015-10-29	67	67	223	2	567
orbiting	33	14	282	710	762
3.3.5	85	276	42	685	621
other's	22	171	80	500	521
corruption	22	283	373	128	282
recently	46	62	88	161	874
scatterplots	51	136	24	272	847
j+1	52	132	273	284	19
korem	35	207	371	205	336
succeed	29	28	410	161	457
conda	13	128	5	481	482
6672	32	110	163	712	798
condo	78	17	223	4	567
bronze	78	200	252	204	832
license	83	1	69	461	637
pyarray_data	9	204	29	790	64
python3-numpy	13	170	50	104	482
interactive	90	15	189	226	818
flier	64	161	24	42	664
duplicity	3	156	182	587	125
reasons	10	227	17	500	215
folder1	47	144	30	283	588
hadn't	65	291	258	407	874
_should_	64	171	246	732	196
saullo's	35	238	187	187	308
slots	22	85	294	94	214
ax^2	11	186	242	531	56
matplotlib.pyplot.close()	6	69	46	732	389
pr	46	173	359	604	208
ps	73	125	248	276	304
pp	47	144	58	381	588
pv	35	115	409	20	336
pw	47	274	102	305	588
pt	47	224	58	424	588
duo	85	30	480	785	858
woks	35	207	274	407	336
shared_array	0	237	295	684	231
px	47	219	102	401	756
py	81	206	178	540	383
exp1orer	34	118	116	97	216
due	10	231	17	173	568
succeded	27	125	329	122	214
dug	17	62	143	312	746
dux	60	155	495	495	162
pc	83	30	480	785	467
pa	72	130	25	174	624
pf	47	275	25	129	292
pg	28	254	234	179	565
pd	81	88	110	739	183
pe	78	200	223	133	626
dup	34	173	307	97	142
swp	43	72	68	265	708
dur	47	201	173	424	591
pi	33	234	242	664	725
pn	72	130	431	120	773
pl	81	88	110	739	889
pm	80	260	12	372	931
np.ma.array	48	59	41	50	21
vaguely	29	231	459	335	905
for-loops	82	180	422	537	219
intercept_	79	26	354	638	816
libpng15	30	170	94	165	960
p2	72	4	431	120	624
p3	72	102	431	120	624
p0	72	275	418	211	292
p1	72	102	431	120	624
pd.apply	92	156	78	105	971
p4	72	4	431	120	624
p5	47	105	30	424	764
ahah	65	291	258	236	345
batch	22	85	294	94	953
inconvenience	68	190	307	451	98
p=	93	194	173	606	10
decoder	84	192	123	607	405
tweaking	64	6	246	78	370
set_over	25	119	320	49	618
quadtree	53	6	11	293	716
p*	11	186	242	531	56
nd-arrays	75	64	10	231	650
bespoke	82	241	341	525	669
theres	82	137	227	334	472
cummax()	19	193	78	673	121
unitary	16	94	462	782	800
twiddle	29	137	143	334	421
daterange	80	35	26	77	333
x**2+y**2	11	234	4	531	56
pd.rolling_min	43	47	447	460	612
neurons	28	14	114	710	856
pytypeobject	9	109	331	594	386
boxsum	53	101	428	511	531
list-of-dicts	82	50	100	497	463
cset	60	102	418	193	910
right_index=true	44	2	253	427	176
matrix-matrix	16	94	462	782	651
sliver	61	281	443	757	786
tst.py	50	267	118	734	679
arrives	22	187	365	361	257
x87	57	100	325	86	22
x86	96	45	486	650	634
cartridge	83	206	178	197	380
scipy.optimize.nnls	16	94	462	782	800
domains	99	288	282	487	951
linalg.cholesky	16	94	462	562	659
arrived	34	62	247	97	746
nplots	1	57	112	232	21
robust	82	241	378	573	29
2.22044605e-16	57	89	8	559	743
randn	93	123	193	628	361
lower	37	266	443	191	668
counter()	19	12	455	105	512
abcde	43	17	493	779	567
anybody	68	28	227	432	571
file.read()	47	224	30	177	736
numpy.all()	19	214	140	684	782
t.set_subtensor	52	0	263	129	855
dport	78	93	82	463	965
numpy-compatible	38	6	291	209	669
431	12	279	488	751	159
library_dirs	50	259	277	138	469
client_secrets.json	30	259	478	159	960
abilities	38	6	291	525	79
pythonnet	55	1	29	317	564
codereview	34	173	307	709	216
competitive	82	180	55	537	720
np.zeros()	19	184	153	358	68
inactive	22	187	108	94	822
memory_map	9	185	2	621	130
autojit	55	174	422	90	761
df.rank	87	164	181	700	827
onset	77	29	114	574	210
loading	86	222	329	110	519
gemv	16	178	408	562	729
extracted	74	110	27	746	161
lc_all=c	30	166	134	764	181
maxlags	79	275	140	566	13
exclusively	74	232	17	209	305
plateau	77	13	485	212	762
python2	30	12	455	480	932
gemm	16	94	408	782	651
build	83	206	80	197	564
expirations	80	258	26	538	377
svgs	73	125	248	276	304
marker's	37	31	443	207	449
terminate	22	187	108	361	248
colorline	51	136	208	272	481
integer	57	99	325	788	979
:[[	52	67	256	364	265
show_leaf_counts	64	185	452	716	130
0.999	57	89	4	559	743
0.998	79	23	332	638	11
arthur	35	207	116	97	142
output.json	86	110	329	283	754
bitwise_and	70	106	421	113	135
alignments	37	31	467	780	851
province	78	250	132	479	604
3.6	15	272	61	225	544
streaming	23	85	294	370	257
hassle	82	241	100	334	327
3.5	85	272	61	225	544
logical_and	19	214	198	113	135
'`)	32	16	170	177	475
3.0	15	272	61	225	544
numpy.convolve	19	101	125	703	547
np.int64_t	70	204	29	790	64
3.8	15	272	61	225	544
3.9	15	272	61	225	544
gradually	22	13	485	757	195
t_i	72	186	25	683	773
"""`	47	224	30	424	244
waveform	77	292	20	430	547
medv	29	28	234	4	473
tends	82	241	395	334	463
hosts	78	84	430	149	423
fragments	27	263	305	420	421
t_t	65	291	371	236	345
12mb	88	283	373	549	236
numpy.squeeze	1	57	112	232	503
3.j	15	211	4	364	265
bigx	98	148	97	141	340
tinker	17	137	106	525	327
15gb	88	283	373	549	236
df.sortlevel	44	164	181	700	895
y_range	60	102	418	641	910
3.x	46	206	455	202	932
fastpath	9	109	331	594	699
comps	75	12	461	776	806
t_2	72	130	243	174	624
t_3	78	93	243	796	984
t_0	72	186	242	129	56
t_1	72	130	25	174	624
go-to	38	6	291	525	450
t_4	47	130	162	133	272
skiprows=2	76	199	286	51	189
ecdf	79	23	332	511	239
1.2.0	85	276	42	681	252
y1-y2	11	234	242	531	56
codepage	63	16	190	477	444
1.2.1	85	276	42	681	252
isomorphic	3	297	454	587	984
statment	0	224	30	155	508
daylocator	64	44	166	341	184
sparse.hstack	70	59	74	332	522
shmarray	55	85	71	349	431
conceivably	82	227	341	537	246
fast	82	180	341	497	463
vendors	23	1	69	149	313
we're	10	13	17	500	118
oddities	10	231	395	335	568
conceivable	82	241	341	497	246
mundane	82	241	378	573	29
myfunc	87	164	493	76	231
time-stamps	3	146	6	587	340
groupwise	3	56	148	98	347
foo.csv	76	199	286	283	754
infers	70	99	152	601	843
deployed	83	84	376	184	467
groupings	3	56	6	354	66
sns.regplot	37	136	90	391	388
iterrow	92	156	78	47	971
numpy.swapaxes	19	294	296	291	601
pythonqt	83	206	178	197	564
46.29821447	15	157	64	296	837
figurecanvasagg	6	38	46	380	384
associated	74	232	37	746	868
0012	67	78	256	133	272
0010	43	200	231	550	888
racking	17	62	56	753	180
warning	63	231	389	716	39
path=	30	259	478	159	469
multi-parent	99	288	11	315	277
grp	44	164	181	204	832
multipliers	79	10	324	744	610
mxnx4	84	219	51	759	427
gre	43	72	68	265	708
weight2	77	23	63	511	239
weight1	77	23	63	511	239
income	78	150	445	479	604
clements	35	238	409	187	274
path.contains_points	53	106	208	684	908
py32-matplotlib	83	206	178	197	380
weigh	79	151	106	590	531
join_axes	44	2	260	33	176
9216	71	195	213	674	684
8:10	12	279	488	111	132
numpy.pxd	50	145	118	483	927
suffers	10	117	106	173	378
-that	10	118	17	791	999
__numpy_ufunc__	9	214	125	594	782
gr8	68	207	359	285	919
pyro	34	85	71	349	431
declination	33	176	135	617	725
weights	79	23	63	511	239
plt.tight_layout	58	138	495	642	299
new_values	44	134	93	155	827
a()	0	46	345	44	807
steve	35	115	409	20	336
dsm's	35	238	187	187	308
ggplot2	51	6	390	703	392
referencing	74	171	386	436	526
numpy.random.seed	93	123	193	628	507
issues	29	231	88	173	568
font's	37	31	467	780	449
reinsert	3	146	65	155	410
disposal	23	14	294	525	542
stably	22	283	373	549	236
2darray	74	110	6	601	684
stable	46	221	124	331	435
non-parallel	55	174	422	90	219
overlaps	37	31	443	780	851
gini	79	23	332	638	11
anti-aliasing	20	151	428	757	303
indexer_between_time	92	185	78	13	512
numpy.genfromtxt()	86	54	382	260	698
business_id	44	93	82	558	965
readout	40	184	153	691	122
dfgrouped	44	134	82	204	832
electron	77	14	77	623	210
cax	58	139	494	324	543
bounding	37	31	443	207	449
redistribute	55	174	69	461	637
crossvalidated	34	173	307	669	216
combine_first	92	156	78	763	971
event.artist	6	161	90	543	109
.bashrc	30	122	478	159	181
week's	80	56	254	723	897
semi-log	51	136	175	272	614
databaseerror	63	244	283	553	454
self.h	52	148	206	476	726
cap	61	31	443	212	214
abs()	57	214	201	673	231
self.l	6	161	461	471	481
notnull()	92	156	424	414	971
folds	79	26	354	135	616
work's	35	207	274	205	767
self.f	6	144	345	44	8
self.z	52	19	206	284	756
self.x	0	224	418	129	881
self.y	0	224	418	424	881
.py	30	162	486	247	344
self.r	9	106	295	471	699
leave-one-out	79	26	354	135	816
self.t	11	55	418	129	910
theano.function	0	275	295	44	292
pandasic	82	241	378	573	29
blobs	99	230	128	166	353
_can_	82	241	246	500	472
.sort_index	44	175	181	700	895
lexicographic	3	297	182	524	9
colorization	74	6	128	429	353
matpotlib	61	136	278	158	847
dblquad	0	10	324	416	13
mwaskom	35	207	409	20	336
more	82	241	291	573	328
iframe	90	125	46	158	127
plt.hist2d	25	44	320	557	780
ndimage.gaussian_filter	1	57	112	232	881
pushing	17	13	143	39	118
slated	46	221	124	331	435
desired	27	137	459	122	508
roc_curve	79	26	349	539	412
separation	74	232	37	746	36
sexy	82	241	274	270	345
rolling_sum	92	193	78	614	121
tetrahedra	99	288	11	315	138
dividing	57	146	148	428	62
mkl-cp27-none-win_amd64.whl	13	261	244	797	174
spines	58	290	90	322	76
arr.shape	1	57	41	677	21
lasexception	63	88	110	715	584
platform-specific	55	261	486	197	455
reds	20	119	259	49	846
superuser	34	84	376	250	348
dataframe.from_csv	76	185	322	51	698
~150	88	197	220	80	217
struct_id	78	93	82	204	832
integrations	28	10	324	487	610
summation	40	214	154	98	382
redo	82	13	341	190	118
lnk2019	63	244	283	24	323
usd	43	72	197	265	708
feb	80	163	284	718	483
usb	23	84	365	676	257
usa	78	200	430	584	765
&	47	52	198	181	437
numpy.pi	93	89	201	473	743
fem	28	14	17	227	632
multi-indexes	3	156	6	354	125
few	29	62	159	161	746
depicted	61	31	175	122	421
ust	32	263	420	482	76
usr	30	259	277	159	752
gert	74	232	306	209	36
attribute	9	83	383	616	477
b*x	11	234	242	531	56
.bar	51	44	195	418	12
sort	40	232	182	524	9
fno-strict-aliasing	50	157	133	117	160
numpy.fft.fft	87	101	20	430	830
whant	74	232	246	209	472
impress	29	28	395	497	463
sory	65	291	258	407	887
fieldnames	9	104	206	471	622
to_datetime()	92	35	245	560	934
14.04	85	276	233	393	858
300x	88	180	55	337	89
ax.xaxis.set_ticks	58	44	166	341	184
w.shape	1	274	112	305	159
augment	10	118	227	209	472
weighting	79	23	332	638	531
ram	88	182	373	549	236
wxmpl	90	69	46	380	384
df.rating	43	47	231	290	708
line_profiler	55	147	125	302	219
mask=	87	52	198	50	985
20x100	71	64	268	519	981
proprietary	86	84	69	676	127
_wrong_	10	241	395	590	999
calculation	74	50	148	98	382
mask1	52	220	158	476	757
mask3	52	52	68	476	757
mask2	52	52	160	476	757
carrot	43	200	223	4	567
something	29	137	246	209	472
somethink	3	232	246	110	629
unevaluated	79	10	324	744	610
2003.04.08	67	260	162	133	888
replace_nans	19	193	424	414	512
memorize	22	13	294	110	257
arcgis	83	206	178	197	380
minlength	19	185	226	641	512
4:6	52	19	160	284	776
hadley	38	6	291	302	628
640x480	84	195	213	592	427
\ironpython	50	145	486	138	204
sharelink	86	293	202	676	188
iteration's	22	263	388	534	214
pennington	65	291	116	407	887
pyopencl	55	174	29	90	651
masks	75	146	10	605	602
pyopencv	83	170	80	197	564
3700	12	160	162	528	272
pyspark_python	30	259	244	159	181
3704	50	267	118	580	429
opensuse	85	276	233	393	858
chr1	12	281	162	528	272
distutils.core	81	88	110	739	584
4d	71	64	268	519	684
print()	27	12	202	183	508
epd64.framework	50	259	277	303	469
mean_squared_error	87	275	349	539	412
iterator=true	76	199	322	217	698
converging	79	151	40	487	762
self.mpl_connect	60	155	231	71	255
saturated	20	151	51	757	786
ouput	27	137	459	15	508
%%	32	205	346	177	576
call-back	90	69	46	572	112
numpy.__init__	81	88	110	739	183
%=	1	57	4	770	726
meh	65	291	395	236	812
looks	29	137	459	15	508
new_col	43	134	68	700	827
%1	63	244	283	553	584
boosts	55	174	422	537	651
%2	43	52	68	290	985
opt=	96	174	133	138	30
multi-dimensional	75	64	10	519	650
-hypothesis	65	118	258	407	887
set1	98	132	273	73	77
inexistent	10	227	397	756	382
ships	83	206	211	197	380
prudent	82	241	307	590	215
my_func()	88	197	55	337	89
estimating	79	23	332	511	531
permanent	22	241	388	190	629
inspecting	74	171	143	716	508
orange	20	31	259	757	786
multithreading	55	174	408	90	431
defining	74	232	386	436	526
1.8.1rc1	83	206	151	202	380
card_no	78	93	82	558	602
%m	80	205	346	125	879
%l	32	205	346	177	576
%n	52	58	263	215	19
%i	76	205	346	125	879
contention	55	283	69	128	246
richness	38	1	479	149	423
%e	32	205	346	177	576
%d	47	205	346	125	879
%g	70	205	346	177	576
%f	32	205	346	125	879
indexing	40	104	23	733	650
%b	80	205	346	125	879
%}	50	144	58	708	202
squeeze=false	58	44	90	641	683
non-intuitive	10	231	395	335	568
%x	47	205	346	177	576
%z	47	201	346	125	24
satellites	33	286	135	623	210
%v	92	35	275	560	934
serif	73	166	134	764	862
%p	67	205	346	125	879
%s	76	205	346	125	879
%r	63	205	346	177	576
nff	43	200	430	204	832
contourplots	53	288	339	646	340
unpredictably	16	231	8	654	800
dominance	75	106	10	231	782
nfw	79	23	332	511	239
unpredictable	10	231	395	335	568
0-50	37	281	287	42	995
nfs	30	84	376	184	831
ndims	71	274	268	305	981
erratic	77	231	395	335	303
studios	96	45	486	650	634
df_group	44	134	260	155	832
rho0	72	275	25	562	292
f2py.py	30	162	486	138	30
geiger	23	85	365	676	257
xlrd	86	91	367	107	86
-pipe	50	259	133	117	160
c**2	11	186	25	683	56
2.35	15	256	236	196	432
5*5	71	64	268	738	95
integrates	38	6	291	416	450
y=10	33	281	287	719	358
nearest-neighbour	53	288	11	293	716
y1a	72	4	418	516	292
vcv	43	72	231	265	987
str.format()	47	12	455	480	903
integrated	38	1	291	416	564
rewrote	27	8	116	525	219
co_num	3	110	243	468	768
molly	35	207	371	205	336
missunderstood	65	118	116	407	345
promptly	22	187	108	361	248
plt.subplot2grid	58	139	494	324	543
intersperse	61	110	351	646	913
usual	74	232	246	209	382
comrade	35	207	371	205	767
phrases	3	286	163	253	798
blogpost	34	173	234	302	565
imputing	74	146	148	98	347
built-ins	38	214	291	756	382
transfer	74	85	294	110	257
ft2font.so	30	259	94	165	960
phrased	65	118	307	590	216
0.2s	88	197	55	337	89
numpy.min	87	55	121	673	608
-500	60	194	269	528	213
blit=true	6	46	345	599	373
2014-12-04	67	260	12	372	958
proposing	10	173	359	604	999
righ	61	31	227	780	851
makefile	30	162	486	247	455
spronck	35	207	409	407	336
rigs	67	201	284	71	96
pyevolve	23	14	294	761	866
pre-sorting	40	50	100	537	246
transistor	33	14	267	623	210
datastack	12	110	454	712	519
slides	34	254	234	302	565
slider	90	69	32	624	536
np.ndarray	9	204	331	594	681
renumber	98	297	182	587	984
set_fontsize	64	44	90	543	683
random.seed()	93	123	193	628	361
==>	47	258	430	133	588
borini	65	291	258	407	887
boring	10	241	395	334	327
gages	43	72	298	378	945
np.insert	1	57	296	232	280
unsized	63	83	383	715	286
patients	78	150	445	479	604
three-level	3	156	6	354	125
writeable	9	220	153	358	282
python3-dev	13	170	50	104	482
np.savez_compressed	76	222	357	102	820
self.axes	58	139	494	324	543
factorizations	16	94	462	782	787
intersecting	61	288	282	212	138
log-scaled	61	136	175	780	851
series.values	92	106	78	105	699
c=c	52	148	273	770	792
tldr	27	137	116	97	421
polarization	77	192	365	182	210
quotechar	76	16	322	477	698
=	47	224	303	50	371
vegetation	99	288	428	166	563
dpi=80	60	243	18	16	721
harmful	10	1	17	500	142
----------	47	115	58	550	888
brent's	53	22	238	720	396
quick'n	82	137	341	525	669
return_type	92	185	226	641	699
discourage	38	43	390	500	351
refreshing	90	187	388	624	107
ete2	38	6	80	158	854
.000	67	205	346	2	869
.001	60	194	269	606	10
data.median()	52	0	68	290	708
site-packages	50	145	225	27	927
diagnostics	27	254	305	716	328
locator.maxticks	67	194	269	686	743
automated	82	241	294	573	370
ccdf	79	23	332	511	239
pandas.core.index.index	92	109	331	594	699
planning	23	43	246	500	118
quesiton	27	118	116	97	328
q1	98	200	430	10	358
q3	98	281	287	10	358
q2	47	134	430	204	832
q5	43	47	223	290	567
q4	78	56	430	204	832
6000	88	160	220	80	106
py_initialize	22	46	345	599	356
q=	15	211	61	514	980
datarow	52	19	206	471	622
parsers.py	50	145	225	580	429
7395	48	274	180	172	849
pandas.dataframe.groupby	92	156	78	105	971
easy_install-2.7	13	170	244	165	174
plt.circle	60	155	240	495	162
heta	32	16	420	403	768
lossless	84	192	123	592	946
reset_index	44	156	78	763	971
qq	72	23	25	511	239
qp	79	10	324	214	610
n_cols	1	274	112	677	442
qr	16	94	462	782	800
arithmetics	57	89	302	756	62
qt	90	38	46	380	384
ctypes.py_object	48	224	295	424	881
x.startswith	43	47	493	76	593
qa	34	173	234	746	161
qc	43	72	424	415	203
categorised	70	99	275	601	979
qf	60	275	418	129	292
qi	11	234	4	196	743
qk	87	59	121	621	608
600k	88	160	220	762	54
qn	68	173	116	97	328
re-indexed	3	171	65	155	673
np.divide	1	20	201	664	726
all-na	3	146	454	587	655
fantastically	35	207	274	205	767
numpy-based	82	180	341	537	219
0hz	77	292	20	430	227
int16_t	9	204	29	790	64
0hr	43	72	231	265	708
sort-of	65	291	395	335	812
arrowstyle	64	161	265	543	683
arguably	82	241	291	573	29
platform.architecture()	47	5	58	199	870
command=	0	46	345	44	8
diverge	28	151	106	631	970
func()	0	275	295	684	231
titlelevel	78	93	82	558	832
6-byte	70	100	74	601	681
\r\n	76	16	286	477	413
weighing	77	23	332	511	531
convertion	74	99	245	601	141
hypothesis	79	23	332	638	11
sgdregressor	28	26	354	135	816
_do_	10	231	227	500	472
probing	22	227	80	768	36
q-dec	43	149	447	460	612
columns=	44	164	181	348	895
non-contiguous	75	184	153	453	122
commands	90	15	189	540	383
numpy.longdouble	70	100	325	86	22
vanishing	77	151	106	207	668
futr8t	73	144	134	131	588
coloumn	98	110	454	155	428
gram-schmidt	28	14	267	710	841
mutating	9	237	158	436	864
erbb2	43	72	93	265	708
narrower	37	31	467	207	668
packaging	13	128	5	197	637
subscribe	34	190	80	321	216
t+1	72	130	273	556	622
table	3	110	6	354	125
narrowed	29	62	88	173	874
forms	74	232	159	200	382
provinces	99	176	132	623	293
encapsulate	38	237	397	436	382
e_data	1	134	198	33	714
non-tuple	9	106	421	594	650
tutor	23	43	377	396	275
literal	32	16	190	403	311
maps	74	232	128	746	296
-999	67	79	424	415	203
dosomething()	90	171	388	572	214
activate()	75	106	295	684	782
ikl	47	178	473	743	884
determinant	16	94	462	782	800
.figtext()	64	161	90	641	683
matplotlib.backends.backend_qt4agg	6	38	46	380	384
sqlite3.binary	86	222	329	260	405
powerful	38	6	291	317	628
logchoose	0	275	4	424	881
sufficient	34	137	246	525	999
np.bincount	19	42	296	121	886
17sec	67	255	223	550	888
hms	80	35	245	781	920
hmm	65	291	258	407	887
hmh	10	231	395	631	999
y_predict	79	23	185	638	11
a.k.a	83	170	463	165	588
off-by-one	10	231	389	654	215
unscaled	79	23	332	638	11
align	37	31	467	780	851
np.min()	89	55	207	139	90
data.ix	43	72	309	727	852
out=none	48	57	2	621	608
'))	43	201	170	460	593
.cumsum	11	57	180	215	99
correspondence	74	232	182	587	363
apply_async	0	85	71	349	807
usefulness-useful	43	200	93	145	475
avx	96	174	408	90	651
webpages	86	222	27	370	519
__import__	9	224	397	500	215
layed	74	232	272	122	673
avi	86	125	329	381	127
dual	88	30	480	785	651
snuck	65	291	258	407	887
ave	87	193	222	512	392
matplotlib.mlab.specgram	51	101	140	684	481
avg	78	258	148	520	377
dictonary	3	297	6	587	161
.this	47	224	30	283	588
radiation	77	29	77	182	210
cross	28	26	354	638	841
member	9	109	331	436	386
fast2	40	180	154	231	122
arrowstyle=	58	138	265	651	224
sklearn.metrics	81	88	110	739	183
2-byte	70	100	325	86	22
ndarray.shape	1	19	112	677	681
definately	65	291	258	236	345
cursor.execute	86	68	119	478	126
beast	10	231	395	335	354
npymath	50	259	277	117	842
pandas.pyc	30	162	478	247	344
gdal.getdriverbyname	76	144	286	283	413
namedtuples	29	12	455	776	903
repsonse	29	263	306	122	655
1955	67	163	284	718	483
.pyc	30	162	486	247	344
.pyd	81	261	486	247	344
.pyf	55	162	29	247	455
cuepos	78	93	82	558	965
fighting	17	62	88	161	180
.pyw	30	162	329	247	383
.pyx	81	162	486	247	455
routinely	38	6	159	317	79
io.bytesio	76	54	382	306	405
mpld3	73	6	278	158	450
emtpy	75	263	424	680	509
v0.12.0	46	221	151	331	435
fishing	17	291	250	236	345
2.22044605e-16j	15	211	64	364	265
nov	67	163	284	718	483
rapid	28	14	479	317	866
amd64	85	45	264	163	858
panther	85	30	480	685	858
ax.twiny()	58	44	494	391	388
capabilities	38	6	291	317	79
responsetime	43	47	231	170	164
self.event_num	60	155	240	485	162
nickd	50	145	118	734	679
pubsub	38	6	390	158	450
np.uint8	70	59	74	332	522
ensuing	98	146	273	141	509
who's	17	43	377	396	803
np.ones	1	57	41	232	21
presume	29	28	306	791	472
mannwhitneyu	72	250	140	98	347
pandas.index.indexengine.get_loc	50	267	118	580	429
helpful	68	190	465	205	343
loser	43	200	231	204	832
loses	74	117	182	548	305
drop()	92	156	78	105	971
unsuccessful	29	62	272	161	457
`"""`	32	16	420	403	768
growth	28	56	299	574	67
succinctness	82	180	341	537	219
price1	43	258	82	558	377
zbest	60	281	162	606	10
req.py	50	145	118	168	679
markers	61	136	24	212	664
manipulations	38	50	341	663	141
n=20	88	266	22	574	616
,.....,	52	4	263	364	265
np.isclose	87	42	198	113	608
os.system()	22	147	397	684	231
x-limits	58	290	494	706	388
obey	74	117	152	661	638
m.t	16	178	462	562	800
instabilities	57	151	8	654	970
0.99.1	46	221	151	681	252
0.99.3	85	276	233	681	252
series.index	92	106	317	105	699
analyses	23	14	294	94	866
analyser	77	14	365	676	210
response_time	80	110	26	390	410
transformations	99	232	128	617	908
marker=	60	155	240	603	285
colume	47	134	93	155	622
extension	55	174	29	247	564
saddle	28	14	267	710	841
column	3	110	6	155	984
color_cycle	64	161	90	543	109
auto-generated	64	161	90	543	481
colums	3	110	454	587	984
christian's	82	241	378	573	29
autopct	64	166	24	690	76
own	38	137	246	525	118
vectorisation	55	180	341	537	219
owe	68	207	371	205	767
lenght	71	281	454	680	340
shiftscheduledend	43	52	68	290	708
__builtin__	81	15	110	739	889
facetgrid.map	64	161	226	641	481
fundraiser	78	150	445	41	604
outdata	52	220	158	476	757
champ	68	207	274	205	767
outdate	80	163	254	781	920
negate	19	42	198	605	135
collumns	3	110	6	94	519
consecutively	98	146	454	534	214
keystroke	23	187	294	94	214
p873	67	181	64	24	193
unpackbits	19	294	246	231	782
postal	98	281	454	646	744
appy	3	156	65	354	125
apps	23	84	69	149	467
array2d	9	106	140	684	782
smoothing	53	151	428	720	531
continental	61	176	282	617	908
intention	10	118	116	590	999
filesize	88	283	373	549	236
arg1	48	224	58	424	8
triggered	90	187	32	716	112
scipy.optimize.leastsq()	79	137	324	566	13
.groupby()	92	156	78	105	121
liquor	78	56	254	723	897
auxiliary	38	237	397	436	864
matplot	61	136	175	158	847
rankdata	19	42	296	13	512
rigamarole	82	180	55	334	246
this-	65	291	459	236	345
wspace	58	138	494	391	299
demonstrate	27	293	403	420	579
-->	47	224	58	424	562
arr.real	16	184	8	562	122
combinations_with_replacement	0	106	461	471	881
---	29	115	306	209	36
np.char	9	214	109	512	808
20*20	71	195	213	674	744
python35\lib\	50	145	225	168	679
x-scale	37	290	166	706	614
percenta	43	47	231	71	708
\numpy\core\include	50	145	133	168	204
interpolants	53	151	238	720	396
other	74	232	159	209	36
ilustrate	28	151	185	293	762
percents	32	266	185	788	898
1.7.2	46	221	151	157	495
contacting	34	173	359	604	208
1.7.0	46	221	151	157	621
inherently	10	231	17	631	999
preform	82	50	341	497	382
result.columns	43	72	93	265	708
upwards	37	13	443	191	851
matrix_col	98	148	461	471	77
gameid	78	93	82	558	832
math.cos	0	55	201	684	231
readthedocs	73	84	27	158	854
pdata	0	237	397	436	864
intentionally	10	118	17	791	999
30k	88	160	220	80	54
1.7.x	46	221	124	202	435
masteruserid	78	262	445	204	454
dtype=uint	48	279	488	364	265
data.t	48	274	112	453	726
how=sum	43	149	447	460	612
biopython	83	206	178	197	380
foun	50	267	58	483	588
advices	68	207	465	432	343
2015-03-03t18	67	213	95	185	51
preface	65	43	377	451	98
shure	82	43	227	236	472
increase	88	266	485	574	668
exclusive	98	146	174	587	602
imagesc()	84	195	128	626	353
cytoscape	64	6	278	158	854
calendars	80	35	245	781	333
quadruple	57	89	8	788	22
size=10000	93	142	173	139	60
30m	88	142	220	196	217
\numpy\	50	145	225	168	204
**2+	11	234	4	531	99
hough	99	230	428	166	353
45.0	15	211	61	606	10
45.6	52	19	162	528	221
executemany	86	68	119	478	126
header=false	76	199	286	51	189
bins=	93	123	173	557	780
unify	74	232	37	746	36
disturb	29	28	306	209	472
basics	17	254	234	321	565
commenter	34	238	187	187	308
2015-12-15	67	260	26	2	24
persisted	22	171	108	361	248
row_name	52	72	93	556	622
commented	29	28	116	791	905
x1vals	75	106	206	471	512
99999	48	59	424	770	714
get_window_extent	6	161	90	572	373
specially	38	231	17	209	79
p_i	72	132	25	683	792
bisplev	63	275	295	715	39
p_g	51	96	262	530	358
&c	30	166	58	381	588
pyglet	84	230	123	607	427
2005-05-30	47	224	162	209	36
slsqp	79	22	324	566	13
drawables	0	161	345	44	8
flops	89	180	100	261	90
python_select	13	170	244	165	174
marching	99	230	11	166	716
groupid	78	93	82	204	832
cull	99	151	106	587	970
ax1.plot()	0	46	345	44	231
&=	10	220	198	605	135
atoms	99	288	11	646	329
set_xy	6	161	208	543	109
statsmodels	79	23	168	761	620
plaintext	86	222	329	260	519
typeerror	63	83	283	715	286
info_dict	9	237	397	436	699
ates	44	164	181	348	895
p_0	11	234	242	531	56
p_1	11	234	242	531	56
cyclical	77	151	148	631	762
verify_integrity	10	185	317	641	130
elaborate	68	118	227	432	328
stratifiedshufflesplit	79	26	354	135	816
error_bad_lines=false	76	199	322	51	189
karim	50	145	277	734	469
rinex	86	110	329	107	519
unwanted	29	263	306	680	655
curve-fitting	79	10	324	487	610
criticism	68	190	307	590	216
size()	92	156	78	31	121
replace	74	263	37	680	655
argb	84	192	123	592	427
model.fit	63	83	283	715	881
subimage	84	195	213	674	744
browse	86	254	143	110	118
plt.annotate()	64	44	208	777	683
-c*x	11	234	242	531	56
cruft	82	237	305	334	215
strike	43	200	430	265	708
scipy.interp1d	53	10	238	720	396
notin	52	148	206	471	855
females	78	250	252	479	604
standardized	79	23	185	638	11
skimage.transform.rescale	53	101	102	720	427
jmp	77	250	114	10	531
adj_close	43	172	231	265	708
reversible	98	146	148	98	999
inwards	37	31	443	780	851
recommand	38	6	80	317	564
jme	35	238	326	187	336
gnomonic	33	176	135	617	908
down-sampled	77	292	20	430	227
quartic	79	10	324	487	610
pursue	82	241	341	525	627
ascending=false	44	175	181	700	419
df.append()	92	134	158	524	130
itself	74	232	306	209	305
reword	65	118	116	590	216
shelve	86	222	426	611	820
rework	17	137	116	190	328
xth	98	281	454	796	428
example	27	137	459	15	421
august	80	163	254	723	72
a.data	9	220	85	476	757
ax.set_axis_off()	58	44	494	642	599
df1.values	44	134	260	290	827
type=	47	144	30	424	736
currency	3	93	26	558	965
caution	10	227	17	500	812
out_array	9	204	331	790	64
type1	78	131	93	463	475
groupby.groups	3	156	6	15	125
type2	78	131	82	463	475
graphlab	3	26	168	761	816
wx.button	90	69	46	572	214
unmasked	98	146	424	414	509
feature	10	26	359	604	816
cv2.pyd	30	261	486	247	368
.callback	0	55	295	44	231
array-creation	9	109	125	684	782
tarray	71	148	216	73	77
how={	43	149	447	460	612
abstraction	38	1	479	317	354
utilise	82	50	341	663	122
typed	29	204	29	790	64
minimized	79	269	324	566	643
minimizes	79	22	185	566	643
minimizer	79	22	324	566	13
constants	57	237	8	744	610
nodata	84	195	51	166	353
classmethod	9	109	331	594	699
continuos	77	232	246	525	629
fictional	27	137	459	482	421
514	12	279	488	751	175
cigarettes	78	56	223	133	272
timers	22	61	345	447	112
517	12	279	488	751	465
arounds	17	62	88	161	746
texbin	30	259	478	159	960
blind	17	43	250	236	345
agegrp	43	72	68	265	708
%m-%d	32	205	346	125	879
newtable	44	2	253	390	965
sub-frame	22	61	388	572	214
drawdown	98	56	237	614	347
delx	79	10	332	363	620
pyarray_simplenew	9	204	29	790	64
-2^31	57	89	325	141	22
uuid	78	93	430	463	376
initializations	74	232	386	122	370
seasonal_decompose	92	83	78	105	699
ax.set_xlim	58	44	494	642	388
__repr__()	9	109	331	756	782
scipy.spatial.distance.squareform	16	94	140	293	716
slate	22	84	80	190	467
xg	60	102	418	193	910
-axis	37	290	443	391	388
schools	78	150	445	479	692
mimicking	38	137	459	703	392
m's	98	146	148	98	509
inpaint	53	101	238	720	396
series	3	156	6	354	125
r^	71	186	268	738	756
r_	19	294	296	359	601
long-running	22	85	294	349	431
xr	72	102	418	129	756
maxm	98	103	206	73	77
substantially	82	180	100	537	246
pictureid	78	56	445	41	639
xp	85	276	233	685	858
rt	78	67	223	556	532
ru	76	199	286	283	413
rv	93	23	332	511	239
rp	72	186	25	174	756
threadsafe	22	61	71	716	282
rr	79	186	349	539	412
rs	47	200	430	155	423
eigsh	16	94	462	782	800
mathplotlib	61	136	278	158	450
rx	72	102	150	129	756
ry	72	102	150	129	756
rz	11	186	242	531	56
rd	43	200	252	584	423
re	29	28	246	209	472
rf	79	26	293	135	816
rg	84	195	51	381	475
ra	72	102	418	129	756
rb	76	249	286	283	413
rc	73	166	134	764	862
rm	30	170	244	165	174
rn	72	130	431	174	624
*cos	11	234	242	531	56
rh	30	115	133	381	475
ri	11	186	25	129	292
scalings	77	292	154	98	762
rk	79	10	324	566	13
foundation	38	6	69	317	450
serie2	98	148	206	558	602
oooh	35	207	274	205	767
pyscript	83	170	80	165	284
cmap.set_bad	20	119	259	49	845
linetype	60	155	24	42	664
date_col	43	72	309	265	708
inter-row	3	193	78	354	382
enormous	82	50	100	497	463
r0	72	130	431	653	624
exposing	9	109	29	594	386
sparseefficiencywarning	16	94	333	455	788
r3	52	130	431	653	624
r=	60	194	269	606	10
recursed	75	99	421	601	843
shipped	83	128	211	202	380
speedy	82	241	274	497	463
tempting	9	109	29	594	782
arccos	57	89	201	664	743
r-	60	155	240	495	285
allocators	22	283	153	358	282
r*	11	234	242	531	56
appreciable	68	180	465	537	661
polyhedron	61	176	339	626	908
data.astype	70	59	74	332	522
channels	84	195	51	592	353
sparse_matrix	1	57	333	455	788
figimage	64	243	248	248	449
clarity	27	137	116	525	328
loginid	78	150	430	390	604
one-level	74	232	182	354	526
basestring	70	106	461	675	979
basketball	28	150	132	479	604
smallarr	9	220	158	476	757
automagically	64	171	397	732	370
perturbations	28	151	106	710	762
df.reindex_axis	44	134	260	700	827
hypothetical	27	137	459	15	421
x_	72	186	25	683	306
fontext	52	0	180	215	288
axhline	58	44	494	777	388
summarymeansarray	3	110	454	680	428
channel1	12	211	162	528	888
names=true	76	54	382	51	698
matplotlib.plot	51	136	195	272	12
defaulted	29	117	152	791	638
_the	34	173	307	97	216
crawl	22	134	388	110	736
np.array_equal	1	57	198	232	714
showed	29	28	306	122	508
elegant	82	241	378	573	29
approximations	79	10	324	487	610
tree	99	288	11	293	329
h's	35	238	187	187	308
penalization	79	10	324	744	970
project	23	1	377	396	275
slicers	92	104	23	733	154
skimmed	65	291	258	407	887
python34	30	261	486	797	368
arrrays	40	50	10	691	678
treeview	90	69	46	380	536
dot-product	16	178	154	150	651
205.53069608827314596	52	19	263	424	881
test_out	3	297	243	155	984
one-pass	82	180	341	497	219
closeprice	98	258	65	155	602
runner	78	150	445	41	984
libfreetype6	13	170	244	165	174
classification_report	27	137	140	15	421
runned	29	171	306	209	905
first-order	79	10	324	487	610
recommender	28	26	354	135	816
scipy.spatial.distance.pdist	53	101	185	293	716
argmax()	19	42	78	13	512
16:53	67	213	95	185	51
16:52	12	110	162	796	428
2014-12-27	67	260	269	530	212
2014-12-22	80	258	145	723	645
recommended	38	241	80	500	215
instructs	86	222	152	58	638
amusing	82	241	378	573	669
doors	22	13	294	429	214
test_index	52	0	68	290	827
y_arr	75	106	206	695	719
assertequal	0	106	317	457	231
grips	17	62	88	161	803
math.pi	11	234	201	664	56
sudoers	30	162	478	247	344
wells	86	110	329	110	519
y	72	102	418	129	910
dopri5	64	22	226	566	13
entry	98	110	454	746	868
minpack	55	22	125	566	13
df1.c	98	93	82	558	965
dummy	27	137	168	15	421
jupyter	90	15	189	226	818
gridline	37	290	24	780	76
axis3d.py	30	162	478	483	927
.convert	84	219	102	401	427
x8	72	4	431	516	624
spend	17	62	250	39	180
|b1	11	105	4	71	56
3-column	3	110	6	354	519
rebuild	83	171	80	190	629
connect()	6	46	140	44	112
label=r	60	155	240	495	285
came	29	62	88	458	417
incorporate	74	137	37	525	472
scipy.sparse.diags	16	94	333	455	788
__str__	9	109	331	55	386
rotation=30	58	44	166	418	890
x2	72	4	431	516	624
participate	10	173	359	525	208
invert_yaxis	68	43	227	432	571
lessons	28	14	267	321	275
sliceable	75	106	421	594	903
layout	64	184	386	691	370
11111	12	115	223	133	737
output_file	76	144	170	283	736
numpy.cumsum()	19	214	125	31	512
numpy.linspace	93	123	193	291	361
x4	72	4	431	516	624
tzinfo	80	35	86	781	920
0.7.4.1	85	206	151	202	380
pylab	81	15	189	226	889
.ttf	73	122	134	350	916
honda	78	56	445	479	604
foremost	23	1	356	370	118
pocket	17	13	377	396	275
\scripts	50	145	486	138	204
2015-01-09	80	78	254	796	272
2015-01-05	98	93	82	796	377
2015-01-02	67	200	231	550	24
2015-01-01	67	260	12	2	24
2013-06-01	80	260	26	2	272
increasing	77	266	97	574	668
dipping	33	176	282	617	908
arclength	79	10	324	487	762
nb_means	72	102	268	129	756
roman's	35	238	187	187	308
rolling_max	92	193	237	614	121
mercator	33	176	135	617	908
isreal	19	57	198	232	714
memmory	23	68	294	595	161
kludgy	82	241	378	334	29
padj	43	200	231	71	255
pads	40	263	154	680	981
settable	9	109	331	594	386
cloning	40	171	386	604	359
pd.qcut	87	134	493	76	827
resigned	17	62	88	236	345
indexable	75	106	461	200	650
kludge	82	241	395	334	327
df_addresses	43	2	260	700	987
vmin=0	20	119	320	193	845
rings	99	288	282	315	138
4hr	77	29	299	77	931
propagates	3	146	317	98	509
pressures	33	176	135	623	298
book's	27	173	27	482	142
data.table	92	156	78	703	392
propagated	29	171	306	98	673
glasgow	78	200	132	463	6
boundry	61	195	175	626	353
interrupting	90	187	108	361	248
strlibpath	70	204	30	790	64
25041	98	79	454	796	397
corrcoef	16	94	121	782	800
reconstitute	74	50	37	691	122
debt	28	14	267	533	841
pad=	58	138	495	651	299
logit	79	23	332	638	620
in-memory	86	222	426	662	820
numpty	65	207	274	205	345
-abhi	74	232	306	209	36
country	78	93	445	463	604
edgar	76	199	30	283	204
store.get_storer	43	39	1	285	502
planned	3	227	124	604	125
oeuhrzeit	43	47	309	727	708
logic	10	137	17	209	999
login	23	84	376	41	67
argue	10	241	395	500	351
dot1	87	55	201	642	881
numpy.transpose	1	294	296	453	280
improvment	65	291	258	407	944
waaay	82	180	55	337	89
trickiest	82	241	341	334	669
leads	29	231	306	173	568
csvstat	22	197	497	534	68
iterable	75	106	421	480	699
dicom	84	192	128	344	293
upside-down	37	31	175	22	134
output.png	58	243	452	16	721
libblas	96	170	408	90	729
phylo	83	206	178	197	854
privilege	34	190	3	702	915
__doc__	9	109	331	594	386
molly's	29	137	187	525	308
graphical	90	125	278	158	450
recomend	38	6	80	110	118
os-level	55	85	69	349	431
my_series	92	39	389	105	655
worker	22	85	71	349	431
re-open	90	187	3	702	915
light-weight	38	1	291	317	651
maxindex	79	275	140	641	780
worked	35	207	274	205	767
mis-understanding	10	241	227	500	999
contemplated	10	241	17	500	874
-loops	19	294	497	139	219
in-ram	22	50	100	128	246
euclidean	99	288	185	293	716
kassies	35	207	409	187	839
pandas's	92	193	78	105	971
ridiculously	82	241	100	497	463
spleval	53	101	238	720	396
bio	81	88	110	739	584
toolkit	38	6	278	158	450
long_max	57	89	325	86	22
elicit	34	190	307	590	216
upscale	53	195	339	166	353
anticipating	17	62	88	791	874
violin	51	136	24	272	847
smoothest	77	151	106	631	762
damaged	29	162	80	247	344
p.get_height()	11	194	4	606	743
severity	51	250	219	22	995
tslib.c	50	267	118	580	679
rownum	43	72	383	616	477
european	80	116	299	107	444
theblackcat	65	118	116	590	472
tz=	67	285	323	2	24
np.ndindex	19	12	455	480	806
symmetrical	71	31	443	738	95
simulates	28	14	267	710	841
lucas	28	14	267	710	841
simulated	28	14	267	710	841
quantitative	28	151	106	631	970
-sc	35	207	409	407	887
sleeps	22	187	108	599	248
throttling	55	30	376	184	467
rotated	33	31	443	617	908
numpy.__version__	81	5	110	199	443
latex's	73	6	390	131	628
rotates	33	176	443	617	908
yvals	60	102	418	129	910
previous	29	171	306	190	214
magically	29	28	246	209	629
new_dict	52	12	461	471	260
old-fashioned	82	241	378	573	29
scalable	82	241	100	497	463
disparity	71	195	10	519	684
innocent	27	231	395	334	327
major_formatter	58	44	494	341	184
bnd	77	292	20	430	547
elevation	33	176	135	623	293
quirk	29	231	395	335	568
textwrap	32	16	420	403	76
groupbyerror	63	83	283	715	39
2007-11-22	67	213	95	185	51
desire	27	137	246	122	508
specif	3	99	37	601	979
ax2.set_ylim	60	224	173	424	221
seek	86	54	382	260	405
matplotlib.animate	61	6	278	158	450
obj.attr	9	109	331	594	699
assert_frame_equal	92	39	198	457	905
no-break	32	16	190	477	768
sebastian	35	238	326	187	336
str.split()	92	156	109	512	808
unelegant	82	241	378	573	29
creek	82	241	378	458	327
zero-rank	75	109	421	594	681
hdfstores	23	50	426	611	79
library's	38	1	397	317	564
g_l	11	234	242	531	56
+100	60	194	269	686	212
g_h	9	204	331	594	64
re-install	13	128	5	104	485
o.head()	52	19	206	284	855
creep	28	151	106	654	970
1000.0	11	234	4	664	743
subclass	9	109	331	594	386
polluted	10	237	106	631	864
contributing	34	173	234	321	118
exposition	65	118	116	590	345
pollutes	81	237	110	739	864
__ne__	9	109	331	55	386
substitutes	32	99	152	601	638
scipy.ndimage.filters	53	101	125	166	547
a.argsort()	52	0	160	284	855
stefan	35	207	409	20	336
g_1	11	234	4	215	221
substituted	74	232	306	680	509
defensive	10	43	395	500	215
losing	74	50	182	548	526
pandas.crosstab	87	47	68	290	827
imagemagick's	86	125	248	147	405
numpy.std	79	193	121	10	347
soa	32	224	30	177	768
raised	63	83	389	715	39
x.copy()	9	220	158	476	757
short-circuit	19	180	455	605	135
sof	34	62	247	97	216
statsmodel	79	23	168	761	816
som	23	14	128	623	293
sol	72	186	25	284	306
well-suited	10	241	291	321	79
son	72	200	162	550	888
thankful	68	207	465	451	343
sor	28	10	324	214	610
raises	63	83	389	715	39
wrap	38	214	29	790	382
sox	38	1	291	317	628
''])`	52	105	74	471	764
waits	22	187	108	624	248
support	38	6	152	317	305
constantly	22	171	388	534	526
replace_every_nth	52	19	112	284	855
authorized	23	84	294	595	467
resulted	29	28	306	791	473
rcpp	38	62	80	161	564
on-line	34	254	234	302	565
launching	83	15	189	540	818
.strftime	43	205	309	125	879
rotation=	58	155	265	651	890
oneliner	82	241	378	573	29
non-nan	98	146	424	414	509
re-import	22	61	397	349	807
read_excel	86	91	367	107	86
24hr	43	130	82	174	377
figsize=	60	139	18	418	162
w.sum	16	178	462	562	800
handily	40	50	270	231	122
ndarray.flatten()	75	294	10	231	782
inside	74	232	397	436	36
matplotlib.org	27	254	27	302	240
devices	23	14	294	94	257
start_date	80	258	26	727	506
enumerate()	19	12	455	480	806
df.a.values	52	0	180	290	855
accelerate	55	174	408	90	651
151	12	279	488	111	132
150	12	160	220	528	106
153	12	279	488	751	465
152	12	279	488	111	465
155	12	279	488	111	465
154	12	267	488	111	132
157	12	267	488	111	132
156	12	267	488	111	132
159	12	256	488	751	132
158	12	279	488	111	465
filename.png	73	144	248	16	721
textbook	28	254	234	179	565
''	47	105	487	177	764
movingaverage	98	148	317	141	221
repeat()	19	294	296	231	512
'"	63	83	383	616	477
15+	88	160	73	80	982
')	47	105	170	460	255
scipy.optimize.brentq	79	214	140	684	231
pre-made	38	6	80	197	564
jenkins	83	84	27	540	467
df1.date	44	35	309	727	852
superfluous	29	263	434	468	655
futurewarning	63	39	389	733	154
15s	88	197	447	460	612
ncols	1	229	112	677	442
models	28	26	354	135	816
2d-graph	50	267	118	734	679
15}	43	67	256	145	764
'`	32	105	93	177	475
cleaver	82	241	378	573	29
15k	88	160	220	80	54
2**31	57	89	325	86	22
15m	80	56	73	77	931
15l	48	274	112	649	159
mdates.drange	29	231	389	335	198
glass	90	69	32	624	536
typically	74	232	100	209	36
']	43	47	231	265	708
contacts	78	250	114	182	423
135x90	33	102	135	617	908
euroscipy	34	254	35	302	565
newarr	75	294	206	231	981
indexing=	60	155	473	330	884
beamer	73	125	248	276	304
breadth	99	288	106	525	616
horner's	79	10	324	487	13
activated	90	15	376	184	467
integration	79	10	324	416	610
activates	90	187	108	540	248
midst	23	43	17	317	866
writer.save()	22	171	275	361	473
millisecond	80	29	73	77	931
hold	74	232	386	691	629
rambling	17	43	395	590	812
yrange	60	194	63	557	221
stk_price	80	35	26	727	410
reverting	46	221	151	202	284
recurrence	79	10	324	214	610
ndtype	70	106	421	332	681
x08	32	224	487	177	622
programmatically	64	232	37	110	370
.set_major_formatter	58	205	346	341	599
lru	82	13	341	525	246
re.sub()	75	106	275	601	808
86400	80	29	73	77	931
all-zero	71	146	127	680	509
tex	73	166	134	131	862
leave	29	263	246	190	655
-value	72	281	114	129	358
settle	74	232	246	209	36
speculation	17	180	395	236	812
pd.rolling_max	43	47	68	460	708
succint	82	241	378	573	29
2090	67	213	95	185	51
siga	0	106	295	471	881
occurrence	98	146	454	41	639
sigh	65	291	258	236	887
2092	67	213	95	185	51
xandy	52	19	263	284	622
sign	57	89	8	661	898
lang=	30	144	452	165	383
on_pick	6	46	345	44	112
anaconda	83	128	5	461	637
sincos	79	10	125	744	610
cv_8uc1	84	219	102	532	427
zorders	37	31	467	780	851
))])	1	201	180	50	371
melt	92	156	78	763	971
logfile.txt	90	187	108	361	214
lazily	9	106	397	691	68
i-loop	22	187	108	599	248
mergesort	19	175	270	524	718
s10	70	105	74	53	764
understanding	10	43	227	432	999
sig1	11	55	4	232	726
libblas.so.3gf	30	259	94	381	960
%path%	30	170	244	165	344
rolling_min	92	193	237	614	121
frame.index	75	220	158	476	979
example's	71	137	459	15	421
))]`	52	0	180	215	371
~100000	88	160	220	80	54
brilliant	35	207	274	205	767
ineffective	82	241	341	497	463
example2	99	288	454	646	138
tasks	23	85	294	317	866
.thanks	65	291	371	205	767
signifcant	22	50	485	574	246
overarching	37	290	467	780	328
logically	75	146	317	154	602
fake	27	293	403	420	579
flagging	34	82	307	590	551
tuple-unpacking	75	106	461	776	903
ifftn	77	292	20	430	547
.flatten()	1	57	296	232	280
crammed	37	290	467	706	851
angry	17	190	307	39	345
only	74	232	306	209	36
hilbert	79	292	140	150	942
scope	22	237	397	436	864
theoretical	79	151	106	631	531
special_tab	6	46	345	44	112
v1.5.0	46	221	151	681	380
numbercalls	43	72	231	265	708
ignorant	17	43	99	396	803
data.plot()	51	136	195	272	12
8min	67	255	223	550	888
labels=	58	44	452	495	12
matplotlb	61	136	175	626	854
x.reshape	1	57	41	677	280
pretend	27	137	459	15	421
smth	47	137	459	573	29
use-case	82	241	291	525	999
fibonacci	75	137	459	756	219
file.readlines	76	54	382	260	736
awesome	35	207	274	205	767
plotgraph()	22	46	345	599	356
239	12	279	488	751	465
allowed	29	28	306	209	999
234	12	256	488	145	432
235	12	267	488	111	132
236	12	279	488	751	465
237	12	279	319	111	465
230	12	279	488	751	465
231	12	267	58	111	132
232	12	279	488	528	175
233	12	279	488	751	465
zoomed-in	37	31	467	207	421
monitoring	23	85	294	94	257
dtype=int	48	59	41	332	21
s=	60	155	240	495	910
numpy.loadtxt()	86	54	382	260	698
s3	86	84	119	611	34
s2	72	130	431	174	624
x_axis	37	290	166	706	76
s0	72	106	206	305	756
s6	70	105	74	53	255
-0600	67	213	95	2	51
s4	70	105	74	53	764
s*	47	51	487	151	244
img_b	98	146	454	646	744
barnes-hut	28	14	267	710	841
ylab	58	44	90	418	890
s_	19	294	160	359	601
protobuf	86	222	426	691	405
hog	84	230	354	135	271
")))`	76	199	487	177	567
rmax	72	186	242	129	56
win8	85	276	42	685	858
client's	23	84	27	184	127
23x	88	180	55	337	89
python_scripts	81	162	110	247	344
-this	29	13	143	39	589
revealed	34	62	234	302	874
sz	1	178	112	305	726
sy	72	132	25	532	756
sx	72	186	25	532	756
natural	82	241	378	573	29
correlate	77	101	148	98	347
1e-05	57	194	269	559	907
ss	80	35	245	125	742
sr	77	292	20	532	363
1e-08	57	89	495	559	907
sp	81	88	110	739	183
sw	30	259	317	770	510
ordinarily	19	42	246	500	512
su	47	115	244	165	174
st	47	200	430	133	588
subselection	3	110	6	155	984
opinionated	34	190	307	321	994
si	28	266	106	425	970
sh	30	259	244	165	960
so	29	28	246	209	472
sn	72	130	25	174	792
sm	47	132	349	539	756
sl	47	206	178	120	588
sc	47	224	295	424	881
sb	47	186	25	381	510
sa	47	224	58	174	228
pollution	61	237	397	436	864
sf	93	23	63	511	239
se	34	173	430	97	999
sd	47	23	332	638	11
innocuous	10	231	389	716	568
coodinates	33	281	135	646	744
liblapack.so.3gf	96	259	94	553	960
flips	40	13	270	191	363
thread-local	9	109	397	436	807
win7	85	276	42	685	858
experiments	23	14	294	94	625
counterclockwise	33	176	443	191	725
omitting	74	263	306	468	655
closing_price	98	78	424	155	509
tendency	77	266	148	574	347
pixmap	90	69	46	572	384
avid	17	43	377	396	275
overhaul	46	1	359	604	435
scipy.sparse.csr.csr_matrix	71	64	333	455	788
interp1	53	10	238	720	396
interp3	53	102	238	720	396
torn	17	13	143	39	589
numpy.hstack()	19	294	296	278	470
suspicion	29	120	116	791	874
constitutes	98	281	454	746	667
nympy	29	28	272	161	457
isnan()	75	106	198	605	135
renaming	3	156	182	354	526
chaining	10	104	158	200	135
thereby	74	232	306	548	214
nation	28	250	430	479	604
exon	52	72	68	289	199
sourcedata	3	297	65	534	68
shoudl	65	171	116	97	915
arr_f	87	234	4	673	743
suffixed	3	110	243	390	984
image_file_large_address_aware	83	170	178	197	455
establishing	99	176	282	617	908
acttemphi	52	0	214	485	288
interpn	53	101	238	720	396
cropping	84	230	428	166	353
suffixes	44	2	253	33	176
square	71	288	443	738	95
arbitrariness	10	50	106	500	246
dropna	92	156	424	414	691
lgrank	12	163	284	723	897
np.absolute	11	234	4	215	99
neighbourhood	99	288	127	356	744
squary	77	28	306	122	508
np.astype	19	294	201	756	782
mssql+	76	68	119	478	454
mt19937	55	109	193	628	507
minimums	98	103	97	141	744
squared	79	23	185	638	11
abide	10	151	106	631	970
downhill	79	22	324	566	13
investigation	29	62	143	312	874
0.634	57	89	4	770	743
losers	80	56	148	41	347
squares	79	23	332	487	11
unifying	38	1	159	317	79
namelist	0	224	30	424	383
ctrl+c	90	187	108	599	248
bookid	44	93	82	558	965
ctrl+k	27	125	305	403	188
overheads	55	180	100	537	487
reshuffle	75	146	10	587	981
recordings	77	29	365	94	67
ctrl+s	90	187	108	624	560
np.column_stack	1	294	296	278	470
emulation	38	109	390	732	389
secondary_y=true	51	44	195	706	12
bumpy	65	206	80	202	380
game_id	78	258	445	41	984
epilib	81	88	110	739	183
add_subplot()	6	139	90	324	481
expand.grid()	38	214	291	703	392
iterative	82	180	341	497	219
ocaml	38	1	426	317	866
18:15	67	260	95	185	51
undesirable	82	231	395	335	463
np.recarray	75	294	461	776	748
numpy.log	0	55	201	684	231
8500	12	281	162	528	106
dictionary-like	9	99	47	663	843
isnull	92	126	424	414	971
set_label()	64	161	208	543	481
open	86	187	329	110	383
second-level	80	29	299	77	67
ripping	17	13	250	39	180
city	78	150	445	479	604
operable	90	187	108	540	383
9.74401	15	157	64	296	837
bite	17	13	143	500	215
brevity	27	137	459	15	372
size=100	60	123	173	50	736
stuffed	29	171	80	500	215
definitly	34	28	35	791	999
~400	88	160	220	80	54
bits	57	100	325	86	22
cite	34	254	234	302	565
fma	96	174	408	90	729
slashes	32	282	190	477	5
buy-and-hold	98	56	148	77	347
array_1d	71	64	268	73	77
x.std()	87	55	493	76	593
fooled	29	231	143	791	874
ivanov	35	238	187	187	308
index.html	30	144	27	595	127
impractical	82	50	100	497	463
favors	10	43	227	200	472
typography	28	1	377	321	628
import_array()	9	204	29	790	64
blabla	51	24	195	495	12
param2	72	130	431	174	624
param1	72	134	461	174	591
param=	15	157	133	117	160
damned	17	241	395	236	345
seaborn.set_style	64	44	452	495	599
addressing	10	118	17	97	526
m.pcolor	60	176	240	193	908
$#$	52	52	180	290	437
visitor_id	78	164	181	204	832
argument	64	185	226	641	676
buried	10	118	143	634	589
horsepower	10	263	6	631	999
py27-scipy	13	170	50	104	174
moarningsun's	82	238	187	337	308
aproach	68	137	465	432	571
acushner	35	238	326	187	336
downwards	37	31	443	191	851
get_loc_level	9	109	383	616	477
object_id	44	93	82	558	965
index=false	76	199	322	217	189
masse	70	99	245	601	141
coincide	37	31	443	780	851
imgarr	63	219	102	401	427
jit'd	55	180	422	337	89
ironically	29	62	274	791	874
molecule	28	14	267	710	841
psfrag	73	125	248	91	304
py_buildvalue	0	224	295	424	231
indatuma	43	273	309	727	24
inserted	74	110	306	155	673
dataframe.query	19	214	78	105	512
serie	80	56	26	77	410
average	77	56	148	98	347
drive	23	84	376	184	467
forth-coming	28	29	299	94	897
xetex	73	166	134	91	862
data.time	43	72	231	265	708
21:40	67	163	284	718	483
laws	28	10	324	744	610
itemid	78	93	243	41	984
v_t	11	234	242	129	56
np.intc	70	100	74	332	522
olhc	80	29	299	77	466
unwrapping	74	232	143	548	141
merit	34	190	307	590	328
subprocess	22	85	71	147	807
hopes	34	190	307	97	216
bright	20	31	259	757	786
stackplot	25	191	24	272	109
np.intp	70	59	74	332	522
scarce	10	43	234	321	79
transparent=true	73	243	18	16	721
xlim	58	44	494	341	388
msvc	96	45	5	650	634
rephrase	65	118	116	590	216
matplotlib-generated	61	136	175	22	847
trans_id	47	200	93	556	475
normalizations	28	227	106	98	970
0.16.1	46	221	151	331	621
assistant	23	84	69	149	275
between	74	232	185	746	868
freezing	22	187	108	361	248
straightforwardly	28	137	291	40	382
clang	96	170	94	650	30
color.py	81	162	27	247	854
complex-valued	16	94	462	782	547
np.int8	70	59	74	332	522
originals	3	146	19	548	757
resource	34	254	234	321	565
mavericks	85	276	233	198	858
200k+	88	160	220	80	54
parasitic	61	31	175	780	851
worried	10	43	395	500	803
admins	34	190	80	590	812
worries	65	291	258	702	345
coerce=true	76	39	309	727	934
pmap()	22	85	397	349	807
np.asfortranarray	48	57	41	453	280
df.pivot	44	164	181	348	895
datatables	23	84	294	370	127
1-12	80	56	445	796	984
)`]	60	57	180	724	371
anyways	65	28	246	209	472
%%time	88	147	189	226	818
constraints	79	10	324	214	13
man1	50	259	277	303	469
testset	3	146	6	587	953
inequalities	38	10	8	744	610
compounds	28	297	454	425	868
uninstaller	83	206	178	197	368
sites	34	254	247	321	746
kj-	1	178	473	743	884
)``	87	39	1	285	502
_after_	22	263	388	190	214
uninstalled	13	128	211	104	485
correclty	61	28	175	626	472
*x0*	11	194	4	664	743
smooths	53	288	339	720	396
etiologic	78	56	445	520	832
concentrate	10	13	106	631	589
serialization	86	222	426	611	820
many	29	232	159	209	36
_x	44	2	253	33	176
)`"	47	224	112	677	385
3dplot	61	136	175	626	847
)`)	1	57	173	50	371
np.cumprod	1	57	41	232	726
yearly	80	56	299	723	897
minima	99	103	324	293	744
autoencoder	28	26	354	135	816
rolling_	92	214	125	105	382
hurts	10	43	395	334	812
690	50	267	118	168	679
read_table	76	54	322	51	698
dry_bulb_temperature	43	72	93	265	260
3000	88	160	220	80	106
ismember	19	214	125	703	392
cp34	13	261	348	797	368
alglib	55	1	29	317	564
considers	74	117	152	58	638
seeding	93	123	193	628	507
caring	10	227	17	631	936
concede	17	190	377	590	246
a.sum	87	57	41	232	726
damping	79	292	20	430	942
prototype	38	137	29	317	421
uncommented	81	263	306	122	889
rectangle's	6	161	208	572	373
obj.nonzero()	75	64	10	231	650
enable	64	6	294	716	370
gist	27	293	403	420	421
instantiated	9	109	386	63	914
300k	88	160	220	80	54
to_dict()	92	156	78	183	322
diffuse	77	14	114	429	563
instantiates	9	69	46	380	384
fmin_l_bfgs_b	79	22	324	566	13
sit	22	13	143	28	589
non-issue	22	13	100	39	463
polls	22	144	58	361	383
colorbar	37	290	320	391	388
subsample	88	142	148	574	616
policies	34	227	69	461	905
mono	84	192	123	676	946
17_d	43	52	93	177	764
c-type	9	204	29	790	64
ive	29	62	272	161	457
qutip	38	10	324	744	610
2011-11-03	67	213	95	2	24
ctrl	90	15	108	540	383
qvboxlayout	6	69	46	380	384
ivo	68	190	371	321	328
ep_mean	43	47	231	71	708
scipy.special.erf	79	10	324	416	239
qtdesigner	90	69	46	380	384
linearsegmentedcolormaps	20	119	259	757	762
yidx	52	148	273	284	458
ivy	96	30	480	785	729
trival	75	50	10	691	122
binary	86	222	329	260	405
numpy.core._dotblas	96	174	408	247	411
featureextractor.py	30	162	478	247	344
wiring	68	28	227	432	571
)]);	11	0	180	215	371
spot-on	35	207	371	205	767
wrappers	38	1	29	317	389
trivially	74	232	8	209	382
boosted	28	180	100	429	353
structurally	3	297	6	646	519
figure's	6	243	18	572	449
streamlining	68	62	341	537	219
x.lower()	87	47	493	76	593
extern	81	204	29	790	64
lib-scriptpackages	50	259	277	303	469
barbey	35	291	258	407	887
awesomeness	34	173	116	236	142
customized	64	232	246	525	370
clobber	81	237	397	436	864
+50	34	190	250	97	915
)])`	1	105	303	50	371
1cm	33	281	443	617	449
df2.apply	87	164	181	700	827
nosql	23	68	119	611	126
resp	47	110	430	155	532
log2foldchange	43	200	231	71	255
rest	74	263	306	209	655
safeguards	3	227	182	587	655
unaccepted	65	291	258	407	887
imresize	84	101	102	166	427
200m	88	283	373	549	236
([	47	19	303	50	640
fvm	28	14	17	227	632
ec2-user	50	259	277	303	469
bfill	92	149	424	414	691
31x31	71	195	213	674	95
ax.get_xlim()	58	44	249	341	184
(:	1	57	112	305	981
(;	32	263	420	468	768
(8	48	123	173	50	60
aspects	38	1	159	321	79
around	29	13	88	161	746
aroung	77	283	373	574	668
(=	74	232	37	746	868
res2	75	134	206	781	920
darr	9	106	295	232	881
res1	3	285	65	781	920
repaint	90	69	46	380	112
dark	20	119	259	757	786
((	1	57	180	50	371
(/	30	259	277	381	318
breakage	10	231	17	173	568
dare	82	190	378	573	812
intel	96	30	480	785	729
pre-sorted	75	50	182	587	509
hotel	78	150	132	463	604
exploit	82	50	341	537	305
inter	98	130	185	746	868
6.66	15	211	162	364	265
plt.grid	58	44	452	642	162
conditional	3	232	317	354	382
lena	84	219	102	401	427
supplementary	3	297	6	587	36
_1	78	93	243	558	965
pickles	86	222	426	611	820
pickler	38	109	397	317	564
jstart	52	0	273	284	19
may_b	1	57	112	232	714
may_a	1	57	112	232	714
subpart	40	104	158	733	650
origin=	20	268	320	397	845
memories	17	13	250	39	874
make.py	46	68	275	183	127
4413	65	118	258	124	887
4410	60	52	180	215	437
user_time	80	163	254	723	72
refer	74	232	37	746	638
biased	28	23	332	511	531
transformers	28	26	354	135	816
polynomials	79	10	324	487	610
landcover	99	195	135	746	563
y_col	43	72	93	265	708
lens	99	288	11	315	138
origins	33	31	159	780	851
pyarray	38	204	29	790	64
interfering	90	187	108	361	248
valuearray	71	64	268	519	981
0.035	15	194	269	606	212
slighty	27	266	55	337	668
timeit.timer	87	55	201	50	593
matplotlib.axes.axes	6	161	90	543	386
apologize	65	118	307	451	98
dawned	17	62	250	39	345
her	34	115	35	233	142
zorder=10	60	155	240	603	285
hex	32	16	51	592	922
hey	35	207	371	205	767
emacs	90	15	189	540	818
2-element	75	106	421	73	684
slopes	24	23	97	487	620
heh	65	291	258	236	345
hej	29	28	306	209	36
verbatim	27	293	27	420	905
numpy.recarray	9	294	386	492	782
n_samples	71	274	349	539	412
r-value	79	23	332	638	11
beginners	17	190	377	451	98
survived	78	200	252	463	604
convolving	77	292	428	430	547
unreliable	10	231	395	335	215
utf-16	76	16	190	477	261
matplotlib-user	34	173	35	97	142
october	80	163	284	718	72
mathplotlib's	34	173	234	97	142
robustness	28	151	106	525	328
impute	80	193	424	414	967
page_verified	52	19	263	364	265
downcast	92	185	226	105	934
quit()	90	187	108	599	248
read_html	92	68	275	183	322
migrate	34	190	377	396	118
sp.stats.sem	47	224	452	424	881
dpi=300	58	243	18	16	721
fumbling	17	62	88	161	180
ameliorate	99	151	339	646	762
mdp	83	6	278	158	450
allocator	55	174	29	790	282
angelica	43	200	93	145	475
tradeoff	82	180	106	537	246
tight	58	243	18	16	721
10-50	98	142	162	141	60
incomprehensible	17	43	395	732	327
2007	80	163	284	62	483
representable	57	89	325	86	22
0:20	52	104	23	733	92
atemp	52	19	112	284	855
series.add	92	197	78	105	121
factorplot	51	136	195	272	847
itertools.chain	19	12	455	480	806
partitioned	71	283	100	94	953
fill_value	92	185	424	414	203
mask	75	146	198	605	602
mash	74	232	37	190	953
mass	77	281	114	511	756
parallelism	55	174	69	349	431
bar()	51	136	195	272	780
parallelise	55	85	341	537	219
mnx	52	220	158	476	757
datetimesy	44	2	253	427	895
deletechars=	76	185	487	415	413
mnp	81	88	367	703	392
crept	29	231	389	791	874
bothers	65	241	395	334	472
inplace	92	185	158	105	130
attrs	76	199	322	283	444
restated	34	118	116	590	216
suspected	65	291	258	407	874
debuggers	10	43	17	500	215
tz	92	285	86	781	920
tx	95	102	25	129	210
ty	35	207	371	205	767
tv	78	150	252	479	604
np.diag	1	57	41	562	726
tu	72	186	25	129	773
tr	47	224	30	16	736
ts	80	35	26	727	852
tp	72	130	25	174	624
tn	11	234	242	531	56
to	74	232	246	209	36
tl	27	137	390	703	392
tm	47	30	480	149	741
tk	90	38	46	635	810
asterisks	32	16	420	482	233
ti	72	186	25	129	756
tf	47	275	25	139	881
tg	72	102	25	174	756
td	32	93	26	155	965
te	47	115	459	15	421
homepage	83	254	234	302	565
tc	47	200	430	204	423
numcols	71	274	268	519	981
ta	72	275	25	174	292
returned	74	106	386	122	673
qtconsole	90	15	189	226	818
attr2	43	72	223	4	622
.get	92	12	461	76	260
attr1	98	110	223	155	965
scipy.odeint	79	10	324	744	610
t=	93	123	173	50	630
hooking	22	85	294	349	431
cable	22	283	143	39	118
althought	29	206	80	209	36
t4	78	200	82	204	832
t2	72	130	431	174	624
joined	3	110	6	587	673
helloworld	32	110	30	283	754
ax.xaxis.set_major_locator	58	44	166	341	184
large	88	160	100	497	463
pesky	29	263	420	680	655
millimeters	37	31	443	207	859
joiner	31	51	439	424	641
interpretor	90	15	189	540	383
urandom	81	84	69	184	960
modal	90	187	108	624	248
timescales	77	29	299	94	340
crystallography	28	14	267	710	841
currind	98	132	273	73	77
mouse-click	90	69	32	624	536
gunicorn	83	84	376	184	467
navigationtoolbar2tkagg	6	69	46	380	384
df.at	43	72	68	265	708
xor	75	214	198	113	135
to_hdf	92	68	379	217	824
tools.py	50	145	118	483	679
df.info()``	27	293	202	285	502
scientists	38	1	69	317	866
set's	77	151	106	631	668
escaping	32	282	190	403	5
dx_dv	0	147	125	684	231
.dmg	13	261	5	797	368
file1.txt	76	199	30	283	754
set_text	6	161	90	21	481
pd.timeseries	92	35	245	727	852
legend	37	136	24	391	76
pycuda	55	174	408	90	651
matplotlib.backends.backend_wxagg	81	88	110	739	584
ublas	55	174	408	90	651
~idx	52	52	68	290	622
some_function	0	204	295	790	64
to_string	92	185	275	183	322
chunk-by-chunk	86	50	426	611	820
emulator	22	187	108	540	383
tesseract	84	230	128	607	353
weirder	29	231	395	335	473
get_dummies	92	156	168	763	971
affine	99	230	428	166	908
acheive	82	137	378	573	29
mathtext	73	166	134	131	862
pythagorean	33	288	185	487	725
pulls	74	117	27	58	161
gosh	65	291	258	236	887
esri	83	84	178	595	257
labelbinarizer	19	214	246	231	512
teamid	43	200	82	204	832
6	12	279	162	528	465
batching	88	50	100	94	953
pandas-esque	82	241	378	573	29
under-	79	10	324	214	970
ccy1	43	72	68	46	708
ccy2	43	93	82	46	708
end_date	80	258	26	558	506
array**	71	274	268	305	60
c_n	11	234	242	531	56
pandas.io.sql	86	68	119	478	126
160000	88	142	220	528	106
c_x	43	200	231	145	708
in_progress	78	163	284	582	272
sizing	37	290	467	207	449
plt.setp	58	44	494	418	890
17:00	67	260	12	372	958
17:06	67	213	95	185	51
builtin_function_or_method	63	83	383	616	286
17:04	67	213	95	185	51
1:10	52	19	188	284	776
b.index	44	134	181	700	459
1:15	98	148	162	655	221
atn	72	275	25	129	292
a.__add__	1	57	295	562	726
ndata	19	184	100	139	463
randomizing	88	50	100	534	953
prompt	90	15	189	540	818
scan	74	50	497	534	68
suggestions	68	207	465	432	343
sm2	70	89	74	332	979
unbiased	79	23	332	786	484
col_2	44	93	171	558	965
col_3	44	93	171	558	965
col_1	44	93	171	558	965
11:05	67	213	95	185	51
scat	60	155	240	418	910
.diagonal	1	57	41	232	726
xxxx	63	5	110	553	584
axis1	6	102	418	129	910
axis2	71	102	418	73	981
df.index.weekday	43	72	68	727	852
axis=	58	112	181	700	599
doens't	29	28	410	361	457
ingesting	86	222	329	107	519
matplotlib-basemap	61	176	128	158	908
sq	77	266	20	574	227
axes.formatter.useoffset	58	166	452	764	683
col_b	44	93	82	558	965
col_c	43	17	223	4	567
col_a	44	93	82	558	965
treatments	78	250	445	584	604
to_excel	92	91	367	183	86
col_x	1	134	260	471	622
col_y	1	134	260	232	881
waves	77	292	20	430	942
wc_class.py	81	162	478	739	344
transposed	40	64	154	519	673
refuse	10	231	395	173	568
dataframe.replace	92	193	109	512	808
-50	60	194	269	65	212
2.4.11	83	206	178	685	380
register	9	69	397	595	112
parameterized	74	10	152	744	638
django	23	84	376	184	127
auction_id	44	164	181	700	895
fundamental	10	231	17	335	999
nvidia	96	30	480	785	729
putting	74	13	143	458	526
1300	12	142	220	528	106
distortion	33	176	282	617	762
retweet_count	78	78	197	796	272
pandas.tslib.timestamp	70	273	309	781	31
random.shuffle	19	294	296	231	512
masked_array	19	294	424	231	782
wrf	23	192	77	623	293
nifti	86	222	329	260	405
x86_64	85	45	264	163	858
statsmodels.ols	79	232	125	761	382
conjugation	16	178	154	150	547
wrt	79	227	148	98	347
nifty	38	6	291	573	79
upsizing	53	151	428	720	353
martelli	35	238	326	187	308
train.tsv	47	224	30	385	754
abi	96	174	5	650	455
funciton	38	214	125	684	382
speculate	10	231	403	420	579
subtitles	37	290	175	780	76
fount	29	173	234	302	746
assemblies	28	14	267	710	841
zero-crossings	77	292	20	430	547
found	29	62	272	161	746
zero's	71	146	454	680	509
2hz	77	292	20	430	227
changeing	47	224	30	122	508
reduce	82	232	100	537	668
slowdown	88	180	55	537	246
thrid	74	232	6	98	36
doses	3	110	6	80	519
allclose	19	214	198	457	907
1.2gb	86	182	373	342	236
length_of_plateau	57	89	201	664	62
n-dimensional	71	64	10	519	684
****	46	206	151	202	703
99.99294867	15	157	64	296	837
.set_position	58	138	495	651	599
plotting	61	136	175	626	847
belief	28	227	8	744	905
risen	80	258	145	723	645
obj_1	87	220	198	770	985
no-no	10	231	395	335	921
2-dimensional	71	64	268	519	684
conditioning	3	250	351	482	125
clique	28	14	267	710	841
rises	88	197	485	361	473
custid	78	56	445	41	832
f.so	81	144	29	790	383
eickenberg	35	238	409	187	336
choropleth	61	176	259	757	786
pyplot.show	6	46	345	599	356
0.44731685	15	211	64	364	265
integrand	79	10	324	416	292
clutters	10	241	395	334	327
defaulting	64	117	152	661	638
rooted	29	28	227	631	472
1048576	47	130	162	133	588
unusable	22	283	100	497	463
aa-zz	43	51	487	71	567
gmms	79	23	185	638	531
numpy.core.umath_tests	81	88	110	739	183
jep	38	1	80	349	564
leverage	38	50	341	317	118
jet	20	119	320	49	846
b_list	72	275	295	562	292
introduction	34	254	234	302	565
matlabs	38	101	369	703	392
h5py.file	76	199	30	283	736
vector2_y	72	281	97	73	756
vector2_x	72	281	97	73	756
elaboration	27	137	116	97	328
warmly	68	207	465	432	343
grouped.groups	92	156	78	105	121
umfpack	96	174	408	178	455
taught	17	43	377	396	803
build_exe_options	81	162	80	247	383
endlessly	22	187	108	361	248
dpkg	13	170	244	481	174
prettyplotlib	64	136	390	78	847
larsmans	35	238	326	187	308
aaa	43	53	82	145	569
aab	78	200	82	204	832
aah	65	291	258	407	887
seaborn's	51	136	195	272	847
0.99	46	221	151	681	252
0.98	15	211	61	606	110
0.95	60	194	495	606	10
0.94	15	211	162	606	10
plot()	51	161	208	272	481
0.92	15	211	61	514	980
]]))`	1	19	263	364	265
beforehand	74	232	246	209	629
defect	99	151	106	631	668
pedestrian	82	241	341	308	29
replicated	27	171	306	791	673
2-column	3	64	6	354	678
generalizes	82	64	10	573	382
reassigning	40	134	158	476	757
funcanimation()	6	46	388	572	356
reliance	10	227	341	537	219
plot.show()	90	46	345	599	356
internal	38	231	152	691	305
generalized	16	94	125	150	382
knobs	38	6	291	78	370
id_b	78	93	243	558	965
%extend	9	109	29	790	64
b=true	60	112	240	495	285
frowned	34	173	307	709	215
dates_input	70	273	309	323	852
pd.notnull()	98	146	424	415	509
temp_win	52	0	263	364	288
id_a	78	93	243	558	965
wedded	38	43	17	500	118
accepting	34	190	3	702	216
.argmax()	52	0	68	290	288
index.name	44	134	158	700	130
numpy-1.7.1	83	206	178	685	380
giving	29	28	306	122	473
84800000	65	28	227	407	472
microsoft	83	84	178	650	634
clear()	6	46	345	44	356
golf	17	43	116	590	812
gold	78	116	430	149	423
new_array	1	12	461	471	881
xcode	13	128	5	104	482
comand	83	15	108	361	383
sigma=	93	194	4	606	743
nasdaq	78	150	243	479	604
sigma1	72	186	25	129	756
indexerror	63	83	283	715	39
writes	86	222	329	58	519
writer	76	91	367	107	86
rule3	47	258	25	174	306
writen	16	186	25	150	792
numpy.apply_along_axis	19	57	295	13	231
colorplot	61	176	175	626	908
plotfile	51	136	90	272	847
set_edgecolors	6	161	90	543	481
lastname	43	93	82	204	965
banned	43	150	430	149	423
constituent	74	232	386	94	953
generalizable	82	241	378	40	29
c1-c2	11	234	4	664	743
split-apply-combine	92	254	234	763	565
sigmas	79	23	185	98	347
crs	33	103	135	617	298
mslink	78	93	82	463	965
s.shape	1	57	112	677	726
progressive	99	151	339	646	951
cry	17	180	55	334	812
coord	33	102	280	556	77
25x25	71	195	213	674	95
rfe	79	26	168	135	816
coors	43	47	231	265	567
np.fft.fft	79	292	20	430	547
arraydata	75	146	454	587	673
xmax-xmin	60	194	269	65	221
re-edited	35	118	116	407	887
startup	30	122	478	159	181
closed=false	6	46	345	418	162
fstack-protector	50	157	133	117	160
sankey	61	136	278	158	326
emag	0	275	295	684	231
contour	61	176	282	626	908
multicursor	6	69	345	572	373
permuted	40	64	182	587	673
50th	98	163	254	10	897
myfile	76	199	286	283	736
pickup	74	171	37	110	161
set_figheight	6	46	345	418	356
compliment	82	207	274	205	29
knowing	10	232	227	432	999
imagemagick	73	125	123	607	304
set_yticklabels	58	44	166	341	184
targeted	38	173	359	604	208
javascript	23	6	278	158	127
incident	23	14	430	425	841
nonexistent	75	184	153	691	122
frozenset	92	12	455	776	903
dividend	80	116	299	581	67
nxnxn	71	64	213	399	95
shoe	84	100	69	429	22
cryptic	29	241	395	334	327
tangible	82	180	17	537	246
thou	34	173	234	97	142
forward-looking	82	193	341	98	382
1.64	15	256	236	514	980
maptlotlib	90	69	46	158	384
build-essential	13	170	50	104	174
);	47	224	173	50	371
matplotlib.pyplot.text	58	44	226	641	683
)=	11	234	242	129	56
2014-01-10	67	260	12	2	24
others	34	227	159	97	36
scipy.optimize.minimize()	0	275	140	684	231
))	11	224	180	50	371
np.zero	1	57	461	139	881
__rsub__	9	109	331	594	386
church	78	200	252	463	310
)"	47	17	170	4	385
)'	47	224	170	424	371
.between_time	67	260	231	2	24
semi-random	77	151	106	631	668
sine	77	292	20	430	942
mlab.normpdf	87	55	418	129	591
dendogram	74	232	37	293	854
__abs__	9	109	331	594	386
extreme	77	151	106	631	762
z-variable	40	64	97	519	684
champion	35	207	371	205	767
plt.gca()	58	44	494	341	599
overloading	9	109	331	113	135
races	78	93	445	41	690
representative	27	293	403	420	579
systematic	28	151	106	631	970
scipy.integrate.romberg	79	22	140	566	13
)`	1	57	173	50	371
ax2.set_xlim	58	44	494	642	162
sdks	50	259	133	117	160
)]	52	0	303	50	371
dstack()	19	294	296	278	470
df1.set_index	44	2	181	700	895
straight	61	13	143	212	589
estimations	77	151	106	574	531
existance	10	227	350	631	382
erros	10	231	17	500	305
leaning	17	43	377	321	803
properly	29	28	410	209	473
mpi4py	55	85	71	349	431
panelnd	10	231	395	663	699
fasta	86	286	163	712	519
overlayed	61	136	175	212	786
np.asarray	1	59	41	232	881
fetching	22	50	100	370	161
right=false	60	194	495	575	221
nanosecond	80	35	245	781	920
873	67	78	162	133	272
swig	55	204	29	790	64
race_label	43	72	93	265	708
comprehensive	34	254	234	302	565
psuedo	27	137	459	15	421
0.200	57	194	269	606	212
algos.c	50	259	118	106	842
alert	34	173	35	624	142
gonna	65	291	250	236	345
2147483647	57	89	325	86	22
might've	65	118	258	791	999
euro	80	258	26	581	67
italicized	73	166	134	131	862
elem	52	148	273	471	523
concrete	27	293	403	420	579
elev	33	102	28	254	996
normals	99	288	282	315	138
redistribution	96	45	69	461	637
normaly	86	222	329	283	519
dt_rng	93	123	173	593	393
18645	52	19	160	284	855
abbreviation	81	88	110	482	183
qunused-arguments	30	170	244	554	174
amp	0	34	20	129	706
p.plot	0	275	418	129	292
sidebar	34	173	234	302	142
</s>	74	232	306	209	36
numpy-only	82	241	378	573	29
readers	34	190	307	590	216
fmin_powell	79	22	324	566	13
y-coordinate	33	281	287	719	358
eager	17	43	377	396	803
overthinking	65	291	395	236	345
pst	80	163	254	723	931
lambda's	10	214	397	436	382
self-documenting	82	241	291	334	354
nasa	23	176	128	623	293
dtype=float64	48	59	74	332	681
australia	78	93	252	584	604
ticker.funcformatter	58	44	452	418	162
format	86	222	329	601	519
tweaks	27	137	272	525	328
1-bit	57	100	325	592	22
2^24	57	89	325	141	22
__gt__	9	109	198	113	135
corr_list	43	47	231	71	567
shading	20	119	259	757	786
formal	38	43	291	525	693
errobar	61	136	175	780	847
monkey-patch	64	6	246	500	669
sorting	40	50	182	524	9
d	47	186	25	556	756
facets	61	136	175	646	847
continue	90	187	199	669	208
yields	74	117	459	58	508
ivan	35	207	371	205	767
.msi	13	261	486	797	368
clipping	37	31	467	780	851
plt.xkcd()	6	46	345	599	461
%d-%m-%y	76	205	346	125	879
spring	28	14	267	149	841
mutliindex	3	156	78	354	125
1294358400000	67	213	95	185	51
bicubic	53	288	238	720	396
curious	65	43	227	236	803
pale	20	119	259	757	786
resolutions	77	29	467	207	668
transactions	78	150	445	41	67
shading=	25	155	240	193	845
u'b	43	105	231	71	255
group-wise	3	56	6	354	347
ax.set_xlim()	58	44	494	642	388
256^3	88	160	220	80	54
digitized	98	148	273	139	77
2013-08-11	67	260	12	372	958
redoing	82	50	497	534	526
ndmin=2	1	57	112	232	21
ndmin=1	76	54	382	260	698
plot_trisurf	25	161	208	49	296
relating	29	173	272	161	746
analysing	23	14	294	94	866
searchid	44	72	65	155	622
per_df	52	72	68	290	622
array_size	98	142	268	139	60
methodology	68	227	354	432	308
unintentional	65	231	258	335	345
numpy.empty	48	59	41	332	21
qt's	90	85	294	349	112
seaborn.apionly	81	88	390	739	889
seamless	38	1	291	317	79
u's	78	281	243	646	744
non-vectorized	82	180	55	337	219
parity	16	227	187	293	308
100.0	60	194	269	65	743
u=	52	224	263	424	159
u8	70	105	74	53	255
u5	70	105	74	53	522
u4	70	105	74	53	764
wind_angle	11	102	418	129	910
u0	72	186	25	129	292
u3	98	130	243	174	377
u2	70	100	74	224	764
set_ydata	6	161	90	543	481
suit	27	137	116	525	328
featurehasher	9	26	168	135	816
value2	78	93	82	558	965
xpath	86	68	275	370	126
elsewhere	29	28	306	791	746
inches	37	243	18	207	449
poster	34	190	307	233	216
scipy.stats.gaussian_kde	53	23	332	511	239
posted	27	118	116	97	308
geting	29	28	227	122	473
ux	32	16	420	482	475
id_list	44	134	461	558	827
ut	48	197	497	88	881
uv	72	186	25	150	756
up	29	13	88	458	417
us	27	293	403	420	579
ur	35	207	371	20	336
um	15	284	162	606	110
ul	12	181	58	133	888
un	47	130	25	550	888
ui	90	69	46	380	384
uh	65	291	258	407	887
spectroscopy	77	23	332	511	531
ue	47	224	256	145	764
ua	52	148	112	232	886
ub	52	148	273	556	792
storing	86	50	426	663	359
u'food	43	157	231	71	255
dicitonary	75	106	317	471	68
1000000000	57	89	325	139	60
parses	86	117	275	58	444
parser	32	54	275	601	444
comming	29	62	27	458	161
fig.get_dpi()	73	243	18	16	721
graceful	82	241	378	573	29
parsed	86	110	275	601	519
python-dev	13	128	50	104	600
paradox	10	43	17	500	812
gnuplot	61	6	278	158	450
fixing	29	62	88	791	526
955	15	279	64	751	96
957	50	145	118	168	679
b.dtype	70	59	74	332	522
retract	65	291	258	407	887
95%	79	266	22	10	11
deviate	77	151	332	511	531
row.index	47	134	461	727	622
petal	78	281	252	757	786
re-cast	75	99	10	601	979
lucid	85	276	233	393	858
variates	93	23	193	628	507
bdata	44	156	65	204	832
c=colors	60	155	240	193	910
pedestrians	77	14	365	429	563
diffraction	28	14	267	710	841
2013-02-28	67	213	95	185	51
non-affine	38	230	125	166	296
enrolled	78	150	252	479	604
inaccuracy	57	89	8	654	970
armadillo	16	94	462	782	800
having	29	28	88	173	526
volume_traded	78	258	445	41	377
bvp	10	10	324	214	970
upper-right	37	31	443	191	964
numpy.random.random_integers	93	151	193	628	509
scratch	55	13	80	190	118
name1	78	93	82	390	965
spectrograms	77	292	175	22	951
luminance	84	195	51	137	353
savetxt()	86	54	382	260	405
seemed	29	62	410	161	874
longstanding	46	231	359	604	208
rspars	3	110	243	155	984
d2*d3	1	57	112	232	21
young	17	43	377	149	275
yearlist	60	155	240	42	12
uniqueness	3	227	182	587	868
multicore	55	174	408	90	651
recl_2009	98	93	82	796	272
unravel_index()	19	294	296	231	782
statics	80	116	299	94	67
bin_time	3	156	65	155	125
g.map	60	155	240	495	12
reopened	65	187	108	361	248
gtk2	83	38	178	158	810
gtk3	90	38	178	635	810
gtk+	83	38	46	635	810
mixing	10	231	17	458	28
org_o	43	93	82	558	965
param_update	47	171	93	155	475
tri	99	288	11	381	842
dataframe.sort	92	156	78	105	971
magic	38	147	189	226	370
stringified	92	99	275	601	979
transmission	77	14	365	623	210
experiencing	29	231	395	173	568
tre	47	105	93	145	764
anxious	17	62	88	236	803
race	78	150	445	41	604
y-dimension	37	281	443	191	449
matpltlib	83	206	178	202	380
dt.hour	47	193	148	673	347
raw_df	3	134	65	155	965
matplotlib.ticker.funcformatter	64	44	166	341	184
+180	33	194	135	617	212
qapplication	90	187	108	361	248
imply	29	28	306	791	999
licenses	83	1	69	461	637
correspond	98	281	454	746	868
spaghetti	37	31	351	22	951
leakage	22	292	20	430	547
directive	64	204	422	790	761
credit_exp	43	72	309	265	987
expressed	74	232	154	40	382
consistently	29	28	306	209	905
violinplot	51	136	24	272	847
polluting	10	237	397	732	864
p.e.	74	222	246	110	405
expresses	10	137	154	200	999
delving	82	50	143	500	118
1400	12	279	488	528	175
equivalent	74	214	125	703	392
nan_to_num	19	214	424	414	203
version.py	50	145	118	138	960
pvalues	28	266	185	638	11
tsla	43	200	231	145	708
punch	17	13	250	39	589
gmpy	55	174	408	90	651
licence	83	84	69	461	637
\u2019	32	16	190	477	261
invented	28	1	377	396	741
curv_typ	43	72	68	406	987
casing	32	263	420	468	509
technical	10	43	17	321	999
2^5	37	31	467	686	898
clip_on=true	58	44	494	642	683
resulting	74	232	306	122	673
menu	90	15	189	540	781
{	47	67	256	145	764
unpacking	75	252	455	480	903
buffered	99	50	100	497	122
outcomes	28	227	159	94	970
sgn	11	275	242	562	292
sgd	79	26	354	135	816
1+1j	11	0	4	215	99
pedagogical	10	241	291	334	628
midday	80	163	254	723	931
3.4.3	85	276	42	685	621
x_all	93	142	173	139	221
np.ravel_multi_index	19	42	296	291	886
rubbish	65	291	258	426	345
practicing	17	43	377	765	803
effectively	74	232	246	209	36
challenge	17	62	88	321	79
itertools.izip	19	12	455	480	806
scipy.fftpack.diff	93	101	125	13	512
prompts	90	15	189	540	383
lorentz	79	23	332	511	531
publications	37	31	467	78	951
xfit	60	155	240	495	285
self.datagen.next()	52	106	461	471	622
normaltest	75	106	140	684	782
slim	77	283	100	574	668
list_b	98	146	185	73	77
list_a	72	148	206	73	77
slip	65	263	246	482	655
list_d	44	164	181	204	832
csum	71	142	268	139	60
ijkl	72	178	473	743	884
shuffled	40	64	182	587	673
*iqr	15	194	287	606	358
namespace	81	237	397	739	864
-undefined	96	259	133	117	160
delay	22	187	108	361	248
shuffles	40	263	497	534	68
class=	32	67	235	468	768
reposting	34	190	307	590	216
re-adjust	37	290	467	207	449
wolf	78	200	214	204	423
minibatchkmeans	28	26	354	135	816
class2	78	250	77	528	995
espec	43	47	179	181	17
0.7.0.dev0	46	221	124	681	435
class1	78	250	252	479	995
np.zeros_like	1	57	41	232	21
list_2	52	148	206	471	77
list_1	1	148	206	471	77
nones	75	146	424	680	509
pd.to_csv()	76	54	382	260	698
none}	76	185	452	177	987
image.open	84	219	102	401	427
timedelta64s	70	273	245	678	700
maturities	80	56	299	77	67
fits	74	232	37	525	620
cabbage	61	297	454	42	673
variate	79	23	332	511	239
np.logical_and.reduce	19	42	296	13	512
counter	22	12	461	776	903
element	98	64	127	73	77
commodities	78	116	299	581	67
scatter()	51	161	208	272	481
unaccept	65	118	307	702	216
asserts	32	227	317	457	768
counted	98	146	454	796	984
_amod.pyd	50	145	133	138	204
math.pow()	75	106	246	756	231
lapack_opt_info	96	174	408	650	729
move	74	13	143	190	629
lz4	86	222	426	611	820
80%	88	266	22	574	668
test.png	73	243	18	16	721
networkx.to_numpy_matrix	19	178	246	455	726
warren	35	238	326	187	336
_configtest.obj	63	244	283	24	323
decay	79	10	332	487	942
chosen	74	232	37	746	868
fast-ish	82	241	341	497	970
dfun	0	275	295	684	231
loadlibraryw	35	115	409	20	383
vwap	92	193	78	105	971
12sma	80	56	254	723	428
degrees	33	176	443	617	725
display.display	6	46	345	418	162
2015	67	163	284	718	483
'```	76	155	170	177	987
2017	67	163	284	718	483
therefor	74	232	152	691	36
2011	80	163	284	718	483
2010	80	163	284	718	483
2013	80	163	284	718	483
2012	80	163	284	718	483
etree	47	12	461	776	903
parabola	61	10	287	719	614
docs	64	254	234	302	565
outlined	34	238	187	97	308
innermost	40	263	497	534	219
drange	51	35	226	641	12
docu	64	161	152	641	638
dock	90	69	46	380	384
mitigated	10	171	397	691	663
doco	34	190	307	97	216
lzo	55	174	379	381	820
-1j*inf	11	186	242	191	725
rotation	33	176	443	617	725
np.matmul	75	214	154	231	981
outlines	61	136	24	78	138
refering	65	118	459	15	421
45129-09-22	67	213	95	185	51
overwrote	9	171	397	190	629
truth	75	217	421	263	146
70,000	88	160	220	80	54
subset	3	146	6	587	125
mets	47	17	223	4	567
writeup	34	254	234	97	328
dataframe.resample()	92	29	299	77	333
meta	86	110	426	663	843
jagged	99	64	10	519	138
ndimage.label	84	230	128	166	353
tenth	88	197	73	528	428
arguements	51	161	208	641	481
a_values	1	57	41	232	726
train_x	98	148	206	155	622
train_y	0	106	349	539	412
motifs	98	286	163	717	639
varc128	0	204	58	366	204
realigning	3	156	6	354	125
_nx.concatenate	1	57	112	232	159
plt.hexbin	51	136	63	557	780
kaggle	23	71	35	179	262
-inumpy	50	145	133	117	160
contourf()	25	161	208	49	481
shortest	99	297	185	293	868
put	74	232	37	110	472
gc.collect()	22	61	345	599	282
exponweib	79	23	332	511	239
a.set_xticklabels	58	167	495	642	599
fonnesbeck	83	206	35	197	142
sql_query	47	224	30	183	454
winpython-64bit-3.4.3.1	50	145	118	168	204
df.any	87	52	198	621	985
traverse	74	50	497	534	68
hertz	77	292	20	430	227
re.match	32	51	487	151	244
backtest	23	116	299	581	67
los	78	200	132	550	765
get_q6	52	293	202	285	154
system	83	206	80	768	467
float64's	88	160	220	80	54
buildout	83	170	178	165	174
low	77	266	106	574	668
shorts	71	100	325	601	22
adaptor	40	184	17	791	694
gotcha	10	231	258	335	812
expensivefunction	0	147	295	684	231
2009.0	15	157	236	514	980
geotiff	84	192	128	607	293
vouch	38	227	17	525	382
bother	10	28	246	500	472
roberto	35	207	409	187	336
sourcing	30	162	80	197	467
reproduction	27	293	403	420	579
collecting	23	297	294	370	161
accusing	65	43	395	236	812
*x	11	234	4	531	56
*y	11	234	4	215	19
*z	11	211	4	531	99
*t	11	234	242	531	56
*u	11	234	4	531	56
*v	11	234	4	215	19
*w	11	234	4	215	56
*p	11	234	242	531	56
*s	52	0	180	215	19
*l	1	57	180	232	726
*m	11	178	25	562	56
*n	11	234	4	232	19
facecolors=	60	155	240	495	285
*i	1	57	112	232	726
*k	11	234	4	664	743
*d	11	186	242	531	56
9.75	15	157	64	296	837
*f	11	0	263	215	19
scipy.integrate.quad()	79	10	324	566	13
*a	11	234	4	562	56
*b	11	0	263	562	19
*c	11	186	242	531	56
*\	11	51	487	307	244
4000	88	160	220	80	106
normed=1	60	155	63	557	780
2^31	57	142	269	252	60
inv()	16	94	462	782	800
2^32	98	142	127	141	60
pkg_config_path	30	170	244	159	181
formatter=lambda	60	47	493	76	593
400%	88	180	55	337	89
;-)	65	291	250	236	345
accuracy	28	151	106	654	970
sarray	16	26	168	135	816
*=	1	220	158	476	757
arr.reshape	1	57	41	677	159
*8	15	211	263	364	265
plt.subplot	58	139	494	324	543
*4	48	19	180	364	265
*5	52	123	173	50	99
sqeuclidean	16	178	462	562	800
*1	87	52	180	770	985
*2	11	234	4	215	19
*3	1	19	41	232	19
courtesy	34	108	187	97	308
**	47	224	227	424	8
df.grouby	78	164	82	204	832
*$	43	51	487	151	244
segment	99	288	282	212	138
days=1	80	201	309	727	852
0-dimensional	75	106	421	519	681
non-string	92	99	275	601	843
multi-element	75	106	421	471	684
face	99	230	282	757	786
400k	88	160	220	80	54
mechanical	28	43	377	396	275
tickers	3	116	299	581	67
painting	61	69	46	429	384
fact	29	231	306	791	999
dbm	86	222	426	611	820
mean1	1	274	349	539	726
mean2	37	281	349	207	12
dba	65	171	250	236	345
dbf	86	222	329	107	519
_numpy_	9	237	397	436	864
bring	74	13	143	458	118
numpy.vstack()	19	294	296	278	470
dbs	86	68	119	478	126
economist	82	241	294	500	625
canvas.show()	90	46	345	599	356
decade	80	29	299	706	897
principal	28	230	354	150	988
redirect	90	162	27	147	127
some_array	87	57	461	232	726
py2.7	85	276	151	259	621
should	29	28	246	209	196
buttons	90	69	32	624	536
lt.cm.spectral	25	155	320	193	845
rowsums	93	142	173	139	60
8,000	88	160	220	80	54
anneal	79	22	324	566	13
meant	65	118	258	407	887
4000,400	1	274	268	305	159
listened	22	150	317	94	214
means	74	117	306	209	638
hist_kws	0	185	226	641	699
numpy.invert	19	214	198	113	783
randomforestregressor	79	26	354	135	412
generalise	82	137	10	525	678
listener	90	69	46	624	112
meter	77	29	77	182	931
gpus	55	174	69	90	651
wouter	35	238	409	187	336
shaping	40	64	10	519	678
smash	3	156	6	354	125
uids	43	78	93	204	708
wheelhouse	13	170	105	165	482
x-tick	37	290	166	706	76
gbs	88	182	373	549	236
gbq	83	68	119	478	126
unfeasible	88	50	100	497	463
gby	35	207	274	205	767
end1	98	52	162	141	750
end2	98	52	162	141	750
df_sum	43	72	231	265	708
argmax	19	42	296	13	608
correlations	79	23	185	638	11
end=	67	201	309	2	24
packet	23	192	365	676	257
!!!!	35	207	371	205	767
sheetname	76	185	322	51	698
df.divide	44	164	181	700	895
packed	74	100	10	601	28
orderid	78	56	445	41	705
1294099200000	67	213	95	185	51
yedges	60	102	63	557	780
industries	3	297	65	587	125
ends	29	13	306	458	417
strided	40	184	153	453	122
lg	89	234	207	261	90
ld	63	244	94	553	323
strides	40	184	153	453	122
.mean	87	57	121	232	608
reappears	90	187	108	624	536
configuration	30	162	478	184	181
observable	29	28	306	209	472
matplotlib.figure.figure	6	139	18	324	543
ndim=2	1	204	160	476	681
readasarray	75	184	10	790	405
invited	34	173	116	97	588
strptime()	70	35	245	560	676
300,000	88	160	220	80	54
newbies	17	190	377	396	275
df.value	44	239	309	727	827
scipy.sparse.linalg.eigsh	16	94	462	782	800
trumps	10	227	17	200	135
exdiv_date	43	52	68	265	708
nalpha	72	102	418	305	756
h5check	86	222	29	611	405
intents	75	227	397	457	161
wth	74	232	227	354	472
x_te	1	19	160	284	726
viktor's	35	238	187	187	308
np.lib.npyio.npzfile	86	222	382	260	405
labor	17	43	377	75	118
scipy.ndimage.measurements	74	230	128	166	854
uci	23	84	27	94	293
.contains()	92	156	109	512	808
list-comprehension	19	12	455	480	806
rendereragg	6	161	208	543	109
keying	3	156	6	354	125
lw	20	155	24	495	664
joblib's	55	85	71	302	854
x-4	11	234	4	531	56
utilizing	38	232	272	761	79
x-1	11	0	273	129	591
x-2	11	234	4	531	56
bool_array	52	0	112	232	855
fourvector	72	19	25	129	292
lgd	60	243	495	16	721
pypdf2	73	125	80	197	304
longtuple	98	186	273	683	306
_typelessdata	70	220	206	471	622
morgan's	28	115	25	150	142
60%	88	197	22	574	217
sitepackages	30	259	277	303	960
x-d	11	234	4	531	56
major_locator	58	44	494	341	599
8]])	52	19	263	364	265
\ipython\core\	50	145	225	168	679
frameworks	30	259	277	340	752
x-y	33	102	339	646	908
x-z	33	176	282	617	908
x-t	11	275	242	664	292
ultra	82	241	259	334	463
va	72	266	265	651	224
vb	72	178	154	150	756
62.5	43	72	68	290	708
ve	29	62	272	161	457
vf	9	109	331	594	386
vh	47	224	30	424	736
vi	72	186	25	129	756
insanely	82	207	274	497	463
vl	11	178	4	562	800
site	34	254	234	302	565
vn	72	130	25	120	624
x.view	48	59	41	332	522
hardware	55	30	69	785	651
vr	79	292	20	430	292
vs	74	232	17	209	36
vt	72	186	25	150	756
vv	1	19	112	284	726
tenor	78	93	82	390	965
vx	72	102	418	695	910
vy	72	102	418	695	910
vz	33	102	418	695	910
sits	37	31	27	58	214
__init__()	63	83	226	44	676
fminsearch	79	22	125	566	13
vectorize()	19	214	10	231	782
matthew	35	115	409	20	336
the_array	1	142	268	305	60
size=1	60	123	173	50	60
x.min()	60	81	269	65	302
size=5	60	123	173	50	162
android	83	84	376	184	831
.median()	43	72	68	460	419
infinity	57	89	8	654	62
sortlevel()	92	175	182	524	9
v*	89	186	207	683	56
drink	43	200	231	149	423
v0	72	186	25	120	624
pita	55	174	80	500	327
stringmethods	63	83	383	616	477
v3	72	130	25	120	624
v4	72	130	25	120	624
v5	72	130	25	120	624
v6	72	130	182	120	624
v8	55	174	29	90	455
decimal.decimal	70	99	74	332	979
sub-images	71	195	213	674	656
v=	1	275	173	50	159
specifiers	32	99	190	601	444
35%	15	256	22	196	217
workarounds	68	173	359	369	208
357	12	279	488	751	465
355	12	267	488	111	132
354	12	279	488	751	272
353	12	279	488	751	132
datetime.datetime	80	35	245	781	31
351	12	279	162	196	432
350	12	160	220	528	106
exampe	27	137	459	15	421
drawing	61	31	175	212	138
359	12	211	254	606	212
358	12	256	319	751	432
restructure	3	137	6	663	953
flesh	27	190	116	590	328
datetime64	70	273	245	678	700
rooms	78	250	77	479	604
scipy.sparse.csr_matrix	16	94	333	455	788
__lt__	9	109	331	113	878
invert_xaxis	92	46	78	105	971
info()	92	99	202	183	322
-values	98	102	97	129	221
script	90	15	108	540	383
2.8	88	272	61	225	544
clipped	37	31	443	212	851
diagonalization	16	94	462	782	800
multi-step	82	137	341	534	953
government	23	150	430	149	423
checking	29	227	317	457	526
\numpy\core\include\numpy\	50	145	118	138	204
whopping	88	197	73	196	217
nvm	65	291	258	407	887
password	30	84	376	250	348
nvi	72	275	25	638	756
cusip	78	93	26	390	410
commanda()	98	220	317	605	602
mynumpyarray	52	148	206	770	714
oses	83	30	69	785	467
alongwith	19	42	296	231	601
to_offset	92	106	295	105	699
byteswap	27	185	305	453	192
numpy.core.multiarray	81	88	110	553	584
matplotlib.font_manager	81	88	110	739	41
re-initialize	90	187	108	361	248
inexperienced	17	43	377	451	803
terminal	90	15	189	540	818
identified	74	110	37	746	868
12pm	80	29	254	723	931
950	15	256	162	606	206
daylight	80	29	86	77	931
heimdall	30	259	277	303	469
asynchronously	22	85	71	349	431
glyph	61	31	24	212	276
__setattr__	9	109	331	594	386
datadf	3	93	243	155	984
inexpensive	82	50	341	497	246
cloud's	35	238	187	187	308
data.dtypes	52	72	202	290	622
numpy.logical_and	87	52	198	113	16
referential	27	137	116	15	421
woohoo	35	207	274	205	767
l3	75	283	373	88	778
blowing	17	13	143	458	417
]))]`	52	0	263	290	288
l1	72	130	25	174	756
60x	88	180	55	337	89
_minimal_	27	293	403	420	579
iris	27	26	354	135	293
msync	22	61	108	358	282
np.any()	19	294	198	605	602
whistles	38	1	291	317	87
transitive	16	227	185	457	970
software	23	1	69	461	637
0d	75	106	421	519	681
large_df	44	134	260	155	827
intermediates	55	180	422	537	219
1.5.x	46	221	124	331	435
cv2.error	63	244	283	553	323
rectify	68	28	227	432	472
assess	28	151	106	631	970
app.yaml	30	162	478	247	344
bottle-neck	55	180	100	537	219
retuns	74	99	275	752	141
lidar	33	176	135	623	293
order=0	53	101	238	720	396
restricts	74	117	152	209	638
60k	88	160	220	80	54
customising	64	254	234	78	565
size=none	93	194	269	606	10
non-ascii	32	16	190	131	444
recompute	82	151	185	293	463
cumcount()	19	193	78	105	121
1.5.4	13	170	244	165	174
1.5.6	85	276	151	681	380
1.5.1	85	276	42	157	621
1.5.0	46	276	42	169	621
signal.lfilter	79	101	125	761	382
lowered	88	197	73	574	217
convergence	79	151	324	566	13
insertions	88	50	100	139	122
valuation	80	116	299	581	67
non-english	32	110	420	482	444
compute	79	232	185	98	347
hdfstore.append	86	68	379	217	824
gravitational	33	14	114	710	841
numpy.bool_	9	83	383	616	286
convince	17	190	246	500	472
lassoselector	6	69	46	572	384
xycoords=	58	138	265	651	224
imbalanced	28	26	354	135	816
distribution	79	23	332	511	239
rightly	29	173	326	791	142
bool()	9	106	295	684	135
int	70	59	74	332	979
inv	16	94	462	562	800
contribute	34	190	250	39	208
inp	0	59	295	471	881
buysandsells	43	47	68	265	708
ins	60	13	372	557	4
sibling	98	110	243	712	984
3-letter	78	163	420	482	410
ink	61	31	467	212	786
ind	52	148	273	284	622
agains	74	227	306	209	905
inf	57	89	8	770	509
ing	40	294	246	231	68
inc	96	45	264	513	729
bessel's	79	23	332	428	484
in_	9	109	331	594	386
np.generic	9	109	331	594	386
trials	88	29	73	94	616
eastern	80	285	323	742	765
c-python	55	1	29	317	564
s_a_approx	1	224	112	424	881
lookup	3	297	182	776	903
matplotlib.dates.datestr2num	92	35	245	560	934
overwhelms	88	283	100	497	463
standardizing	29	227	306	791	905
=-1	87	57	452	770	985
+=1	52	132	273	284	19
44100hz	77	192	365	676	946
in0	1	19	158	486	757
in1	1	19	112	677	726
vignette	50	259	178	381	842
in-	86	7	426	611	122
noninteractive	90	46	18	599	356
ndarray	9	106	331	594	681
np.radians	11	55	201	664	743
.strip	76	51	487	151	244
non-scientific	83	206	80	197	564
misnomer	65	291	258	236	345
apertures	77	281	162	623	358
470	88	142	255	528	106
lift	37	187	443	191	214
qdist	98	281	162	141	77
475	12	279	488	111	465
479	12	279	488	528	432
rep	34	190	3	702	915
sleep()	22	46	345	599	356
lognormal	93	23	332	511	239
downvoting	34	190	307	590	216
ciao	17	62	371	236	328
sub-arrays	75	64	10	231	953
desirable	10	231	395	335	999
norm.ppf	93	123	193	628	37
your_element	98	146	317	155	602
kl-divergence	28	227	185	293	841
extrapolates	53	151	238	720	303
controversial	10	173	359	500	812
aliases	38	237	159	732	79
diag()	16	94	462	782	800
pedro	35	207	371	205	767
speeded	82	180	55	537	89
automatize	28	14	294	110	625
datetime64s	80	35	245	781	920
bike	23	250	129	425	995
sped	82	180	55	537	219
spec	29	28	329	209	638
rollbasis	98	258	454	796	984
coercions	38	227	247	321	79
logarithmically	37	290	339	706	340
pyplot.imshow()	84	195	128	626	908
tagging	34	118	116	525	142
format()	0	214	295	684	231
cashflow	78	56	445	41	67
pinch	33	288	282	617	908
quadrature	79	10	324	416	13
reg	47	134	136	155	410
fit_transform	92	26	168	135	412
reinvent	82	241	341	500	118
unsharp	84	230	428	166	353
chew	22	62	88	39	118
dataframe.resample	92	149	447	285	612
approximation	79	10	324	487	531
d.csv	86	110	243	712	754
------	15	284	214	697	110
specs	27	137	234	97	421
deliberate	10	231	395	335	797
item2	43	93	82	558	965
item1	43	93	82	558	965
consequent	74	232	497	98	36
roundoff	57	89	8	654	970
zoomed	37	31	32	207	536
officially	46	221	124	202	435
crunch	23	84	294	94	866
.dtype	70	273	309	727	852
module-level	9	237	397	436	864
faceting	51	136	278	158	847
libsndfile	83	174	80	197	564
pygtk	83	38	178	635	810
u'index	43	105	231	71	255
np.matrix()	75	106	10	231	782
simplecv	83	206	247	197	746
redondant	75	64	10	519	678
items	3	297	454	587	639
progressbar	90	187	108	624	517
bitmask	3	297	37	587	868
texlive	83	128	211	91	482
browsing	34	254	247	161	746
.todense()	16	94	333	455	788
w_i	72	23	332	511	239
text()	58	161	90	543	683
highly	38	1	479	317	79
hindsight	65	118	258	236	345
lotka-volterra	28	10	267	761	610
ftol	79	22	324	566	13
serializing	86	222	426	611	820
anti-aliased	73	31	467	780	851
neurodebian	13	170	211	197	482
pseudo-inverse	16	94	462	782	800
negative	57	146	8	141	509
`''`	32	16	420	415	768
-v	30	70	244	481	174
retrieves	74	117	27	58	161
offtopic	83	28	80	500	383
z-1	11	234	4	215	19
compress	86	222	426	611	820
zeroes	98	146	424	680	509
matplotlib.collections.quadmesh	64	161	90	543	370
-s	30	259	244	366	174
floyd-warshall	99	288	185	293	716
set_bad	25	119	320	49	618
award	34	190	3	702	915
aware	10	43	17	209	999
dirichlet	79	23	332	511	531
zeroed	40	146	127	191	673
cured	83	62	272	173	467
must've	17	291	88	236	874
muliindex	3	156	182	354	125
characterize	79	151	106	487	970
logilab	46	170	124	202	960
np.isreal	0	106	295	684	231
transparency	20	119	24	757	664
to_replace=	43	51	487	151	567
qgrid	38	6	278	158	450
appologies	65	118	116	97	216
ax.set_ylabel()	64	185	226	641	683
validates	29	28	178	595	473
550	88	142	220	528	106
validated	34	173	234	709	216
colorcycle	64	161	90	572	683
str2	43	105	93	265	764
str1	47	105	93	53	764
p2-p1	72	186	25	562	756
iso-8859-1	76	16	190	477	413
str4	43	105	231	265	260
one-liners	82	241	479	573	29
can_zoom()	64	185	452	605	130
rookie	17	43	377	451	98
beach	99	176	282	212	563
supercomputer	88	30	480	785	236
str_	9	109	331	594	681
after	29	171	306	190	214
x_min	60	194	418	65	872
scipy.ndimage.interpolation.rotate	17	176	128	626	908
rephrased	65	118	307	590	216
entriesperhourperrain	44	164	181	700	987
-pthread	50	145	133	117	30
str}	76	199	286	177	413
strs	52	19	421	471	622
no_data	57	89	198	559	907
encompassing	99	232	37	646	684
.diff()	43	47	309	727	419
results.csv	86	110	30	712	754
fillable	75	214	140	684	231
set_clip_on	65	291	452	642	887
bar_width	60	194	495	606	10
defenders	78	200	430	463	764
-philipgehrcke	65	291	258	407	887
x.ix	52	47	68	290	708
np.triu_indices_from	1	57	112	232	659
japan	67	67	223	145	272
nets	28	14	267	710	841
-michaelaye	65	291	258	407	887
float()	63	83	283	715	311
highlights	61	13	306	212	421
encapsulated	74	109	386	436	141
workable	82	241	378	334	327
mydf	44	134	309	323	827
create_plot	0	237	397	44	231
encapsulates	27	69	46	732	370
versus	74	232	306	209	36
mon-sun	80	56	299	22	897
band	77	195	51	429	227
bang	65	291	56	39	180
docids	3	297	163	776	903
python27.zip	50	259	277	303	469
**kwargs	0	185	226	641	8
bank	77	116	299	581	67
set_powerlimits	58	44	494	341	184
one-to-one	3	297	182	587	363
rocky	65	291	250	236	345
pyplot.errorbar()	64	161	90	543	481
markerscale	64	44	90	641	683
alexis	35	207	371	42	336
rocks	68	115	371	149	626
deficient	16	94	462	782	988
f.readlines()	47	224	30	283	736
lifted	27	254	27	302	565
schemes	38	6	159	78	79
logs	23	84	294	94	67
logp	79	23	332	511	531
.mainloop()	90	85	46	349	384
df.id	43	72	68	265	708
mangled	17	62	402	458	327
logx	60	194	240	65	162
logy	60	44	195	495	12
logg	98	220	317	605	602
mtrand.pyx	50	267	118	734	679
df.ix	43	72	68	733	154
logn	89	234	207	261	90
logo	73	125	248	276	304
logl	64	275	58	207	449
vmin=	20	119	320	193	845
+\	43	51	487	151	567
+c	11	186	242	531	56
+b	11	186	242	129	56
+a	11	234	242	215	56
+f	11	0	180	215	99
+d	11	234	242	531	56
+j	52	19	263	284	855
+i	47	224	30	424	736
.deb	13	170	80	197	368
hooked	35	238	187	187	308
+n	98	148	206	73	77
train_df	43	104	68	733	154
medicine	78	250	70	295	604
+z	11	234	4	531	56
+y	11	234	242	531	56
+x	47	224	58	366	588
vectorization	55	180	422	537	219
log2	89	234	8	311	578
unfotunately	29	206	178	122	473
terragen	23	192	128	149	293
pandas.timedelta	51	35	245	781	920
standard	38	232	152	209	382
operator.mul	0	214	295	684	231
-=	11	220	158	476	757
__setitem__	9	109	331	767	386
column_stack	19	294	296	278	470
standart	28	10	80	744	382
created	74	171	386	122	673
++	55	174	29	366	455
traceback	27	293	305	741	579
shunted	37	31	467	780	851
+-	88	266	269	528	217
dpi=600	12	243	18	16	721
creates	74	117	386	58	638
+2	60	194	269	215	221
+1	35	291	371	205	767
mvc	23	14	294	128	841
+5	60	194	269	65	212
+4	11	194	269	606	212
home-made	28	14	267	710	841
+8	80	285	162	133	272
+=	52	220	158	476	757
daunting	82	241	341	334	327
jackknife	28	14	148	98	347
urllib.request.urlretrieve	50	5	170	130	204
colormapped	84	195	51	759	427
meshes	53	288	339	720	340
thick	61	31	24	212	276
some_id.astype	70	59	74	332	979
re-size	90	69	32	624	518
3200	98	78	162	528	212
numpy.core.arrayprint._line_width	30	162	478	739	181
observations	3	56	445	94	616
5-10	88	160	220	80	54
11979	52	78	52	364	272
streets	78	150	445	479	604
5-15	88	160	220	80	54
happily	29	28	246	209	36
61.245.172.14	47	19	162	133	272
inexact	57	89	8	654	970
chunksize=	76	199	322	217	698
grouped.apply	87	55	493	76	593
sm.wls	72	275	418	129	910
tripolar	33	176	339	623	293
timewindowduration	43	273	309	727	852
simulation_cycles_geomean_df1	60	44	452	418	162
scenes	38	231	17	732	305
wordcloud	84	136	128	626	847
plt.legend()	6	46	345	418	890
minus	57	263	8	788	898
np.fromiter	19	12	455	480	806
thing1	78	93	223	405	832
%inline	9	204	29	790	64
navigate	30	261	486	797	368
np.datetime	70	99	74	332	979
convience	92	104	1	285	154
stalls	22	187	108	349	248
dbms	23	1	359	604	208
cythonized	82	180	422	537	219
realm	82	50	341	573	29
__new__	9	109	331	594	386
plot.py	30	162	478	247	344
latter	10	117	17	209	305
np.deg2rad	81	214	201	739	183
realy	88	28	274	205	767
time-domain	77	292	20	430	547
luxury	29	232	246	110	36
dictionnaries	74	232	246	209	854
transmit	86	84	329	676	257
correlating	77	14	159	94	841
reals	57	10	8	744	610
np.digitize	19	42	63	31	780
boxcar	79	101	428	614	547
np.asarray()	22	61	153	358	231
z2	72	4	431	516	624
plt.axes	58	296	494	324	543
involving	82	227	341	744	382
addtion	0	187	485	361	231
egrid	52	19	263	284	855
date-times	86	99	275	601	141
gridding	53	176	339	720	977
bytesio	86	54	382	306	405
webcam	84	230	365	676	257
pyplot.subplot()	51	136	175	272	847
calculated	74	232	148	98	347
rjython	81	206	178	197	564
investing	17	14	250	179	866
nearest_points1	98	258	82	558	377
voting	34	190	3	702	216
responded	34	190	307	702	915
learner	17	43	377	396	354
frameon=false	58	138	494	418	543
keywords	64	185	226	641	683
co-occur	98	297	454	73	639
enjoyed	17	62	364	396	275
arbritrary	3	99	6	663	843
painfully	82	197	100	497	463
m.data	1	19	112	284	855
implementation	38	180	125	525	382
subplot_adjust	58	138	494	642	299
m-files	61	140	159	94	625
hrs	80	197	73	196	217
subdataframe	92	156	65	155	121
hrm	29	28	227	631	589
eastings	33	176	135	617	298
deepest	22	13	497	534	68
hre	22	237	485	740	975
adequate	82	241	291	525	328
day-by-day	23	29	294	94	625
01.01.2011	67	213	95	185	51
nasty	82	231	395	334	327
prefaced	10	118	116	97	999
11025	71	195	213	674	175
cleanly	82	241	378	40	29
mylist	52	12	461	471	622
disguise	38	214	397	756	382
idioms	38	1	291	200	79
idx.shape	52	19	273	284	855
strip()	32	54	109	512	808
libell	43	105	93	53	764
re-plotting	61	46	388	572	214
qpointf	75	117	386	572	370
miserably	28	22	410	566	457
term1	77	292	20	430	227
w+	76	249	286	283	413
w*	11	234	4	562	56
w7	85	276	233	685	858
w3	72	186	25	531	56
projections	33	176	282	617	908
w1	72	186	25	683	756
w0	72	186	25	683	988
w=	60	194	269	606	221
return_inverse=true	19	42	296	121	886
test_data	0	134	349	539	412
csv_read	32	263	420	468	655
unable	29	28	410	161	457
succeeding	98	263	306	155	655
linearlocator	64	44	166	341	184
wf	48	184	153	790	64
we	74	232	246	209	36
spectrum_y	1	274	112	471	881
terms	10	232	17	631	999
wb	76	249	286	283	413
wa	12	279	319	133	272
var_dump	52	19	263	364	265
wn	77	292	20	430	227
#print	47	224	58	424	736
wl	72	102	418	129	756
wk	50	259	277	117	160
wi	72	186	25	683	756
wh	72	186	25	139	756
wv	75	89	317	139	60
wt	78	262	430	204	832
ws	72	102	418	129	93
wr	58	243	240	16	599
wp	74	102	25	122	756
pyarray_data()	55	204	29	790	64
convertible	70	99	421	601	979
projection=	58	155	240	319	285
linkage	16	94	185	293	716
wx	90	38	46	635	810
rectangleselector	6	69	46	572	384
1.3gb	88	283	373	549	236
o.k.	65	291	371	236	345
image.open()	84	219	102	607	427
didactic	35	207	371	205	328
selective	74	230	128	607	353
llcrnrlat=	60	155	240	495	285
exceeds	74	266	485	574	668
ophion's	88	180	55	337	89
.pngs	61	125	175	313	625
sigmoidal	79	23	161	487	620
offloading	55	174	408	537	651
df_mean	98	146	65	155	984
0.1s	88	197	55	337	89
oblivious	10	231	80	197	215
bcoords	75	148	206	73	77
weave.blitz	55	147	422	790	455
np.vectorize()	19	214	422	684	761
drafting	28	115	377	149	275
df1.drop	44	2	181	700	895
there're	29	263	420	468	655
comprehensions	19	12	455	480	806
white-spaces	3	110	420	468	519
__len__	9	109	331	55	386
stacked=true	51	155	195	272	12
np.log2	87	55	201	664	593
0.15	46	221	124	331	435
0.14	46	221	124	331	435
0.17	46	221	151	331	435
0.16	46	221	151	331	435
0.11	46	221	151	331	435
0.10	46	221	124	331	435
0.13	46	221	124	331	435
0.12	46	221	124	331	435
backfilling	3	156	6	354	125
0.19	15	256	61	196	980
0.18	46	221	124	331	435
min_of_neighbors_coords	0	106	295	73	77
applied	74	232	152	98	673
drop=true	44	164	181	700	895
zlim	37	290	494	706	388
aix	35	238	409	187	336
publicly	23	84	69	461	637
launcher	90	15	189	540	818
launches	90	15	189	540	818
repack	86	50	426	611	820
zlib	13	222	379	91	820
blue-green	33	31	443	191	358
air	23	30	77	623	210
aim	28	137	116	525	36
lgrnk	78	56	445	204	500
applies	74	117	152	58	638
aid	68	6	294	233	328
3.10	83	206	178	202	380
property	64	161	331	543	699
pykdtree	55	174	408	90	455
aic	79	23	332	638	11
x.sum()	87	55	493	673	593
x.iloc	52	47	68	290	776
.3f	32	205	346	177	576
popen	81	144	327	147	383
skipping	74	263	497	534	655
paste-able	27	293	83	420	579
1.3.1	85	276	42	681	252
secondary_y	51	136	195	272	740
perform	74	232	37	98	382
v1.10	96	221	408	202	435
441	12	279	488	751	265
caffe	83	84	178	381	467
incorrectly	29	28	306	791	473
np.split	19	42	296	13	886
hierarchies	10	137	291	334	327
hhh	98	12	461	701	68
syntax-wise	82	241	341	573	29
advertising	17	43	377	321	79
vanderplas	34	254	234	302	565
posed	34	118	307	590	216
np.fill()	19	28	227	684	782
possible	82	241	246	209	472
multiindexed	3	156	6	354	125
someting	47	224	459	15	508
chr3r	12	19	162	133	272
.30	98	258	317	796	397
.33	15	281	287	606	10
prescribed	98	146	454	646	868
self.dates	52	0	263	215	288
new3.py	50	145	118	734	679
hispanic	78	93	252	463	690
contact	23	14	35	710	841
..........	68	207	371	205	767
flux_tg	1	57	54	232	591
unified	38	232	291	200	79
stringent	10	227	317	457	812
data.max()	60	194	173	557	221
gods	68	43	377	432	571
mandelbrot	20	119	259	49	845
datetime.datetime.strftime	87	205	493	125	879
short-cut	10	241	172	200	669
non-stationary	79	193	148	98	347
farther	77	13	143	39	589
graphcanvas	6	69	46	572	449
a.combine_first	44	134	158	700	827
average_emission	43	93	82	558	965
visualization	23	6	278	158	625
320	12	267	488	111	132
ax1.grid	60	57	452	642	162
belongs	78	281	37	746	868
board	17	13	143	39	589
marginal	10	23	332	511	239
sort=false	44	175	181	700	895
rnk	11	186	242	683	306
master_ids.csv	22	171	388	534	214
rnn	28	14	267	710	841
quote_none	60	19	162	133	888
progressed	17	62	272	161	746
pylearn2	83	206	178	761	467
boxes	37	31	24	780	138
rnr	98	56	148	673	832
progresses	28	14	267	710	841
png	73	125	248	276	304
glitch	29	28	306	173	473
1.34	15	256	236	196	432
scipy.interpolate.interp1d	53	101	238	720	396
matplotlib.path	81	88	11	739	109
reinterpreting	75	50	10	691	122
method's	9	109	331	594	699
endpoint=true	60	123	173	726	99
.multiply	16	178	333	455	788
pos=	60	155	280	495	910
pos2	72	132	273	73	77
dtype=complex	1	59	41	232	21
pos1	72	132	273	73	77
do-it-yourself	82	241	341	573	669
pyarray_descr	9	204	331	790	64
detecting	29	231	37	429	526
my_new_timestamps	98	146	148	10	66
/	30	259	277	381	588
denied	63	244	283	553	348
beating	17	62	56	282	180
100x1000	71	142	268	738	95
a^{-1}	16	94	462	562	800
172.320	32	51	487	177	244
pose	34	118	307	590	216
find_nearest	52	148	21	284	221
constructive	34	190	307	702	216
phew	65	291	274	205	767
post	27	293	116	420	579
self._cachedrenderer	63	224	58	424	8
takes	88	197	73	58	217
pausing	90	187	108	361	248
obj	9	106	461	594	699
months	80	163	299	723	897
numerator	57	186	8	428	62
obv	29	28	227	209	999
obs	98	146	454	746	639
net.blobs	43	72	68	265	708
reindex_like()	92	185	78	402	130
mathtext.py	30	122	478	159	181
log-scale	37	290	166	706	614
float	70	99	74	332	979
np.r_	19	294	296	359	470
bound	22	266	485	436	668
matplotlib.scatter	64	161	90	78	683
report_date	43	93	82	204	708
pandas.groupby	92	193	78	31	121
capped	78	266	22	574	539
pyobject_call	63	244	283	715	39
axes3d	25	161	208	543	109
pandas-specific	82	241	378	573	29
allways	29	13	143	39	589
strangely	29	28	306	791	473
undersand	17	43	227	236	472
opcodes	55	85	71	349	431
memory-intensive	82	241	100	497	463
mutates	9	220	158	476	757
people	34	190	307	321	275
2.68530063	57	148	317	141	714
way	82	241	378	573	29
wav	84	192	365	676	946
wat	74	232	37	110	161
was	29	28	258	791	874
decoded	84	192	123	607	14
matlplotlib	90	136	175	626	847
becoming	17	231	395	458	463
converse	82	151	106	631	762
a+c	11	234	4	215	99
decodes	32	16	382	260	405
groupby-filter	19	214	296	13	512
true	98	220	317	605	602
bypassing	38	50	341	691	526
03:39	67	67	256	133	272
high-quality	28	6	278	761	548
f_signal	11	275	242	129	292
id1s	78	93	243	796	984
colorsys	84	6	123	607	427
anew	74	171	246	190	629
dataframe.reset_index()	3	156	78	354	125
emit	22	246	294	595	112
promises	82	241	422	537	219
computing	28	50	185	98	347
))=	11	234	4	770	56
));	1	123	173	50	371
)):	47	0	303	645	371
))'	63	201	180	50	371
lumped	40	297	154	680	678
promised	82	190	307	590	812
))"	93	123	170	50	385
)))	11	201	180	50	371
uz_0	0	46	345	599	383
vars()	9	109	397	594	699
temp.txt	76	199	30	283	754
commented-out	0	214	295	684	231
numpy.int32	70	59	74	332	286
downward	33	31	443	191	725
truncate	74	263	37	788	979
welcome	68	190	465	451	343
notepad	73	16	190	477	818
weirdest	29	231	389	716	473
belive	82	180	274	497	874
concurrent	22	85	71	349	431
))`	1	123	173	50	371
configs	22	171	80	165	36
cpdef	0	204	29	790	64
1-mat	16	274	349	539	981
pandas.dataframe.to_csv	76	54	382	260	698
))]	52	201	180	50	371
rownumber	78	93	243	390	965
"])`	43	17	223	4	567
necessitates	82	50	341	691	305
pd.np.nan	43	47	68	290	708
elementtree.pyc	50	145	225	168	204
precedent	83	206	234	302	564
df_org	3	93	65	587	984
macosx	73	38	134	635	810
brownian	28	14	267	710	841
grateful	68	190	465	451	343
certainly	82	241	395	497	463
factories	38	6	291	732	389
dtype=none	76	54	322	51	698
absolutly	29	28	306	209	473
confirmed_settings	78	93	243	235	984
pythonbrew	83	206	211	197	380
atribute	74	64	386	616	699
pyarray_size	9	204	295	790	64
compensate	10	151	485	207	668
jvm	55	1	69	317	354
division	57	89	8	428	62
predicate	75	76	317	605	135
supported	46	99	152	202	638
_configtest.exe	67	244	95	24	323
.bmp	73	125	248	276	304
entries	98	146	454	587	984
x.strip()	43	47	493	76	593
np.maximum	87	214	201	13	608
perceived	20	119	259	757	786
presented	29	137	459	15	421
jonrsharpe	35	238	326	187	336
pyeval_restorethread	63	244	283	352	39
discrete	77	292	20	511	762
cunningham's	35	238	187	187	308
.ix()	92	104	23	733	92
obfuscation	10	231	8	788	215
three-dimensional	71	64	268	519	684
']]`	43	72	231	265	708
initializes	74	117	386	58	238
initializer	9	61	397	44	807
eafp	10	173	234	500	215
affiliation	43	93	82	463	965
boxplot_stats	74	232	37	110	854
initialized	74	171	386	436	359
kinetic	79	14	114	710	210
curse	83	1	80	202	564
appear	29	28	306	122	851
numpy.unique()	19	42	187	13	512
hand-made	74	137	459	626	382
havoc	29	231	143	458	961
uniform	77	151	339	511	340
wolfe	63	22	109	566	13
douban_info	43	72	93	265	260
qscintilla	83	128	178	197	482
sequential	74	50	182	587	36
illustrations	73	125	248	276	304
axes.linewidth	58	44	166	764	683
appeal	82	190	116	525	328
']])	43	47	231	265	708
math.factorial	93	89	201	664	60
5pm	80	163	254	723	897
dougal's	35	238	187	187	308
6,000	88	160	220	80	54
currentarray	47	224	30	424	736
incoming	23	85	365	676	257
coerced	70	99	421	601	979
do_plot	0	275	226	684	231
coerces	70	99	421	332	979
mainloop	90	69	46	599	384
poisson	79	23	332	511	239
first_name	43	67	223	145	567
usually	10	232	246	209	36
listofdfs	52	0	160	284	855
convertor	84	192	329	607	519
ipython-qtconsole	90	15	189	540	383
toarray	16	94	333	455	788
applymap()	92	156	78	105	971
npyio.py	50	145	225	27	429
r-style	51	136	175	272	847
f.pyx	30	170	244	138	30
.add	44	164	181	700	827
fig.clear()	6	46	345	418	356
stings	32	297	420	601	898
penalized	79	227	106	761	970
a.ndim	1	274	112	677	442
todayorders	75	12	461	471	881
prove	10	137	395	500	472
borked	30	171	80	165	568
selects	74	117	152	58	602
sklearn-pandas	38	26	354	135	816
5x5x5	71	64	268	674	95
131gb	22	283	373	549	236
substraction	75	146	154	98	62
graphic	61	125	175	158	304
isapprox	16	214	125	150	800
cas	34	227	116	97	142
car	78	150	132	149	604
subfolder	30	261	486	247	344
cat	47	200	93	584	423
mycolumn	43	72	93	265	332
ineffecient	22	283	100	497	463
hardest	17	43	143	334	327
renders	73	125	248	122	304
can	74	232	246	209	472
cam	23	84	374	429	257
cal	43	35	68	727	852
cab	1	178	473	743	884
cae	30	206	178	540	960
cad	23	125	329	110	519
heart	17	13	143	39	589
ax.bbox	6	44	345	418	373
pd.datetime	80	201	284	727	24
noobie	17	43	377	451	98
topic	34	173	247	97	216
heard	17	62	88	161	874
0's	71	146	454	680	509
phrase	78	118	163	253	798
unphysical	61	176	282	623	210
rescaling	37	290	494	207	388
eigvalsh	16	94	462	782	800
comma-delimited	86	222	329	385	519
redundancy	82	241	106	334	655
,.	15	284	256	606	10
,,	12	279	162	133	888
pyspark	83	84	376	761	126
freezes	90	187	108	361	248
.sum()	87	164	181	76	419
freezed	90	187	108	361	248
,?	32	51	423	151	244
stats.norm.pdf	11	275	4	557	830
x.toarray()	16	222	333	455	788
a.flatten()	1	57	112	232	726
residues	72	281	358	425	11
nearest-neighbor	53	288	339	720	716
pasting	27	293	305	420	188
deviates	77	23	332	511	239
na_rep	76	185	322	51	322
myfft	11	194	269	485	830
int64's	80	35	245	781	920
accelerated	55	174	408	90	651
object's	9	109	331	594	386
deactivated	30	170	244	165	960
cross-spectral	79	292	20	430	547
displayed	37	31	175	122	508
consulting	34	254	247	97	746
np.einsum()	19	214	125	756	382
130.81	77	266	485	574	227
np.cumsum	87	42	296	13	886
statistical	28	23	332	761	866
odeint	79	10	324	566	13
prune=	58	44	452	341	599
mixup	65	291	258	791	887
os's	22	85	69	128	246
forma	3	116	6	354	342
opencv's	84	230	128	166	694
menus	90	69	32	624	991
summands	10	227	106	631	970
vicinity	99	288	339	293	744
make_df	9	214	397	684	231
yaml	86	222	275	260	405
ntri	71	64	268	305	981
pygame	84	230	128	607	450
np.exp()	0	275	295	684	231
easly	74	232	80	197	854
pass-by-value	38	1	479	321	354
x-mean	11	234	242	531	56
1954	80	163	284	723	72
pandas.plot()	6	46	345	543	481
tails	77	23	332	511	531
1950	80	163	254	723	72
1953	80	163	254	723	72
regplot	51	136	24	272	847
ndindex	19	294	296	291	601
unused-command-line-argument-hard-error-in-future	13	170	50	554	174
scipy.cdf()	68	50	341	756	141
january	80	163	254	723	72
.draw()	6	46	345	599	356
kern	34	173	326	187	142
intrigued	17	43	377	236	803
django-celery	23	62	88	39	275
unselected	74	146	317	122	509
mailling	34	173	35	302	142
domain	77	292	20	430	547
hd5f	86	222	426	611	820
0.125	15	211	495	606	10
arg2	0	224	58	424	8
.value_counts	44	164	181	700	827
subprocess.call	81	15	327	147	383
0.123	15	211	263	364	265
pixel's	71	195	51	592	744
happen	29	28	227	209	568
pills	99	176	70	295	563
album	61	195	175	757	786
shadowing	81	237	397	436	864
looking	29	137	459	209	472
minorticks	37	290	175	706	76
oldval	19	57	187	13	599
iteritems()	92	12	455	47	806
makeing	37	31	467	122	851
navigating	23	1	294	370	79
side-by-side	37	136	175	22	851
random.choice	93	123	193	628	361
carr	70	204	74	790	64
cars	78	150	445	479	604
args	0	275	226	641	8
argv	81	237	397	739	183
argh	65	291	258	407	245
inputting	74	107	386	110	141
carl	78	200	430	479	423
arga	52	148	160	284	776
obligation	34	190	307	702	812
card	23	84	69	149	423
care	10	232	246	209	305
zig-zag	33	281	287	191	744
prettyprint	64	99	306	202	699
selections	3	104	23	733	154
p_id	43	130	82	558	377
british	78	150	445	479	897
carsten	17	291	274	236	345
gi.repository	83	206	178	202	380
as_strided()	19	294	296	231	601
type()	9	106	331	684	231
p_it	63	83	283	715	286
libatlas-base-dev	13	170	50	104	174
get_figure()	29	46	196	599	457
xk	11	234	242	531	56
xi	72	102	418	129	910
xn	72	4	431	516	624
xl	47	224	30	283	736
xm	72	4	431	516	624
xb	36	4	418	516	756
xc	72	275	295	476	292
xa	36	4	418	516	756
xf	1	178	112	453	726
cpus	55	30	480	785	431
xd	65	291	258	236	345
xe	96	45	264	650	634
xz	33	176	135	617	908
axarr	6	158	494	324	543
xx	47	102	418	129	756
xy	33	102	135	617	908
directly	74	232	246	110	629
x}	87	52	180	215	985
accelerometry	23	14	294	39	257
xs	60	102	418	129	910
message	63	83	283	715	39
drove	17	231	395	659	571
xv	1	19	160	284	855
longitude-latitude	99	288	11	646	935
xt	1	219	112	401	726
v-1	11	234	4	215	19
ax.plot_surface	60	102	240	193	910
weekdaylocator	64	6	166	78	184
checked	29	28	272	791	905
figaspect	58	243	18	16	721
f_cont	98	297	497	534	77
crossings	77	151	97	430	762
refreshes	90	69	46	572	214
_some_	38	6	291	525	450
datalist	70	99	30	601	881
checker	75	214	424	512	382
x^	11	234	242	531	56
yip	65	291	258	407	887
milage	88	180	55	768	89
index=none	76	199	322	51	698
x*	11	234	242	531	56
x+	47	102	493	76	591
x-	37	290	443	391	388
cup	78	150	250	149	626
datamag	52	148	162	141	221
df1.a	43	93	82	558	965
indays	43	34	223	4	567
x%	20	31	259	757	786
textscan	47	51	411	703	392
.copy()	52	220	158	476	757
x=	60	155	240	495	12
df1.t	52	0	263	290	855
x3	72	4	431	516	624
x0	72	4	418	516	292
x1	72	4	431	516	624
x6	72	4	431	516	624
x7	72	4	431	516	624
patch3dcollection	25	161	208	543	109
x5	72	4	431	516	624
100x200	84	195	213	674	353
browsed	17	62	247	161	746
']))`	43	47	493	265	708
#eeefff	20	119	259	42	475
roundtrip	86	222	426	691	820
therfore	75	184	158	476	757
ftp	86	84	376	184	127
happy	68	190	377	451	803
decompose	28	94	462	744	610
visit_names	43	72	68	265	708
troublesome	29	28	80	209	444
spectra	77	292	20	430	547
slap	29	13	143	39	214
%in%	38	214	125	703	392
distorted	61	31	467	122	303
slab	99	288	114	646	563
numerics	38	1	8	756	979
a\b	79	10	462	487	610
-bitalchemist	65	291	258	407	887
overcoming	10	227	17	654	246
data_list	22	297	461	534	68
n=500	88	197	55	337	89
forming	74	50	386	534	359
vectorizes	40	214	154	231	219
vectorizer	16	26	354	135	816
rationals	16	94	8	744	651
set_dashes	64	224	208	424	664
santiago	85	30	480	685	380
price	80	116	299	581	67
get_children()	6	161	90	543	481
toplevel	6	69	46	380	384
.grouper	43	164	93	204	832
rationale	10	231	17	432	571
successive	74	232	497	534	616
]	52	0	303	284	640
processline	87	134	295	210	827
forever	88	197	73	361	217
pyarrayobject*	9	204	29	790	64
achive	82	137	227	432	472
pool.imap	19	184	153	260	807
multiprocessor	55	85	71	349	431
row-oriented	86	222	426	611	820
duplication	3	50	182	548	655
unittests	55	227	80	457	564
numpy.set_printoptions	57	89	452	171	290
'"'`	76	185	322	51	698
keystrokes	38	1	291	317	628
german	32	116	430	482	898
24x24	71	195	213	674	95
bigfile.csv	76	199	286	177	413
fifty	88	160	73	80	217
2095	67	213	95	185	51
-bravo	35	207	371	205	336
.imshow()	64	46	90	272	481
whatsnew	46	221	124	331	435
2099	67	213	95	185	51
2098	67	213	95	185	51
fifth	98	263	454	796	428
.pivot	44	164	181	700	895
pivots	3	156	6	354	125
dougal	35	238	326	187	336
upgrade	13	221	151	104	284
scipy.optimize.root	79	22	324	515	13
paramdata	43	72	93	265	708
ax.lines	6	161	90	485	109
mainthread	90	46	345	44	112
routing	28	14	267	710	841
overwritten	29	171	388	791	673
scipy.ndimage.generic_filter	19	101	428	13	512
fmatrix	52	132	206	284	77
series.astype()	92	185	78	105	934
scipy.misc	81	88	110	739	183
network()	9	204	295	684	64
np.repeat	19	294	296	291	470
labelpad	58	44	166	341	683
truly	82	232	246	209	472
cannot	29	28	410	209	457
symmetrically	37	31	467	207	449
gensim	83	26	354	135	816
deprecate	17	1	124	604	435
pydot	83	206	178	197	564
ad-hoc	38	241	291	525	669
regulargridinterpolator	53	101	238	720	396
df_list	44	2	260	33	537
keyed	3	297	280	776	903
pydoc	81	109	455	404	782
collections.deque	19	12	455	480	806
to_dict	92	156	78	183	322
unallocated	22	61	153	358	282
quickie	28	137	459	525	669
norm=norm	60	155	240	193	845
datetime.strptime	92	35	245	125	879
__main__.node	48	52	52	71	437
physically	10	151	106	631	999
re-sample	77	29	339	77	931
numpy.ndarray()	9	83	383	594	979
hell	17	291	274	236	345
sport	78	150	252	479	604
ipywidgets	38	6	278	158	450
n-array	71	64	10	519	684
palette	20	119	259	49	296
last_vec	22	61	388	358	282
myvalues	60	155	240	495	437
figsize()	64	171	306	791	370
jdata.keys()	52	12	461	471	806
0.16.2	46	221	151	157	621
\u0001	32	16	190	0	5
0.16.0	46	221	151	331	621
deques	22	85	71	349	431
vectorise	82	214	341	537	219
lays	74	184	153	122	161
facepalm	65	291	258	236	887
qmainwindow	90	69	46	380	384
blame	65	231	258	236	345
df.reset_index()	44	2	181	700	446
9000	88	142	220	80	106
.lott	65	291	258	407	887
pixels	84	195	51	674	353
dataframe.eval	92	214	78	105	971
np.e	11	55	201	562	743
.martinot	35	291	35	236	142
installation	13	128	5	104	482
reinterpreted	57	100	325	788	22
varname	47	110	30	283	754
pertain	34	173	247	97	328
enabling	38	1	143	596	526
opcode	55	85	71	349	431
embedding	90	69	46	380	384
psycopg2	86	68	119	478	126
0.16.x	46	221	124	202	435
fromiter	19	294	455	480	806
overview	34	254	234	302	565
deviating	10	227	106	631	970
scipy.ndimage.measurements.center_of_mass	33	288	443	191	683
set_levels	92	156	78	763	971
2pi	33	194	242	430	725
_points_	37	31	443	780	964
lpsolve	38	214	29	202	564
analysis.py	51	136	175	122	847
questionid	44	93	82	204	832
site.cfg.example	30	162	486	247	344
hour_list	60	123	173	557	162
2pm	80	163	254	723	897
informed	10	231	17	590	999
homogenous	75	99	10	663	843
ax.hist()	51	161	208	543	481
linguistic	23	43	163	482	798
value's	98	103	97	746	744
1000th	98	266	114	574	931
cgal	38	6	291	317	450
matplotlib.pyplot.imread	84	192	123	607	405
sourceforge.net	83	206	178	197	467
n=100000	88	197	55	337	89
ruby	38	1	479	149	275
these	74	232	159	209	36
accommodating	75	227	341	150	382
trick	29	28	274	573	669
winsorize	55	214	341	756	782
near-duplicate	92	134	65	155	125
eig	16	94	462	782	800
sub-processes	22	85	71	349	807
person's	78	150	445	479	604
2015-10-16	67	213	95	185	51
modulename	81	88	110	739	584
orientation	33	31	443	617	449
zenith	33	176	135	617	908
00:19	67	260	12	372	958
sys.float_info.max	93	89	193	559	361
utils	50	259	277	106	842
agnostic	10	241	17	500	797
canceled	29	171	306	361	214
yj	11	234	4	129	743
loop's	82	180	100	537	463
asmatrix	9	294	295	231	782
edification	17	190	116	590	275
numpy.ndarray.flatten	19	294	296	278	782
key_mat	88	283	373	469	778
dataframegroupby	92	156	383	616	477
assure	29	28	246	209	472
~100	88	160	220	80	54
insidious	10	241	395	236	812
intelligently	74	117	152	458	638
figuring	17	62	88	161	803
followers	78	150	445	479	604
lite	74	137	27	15	421
dinamically	61	136	175	22	851
circulant	16	94	462	782	659
plt.polar	58	44	208	777	481
numerals	32	110	420	482	898
closest	98	288	185	293	868
superlu	9	109	331	178	386
na_values	76	185	322	51	189
00:15	67	260	12	372	958
np.meshgrid	1	102	296	291	910
favorites	23	84	69	317	866
e1cx	75	148	206	476	681
data_frame	44	134	260	183	188
validate	28	227	317	457	953
yf	19	294	295	453	782
']```	43	72	68	265	708
quartz	83	38	178	635	810
complained	29	28	410	791	473
nx3	71	64	268	519	684
~10%	88	180	55	337	89
severe	82	180	100	497	246
breeze	35	207	274	205	767
extensible	82	241	291	573	628
pool.apply_async	87	275	295	673	881
99.999	29	99	325	788	979
mahotas	84	230	123	607	427
77	12	279	488	751	465
2.csv	47	110	30	283	754
transmitting	23	14	365	676	257
pd.rolling_sum	44	134	447	700	827
valuable	68	190	465	205	343
noaa	61	176	77	623	860
unpack=true	76	199	286	51	413
dataframe()	92	134	78	105	699
correspondences	3	297	163	746	868
ninja	17	291	371	236	345
np.flatten	19	294	296	231	512
data_files	30	162	244	165	181
item_ids	3	297	454	796	984
mirrored	77	292	20	430	547
yt	64	6	452	525	508
header_names	44	134	260	290	260
*sin	11	234	242	531	56
rules	10	227	17	200	135
ruler	37	31	443	780	536
repetitions	98	297	454	587	639
pandas.cut()	57	89	63	31	780
numpy.savetxt	76	54	382	260	698
opencv2	84	230	128	607	353
opencv3	83	206	178	553	380
bare_data.plot	58	44	452	642	162
listening	90	69	32	624	112
culprits	29	227	80	197	905
recipient	23	110	329	676	519
ruled	29	62	272	173	555
utterances	3	286	163	85	798
pd.io.parsers.read_csv	76	199	286	51	987
collective	28	14	377	179	275
miracle	35	291	274	205	767
rolling_window	19	193	125	614	121
sundays	80	163	254	723	897
t	72	186	25	129	756
groupby-sum	3	50	6	354	125
multiplicative	16	94	462	782	800
logformatter	64	44	166	341	184
cisco	83	84	376	184	590
nlat	72	102	418	305	175
row-column	3	297	454	587	984
unraveling	27	263	497	534	953
viral	23	14	365	623	257
array-like	75	106	421	594	699
trisurf	61	136	208	626	847
views.py	30	162	27	595	127
replotted	37	31	388	572	214
wheat	78	200	132	42	604
interleaving	3	197	73	354	834
ooops	65	291	258	407	887
np.percentile()	51	185	226	684	231
uneasy	17	43	395	334	327
ngram	23	150	430	479	604
leftover	65	171	258	791	284
16:37	67	213	95	185	51
np.multiply	1	178	201	562	726
throw	29	28	389	716	473
3.4.2	85	276	42	685	621
src	50	259	277	381	842
3.4.0	85	276	42	685	621
3.4.1	85	276	42	685	621
plt.fill	61	102	418	516	910
0.012207	15	157	64	296	837
supervised	28	26	354	135	816
\exp	11	234	242	531	56
wold	68	207	465	432	343
sry	65	291	258	407	887
-keepitreal	65	118	116	97	328
decimation	77	151	428	207	353
8.54	15	211	61	364	265
inclusion	28	227	37	525	868
numerically	79	10	324	487	610
inverting	16	94	462	782	800
loc	92	104	23	733	154
log	89	290	207	686	614
lod	57	89	106	654	194
opengl	38	6	278	158	450
removing	74	263	388	548	526
lon	33	176	135	617	298
lol	65	291	258	236	345
operator.itemgetter	19	12	455	480	806
uspind	72	130	273	174	792
binarization	28	151	354	135	531
lot	17	207	274	205	767
`)`	32	263	420	468	768
transitioning	17	43	377	396	803
contour3d()	53	6	278	158	450
tstout	52	19	263	284	855
shapefiles	23	176	278	158	293
scikitlearn	38	26	354	135	816
argmin	19	42	296	13	608
stanford	28	14	267	710	841
thicks	37	290	443	207	668
quantitatively	28	151	106	631	970
`))	1	274	112	305	981
fdata	43	72	298	378	708
))"`	93	123	173	50	361
get_sample_data	81	144	102	607	427
multiplications	16	94	462	150	800
replicable	27	137	403	420	579
reliability	28	151	106	321	970
textfilereader	76	54	322	183	824
hospitals	78	56	445	479	604
statuses	80	56	299	41	67
numpy-1.8	80	35	245	781	920
numpy-1.9	96	206	408	197	455
brick-wall	77	292	428	430	547
coincidental	98	146	317	605	602
3-d	71	64	268	519	684
wxbitmap	84	204	29	790	64
suites	28	14	69	710	841
open-ended	17	43	395	590	812
full_output	0	275	226	129	292
input_file	76	199	286	283	736
.map()	92	156	78	105	971
drift	77	151	106	429	303
tdms	86	110	329	107	519
10:20	67	260	284	133	272
peak	77	292	20	430	227
suited	82	241	291	497	79
fiscal	80	163	299	326	897
assert	87	227	198	457	985
lookups	82	50	341	776	903
3-6	78	281	254	796	66
3-5	88	160	220	80	54
3-4	88	197	73	80	217
$30	78	56	445	41	377
seberg	35	238	326	187	511
nxk	71	64	268	519	684
serializes	86	222	329	260	519
tfidftransformer	16	26	354	135	816
outlining	61	31	128	212	138
completition	90	15	189	540	818
vorticity	35	115	409	631	336
skeleton	27	137	403	15	421
codification	32	16	395	601	444
ldata	75	106	421	471	903
publish	23	150	35	110	127
4-fold	57	266	8	654	970
newbie	17	43	377	451	98
bug-fix	46	221	124	331	435
-e	13	170	474	481	174
-d	47	224	58	366	588
-g	50	145	133	117	33
-f	30	170	327	481	174
-a	30	147	327	366	383
-c	81	5	244	481	30
-b	47	51	487	366	244
-m	30	70	244	481	174
-l	30	259	244	165	817
-o	50	145	133	117	30
-n	47	15	327	366	174
-i	30	259	133	366	30
-h	30	170	244	481	174
-k	11	234	4	215	56
plt.errorbar	51	155	195	272	926
-u	13	128	50	481	174
3-level	3	156	6	354	125
-w	30	244	327	366	383
self.end	52	19	263	364	265
-q	30	5	58	366	588
-p	30	259	244	366	174
rstrip	32	54	109	512	808
-r	30	170	244	481	174
dominated	89	180	207	261	90
-y	11	170	50	366	174
-x	11	234	242	366	56
nonetype	63	83	383	616	286
-z	11	234	4	531	56
attribution	34	115	35	20	142
link-only	34	141	3	709	994
axesgrid	64	6	90	391	683
splits	74	117	6	58	953
generalised	79	214	125	150	382
numpy.add	0	275	295	684	231
--	29	28	246	209	472
louis	30	259	430	381	588
-5	60	194	269	65	221
-4	52	194	269	65	253
-7	15	211	269	215	99
-6	11	194	269	65	212
-1	52	0	263	284	855
-0	57	89	8	770	907
-3	52	0	263	215	855
-2	52	194	269	65	221
idx+1	52	52	68	290	985
maximim	57	100	325	86	22
cali_time	52	0	263	284	855
->	47	224	58	424	562
-9	11	211	370	606	743
-8	15	211	269	606	212
multiplelocator	58	44	166	341	184
x_coord	33	103	135	617	744
sinusoid	77	292	20	430	227
value	98	146	317	746	868
canvas.get_tk_widget()	6	46	345	418	356
test-set	3	290	6	706	905
cmap=	20	268	320	397	845
narray	84	299	10	607	684
nano	80	197	73	77	515
induce	10	151	8	654	970
thickness	61	31	24	212	276
nans	3	146	424	414	509
reorder_levels	92	156	182	763	971
relabeled	3	110	243	712	984
loose	74	232	17	548	305
modify	74	232	37	190	629
cmaps	25	119	320	137	296
matplotlib.backends.backend_tkagg	81	162	110	247	584
aligment	29	263	246	209	305
advisable	82	241	246	500	215
standar	77	281	185	10	347
data_in	0	204	295	790	64
fired	90	187	108	624	112
geoseries	99	288	185	293	868
invalidate	22	171	383	691	477
band-pass	77	292	428	430	547
family	64	166	134	764	862
d.apply	87	55	493	76	593
model_order	60	102	418	65	221
0.6745	77	23	332	10	11
aimed	34	173	17	97	79
whoever	34	247	35	233	142
vey	65	207	371	205	767
perceptron	28	26	354	135	816
read-only	9	184	153	691	282
khan	34	115	35	302	142
newcolumn	1	134	349	556	622
probabilities	79	23	332	511	239
daily_ret	52	148	273	471	622
contains	74	110	37	746	868
build-dep	13	128	50	104	174
openprice	98	146	317	605	602
ax.grid()	64	161	90	543	481
-0500	67	213	95	185	51
np.add	1	57	201	232	726
mysterious	17	231	395	335	327
2012-06-08	67	213	95	185	51
entails	10	137	17	525	328
containg	3	110	6	601	519
subplotspec	6	161	331	543	481
yuck	68	115	465	432	343
time.time()	93	35	245	781	920
stylistic	10	241	17	500	215
stucked	17	62	88	161	803
yrend	44	164	181	348	987
excuse	68	43	377	451	98
next()	6	12	497	44	807
df.csv	76	199	30	283	754
impulse	77	292	20	430	547
mounted	23	176	128	623	293
.searchsorted	52	0	68	290	708
event.ind	98	148	280	73	77
dataframe.convert_objects	92	99	275	183	934
reallocation	82	184	153	358	387
offender	29	231	389	716	669
a+1	11	234	242	531	56
offended	65	190	307	32	216
__file__=	50	37	277	130	469
veh	78	258	26	155	377
df.asfreq	87	149	447	460	612
fromfunc	19	214	140	684	782
fig.dpi	58	243	18	16	721
history	34	171	306	581	161
~5000	88	160	220	618	54
user_input	43	201	309	727	987
2012-01-31	80	163	254	723	72
numpy.asfortranarray	19	184	295	453	122
panelols	92	156	78	761	971
cows	34	14	77	149	275
20gb	88	182	373	549	236
magenta	20	119	259	757	786
densevector	75	106	389	335	979
species	78	250	445	479	604
motion_notify_event	6	69	32	624	112
ecmwf	80	29	77	723	897
acroread	73	125	248	276	304
np.log10	87	55	201	664	101
_two_	75	19	10	66	650
divfactor	92	193	148	98	347
cirlce	37	31	443	207	449
lower-left	33	138	443	191	964
nbins=1000	88	180	55	337	89
sneak	29	62	143	458	874
parse_dates={	43	201	309	2	987
*****	35	238	187	187	308
median_price	43	155	240	495	285
unlink	13	170	50	104	485
-dynamiclib	30	170	244	165	30
np.delete()	19	294	158	47	68
2015-03-06	67	260	95	133	272
np.log1p	87	55	201	664	743
dropcols	3	297	6	587	125
negligible	82	180	55	537	246
microseconds	80	197	73	781	920
dream	38	1	479	317	275
uninstall	13	128	50	104	485
y+	33	102	418	129	910
y-	33	102	418	42	995
help	68	207	465	432	343
hierarchy	3	232	182	663	370
bicg	16	220	198	457	782
tk()	6	46	345	572	889
fft	77	292	20	430	547
sooo	17	207	274	205	767
soon	46	171	104	604	214
~10x	88	180	55	337	89
held	74	232	386	691	161
y=	60	155	240	495	12
ffi	55	1	29	202	564
y1	72	4	431	516	624
fff	43	105	93	145	764
y3	72	4	431	516	624
y2	72	4	431	516	624
y5	72	4	431	516	624
y4	72	4	431	516	624
clusterize	3	26	6	761	854
y6	72	4	431	516	624
year-month-day	80	35	245	781	410
sgdclassifier	28	26	354	135	816
selenium	23	84	119	478	127
strpdate2num	32	35	245	560	879
gaussian_kde()	79	23	140	511	239
tz_localize	92	285	86	781	920
team	78	150	445	479	604
convolve2d	53	101	125	231	782
deformation	61	176	282	623	908
md5	88	100	163	86	22
pkgs	30	259	478	159	960
yi	72	102	418	129	910
cgi-bin	30	162	478	159	960
24*60	12	279	319	528	465
ym	72	148	273	73	77
yo	29	28	227	557	472
yn	72	4	431	516	624
ya	36	291	258	407	887
yc	72	19	52	556	764
yb	36	148	273	73	77
ye	47	102	418	129	910
yd	11	234	418	129	591
yg	60	102	418	193	910
anticipated	29	28	306	791	345
yy	1	102	418	129	298
yx	1	19	112	284	726
parse	86	54	275	601	444
yz	61	176	282	617	908
y}	60	102	240	42	995
you've	27	28	306	791	472
quiverkey	25	161	208	543	109
yp	60	102	418	129	910
ys	72	102	418	129	910
yr	47	200	93	463	341
numpy.logical_not	19	42	198	113	714
yv	1	19	112	284	855
slicker	82	241	378	573	29
solves	35	238	116	173	336
ifs	27	137	305	457	905
pd.show_versions()	27	293	202	420	502
occasions	17	43	377	321	275
1-by-28-by-28	84	195	51	592	684
iff	89	186	25	683	306
stopped	22	187	108	361	248
y_	72	275	418	129	292
stop=stop	87	51	487	177	244
positioned	37	31	443	780	851
toordinal	63	105	383	616	477
sketched	82	137	459	15	421
y-coords	99	281	443	646	744
numpy.sin	93	55	201	664	361
dominates	88	180	100	537	89
unnatural	10	43	395	200	650
surrounded	99	263	420	468	768
douglas	35	207	371	205	336
.applymap	87	47	493	76	593
hayden	35	238	409	187	336
9:10	12	52	162	133	437
flattening	40	50	182	231	678
2.3.1	85	276	42	685	621
4.3.2	83	170	178	197	482
index_col=	76	199	322	51	189
issue	29	231	359	173	208
nzentries	1	19	112	284	19
reca	52	220	158	476	757
recd	78	56	445	204	832
azim	33	102	28	254	996
labs	23	14	267	149	275
reason	29	231	17	209	473
recs	3	297	454	587	36
rect	58	138	265	641	683
opps	65	291	258	407	887
launch	90	15	189	540	818
np.isscalar	0	106	295	684	231
semilogx	51	136	208	272	614
semilogy	51	136	208	272	847
exponentially	7	266	148	98	347
1000*1000	88	142	213	674	95
y-tick	37	290	443	780	76
assign	74	232	37	190	629
c_0327	43	72	68	290	708
arsenal	17	13	143	458	118
acmnj	67	213	95	185	51
norm=	25	119	320	193	845
repmat	19	294	296	291	601
prohibitively	82	50	100	497	463
maple	79	10	324	744	392
py27-matplotlib	13	170	50	104	485
guaranteeing	40	232	182	548	305
pandoc	30	170	244	91	383
wonderful	68	207	274	205	767
zeromq	23	85	294	349	431
scheme	28	151	106	525	762
banana	78	200	223	584	804
schema	86	68	119	478	662
coordinate-system	33	281	443	646	995
selling	80	116	215	581	434
eurusd15.csv	76	199	286	51	987
k=1000	88	197	55	139	89
lighttable	90	15	189	226	818
ncl	38	6	278	317	450
signaling	63	83	389	716	509
x.dot	16	55	462	562	800
authors	34	173	35	321	142
norms	16	178	462	150	800
memory-hungry	82	241	341	497	463
df.itertuples()	52	12	497	47	68
matplotlib.backends.backend_pdf	73	125	248	276	304
{-1	89	186	207	683	306
pyarray_new	9	204	29	790	64
anticipate	82	231	395	497	568
rolling_std	79	193	121	614	347
upsampling	80	29	447	77	612
4a-2b	11	234	242	531	56
x.todense()	16	94	333	36	788
3-day	80	29	299	77	931
2x2x2	71	64	268	738	95
urgently	37	31	467	780	851
df.b.isnull()	43	52	68	290	985
np.meshgrid()	75	294	10	231	512
quote_nonnumeric	47	19	162	133	888
forward-backward	79	101	428	166	547
crossfilter	23	29	294	94	347
ndvi	78	250	301	520	995
cumbersome	82	241	378	334	327
constructions	38	227	159	200	650
np.fft.fftshift	19	42	296	13	512
setp	58	44	90	418	890
on-going	34	173	359	604	208
test2.py	50	267	118	734	679
loadmat	86	222	382	260	478
argument's	9	109	331	594	386
experienced	17	43	377	396	803
select_as_multiple	3	68	119	478	126
textcoords=	58	138	265	651	224
macd	77	136	63	626	780
experiences	68	62	88	432	571
alko	35	207	371	205	336
draw_networkx_nodes	25	161	208	543	481
mach	61	151	282	646	762
5-4	15	211	162	606	212
y_true	72	26	349	539	412
5-6	88	197	73	574	217
5-1	43	47	231	204	708
noone	34	190	307	590	215
popularity	34	150	191	479	142
5-9	98	281	162	796	212
unreasonable	10	151	395	497	463
unreasonably	88	180	100	497	463
2.08	15	211	64	364	265
m*m	16	94	462	150	800
2.05	11	211	4	606	743
scilab	38	1	479	317	392
numpy.kron	16	178	462	150	800
2.00	15	211	236	514	980
2.01	15	194	269	606	212
2.03	15	211	61	606	212
chebyshev	79	10	324	487	610
humid	78	130	430	174	624
flicker	90	187	108	624	248
registers	9	85	386	691	370
matrix-vector	16	94	462	150	800
pandas.io.parsers.read_csv	76	185	322	641	444
tick_size	77	194	148	141	221
ipythons	22	171	80	209	905
paranoid	10	43	395	500	215
chiquita	78	17	223	4	567
assertion	63	83	283	532	39
randy	35	207	409	205	336
matplotlib.use	73	38	18	635	810
4-dimensional	71	64	268	519	938
devwls	72	200	252	550	888
regex=r	76	51	487	151	244
dominant	98	292	363	141	397
fundementally	10	231	246	631	999
ne.evaluate	87	164	181	700	612
df.info	27	110	202	155	508
h5file	86	222	6	110	161
y.ravel()	1	57	112	232	470
alexander	35	207	409	187	336
0-axis	40	64	154	231	981
catches	29	117	389	58	112
ipython3	83	15	189	226	818
ipython2	81	15	189	540	383
model_data	52	34	273	4	567
badge	34	190	307	702	915
alteration	27	28	116	420	328
recommendations	68	190	465	432	197
2.7.9	85	276	42	685	621
re-work	27	137	246	190	629
surpass	74	180	100	748	246
readshapefile	64	6	208	158	854
macpython	83	206	211	197	380
feature_name	78	93	82	145	965
polymorphic	38	109	397	436	354
moving_average	11	234	4	664	743
memmaped	75	184	153	691	122
speed-wise	82	180	341	537	219
obfuscate	10	151	106	631	246
ax.grid	58	112	240	642	599
circumvents	22	50	341	691	305
conditions	3	227	317	605	602
a_{i	72	186	25	683	306
statistically	28	151	106	638	970
setup.cfg.template	30	122	478	159	181
numer	29	263	306	680	981
range_name_list	52	34	273	284	622
invisible	37	31	24	780	851
scipy.misc.comb	16	214	295	562	726
linestring	99	288	11	315	138
basinhopping	79	22	324	566	13
oneiric	83	170	244	165	174
secrets	23	84	35	595	142
cm.jet	20	119	320	49	845
color=color	60	155	240	193	162
yards	78	200	223	133	888
jeff	35	207	326	187	336
complies	27	137	116	15	421
complier	55	174	408	756	455
l_val	98	148	154	796	121
cross-sectional	28	151	148	98	762
spotting	65	207	258	407	887
vessel	43	72	68	290	622
complied	55	174	408	197	564
along	74	232	154	746	36
_metadata	92	109	331	594	386
stamp	80	29	26	77	931
wasnt	65	291	258	407	887
newcol	43	72	68	265	708
damn	65	291	258	236	345
doc-string	34	254	234	302	565
collected	22	61	388	94	161
.ndim	1	274	112	677	681
topandas()	3	68	275	354	126
specifcally	64	6	90	78	370
voila	29	291	274	205	767
regroup	3	56	445	41	118
vectorz	38	1	408	317	651
en_us	76	166	452	764	862
zorder=100	60	155	240	495	162
assigning	74	104	158	436	526
look	74	137	459	209	472
eelco's	82	180	341	537	246
nopython=true	19	204	422	171	761
rope	99	288	100	710	841
mainframe	90	84	376	184	467
numpy.where	19	42	296	13	512
loop	22	197	497	534	68
malloc	55	184	153	358	282
10000	88	142	220	139	393
10001	88	142	220	80	60
image's	84	195	128	166	353
')]	43	47	231	71	255
dictvectorizer	92	26	168	135	816
multi-line	32	16	420	403	768
reads	86	117	329	58	519
store.root.attributes	47	68	119	478	502
ready	23	171	80	209	118
logsumexp	79	23	8	428	62
hyperbola	61	176	282	212	138
37,100	0	106	140	44	112
1000+	88	160	220	80	54
fedora	85	276	233	393	858
train_set	70	59	349	539	412
pandas.dataframe.plot()	6	161	90	543	481
sub-sampled	53	176	339	720	396
sliders	90	69	32	624	536
')`	47	155	170	495	285
conflict	29	231	80	173	568
1000s	88	160	220	80	54
ax.step	19	44	246	684	512
1000x	88	180	55	337	826
`]`	32	263	420	403	768
__add__	9	109	331	55	878
assortment	75	99	163	628	507
3gb	88	182	373	549	236
15.0	15	272	490	606	10
15.1	46	221	151	331	435
15.2	46	221	151	331	621
15.3	15	256	236	196	980
15.4	15	256	236	514	980
15.5	15	256	236	514	980
older	46	221	124	202	435
15.8	15	256	236	514	980
15.9	15	256	236	514	980
half-baked	82	241	187	573	29
')'	63	205	283	177	413
')"	47	17	170	4	385
docker	83	84	376	670	467
grossly	10	137	459	631	999
exptime1.3	43	179	68	265	187
chore	82	241	80	334	327
chord	61	31	282	212	762
netcdf4-python	86	222	426	611	820
deployment	13	84	376	670	467
overflows	57	89	325	654	22
pywin32	83	206	178	197	380
point-wise	40	64	154	150	62
confidentiality	27	293	116	420	655
+inf	57	194	8	559	221
z^2	11	234	242	531	56
runtimewarning	63	83	389	428	57
predict()	79	26	168	135	816
np.pad	19	294	296	13	512
brand-new	74	232	152	202	36
numpy.where()	19	42	296	13	512
trackpy	34	115	35	97	142
remaining	74	146	454	746	509
enthough	83	128	5	461	637
katrielalex	35	207	371	205	336
enumerator	75	132	497	73	77
lacking	10	43	17	321	803
subfeatures	78	200	82	204	832
#000000	20	155	240	495	285
game	17	14	267	429	275
wiser	17	43	395	500	803
1:1000	60	0	173	215	19
numpy.memmap()	86	222	426	102	405
wings	22	13	250	39	589
b.reshape	1	57	41	677	280
outright	10	231	395	30	215
dataframe.to_json()	86	68	275	183	824
0.91.1	13	206	151	681	380
upcasting	57	89	325	86	22
matplotlib.py	81	162	478	247	344
stop_times.csv	74	110	27	712	161
fig.savefig	58	243	18	16	721
bar's	37	290	443	207	449
saturdays	80	163	254	723	897
pestid	78	200	298	378	945
self.x1	60	224	452	642	162
self.x0	60	224	452	642	162
metres	33	41	135	646	744
iterrows()	92	156	78	47	971
28th	80	163	254	723	72
plot2	61	136	175	42	995
unstuck	17	62	88	161	746
il_winter_dat	52	0	214	485	288
plot1	6	139	175	391	543
py++	55	1	29	396	354
delivered	28	14	106	149	905
describing	10	118	459	631	999
conditionally	3	232	37	190	629
non-resampled	61	125	248	122	304
forgets	29	13	420	458	214
minimal	27	293	403	420	579
vincenty	79	232	185	293	868
ax.contour	25	44	208	193	910
stem	61	136	175	272	847
stes	3	136	6	22	847
step	74	232	497	534	214
hourly_date_rng	44	134	181	700	895
lastp	37	31	351	780	385
lasts	88	197	73	77	217
,,,	12	279	92	133	888
plots	61	136	175	22	847
mssql	86	68	119	478	126
shine	82	180	341	537	246
-x**i	57	89	4	562	743
delaunay	53	288	11	720	716
inline_spacing	37	31	24	49	683
reappear	90	187	32	624	214
cphlewis	35	207	371	205	336
df.quantile	87	42	198	673	512
messaging	23	85	71	349	431
shiny	38	6	390	317	127
strategy=	87	105	424	415	967
kfold	79	26	354	135	816
")`)	47	17	170	4	385
within	74	232	37	746	868
nonsense	22	231	395	631	812
calc_mi	27	137	459	15	421
d3data	43	200	82	556	995
tada	35	207	371	205	336
smells	46	231	359	335	208
behaving	29	28	152	335	473
dataframe.filter	92	185	109	105	808
.,	15	211	162	364	640
..	29	28	227	209	472
.!	68	207	465	432	343
y_bins	60	155	240	495	910
.9	15	284	61	606	10
heroku	13	128	376	670	467
.?	47	232	430	209	36
.0	15	284	61	788	110
.1	15	284	61	697	10
.2	15	284	61	606	10
.3	15	284	61	697	10
.4	15	284	61	606	10
.5	15	284	269	606	10
.6	60	194	495	606	10
propogation	38	50	426	285	79
wondering	82	241	227	573	29
duly	35	238	409	187	336
collapsed	40	171	306	155	673
5-7	88	197	73	196	217
iris-virginica	98	105	93	556	475
films	52	17	223	4	423
pwd	30	259	478	381	960
larry	38	6	182	663	79
x.strides	48	220	112	476	757
fishy	29	231	395	335	473
collapses	40	64	154	231	678
python.el	83	43	377	396	142
.h	30	162	94	247	455
.i	47	224	162	424	36
.j	35	238	326	187	308
.k	20	115	280	42	475
fenics	38	6	291	317	450
.m	81	162	29	247	344
intuitive	82	241	378	573	29
.o	81	162	486	247	344
.a	16	196	333	455	471
.b	47	115	409	20	887
.c	55	162	486	247	455
.d	30	259	244	381	105
.e	47	19	162	556	622
.f	35	238	409	407	887
.g	1	57	112	232	681
.x	47	19	25	556	622
.y	52	148	206	556	622
accustomed	17	43	377	396	275
d):	72	64	268	519	756
.p	86	222	329	110	472
polyline	99	288	11	315	138
.r	35	115	409	407	887
.s	65	115	409	407	887
.t	1	57	112	232	726
df2.plot()	6	44	90	418	481
n=19	88	197	250	236	345
skipfooter	76	54	322	51	698
mindful	55	180	100	537	246
fftfreq	77	292	20	430	172
n=10	88	142	55	337	89
convex	99	288	11	315	814
header=0	76	199	322	51	189
header=1	76	199	322	51	189
%matplotlib	90	15	189	226	818
1899	80	163	254	723	72
unwise	10	18	153	691	122
event.xdata	6	161	32	572	115
np.mean()	19	193	121	673	608
=[(	48	105	303	53	371
rewriting	82	180	341	537	219
eurusd	80	116	299	581	67
angstrom	73	166	134	131	862
re-start	83	173	80	604	208
misinterpreting	10	231	395	335	803
2358833	47	28	306	209	472
read_sql()	92	68	119	478	824
mongodb	86	68	426	370	126
non-flat	75	146	182	587	509
pandas.cut	51	193	63	31	780
refrain	29	13	246	190	629
=[[	52	130	303	364	640
independently	74	232	37	746	36
zooming	37	69	32	624	536
sounder	28	14	365	623	841
wan't	65	28	227	205	472
y_2	72	186	242	531	773
a.view()	52	19	160	476	757
sounded	65	291	258	236	345
records_array	98	148	206	538	77
aggregating	3	193	78	354	121
fitfunc	0	275	242	129	292
parse_dates	76	185	322	51	189
np.linalg.solve	16	94	462	562	800
syscalls	22	147	327	165	383
np.repeat()	19	294	296	231	512
aquired	74	232	128	691	353
bargraph	61	136	175	22	847
illegible	37	290	467	780	851
excludes	98	263	424	414	655
series1	44	134	260	33	827
suits	68	190	116	525	328
list.insert	19	294	296	231	782
excluded	98	146	317	746	509
cluttered	82	241	467	334	327
indexpositions	98	148	160	556	776
rollback	34	68	119	478	333
vanderplas's	27	254	278	158	565
2.6.8	83	206	211	685	380
trough	74	232	497	534	36
cellular	28	14	106	710	79
non-keyword	63	185	226	641	676
mercurial	13	170	211	104	482
expanding_product	82	151	341	654	382
mkl_num_threads=1	30	162	478	159	181
assignments	75	104	158	733	154
transposing	40	64	182	548	678
numpy.array	75	106	295	471	681
picker	90	298	32	624	112
zm	1	52	112	770	714
zn	72	4	431	516	624
2.6.2	85	276	42	685	858
df.time	43	273	232	727	852
zi	53	102	297	720	910
zd	1	19	112	284	855
zf	60	194	4	606	743
za	36	148	273	73	77
+38	98	195	148	122	221
integrators	79	10	324	744	610
noise	77	151	106	429	303
zz	12	102	135	273	298
zv	1	148	112	232	714
circuitous	82	241	378	573	29
zp	72	102	418	129	910
zs	1	102	418	232	910
poke	64	13	143	114	167
colonel	35	207	371	187	336
pandas.rpy.common	81	88	110	739	584
64x	85	30	480	685	858
v^-1	16	94	462	782	800
read_clipboard	76	16	322	183	444
redraws	6	46	345	572	373
sparse.coo_matrix	1	274	333	455	788
z*	11	274	4	228	491
product_desc	44	175	82	204	832
commercial	23	1	69	461	637
z=	60	102	287	719	910
scipy.ndimage.interpolation.map_coordinates	53	10	238	720	396
tfidfvectorizer	16	26	293	135	816
columnwise	40	50	154	98	678
z4	52	4	431	516	624
ioerror	63	244	283	553	39
sven's	35	238	187	187	308
z0	72	4	431	516	624
z1	72	4	431	516	624
redrawn	6	69	345	572	373
z3	72	4	431	516	624
northern	33	176	282	617	563
get_array	9	161	331	594	109
640	12	142	213	528	175
646	67	213	95	185	51
648	83	181	58	361	888
chang	35	207	409	187	336
is_published	78	150	317	605	602
simplex	99	22	324	214	610
circlemap	52	19	160	284	855
realloc	9	184	153	358	282
wim	35	238	326	187	336
wil	82	180	157	537	196
wih	77	292	20	430	227
arr.imag	11	234	4	562	743
redefining	74	237	497	436	526
ticklabel_format	58	44	166	341	683
rclass	9	109	331	594	386
10**	11	194	269	664	743
remains	29	28	306	548	214
recl_lcc	78	281	454	796	984
matplotlib.collections	81	88	110	739	183
cheeky	10	118	395	335	812
cram	74	232	246	110	118
cran	83	254	234	302	565
jonathan	35	121	409	187	336
milliseconds	80	197	73	77	217
started	17	62	88	161	874
im.shape	52	0	263	215	288
k+1	11	186	242	531	19
tmp=unicode	76	51	487	177	567
2013-01-31	80	260	254	723	24
0.23617897201269641	11	234	25	172	99
reference_id	3	93	361	126	965
.legend	60	44	495	485	162
disabling	22	171	389	716	526
series.value_counts	19	42	78	31	512
starter	27	137	459	15	421
crosses	33	288	282	212	138
crossed	99	13	282	315	589
output_notebook()	64	6	226	78	370
spyder	83	15	189	540	818
plt.xlabel	58	44	166	418	890
%paste	27	15	189	226	188
xlwt	86	91	367	107	86
renderers	73	125	248	732	304
legible	82	241	378	334	628
some_func	87	55	295	76	985
y.max()	60	194	269	193	221
optimised	55	174	408	90	219
cflags=	50	145	133	138	30
decimate	77	151	428	207	353
arrangement	74	232	200	646	36
temp_g.params	1	57	112	232	159
mersenne	93	109	193	628	507
fire1	43	200	82	204	708
circular	61	288	282	212	138
.__name__	0	201	180	424	8
gobject.idle_add	90	46	345	599	356
fatigue	23	187	294	595	257
discard	74	263	37	587	655
apostrophes	32	16	420	468	768
re-assigned	9	106	331	594	699
averse	38	6	17	209	79
screenshots	27	293	403	420	579
xtile	38	254	234	761	565
callables	38	237	397	756	807
paleta	52	0	263	364	288
matplitlib	61	136	208	158	854
quotations	32	16	420	403	768
pip-2.7	13	170	50	481	174
poking	17	62	143	312	589
astronomical	84	192	128	623	293
combinations	3	297	159	587	36
to_json	92	68	275	183	322
jni	55	206	178	595	564
2e9	88	160	220	80	54
outer	40	297	154	33	678
.splitlines()	76	199	30	283	736
2e6	88	142	220	139	60
v.1600	85	45	264	163	483
molten	3	110	6	354	125
sample_array	0	237	397	436	864
fps	88	197	73	574	107
x_n-1	11	186	242	215	773
counter-clockwise	99	288	182	191	678
hands	17	13	315	39	118
documented	10	231	152	335	638
dataset	3	160	6	94	54
dataframe.plot	51	136	195	272	950
handy	38	241	291	334	628
sidenote	74	137	246	209	36
divider	58	290	90	391	76
set_ticks()	64	161	90	543	683
taglines	43	115	231	709	631
doesnt	29	28	410	209	457
crossing	61	151	282	212	762
g()	0	275	295	684	231
front-end	23	84	294	595	127
illuminate	27	137	116	525	589
709	57	89	4	664	743
704	12	267	488	111	132
ax.ticklabel_format	58	44	452	341	599
700	88	160	220	528	106
multicolored	61	136	24	212	276
computable	57	151	8	139	970
70%	88	266	22	574	217
margins	37	138	467	207	299
explorer	90	15	486	540	781
rebinding	9	237	158	436	864
qwidgets	90	69	46	380	384
confess	17	43	395	236	345
snapdate	3	110	388	155	984
convinient	3	110	6	94	36
marek	35	238	409	187	336
watermark	73	125	248	276	304
cimport	81	88	110	739	183
atleast_1d	19	294	296	278	782
completely	29	28	227	209	999
1985	80	163	284	718	272
70k	88	160	220	80	54
datr	78	93	82	204	832
eigenface	84	195	51	137	353
unutbu	35	238	326	187	336
upper_bound	87	275	295	673	231
1.55371	63	83	283	715	311
counterpart	38	214	152	756	382
stride	40	184	153	453	122
qgroupbox	6	69	46	380	384
swapped	40	263	306	661	363
bijection	98	297	185	73	77
one-row	3	134	65	622	125
arctan2	79	10	242	416	292
classname	47	144	58	424	888
num.signal	16	275	201	562	726
precisely	10	28	227	209	999
dictionarys	3	297	182	587	903
rs1	98	281	454	796	984
smstext	98	148	273	73	77
management	38	1	69	128	282
\pandas\io\	50	145	225	168	429
hooked's	35	238	187	187	308
pavel	35	207	371	187	336
-180	33	194	269	617	212
perfectly	35	207	274	205	767
prone	10	241	395	334	215
similary	29	232	272	161	36
re-write	82	137	341	432	219
rsi	77	116	77	10	347
viktor	35	207	371	187	336
l-1	72	132	273	683	60
rsa	28	14	267	708	202
reallocate	22	184	153	358	387
ascending=true	44	164	181	700	895
manifestation	10	231	395	335	905
ax.imshow()	25	119	320	49	845
matplotlib.style	81	88	390	739	889
window_length	88	142	55	337	89
cyl	20	119	259	319	846
f1*	11	234	4	664	743
-log	11	234	242	243	56
df.hist()	51	136	195	272	12
defmatrix.py	50	145	118	483	927
f13	47	224	74	471	764
f10	47	224	30	424	881
some_series	44	134	260	290	827
unwieldly	82	241	395	334	29
event_type	3	110	163	482	843
linestyles	51	136	24	42	664
tab-delimited	86	91	329	107	519
portrait	37	31	443	207	449
754-2008	57	89	325	86	22
aresult	43	72	68	290	708
issuing	90	171	108	599	356
truck	78	266	114	574	616
detector	99	230	428	429	353
brand	17	43	93	190	423
lectures	28	14	35	179	142
mileage	55	30	69	768	327
deploy	83	84	376	670	467
linestyle=	60	155	240	603	285
technicality	38	184	17	691	122
pybrain	28	26	354	135	816
.get_figure()	52	19	263	485	855
keyerror	63	83	283	715	39
intentions	34	118	307	590	216
64-bit	85	276	42	685	858
animate.py	90	15	189	226	889
laurent	17	207	371	205	767
2009-01-01	80	258	26	460	612
.convert_objects	43	39	68	181	827
.all	87	57	198	181	985
rollreturnrandomdf	3	134	65	155	622
snapshot	27	293	27	15	490
shaders	55	1	267	317	275
databases	86	68	119	478	126
pandas.core.common.pandaserror	63	83	49	183	699
datafram	3	156	6	354	125
add_patch	6	161	208	543	373
1.0.4	46	221	151	202	435
1.0.6	83	206	178	681	380
1.0.7	85	276	151	681	380
df.values.tolist()	47	224	30	424	622
1.0.1	46	276	151	681	252
1.0.2	83	206	80	381	588
violation	63	244	283	553	39
encrypted	86	110	329	110	519
crate	74	232	6	110	684
cust_email	43	93	82	204	708
generate_binary_structure	84	230	428	166	353
python-nose	13	170	50	481	174
weights=none	1	274	112	557	159
deletechars	9	185	322	641	698
partners	98	281	454	191	744
forex	80	116	299	581	67
based	74	232	37	768	36
tire	78	93	252	390	984
rolling_corr	92	193	78	614	971
(	47	224	306	209	36
hopeful	17	241	291	334	803
parisfrance	78	93	243	558	377
bar3d()	51	136	208	49	683
bases	28	14	159	425	382
reorganizing	82	50	100	663	953
axis=axis	87	57	41	232	714
np.greater	29	28	295	139	472
format_number	87	134	493	76	593
tbh	65	291	395	236	345
tbl	43	134	65	155	622
iteritems	92	12	455	480	806
parlance	74	232	386	732	370
procedures	38	1	17	744	79
endless	22	62	497	534	257
gray	20	119	259	757	786
processes	22	85	71	349	431
unacceptably	88	151	100	497	463
grap	3	110	6	110	629
transposition	40	94	182	231	363
watershed	99	230	292	166	716
gram	16	94	462	782	800
wish	74	232	37	209	36
grab	74	232	37	110	161
grad	17	186	377	396	292
base=	60	123	173	642	162
spotted	65	291	258	407	887
adjust_price	76	181	58	24	454
numpy.sort	19	42	296	524	886
humans	82	241	305	334	327
freeze	90	187	108	540	248
3d-space	99	288	282	646	908
desperate	17	43	250	451	180
lot's	17	62	159	321	79
ni_test	52	219	102	401	714
plt.close()	6	46	345	599	356
trapezoidal	79	10	324	487	610
wavelet	77	292	20	430	547
skip-broken	13	170	244	481	174
allotted	22	187	294	28	214
konw	65	118	227	407	472
zipped	86	252	329	260	519
comparable	82	180	55	337	89
/((	11	234	4	531	56
snps	78	150	445	479	604
sig_a	0	275	295	44	292
comparably	82	180	55	497	89
time.sleep()	90	46	345	599	811
static_indices	52	0	263	284	855
admin	13	128	376	250	348
tf-idf	28	26	354	135	816
presentations	37	125	294	321	275
admit	17	43	395	236	345
_way_	27	241	403	420	925
expand	74	232	37	190	678
testfile	76	199	30	283	736
burhan	35	291	116	407	345
my_col	43	134	68	700	827
distinguish	74	232	37	631	625
agreed	65	291	258	407	887
scipy.optimize.leastsq	79	22	324	363	13
orig	92	134	65	155	673
quit	90	187	108	361	248
build_number	44	93	82	558	965
yax	71	102	418	471	910
tmp_hogs	1	274	349	539	881
subsetted	74	232	386	122	673
yaw	33	176	443	617	725
yap	65	291	258	407	767
slowly	17	197	100	39	463
plot_surface	25	161	208	49	845
pandas.to_datetime()	92	35	245	560	934
solve_triangular	16	94	462	782	800
matplotlob	73	125	248	276	304
contourset	25	161	208	543	109
vince	35	207	371	205	767
gdp_growth	43	47	231	265	708
quotation	32	16	420	403	768
code_x	43	47	68	265	708
semidefinite	16	94	462	782	800
g77	96	170	94	650	455
reassembling	40	50	154	534	678
934	15	211	64	751	888
12:2	52	19	160	284	855
1-y	11	55	4	562	726
1-x	11	234	242	664	56
demo	27	6	278	302	421
longdouble	57	100	325	86	22
vmax=1	25	119	320	193	845
myfunc()	71	64	295	684	231
vmax=3	20	119	259	65	221
os.listdir	76	199	286	283	736
/[	47	51	487	307	588
dems	77	14	77	623	210
1-n	98	110	454	746	984
1-a	11	186	25	129	306
.unstack	44	164	181	700	419
non-orthogonal	33	288	282	646	744
capture	74	232	37	110	257
p_fft	11	234	4	562	743
2015-01-31	43	200	26	204	708
generic	38	241	291	573	382
np.bytes_	70	205	346	177	576
strange	29	231	395	335	473
tabbed	74	171	294	595	161
cpython's	55	85	71	349	431
smarter	82	241	378	573	29
newton's	79	10	324	487	610
1-9	98	281	454	141	428
experimented	17	62	272	161	746
unconventional	10	231	17	335	625
flipud	19	178	296	291	601
1-0	98	281	162	796	358
1-3	12	281	162	528	428
1-2	88	197	73	574	217
hist_strm.dtype	1	106	295	471	881
1-4	98	56	454	796	984
1-6	3	281	454	796	984
frequently	10	241	294	500	463
spree	17	13	227	500	571
magician	35	207	371	205	767
//	47	224	58	424	588
z-coordinates	33	102	135	646	684
1.txt	76	199	30	283	754
/(	11	234	4	531	56
well	29	28	246	209	472
y_val	60	155	240	603	285
/:	63	105	346	177	286
mathworks	28	1	35	302	275
case-insensitive	92	156	109	512	808
compelled	34	190	307	590	216
spherical	33	176	282	617	908
enormously	68	190	371	432	571
2012-12-31	67	260	12	2	24
mistaken	65	43	227	791	803
dose	29	28	227	122	473
sub-selection	82	137	274	236	345
mistakes	68	43	305	451	98
_ssl.c	63	244	283	553	323
oo-style	64	6	390	732	389
unspecific	65	118	227	590	999
intra-group	3	250	182	354	125
upvoted	35	190	3	702	216
runners	78	93	182	587	984
bsd-licensed	38	1	69	317	564
upvotes	34	190	3	702	915
accomodate	37	232	37	207	668
int32	70	100	74	332	522
hackery	82	241	291	691	215
pathos.multiprocessing	9	109	71	684	807
datatimeindex	3	156	6	354	410
carrays	82	50	426	663	843
immediately	22	187	388	361	214
ax.get_xticklabels()	58	44	166	418	890
politely	65	190	307	236	345
dictionaries	3	297	163	776	903
non-boolean	75	99	421	200	979
d.decimal	70	59	74	177	576
a.tolist()	19	12	461	480	806
pd.options	64	224	452	716	655
otsu	84	230	428	166	353
record	3	110	10	601	868
page	34	254	234	302	565
100mb	88	182	373	549	236
newshape	48	59	41	453	280
32pts	98	263	254	468	655
phenomena	28	151	106	128	970
984	48	274	112	305	159
985	48	274	268	305	159
husl	20	119	259	137	296
rolup	47	5	25	424	454
list.append	19	12	455	47	806
peter	78	115	409	20	423
1,000,000,000	88	197	480	785	217
mislead	65	118	307	702	216
98%	77	266	22	574	762
tooltip	90	69	32	624	38
appreciative	68	190	465	451	343
-ve	98	146	317	141	509
?	29	28	227	209	472
a=10	98	130	162	796	306
hinder	22	85	100	537	246
inaccurate	10	151	106	654	970
win64	85	206	178	685	634
hindex	3	110	65	155	673
pandas.dataframe.where	19	214	198	13	512
bottom-right	37	31	443	191	964
bundle	83	206	5	461	637
explicity	10	104	1	285	502
indented	0	263	305	468	558
dataframe.interpolate	92	185	78	105	971
freedom	79	23	332	786	484
compatible	46	206	80	202	564
.matplotlibrc	73	122	478	350	181
equally	74	232	339	646	340
articulate	65	118	116	407	887
n-d	75	64	10	519	981
dawg's	35	238	187	187	308
original_data	1	142	497	534	68
return_counts=true	19	42	296	121	886
couldnt	29	28	410	161	457
1.3.x	46	221	151	681	252
n-k	11	0	25	284	19
n-h	89	142	207	261	90
quotechar=	76	199	322	51	189
numpy.prod	19	214	295	684	782
filehandle	76	54	382	260	698
findcircles	6	46	345	44	112
n-2	89	186	207	683	306
n-1	72	186	207	683	306
.travis	30	162	27	15	467
2012-07-01t23	67	213	95	2	24
0.4468177728	47	224	162	424	888
neutral	10	67	317	732	370
scikits	38	1	80	761	564
returnsdf.iloc	52	0	263	290	855
goals	28	1	69	321	79
eat	88	283	100	497	463
groupby.py	50	145	118	580	429
non-parseable	32	16	420	482	768
stories	34	150	247	321	746
empty	74	263	386	680	655
bts_name	44	2	253	558	895
9%	88	180	22	574	89
{3	52	67	256	145	764
{2	52	67	256	145	764
{1	52	67	256	145	764
{0	32	67	256	145	764
sys.float_info.min	93	89	193	628	361
ediff1d	19	42	296	13	512
generating	74	232	386	122	526
erik	35	115	35	20	142
{%	73	144	58	708	202
multiindex.from_tuples	44	12	461	763	827
-d_fortify_source=2	50	157	133	117	160
eric	34	238	35	233	142
diego	17	115	132	550	423
arrb	1	274	112	305	726
arra	1	274	112	305	681
anaconda3	85	259	335	106	960
2to3	83	206	178	202	932
onwards	98	263	254	118	428
arrs	1	274	112	305	681
arry	1	19	112	284	681
self.fig.canvas.draw()	6	46	345	418	356
htseq-0.6.1p1	30	259	244	165	960
2+1	89	186	207	683	19
{{	32	144	487	708	202
{x	60	155	256	42	995
astounding	3	297	317	587	868
{}	32	224	280	403	244
y**2	11	234	242	531	56
{a	98	67	256	145	764
friends	34	173	80	97	142
15-minute	80	29	299	77	67
anacondas	83	206	178	685	380
bcd	47	224	30	145	764
persistent	22	61	294	691	282
infinite-precision	57	89	8	788	62
inset	37	290	90	391	388
extras	30	259	277	303	752
arr3	1	148	206	476	757
arr2	1	148	206	73	77
diagnosis	34	150	163	233	798
arr0	1	57	41	677	21
arr=	48	57	112	232	159
validation	28	26	354	135	816
bcp	86	68	329	107	126
simpson	79	10	324	487	531
pardon	17	43	377	451	98
memory-mapping	55	222	153	691	405
asian	43	200	223	265	708
1.5gb	88	182	373	549	289
01:30	15	256	236	514	980
np.save()	86	222	382	102	820
whose	74	232	37	746	868
cmap.set_under	20	119	320	49	846
calculate	79	193	185	98	347
datestring	92	35	245	781	410
fine-grained	64	6	291	78	370
line1_cleaning	98	258	26	796	377
keylist	3	12	280	776	903
assembles	74	232	37	746	868
v^t	11	186	25	683	56
upper-left	37	290	443	191	964
aparently	29	28	306	791	473
cointegration	23	227	354	457	398
smack	29	13	250	39	180
bools	75	99	198	605	979
namespaces	81	237	390	739	864
22000	12	105	52	528	106
vast	38	1	17	321	628
x-values	37	281	97	646	358
f_contiguous	40	220	85	453	191
baking	23	84	294	370	118
hessp	79	269	324	566	13
.tofile	48	59	357	53	522
employees	78	150	445	41	604
df.index.values	52	47	68	290	827
-32768	57	89	325	141	22
occupancy	77	266	175	757	762
10k	88	160	220	80	54
winded	17	241	88	334	345
10l	48	274	112	649	159
10m	88	160	220	80	54
10c	3	93	65	587	984
10g	88	182	373	549	236
10d	87	149	447	460	612
10x	88	180	55	337	89
10s	88	197	73	196	217
implemented	38	214	125	317	382
10t	47	142	173	139	60
dcts	88	283	373	139	387
preferences	90	15	189	540	781
iterating	40	50	497	534	68
complexities	82	180	341	537	246
end_clock	72	148	273	139	756
adhoc	23	14	294	94	866
nrows=1	76	199	286	51	189
nrows=2	58	139	18	324	543
10^	11	194	269	686	743
10*	11	142	4	606	743
10+	88	160	73	94	217
newlist	75	106	461	471	903
10%	88	266	22	574	668
a.all()	67	217	375	263	146
108	12	279	488	751	465
109	12	279	488	751	132
possibility	74	232	246	209	669
10=	15	211	269	606	10
102	12	279	488	751	132
103	12	279	488	111	132
100	88	142	220	528	106
101	12	279	319	751	465
106	12	279	488	310	465
107	12	279	488	111	465
104	12	279	488	111	465
105	12	279	488	751	465
dry	51	149	447	77	612
df_right	44	134	260	700	827
inefficiently	82	241	341	40	219
suitably	29	28	100	209	668
ax.set_aspect	58	243	494	775	599
economics	28	14	377	396	275
drv	35	207	409	187	336
credit	34	190	307	702	730
indentation	27	293	305	468	558
adopting	64	137	459	15	421
suitable	38	232	291	525	79
akavall	35	207	409	20	336
schur	16	94	462	782	800
x=4	98	281	287	719	358
x=5	33	281	287	719	358
fsum	57	214	201	756	62
x=0	60	102	287	719	358
x=1	33	281	287	719	358
line.set_ydata	6	46	345	418	356
x=3	72	281	287	719	358
specifics	10	118	116	590	328
axes.titlesize	64	166	452	764	683
os.environ	30	15	478	764	181
hard-drive	22	283	373	549	236
a1.csv	76	199	30	283	754
u.max	1	274	121	305	608
ax.set_title()	64	44	90	418	472
leaks	22	61	153	358	282
matplotlib.finance.candlestick	64	232	246	110	472
scipy.stats.rankdata	19	42	125	13	512
12:14	52	19	160	284	776
partitioning	99	288	339	293	616
tailored	38	10	80	768	564
x=x	52	0	160	129	292
x=y	61	31	282	212	276
wary	10	241	395	500	327
oscar	35	207	371	205	767
wart	10	231	359	604	208
wars	17	43	377	396	803
warp	33	230	282	166	908
warn	63	39	389	716	686
__iter__	9	109	331	55	386
warm	17	13	250	39	589
adult	43	200	132	463	423
re-sized	90	171	46	572	214
semi-colon	32	16	420	468	768
aligned	37	31	467	780	851
x=a	52	19	263	284	855
lw=	60	155	240	495	285
setup	83	137	80	197	467
akin	74	137	459	703	392
v1.9.2	83	206	211	202	380
sinusoidal	77	292	20	430	547
dayofweek	80	35	245	584	333
magnitudes	77	151	97	631	762
np.memmap()	22	85	71	349	383
predictors	79	26	168	135	816
numarray	38	1	29	317	564
boroughs	78	250	243	479	604
faults	22	283	108	361	248
faulty	29	231	306	791	568
untill	22	187	108	361	248
replacing	74	263	386	680	526
vtk_to_numpy	75	106	140	231	782
router	23	84	376	184	590
president	78	67	223	145	423
np.correlate	87	101	121	470	608
attempt	29	137	459	15	421
dval	47	224	58	42	588
agregate	71	146	454	94	953
robjects.r	47	224	295	703	699
numpy.linalg.matrix_rank	16	94	462	782	800
min-max	77	195	51	137	353
test_array	1	148	206	73	714
ethernet	23	192	365	676	257
discriminant	79	23	354	638	531
recieves	0	106	397	595	812
cell's	74	263	306	122	214
sort=true	44	175	181	621	130
re-writing	82	50	341	537	219
banged	17	62	56	753	180
python34\lib\	50	145	225	168	204
non-convex	99	288	11	315	814
gradientboostingclassifier	28	26	293	135	816
')"`	47	105	256	177	764
_imp__pyexc_runtimeerror	50	145	118	138	204
minmaxscaler	92	26	354	135	816
i+10	19	42	461	47	512
weeks	80	163	299	723	897
round-off	57	89	8	654	970
spectrums	77	250	77	623	210
maximal	98	146	185	293	868
empty_like	9	184	153	358	782
plt.axis()	58	44	494	642	388
a.values	48	59	158	476	757
maximas	98	103	206	73	77
meas	72	275	418	129	756
meat	27	137	116	493	328
dateoffsets	80	35	245	781	920
sorted_d	98	297	127	73	77
sorted_a	52	148	206	284	855
right_on	44	2	253	427	176
re-constructed	3	232	6	587	673
week1	78	200	82	204	832
week2	43	200	231	204	593
.table	43	47	30	285	321
side	37	31	443	661	363
bone	34	13	250	39	423
mean	74	193	148	98	347
24h	80	163	254	77	931
68940742	48	274	41	305	21
sub-table	3	50	497	534	953
stealing	35	238	116	97	142
first-class	38	1	29	317	564
eigvecs	16	178	462	562	800
readed	22	222	386	534	359
typecast	70	99	74	332	979
1day	80	56	299	77	931
gradient	79	10	324	487	762
quantify	99	151	106	293	970
crucial	10	43	17	631	999
pd.indexslice	44	104	23	733	154
reader	86	222	329	260	444
numpy.random.randomstate	93	109	193	628	807
omp_num_threads	96	170	376	184	807
245	12	279	304	751	465
244	12	279	488	751	465
246	50	267	118	483	679
241	12	279	488	751	132
struggle	17	62	88	161	746
243	12	279	488	751	465
242	12	279	488	751	132
249	12	279	488	111	465
248	12	267	488	111	132
curve's	33	10	443	487	762
dok_matrix	75	50	333	455	788
cookbooks	29	227	159	161	746
collections.iterable	9	106	421	594	979
12000	88	142	220	528	106
np.delete	19	294	296	291	280
100000	88	142	220	80	106
pandas.daterange	92	35	245	727	333
features	28	26	354	135	816
np.all	87	57	198	13	985
150x150	71	195	213	674	95
00.000	67	67	223	133	272
thereof	38	109	17	691	305
featured	38	6	291	317	450
a3d	98	148	206	73	77
ditch	82	241	246	500	118
csr_matrix()	16	94	333	455	788
camelcase	32	237	390	482	864
df.duration	43	273	309	727	852
annotates	61	161	90	572	138
np.take	19	42	296	13	886
dwell	98	72	26	265	622
feature2	43	200	82	145	804
outputting	74	125	329	122	508
feature1	43	93	82	558	804
ta-lib	23	116	365	761	564
old_simplices_array	70	204	74	374	64
250x250	88	142	220	674	175
targetdir	30	162	478	283	344
ymin=0	60	155	240	495	599
hadnt	35	207	274	205	767
system()	22	61	397	572	807
~10gb	88	283	373	549	236
distance	99	288	185	293	716
lenovo	88	30	480	785	236
dissapears	37	31	443	780	851
surrounding	99	288	339	646	744
enabled	90	171	189	716	467
imputation	28	26	354	135	967
preparation	22	171	306	761	874
all-share	78	200	132	550	423
street	78	150	132	463	604
stratified	79	26	354	135	816
enables	38	117	152	58	305
extracting	74	232	37	110	526
mini	23	1	294	317	79
sees	74	117	152	58	638
minm	98	103	206	73	77
munging	3	137	6	663	866
.autofmt_xdate()	6	46	345	599	356
modern	55	1	69	131	651
mind	65	190	116	500	345
mine	35	238	187	187	308
minx	60	102	418	65	644
miny	60	102	418	65	533
paramaters	64	232	443	572	370
seed	93	123	193	628	507
canny	99	230	428	166	353
5.05	47	19	162	133	221
seen	29	62	272	161	746
seem	29	28	410	161	457
sounding	17	190	307	236	345
mint	85	276	233	393	858
5.00	67	200	162	145	272
estimated	79	23	332	511	239
test_set	47	134	260	539	827
vecteurs	99	288	43	293	11
matplotlib-1.1.0	83	206	178	165	380
do:	30	170	244	165	588
idtolook	75	297	10	587	122
sframe	3	156	65	155	125
squareroot	57	146	8	654	62
my_plot	0	46	345	44	586
newline	32	16	420	403	768
translator	38	1	69	317	564
boltzmann	79	23	332	511	531
regular	74	232	339	209	340
unitless	11	275	4	664	743
min2	43	47	231	495	12
headers1	76	199	30	283	736
dok	16	94	333	455	788
mitigate	22	85	341	432	246
don	29	28	410	609	457
dom	32	99	420	691	405
dob	43	273	26	558	410
s_true	43	47	181	290	827
multi-process	22	85	71	349	431
index.levels	52	104	296	290	622
m	72	186	25	683	756
dog	78	67	132	584	423
doe	78	200	92	288	423
principle	10	232	17	209	999
dos	90	15	189	540	383
337	12	279	319	751	465
ython	85	5	151	685	380
consumer	23	29	365	94	257
dow	78	116	430	581	67
dot	16	178	154	150	800
dou	68	207	227	432	472
1140	1	274	268	305	159
amending	47	224	306	424	655
np.linalg.matrix_power	1	178	112	562	726
alexaranking	3	110	454	155	984
checks	74	227	317	457	638
speedup	88	180	55	337	89
syntax	10	104	459	200	650
waveforms	77	292	20	430	547
post-process	74	263	246	468	655
colobar	37	290	494	391	388
x264	73	125	248	276	304
convexhull	99	288	11	315	716
representing	74	250	77	746	684
explain	68	118	227	432	571
sugar	9	104	158	200	147
array_2d	72	148	273	73	77
clobbered	81	237	397	436	864
folks	34	190	307	321	216
gpu-based	55	174	408	90	651
tiles	99	288	128	315	138
patter	61	13	282	432	276
matplotlib.image.imread	84	219	102	607	427
coast	33	176	135	617	563
r()	88	197	55	139	89
np.issubdtype	70	59	74	332	979
tiled	40	195	467	674	673
linewidth=2	60	155	368	603	285
linewidth=0	60	155	240	193	845
linewidth=1	60	155	240	495	285
s.map	87	12	455	480	806
linewidth=5	60	155	240	495	285
min()	92	193	78	105	121
chronological	3	297	129	524	9
ipython_config.py	30	122	478	159	181
v1.6.2	85	276	151	685	380
ioff	6	46	345	599	356
.where	87	124	198	181	985
rectspherebivariatespline	53	22	238	720	396
discs	61	176	282	626	951
architecture	96	30	69	785	467
chart1.size	47	201	180	50	159
g++-	13	170	244	165	174
compilers	96	174	408	650	455
decides	10	117	152	209	638
julien	35	207	371	205	336
fascinating	17	43	395	236	812
numpy.indices()	19	294	296	13	601
re-assemble	3	110	6	110	953
decided	17	62	88	161	874
\xe2	32	16	190	477	261
well-documented	38	6	291	317	628
0.0001	93	194	269	664	743
subject	28	150	234	97	970
un0	11	123	173	50	99
03	67	163	284	718	483
00	67	260	12	372	958
01	67	260	284	718	483
06	67	260	284	718	483
exponent	57	89	8	788	898
reprinting	29	28	306	791	473
05	67	260	284	718	483
08	67	163	284	718	483
month_15	43	273	309	265	708
erfcx	11	234	242	416	292
system-wide	13	128	5	104	482
slighly	82	241	187	590	308
mpl.colors.normalize	60	194	173	193	221
simplest	82	241	378	573	669
0-	72	19	162	528	19
subseries	78	56	445	41	347
lazy	82	43	395	497	812
triplet	71	297	127	746	684
triples	71	64	127	519	684
visualise	61	14	175	564	625
stared	17	62	88	236	345
380	12	78	52	751	465
381	12	279	488	751	465
df.update	44	2	260	700	827
383	12	279	488	751	132
384	12	279	488	751	175
387	12	279	488	751	465
worksheets	86	91	367	107	86
article_id	78	93	82	390	965
fullname	0	224	30	424	881
0s	71	146	454	680	509
0x	32	16	190	477	261
against	74	227	306	457	905
0}	47	67	256	177	576
0b	12	78	162	133	272
data-structure	82	50	100	497	463
0a	12	279	488	751	888
und	74	110	27	122	519
urls	23	84	163	370	127
0j	57	55	201	664	743
uni	17	95	250	361	180
0h	67	255	12	550	931
rel_time	52	0	263	485	221
0l	63	83	283	649	39
0m	33	29	114	530	931
cum_sum	1	134	461	232	881
f1.index	44	164	181	348	895
z=2	33	281	287	719	358
z=3	33	281	287	719	358
z=0	33	176	282	617	908
z=1	33	281	287	719	358
z=6	33	281	287	719	358
height	37	31	443	207	449
numpy.save()	86	222	426	102	820
2194	48	274	112	305	159
window=3	87	149	447	614	612
loaded	86	222	329	110	519
traversals	55	50	341	537	219
varma	28	26	354	638	197
replicate	27	293	403	420	905
website	83	254	234	302	565
z=x	52	19	160	476	855
demodulation	77	292	20	430	547
suppress	64	263	389	716	655
chum	35	207	409	205	336
source-code	27	293	305	420	328
personally	38	241	291	500	79
z=f	33	102	418	129	910
make.osx	30	122	94	159	181
lmdb	30	170	244	165	467
.get_label()	58	44	495	642	162
earth's	33	176	282	617	908
auction	78	93	243	390	984
melted	3	156	65	763	125
re-compile	83	170	80	197	118
i-vuit	65	291	258	407	887
defeated	38	1	80	525	564
countryacc	98	281	454	796	984
pyplot.close()	90	46	345	599	356
faked	27	137	459	15	421
newton-cg	79	22	324	566	13
mouse	90	69	32	624	536
pre-allocate	75	184	153	358	143
make	74	232	246	209	472
new.py	30	162	478	247	344
non-matplotlib	68	136	175	432	343
unfortunate	10	231	395	335	305
mixtures	28	14	400	710	841
filtered	3	146	65	587	673
variable's	74	237	152	436	141
capacities	75	64	10	519	684
bells	38	1	291	317	87
percolation	28	14	267	710	841
xbar	11	186	25	129	56
differing	74	231	159	94	36
kit	23	1	69	317	450
kij	1	178	473	743	884
supposing	74	110	386	534	36
kib	88	182	373	549	236
arcityarcountry	78	67	243	145	965
opportunity	68	241	341	525	669
ax.set	58	44	494	642	599
butter	28	14	479	744	762
plt.clf()	6	46	345	666	356
pi3d	84	192	128	607	353
geopandas	99	6	278	158	854
source_path	30	162	478	247	344
extra_args	76	185	226	16	721
materials	28	14	267	93	841
f.write	76	199	286	283	413
recombine	3	110	6	680	953
four-dimensional	61	176	175	623	210
stats.f_oneway	52	0	180	290	827
ax.yaxis.set_major_formatter	60	155	240	495	12
versed	17	43	377	301	803
||	11	186	25	532	56
|x	11	234	242	531	56
somethings	17	43	143	691	874
transforms	74	230	128	166	141
human	23	14	294	429	625
type's	70	99	325	86	22
=index	52	19	263	284	855
libpath	50	145	133	138	204
np.rec.fromarrays	48	59	74	53	681
buyers	78	56	445	479	67
to_utc	80	110	317	155	410
numpy.genfromtext	86	54	275	260	444
1sec	88	29	73	574	931
character	32	16	190	477	768
")]`	43	17	223	4	567
adress	74	28	37	110	472
reuse	22	232	246	190	629
lexically	40	175	182	524	9
|=	52	0	160	284	855
|#	43	51	487	151	567
destroy	22	61	388	572	282
3-by-3	71	64	127	738	95
transform=	58	138	265	651	642
daemon	90	85	71	349	431
numpy.searchsorted()	19	42	296	13	512
janky	82	241	395	173	472
performing	40	50	341	98	382
customizations	64	6	234	78	565
unnecessary	82	241	395	334	655
arrivals	78	56	445	41	984
intermittently	22	171	389	716	568
a.txt	76	110	30	283	754
e-waste	78	200	252	463	272
.squeeze()	44	134	260	700	827
[((	43	52	180	215	437
interp	53	101	238	720	962
line2d	6	161	90	543	109
short-term	23	85	294	349	431
grading	28	43	377	525	79
grid=false	60	155	240	495	285
electromagnetic	28	14	267	710	841
_everything_	34	190	80	500	118
scipy.optimize.minimize_scalar	19	275	295	684	512
sample_weight	60	275	418	129	910
pickling	86	222	426	611	820
meanings	32	16	420	200	768
plt.hist()	51	294	63	557	780
gridsearchcv	79	26	293	135	816
exports_past	87	234	4	664	99
kullback-leibler	72	186	185	150	756
la.svd	16	94	462	562	800
matplotlib.pyplot.bar()	51	161	226	543	499
complexwarning	63	83	389	715	57
row-major	40	184	270	453	122
something's	10	231	395	39	215
=true	76	52	452	181	985
.codes	43	72	93	265	708
[([	52	0	68	290	855
subscriptable	9	83	383	616	286
restate	35	118	116	590	328
doc's	10	43	258	500	215
msvcr90.dll	30	162	94	247	485
carbon_flux	87	102	121	673	830
mathematical	28	10	17	744	610
whats	29	28	227	432	472
lapack_atlas	50	259	277	303	469
overloads	9	109	331	113	135
overkill	82	241	291	525	669
c's	57	100	325	86	22
jend	52	0	273	284	19
+00	15	211	263	364	265
+01	15	211	263	364	265
+02	15	211	263	364	265
+03	15	211	263	364	265
+04	15	213	64	364	311
df_later	9	220	158	476	757
+06	15	211	263	364	265
+07	15	157	64	296	837
+08	15	157	64	296	837
+09	15	211	64	364	265
inspected	86	222	329	791	473
pickle.loads	0	224	30	424	881
counterproductive	82	241	395	334	327
plt.subplots	58	139	18	324	543
failure	29	231	389	361	568
alllabelpredict	98	148	206	556	77
lows	80	258	26	581	931
time_array	98	197	73	538	217
25th	98	163	254	10	428
file.csv	76	199	286	51	189
bugfix	46	221	124	331	435
bounds	37	103	485	207	868
hex2dec	70	100	74	332	522
m8	70	273	74	53	764
benchmarks	55	147	55	337	905
+0j	57	275	8	664	743
originating	29	110	27	746	868
cv2.imread	84	219	102	401	427
semicolon	32	16	420	468	768
kennytm	35	238	326	187	336
non-brand	43	51	93	177	475
pandas.ols	79	193	140	614	620
id_max	47	224	461	471	524
np.sqrt()	0	214	201	756	231
discriminate	74	227	37	457	868
-lpython27	50	145	133	138	204
authoritative	34	254	234	302	142
kwatford	35	207	116	407	345
warehouse	23	14	294	576	67
least-square	79	10	324	363	620
person_ref	43	200	82	204	832
jaccard	16	94	185	293	716
iters	88	142	485	139	60
set_ticklabels	58	44	166	341	184
name_list	43	134	82	265	622
root-finding	79	10	324	214	610
multiple-precision	55	174	408	756	651
pandas.lib.map_infer	50	267	118	580	842
mappable	25	161	320	49	296
to_latex	92	68	275	183	322
pystatsmodels	34	173	35	604	208
subsitute	98	134	93	155	622
pd.version.version	46	221	202	199	443
customary	10	190	8	788	812
pandas_ml	38	1	291	317	866
manager	83	128	80	197	467
manages	22	117	152	458	417
37.5	12	194	162	528	212
seconddata1	61	102	1	285	502
depend	74	232	152	768	305
.set_useoffset	58	44	452	642	162
fancier	64	40	378	573	29
cobject	9	61	29	790	282
sim_pearson	28	14	267	98	382
sns.lmplot	51	136	351	272	847
must	29	28	306	791	196
my_arr	3	134	461	471	622
retype	32	263	420	468	655
len()	63	83	383	616	286
tk-dev	13	128	50	104	485
createddate	43	72	309	727	852
4.7.2	85	206	178	197	380
x86-64	85	45	264	685	858
.contains	43	51	487	151	244
forked	55	85	71	349	431
x_coords	1	102	418	305	910
signal1data	98	146	454	587	509
.csv	86	91	329	107	519
iter	76	12	461	480	806
item	98	297	461	471	77
2**63	70	59	325	332	522
2**64	57	89	325	332	22
df.transpose()	44	134	260	290	827
it'll	29	28	246	500	196
cetera	40	115	154	548	363
osx_sdk_ver=	83	170	244	165	174
matplotlib.pyplot.ylim	58	194	269	642	683
python-specific	38	1	69	317	79
inconsequential	82	241	8	654	246
____	11	5	4	664	99
12:25	47	110	30	133	754
12:20	67	260	12	372	958
12:21	67	260	284	2	24
best-fit	79	23	332	363	620
adds	74	117	152	58	638
t_slr	98	148	273	73	77
wit's	29	28	250	361	473
deriv	72	275	25	566	292
pushbutton	90	69	46	380	384
polygoncollection	25	161	208	49	296
linalgerror	16	94	462	782	800
tangent	33	292	282	487	23
kilometers	33	281	443	42	995
battling	17	62	279	161	746
shift	77	146	148	98	62
temporaries	55	184	422	537	219
countryname	78	93	445	390	604
simultaneous	28	85	294	98	431
__repr__	9	109	331	55	386
suggestion	35	238	187	187	308
conveniently	74	232	37	209	80
orient	92	185	226	641	322
tk.framework	50	259	277	303	469
adjustable	37	243	494	625	449
parray	9	220	295	476	757
ianh	35	238	326	187	336
ignore_index	44	185	260	33	130
new_value	98	148	206	471	602
numpy-like	82	241	378	573	29
data.to_csv	76	199	286	283	736
pandas.read_csv()	86	54	382	260	698
wealth	57	89	125	139	382
ycoord	77	195	114	182	682
np.roll()	19	294	125	231	512
dude	65	291	371	205	767
connector	86	68	119	478	126
ion()	90	46	345	599	356
conformable	75	64	268	519	981
user333700	35	207	371	97	336
nuitka	55	174	178	197	455
pweave	64	28	410	161	457
zeros_like	19	184	153	358	782
np.histogram()	51	193	63	31	780
pylint	83	206	389	202	435
^gspc	43	116	197	581	567
tandem	23	13	294	110	118
generically	75	232	378	200	382
fig.gca	58	155	240	418	162
4.9.2	85	45	264	513	634
maintainable	82	241	378	573	29
out-of-date	46	221	211	202	435
signal's	77	292	20	430	547
df.min()	87	52	68	770	985
reviews	78	150	163	479	798
*1000	47	201	173	50	99
binarized	99	195	128	429	353
kenneth	23	116	27	761	866
winston	35	207	371	205	336
confused	17	43	227	335	803
add_newdoc	81	88	110	739	584
subregion	78	150	445	10	66
])))	52	0	180	215	288
confuses	10	117	152	335	638
y-value	98	281	287	719	358
2.7.6.1	85	206	178	685	380
premade	38	40	278	317	79
cv.fromarray	84	219	102	401	427
python-opencv	83	206	178	197	482
map	61	176	128	626	908
mar	67	163	284	718	483
mat	1	219	102	455	694
may	10	231	246	500	196
max	98	146	148	673	347
fed	74	232	152	595	673
mac	85	276	233	198	858
mae	72	186	25	174	306
mad	65	291	148	236	345
mag	72	102	418	182	756
end	74	263	306	458	214
destructive	82	180	341	497	122
journals	73	125	248	276	275
]))`	52	0	303	50	640
man	65	291	371	205	767
]))]	52	0	180	215	288
scrambling	29	263	497	534	68
neck	22	147	100	537	219
johnson	78	115	409	20	423
effecient	82	241	378	573	29
s.tolist()	19	12	461	47	806
cascade	23	230	128	595	854
right-hand-side	40	104	154	661	363
tall	37	31	467	207	851
talk	34	254	234	321	565
thresholds	79	227	317	638	11
shaky	17	43	377	396	354
wishing	64	43	377	200	803
arraytype	9	106	421	594	681
shake	29	62	143	39	746
beginner's	17	43	377	451	98
df.to_dict	44	134	93	700	188
8.5.9	13	170	244	165	482
clearest	82	238	378	573	29
listing	74	110	430	110	161
deducting	98	146	148	98	347
embedd	61	125	175	158	915
0-rank	75	106	421	519	681
elyase	35	207	409	205	336
emailed	34	173	35	233	142
subexpression	28	297	497	744	382
bad.sum()	98	148	206	141	221
pyplot.show()	90	46	345	599	356
safari	83	84	489	72	818
tri.lineartriinterpolator	53	161	208	720	396
numpy.genfromtxt	76	54	382	260	698
settings	64	166	134	78	370
nanmedian	19	101	121	13	608
65159576	52	0	263	215	288
2015-09-01	43	72	68	265	708
rock	35	115	371	20	767
hijack	23	232	397	595	370
xls	86	91	367	107	86
svdsolve	47	224	110	424	881
last_seen	44	72	82	204	708
bruteforce	82	297	341	139	610
latin	73	16	134	131	862
pandonic	82	241	378	573	29
usethedeathstar	35	238	409	187	336
time.clock()	88	147	55	337	89
tmp1	16	178	201	562	726
tmp2	1	178	201	562	726
canada	43	200	132	463	765
emerges	29	28	306	173	473
reportlab	73	125	248	276	304
3rd	98	263	454	746	428
greeks	28	56	299	581	67
emerged	29	171	306	122	214
dutch	32	43	377	482	275
sensor	23	29	365	182	210
end_time	80	258	26	723	377
asymptote	61	31	282	212	276
bombs	83	206	80	197	473
sideways	37	31	227	780	851
w-sat	80	78	309	2	24
orm	86	68	119	478	126
demanding	82	50	100	497	463
q.base	48	184	85	453	757
org	78	150	430	479	423
ord	70	55	74	177	522
keith	35	115	35	20	142
11:59	80	163	254	723	931
or_	19	214	295	684	512
macos	85	276	233	198	858
derivation	79	10	324	487	942
copy-and-paste	27	293	305	420	579
evt_size	90	69	46	624	536
doug's	35	238	187	187	308
thing	29	28	246	209	472
40x40	71	195	213	674	95
think	65	28	227	209	472
cheese	34	200	430	149	423
repelling_force_prefactor	75	64	127	139	382
t=t	72	186	25	129	756
sounds	10	241	246	500	196
unique()	92	156	78	105	971
.8	15	272	61	606	10
little	17	241	395	334	327
.view	48	59	74	332	522
1t	43	149	231	460	612
1w	44	149	447	460	612
diags	1	19	295	455	881
1y	43	149	447	460	612
autoscaled	37	290	494	207	580
frees	22	61	153	358	282
1}	47	67	256	145	764
0.0531699096	74	232	306	209	36
anyone	68	28	227	432	571
1c	77	281	252	338	646
1b	78	93	243	338	646
1e	93	123	173	686	393
1d	75	64	10	519	684
1g	88	182	373	549	236
1h	80	149	447	460	612
1k	88	160	220	80	54
1j	11	89	201	562	292
participated	78	150	252	479	604
1l	48	274	52	649	159
abbrv	52	52	68	290	985
eyes	17	291	250	236	345
isosurfaces	61	176	278	626	450
winxp	85	276	233	393	858
gc.collect	22	61	153	358	282
bool_	70	59	74	332	681
t=0	72	186	242	129	292
t=1	72	186	242	531	56
todense	16	94	333	455	788
keypoint	84	230	128	607	405
butt	64	166	134	764	370
cleanse	3	50	6	110	953
regridding	53	176	135	179	293
coefficients	79	23	332	638	620
11	12	279	319	111	465
10	12	142	162	528	106
13	12	279	319	111	465
12	12	279	319	528	465
15	12	279	319	528	106
14	12	279	319	111	465
17	12	279	319	111	465
16	12	279	319	111	465
countourf	25	119	208	49	845
notches	37	266	467	10	668
1=	47	200	162	133	475
1%	88	266	22	574	217
disallowed	10	118	17	590	999
1+	11	89	4	664	743
.7	15	284	61	606	10
1-	47	224	173	557	756
countours	33	195	135	623	908
myarray.dtype	47	224	93	177	764
gathering	23	50	294	94	866
unqiue	3	297	243	167	984
topics	34	254	247	321	746
zlist	0	102	418	129	910
np.roots	0	10	324	566	13
set-like	10	227	17	756	970
monochrome	84	230	51	437	353
60x60	84	195	213	674	353
speakers	38	254	183	321	946
efficient	82	241	378	573	29
isolate	74	137	37	110	868
potential	10	231	106	173	246
hashlib.md5	76	224	30	177	736
numpy.outer	16	178	473	150	884
.pop	43	134	461	471	622
so.index	52	104	68	733	320
switching	29	231	17	3	526
\theta	32	16	420	403	768
t-distribution	79	151	106	631	970
35:00	67	260	95	2	24
chromosomes	78	286	163	390	604
roster	23	150	294	94	866
zigzag	61	161	208	212	276
bowels	29	13	143	173	589
viewable	37	69	46	207	536
matplotlib.pyplot.contourf	53	254	234	302	565
buglet	46	221	359	604	435
sshing	23	84	376	184	467
df.index.get_level_values	44	47	181	700	895
klunky	64	241	378	334	327
s_cols	52	134	260	290	622
maxing	22	283	373	549	236
rating	78	150	445	479	604
shot	68	13	250	39	345
show	27	293	175	420	508
index.get_level_values	44	164	181	700	895
k=5	47	224	173	424	159
executed	22	171	108	361	383
drawings	61	125	175	158	951
corner	37	31	443	191	964
k=2	16	94	462	562	800
waited	88	197	73	459	217
istead	19	214	295	13	512
dice	29	28	272	361	473
usol	52	19	263	284	855
apriori	3	146	182	587	472
\right	32	51	487	403	244
img.shape	1	219	102	600	159
linefeed	32	16	190	477	768
dico	78	200	445	204	832
log-sum-exp	82	214	341	98	219
cv2.calcopticalflowpyrlk	74	230	140	595	854
percentiles	98	193	332	10	347
dict	3	12	461	776	903
xcoo	75	64	10	231	981
exaggeration	82	241	395	334	812
low-quality	77	151	148	631	347
scipy.stats.entropy	79	227	140	684	36
persisting	22	171	386	691	359
.ffill()	44	164	181	700	691
2mb	88	182	373	549	236
np.median	87	57	121	673	608
nearly	88	28	100	497	463
rtol=	57	89	495	559	907
secondary	37	290	175	391	388
matplotlib.bar	51	136	195	272	12
a.xaxis.get_majorticklabels()	75	106	461	471	974
20million	98	160	220	80	54
hardcoding	74	232	246	482	891
dfs.append	76	199	260	283	736
lstsq	16	94	462	347	800
worrying	17	43	143	500	118
silently	29	231	389	335	568
__module__	9	109	331	594	386
dict.get()	92	214	78	105	971
relative	37	266	443	207	668
urllib2.urlopen	76	224	30	283	736
bitarray	9	109	125	756	405
minimaindex	52	148	273	284	77
registering	9	109	386	691	370
np.allclose	87	89	198	559	907
700mb	88	283	373	549	236
archflags=-	30	170	244	554	174
result.x	47	224	418	129	221
diamonds	51	136	175	272	847
numpy.less	87	55	198	113	985
betwen	84	195	51	166	353
betwee	98	258	148	98	377
time_col	3	99	26	155	410
pip's	13	261	486	197	368
parameterization	79	151	106	487	762
random_array	52	19	263	284	855
lami	70	106	421	471	681
somevalues	52	72	68	290	154
785	70	99	421	601	979
buffer()	9	109	331	594	699
read_json	92	68	275	183	322
789	47	105	223	145	764
imread()	84	219	102	607	427
avoided	82	231	341	500	215
~5%	88	180	55	337	89
non-numeric	3	99	424	414	655
axes.set_xlim	58	44	226	641	683
}$	47	51	487	177	244
vectores	72	102	132	550	888
guesstimate	88	142	220	139	217
multivariable	79	10	324	214	610
~50	88	160	220	80	54
sensible	82	241	378	573	29
suppressed	90	231	389	716	568
np.nanmax	87	42	424	673	608
sensibly	10	151	246	631	999
educated	65	291	246	470	812
fade	20	119	259	757	786
}}	47	67	256	708	202
readlines	76	54	382	260	698
traversal	99	288	128	646	762
f90	81	162	29	650	455
~5x	88	180	55	337	89
f95	30	162	486	247	455
encapsulation	38	85	291	732	118
remodmaf	43	72	68	265	708
0.0354	15	211	64	215	288
pd.__version__	46	5	202	199	443
__init	50	267	118	483	927
ongoing	34	173	359	604	208
1:35	98	281	287	141	358
ax.set_xticklabels	58	44	166	341	184
setup()	81	170	178	165	482
planar	33	176	282	617	908
conferences	23	150	430	149	604
atributes	74	146	306	746	509
apropos	81	237	397	739	864
endswith	92	200	383	616	477
dist-packages	50	259	277	27	927
malformed	32	16	190	477	444
a-values	78	17	223	4	567
p.show()	6	46	345	599	356
circularly	77	292	97	430	942
group-by	3	156	6	354	125
configurable	64	227	152	78	370
mpl.py	81	88	110	739	584
speech	28	14	365	710	946
arguments	0	185	226	641	676
it_it.utf-8	30	162	244	165	383
q^n	82	94	341	537	246
oil	78	56	299	723	897
alpha+1	11	234	4	531	56
res.shape	1	0	180	215	19
climbing	28	14	267	710	841
ois	65	115	258	407	887
weave	55	174	29	90	455
largely	10	1	17	537	246
numpy.unique	19	42	296	121	886
macro	86	91	29	790	64
ax.set_position	58	44	494	485	162
roughly	88	142	220	80	54
solve	68	10	227	214	610
generic.py	50	145	225	580	429
numpy.eye	1	123	41	677	60
bumping	22	283	153	358	282
animation.funcanimation	6	46	345	44	107
np.ndenumerate	19	42	296	11	601
savethread	9	237	397	44	699
adjustments	27	137	246	525	328
results.reset_index()	44	149	181	700	612
multiples	37	29	159	94	668
window_size	71	195	268	305	175
autocad	23	125	248	158	127
cpbody	75	100	153	358	64
e^x	79	186	242	129	292
trigger	90	187	32	716	112
pile	22	283	294	39	257
heavier	61	151	106	525	628
pill	77	13	114	295	563
80,000	88	160	220	80	54
genome	78	286	163	425	798
grip	17	62	88	659	589
np.max()	19	42	296	13	512
dlang	78	93	445	41	639
grib	86	222	329	107	519
grid	99	288	339	646	908
np.apply_along_axis	19	42	81	13	608
pandas.io.sql.read_frame	86	68	119	478	126
re-implementing	82	241	341	334	327
fixedlocator	58	44	166	341	184
tooks	12	197	73	196	217
serves	74	117	152	58	305
server	23	84	376	184	831
facing	29	62	88	173	803
first.csv	78	110	243	712	984
arithmetic	57	89	8	756	62
repr()	70	99	202	183	979
served	23	84	294	370	127
mapquest	23	68	27	370	257
left=0	58	138	495	642	162
erase	74	263	388	190	655
regex=	76	51	487	151	445
polynom	79	10	332	487	620
debian's	13	128	211	104	482
c.arrows	6	161	208	543	481
sym=	60	155	240	495	285
z-direction	61	176	282	617	908
14:00	67	260	12	372	958
interpolators	53	101	238	720	396
confirm	29	28	227	791	905
14:08	67	213	95	185	51
extensively	38	62	247	161	746
decomposition	16	94	462	782	800
textvariable	9	109	331	594	699
copy=copy	48	59	74	53	681
numpy.matrix()	75	106	295	684	231
customframe	9	109	331	594	386
.item	75	106	421	105	699
44.1khz	77	292	365	676	227
bar-graph	61	31	175	22	951
arithmetical	75	99	17	756	843
16:00	67	260	12	372	958
regexp	32	54	109	512	808
regexs	32	51	109	512	808
16:03	80	200	223	550	377
16:05	80	260	12	372	377
847	12	279	488	751	96
data.items()	47	134	461	776	903
smear	98	281	443	191	964
mixes	74	99	152	458	141
lsuffix	44	2	253	33	176
image.getdata()	75	106	140	684	782
mixed	3	99	6	663	843
airfoil	61	176	282	626	762
referenced	22	237	397	436	161
$lang	30	15	189	199	870
yyy	80	258	26	556	742
pbl_awi	43	200	223	265	708
vacation	80	62	250	723	897
dput	27	293	202	420	579
references	9	61	397	436	282
strip	32	263	420	468	655
annoys	68	190	305	432	571
.tif	84	192	128	607	293
spline	53	10	238	720	396
breath	90	187	250	624	112
shells	83	15	189	540	818
plt.subplots_adjust()	58	243	18	16	299
complex128	70	100	74	332	522
virtualenv's	30	122	244	159	181
imagesc	84	195	51	207	449
pretends	9	109	421	691	877
strikes	82	241	395	334	29
sophisticated	38	40	291	573	542
hiccup	17	62	88	39	874
_new_	34	190	307	97	216
dvi	73	125	248	91	304
heuristica	73	166	134	764	862
hanning	79	101	428	430	547
myfile2	78	67	223	4	385
myfile1	43	17	223	4	567
embed	90	125	46	158	384
pyplot.pause	6	44	90	543	481
filt	43	47	68	290	827
`""`	32	16	420	468	768
1.3.1-4	46	206	151	681	380
deep	10	43	143	206	354
orbit	33	176	282	710	725
maxed	22	283	373	549	236
deem	68	190	307	590	216
environement	83	206	376	197	467
grasped	17	43	410	161	457
file	86	222	329	107	519
deed	35	207	326	205	336
film	34	150	35	149	275
fill	74	146	424	680	509
tedious	82	241	378	334	327
genres	78	93	163	558	832
drivers	23	68	466	478	126
numpy\	50	244	94	553	323
dvy	67	213	95	185	51
_are_	64	232	246	732	370
fruitless	68	190	371	432	571
pysqldf	47	5	30	4	454
io-bound	82	180	341	537	246
drawimage	73	125	248	276	304
numpy*	10	184	158	453	757
max_value	60	194	269	65	221
keys()	92	12	455	776	903
df_compare	43	47	309	265	708
df.to_dict()	27	293	202	183	188
numpy=	85	276	151	157	621
important	10	241	17	631	999
.keys()	44	12	461	776	903
chris	35	115	409	20	336
dropbox	86	293	27	247	188
decorated	9	109	422	684	761
concat	44	156	260	33	176
svr	60	26	354	135	816
assignin	90	15	189	226	392
parser.c	50	267	118	580	429
.reset_index()	44	164	181	700	895
hypotenuse	33	288	282	191	725
montecarloperf	74	232	306	209	36
alright	65	291	258	407	345
98.x	77	146	467	646	750
np.array()	75	106	455	684	782
train_labels	98	134	349	155	622
primary_cpt_description	43	72	93	4	708
temp.macosx-10.6-intel-3.3	50	259	133	117	160
forbidden	29	231	389	716	568
dollar	32	16	420	403	898
angstroms	37	166	134	131	862
browsers	73	125	489	72	304
shorthands	64	99	390	200	475
duplicated	3	146	182	587	655
hspace=0	58	138	494	391	299
prefixed	32	16	420	468	768
chunk-wise	3	50	6	110	953
unpickling	22	85	426	349	820
prefixes	32	286	109	480	898
24.35	67	213	95	185	51
pandas.series.map	92	214	78	105	512
fig.add_axes()	58	139	494	324	543
hideous	29	241	395	236	345
joblib.dump	86	222	426	102	820
line_code	78	56	445	41	984
gcc-phat	79	227	106	638	11
returning	74	106	152	684	638
hold=none	60	155	240	495	8
x.data	52	148	206	471	681
domain-specific	28	1	291	317	354
notebook's	90	15	189	226	818
x.date	87	47	493	76	593
difference	10	227	17	631	246
splitter	6	69	46	380	384
re-scale	77	194	269	207	62
applicable	10	118	17	209	999
x.count()	87	55	4	664	99
stderr	81	162	327	147	383
splitted	71	110	6	122	673
assignement	92	104	158	733	154
portable	55	1	80	197	564
grabs	74	117	27	58	161
parse_dates=true	76	199	322	51	189
1294012800000	67	213	95	185	51
lvls	60	194	269	65	221
subscripts	32	178	473	743	793
90s	77	29	250	39	180
dict1	78	93	82	558	965
illogical	65	13	106	631	345
dict2	78	93	82	558	965
consumptions	60	102	418	129	910
xtickmarks	75	297	206	471	903
public	23	116	397	436	864
height_ratios	58	139	495	324	543
compilation	55	174	408	650	455
component	77	292	20	623	210
dabbled	17	62	88	396	275
pygobject	83	38	178	197	482
fred	78	116	430	581	67
two-tailed	79	23	332	638	11
902	12	279	488	751	465
900	12	142	220	528	106
907	52	19	263	284	622
dicts	3	297	455	776	903
harddrive	22	283	373	549	236
issubclass()	63	83	283	715	676
90%	88	266	22	574	668
\displaystyle	64	166	90	131	370
line_vec	11	234	4	531	56
emptied	22	197	485	534	214
empties	22	197	497	534	68
readily	38	1	291	317	79
wanted	65	28	246	209	472
df.query	43	52	68	181	985
wiped	29	171	388	190	284
two	74	232	159	746	36
copy=true	48	59	2	621	130
splash	90	187	108	599	248
astr	32	51	487	471	244
iteratively	3	50	497	534	953
wipes	29	263	306	122	655
ax.clear()	6	46	345	572	373
sequence.apply	87	55	493	76	591
np.linalg.svd	16	94	462	782	800
train_data.ix	52	19	160	284	855
timesteps	77	29	114	94	616
col2_0	12	142	95	172	106
dataframe.groupby	92	156	78	763	121
bottom-most	37	263	443	191	428
df.shape	52	19	68	290	622
paragraph	34	118	116	97	142
saullo	35	238	326	187	336
abandon	38	13	246	500	118
multiindex	3	156	65	763	125
-latlas	50	259	133	117	160
4.6.2	85	206	178	685	380
200.6	33	281	443	646	358
200.0	60	194	495	65	288
mtgp	43	72	93	265	708
sphere	33	176	282	315	138
attain	28	14	294	710	257
timegrouper	92	149	447	614	333
excelreader	92	68	275	183	971
8)]	15	201	180	215	437
!	35	207	371	205	767
clf_nb	0	12	461	701	881
a*c*e	11	234	4	531	56
13.2	85	45	236	225	980
dydx	52	0	263	284	19
13.0	46	272	490	225	544
ensemble	54	26	354	135	128
opr_date	43	47	231	265	708
.stack()	44	134	260	700	827
advice	68	207	465	432	343
scipy.signal.detrend	77	151	106	631	762
wavg	98	263	497	155	655
row_sums	1	57	112	232	726
30x30	71	288	213	674	329
sse3	96	174	408	90	729
crowded	37	31	467	22	851
act_code	3	110	163	482	984
8))	48	123	173	50	21
to_latex()	92	68	275	183	322
blunder	17	231	88	335	874
interpolates	53	288	339	720	396
1470	12	267	58	424	132
responsibility	10	241	291	691	215
redirecting	30	162	478	361	383
playing	17	62	88	161	647
that's	65	291	258	236	472
excepted	29	28	306	209	214
category_code	78	93	82	558	965
data_dict	47	134	93	776	260
get_datetime_from_string	0	267	58	483	679
filters	77	230	428	166	353
sin()	79	292	8	664	292
suffer	10	231	17	173	246
24	12	279	319	528	465
controllable	64	6	291	78	370
26	12	279	319	111	465
27	12	279	319	111	465
20	12	142	319	528	106
21	12	279	319	111	465
22	12	279	319	111	465
regrid	53	288	339	720	908
final_dict	43	134	461	145	260
system-installed	83	170	80	197	482
28	12	279	319	111	465
29	12	279	319	111	465
2%	88	266	22	574	89
2-	74	232	37	746	36
2*	11	234	242	531	56
underestimate	77	266	148	574	62
2^	89	142	207	261	90
home-brew	83	206	178	197	564
noticing	65	291	258	407	887
filter1	0	275	295	174	231
filter2	71	64	268	519	684
formulating	17	190	307	590	216
complain	29	28	227	791	473
association	3	297	182	587	363
2t	11	234	242	531	56
2u	72	281	114	338	646
10-100	88	142	55	196	46
2p	72	186	25	683	306
2r	47	105	256	463	475
2s	88	197	454	139	616
"))`	87	17	170	125	567
2}	47	67	256	145	764
2x	88	180	55	337	89
2y	11	234	4	531	56
gist_rainbow	20	119	259	757	786
2d	71	64	10	519	684
conic	33	176	282	617	908
2g	88	182	373	549	236
2a	72	281	252	338	646
2b	78	29	252	338	646
2c	65	39	116	285	812
2l	48	105	52	649	159
2m	88	160	220	80	54
2n	89	186	207	261	90
2h	47	149	447	460	612
2i	70	100	74	332	522
windowserror	63	244	283	553	584
harm	10	241	395	500	215
.cumprod()	87	52	180	181	985
freq_chan	1	57	112	471	881
energy	77	292	77	623	210
hard	17	241	395	334	327
fist	29	263	306	791	214
bascially	29	28	306	791	999
np.minimum	87	42	121	13	608
y_size	15	211	214	364	99
docid	78	150	445	479	984
discouraging	17	43	377	236	275
dag	86	222	426	611	820
geospatial	99	176	128	623	293
non-working	27	293	403	420	579
foreground	20	119	259	757	786
circumstance	10	231	17	500	999
gridspec_kw	58	139	494	324	543
x2*y1	11	234	4	531	56
s_low	98	258	82	796	58
1293840000000	67	213	95	185	51
members	74	232	386	746	868
item_id	78	93	445	41	832
cheers	35	207	371	205	767
computers	83	30	69	785	467
0.02	15	194	269	606	10
conducted	88	227	100	768	905
additonal	3	263	6	587	655
copper	84	195	128	122	353
imsave()	84	125	248	276	304
oserror	63	244	283	553	323
dont	29	28	410	209	472
unmanageable	88	283	373	549	236
done	29	171	272	40	472
par2	58	44	90	578	683
par1	58	44	90	578	683
zh	75	106	295	684	699
csv1	76	199	30	712	754
csv2	3	110	243	712	984
quads	55	174	29	691	651
least	29	28	306	209	36
182	12	279	488	111	465
collections.counter()	9	12	461	776	699
180	12	194	269	528	212
assumption	10	227	17	631	999
186	12	279	488	111	465
187	12	267	488	111	132
184	12	267	488	111	132
185	12	279	488	111	132
188	12	279	488	111	132
189	12	279	488	751	465
header=	76	199	286	177	413
pare	27	137	100	587	953
employeeid	3	93	243	390	828
para	52	0	263	215	19
get_paths	61	161	208	572	854
park	34	115	250	39	571
116.33	15	157	64	296	837
116.32	15	157	64	296	837
self.resultingarray	0	106	295	471	881
doctors	78	200	132	550	604
it.i	65	28	227	190	157
time_unit	87	149	447	460	612
believe	29	28	227	791	472
csvs	86	91	367	107	519
sparse.rand	16	94	333	455	800
2024	67	213	95	185	51
headers	3	110	329	712	519
pd.pivot	92	156	78	105	971
2020	80	163	284	723	72
supposed	29	28	227	209	472
2023	67	213	95	185	51
declare	9	204	397	436	64
~x	11	0	263	215	19
picked	29	171	306	458	417
~~	47	224	58	165	588
pol	79	275	295	363	292
~i	11	186	25	770	756
categorized	78	250	445	479	604
~a	1	52	198	605	714
orders	88	180	55	337	89
polyval	79	10	332	363	620
smalldoses	47	19	162	424	888
downsample	77	29	339	77	340
savefig()	73	243	18	648	721
majority	74	266	100	497	246
a^-1	16	94	462	562	800
grouped.get_group	43	164	68	700	832
~8	88	197	55	337	89
~9	88	197	55	196	89
~=	11	186	242	531	56
arrtup	75	148	206	476	681
dataframe.fillna	92	39	424	414	691
~1	88	160	220	80	54
~2	88	197	55	337	89
mno-fused-madd	63	244	283	553	30
~4	88	160	220	80	54
~5	88	160	220	778	54
~6	88	197	73	549	217
float_format	92	185	322	171	290
most	82	241	17	209	36
order=	48	249	357	453	280
non-categorical	3	26	168	354	816
~$	30	170	417	481	174
inlined	27	171	29	226	219
branching	55	50	341	756	382
corrupts	29	28	306	122	473
.attrs	86	68	379	285	502
script's	22	61	397	540	864
sector	78	250	132	463	604
gdp	78	56	445	479	604
summer	80	163	284	723	897
.order()	43	47	68	290	827
10.5f	47	205	346	177	576
networkx	64	6	278	158	329
contorted	82	241	378	334	327
manifold	28	26	354	413	841
networks	28	14	267	710	841
transdata	6	161	208	543	481
ruin	22	171	17	691	215
distributed	77	23	339	511	340
unhappy	10	231	227	335	28
gridata	29	28	140	684	473
dat	47	134	30	283	736
8	12	279	319	528	465
distributes	83	206	80	197	380
sfcube	75	294	10	231	981
sub-matrix	71	132	127	738	95
numpy.log()	79	101	125	756	382
_draw_frame	6	161	90	572	481
wonky	10	231	395	335	327
theft	65	197	22	574	345
sill	37	28	306	207	214
brenbarn's	35	238	187	187	308
np.row_stack	19	294	296	278	470
ax.set_axisbelow	58	44	452	642	162
didntlike	47	19	162	133	888
common	10	232	159	209	36
allocations	22	61	153	358	387
distribute3	46	170	124	202	482
locating	74	232	37	746	868
fledged	46	221	124	202	435
summed	98	64	154	98	673
irregularly	53	29	339	720	340
lion	85	276	233	198	858
\br	52	52	180	215	437
changeable	83	171	27	302	854
forthcoming	46	221	124	331	435
materially	82	180	341	537	246
epoch_time	43	47	493	727	593
2-tuples	75	297	10	776	903
fans	78	150	430	149	423
imsc	34	118	116	97	216
readme	30	261	486	797	368
burned	17	62	88	236	874
underling	74	50	100	691	122
transfered	23	85	294	94	519
')]`	43	105	231	265	708
seeded	93	151	193	628	507
popup	90	69	32	624	536
complementary	77	23	63	610	239
dividends	23	116	299	149	67
complement	40	146	127	587	363
colorbar's	58	290	90	341	683
half-hour	80	29	299	77	67
folding	28	151	106	94	970
reverse	40	232	182	524	363
16.21	47	224	162	133	888
np.random.normal	93	123	173	50	361
relabel	37	290	166	706	76
')])	43	105	231	71	255
logout	80	56	26	390	67
bin's	77	281	114	574	358
boreholes	77	250	77	425	210
simple	82	137	459	573	669
months_to_maturity	44	93	82	508	705
rad	33	292	20	664	227
eviction	3	110	454	94	509
simply	74	232	246	209	472
out-of-core	28	50	426	611	751
kernels	79	101	428	166	531
ensures	40	117	152	58	305
maptplotlib	61	136	175	158	847
quantisation	20	119	259	137	353
np.clip()	74	232	246	209	472
dataframe's	92	156	65	354	125
accessor	92	35	245	733	852
dot()	16	94	462	150	800
dropping	3	146	182	548	655
ensured	47	171	306	791	588
reformat	3	137	6	110	141
jpype	55	174	80	90	564
monodimensional	75	64	10	519	684
kalman	28	230	428	166	353
ifaction	43	72	68	265	708
25,000,000	11	142	4	139	60
gau	60	155	240	495	285
gas	78	250	77	623	210
df2.to_csv	76	199	286	283	736
gap	37	31	467	680	851
-------------------	27	115	116	97	421
gam	79	26	332	761	531
gal	12	163	284	133	931
gah	65	291	258	5	887
gae	83	206	178	197	467
pings	77	193	148	98	347
replaces	74	117	152	58	655
out_file	76	224	30	424	736
outperforms	82	180	55	337	89
tetrahedron	99	288	11	315	138
convn	16	101	125	703	392
kernel=	60	155	240	495	285
npred	70	59	74	332	681
replaced	74	263	306	791	673
2014-12-29	67	260	12	530	958
pre-compute	53	50	341	293	616
ts.index	43	149	309	460	612
lingo	10	110	152	200	999
scipy.mean	70	59	74	332	60
mystic	38	10	324	744	610
*100000	52	19	263	364	855
echelon	16	94	462	150	988
"]`	43	17	223	4	567
verticalalignment	58	138	265	651	224
the_func	0	275	295	44	231
apnt_na_actn	43	72	231	265	260
fmincon	38	10	324	214	610
gtkagg	73	38	134	635	810
"]]	43	17	223	4	567
libc	55	174	29	790	64
whereis	30	170	244	165	960
pip.log	30	259	94	421	960
relatively	82	241	100	497	463
nonscalar	10	50	426	663	843
appreciably	88	180	55	337	89
np.linalg.lstsq	16	94	462	363	620
non-repetitive	93	297	193	628	507
cloud	99	288	11	315	908
dereference	9	109	331	594	64
sym	47	224	93	42	622
"]"	67	213	95	185	567
purpose	38	137	17	525	79
"])	43	17	223	4	567
#ff0000	20	155	240	495	285
tstate	63	244	283	352	39
memoization	55	214	422	537	219
yum-builddep	13	170	50	481	174
ax.axis	58	243	494	775	599
swiss	78	116	430	581	67
lda	28	26	354	135	816
ldd	96	259	408	165	411
matplotlib.matplotlib_fname()	30	122	478	159	181
distracting	10	118	116	590	589
ax=ax	58	155	195	418	12
re-used	22	61	388	572	370
newlines	32	16	420	403	768
wage	47	105	93	53	764
newton-raphson	79	10	324	487	610
superficial	75	106	295	684	231
flow_pramb	0	106	295	684	231
graph()	6	46	345	599	356
vague	34	118	307	590	216
sub-array	71	64	127	738	95
deliberately	10	231	17	200	215
win	83	30	480	785	858
1675	22	13	143	39	214
x*y	1	274	268	305	726
x*x	11	55	201	664	743
profile_default	30	122	478	159	181
matrix2	75	148	206	538	714
display.notebook_repr_html	76	243	452	171	290
lexsort	19	42	296	524	886
np.random.sample	93	123	173	664	743
displace	37	290	467	780	76
judgement	34	190	307	590	812
smallness	57	151	106	654	970
.strip()	32	51	487	151	244
df.group	60	155	195	42	12
semi	74	232	37	209	36
disks	33	160	282	212	755
---------------------------------	27	115	116	15	508
mismatching	29	231	8	335	568
flux	77	102	77	182	210
wit	64	6	410	158	457
-command	73	170	134	91	482
neatest	82	214	378	573	29
accelerations	28	14	114	710	563
54.5	87	52	4	520	437
qq-plot	79	23	332	511	239
30x	82	180	55	337	171
obliged	68	207	371	205	767
dict_values	63	83	383	616	286
30s	88	197	73	77	612
30t	80	149	447	2	24
event-loop	90	187	108	599	248
nat_actn_2_3	43	200	93	463	708
instantiating	9	61	386	358	359
pricing	23	116	430	149	67
mirror	77	292	443	191	363
timeits	29	62	143	39	905
brent	80	116	299	581	67
cpickle	86	222	426	102	820
acquaintance	55	1	69	396	275
view()	19	294	296	231	782
connecting	61	288	282	329	83
verbally	27	293	403	420	579
multi-band	84	195	128	674	353
308	15	256	236	514	980
309	12	256	488	751	465
stripplot	51	136	195	272	847
patient	78	150	445	479	604
numpy.core.ma	81	88	110	739	584
taxing	82	241	143	334	327
300	12	142	220	528	106
301	12	279	488	751	272
302	12	279	488	751	132
303	12	279	488	751	930
304	12	279	488	751	132
305	12	279	488	751	132
306	12	279	488	751	465
307	15	279	488	172	96
accesing	74	171	386	110	526
542401	71	142	268	139	60
30+	88	160	73	80	54
__builtin__.any	0	185	452	684	881
scipy.stats.mode	19	214	125	13	512
triangulated	99	288	339	315	762
optimize	55	180	341	537	219
constrains	79	151	324	214	970
goods	78	200	252	479	604
frombuffer	70	204	357	453	782
constraint	79	10	324	214	970
'])```	43	72	231	265	708
justs	86	50	426	663	843
extensions	55	174	5	650	455
data3.groupby	43	164	181	700	895
look-ups	3	50	154	587	125
re-edit	27	118	116	590	328
__future__	81	88	110	739	889
frameb	44	2	260	700	827
.plot	51	155	195	495	12
steady	28	14	267	710	942
framed	65	118	116	590	216
;p	81	5	110	130	870
steven	34	115	35	20	142
frames	3	110	6	94	953
lesson	17	291	377	236	345
histogramming	77	193	63	31	780
eol's	35	238	187	187	308
euclidean_distances	16	94	349	539	412
camera	33	192	128	676	257
compilable	27	293	403	420	579
opponent	78	93	445	390	965
chaudhary	35	238	326	187	336
straight-up	82	180	479	497	463
gauss	79	10	324	487	610
-type	92	106	275	703	699
boys	78	150	430	479	604
frame3	43	17	223	4	567
frame2	78	93	82	155	965
frame1	44	93	82	155	965
pd.dataframe.from_records	44	134	260	700	827
left_index	92	2	253	33	176
y-intercept	79	23	332	363	620
vmin	25	119	320	49	845
ffill()	92	156	424	414	691
np.seterr	63	39	389	171	686
np.count	92	193	78	31	121
asahi	35	207	371	205	767
server-side	23	84	294	184	127
exploration	82	241	291	525	328
rasterized=true	25	161	208	49	481
resampling	80	29	447	77	333
unflattening	75	50	10	231	678
kahan	55	173	8	537	246
partition	3	50	37	534	953
bheklilr	27	137	116	15	421
calories_list	1	148	206	471	714
single	74	232	37	209	36
quoting=3	76	199	322	51	189
necks	22	147	294	537	219
superflous	81	88	110	739	183
tiling	71	64	268	674	747
tavory	35	238	326	187	336
barplot	51	136	195	22	847
two-sided	79	23	332	638	11
cmake	13	128	5	650	482
fontdict=font	47	200	77	182	210
priors	28	151	106	135	970
cohesive	3	50	6	663	36
priori	10	151	106	631	999
igraph	73	125	278	158	329
brushing	83	206	80	197	142
os.path.abspath	76	5	286	283	736
data_df	44	134	260	155	827
conventionally	61	232	282	646	138
data_dc	1	19	112	284	60
microsoft's	83	1	80	197	634
prepared	23	137	294	500	866
mixed-types	75	99	421	601	843
list_of_items	47	224	30	424	881
depicting	61	281	114	646	744
decisiontreeclassifier	28	26	354	135	816
dimensions	71	64	268	519	981
exif	86	125	123	607	405
negating	75	184	10	231	122
mldivide	16	94	391	336	800
data_str	86	241	329	601	463
coef_	79	26	293	135	412
enrichment	47	67	162	145	764
initiating	74	171	386	122	473
a^t	16	178	462	562	800
classic	10	241	17	500	812
x.minute	87	201	493	76	593
15,000	88	160	220	80	54
schema's	46	68	119	478	824
clickstream	43	72	68	265	260
meta-data	86	222	426	611	820
factoring	82	151	106	631	970
df.idxmax	87	164	181	700	593
8])	48	19	303	364	640
exit	63	187	108	361	248
columns=1	44	134	65	155	965
scipy.linspace	93	123	173	664	361
8]]	52	19	263	364	265
identically-shaped	75	64	10	519	684
labels	37	290	166	706	76
a^2	11	234	242	531	56
vln	43	72	68	265	708
vla	55	6	123	607	405
vlc	84	192	365	676	25
ddl	86	68	119	478	126
master_df	3	156	65	354	125
10*n	89	186	207	139	756
paraboloid	33	10	282	487	725
heat-map	61	136	175	626	847
nanmax	19	42	424	414	608
columns={	44	164	181	700	895
.any()	87	52	198	181	985
prototyped	23	1	27	317	866
imgur	34	293	3	702	915
avgs	98	146	206	141	66
bernie	35	207	371	205	336
newrow	44	134	260	155	260
python2.x	30	12	455	480	932
3^	89	142	207	261	90
meshgrid()	53	294	238	291	396
rank()	92	156	78	105	121
object1	9	237	158	436	864
object2	9	237	158	605	864
insertion	40	50	182	524	68
velx	33	102	418	319	910
recursions	82	118	116	631	970
3z	89	289	242	531	56
3x	88	180	55	337	89
3}	47	67	256	145	764
3s	88	197	73	196	217
pipes	23	85	71	147	431
cicle	0	197	497	534	68
3k	28	14	267	710	841
wiggles	33	176	77	623	210
3h	47	149	447	460	612
3n	89	142	207	139	60
3m	78	149	447	460	270
3l	48	274	52	649	159
3c	50	259	277	734	469
3b	78	258	252	338	646
3a	77	56	252	338	646
3g	88	30	480	785	236
3f	67	213	95	185	51
exercise	17	43	377	525	275
keyerrors	29	28	389	715	39
numpy.tile	19	294	296	291	470
---->	47	201	58	737	454
443	50	267	118	483	588
442	71	274	268	305	436
leveraging	55	174	341	537	651
440	12	279	488	751	465
spacing	37	290	467	207	76
python2.6	30	259	277	106	960
python2.5	30	259	244	106	960
444	52	19	263	364	265
objects	9	99	386	691	843
-----	47	224	58	550	888
luis	38	62	80	97	142
preamble	73	166	134	91	862
implicit	10	10	17	744	610
39	12	279	319	111	465
38	12	279	319	111	465
33	12	279	319	111	465
32	85	30	480	685	22
31	12	163	284	718	483
30	12	279	319	528	106
37	12	279	319	111	465
36	12	279	319	111	465
35	12	279	319	111	465
34	12	279	319	111	465
3+	74	206	80	202	932
3*	11	234	4	664	743
weekday	80	35	26	723	333
3-	23	224	58	595	588
axisbg	58	138	495	651	845
3%	88	197	55	337	89
copes	53	185	238	720	396
formulated	79	118	116	590	216
nlopt	55	174	422	756	761
colors=	60	155	240	603	114
axis's	64	290	166	706	76
standpoint	82	43	479	321	354
decrease	22	266	485	574	668
ii-	16	178	473	562	884
orderings	75	227	159	150	382
gateway	17	43	377	396	812
ijulia	90	15	189	226	177
waaaay	88	197	100	80	217
externals	67	244	95	24	323
asteroid	61	176	282	626	908
dt64.astype	70	59	309	332	522
textblob	32	16	275	482	244
weckesser's	35	238	326	187	308
normalizes	74	117	152	98	638
np.sort	19	42	296	524	886
upcoming	46	221	124	331	435
iir	79	292	20	430	547
trait	9	109	331	594	386
dupes	44	156	181	700	827
convolve()	82	214	125	756	382
trail	61	31	282	212	528
transient	40	13	270	136	142
normalized	77	23	148	98	347
c_float	70	204	74	790	64
python-dateutil	13	128	50	104	715
iii	28	250	132	463	604
hints	68	207	465	432	343
warrenweckesser	35	238	326	187	336
account	74	232	37	98	36
pandas.read_sql_query	92	68	119	478	824
f	0	186	25	129	292
val_2	79	193	317	638	11
obvious	29	241	395	236	999
3960	71	274	268	305	159
pyphi	83	206	178	197	467
rsquared	79	23	332	638	11
test()	81	275	295	684	383
phillip's	82	137	187	97	308
reserved	32	237	397	436	864
objectid	78	110	93	390	410
twos	98	146	127	605	602
python2.7.10	83	206	244	165	380
taxon	78	93	82	155	965
sought	98	146	454	191	868
reserves	22	182	373	549	387
forward=true	6	243	18	16	356
fsolve()	79	22	324	566	13
proof-of-concept	17	62	143	321	246
ascension	33	176	135	617	725
reed-solomon	28	1	267	179	866
255.0	57	89	4	592	743
pyplot.scatter()	25	161	208	543	481
curving	37	31	443	780	276
revo	13	206	178	104	485
lame	65	43	395	236	98
boxing	22	50	153	691	246
pyplot.ion()	90	46	345	599	356
r=0	61	176	282	212	762
r=1	72	186	25	593	756
forest	28	26	354	135	128
lamz	47	224	418	471	881
revs	0	12	461	471	903
bin1	11	194	4	606	743
bad.any()	10	227	317	605	812
bin3	98	52	162	141	221
bin2	98	194	63	557	221
onefile	13	15	189	517	383
3-4x	88	180	55	337	89
indixes	98	146	454	587	984
factored	79	23	332	487	988
string.split	19	214	455	480	806
ambiguous	10	217	421	263	146
scipy.signal.lti	38	109	125	756	382
scipy.integrate.ode	79	10	324	566	610
3859676.9971	15	157	64	296	837
bind	74	232	397	436	629
bing	17	6	80	321	118
pyplot.savefig	73	144	18	16	721
9am	80	163	254	723	72
self.canvas	6	46	345	44	112
per-element	75	214	295	756	782
bins	77	281	63	557	780
fig.canvas.copy_from_bbox	6	46	345	599	356
numpy.array_split	19	42	296	13	512
_dotblas.so	96	170	94	165	960
looping	82	50	497	534	68
pylab.errorbar	51	136	226	641	481
charting	23	6	278	317	611
agricultural	78	250	77	94	604
.str	43	51	487	151	244
nonempty	98	110	317	601	984
willing	68	190	377	500	803
.cumcount()	44	164	181	700	415
z.t	1	102	418	232	910
typemap	9	204	29	790	64
pd.read_sql_query	76	68	119	478	824
4.768	15	211	61	364	265
spdiags	35	106	295	684	782
spektrum	12	110	243	712	754
spell	92	156	78	105	761
spelt	52	118	461	471	622
pymc3	79	23	332	761	531
all-in-one	38	1	80	197	637
february	80	163	284	718	72
dbus	29	28	389	361	473
blazing	55	174	408	90	651
reloading	22	171	388	110	526
df.get	43	72	68	265	708
scrollbar	90	69	46	380	384
tab_c	52	19	263	485	855
parties	23	1	294	321	866
accumulated	98	146	148	98	347
cooley-tukey	28	180	106	537	246
keep_default_na=false	76	185	322	415	698
matplotlib.ticker	58	44	166	341	184
matt	35	115	409	20	336
mats	75	99	10	756	694
%d%m%y	43	205	309	125	879
c-extensions	55	174	408	197	564
docutils	73	125	278	158	127
mate	35	207	371	205	767
messenger	28	14	267	710	841
color_threshold	20	119	259	757	683
mata	1	106	112	471	726
sys.path	30	122	478	159	181
math	38	214	8	744	382
586	47	173	359	791	208
585	12	19	162	364	265
pd_series	3	297	182	587	125
580	12	256	488	751	132
hyperparameters	79	26	354	638	11
fractal	77	14	267	710	841
hankel	42	94	462	782	800
dmat	71	132	268	150	756
myseries	44	134	65	155	827
dmax	72	194	418	129	773
afterward	22	171	388	190	629
interaction	23	231	294	624	568
mat2	75	132	273	476	757
mat1	1	274	112	305	714
bidirectional	99	297	185	293	744
15:30	67	260	12	372	958
dtype={	76	21	286	51	987
0.0933237513	74	232	306	209	36
pgf	73	38	134	91	810
overshoot	53	151	106	631	762
pgm	84	192	123	592	427
strategic	28	1	291	317	354
'))"	50	37	170	130	30
')))	43	105	180	71	255
sockets	23	85	71	349	431
3.5gb	22	182	373	549	236
ancient	46	221	124	202	435
.set_visible	58	44	494	485	480
unspecified	26	232	152	746	868
.astype()	9	294	331	594	782
tylerthemiler	29	28	116	97	36
x.month	87	201	493	76	593
completed	22	171	272	361	214
s32	70	105	74	53	522
'))`	43	105	170	460	593
bb\n	15	284	236	514	110
completes	22	187	108	361	248
resist	65	190	307	590	216
pysparse	16	94	333	455	788
10^-5	57	194	269	686	212
10^-7	79	275	97	129	292
overplot	61	136	175	22	847
10^-1	57	194	269	686	212
10^-3	57	194	269	686	212
10^-2	37	290	269	686	212
amplitude	77	292	20	430	227
visited	78	150	445	479	604
euler-maruyama	28	10	324	744	610
symmetries	10	151	106	654	970
ctrl-k	27	263	305	468	188
fluctuation	77	151	148	631	762
plt.xticks()	58	44	166	341	184
kepler	28	14	267	710	841
unlikely	10	231	395	500	463
apparently	29	28	306	791	473
paramiko	23	84	119	184	126
runsnakerun	34	147	234	302	565
acceleration	28	14	267	710	464
copy-n-paste	27	293	305	420	579
mil	88	160	220	80	217
congrats	35	207	371	589	767
mia	29	31	306	757	786
mic	77	192	365	676	946
neater	82	241	378	573	29
mid	20	13	259	757	786
df.notnull()	87	52	198	181	985
mix	10	99	159	458	28
list_comp_values	72	148	162	141	221
mis	19	137	459	525	421
mit	17	1	35	179	275
lnlike	0	106	140	684	231
signifying	81	110	329	746	868
plt.title	58	155	240	418	890
where's	65	13	227	432	589
interactor	98	93	243	796	984
propagate	74	146	424	414	509
capacity	22	182	373	549	236
sally	78	150	430	20	423
gurus	68	190	377	665	571
afresh	22	187	80	39	467
request	34	173	359	604	208
filelist	76	199	30	283	736
graphs	61	136	175	22	847
ax.format_coord	25	44	208	543	683
comma-separated	32	110	420	601	519
artificially	77	266	467	574	668
psycopg	86	68	119	478	126
numpngw	83	6	80	607	405
skinny	37	31	467	780	851
}	47	67	256	145	764
octave-3.6.4	11	234	180	215	99
sorted_data	60	123	63	557	12
.corr()	43	47	68	290	708
convolved	77	292	428	430	547
sub-string	32	110	163	253	798
staff	23	150	294	149	423
grabbed	74	171	27	110	161
pos_0	75	220	158	476	757
python-3.3.0	30	259	277	303	469
controls	64	117	152	641	370
thorsten	53	238	326	187	308
plt.interactive	90	46	452	642	356
deconstruct	79	214	140	547	382
:])	52	0	303	284	640
rrmeanarray	65	118	227	407	887
inferior	29	231	317	361	473
:]]	52	0	303	290	640
lobe	99	14	132	191	563
coworker	17	62	88	233	746
recoded	35	238	116	187	308
b-values	52	72	68	290	708
3000000	47	142	173	139	60
tickerlist	75	297	455	776	903
integrate_iter	0	46	345	684	231
rtfm	17	291	258	236	345
cycled	64	171	497	534	664
count_ones	87	55	48	547	593
manager's	78	150	397	463	423
cycler	64	161	90	42	664
cycles	22	197	73	574	217
monochromatic	84	195	213	674	175
constructing	74	50	386	663	359
values_	71	110	454	746	756
17:52	67	213	95	185	51
enhanced	38	6	359	78	208
5-20	88	142	497	139	393
17:59	67	260	12	372	958
pyfits	86	222	382	260	882
)));	11	0	180	50	371
pattern	74	232	163	512	36
g.apply	87	164	493	76	593
ralph	43	200	231	204	708
))))	11	234	4	531	99
strftime	92	35	245	560	879
semitransparent	20	31	259	757	786
sub-optimal	82	241	341	497	308
hash-table	38	297	291	776	903
thumbnail	37	69	46	158	536
_merge	78	93	243	390	984
)))]	52	201	180	215	371
event_name	44	134	461	471	827
f1-score	79	26	354	638	816
emitted	22	187	108	716	112
transpose	40	64	154	231	678
numpy.interp()	19	42	296	13	512
column-2	1	57	112	232	470
vstack()	19	294	296	278	470
values2	75	148	206	73	714
ts.groupby	87	201	493	76	593
plugin	83	6	278	158	450
taking	74	197	148	98	526
.mul()	92	227	317	457	675
values=	44	164	181	204	895
imagedraw	84	230	123	607	405
indptr	75	148	333	455	788
pd.groupby	44	156	78	105	971
interation	98	19	162	191	428
nlargest	92	42	78	105	556
\large	73	166	134	764	862
futher	74	232	234	110	36
)))`	87	55	180	50	371
swallow	38	1	80	500	564
values*	10	118	182	590	885
tree.query	1	57	418	232	910
refcheck=false	22	61	153	358	282
relevant	27	137	234	97	421
unnormalized	77	29	148	22	347
gone	29	62	88	161	746
.read_csv()	76	185	322	51	698
labelencoder	92	26	168	135	816
no-cache-dir	13	170	50	481	174
ab	47	130	25	556	306
-02	63	244	389	553	30
arguement	0	185	226	641	683
basing	74	137	459	525	421
unearthed	17	62	116	236	874
ad	78	115	430	97	423
ctypes.c_double	48	59	85	232	681
series.sort()	92	220	158	105	130
n_classes	72	132	25	683	988
ah	65	291	258	407	887
curtain	61	13	143	39	589
proposal	34	173	359	604	208
columnar	86	110	6	663	519
16-bit	84	192	123	592	946
adapting	27	137	459	15	421
finishes	22	187	108	361	248
64gb	88	182	373	549	236
1350	52	19	263	284	855
np.int32	70	59	74	332	522
preforming	40	50	341	537	246
numpy.random.randn	93	123	173	628	361
bulk	23	50	294	370	953
finished	22	187	108	361	248
boundarynorm	25	119	320	49	296
bull	32	67	223	145	567
bulb	77	14	250	429	786
volunteer	17	1	377	321	275
divisions	57	89	8	654	62
multi	3	232	6	354	125
imbalance	28	26	354	135	816
continuum's	83	174	35	461	637
file-reading	86	137	329	458	444
as	74	232	306	209	36
pyplots	90	69	46	706	384
cv2.imdecode	84	219	102	401	427
x.merge	44	2	253	700	895
?!!!	29	28	227	97	472
df.index.freq	92	193	78	105	612
inherits	9	109	331	404	386
site's	34	173	116	97	142
det()	16	94	55	537	800
cherrypy	23	84	376	184	127
manually	64	171	246	190	629
almost	29	28	306	209	463
walks	28	14	497	534	616
contiguity	40	184	153	453	122
y.append	52	0	263	215	19
ax.relim()	58	44	494	341	388
non-diagonal	40	64	127	150	122
dfstacked	43	72	68	204	708
regression	79	26	354	638	620
dt_a	80	35	245	781	920
read_pickle	86	68	119	478	824
testimage	48	19	112	305	21
curiousity	29	227	88	39	905
truediv	92	39	78	105	934
infer	74	99	152	601	638
np.complex	70	59	74	332	447
listdir	47	297	461	471	260
reporting	23	231	250	604	208
quad	79	10	324	416	13
spitting	29	171	143	361	473
datatypes	70	99	426	663	843
memory-wise	82	241	378	497	463
numbered	74	263	454	468	428
ax.autoscale	58	112	494	642	599
antonio	78	150	252	479	604
arising	10	231	17	173	378
preallocate	75	184	153	358	143
deltas	80	35	245	781	920
deltat	80	258	26	77	377
myplotlib	90	136	46	572	384
deltax	1	274	112	139	756
necessitate	74	232	37	110	36
runner_id	3	156	65	587	984
unary	9	214	198	113	135
lossy	84	125	123	276	304
deltae	47	224	25	556	756
pandastic	82	241	378	573	29
numpy.show_config()	96	170	408	199	411
ads	78	150	430	698	604
plot_surface()	25	161	208	222	296
mathematically	79	151	8	487	970
adf	47	227	430	457	588
add	74	232	37	190	629
adc	81	88	365	676	257
confusions	63	83	389	715	39
adj	98	172	26	581	622
dt64	70	35	309	727	920
match	74	232	37	587	868
delta1	52	0	263	284	855
delta2	87	55	201	562	726
delta3	16	178	462	562	800
view's	74	184	386	691	161
bfill()	92	156	424	414	691
preallocated	75	184	153	358	387
.as_matrix	87	134	260	232	827
xydata	33	102	208	543	908
-----------	67	213	58	550	888
left-click	90	187	32	624	536
accessible	74	237	397	436	161
typeerrors	29	227	389	715	979
discontinuities	61	151	339	631	303
res.x	52	19	273	284	221
authority	34	190	307	590	216
proper	74	232	246	209	472
idealy	23	150	294	110	328
subjects=	64	44	452	418	162
aesthetically	38	6	390	78	256
(([	52	0	263	232	855
0.25	15	194	61	606	10
0.26	11	234	4	606	743
0.27	15	211	61	606	10
0.20	60	194	269	606	10
0.21	15	272	61	606	10
0.22	15	272	61	225	544
0.23	15	272	61	225	10
in-line	90	125	189	226	575
masked	75	146	424	414	203
200,000,000	72	281	114	425	756
datestart	43	201	309	727	852
pepper	32	67	132	463	475
_matrix	47	110	333	455	788
measurment	77	29	77	94	210
nonuniformimage	53	294	208	720	396
pylab.plot	60	155	240	418	889
stellar	38	6	274	205	767
unevenly	77	29	339	77	340
although	29	28	395	209	999
(((	11	234	180	215	371
about	29	28	227	209	472
actual	27	137	306	209	421
socket	23	84	365	676	257
certainty	10	227	106	537	970
january's	80	163	254	723	897
mplcanvas	6	161	90	207	449
\s\s+	76	199	286	51	189
scipy.io.loadmat	86	222	382	102	478
isinf	70	214	295	684	761
0.2f	47	205	346	177	576
prevailing	80	56	299	390	67
powerpoint	73	125	248	276	304
a.indptr	52	148	206	73	77
functional	38	241	291	525	354
elemnts	71	64	454	73	684
fit.params	52	0	263	364	288
708	88	142	220	528	106
data.dat	76	199	286	283	754
gleaned	34	254	234	302	565
ridge	79	26	354	135	816
self-explanatory	27	137	459	15	421
joaquin	35	207	371	205	336
bc_arr	75	294	10	231	782
biggest	29	266	100	537	868
log10	11	234	269	686	743
glib	17	291	258	236	345
gzip	86	222	426	611	820
v1.10.1	85	30	480	785	858
4-core	88	30	480	785	431
repeated	3	146	454	587	36
rajat	27	173	116	97	328
logical-and	19	214	198	113	135
non-adjacent	40	50	339	691	122
heatmaps	61	136	175	22	847
rc1	46	221	151	331	435
px_last	78	200	82	463	410
latencies	77	266	22	574	531
log1p	11	55	4	664	743
bandpass	77	292	428	430	227
epel	13	206	211	197	482
excruciatingly	22	180	100	497	463
colum	3	110	65	155	984
memmaps	55	50	426	611	820
internals	38	109	143	312	354
stackoverflow.com	34	62	247	161	746
separating	74	263	420	468	148
int64_t	9	204	29	790	64
in-between	77	29	148	631	340
proceeds	22	171	306	361	214
0.70710678	52	19	263	364	265
mu-sd	51	136	349	626	12
46	12	279	319	111	465
47	12	279	319	111	465
44	12	279	319	111	465
45	12	279	319	528	465
42	12	279	319	111	465
impossibility	10	231	17	334	327
no_classes	48	274	112	305	538
41	12	279	319	111	465
variable-length	86	99	426	663	843
4-	47	186	162	133	588
4*	11	234	4	664	743
00-05	67	213	95	185	51
tupleize_cols=false	76	185	58	381	588
4%	58	266	22	574	299
diff()	92	193	78	414	121
offsetting	37	232	443	780	526
pd.pivot_table()	92	134	78	105	971
full()	19	180	55	337	89
trackback	27	293	305	420	579
readline	30	170	327	147	383
4}	47	67	256	145	764
4x	88	180	55	410	89
x86_64-linux-gnu	50	259	277	303	469
entertainment	78	150	252	479	604
4r	72	281	114	338	646
4s	88	197	73	574	217
original	74	137	306	548	673
4n	88	266	114	574	646
4l	48	274	52	649	159
4m	88	160	220	80	54
4k	88	283	100	549	236
as_matrix()	92	106	158	105	699
-msite	30	170	244	481	174
old_a	0	220	158	476	881
accidents	78	56	148	77	66
limited	10	43	17	209	999
linebreak	32	16	420	403	768
searchable	34	190	307	97	216
20130825	52	19	263	284	622
go.matrix	38	1	35	317	564
label_param	32	51	487	177	244
hitch	29	171	108	361	473
facilities	38	1	17	317	79
time2	80	35	26	727	377
poorly	10	118	395	590	999
1.16	88	197	55	196	217
1.17	88	197	55	196	89
1.14	88	256	55	196	432
1.15	57	89	325	788	22
1.12	88	266	73	141	931
violate	10	151	106	631	999
1.10	46	221	124	331	435
1.11	15	256	162	196	432
chthonicdaemon	35	207	409	187	336
sklearn.preprocessing	74	26	349	135	412
jmcnamara	35	207	371	205	336
10,343	15	284	236	514	980
under	29	117	306	209	36
79.73	67	213	95	185	51
0_o	29	28	246	209	472
conjecture	17	43	377	236	812
pre-calculating	53	288	339	646	340
a.__getitem__	52	0	160	284	855
ticklines	37	31	24	780	851
0_y	3	134	65	155	655
stat_table	76	68	119	478	824
interleaved	74	195	10	601	28
divisor	79	23	8	428	484
pytables.py	50	145	118	580	429
look-up	74	297	182	759	868
1.1f	76	205	346	177	576
state-space	79	10	324	667	988
multiprocessing.pool	55	85	71	349	431
py27-ipython	13	170	50	165	174
json.loads()	86	68	275	183	141
bicycle	78	150	163	479	604
throught	74	232	29	790	405
consistent	10	231	152	335	999
argpartition	19	42	296	13	886
fabulous	38	207	274	205	79
numpy.ma.masked_array	98	146	317	673	509
boost-python	83	170	244	165	174
siunitx	73	166	134	131	862
introspect	64	237	305	110	370
df.new	52	72	68	290	985
poison	77	13	485	429	214
re-installed	13	128	211	104	485
zach	47	115	80	381	588
zacc	87	57	121	673	608
representer	75	99	386	601	673
set_label_position	58	290	166	706	76
])))`	52	0	180	215	70
nlist	1	19	273	284	19
represented	74	99	386	746	684
minvec	75	106	421	476	981
finders	28	14	267	710	841
dlopen	63	244	94	553	323
symlinks	30	170	244	1	181
anycase	82	241	274	205	29
forum	34	173	247	97	216
code-only	34	190	307	709	216
dificult	29	28	395	791	874
temparray	52	224	349	471	881
precip	78	56	445	723	897
genfromtext	86	54	382	260	698
allready	65	291	227	236	345
fourier	77	292	20	430	547
get_text_width_height_descent	50	267	118	483	927
letting	82	13	246	458	118
g's	35	238	116	187	336
index-value	3	146	182	587	9
julia	38	1	390	158	389
mysqldump	86	68	329	107	126
months=1	80	201	309	2	281
"`	32	17	170	4	385
genomics	23	192	365	676	519
quasi	3	110	317	587	984
numpy.random.randomstate()	9	109	397	628	807
hospital	78	150	445	479	279
brewer	35	207	371	525	336
group_concat	3	110	6	354	125
noting	10	231	395	791	305
preview	73	125	248	276	304
assessment	35	118	116	590	336
1.40309e-06	15	157	64	514	144
.translate	43	47	493	76	593
v1.7	46	221	151	202	380
)]=	52	0	180	290	371
v1.6	96	206	211	202	564
]')`	70	273	309	678	700
grief	17	231	395	659	568
correspondingly	74	232	37	746	36
gammainc	55	180	422	756	761
x.any()	87	52	198	770	985
np.concatenate()	19	294	296	278	470
error's	27	28	305	420	473
tremendously	68	207	371	205	767
.wav	86	192	365	676	946
.nbytes	48	274	112	305	60
install	13	128	5	104	482
top-left	37	31	443	191	964
pyscripter	83	15	189	540	818
)]'	47	45	264	513	437
delim-whitespace	63	185	283	641	39
d.date_range	67	201	309	348	24
levi-civita	16	178	125	150	382
scipy.io.wavfile	86	222	382	260	946
draw_networkx_edges	64	161	208	543	481
set_column_sequence	87	47	493	76	593
p.size	88	142	173	139	60
vagrant	30	259	277	106	960
rpy2's	46	173	359	604	208
dendropy	38	6	278	302	854
column_indexer	52	104	23	733	92
eyeballs	34	190	307	590	216
badly	29	231	395	631	999
matplotlib.pyplot	81	88	110	739	889
matplotlib.imshow	53	195	339	626	908
jumping	17	13	143	39	589
bhajun	35	207	371	187	336
conf.py	30	162	478	247	181
.tar	13	261	486	797	368
complexity	89	180	207	261	90
includedir	30	259	94	165	960
ultimate	74	137	37	110	36
decreasing	77	151	97	574	668
categoricalindex	46	221	124	331	435
1500x1500	88	283	100	674	89
panda-ish	82	241	378	573	29
annotate()	64	161	90	543	481
alternation	77	186	428	139	756
jpeg	84	192	123	607	427
synonyms	37	28	351	4	385
london	80	285	323	742	765
replicating	40	50	182	548	526
file1.csv	86	110	30	712	754
fittings	79	10	324	487	426
cli	90	15	189	540	818
cld	20	119	259	757	786
clf	6	46	293	418	104
first-level	78	93	454	390	984
compelling	10	1	17	500	812
kwargs	0	44	226	641	8
dateutil.parser.parse	43	273	309	727	987
clr	55	272	29	90	544
cls	9	109	117	594	386
`	74	214	295	684	782
list1	52	12	461	471	591
linearndinterpolator	53	288	238	720	396
unsupported	63	83	283	715	286
tofile()	86	222	382	260	405
df.irow	52	52	68	181	985
get-pip.py	13	261	486	481	368
shadows	81	237	397	739	864
eigenvalue	16	94	462	782	800
relevant_data	43	72	298	378	945
mcmc	28	14	267	710	841
spsolve	16	94	462	782	800
potatoes	78	150	445	479	423
set_figsize	81	88	383	616	889
odbc	86	68	119	478	126
tvtk	38	6	278	317	450
fitness	28	250	114	638	970
latcondition	87	52	198	139	437
scipy.signal.find_peaks_cwt	34	254	234	302	565
np.save	86	222	382	102	820
numpy.unpackbits	70	100	357	332	979
trainset	3	146	6	587	953
fraught	10	231	17	173	215
poly1d	79	10	324	363	620
norminv	79	101	125	703	392
thinkstats2	23	84	27	595	467
trajectories	99	14	282	710	326
pyarray_api	50	204	58	790	64
")	47	17	170	4	385
prony	79	151	332	511	531
antialiased	25	161	208	49	664
pandas.read_sql	86	68	119	478	126
speedups	55	180	55	537	651
pd.dateoffset	87	201	309	727	281
correctness	10	227	17	457	905
columnname	44	134	260	700	827
hopeless	17	62	250	236	812
differnt	74	250	77	94	526
onto	74	232	175	190	908
.grid()	6	46	345	44	481
rand	93	123	193	628	361
rang	43	200	231	204	708
get_xticklabels()	64	44	166	706	683
einsum()	19	294	154	231	782
rank	98	146	127	293	988
hearing	68	190	377	321	803
restrict	74	232	37	209	868
rant	65	190	307	590	345
matplotlib.dates.date2num	64	35	245	560	920
magics	30	259	478	381	842
box-forced	58	243	494	775	599
newey-west	79	23	332	638	531
toy	27	293	403	420	421
rewritten	82	137	341	40	219
top	37	31	443	780	851
geany	83	15	189	540	818
indeterminate	3	297	182	587	125
tow	78	56	454	41	984
tot	98	130	162	796	428
tou	65	118	116	97	887
gridlines	37	290	24	706	76
os.path.isfile	76	199	286	283	413
-lbuild	50	259	133	117	160
dask.array	55	50	426	611	820
too	29	241	395	334	463
tol	87	216	4	559	907
tom	35	207	409	187	336
toc	88	197	73	196	588
inconvenient	82	241	395	334	327
insightful	35	207	371	205	767
urban	78	150	132	479	604
df_p	43	155	240	265	12
folded	77	152	467	94	668
extra_link_args	43	200	231	138	30
max_diff	43	72	231	265	708
pre-generated	61	125	278	158	127
segfaulting	55	231	395	691	564
numpy.__config__.show()	63	214	140	684	508
pyramidal	28	14	128	429	625
f-list	71	132	185	150	988
roles	74	171	182	661	363
to=	43	47	493	76	593
divisible	71	229	268	428	60
bloated	82	241	291	497	463
flame	33	176	282	623	725
pypy3	83	206	178	197	380
.18e	32	205	346	177	576
10th	98	281	254	528	428
legibility	10	180	17	525	246
cythoning	68	137	305	432	328
np.interp	53	42	238	720	396
np.clip	87	57	198	13	608
bs4	63	68	275	553	584
numpy.clip	19	42	424	13	512
n=6	19	197	162	593	306
n=4	71	142	268	593	616
n=5	87	57	173	593	306
n=2	72	186	162	593	306
advising	34	190	371	500	215
n=0	72	186	25	593	306
n=1	11	186	25	593	306
n=8	57	142	127	139	60
n=9	71	64	459	738	95
sse2	96	174	408	90	729
1964	12	260	254	133	272
1965	67	260	12	372	958
1966	12	279	319	133	144
1967	15	157	64	514	144
mymplcanvas	6	46	345	44	356
1961	67	213	284	133	144
1962	67	163	284	723	272
aggregate()	92	156	78	105	121
quandl	83	116	5	581	368
clunky	82	241	378	334	29
runge-kutta	79	10	324	487	610
capitalization	27	190	305	482	812
though	29	28	395	209	472
pandas.merge	44	2	253	33	176
bsp	99	288	11	315	138
bss	80	56	299	77	931
preset	74	232	37	110	868
python-control	38	6	291	317	450
plenty	34	254	159	321	79
chunk_size	19	54	293	217	698
bsd	96	1	69	461	648
.view()	19	294	227	231	782
lifesaver	35	207	371	205	767
file_2.csv	98	110	243	712	984
truncatevalue	75	148	206	605	602
reputation	34	190	3	702	915
unforunately	82	28	341	236	472
fraxel	35	238	326	187	336
period_id	78	164	223	204	832
yann	35	207	326	220	336
pd.options.display.float_format	76	205	346	177	576
odeintw	16	10	324	744	610
getattr()	92	109	331	105	699
out_c	52	19	263	364	855
reductions	16	214	154	537	651
manipulation	38	50	291	663	141
sage	38	1	234	744	450
rst	73	125	248	131	444
radii	33	288	282	617	138
v.t	11	178	25	454	726
radio	90	69	32	624	560
solutions	82	227	159	321	746
marketcap	43	47	231	71	567
row_num	52	130	461	471	622
cholesky	16	94	462	782	800
delays	22	187	108	361	248
py_intptr_t	9	204	397	790	64
savefig	73	243	18	16	721
plt.boxplot	51	161	208	543	12
non-dictionary	3	156	65	587	125
zarray	1	19	112	284	726
.set_color	60	155	240	603	285
erasure	28	1	17	710	246
andras	65	291	258	407	767
watch	22	13	143	39	214
fluid	77	14	114	710	841
amazon	23	84	376	670	467
report	46	173	359	604	208
permute	40	294	127	231	678
reinstall	13	128	5	104	485
ipython.display	81	5	110	739	889
excel	86	91	367	107	86
z-dimension	98	132	114	98	744
freetype-2.5.0.1	13	170	50	104	485
automatic	64	241	246	716	370
c-ordered	40	184	270	453	122
systemofequations	0	237	397	436	231
above-mentioned	30	162	27	595	467
presuming	29	28	306	209	472
electrodes	77	29	77	182	563
habit	17	291	17	500	215
re-initialized	22	171	397	436	161
sparsevector	29	99	275	756	979
roadmap	46	1	124	202	564
recieve	63	83	283	361	39
kernel32.dll	96	145	94	138	455
qstk	83	206	178	381	842
dev's	10	231	17	500	246
corrupt	86	222	329	361	519
index.c	50	267	118	580	429
gridsize	37	290	467	207	668
by_country	43	72	68	265	708
zoneinfo	80	221	124	202	568
_for	47	224	317	139	36
df.copy()	44	134	158	476	154
keypresses	90	187	108	624	248
catalogue	23	250	339	623	625
plt.hlines	60	44	166	777	910
m=2	72	186	25	683	306
approach	82	241	341	573	669
+0000	67	213	95	185	51
vaues	40	146	454	587	602
weak	10	43	17	321	354
pd.tseries.offsets.dateoffset	80	201	309	727	24
s.ix	52	19	160	284	855
predates	83	206	80	202	564
irregular	53	29	339	77	340
spanselector	90	69	46	380	384
amortized	89	50	100	261	90
28x11025	71	195	213	674	673
x.split	43	47	493	76	593
games	78	150	445	479	604
havn't	29	62	410	161	457
.values	43	72	68	290	827
variance	79	23	332	638	11
somestring	32	51	487	177	244
system-provided	13	128	211	142	482
i+j	52	148	273	284	19
trust	10	43	395	500	812
i+n	52	0	418	284	19
3-band	84	195	51	592	353
simplification	27	137	459	525	421
transparencies	73	125	248	276	304
quickly	82	50	100	497	463
2.00ghz	96	30	480	785	729
matplotlib.units	64	99	245	560	370
16,777,216	12	142	220	528	918
expected	29	28	306	122	508
standardscaler	92	26	354	135	816
i+2	72	132	273	284	19
i+1	52	132	273	284	19
sprite	99	195	128	674	353
30-day	23	56	148	98	347
skew-t	77	136	175	22	951
drugs	78	150	243	479	798
percentile()	0	214	140	684	699
25%	88	266	22	574	217
atlas	96	174	408	90	729
set_major_locator	58	44	166	341	184
im_rois	75	106	461	471	622
no-deps	13	170	244	481	174
get_schema	92	68	78	105	971
.npy	86	222	382	102	820
.npz	86	222	382	102	820
2x4	71	64	268	738	95
1600x1200	84	195	213	674	353
dept	78	200	252	204	423
deps	30	170	244	165	588
stopping	22	187	108	361	248
procedure	29	137	459	209	36
imagination	82	241	116	494	118
subnormal	57	89	325	86	22
compliance	10	227	384	525	970
shebang	30	15	189	540	383
handwritten	28	14	267	710	841
p_rec	63	83	389	715	39
validation.index	60	201	180	215	371
experts	68	190	307	229	98
exterior	99	288	282	315	138
casting	70	99	74	332	979
14:30	67	213	95	185	51
interacts	38	6	294	317	79
flatiter	9	109	331	594	386
thusly	27	137	6	15	421
bigfloat	57	89	8	756	979
drawparallels	64	161	90	543	683
circumventing	22	85	71	349	431
suggest	68	137	246	432	472
algorithmically	82	241	341	214	970
df.mean	44	164	181	700	895
unrecognized	63	83	283	715	39
dimensionless	79	10	324	744	211
np.tril_indices	19	42	296	13	659
satellite	33	176	77	623	293
suburb	78	200	82	204	832
portal	34	115	27	97	142
60gb	88	182	373	549	236
positives	10	151	317	605	303
insisted	83	206	211	197	467
normalization	79	119	63	137	296
joop	35	207	371	205	336
figure_manager	6	46	345	572	356
bugzilla	23	84	27	604	127
mother	23	110	163	663	354
alarms	78	56	445	94	639
alabama	78	67	132	463	272
ginput	90	69	32	624	112
~1e6	88	142	100	139	89
ndgrid	53	102	418	129	756
testfn()	75	106	295	684	231
matplotlib.pyplot.figure()	6	46	345	543	889
bugged	29	28	395	334	473
thumbs	35	291	360	236	417
sem()	87	193	121	470	484
5}	47	67	256	145	764
eli	34	254	234	302	565
5x	88	180	55	337	89
documentaion	38	254	125	98	382
numpy.float32	70	59	74	332	522
5v	47	115	162	133	888
elf	63	244	283	553	584
5s	88	197	447	77	612
ele	52	52	461	471	985
differently-shaped	75	104	10	200	650
5l	48	274	112	649	159
misprint	65	291	258	407	887
5j	52	19	160	284	776
5d	71	64	268	519	684
tolerable	88	180	55	337	246
elt	87	55	180	675	591
.kline	65	118	258	407	471
spanned	77	281	339	646	340
pyplot's	51	136	208	272	481
judge	34	190	106	590	970
appearing	29	31	175	122	851
match()	38	214	78	703	382
55	12	279	319	111	465
54	12	279	319	111	465
permuting	40	294	182	231	678
56	12	279	319	111	465
51	12	279	319	111	465
50	12	142	319	528	106
53	12	279	319	111	465
52	12	279	319	111	465
5-	11	234	162	133	99
bug-report	34	173	359	604	208
hunk	22	283	373	361	236
5+	47	130	162	133	588
5*	11	194	269	606	743
hung	17	62	88	458	417
frustrations	17	62	88	39	345
fill_between()	51	136	208	272	481
successfully	29	171	272	161	457
tutorial	34	254	234	302	565
.zip	13	261	486	797	368
boxsizer	6	69	46	380	384
proceeding	74	263	246	190	629
totaly	29	28	306	624	214
markerfacecolor	20	119	24	49	664
datavalue	47	224	256	424	888
totals	3	56	445	520	66
str.strip	32	51	109	512	808
everything	29	171	306	458	473
dt.datetime.strftime	47	201	493	125	879
buildin	19	214	78	105	782
approxpoly	0	275	295	684	231
np.random.poisson	93	123	173	50	361
archived	86	222	27	385	161
disappeared	29	287	306	122	473
discount	98	146	317	605	812
permitted	10	104	317	200	650
chapter	28	254	234	179	565
ucs2	13	170	5	104	482
grouby	51	156	78	354	121
luftb_hydgr_add	3	148	206	587	602
x.diff()	87	47	493	76	593
figure.canvas.draw()	6	46	345	572	356
plus	74	232	306	209	36
guest	78	150	445	479	423
dataframe.sample	92	185	78	105	512
runtime	55	180	55	537	905
sm.add_constant	11	234	180	76	591
imgfinal	52	19	263	284	714
wildcards	81	88	110	739	889
-99999	32	99	424	108	203
age_groups	3	110	6	796	66
nopython	55	174	422	537	761
obtaining	74	232	37	746	868
inclusive	98	146	436	141	212
center-aligned	37	290	467	207	76
test.so	30	162	244	165	30
existed	65	291	258	236	874
git	13	128	5	797	482
gis	99	176	128	607	293
transform	74	232	140	98	141
gallery	64	254	278	302	565
gig	88	182	373	549	236
gif	73	125	248	276	107
gid	64	113	452	543	683
gib	88	182	373	549	236
gil	55	174	71	349	431
continent_codes	43	72	82	558	965
rhel	85	276	233	393	858
questionable	38	241	291	732	327
ilnumerics	38	1	278	317	450
epsilon	57	89	8	559	907
15.07.2015	67	205	346	125	879
illuminating	34	254	247	334	163
satisfactorily	34	190	307	702	216
nepidemix_runsimulation	63	244	58	138	204
enumerating	75	297	497	139	68
portions	74	232	159	646	953
tnew	98	148	206	73	77
ruined	29	118	395	791	473
mtrw	35	238	326	187	308
simplifying	17	62	88	458	328
decorate	64	214	422	684	761
submitting	34	173	359	604	208
z-coordinate	33	102	418	73	358
gdalwarp	53	151	339	720	353
mtrx	52	0	68	290	855
pandas.datetime	92	35	245	781	920
uri	86	125	329	607	127
shines	82	241	341	756	219
annoying	29	231	395	334	327
indirect	82	241	165	573	29
sumof	11	234	4	531	19
faithful	82	137	291	82	382
galois	28	65	205	292	651
whereas	74	117	152	209	638
readonly	9	184	85	453	282
isclose	19	214	125	13	907
200.000	88	160	220	80	54
b_array	37	290	443	780	851
pymongo	86	68	119	370	126
unbalanced	3	160	6	94	125
node	99	288	280	293	329
superposition	61	31	159	212	762
sqr	11	275	242	129	292
miscellaneous	29	254	159	321	746
ridges	99	288	11	315	138
sql	86	68	119	478	126
discharge	80	29	299	77	931
stride_tricks	19	294	296	291	512
-std=c99	96	170	133	117	30
old-style	9	109	152	131	638
binmin	60	194	269	557	221
unittest.py	81	162	486	247	344
well-designed	32	241	291	334	628
:))	17	291	258	236	345
m_ind	1	57	112	232	886
focus	10	13	143	39	118
min_37	33	63	262	182	995
adjective	34	43	377	396	812
llh	11	186	25	683	306
hyperboloid	61	137	459	209	762
1.0.0	85	276	151	681	252
lla	33	176	135	623	293
x+10	60	194	418	65	221
izip_longest	19	12	455	480	806
discern	10	151	467	631	568
unneccessary	74	263	397	436	370
onehotencoding	77	26	114	135	616
environment	83	15	376	540	467
charge	23	1	69	461	637
y-labels	37	290	166	706	76
promoting	75	99	421	601	979
discovering	17	62	88	236	874
multilinear	61	176	282	626	908
-pedantic	63	244	389	716	655
plat-darwin	50	259	277	303	469
matplotlib.pylab	81	88	110	739	889
nesting	75	106	182	231	678
hard-disk	23	125	294	276	127
cook	17	190	377	396	275
.head	44	164	181	700	419
cool	65	291	274	205	767
4.5.1	85	206	42	685	380
riemann	79	23	148	98	347
booking	80	56	445	723	897
_itemid	3	93	243	390	984
$sudo	13	170	244	165	174
tryed	29	28	272	161	457
y0	72	4	431	516	624
install_requires	13	170	50	481	482
np.sign	87	55	198	559	907
obsolete	46	1	124	202	435
cyber	80	163	254	723	333
aggdraw	99	230	128	429	353
rv_continuous	9	109	193	628	239
log-likelihood	79	23	332	638	531
bacteria	77	250	70	295	563
datalogger	80	29	299	94	67
numpy.bincount()	19	42	296	13	512
np.gradient	19	42	121	13	292
mpldeprecation	47	224	58	424	588
long-standing	46	231	359	173	208
q_true	75	106	317	684	782
fmap	71	195	10	519	684
concat()	92	156	78	123	971
))```	1	57	180	232	371
fmax	98	146	317	141	509
web-dev	47	200	430	149	423
skip_header	76	54	322	51	698
runable	27	293	403	420	579
shove	74	232	143	110	118
dict.keys()	9	12	461	776	903
overrides	64	117	152	58	370
guilty	17	62	88	236	803
eric's	34	238	187	97	308
maximising	28	151	106	98	970
overriden	9	109	331	594	386
1.1gb	88	160	220	549	217
w_hidden	71	64	268	150	981
np.ascontiguousarray	48	184	85	453	280
alldata	52	19	461	471	622
emerge	10	232	17	209	36
convolution	77	101	428	430	547
asgm	35	115	409	20	336
time.strftime	43	205	346	125	879
1-character	32	99	421	601	979
dual_coef_	28	26	354	135	816
handled	74	231	152	716	638
10:15	67	260	271	133	465
10:11	52	19	263	284	855
10:10	67	279	95	133	272
sports	78	150	252	584	604
---------------	15	157	64	550	888
handles	74	117	152	58	638
handler	90	69	32	624	112
iphone	23	14	267	461	841
series.shift	19	156	78	105	512
reorder	40	156	182	524	678
42k	88	197	73	628	217
census	23	150	445	479	293
itertools.cycle	6	12	455	480	806
vmax	25	119	320	49	845
freetype-2.3.11	13	170	50	104	485
autumn	78	163	284	723	897
sheds	34	173	307	590	208
zerohamming	98	194	269	606	221
non-singular	16	94	462	782	800
placements	37	290	166	706	76
matplolib	61	136	278	158	847
mydist	63	224	295	684	881
quantopian	23	6	294	761	866
x.size	1	274	112	677	726
celsius	33	281	77	623	995
500000	88	142	220	80	54
counting	98	146	148	534	639
qualifiers	32	16	420	482	444
scipy\numpy	38	241	291	500	79
1	52	19	162	284	855
cardinal	28	14	106	631	970
ax.xaxis.grid	58	112	452	642	599
begs	10	118	116	590	999
ifort	96	174	408	650	455
\w+	76	51	487	151	244
paramount	88	180	100	537	246
crashes	22	187	108	361	248
crashed	22	187	108	361	248
matplotlib.font_manager.fontproperties	64	161	226	543	683
xorg	98	251	198	141	963
ndarray.tofile	86	222	357	260	405
unidiomatic	82	241	378	573	29
dynamical	28	14	267	710	841
liquid	78	116	299	581	67
q's	34	118	116	97	328
a-priori	79	151	168	214	970
version-specific	83	206	244	202	380
ax.boxplot	60	155	195	495	12
plt.gca	58	139	494	418	543
panel.mean	29	28	227	791	473
pyarray_searchsorted	0	204	29	790	64
applys	92	156	78	105	121
overflowerror	63	83	499	715	39
mp.rcparams	60	166	134	764	862
vtk	38	6	278	158	450
presence	74	227	317	746	868
i.m.o.	82	241	291	334	628
offers	38	6	291	317	628
vtu	86	110	329	110	519
happened	29	28	306	791	473
lonely	99	230	128	429	744
c_types	55	174	29	790	219
loadtext	76	54	382	260	698
cross-entropy	79	26	354	638	11
in-use	12	256	373	196	888
histogram2d	51	101	63	31	780
underneath	37	31	467	780	851
conquer	82	13	341	98	953
execute	22	187	108	361	383
name	47	110	93	436	864
rmsd	79	266	148	574	11
rmse	79	23	332	638	11
y-axis	37	290	443	706	76
synchronize	23	85	71	349	431
plt.set_cmap	20	155	240	495	846
list.remove	63	83	283	715	39
individually	74	232	497	534	36
=([	52	19	263	364	855
populated	74	110	386	746	673
hiccups	29	206	178	361	473
parent's	9	61	153	358	282
populates	74	117	386	58	238
'])`	43	72	231	265	708
pyplot.savefig()	73	144	329	122	383
display.max_columns	58	243	452	171	290
'])]	43	47	231	265	708
cancels	40	13	127	191	214
shouldn't	29	28	246	209	196
```]	52	0	15	724	379
ploted	61	31	443	780	851
processed	22	171	294	110	257
subtracts	98	117	148	58	347
problem's	17	62	250	236	345
```)	11	224	15	50	379
finalcsvfin.csv	76	199	30	283	736
matplotlib.colors.lognorm	25	119	320	49	845
df.replace	44	39	487	415	827
32-bit	85	100	325	86	22
'])"	43	200	231	265	708
dhagreen0	98	17	317	605	602
']))	43	47	493	76	593
add_constant	64	185	125	684	699
isfinite	63	83	283	715	286
scipy.integrate.simps	79	10	324	566	13
matmul	16	94	125	703	392
preprocessing	28	26	354	135	816
place	74	232	246	209	472
=((	11	201	180	50	99
swing	77	13	250	39	227
row_id	43	93	82	204	832
2d-histogram	33	176	128	623	908
non-interpolated	77	151	175	122	913
abcissa	75	103	127	6	744
oversaw	65	291	258	407	345
albania	78	200	82	145	832
1-line	82	137	378	573	669
array	75	64	10	519	684
sound_info	12	142	162	528	175
engineer	17	43	377	396	275
iam	61	52	317	638	11
given	74	232	37	746	868
ian	34	190	234	97	142
copy-on-write	55	61	153	128	282
ser3	78	200	82	204	287
district	78	250	77	463	604
ser1	80	35	26	781	287
lifecycle	80	56	299	723	67
returns	74	117	152	58	638
terrifying	10	237	390	732	370
bounty	34	190	3	702	915
legally	57	232	246	788	509
independant	74	237	397	436	864
gives	29	117	306	58	508
specifc	98	72	68	155	622
releases	46	221	124	202	549
cope	29	232	37	432	472
terrain	99	176	282	623	908
released	46	221	124	331	549
alas	29	28	410	161	457
scikit_learn	83	206	244	165	380
copy	40	184	158	476	757
markerstyle	64	161	208	543	683
population	77	23	332	10	347
nathan	29	28	306	791	905
unfortunately	29	28	410	209	457
colorscale	20	119	259	137	845
sqft	33	176	135	623	293
theta=0	33	176	443	617	725
1970-1-1	80	35	245	781	920
pandas-y	82	241	378	573	29
aesthetic	82	241	390	78	256
wrap-around	40	13	10	191	650
synthesis	28	14	267	710	841
df.idxmax()	44	104	23	733	154
00:22	67	260	12	530	958
00:27	67	260	12	372	272
fc=	60	155	240	495	285
generalization	82	137	291	525	382
dmatrix	63	83	383	616	699
rent	23	116	69	149	67
sells	78	56	445	41	67
2005-5-31	43	72	68	265	708
klib	50	259	277	381	842
ideas	68	28	465	432	343
ideal	82	241	395	497	463
blunt	82	31	443	525	668
urge	10	190	246	500	118
-element	71	64	268	683	684
fct	0	55	295	436	231
clearer	65	118	116	334	328
there'll	82	241	378	789	154
ax.plot	60	155	240	418	162
cleared	90	187	388	666	248
probes	77	151	106	631	970
_and_	10	118	116	631	999
adopt	10	232	377	500	354
hungry	82	283	153	497	387
markeredgecolor=	20	155	240	603	285
df2.reindex	44	201	181	700	895
non-empty	75	146	317	605	602
nlp	28	43	377	321	866
csv_file	76	199	30	155	987
iat	92	104	23	733	92
my_csv.csv	76	199	286	51	987
lib.c	50	267	118	580	132
carray	86	222	426	611	820
44.1	88	142	73	196	227
invocation	22	147	497	684	807
1-100	37	290	269	207	212
%y-%b-%d	47	17	346	125	879
set_aspect	58	243	494	775	388
ax.figure.canvas.draw()	6	46	345	599	356
tens	88	160	220	80	54
wxformbuilder	90	69	27	158	127
trade	80	116	299	581	67
rereading	65	118	258	407	887
reveal	17	62	395	432	3
sklearn.feature_extraction.image.extract_patches	19	101	125	231	782
dictreader	86	54	275	260	444
i386	96	45	133	117	160
tupline	63	224	389	471	198
xeon	96	30	480	785	729
convolve	53	101	428	166	547
vec2	1	57	295	232	726
drawback	82	241	17	497	305
discussing	34	173	247	97	216
imposing	79	10	324	214	970
df.mul	87	57	121	673	608
2011-04-18	67	260	12	718	483
closures	38	237	390	732	389
3276	76	199	322	51	987
college	17	14	377	396	275
apologies	65	118	258	451	98
collects	23	85	27	595	161
uncorrelated	79	23	332	511	988
__all__	81	237	397	739	183
federal	23	116	299	149	67
subsequent	22	171	306	534	214
definite	16	94	462	782	800
floc=0	58	275	226	363	683
its	74	232	152	209	36
hist	51	136	63	557	780
outside	74	232	397	436	370
\\n	43	105	487	177	311
reproducible	27	293	403	420	579
buckets	3	56	299	41	66
enddt	80	258	26	41	377
lc_all=	65	185	452	642	215
overwriting	22	171	388	534	526
densely	71	195	339	646	563
dmin	72	194	418	129	221
collect2	63	244	283	553	323
ez_setup.py	83	206	178	165	368
subfigure	37	139	90	391	543
sub-index	3	156	182	354	125
20101220,245	15	157	64	296	837
verticies	99	288	11	315	138
defaultreallimits	64	224	226	641	683
regressions	79	26	168	761	620
path_or_buf	76	185	322	51	698
duty	28	14	267	710	841
jitter	77	151	106	631	762
merry	17	207	371	205	767
colons	32	16	420	468	768
pov	10	231	17	317	79
pow	16	55	201	562	743
novices	68	207	371	205	803
pos	47	134	280	556	622
pop	90	187	108	624	214
satisfaction	34	190	3	702	216
61	12	279	488	751	465
jitted	55	204	422	790	761
63	12	279	319	111	465
64	85	30	480	685	858
65	12	279	319	111	465
66	12	279	319	111	465
67	12	279	319	111	465
68	12	279	319	111	465
69	12	279	319	111	465
endeavor	82	137	291	525	669
gausian	79	292	140	430	547
tensordot	16	178	422	291	884
50%	88	266	22	574	217
256,256	1	274	268	305	60
509	47	267	58	111	132
506	12	78	52	649	465
caplines	64	161	208	543	109
504	12	279	488	245	465
505	12	267	488	111	132
502	12	274	268	305	60
valueerror	63	83	283	715	39
500	88	142	220	528	106
501	47	224	58	139	60
engine	86	68	119	478	126
|s20	70	105	74	53	475
6d	71	64	154	150	612
wakari	83	15	151	685	818
6h	80	149	447	77	931
infer_datetime_format	92	185	322	560	934
6l	48	274	112	649	159
6m	88	160	220	80	54
.virtualenvs	50	259	277	303	469
tiger	83	30	480	149	423
6s	98	197	454	41	217
6x	88	180	55	337	89
6528	57	100	325	592	22
pyplot.ion	6	46	345	599	356
careful	10	231	17	500	196
irrelevant	10	118	17	334	999
6}	67	78	256	145	272
.to_csv	76	199	286	283	736
myself	17	62	88	161	874
50m	88	197	73	534	54
50k	88	160	220	80	54
mount	23	84	376	184	467
premature	10	43	395	537	812
jpegs	73	125	123	607	304
zorder	25	161	24	49	664
50x	88	180	55	337	89
olga	30	259	80	381	960
weave.inline()	19	294	296	333	650
interconnected	61	31	467	22	851
nnz	89	94	207	261	90
coupled	28	10	324	214	610
discrepancy	10	231	17	335	905
person2	52	200	162	133	888
skipna=false	87	52	198	770	985
numba	55	174	422	90	219
bins=50	60	155	63	557	12
numticks	60	44	452	642	8
np.vectorize	19	214	422	480	761
erroneously	29	171	306	791	568
dithering	84	195	123	592	353
date-timestamp	98	266	148	141	397
new_order	75	297	223	471	622
check	74	227	37	457	472
html	73	125	248	276	127
360deg	33	176	282	617	725
plt.tricontour	61	102	418	193	910
nh	48	142	41	305	60
luts	71	195	268	519	684
127.5	11	234	4	531	743
font.sans-serif	73	166	134	764	862
downloads	30	261	486	797	368
plt.clabel	25	161	208	543	683
np.datetime64	70	273	245	678	920
persons	78	150	445	479	604
decently	82	241	291	497	628
vowel	28	14	267	626	841
footprint	88	283	373	549	387
cartoon	27	137	459	15	421
df_concat	44	134	260	290	827
json.load	76	54	275	183	322
descr	70	105	74	53	748
img_bw	48	219	74	401	522
dt.datetime.strptime	43	205	493	125	879
magical	17	241	378	334	327
pysides	73	38	452	764	383
color2ind	98	297	280	42	903
reward	34	190	250	702	915
vecs	75	64	10	519	981
actions	23	232	294	94	616
sqrt()	93	275	201	664	231
numpy.ones	1	57	41	232	21
posixct	86	99	275	601	141
ax.pcolor	25	44	320	49	683
multi-threaded	55	174	408	90	651
incurring	82	50	341	537	215
halfway	29	13	143	788	589
np.eye	1	57	41	232	21
alphabetical	3	175	129	524	9
https|	74	232	234	209	36
widest	37	31	467	207	668
rose	61	163	175	723	897
seems	29	28	395	209	196
reccomend	38	6	291	500	118
apache2	83	30	480	381	960
re-creating	22	171	388	190	526
disrupt	10	146	317	631	509
$date	47	67	223	145	567
x|y	60	186	25	129	756
fuss	82	241	274	573	327
confines	37	13	443	191	762
30-50	88	160	220	80	54
preinstalled	13	128	211	104	482
df.name	43	47	68	265	708
pd.read_excel	76	199	286	51	189
confined	57	232	148	631	668
accepted	35	238	3	702	216
tif	84	192	123	607	427
ns	70	273	309	678	700
reduces	74	117	100	548	305
reducer	23	84	27	595	854
sanity	28	227	305	457	941
mpmath	57	89	8	756	651
dummyvar	40	64	154	703	392
call-backs	90	69	32	624	112
reduced	88	180	100	574	668
2003-10-24	67	213	95	185	51
3.0.2	85	276	42	685	380
np.random.shuffle	19	294	296	232	280
3.0.0	46	221	151	259	621
userid	78	93	445	41	984
numpy-1.10.2	13	170	244	165	174
numpy-1.10.1	30	259	244	138	960
shortcoming	22	231	294	497	568
multi-target	28	26	354	761	816
df.resample	44	149	447	460	612
complib=	76	199	379	217	502
assert_allclose	19	42	125	13	591
error-checking	38	227	17	457	905
imshow()	25	136	208	49	845
protocol	86	222	426	260	820
input_2	98	148	206	141	77
byte-order	70	100	325	86	22
d.assign	1	55	180	232	726
center=true	92	39	447	614	691
y_value	33	281	443	191	358
1am	80	56	254	723	931
thresold	98	146	127	141	868
runfile	50	145	118	734	679
yay	65	207	274	205	767
_	47	224	461	424	244
input_b	98	42	206	605	602
warts	38	1	291	317	628
input_a	98	148	206	605	602
c*a	11	234	242	531	56
c*d	16	178	154	88	800
spss	23	1	367	107	866
informing	35	207	371	205	336
obeys	10	232	17	200	999
equalize	37	31	467	207	449
all_files	0	224	30	424	736
annoyances	34	173	359	604	208
bleeding-edge	46	221	124	331	435
-80	15	194	269	606	212
awayteam	43	134	93	155	622
accounts	10	150	17	209	36
ax.scatter	60	155	240	193	910
england	78	150	132	479	403
theoretically	10	241	100	497	463
np.float	70	59	74	332	522
yah	65	291	258	236	345
transparancy	20	119	259	49	664
shamelessly	27	238	187	302	142
untar	13	261	486	797	368
distutils.cfg	30	162	486	247	181
amongst	23	150	159	479	604
x_data	60	155	177	42	881
2.6.6	85	276	42	685	621
promote	74	99	386	774	979
1025	12	142	162	528	175
1024	88	142	220	528	175
scimath	81	88	110	553	584
1026	52	0	263	364	288
1020	71	274	268	305	60
1023	12	279	162	141	175
adjustable=	58	243	494	775	599
touple	75	106	421	776	903
arpack	16	94	462	782	800
nunique	92	156	78	31	121
fdtd	28	14	267	710	841
diverges	79	10	324	566	292
column-wise	40	156	154	98	678
corresponding	74	232	37	746	868
encompass	99	288	467	646	744
.plot()	51	164	195	272	12
t-2	11	234	242	531	56
t-3	80	56	299	77	347
seg_image	98	148	198	139	714
t-5	72	258	242	531	377
two-element	75	106	10	776	903
ylgnbu	60	155	240	193	845
multiclass	28	26	354	135	816
narrowing	34	13	143	39	589
-infinity	11	194	269	141	743
newdates	98	148	461	73	77
briefly	29	118	234	97	328
collaborative	28	26	354	761	866
scipy.weave.inline	55	174	29	756	219
unindexed	3	156	6	354	125
recognise	29	28	306	122	568
update_figure	6	46	345	44	356
n3	72	274	207	683	756
t-t	11	234	4	531	56
rutger	35	207	409	205	839
np.expm1	52	0	263	232	855
display()	90	15	189	226	322
disp	60	224	58	424	159
all	74	232	159	209	36
dist	47	162	185	673	588
chinese	32	16	190	482	444
ali	35	207	371	20	336
pd.read_clipboard	76	199	322	51	189
abit	17	190	250	39	345
ala	3	104	23	733	125
unweighted	77	151	185	293	762
new_list	52	12	461	433	622
disc	88	283	373	549	236
dish	78	250	70	444	961
alt	33	102	135	182	591
disk	86	222	426	611	820
pts	1	102	418	129	910
abig	52	220	158	476	757
abid	35	207	371	205	336
ptp	19	214	125	673	608
98.49113721	15	157	64	296	837
0000-00-00	67	260	12	372	958
requirements.txt	13	128	50	481	482
thursday	80	163	254	723	72
group.to_frame()	44	134	260	155	622
stochastic	28	14	267	710	841
.name	44	72	68	733	622
activities	78	150	445	479	604
buildpack	83	128	376	197	467
df1.loc	43	72	68	290	827
x-min	11	194	269	664	743
immutablematrix	81	88	397	739	183
reallocated	22	61	153	358	387
pcov	72	275	25	363	239
awful	82	241	395	334	327
obviate	82	50	341	500	118
atpy	86	222	426	663	843
a.__array_interface__	52	220	85	476	622
hamiltonian	28	14	267	710	841
-shaped	71	274	268	305	981
.asfreq	43	149	447	460	612
tag1	78	110	243	390	742
tag2	78	110	243	425	742
subpixel	77	151	428	429	353
short-time	79	292	20	430	547
full_arr	48	184	153	88	122
extremities	99	288	282	646	744
what	29	28	227	209	472
ticks	37	290	166	706	76
overload	9	109	331	113	135
whay	27	28	227	420	472
decompress	86	222	426	611	405
kindof	65	291	258	407	887
whan	52	224	263	290	622
df.set_index	44	164	181	700	895
multitude	38	227	159	321	79
ppl.scatter	60	0	263	485	162
condensed	99	288	185	293	716
nordev	35	207	409	187	336
tags	34	110	163	482	798
behaviour	10	231	395	335	568
font.size	58	166	134	764	862
condenser	98	134	162	155	231
hashtable	81	88	110	739	584
c-order	40	184	85	453	122
19980102	15	157	64	296	144
numbapro	55	174	408	90	651
d.a	11	57	180	232	593
scikits.timeseries	38	6	124	761	79
d.t	16	178	462	562	726
rows_idx	52	148	273	284	19
elongated	61	31	467	212	851
imaging	84	230	123	607	353
openstreetmap	23	176	128	158	293
180.0	11	201	4	71	99
-arch	50	259	133	117	160
reduced_df	43	72	68	290	154
clip_box	58	161	90	543	683
use_cols	76	185	322	51	444
.47	15	211	64	172	96
1947	80	163	254	723	72
semester	17	150	377	396	275
plonser's	19	294	341	231	512
myvirtenv	30	162	478	159	960
1945	80	200	254	723	272
pnts	32	16	420	468	768
proceed	68	232	227	432	472
faint	73	31	248	757	303
date&time	80	13	443	706	725
tought	65	291	227	407	472
numpy.mean()	79	193	140	98	347
interp_2	53	180	55	337	89
interp_1	53	180	55	337	89
markets	80	116	299	581	67
minor	37	290	166	706	76
rk4	79	180	55	337	89
self.wdata	52	52	180	290	985
1-axis	40	64	154	73	981
knows	29	28	227	432	571
inverness	43	72	231	265	708
chararray	75	214	125	756	382
basically	74	232	459	209	36
im2arr	84	195	51	592	427
nitpicking	17	190	307	590	345
ground_truth	43	72	68	265	708
glad	68	291	371	702	767
.4f	32	205	346	177	576
????????	43	105	231	127	255
js_dj17	50	259	277	303	469
homography	84	195	128	166	353
salvador	35	238	187	187	308
dataframe.to_dict()	92	156	78	105	971
v	72	186	25	129	756
1-dimensional	75	64	421	519	684
1-m	80	56	148	133	347
nparray	75	106	421	471	881
df_name	9	68	275	300	699
n=1000	88	142	55	337	89
dsp.stackexchange.com	34	190	307	97	216
pypyodbc	83	68	119	478	126
quadmesh	25	161	208	543	109
user.id	78	67	163	463	798
pd.options.display.mpl_style	51	243	452	764	664
influenced	10	227	17	631	970
interpolation=	20	268	297	397	845
.to_string()	43	72	68	265	708
1-d	75	64	10	519	684
influences	37	151	106	631	892
resample	80	149	447	614	333
explains	10	117	234	335	638
plotdata()	74	171	140	684	231
619	12	267	488	111	132
algebra	16	94	408	744	651
610	43	200	231	71	255
weaknesses	38	1	69	321	79
singularities	79	10	324	744	610
614	12	279	488	111	465
catalog	23	116	430	581	293
??,	32	17	444	482	410
prefers	74	117	270	200	305
??.	47	224	430	424	588
virutalenv	30	170	244	165	960
shortening	82	43	341	537	215
discretisation	77	151	106	631	970
shade	61	119	24	757	786
???	47	28	227	432	472
prefere	40	104	158	476	757
essence	10	137	459	631	999
)")`	47	51	487	4	567
vector-based	73	125	248	276	304
1.98	15	211	61	364	265
1.99	15	211	269	606	265
1.96	79	23	332	10	11
1.95	15	194	162	196	743
signed_val	43	72	93	265	622
developer	34	173	35	461	142
reactant	15	200	61	133	888
50001	71	64	268	519	756
style	64	6	390	78	370
performance-wise	82	180	341	497	463
misspelled	32	16	420	177	768
axvspan()	6	161	208	543	481
yyyy-mm	80	35	245	781	410
resort	82	241	246	500	118
tz=tz	11	201	180	215	99
stephen	34	115	35	20	142
fido	84	142	51	592	886
..!!!	68	207	465	205	343
yval	60	102	418	129	910
communities	99	288	467	646	329
cv2.fitellipse	33	102	135	519	684
marcus	35	115	409	20	336
400ms	87	180	55	337	612
random.py	81	162	478	247	344
400mb	88	182	373	549	236
characterized	99	288	106	746	868
personid	78	93	445	41	705
ogrid	19	294	296	291	601
inflates	86	222	426	611	820
all-nan	92	104	389	414	125
expect	29	28	246	209	472
datframe	3	110	65	155	125
organised	74	110	386	663	673
synchronised	37	232	159	94	36
divide	57	146	148	428	62
wondered	29	28	88	791	874
escape=false	92	185	452	641	322
induces	29	231	306	548	526
adhere	10	118	17	200	354
1-1	3	297	182	587	903
dying	83	206	178	361	339
induced	22	151	106	128	668
appearances	78	56	163	41	639
new.csv	12	110	60	283	754
.describe	92	193	181	700	827
60min	77	29	299	77	931
homebrew's	13	170	244	165	960
data_type	70	204	74	790	64
monotone	79	151	332	511	531
wave_tg	1	57	54	232	21
data()	86	214	125	260	699
1e-9	57	89	8	559	743
1e-8	57	89	269	559	907
reconfigure	90	15	189	190	629
enrollment	77	29	299	77	210
1e-1	60	194	173	129	756
b^2	11	234	242	531	56
1e-3	57	194	269	559	10
1e-2	60	194	269	686	221
1e-5	57	89	269	559	907
1e-4	57	138	495	559	299
1e-7	57	266	269	686	393
1e-6	57	89	269	559	907
requests.get	0	224	275	183	736
silhouette_score	81	88	110	739	584
ndarray.tofile()	76	54	382	260	405
numpy.any()	16	214	295	756	782
.first_valid_index()	52	72	68	290	708
-zhu	35	207	371	205	767
consequence	10	231	17	791	999
ding	65	291	371	205	767
image2pipe	73	144	327	147	405
feel	65	190	307	590	345
well-known	28	151	17	321	79
dint	29	28	477	407	457
notify	34	173	35	702	915
bhar	43	258	68	204	377
slower	82	180	55	337	89
ma.median	75	294	10	231	782
a_sorted	52	148	206	476	757
pm3d	53	238	187	525	308
hangs	90	187	108	361	248
string-like	70	99	1	285	843
kilobytes	88	283	373	549	236
destruction	22	61	153	358	282
twinx()	58	290	494	391	388
recovered	77	151	106	631	673
pipelines	28	14	169	317	866
pump	86	110	6	110	953
checklist	34	173	307	669	216
file2.csv	76	110	243	712	754
.subplots()	58	44	90	543	481
85345	98	78	454	796	129
optical	28	14	267	710	841
bootstrapping	28	23	332	511	531
pmf	79	23	332	511	239
aims	38	1	291	317	354
mkvirtualenv	30	170	244	481	174
pairwise	16	297	185	293	716
result.index	43	47	493	76	593
scipy.interpolate.splrep	53	10	238	720	396
restful	23	84	294	317	127
risky	10	241	395	170	215
datastructures	38	50	100	663	354
column-by-column	40	50	182	354	125
jsut	37	31	467	780	851
7l	48	274	112	649	159
7k	78	160	220	41	705
xtest	52	134	349	539	827
7s	88	197	55	337	89
agrid	52	19	263	284	19
7x	88	180	55	337	89
sixteenths	61	31	443	212	214
figure.colorbar()	64	161	90	543	481
part1	72	102	154	278	756
unprocessed	84	195	51	592	427
precalculated	98	146	454	646	744
pmi	78	150	163	479	798
finding	74	13	37	746	868
donor	78	150	445	479	604
1.8.6	46	221	151	202	284
identitytransform	81	88	110	739	584
1.8.0	85	276	42	157	621
15x15	71	195	213	674	95
1.8.2	85	276	42	157	621
donot	83	206	80	197	564
easy-install	13	128	5	197	482
777	12	279	488	364	265
770	12	142	162	528	888
773	88	197	162	196	432
user's	23	84	294	768	161
778	12	256	488	196	432
jst	17	28	250	236	345
76	12	279	319	111	465
75	12	279	319	528	106
74	12	279	319	751	465
73	12	279	319	111	465
72	12	279	319	111	465
71	12	279	488	111	465
70	12	279	319	528	106
nothing	29	28	306	791	473
b*d*f	11	234	4	531	56
79	12	279	488	111	465
78	12	279	319	751	465
7.475	52	19	263	364	855
binarize	28	26	168	135	816
1.8.x	85	276	151	685	380
matplotlib.widgets.rectangleselector	64	6	278	572	536
ydata	60	275	418	129	910
notch	77	292	428	430	547
cdd	11	186	25	562	56
rtd	83	84	178	197	467
13:30	67	260	12	372	958
rtf	86	222	329	260	519
autofmt_xdate	58	44	90	341	683
py27-numpy	13	170	50	104	174
rtl	32	162	420	381	588
rth	35	238	409	187	336
accumulates	88	283	485	139	668
focusing	10	118	116	590	328
cdv	86	222	329	107	519
multiplicities	40	50	497	534	122
rts	28	14	267	429	841
cds	98	110	243	796	984
_repr_html_	64	6	275	183	322
dilation	84	230	428	166	353
inflection	53	151	11	487	762
rebooting	83	206	211	361	467
grace	65	190	250	702	915
re-reading	65	118	116	590	887
data.columns	43	72	68	265	622
one-column	3	156	65	354	125
str.startswith	43	47	68	265	708
compiled	55	174	408	90	455
libx264	63	144	452	16	721
xticklabels	37	290	166	706	76
reply	35	207	371	205	336
critically	98	146	317	587	509
compiles	55	174	422	90	455
algos	28	227	354	135	816
typos	65	291	258	407	887
ln.remove()	47	46	345	418	162
continuum	83	128	101	461	637
-150	93	194	269	606	206
rob	35	207	409	20	336
y.dot	11	178	112	562	726
np-hard	28	10	324	214	610
hairy	82	241	395	334	327
achieved	74	232	306	40	673
z-levels	61	136	467	22	786
pyplot.errorbar	60	155	240	495	285
constant_memory	76	91	367	107	86
2001,101,100	15	213	236	514	144
delimiter=none	32	16	487	415	768
falses	98	146	317	605	602
numerous	29	62	159	161	746
matplotlib.mlab.griddata	53	102	238	720	396
f-order	16	178	462	453	122
profiling	55	147	55	537	219
creating	74	232	386	548	359
h=10	88	197	73	337	217
counter-productive	34	190	307	590	216
competent	17	43	377	396	803
np.nan_to_num	87	55	201	232	591
relying	10	241	17	768	215
f2c	96	174	408	90	455
prescription	80	56	454	723	897
hesitant	82	43	377	500	803
interrogate	64	161	90	572	370
django's	23	84	376	184	127
roman	73	166	134	764	862
context	10	137	116	732	999
to_excel()	92	91	367	183	86
multi-class	28	26	354	135	816
string.zfill	0	185	226	641	231
re-draw	6	69	345	666	356
span_y	98	148	206	73	77
v0.15.0	46	221	383	616	477
tgd	11	234	242	531	56
fn()	3	106	148	155	699
np.float128	70	59	325	332	522
dataframe.append()	92	156	78	105	971
asdf	0	237	397	436	864
java	55	1	29	317	564
incomes	78	56	445	796	347
nader	35	207	371	205	767
political	99	250	132	646	563
hexagram	77	281	114	10	347
shingle	78	93	243	390	984
low-frequency	77	29	299	77	347
refered	10	173	35	97	142
iterrows	92	156	78	47	971
dist_matrix	1	19	112	284	726
toggles	90	69	32	624	536
v2.7.6	85	276	233	685	858
v2.7.3	85	276	42	685	380
=nan	11	52	4	770	743
matplotlibrc	30	122	478	350	181
input.csv	3	110	243	712	754
empty()	19	184	455	480	782
pythran	55	174	422	537	219
2*len	1	148	461	139	726
evaluated	79	10	140	684	231
.repeat	1	57	41	677	99
.carstensen	65	291	409	407	887
evaluates	75	106	317	605	135
axes_leave_event	90	187	32	624	112
19.5	88	256	236	196	432
19.7	15	211	236	514	980
19.0	15	211	469	514	254
19.2	15	211	236	514	980
19.3	15	256	236	196	432
program's	22	85	294	349	431
19.9	15	256	236	514	980
collaboration	68	6	274	205	628
s_xx_fft	11	234	242	531	56
2.1.0	85	276	42	163	621
figtext()	64	136	90	391	76
))])`	48	105	180	53	371
windows7	85	276	42	685	858
deletion	22	50	388	691	359
peoples	34	190	247	97	216
sqlite3	86	68	119	478	126
advise	68	190	465	432	343
windows8	85	276	42	685	858
matvec	16	94	462	455	800
891	1	274	162	305	159
892	12	110	190	111	261
literature	28	43	247	321	746
painless	38	1	80	317	564
flows	23	14	267	710	119
holidays	80	163	254	723	333
libblas-dev	13	170	50	104	482
libpng-1.6.6	13	170	211	104	485
cudamat	55	174	408	90	651
stating	29	83	306	791	39
throwaway	47	237	397	436	864
customer1	43	72	231	265	708
customer2	43	72	231	265	708
subsampled	22	195	497	534	953
///	47	297	461	390	764
loggeddata.dat	30	162	329	247	344
proxies	38	109	397	732	370
subsamples	71	250	339	94	616
colorbars	37	290	24	391	76
plt.scatter()	6	161	208	543	481
cctools	30	259	244	381	960
np.shape	1	274	112	305	159
forloop	19	294	497	534	68
tables	3	68	6	107	126
dashdot	20	155	240	603	285
tablet	55	30	480	785	467
workers	22	85	71	349	431
shape-	1	19	41	305	21
contractor	78	93	243	390	965
revenue	78	56	445	41	844
')`)	76	149	170	460	612
hermite	79	10	324	416	13
reinstate	58	44	452	799	162
shape=	1	123	173	50	21
associations	3	110	182	587	125
p.p.s.	10	231	17	756	999
complaint	29	231	395	335	568
eoferror	63	83	283	715	39
')`]	60	155	297	724	12
dtyped	70	99	421	285	843
label-based	40	104	23	67	92
dtypes	70	99	74	663	843
df_original	44	134	68	265	708
pd.read_excel()	86	91	367	107	86
entangled	38	1	80	197	564
table2	43	93	82	558	965
table1	43	72	82	311	578
shaped	71	64	268	519	684
array.tolist()	19	294	455	231	782
shapes	71	64	268	305	436
image.cmap	20	119	320	764	846
x**3	11	234	4	562	56
')``	43	39	1	285	502
your_array.shape	1	57	296	232	280
essential	27	137	116	420	328
pkg-config	13	128	50	104	482
rot	58	44	166	706	683
unmaintained	55	1	35	461	564
row-1	52	52	263	770	985
infile	76	199	30	772	736
glibc	96	174	408	650	455
4mb	88	283	373	549	236
js	23	1	294	317	127
seller	78	56	299	723	897
histo	77	292	63	631	762
-shape	1	274	268	305	726
payments	78	56	445	41	67
20140104	80	163	148	133	931
4.10.4	83	206	178	681	380
df2.b	43	72	82	558	965
df2.a	3	93	243	558	984
non-standard	38	241	80	500	327
2009,200	67	213	95	185	51
non-scalar	75	99	421	756	843
firing	90	187	32	624	112
125k	88	26	354	361	816
axes.py	50	145	118	27	394
dialog	90	187	32	624	536
wanna	74	232	246	209	472
gamma	79	23	332	511	239
file2	0	199	30	283	736
conserving	40	50	10	548	678
plethora	34	254	159	321	79
x-value	98	281	287	719	358
pl.figure	6	46	345	418	356
data.min()	11	194	4	664	743
file-	86	222	329	107	519
df.reindex	44	164	181	700	827
diameters	77	176	77	623	210
capacitance	77	292	20	430	194
prettier	82	241	378	78	29
unix_timestamp	76	199	93	177	987
analyze	23	14	294	94	625
sections	74	232	159	94	36
ax.twinx()	58	44	494	391	388
filer	20	151	259	525	762
z.shape	1	274	112	677	159
filed	46	173	359	604	208
-wthread	90	15	189	226	818
junior	17	43	377	451	803
raising	29	231	389	716	473
df.columns.tolist()	44	134	260	155	827
consist	74	297	37	746	36
characteristic	77	23	332	511	531
file_	76	199	286	283	736
barring	17	62	116	236	345
full-blown	82	6	291	640	450
scipi	81	88	110	761	584
if-then-else	19	214	125	684	382
consise	82	241	378	573	29
r6034	63	244	283	553	39
highlight	61	31	175	212	276
fico	78	266	445	520	995
x-ray	77	195	51	623	563
libblas.so.3	30	259	94	159	960
fread	86	222	357	260	405
]]]`	52	19	160	364	640
problem-	28	151	106	631	970
graham	35	207	409	187	336
1.9.0	85	276	42	157	621
99.29547499	15	157	64	296	837
my_ndarray	75	148	206	471	622
df.country	43	52	223	4	567
outputs	74	117	459	122	508
dimensioning	29	28	306	458	473
bug-fixes	46	221	124	202	435
figsize	58	139	18	324	543
tpr	72	194	25	129	221
cell-centered	20	102	443	319	845
muddled	17	43	88	236	874
generates	74	117	459	58	508
blah2	43	72	223	145	567
problems	29	231	88	173	568
.to_frame()	44	134	461	76	827
workon	30	15	244	165	383
helping	68	207	371	205	767
generated	74	171	386	122	673
wait=true	58	46	345	642	162
dfft	79	151	106	631	970
mulitindex	92	156	245	105	699
probleme	29	28	459	791	473
python27\lib\	50	145	225	27	429
incremented	98	132	497	534	673
bcoz	47	28	306	209	472
aitoff	61	176	282	626	908
sitecustomize	63	5	110	553	584
q_date	43	35	93	727	410
vice	74	232	182	661	363
python27\libs	50	145	486	138	204
rev_date	43	72	309	727	852
euler's	79	10	324	487	610
narrative	34	118	116	97	328
jansen	35	207	371	205	336
intentional	10	231	395	335	999
once	22	171	497	534	214
select()	92	156	78	105	971
hooks	90	38	46	380	384
resistance	22	13	114	39	210
011	67	78	162	133	272
edt	67	163	284	718	483
screen	90	187	32	624	536
edx	28	186	25	396	275
get_proj	0	275	140	684	231
excel's	79	193	367	703	392
loglog()	58	44	494	341	388
simon	35	115	409	20	336
pydata	34	173	35	604	565
base64	84	192	123	607	405
elegent	82	241	378	573	29
archlinux	85	128	211	393	482
20964	88	197	53	196	616
my_file.csv	76	144	327	283	383
prev	98	258	273	605	377
optimize.py	30	162	125	381	842
dramatically	88	180	100	537	246
data.txt	76	199	286	283	754
groups.mean()	44	134	65	204	832
peak-finding	38	1	125	381	564
octets	78	110	243	712	984
uniqueid	44	134	260	155	827
2015-07-05	67	181	58	24	888
special-case	9	109	246	756	512
-ic	50	145	133	168	204
refactored	46	221	124	331	78
py2app	83	128	178	197	467
pdf's	73	125	248	276	304
polling	22	187	294	39	474
scipy.signal.convolve2d	19	101	125	703	782
subsampling	88	29	148	98	616
stratify	78	250	445	479	604
limitations	10	231	17	321	79
loffset	92	149	447	614	169
smaller	88	266	100	574	668
curvefit	79	10	140	363	239
goodies	38	254	234	317	79
lightest	20	119	259	757	786
ochr	43	2	253	265	708
non-strict	38	227	17	756	382
longitude	33	176	135	617	298
ssno	43	200	231	204	832
bdf	53	22	324	566	13
developed	38	1	377	317	275
ca_map	71	195	268	519	684
binsize	77	194	63	557	780
concisely	82	137	378	40	29
b.csv	76	110	243	712	754
datetime.datetime()	70	35	245	781	920
capital	32	16	420	482	898
journal	28	125	248	276	304
multivariate	79	23	332	511	531
value_to_find	98	224	93	155	475
kdb+	92	156	78	354	392
n.b	29	28	227	209	472
index-array	40	184	270	231	122
n.x	52	220	160	476	855
multidimentional	75	64	10	663	382
mises	61	23	332	511	951
shutil.py	50	145	118	734	679
df.dot	1	134	112	562	726
unefficient	82	241	378	334	29
99th	98	266	22	10	66
headless	90	38	376	184	831
slightest	29	28	227	361	473
df.columns.values	44	134	260	700	827
simpliest	82	214	341	573	382
cv_image	52	0	160	284	855
df.a.iloc	52	52	68	290	985
mpld3.show()	90	46	345	599	356
mpl3d	61	136	208	543	847
consumption	88	283	373	549	236
2-step	82	232	246	209	36
non-inclusive	98	148	273	141	221
df.to_json()	76	68	275	183	322
unequally	37	232	63	207	340
3*3	71	186	268	738	95
equity	78	116	430	581	67
editable	86	125	329	691	405
%lprun	22	147	55	337	89
build_clib	30	170	244	481	174
detects	74	117	152	58	638
sh()	0	275	140	44	231
xvals	60	102	418	557	756
anywhere	29	28	410	209	457
stabilizes	72	266	114	129	762
equate	79	269	317	661	610
endian	70	100	325	86	22
performed	74	171	306	98	673
p-1	89	186	207	562	90
22050	77	292	20	430	227
overfitting	28	26	354	135	128
sir	35	207	371	205	767
vderivs	79	275	497	684	231
sip	13	128	5	104	482
subdirectory	30	162	478	247	344
tamper	64	241	246	190	370
get_rgba_bitmap	6	46	345	418	481
embarrassingly	55	85	71	349	431
sic	52	224	461	471	812
set_xticklabels	58	44	166	341	184
.rank()	43	164	181	700	832
sig	0	275	332	424	292
left_on=	44	2	253	427	176
sid	78	93	445	155	984
instead	74	232	246	209	36
sin	11	234	242	664	292
sim	47	224	30	424	588
namevalidator	9	185	331	594	698
_does_	29	28	158	476	472
msdn	83	206	325	86	22
p-s	79	186	324	487	610
demonstrates	27	293	403	420	579
counter-intuitive	10	231	395	335	327
abuse	10	241	395	500	669
binmax	93	194	269	557	221
nearestndinterpolator	53	101	238	720	396
data-processing	28	1	17	317	866
12-bit	84	192	123	607	427
veedrac	35	207	409	187	336
test_generate_correlation_map	65	118	116	337	905
f.apply	43	47	493	76	593
synchronization	10	85	17	128	431
honestly	17	43	227	236	803
np.percentile	87	193	121	673	608
0.000000000000000000e	15	157	64	296	837
polar()	25	161	208	543	481
wigner	77	14	267	626	841
0-indexed	57	263	270	713	428
13%	88	283	55	549	89
orange3	90	69	46	380	384
knowledgable	68	190	307	432	571
133	12	267	488	111	132
132	12	279	488	751	465
131	12	267	488	111	132
130	12	279	488	751	465
137	12	267	488	111	132
136	12	279	488	111	863
135	12	279	488	751	175
134	12	279	488	751	465
plot_dataframe	64	161	320	525	296
139	12	267	488	111	132
138	12	279	488	751	465
fromarray()	84	219	102	607	427
horizontally	37	31	467	780	851
longitudinal	61	176	77	623	293
healpy	84	230	128	607	296
tempfile	81	88	382	260	344
horn-schunck	28	14	267	710	841
scipy.sparse.linalg.spsolve	16	94	462	782	800
clusters	99	288	185	646	616
numpy.matrix	16	94	333	455	800
describe()	92	193	78	31	121
re-enter	63	171	389	361	473
ironlab	83	206	178	540	380
bernoulli	79	23	332	511	507
material	34	254	234	321	565
oranges	78	67	223	145	804
13s	88	197	55	337	89
numctrl	77	31	443	191	214
beeing	22	171	388	791	448
freemat	57	89	8	788	62
random_sample()	93	275	295	684	231
worlds	38	1	69	317	79
.imag	11	0	4	215	56
.net	55	1	69	461	637
fuzz	77	151	162	133	888
geforce	96	30	480	785	729
lorentzian	79	23	332	511	531
8*	15	194	269	606	10
8(	12	142	162	305	60
8)	12	274	162	305	175
8/	67	163	284	133	272
new_id	44	134	65	155	827
unbelievable	65	291	274	205	767
related	29	173	234	173	568
88	12	279	0	751	465
89	12	279	488	751	465
interplay	10	231	17	317	305
vc++	83	206	178	650	634
82	12	279	319	111	465
relates	29	118	152	791	999
80	12	279	319	528	106
81	12	279	488	751	465
86	12	279	488	111	465
87	12	270	319	751	465
tabulate	53	6	339	720	716
85	12	279	319	111	465
0.73517866	52	211	263	364	265
n-m	89	186	207	683	90
get_position	6	161	90	543	481
human-readable	86	222	329	601	405
frontier	99	288	11	315	738
josh's	82	238	187	187	308
geos	13	128	5	104	482
f2py	55	174	29	90	455
polylines	61	288	282	315	138
date-like	80	35	245	781	920
behaviours	29	231	395	335	568
geom	47	200	93	145	764
.applymap()	92	156	78	105	971
exporting	86	91	367	107	86
romain	35	207	371	205	767
contra+1a	15	272	61	225	544
supports	38	117	152	317	638
8k	88	160	220	80	54
vigra	9	204	29	790	694
8o	33	281	77	42	995
vlen	75	222	421	663	843
8b	84	100	123	592	22
marnach	35	238	326	187	336
maintains	74	117	152	58	305
i'th	71	132	273	73	77
8g	88	182	480	785	236
8d	32	16	190	477	261
8x	88	180	55	337	89
x.transpose()	16	178	462	562	800
8s	88	197	55	337	89
philip	35	115	409	20	74
1.6.x	46	206	151	202	380
get_data()	9	161	386	543	699
2+2j	11	234	4	531	56
cython+numpy	55	174	29	756	219
latitudes	33	176	135	617	298
8[	70	273	309	678	700
4th	98	263	454	746	428
8\	47	105	170	177	764
8]	52	19	303	364	640
lti	79	109	276	266	610
append=true	44	164	379	217	895
tacked	3	156	6	354	125
plainly	10	151	17	631	999
echo	30	15	244	199	870
intuitively	82	241	378	200	29
set	74	232	37	746	868
$\sigma$	60	155	495	495	285
implementations	55	227	408	90	651
boolvec	1	57	112	231	981
df.to_excel()	92	91	367	183	322
publication	73	125	248	276	625
dataframe.append	3	156	260	354	68
sep	76	16	322	51	189
their	74	232	37	746	36
numpy.lib.stride_tricks	19	294	296	231	601
boil	27	293	403	420	579
']]`)	43	72	82	265	708
shell	90	15	189	540	818
hahigh1	52	0	180	215	288
nibble	77	266	148	661	744
reversed	40	232	182	661	363
zval	72	102	418	129	756
interactively	90	69	32	624	536
july	80	163	284	723	72
reverses	40	117	270	713	363
2,000,000	88	160	220	80	54
isolation	10	231	305	482	215
nogil=true	88	197	422	196	89
limiting	77	151	106	631	668
stupidly	65	291	441	236	874
jpg2000	86	222	329	601	444
chardet	81	16	190	477	383
occurences	98	297	454	41	639
bins=5	60	123	173	557	221
f_i_j	11	0	263	215	19
gzipped	86	222	426	611	820
blit	6	46	345	572	373
faux	65	115	116	15	421
itemsize	70	100	74	332	681
left=none	60	194	495	193	8
11528	98	78	82	796	272
angle	33	176	282	617	725
rearranged	74	171	306	122	673
scipy.stats.itemfreq	19	42	455	13	886
rearranges	40	64	182	524	678
which	74	232	306	209	36
re-opening	22	171	388	107	519
clash	29	171	182	190	655
set_xticklabels()	58	44	166	341	184
class	9	109	331	594	386
regularpolycollection	61	288	11	315	329
neighboring	99	288	127	356	744
autoscale_view	6	161	208	543	481
_in	74	232	37	209	370
1.3.0	85	276	42	681	252
two-line	82	137	378	573	669
_if	12	224	58	601	132
_id	44	134	93	390	410
currently	74	232	459	209	36
runtimewarnings	29	231	389	654	568
web.py	23	84	376	595	127
chances	10	190	17	500	246
sceptical	17	43	341	573	803
big_array	1	274	112	677	442
hierarchic	51	136	175	22	847
darkest	20	119	259	757	786
subtracting	98	146	148	98	62
eigenspace	71	64	127	150	988
getdata	92	149	447	460	612
.to_dict()	44	134	202	262	188
z-order	37	31	338	780	664
?...	65	28	227	209	472
surroundings	61	31	282	757	786
lemme	68	190	307	590	328
bogged	17	62	88	39	180
combo	22	232	246	190	629
piano	77	29	114	429	210
###	32	162	30	468	736
predeactivate	30	259	478	159	181
pl.colorbar	58	155	240	495	162
klmn1	3	93	65	155	965
watching	23	283	250	39	180
pypm	13	128	211	104	482
midnight	80	163	254	723	72
pypi	13	128	5	797	391
segid	78	110	317	155	984
subrecord	32	263	420	87	428
dptcitydptcountry	78	93	243	558	965
pypy	55	174	408	90	455
queried	3	68	119	370	161
500,500	1	142	268	305	60
stitching	61	50	467	534	678
bisect	19	42	455	13	886
queries	23	68	119	478	126
fit()	79	26	354	363	412
scipy.fftpack	55	101	125	756	782
modulo	57	89	8	788	62
acquired	23	192	365	676	257
module	81	88	110	739	183
geometrically	89	142	97	139	221
zero-padded	80	292	254	788	931
acquires	23	14	365	623	257
np.std()	87	275	121	786	484
puts	74	117	152	58	638
out=array	1	0	263	215	99
dll	81	244	486	553	584
y-y0	11	234	4	531	56
rendition	38	6	291	317	628
frustrated	17	62	88	451	803
data.data	52	220	198	770	714
counterexample	65	115	116	590	812
variability	77	151	106	631	210
utm	33	176	135	617	908
np.lexsort	19	42	296	74	886
a.b	72	178	25	150	981
system's	83	170	80	165	482
a.i	9	109	331	684	231
a.t	16	178	462	562	726
rebalancing	98	258	148	77	347
ax.bar3d()	6	44	452	418	481
xup	0	275	295	684	231
0xc0000005	63	244	283	553	323
webapp	23	84	376	317	866
leg.get_frame()	47	148	206	141	881
swift	35	207	371	205	767
code.i	61	136	175	626	951
index_label	92	185	322	183	322
x-location	61	281	454	646	744
kwds	0	267	118	580	8
1.04	88	142	162	196	60
utilising	38	6	291	317	628
x_b	72	186	25	129	756
wall	17	62	56	753	180
x_j	72	186	25	174	756
x_k	72	186	25	683	988
chmod	30	122	478	159	242
walk	28	13	497	534	616
x_t	72	186	242	531	56
x_r	1	148	206	139	756
likeability	98	281	51	141	77
sequences	75	286	163	425	798
seperator	32	16	420	468	768
x_{	72	186	242	531	56
i.e.	74	232	37	746	36
funpos	98	106	317	684	602
charts	61	136	175	22	847
odd1	78	93	82	204	832
fprime	79	275	324	566	13
matrix_rank	16	94	462	562	800
bewildering	17	62	88	236	345
2010-10-01	67	260	12	372	958
x1.shape	48	274	112	539	120
mike	35	207	409	20	336
mark_inset	64	31	90	780	481
dictionary.values()	1	57	112	232	881
crappy	88	137	55	337	674
jahresgang	43	47	309	727	987
x_2	72	186	25	683	773
x_0	72	102	418	129	773
x_1	72	186	25	683	773
pinv2	29	231	395	335	905
matshow()	25	243	208	49	845
present	74	232	37	746	868
abandoned	17	62	250	39	180
unlike	74	117	152	200	305
numpy.lib	81	88	110	739	183
a^{-1	16	186	462	562	800
outer_df.ix	43	130	334	145	582
scikit's	28	26	354	135	816
non-ndframe	63	83	283	715	39
rename	3	156	65	190	629
performancepython	55	254	234	302	565
fmt=	76	205	346	177	576
barely	29	283	100	264	874
refs	22	266	485	432	668
encouragement	35	207	371	205	767
bigint	57	99	325	438	979
datafames	3	297	6	587	953
postgres	86	68	119	478	126
strucutre	3	232	6	780	678
wxframe	61	69	46	572	536
barchart	51	136	175	22	847
instantaneously	22	283	373	549	452
enumeration	75	297	497	776	359
add_axes()	6	161	90	543	481
unity	79	23	63	511	762
non-matching	3	146	424	414	251
inch	37	243	18	207	449
gets	29	117	306	58	214
incl	23	29	430	149	79
spots_b	98	146	454	796	984
r-r	77	292	20	430	942
new_band	52	19	263	364	265
a.astype	70	59	74	332	522
matricies	16	94	462	150	800
xlat	47	110	306	155	161
interval_id	78	93	82	41	832
automation	23	84	294	370	866
dsize	84	195	102	207	449
student	78	150	377	479	275
tstop	98	258	26	796	377
9:40	67	260	12	372	958
from_param	9	109	331	594	386
a|b	89	186	25	683	306
banded	16	94	462	782	800
createdat	43	273	26	781	410
unit=	43	273	309	678	700
firstly	74	232	246	209	36
fk2	47	200	93	204	475
realised	65	291	258	407	887
self.axes.cla()	6	46	345	418	356
obtain	74	232	37	746	868
?????????	47	115	58	127	888
nanos	80	35	245	781	920
recollection	10	231	17	173	568
biologist	17	43	377	396	275
isinstance	87	55	493	675	591
rowvar=0	16	275	25	562	726
console	90	15	189	540	818
copyable	27	293	403	420	579
smith	35	115	409	20	423
attractive	38	6	427	317	628
jython	55	1	408	90	564
a.__iadd__	1	55	295	232	726
autoscaling	58	44	494	341	388
out_index	52	19	162	284	855
denser	77	151	339	646	762
coincidence	29	231	395	335	905
ax.set_axis_bgcolor	58	155	240	418	599
unique_x	98	148	206	73	77
farthest	99	288	185	191	725
kde	53	23	332	511	531
scared	17	43	377	396	803
postion	33	281	443	191	358
numeric_only=true	87	164	181	673	593
platforms	55	174	69	90	564
export	86	125	329	110	519
.reshape	48	57	41	50	21
float128	57	100	325	86	22
econometrics	28	1	267	761	866
array_1	1	148	206	73	714
dfg.index	52	104	23	733	154
14th	98	163	254	723	428
anaconda\	50	145	225	168	204
total_length	57	89	8	664	62
customer_id	44	93	82	558	965
higham	28	14	125	179	841
set_style	20	161	259	495	664
b*c	11	178	4	562	726
dangling	22	263	397	468	655
pd.merge	44	2	253	427	176
textedit	30	15	189	540	383
27.0	15	211	180	364	159
-9223372036854775808	70	78	424	415	509
27.5	12	256	236	196	980
b*y	11	186	242	531	56
publishing	23	150	294	149	275
missing_values=	43	105	424	415	967
toolchain	96	45	5	650	634
universe	28	14	267	710	841
ndf	52	134	206	155	622
ndx	43	164	181	204	895
swear	65	291	410	161	457
customizing	64	254	90	78	404
nds	52	0	263	290	288
setup_plot	6	237	397	44	864
w.dot	11	234	4	562	56
estimators	79	26	354	135	816
anwser	35	207	371	187	336
van	34	115	35	20	142
val	47	134	461	471	260
artifacts	99	151	428	429	303
explict	70	214	246	480	782
*	47	224	295	209	472
add_newdocs.py	50	145	118	734	679
z-values	25	119	339	646	358
kidding	65	291	258	236	136
qtagg	73	38	134	635	810
hdfstore	86	68	379	611	820
var	47	224	58	424	588
~30%	88	180	55	337	89
re-do	22	13	246	190	118
pyplot.text()	64	136	90	572	589
simplejson	38	222	275	202	564
unwrap	75	263	10	601	141
_correct_	82	190	307	590	216
numpy.load()	86	222	426	102	820
tasked	17	14	267	396	275
conway's	23	14	267	710	841
can_pan()	64	161	452	543	130
squeeze	40	294	246	231	678
2.5s	88	149	447	77	612
iterates	40	117	497	534	68
made	29	137	306	791	874
\pip\	50	145	225	168	679
temp	47	224	30	88	736
whether	10	227	317	457	999
andrew's	82	137	341	587	382
2.5x	88	180	55	337	89
.iat	52	104	23	733	92
below	27	137	459	15	421
big-o	82	180	100	497	463
ruling	34	13	143	39	589
iterated	74	297	497	534	68
va=	58	138	265	651	224
groupby.cumcount	98	146	78	105	984
0,000	57	260	269	686	212
inadequate	10	118	106	631	999
covariances	79	23	332	638	11
loc=mean	11	194	4	215	99
interchanged	60	281	162	129	363
id_vars	44	164	65	763	895
mya	1	57	112	232	726
trailing	32	263	420	468	768
mutual	23	116	185	581	11
calibration	77	192	128	429	353
stockdata	43	172	231	265	260
sunrise	80	258	26	77	931
clicks	90	69	32	624	536
exclamation	32	16	420	468	768
arr1	1	148	206	73	77
muchness	82	180	100	497	463
uint8's	71	283	100	139	122
100m	88	160	220	80	54
15-20	88	197	73	94	217
29.5	15	211	64	364	265
'""	15	284	236	514	110
29.1	15	256	162	133	272
29.0	57	100	325	86	22
incurred	40	184	153	537	122
sns.distplot	60	275	226	557	12
band-aid	82	137	246	334	472
.dcm	84	192	128	344	519
profit	78	56	430	204	832
volumes	77	29	299	94	67
convolute	77	292	20	430	547
0.000000	67	213	95	550	110
0.000001	11	234	4	559	743
1000's	88	29	73	94	54
nxmx3	84	195	51	759	427
sumproduct	3	56	6	354	347
towns	71	130	431	738	95
my_matrix	71	148	206	738	221
shape_pt_sequence	12	279	162	751	465
xts	92	68	275	703	392
eligible	35	190	317	187	216
aggregations	3	193	78	354	121
wizardry	68	43	341	432	571
xtx	1	178	112	562	726
superficially	38	1	291	317	354
firs	98	146	148	796	428
lord	35	207	371	205	767
gaussians	79	23	332	511	531
digit	32	16	420	788	898
subwindow	84	195	140	122	214
scipy.optimize.minimize	79	22	324	566	13
osx's	83	206	211	202	380
experimentally	28	14	267	710	841
elevations	99	176	135	646	744
tight=true	58	44	452	642	162
semaphore	83	84	376	197	467
internally	38	117	152	691	638
.slice	43	51	487	151	244
customizable	64	6	291	78	628
100s	88	160	73	80	54
piling	40	50	88	278	678
memory-mapped	86	222	426	102	820
eqnarray	64	214	246	500	512
mlk	96	174	408	90	729
prepending	30	162	397	468	344
tired	17	62	88	161	457
mln	88	160	220	80	217
c2143	63	244	283	715	323
pulse	77	292	20	430	547
consists	74	110	37	746	868
rusty	17	43	377	396	803
%y-%m-%d	76	205	346	125	879
reliability_table_2.csv	30	162	486	247	344
contributed	68	207	35	205	142
fingers	17	13	250	39	589
ctypes.pointer	48	59	112	232	681
constrast	38	231	17	200	305
neworder	52	0	166	65	184
contributes	28	266	106	574	970
:]))	52	0	263	215	288
specialist	17	43	377	396	803
hero	65	207	371	205	767
dateframes	3	297	6	587	125
:])]	52	0	263	284	855
lmfit	79	22	324	566	13
np.load()	76	54	382	260	405
auc	28	26	146	638	11
here	27	137	459	15	421
reported	29	173	359	173	208
yyyymm	80	35	245	125	410
datinglabels	70	78	52	471	764
initial_value	63	83	283	715	39
nulls	3	146	424	414	509
reports	29	28	306	361	568
travis-ci	83	206	178	197	467
cut()	92	193	63	31	780
falsetru	35	238	326	187	336
status-events	47	12	461	471	622
cancellation	57	89	8	654	970
pairings	78	150	445	479	984
attractor	28	14	267	710	841
9l	48	274	112	649	159
classification	28	26	354	135	816
ground	99	176	282	623	563
interate	3	297	497	534	68
brought	29	62	88	458	417
9x	88	180	55	337	89
unix	80	35	245	781	920
pound	78	200	430	479	423
higherz	98	148	273	141	77
9s	88	197	55	337	89
uniq	47	12	461	471	903
unit	77	232	148	98	868
hoping	17	241	88	573	803
non-int	63	83	283	715	232
occupying	37	283	373	115	236
backing	22	184	153	691	282
panoply	64	6	329	78	628
rollapply	79	193	140	703	392
np.tile	1	57	296	291	470
until	22	187	108	361	214
holy	65	291	274	205	767
brings	29	117	306	458	417
2**32	57	89	325	7	22
splot	47	102	418	129	756
99	12	279	488	751	465
98	12	279	488	751	465
epd's	30	206	478	159	960
91	12	279	488	751	465
90	12	279	319	528	212
93	12	279	319	111	465
92	12	279	319	751	702
95	12	279	319	751	465
94	12	279	488	751	465
97	12	279	488	111	465
96	12	279	319	528	175
true_divide	63	83	389	428	57
temperatures	77	250	77	182	210
concepts	17	43	377	321	354
gnureadline	50	145	133	130	753
subplot2grid	58	139	90	324	543
numpy.dot()	16	94	408	756	651
reviewing	17	62	247	244	746
set_position	58	44	265	341	224
gargantuan	88	50	100	94	246
indention	27	293	305	420	579
hoc	82	241	341	525	215
syntactic	10	104	479	200	147
hoo	35	207	274	205	767
data.sum	87	164	181	700	895
hoh	47	67	346	133	888
revisit	17	62	498	236	180
how	74	232	227	209	472
hot	20	119	259	137	846
hop	98	148	273	73	77
significance	10	23	332	638	11
anaconda\lib\	50	145	225	168	429
classify	28	26	354	135	816
dlopen()	30	170	244	165	584
cgohlke	65	238	116	187	887
beauty	38	117	274	548	218
np.str_	70	105	74	53	522
reader.next()	76	199	30	283	736
micro-optimization	82	180	100	537	463
instalation	83	206	178	197	467
read-write	22	222	426	611	820
c-code	55	174	29	90	219
numpy.reshape()	1	294	296	231	280
np.round	87	55	201	664	593
alias	81	237	397	739	864
recvd_dttm	44	72	26	204	410
kd-tree	53	288	11	293	716
x_scaled	1	57	112	232	159
numpy.linalg.lstsq	79	22	324	363	620
weasyprint	73	125	248	276	304
feedback	68	207	465	205	343
uninstalling	13	128	5	104	485
point-in-polygon	99	288	11	315	138
myarray.shape	1	274	112	677	681
calculate_something	75	204	295	100	219
fidelity	23	192	365	429	946
pd.crosstab	44	134	260	700	827
pd.date_range	80	149	447	2	24
_why_	10	291	227	500	472
draw_artist()	6	46	345	572	481
regress	79	26	430	638	620
aindices	98	132	273	73	77
distinguishing	10	250	106	757	563
eelco	35	238	326	187	336
py_incref	9	109	295	684	699
answerers	34	190	307	590	688
lambert	33	176	135	617	908
8gb	88	182	373	549	236
my_module	81	88	110	739	183
dataconversionwarning	79	3	140	381	412
resample()	92	149	447	614	333
130,000	88	160	220	80	54
clobbering	22	237	397	732	864
pandas-generated	37	136	175	122	847
acml	96	174	408	90	729
noticable	88	160	100	574	217
debug	27	293	305	420	579
dataframe.values	92	156	78	663	843
xubuntu	85	276	42	685	858
mdb	47	130	30	283	736
_think_	46	28	124	202	435
mdf	43	72	82	558	377
spider	83	15	189	540	818
contracting	40	64	127	150	981
lineitem	70	59	74	332	681
we'd	10	232	246	500	196
date_index	80	149	447	460	612
path_to_file	47	224	30	283	736
mds	16	26	354	135	816
whit	74	28	306	122	36
whis	51	194	269	65	358
whip	82	241	341	537	219
trending	28	14	267	381	842
u-matrix	99	288	11	293	329
pokemon	78	93	82	463	965
jblas	55	180	55	90	651
plot3d	61	136	175	626	847
ofcourse	29	28	306	482	472
df.iteritems()	92	12	461	471	699
surveys	78	150	445	479	604
encountering	29	231	389	173	568
pd.options.display.max_rows	60	39	452	642	290
9-12	61	281	454	646	428
ate	22	283	373	88	236
subtractions	57	143	154	756	62
piecemeal	86	85	426	611	820
ata	47	134	30	348	987
axes.prop_cycle	64	166	452	764	664
atm	46	241	359	285	919
on-disk	86	50	426	611	820
_also_	10	231	17	500	999
today's	80	35	245	781	920
pylab.draw()	90	46	345	599	356
resetting	3	156	182	548	526
200	88	142	220	528	106
trillion	88	197	220	189	918
unfilled	61	31	282	212	138
100000000	88	142	173	50	60
spinning	22	187	56	39	180
mingw	96	128	5	650	634
customization	64	6	390	78	370
sklearn.feature_selection.chi2	79	275	349	457	412
output_file.txt	47	110	30	283	754
bitten	17	62	88	39	874
qt.t	16	178	295	562	726
similarly	74	232	37	209	36
quiver()	61	136	208	319	908
xin	61	176	175	626	762
serialising	3	50	6	370	161
xiu	72	178	154	150	75
fancy-index	19	294	296	231	678
ranging	77	281	269	528	212
.unique	43	47	231	290	708
rdbu_r	20	119	259	757	846
peril	3	156	65	155	410
x_mean	72	102	418	129	221
itertuples()	19	12	455	47	806
color_dict	3	297	280	42	903
bgra	84	192	123	607	405
acquisition	23	192	365	676	257
unintended	10	231	395	335	568
d.sales	52	0	263	290	855
boston	23	116	430	149	67
oliphant	34	173	35	302	142
u'8	15	211	64	71	96
u'3	43	105	231	71	255
u'2	43	105	231	71	255
u'1	70	105	231	71	255
u'0	43	105	231	71	255
u'6	43	105	231	71	255
python-version	30	170	244	165	960
cyrillic	64	110	420	131	898
x_vec	75	106	140	684	684
absorbed	34	173	143	97	589
season	78	56	445	723	897
2015-09-30	67	213	95	185	51
u'o	60	105	231	71	255
shall	29	28	306	209	196
screwing	17	13	88	458	417
u'a	43	105	231	71	255
object	9	109	383	616	699
u'e	43	105	231	71	255
microsecond	80	35	245	781	920
_updatecanvas	0	46	345	44	112
jepp	55	85	80	349	564
100.2	15	211	162	606	212
12ema	80	258	254	723	428
uxyz	11	0	263	215	19
blockmanager	9	109	331	594	699
macbook	85	30	480	785	858
u't	43	105	231	71	255
emailing	34	173	35	604	208
numpy.load	86	222	382	102	820
incomplete	27	137	116	791	421
signatures	0	237	397	44	761
cmin	58	138	495	642	299
lapack-devel	13	170	50	104	482
main()	0	237	397	44	864
np.arange()	93	12	193	628	806
hazy	17	43	377	396	275
zero323	35	190	116	97	336
3,000,000	88	160	220	80	217
touches	17	13	143	39	589
busy	17	187	250	794	180
696	50	267	118	483	132
698	12	279	488	751	465
user-agent	47	224	30	133	588
touched	17	62	88	161	874
qwidget	6	69	46	380	384
heartily	34	6	291	500	450
pandas\io\	50	267	118	483	679
testdata	47	224	30	424	736
.itemsize	70	59	74	332	522
pass-by-reference	38	1	479	200	354
volatility	79	23	332	638	347
.startswith	43	51	487	151	567
heaviside	79	10	140	684	231
greens	20	119	259	757	846
textbooks	28	14	267	179	841
boxcox	0	275	226	684	231
cvimage	84	219	102	401	721
pandas.series	92	106	78	105	699
release	46	221	124	331	549
transistors	23	14	267	710	841
anaconda3-2.4.1-windows-x86_64	83	206	178	165	380
coefficient	79	23	332	638	11
inadvertantly	10	231	389	335	154
mysql	86	68	119	478	126
axis=-1	87	57	121	232	608
inner-most	82	263	497	534	68
unexpectedly	22	187	108	361	248
result	29	28	306	122	508
hammer	61	176	282	617	908
dataframe.hist()	51	136	6	272	847
sigma^2	79	23	332	511	239
wikipedia	28	254	234	302	565
stamps	80	29	299	77	931
k.t	11	178	25	562	726
ax.set_xticks()	58	44	166	341	184
wts	87	193	121	673	608
parallels	33	176	175	617	908
rolled	40	13	388	190	673
personalize	37	290	166	706	76
parallely	22	50	497	534	953
openning	22	222	329	260	383
matplotlib.axes._subplots.axessubplot	6	161	90	543	109
wtf	65	291	258	236	345
downgrade	46	221	151	681	284
.day	43	35	309	727	852
pandas.to_sql	86	68	119	478	126
topology	28	14	267	710	841
pair-wise	16	227	185	150	135
accident	65	118	258	791	874
sacrificing	82	50	341	548	246
2-dimension	71	64	154	519	684
triggers	29	117	306	716	473
11x	88	180	55	337	89
asker	34	190	307	702	216
demanded	83	206	178	202	473
data.py	50	162	118	483	927
genus	78	200	93	463	475
asked	34	118	307	97	216
pre	74	171	306	209	655
stk_list	43	47	68	265	708
2nd	98	263	454	796	428
x.dropna()	43	47	493	76	593
blending	20	119	259	137	786
diff	87	193	148	673	121
generality	82	180	341	537	246
hues	20	119	259	137	786
holdings	62	258	26	204	377
restarts	22	187	108	361	214
pro	85	30	480	785	858
location	74	232	37	746	868
sq_area	15	211	214	364	99
np.logspace	93	123	173	557	361
200-300	88	160	73	80	54
pd.set_printoptions	46	221	151	331	435
telnet	23	84	376	184	590
hershey	73	166	134	131	862
runtimes	55	227	55	457	905
guassian	79	23	332	511	531
.isnull()	43	52	68	181	985
castro	35	238	326	187	336
#set	37	290	443	706	76
symbolically	79	10	324	744	610
flooding	77	151	106	429	762
geoid	33	176	135	617	563
lombscargle	77	292	20	430	547
remembering	17	13	246	209	118
played	17	62	272	161	647
equator	33	176	282	12	725
ans	75	275	295	684	756
stylelib	30	259	478	159	181
weirdness	10	231	395	335	568
player	78	150	445	479	604
ignoring	74	146	306	548	655
init_guess	0	275	295	684	231
thingy	65	291	246	407	887
series.order	92	175	78	524	130
things	82	241	159	458	118
np.matrix	16	94	201	455	726
plot.i	51	136	272	626	847
templates	23	125	128	158	127
numpy.ndarray.shape	75	64	10	519	981
zquality	43	52	82	145	764
ownership	9	61	153	358	282
templated	38	109	29	790	354
protected	81	237	397	436	864
tune	79	151	106	525	668
subgroups	3	56	6	354	301
two-point	79	288	185	293	762
off-the-shelf	82	241	341	573	79
thing2	78	93	223	405	832
thing3	12	279	223	405	272
psuedocode	27	137	459	15	421
zhenya	35	238	326	187	336
urlparse	81	88	275	739	564
e._coli	43	72	231	265	708
echoes	32	15	329	540	383
pseudo-python	74	232	459	15	421
mnist	28	26	354	135	816
maxima	99	103	428	646	744
distribute	83	84	80	197	467
greys	20	119	320	49	846
plt.title()	6	46	345	599	356
xelatex	73	166	134	91	862
memoryview	9	204	29	790	64
0-255	84	195	51	592	922
trond	68	207	371	205	767
enters	90	187	108	595	112
slicer	40	104	158	200	650
datazero	98	148	206	558	602
ease	38	1	479	317	628
mobility	77	250	77	623	210
.append()	92	156	78	47	68
easy	82	241	378	573	29
string.format()	74	232	275	209	141
placeholders	32	110	454	482	898
east	33	176	132	644	725
mlabwrap	38	6	125	703	392
a_list	1	106	295	562	292
x=7	98	281	162	796	358
dihedral	33	288	185	617	725
iso8601-formatted	80	35	26	781	410
np.unwrap	57	214	246	631	472
disagreement	27	118	116	15	421
callbacks	90	69	46	380	112
x=2	61	281	287	719	358
~60	88	197	73	549	217
snacode	32	110	420	463	768
poses	82	241	100	334	327
6:00	80	163	254	723	931
occurring	29	28	306	173	568
ceodbc	86	68	119	478	126
.!!	32	263	420	468	768
stringio()	81	88	274	739	676
deal-breaker	86	222	426	611	820
remind	34	190	307	702	915
misled	65	118	258	791	887
groundwater	61	176	128	623	293
single-column	3	156	6	354	125
picklable	38	109	426	732	820
right	29	13	227	209	472
old	46	171	388	190	629
ole	38	1	69	317	564
oli	35	207	371	205	767
fresnel	79	10	324	487	610
np.int	70	59	74	332	522
if_exists=	76	68	379	217	824
ols	79	26	168	638	620
2008-04-08	67	213	95	185	51
multiple	74	232	159	94	36
animate	6	161	208	572	107
np.inf	87	89	424	770	947
math.sqrt	87	55	201	664	292
replicas	77	292	20	430	547
speed-up	82	180	55	337	89
creative	82	241	378	573	29
.asc	86	192	329	676	519
execute()	9	68	119	478	126
timestamps	80	35	245	781	920
x_idx	72	148	273	73	77
mpl_toolkits	30	259	478	381	960
pyarray_enableflags	9	204	29	790	64
oscillating	77	151	470	37	303
24-hour	80	29	107	77	931
06776500	15	157	64	514	144
drawcontours	0	28	140	684	231
emits	22	192	365	595	257
terminators	32	16	190	477	444
o	89	180	207	261	90
second-to-last	40	64	154	191	981
np.packbits	75	100	10	332	979
fwrap	55	174	29	90	564
lacked	34	190	307	482	354
eps	73	125	248	276	304
slightly	82	137	187	334	308
1322	98	146	148	796	509
py_decref	22	61	153	358	282
statements	29	237	305	457	215
last_price	47	134	30	460	612
toc_mg	43	72	68	770	133
datacursormode	38	6	278	158	392
joseph	78	200	93	20	260
triplets	71	297	127	73	684
jane	78	200	223	550	423
unquoted	32	16	190	477	444
center_of_mass	19	101	125	13	782
arcmap	83	206	178	197	293
regenerating	22	171	388	110	508
understandably	29	241	395	334	473
concatenated	3	110	6	155	673
1:230	3	146	6	587	125
np.atleast_3d	1	294	112	232	470
pagerank	28	14	267	293	329
understandable	82	241	378	334	29
fivethirtyeight	73	6	390	131	889
reinventing	82	241	341	500	118
annot=true	58	205	346	125	879
concatenates	40	294	154	278	678
costlisttrain	27	237	397	436	370
b5	72	130	431	174	624
coeff	79	275	314	363	292
equalization	84	230	428	137	296
out-of-range	20	119	259	757	509
rerun	22	187	108	361	248
numpy.percentile	87	193	121	31	608
grid-lines	61	31	282	212	276
powershell	83	15	189	540	818
coefs	72	186	25	683	756
tickmark	37	290	166	706	76
b2	72	130	431	174	624
a.base	9	220	85	594	386
qid	78	200	252	204	832
as-is	27	137	246	420	579
pathnames	86	222	329	110	405
z-array	33	102	135	646	684
py3.4	83	206	151	681	380
py3.3	83	206	178	197	637
transform()	92	156	78	105	971
matplotlib.mlab.csv2rec	86	222	382	260	519
non-singleton	40	64	154	191	981
floor	57	89	148	664	62
0.6778734	52	211	263	364	265
flood	99	29	114	429	931
ambitious	17	43	377	396	275
becuase	10	227	306	633	999
smell	10	43	395	334	812
u+2212	32	16	420	403	898
virtualenv	13	128	5	104	482
asterisk	0	214	455	403	231
tag_id	78	93	243	390	965
10378	43	134	260	265	827
other_df	43	47	260	700	827
rolling	79	193	148	614	347
ax.plot_surface()	25	161	208	720	396
mpl_toolkits.mplot3d	81	88	110	739	584
serialized	86	222	426	691	820
packets	77	29	77	182	210
coastlines	33	176	135	617	733
laplace()	29	28	140	684	472
time	22	197	73	77	214
push	22	13	143	39	118
*10000	43	201	309	727	987
y_predicted	74	232	175	626	684
serializer	9	109	29	594	405
aslo	29	28	410	190	457
slope	79	23	332	363	620
:/	30	162	478	734	588
x_train	1	274	349	539	412
:)	65	291	371	205	767
reviewers	34	190	307	233	216
16:30	67	260	12	372	958
::	9	204	29	790	694
equalized	84	195	51	137	353
orientation=	58	155	240	586	599
ward	78	200	185	293	832
nop	83	206	80	197	564
ware	82	241	246	573	141
tkinter.tk()	81	15	110	540	889
ax.get_xticks()	58	44	166	642	184
accelerometers	33	14	467	646	762
:o	65	291	371	205	767
:d	65	291	371	205	767
low-quality-posts	50	259	277	709	318
:b	47	130	256	145	792
sep=r	76	199	286	51	189
:|	65	291	258	407	345
x_array	60	102	418	129	910
newdate	80	258	26	41	377
fullest	38	6	341	525	219
my_index	92	134	461	105	827
:p	65	291	258	236	345
1700	12	142	220	528	106
.shape	1	274	112	677	159
85.00	67	213	95	185	51
np.arrays	75	106	10	519	684
1.10.2	46	206	151	685	380
1.10.0	46	221	151	681	435
1.10.1	85	276	42	157	621
:\	50	145	225	168	204
:]	52	0	160	284	776
............	52	19	263	364	855
4.3.3	83	206	178	197	380
:[	47	67	256	145	640
unaware	17	43	17	432	803
bd	72	130	25	174	624
findings	68	190	307	97	216
insignificant	82	180	100	537	246
0.49	15	211	61	606	10
prediction	79	26	354	638	816
interp=	60	155	297	193	285
lat-lon	99	288	135	617	298
gobject	83	206	178	197	854
roof	61	14	282	710	563
missing_vals	43	93	82	558	965
0.44	15	211	162	606	10
tex.cache	30	259	478	159	181
vector1	1	161	208	122	481
])``	43	47	1	290	640
axes	37	290	90	391	388
bm	43	149	447	460	612
8736	80	29	73	133	931
falling	29	13	143	39	589
m*x	11	186	418	129	56
file_path	76	199	286	51	189
vs2008	96	45	5	650	634
passage	77	263	148	631	428
bi	35	238	326	187	308
22.06	15	256	64	364	265
splice	3	110	6	110	953
alone	74	232	246	209	472
df_old	3	110	475	155	984
tickmarks	37	290	166	706	76
])`)	52	19	303	50	640
day-of-week	3	56	299	354	67
.mul	44	47	181	700	827
vectors	71	64	185	150	988
rosenbrock	73	144	248	16	85
h5dump	86	222	329	260	383
multiindex.from_product	92	156	124	763	435
filepath_or_buffer	76	267	118	580	8
loop-based	82	180	341	573	29
np.triu_indices	19	42	296	13	659
v0.8.0	46	221	124	331	435
series.apply()	92	106	194	105	971
src=	84	144	102	607	427
8192	88	142	268	139	60
figure.add_subplot()	6	161	90	543	481
one-line	82	241	378	573	669
dmvianna	35	83	409	791	473
convert_to_r_dataframe	92	88	275	616	699
np.polyfit	79	275	332	363	620
pyzmq	83	206	178	197	564
loving	17	43	377	451	803
compensated	82	238	116	525	668
subfeature2	43	93	82	558	804
validity	10	227	317	457	970
appendix	29	173	234	302	142
+308	57	89	325	559	907
points^2	71	161	24	207	449
series2	44	2	260	33	827
series3	51	281	351	42	12
series.py	50	267	118	580	842
numpy.nan_to_num	87	89	424	770	203
np.logical_and()	19	214	198	113	135
useoffset	64	44	452	341	683
temp_array	52	28	461	471	622
exaggerated	27	151	106	631	421
printing	29	28	306	122	508
float64index	92	39	1	285	979
on_clicked	6	46	345	44	112
stereographic	33	176	282	617	908
offense	34	190	307	236	812
evidently	29	28	395	791	782
pd.get_dummies()	82	241	246	500	472
divided	77	266	148	428	62
multi-columns	3	156	182	354	125
astype	70	39	74	332	934
df1.reindex	44	134	260	700	827
k-space	33	292	20	430	547
orginal	3	146	19	673	673
casting=	63	83	389	715	686
divides	74	117	148	58	66
remap	74	232	37	110	629
-only	82	214	187	573	669
np.ceil	87	57	41	664	743
transients	77	292	20	430	547
explored	38	62	247	161	746
such	74	232	37	209	36
suck	17	241	143	500	118
dove	27	137	27	110	874
b^	11	234	4	215	99
stress	28	14	106	631	762
varieties	23	84	69	149	79
four	74	232	159	746	36
circuiting	82	241	341	537	812
excelfile	76	91	367	107	65
searchsorted	19	42	296	13	886
darkened	20	31	259	757	786
divide=	63	39	452	171	686
int64	70	100	74	332	522
www-data	30	15	313	184	831
joblib	55	85	71	349	431
ssh	83	84	376	184	831
unsolicited	34	190	307	97	328
noteworthy	10	227	17	691	999
inputfile.csv	33	110	135	712	298
ttk	81	5	110	130	584
course	10	232	246	209	472
width=1	60	155	240	495	12
ttl	3	29	294	94	868
ttf	30	122	134	350	862
f_prog	1	19	112	364	159
derive	74	232	37	744	868
thumb	10	227	17	200	215
itertools.repeat	1	148	112	232	726
1x20	71	64	268	519	684
decreases	77	266	485	574	668
939	76	199	58	424	523
938	47	224	273	424	306
decreased	88	266	485	574	668
931	15	211	162	133	888
930	12	181	488	133	175
937	47	224	30	424	523
instantly	22	187	108	361	248
csplines	61	31	443	631	453
pd.pivot_table	44	164	181	763	895
mass_range	1	275	418	305	292
subscribers	47	200	430	471	250
width*height	1	274	112	305	60
1.000	12	211	162	528	212
ide's	83	15	189	540	818
maintaining	74	232	182	548	526
full_code	44	72	82	265	708
usfederalholidaycalendar	80	163	254	723	333
win32	85	45	178	685	634
fabian	28	115	35	761	142
python-pandas	83	68	367	107	126
floods	88	197	73	574	217
16-byte	57	100	325	86	22
primarily	38	1	17	317	79
yvars	0	12	461	480	591
np.argsort()	19	175	78	524	9
#div	32	79	424	415	203
.fonts	30	122	478	159	181
predefined	74	232	37	746	868
klatt	55	1	29	317	564
two-fold	61	137	116	525	669
blt	13	170	244	165	174
melt()	92	156	78	763	971
mpl_toolkits.natgrid	83	206	178	197	854
._collapse	16	57	295	562	726
rnd_truck	52	0	263	290	855
formula	79	23	332	638	11
bla	32	67	223	509	567
xlim=	58	44	494	642	162
folowing	27	137	459	15	421
scipy.optimize.curve_fit	79	22	238	363	620
dask.dataframe	38	193	341	614	219
series.str.replace()	92	214	78	105	512
2007-11-01	43	72	93	265	708
quite	82	241	395	334	463
interoperate	38	1	29	756	564
besides	29	28	246	209	472
sortcontent	47	224	30	471	736
quits	90	187	108	771	248
unnamed	44	284	322	468	655
remainder	98	263	420	680	655
user-input	74	14	37	746	868
training	28	26	354	135	816
dunno	65	291	227	236	887
pool.map	0	85	448	349	807
programming	17	43	377	396	98
xlims	37	31	467	780	851
df.month	43	201	309	727	852
punt	10	43	17	500	999
separator	32	16	420	468	768
massive	88	50	100	537	246
get's	29	263	306	791	214
routes	99	14	114	429	616
timelines	61	136	175	626	758
matfile	43	72	202	265	622
__not__	10	109	331	732	906
jumbled	37	31	467	780	851
.format()	32	16	346	403	576
file's	86	222	329	85	519
.66	15	281	162	606	10
n_jobs=-1	0	26	293	135	807
reopen	34	190	3	702	915
specifically	74	232	246	209	36
spanish	32	16	305	482	898
custom	64	232	152	525	370
2880	80	29	77	77	931
thirdly	74	232	168	746	421
structured	75	99	10	663	843
2014-07-16	67	213	95	2	24
draft	27	137	459	15	421
realization	79	23	332	511	239
structures	38	50	426	663	843
williams	28	14	267	179	841
re-build	83	170	80	197	482
proving	17	62	88	659	327
artifact	10	231	395	335	303
ridiculous	82	241	395	334	327
komodo	83	15	178	540	818
rot90	40	101	140	231	908
csv-files	86	91	367	107	519
distill	34	190	307	420	579
numpy.column_stack	19	294	296	278	470
recieved	29	28	272	412	473
resamples	80	29	148	77	347
ndarray.sort()	55	174	422	90	761
sequencematcher	92	193	78	98	382
10-12	88	197	84	80	217
san	78	150	132	479	604
sam	78	115	252	20	423
10-15	88	197	73	574	217
pandas.tseries.offsets	80	35	245	560	333
obfuscates	10	118	158	590	215
sad	17	291	258	236	345
woah	65	291	274	205	767
say	74	232	246	209	36
sas	86	1	367	107	866
saw	65	28	258	791	874
y_bytearray	11	52	4	770	221
sat	80	163	132	723	897
[[8	12	279	162	364	265
list-of-lists	75	12	455	776	903
unsuitable	10	99	386	663	843
aside	10	231	246	500	215
#6	72	130	162	593	306
note	74	117	306	209	305
dataregression	63	224	68	290	881
csr_matrix	16	94	333	455	788
nota	19	180	295	209	512
[[(	52	0	180	364	371
wanting	10	232	246	500	999
#4	82	137	214	441	308
handing	29	28	246	601	141
46.7	15	211	297	364	265
[[[	52	19	256	364	640
angles=	33	102	240	319	285
knew	65	291	258	236	345
numpy.reshape	19	294	296	453	280
incrementalpca	46	26	293	135	412
now-deleted	35	238	187	187	308
remarks	68	190	116	97	328
pages	23	254	234	302	565
peice	29	28	459	122	473
omp_num_threads=1	88	30	480	785	431
sale	78	56	445	235	897
defeating	22	184	153	691	122
rewiring	28	14	114	710	616
testcase	81	88	110	739	183
30,000	88	160	220	80	54
salt	78	250	163	463	798
accented	32	16	134	131	898
pserve	90	187	108	184	248
numpy.mgrid	19	294	296	291	601
datetime	80	35	245	781	920
bytebuffer	75	64	10	519	684
os.path	81	15	189	739	889
figure.py	50	145	225	27	927
slot	74	29	365	77	214
slow	82	180	100	497	463
b.data	1	220	198	476	985
mydata	47	134	349	155	622
%debug	81	15	189	226	889
multiply()	16	178	462	113	800
mydate	43	273	309	727	852
np.convolve()	79	275	295	285	547
tears	17	13	143	39	589
going	17	13	227	39	196
uppermost	37	31	443	191	673
d.flat	1	19	112	284	981
sum_j	11	186	25	683	56
dissimilar	3	193	185	98	347
digitize	19	42	63	31	780
embeds	90	69	46	380	384
ctypedef	70	204	29	790	64
streak	98	146	148	191	762
outlet	17	13	250	39	214
keys=	44	164	181	700	895
activetcl	83	206	244	165	482
0%-100%	37	281	114	10	995
prime	89	180	100	537	507
artist	6	161	90	543	109
raveling	40	294	10	231	782
basicaly	29	28	175	626	473
borrow	38	137	291	525	382
absurdly	82	241	100	497	463
roger	35	207	371	205	336
pd.timegrouper	44	149	447	460	419
macintosh	83	84	376	184	467
unappealing	10	1	17	317	354
where	74	232	37	746	868
libpng12-dev	13	170	50	104	174
elemets	71	64	127	98	953
10100.0000	15	157	64	296	837
set_dashes()	64	161	208	543	481
linalg.solve	16	94	462	782	800
re-installing	13	128	5	104	485
top-level	81	237	397	739	183
no-one	34	190	307	233	208
linewidth	20	119	24	764	664
jumped	65	291	258	39	345
x2=	60	194	173	65	221
python3-tk	13	170	50	104	485
fig.axes	6	44	90	485	543
x20	72	186	25	139	756
jobs	23	85	71	349	431
non-numpy	82	241	455	756	29
suppresses	29	231	389	716	215
10.3	85	30	211	685	858
gratefully	68	207	465	432	343
spare	17	283	100	432	118
spark	23	85	119	370	126
_string_to_bool	63	88	283	553	584
figure.facecolor	58	44	452	764	664
x2d	52	0	273	284	19
laplace	79	292	428	487	759
personal	10	1	69	321	275
10.8	85	276	233	198	858
r0_array	72	275	25	129	292
setters	64	161	390	543	386
work.stock	52	52	198	770	985
scipy.sparse.dok_matrix	9	109	333	455	788
x_max	60	194	418	65	872
.value_counts()	43	164	181	700	419
1-row	71	64	154	738	95
ignore=	76	199	30	283	736
rsparid	3	110	6	587	125
single-version-externally-managed	50	145	133	138	30
nonblocking	90	46	345	599	356
boat	32	16	420	482	475
numpy.tensordot	19	294	295	231	512
cities	78	150	132	479	604
stretch	37	31	467	207	449
tranpose	75	214	10	231	782
15ms	88	197	55	337	89
oddity	29	231	88	173	874
indexslice	92	104	23	733	154
cosine	16	292	185	150	547
capind	72	130	273	174	792
reflective	28	151	106	511	531
np.nan_to_num()	75	185	424	414	203
np.nextafter	57	89	269	141	221
persist	22	171	388	190	209
grayscale	84	195	51	592	427
connections	99	85	294	329	929
observe	29	231	306	173	905
dem_filename_list	47	106	461	471	622
spillover	37	281	443	191	358
regimes	79	23	106	631	953
new_z	60	102	418	193	910
new_x	52	102	418	284	910
new_y	52	102	418	284	910
invoking	22	171	397	361	473
735881.0	60	4	469	516	254
new_a	52	19	263	284	855
region	99	288	282	212	563
mesh.x	52	220	198	770	714
fork()	22	61	71	349	431
python27\scripts	30	261	486	138	204
blas	96	174	408	90	729
canon	84	192	365	676	946
blah	47	224	30	424	736
regularity	77	29	339	77	340
anim	6	46	345	44	356
fama	28	17	351	638	385
numpy.count_nonzero	87	224	295	139	60
multi-page	73	125	248	276	304
scientifically	77	151	106	783	227
helpfully	37	13	443	780	851
chained-indexing	10	104	158	733	154
seberg's	35	238	187	187	418
44100	77	192	365	676	227
set_option	92	68	452	171	290
3.6gb	88	283	373	549	236
_at	29	28	306	791	905
matrix_multiply	16	178	462	150	726
reverts	80	35	245	781	920
births	78	134	93	204	832
timepoint	77	29	484	182	210
_data	9	161	383	616	477
periods=4	67	201	309	2	24
_date	44	134	181	204	895
colorblind	10	151	467	321	625
=8	71	186	207	683	306
index=true	76	199	322	217	824
cgcontextref	63	83	389	715	39
data.frames	3	227	6	703	392
216	12	279	488	751	465
217	12	267	58	111	132
214	12	78	52	133	272
215	12	256	236	751	272
212	12	256	162	751	432
213	12	279	488	751	465
210	12	279	488	111	465
211	60	139	18	324	543
pyh5	38	1	291	317	79
randomforest	28	26	354	135	816
modifiable	9	237	397	436	864
218	15	206	488	111	380
219	12	256	488	196	432
gdb	90	15	108	540	383
sepalwidth	3	93	65	390	984
scrape	23	116	27	370	127
np.allclose()	79	227	317	457	907
lib2	83	171	108	361	874
gdk	73	38	248	635	810
2d-matrix	40	214	154	98	382
deceiving	29	231	395	335	327
\infty	60	194	269	686	221
fig.text	6	46	90	403	890
instrument	77	29	77	182	194
273.15	72	102	418	129	591
coded	74	232	459	209	36
relavent	27	263	305	15	472
im2col	38	101	125	703	392
data.plot	51	136	195	272	12
unedited	46	221	124	604	435
backend_qt4agg.py	9	171	397	436	370
nocue	77	281	114	191	563
pandas.read_clipboard()	86	134	202	183	188
libs	13	128	5	197	482
219812	1	274	112	305	436
mydict	44	12	461	776	903
matlib	16	94	462	782	800
correlated	79	23	185	638	11
dleng	52	19	263	364	265
symbols_list	43	72	93	204	987
stranger	29	28	108	361	55
1e-20	57	89	485	574	62
blckknght	35	207	371	205	336
_complex	70	204	325	790	64
discarded	74	171	306	791	673
glob.glob	76	199	286	283	736
lib\	50	145	118	138	204
colon	32	104	420	468	595
stationary	77	14	267	710	942
datatime	80	35	245	781	410
no-use-wheel	13	170	50	481	174
;b	52	19	41	284	726
;d	47	115	390	703	392
pyplot.contour	33	176	282	617	725
min_dates	70	99	421	332	979
;o	47	224	180	424	588
whould	65	291	246	236	196
left_on	44	2	253	427	176
noob	17	43	377	451	98
totd	65	291	258	407	887
set_xticks()	58	44	166	341	683
noon	80	29	254	723	931
bitshift	82	50	341	756	463
ddt	52	0	263	290	100
def()	0	187	140	684	231
deallocation	22	61	153	358	282
holdings.groupby	43	47	231	71	593
python3.x	9	12	455	480	932
23rd	80	163	254	723	72
hand-written	55	180	55	537	246
ddd	78	53	82	463	569
pandas.dataframe.merge	19	214	78	105	512
scientific	38	1	80	317	898
power	77	292	20	430	62
;;	15	256	236	514	980
pre-sort	3	50	497	534	953
msys	96	206	408	197	729
12.600000	15	211	236	514	980
;(	65	291	274	236	739
stone	17	87	377	396	275
favorite	34	6	291	525	118
hierarchal	3	232	6	354	125
tumor	3	110	6	746	293
stipulations	37	232	162	207	668
neighbor	99	288	11	293	716
unpacks	0	106	152	58	638
non-transparent	20	31	24	757	786
content-type	73	125	248	477	304
meshgrids	75	294	10	565	382
scipy.optimize.fsolve()	79	214	125	566	13
off-line	23	14	294	429	79
-size	47	142	162	305	60
.........	67	78	52	2	272
tz_convert	92	285	86	781	920
wade	27	190	305	420	579
set_x	6	44	90	543	190
today_date	52	273	309	727	622
broadcast_arrays	19	294	296	291	601
futile	17	62	272	161	746
italic	73	166	134	131	862
ds1	98	148	206	73	714
typecasting	70	99	389	788	979
newwords	3	110	65	390	965
to_rgba	63	83	283	715	311
complete	27	293	403	420	579
furthest	37	31	443	780	851
ctrl-c	90	187	108	540	248
random.random()	93	123	193	628	361
event.y	0	46	345	44	112
event.x	33	102	32	44	112
ctrl-d	90	187	108	540	248
elimination	28	26	354	135	531
technologies	23	1	69	321	79
ctrl-w	90	187	108	624	248
viewport	37	31	443	207	449
darken	20	195	51	757	786
set_1	3	297	280	776	903
set_2	3	297	280	776	903
somearray	19	57	296	524	280
set_*	6	161	90	543	109
18:36	67	213	95	185	51
dependents	98	146	317	587	509
categorial	3	26	168	135	816
eigenvector	16	94	462	782	800
darker	20	119	259	757	786
linear-time	89	50	341	497	122
uid	78	93	243	390	832
exhausted	22	62	143	361	746
collections.py	50	145	118	483	927
accents	32	16	190	477	444
awry	29	13	143	659	473
*sh	63	83	180	715	39
uin	1	274	112	305	159
timestart	98	258	243	558	377
objective-c	55	1	80	158	564
x_np	1	274	112	305	726
interchangable	10	231	17	200	999
figure-level	64	161	90	543	481
logisticregression	79	26	354	135	816
googl	78	116	430	581	423
mode.chained_assignment	63	39	452	171	686
reverse-engineer	29	28	227	209	472
graduate	28	1	377	396	275
1111	12	78	52	133	272
1110	12	279	488	751	132
unfiltered	77	292	20	430	227
someones	34	190	307	590	208
isins	3	93	243	390	984
standardize	3	232	471	98	141
\xb0	32	16	190	477	261
indice_90_percent	44	134	260	155	622
biogo	55	174	35	302	142
forgot	65	291	258	407	887
row_index	52	80	23	733	853
ising	28	14	267	710	841
plt.clf	6	46	345	599	356
wxwidgets	83	38	178	635	810
acids	78	286	163	425	798
hello	47	115	223	20	423
c_normalized	52	0	180	156	19
nelson	28	227	317	457	67
string.py	30	162	478	247	344
splicing	40	64	10	231	650
20130827	52	19	263	284	622
consider	74	137	246	525	36
dict()	3	12	455	776	903
_tkinter.tclerror	90	187	108	184	248
rolling_sum()	70	99	74	601	979
numpy.test()	13	170	50	199	443
trigonometric	79	10	324	744	610
gdbm	29	206	178	202	473
strips	32	263	420	58	148
hunting	17	62	88	39	118
foo.readline()	12	279	263	364	265
myfig.png	73	144	18	16	721
smile	65	291	250	429	303
128x128	71	195	213	674	95
a.append	1	224	461	471	881
serialise	86	99	426	663	843
specialised	38	214	291	756	651
1,500	12	279	488	751	149
tight_layout=true	58	139	18	324	162
strang	28	1	80	396	275
strand	78	286	243	425	798
tax_id	70	99	93	601	979
_n_	71	142	268	139	488
picloud	23	84	71	670	431
laying	17	136	467	78	327
refcounting	55	61	153	358	282
1024,102	1	274	173	305	159
adjust	37	290	467	207	449
pygal	83	6	278	158	450
display.width	58	243	452	171	290
105x105	71	195	51	674	744
np.load	86	222	382	102	820
15minutes	80	29	73	77	931
chocking	29	13	143	361	473
featureunion	16	26	168	135	816
odd-length	82	241	10	231	812
startdate	80	258	26	558	377
position-based	92	104	23	733	92
richard	35	238	326	20	336
resume	90	187	108	624	248
centers	99	288	185	646	744
reshape2	38	214	125	703	392
succinct	82	241	378	573	29
tslib	81	88	110	739	584
matplotlib.dates.num2date	80	35	245	560	920
method	92	214	140	684	382
revealing	10	190	291	321	328
cubehelix	20	119	320	137	846
org-mode	61	31	175	173	473
2760	48	274	268	305	159
invalidoperation	63	83	389	715	39
exasolution	83	68	119	478	126
sklearn.ensemble	81	88	110	739	183
concluding	29	28	306	122	568
2014-03-03	67	260	12	2	24
b2c	67	17	223	4	567
coriolis	33	151	20	566	725
reshaped	71	64	268	519	981
introductory	34	254	234	302	565
re-invent	82	1	80	500	118
brutal	29	62	88	458	874
df2=	43	134	68	290	827
reshapes	40	294	154	231	678
infrequently	22	146	388	534	509
pstricks	73	125	248	131	304
social	28	14	267	425	866
would've	65	291	258	791	874
gcc-xml	27	137	116	432	328
240	12	279	488	528	175
day's	80	56	299	723	67
via	74	171	152	110	854
shorthand	92	214	378	200	650
janne	35	207	326	187	336
tokenizer	32	16	420	482	768
integrator	79	22	324	566	13
lsoda	79	22	324	566	13
vin	47	130	243	174	984
np.intersect1d	19	42	198	13	886
vim	83	15	189	540	818
tokenized	3	286	163	253	798
vis	23	192	365	676	257
np.logical_or	87	52	198	113	985
viz	74	232	135	617	908
shape_id	52	148	497	534	622
decrement	22	61	485	190	629
select	74	232	37	746	868
catch-all	9	99	331	594	843
firstset	60	281	351	42	385
rdenes	65	238	258	407	887
kick	17	13	143	39	118
new_york	80	285	323	742	765
pd.offsets.day	87	201	180	215	99
pandaic	82	241	378	573	29
.dropna()	44	47	181	181	827
emission	77	14	114	710	841
n_par	88	142	220	139	60
typemaps	70	204	29	790	64
thaks	35	207	371	205	767
ymean	60	155	240	495	910
phillip	35	238	326	187	336
np.where()	19	42	296	13	512
rmsprop	79	23	354	638	531
list-like	92	99	186	641	676
lfilter	53	101	238	720	396
converts	74	117	152	58	141
male	78	200	252	584	604
xvalues	60	194	269	65	162
to_char	80	35	245	125	410
x's	98	281	454	646	995
latin-1	32	16	190	477	261
tabular	86	222	426	747	843
10000+	88	160	100	80	54
3065	47	224	461	424	883
1.csv	76	199	30	283	754
tmp_file	90	15	108	540	383
mu+sd	51	136	349	626	847
path.py	83	206	178	202	368
whitespaces	32	16	420	468	768
freshly	83	206	211	197	467
-215	63	244	283	532	323
arrowprops	58	138	265	408	224
plant	72	250	114	623	809
plans	34	173	359	321	79
\beta	32	166	134	131	898
plane	33	176	282	617	908
conveniences	38	104	291	200	79
periodindex	92	35	245	781	333
un-binned	77	23	63	511	239
bitwise-and	75	89	198	113	789
computer's	22	182	373	549	236
my_data	1	134	30	283	736
argparse	81	15	189	560	383
github	46	173	359	604	208
countour	61	136	175	626	951
rank-3	40	64	10	519	981
rank-2	16	64	462	150	988
rank-1	75	9	421	519	981
3*2	71	274	268	738	95
numpy.f2py	81	88	110	739	183
broadcasting	19	294	154	291	601
super-useful	34	173	359	604	208
davep	35	238	326	187	336
30%	88	266	22	337	89
python-matplotlib	13	128	50	104	482
mode=	76	249	286	16	413
clarifications	68	190	307	702	216
blosc	86	68	379	217	820
reminded	65	291	258	236	345
origin_lon	47	275	25	174	881
cov=true	79	275	226	641	13
attitude	17	190	307	500	118
6-10	77	29	73	22	931
498	12	279	488	751	432
499	52	19	162	528	855
vec1	1	55	201	562	726
all_	82	151	106	631	353
496	12	267	488	751	132
491	52	19	263	284	855
492	52	19	263	364	265
scipy.sparse.dia_matrix	38	6	125	455	788
rapidly	40	50	100	497	246
trace-back	27	293	305	420	579
ipynotebook	83	206	178	685	380
blurring	84	230	428	166	353
ruining	10	13	227	548	526
mealarray	48	106	421	471	681
aframes()	0	106	208	684	231
read-in	86	192	329	601	519
it-	38	62	274	458	874
secondarily	44	193	82	31	832
pathologically	10	151	106	744	970
ewma's	38	193	291	761	79
invalid=	63	39	389	171	686
it1	11	55	295	562	726
designation	65	118	395	788	812
coping	22	283	100	534	387
all-	55	174	69	461	637
loosely	34	254	35	302	142
number-crunching	17	62	100	537	275
labeling	37	290	443	706	76
99.93779431	15	157	64	296	837
warped	33	176	282	617	563
neccessary	10	241	80	500	327
all=	63	39	389	171	686
low-dimensional	71	64	10	519	684
downside	82	241	100	497	305
32768	12	279	131	528	175
initialised	9	106	386	436	359
librairies	55	1	69	197	564
contiguous	40	184	153	453	122
is_null	52	72	68	733	154
32767	57	100	131	141	22
blues	20	119	259	757	846
bluer	20	119	259	240	786
really	10	28	227	500	472
pullback	77	56	148	520	347
ftw	47	115	461	145	260
vectorial	61	125	128	276	625
col_list	52	134	260	290	827
driver	86	68	119	478	126
jezrael	35	207	371	205	767
np.asanyarray	70	59	74	332	681
urllib.urlretrieve	81	5	170	130	567
annotated	61	31	175	780	276
fontsize=20	60	155	240	495	890
retained	74	171	388	548	673
lieu	92	214	17	105	382
alphachannel3d	11	0	180	215	288
yticks	58	290	166	706	184
do't	74	28	246	209	472
clump	99	288	454	646	744
exhibited	46	231	124	202	905
major	37	290	166	706	76
forwards	40	13	424	414	363
6.00	15	200	162	550	110
4431	1	118	268	124	981
fluxes	77	281	114	623	210
histogrammed	33	281	97	191	358
differ	74	232	37	746	36
multi-dim	75	294	10	231	782
fuller	27	137	116	420	328
algo1	0	204	295	44	8
sublimetext3	83	206	178	540	380
__array_priority__	9	109	331	55	300
molecular	28	14	267	710	841
infered	32	263	420	468	475
c_array	52	19	263	364	855
pname	1	224	112	231	881
streamplots	61	136	175	158	847
spacings	37	290	339	631	340
unrealistic	10	137	106	525	812
serializable	63	99	275	616	286
vocab	10	297	163	482	798
prebuilt	13	128	5	797	391
numpy.loadtxt	76	54	382	260	698
multiplicate	28	26	354	94	36
col_start	52	148	273	471	77
flavor_score	78	193	82	204	832
maintainability	10	1	479	321	354
0.015	98	194	269	606	212
datelike	92	35	245	781	934
locals()	9	237	397	776	864
getopenfilenames	90	187	108	361	248
containig	74	110	329	122	519
numpy.version.version	46	221	151	199	443
incidentally	29	231	246	791	472
size=100000	88	142	173	50	393
plt.pcolormesh	25	102	208	193	570
scipy.optimize.fmin	79	22	324	566	13
]]])	15	211	263	364	265
py2exe	83	261	486	197	368
vulnerabilities	23	68	69	500	215
restore_region	6	161	383	616	477
hyperplanes	72	132	127	638	988
accumulative	98	146	148	98	347
directives	55	174	422	90	455
bouncing	90	14	56	710	180
brace	32	16	420	403	768
json.loads	76	199	275	183	736
utf-32	76	16	190	477	444
perfomance	88	180	55	537	246
15:00	67	260	12	372	958
unused	22	263	388	190	655
ndimage.find_objects	99	230	125	166	854
polylist	99	161	280	73	684
colliding	17	14	88	710	589
flann.knnmatch	48	224	180	50	159
ax1.twinx()	58	139	494	418	543
landsat	84	195	213	674	353
in-built	64	6	125	573	296
pl.scatter	0	275	140	684	910
artistic	10	151	106	631	303
compare_images	0	275	295	566	292
bin_str	86	222	329	260	508
arr.transpose	1	19	41	677	99
file2.txt	76	16	30	477	754
superceded	38	1	80	317	564
stepwise	74	56	148	98	347
button_release_event	6	161	345	44	112
autocorr	72	275	140	129	292
sample.csv	76	199	30	283	754
df.get_values()	75	59	295	231	782
left_freq2_index	11	234	4	215	56
9-12-25	67	213	95	185	51
occuring	29	146	306	791	568
beams	77	14	114	623	841
fig.tight_layout	58	138	495	642	299
adheres	38	214	125	200	382
goog.index	3	35	245	781	920
e712	10	227	317	457	812
0:00	67	260	12	530	958
df1.to_csv	76	199	286	283	413
dsms	35	238	326	187	308
disregarding	98	146	317	414	509
quotient	98	266	148	98	62
river	20	176	132	398	563
approaching	17	43	377	451	725
manger	13	170	80	197	482
reindexes	92	156	65	354	125
creator	38	1	35	317	142
tsdata	29	28	306	791	457
signature=signature	11	186	25	562	756
reindexed	3	156	65	155	154
manged	29	28	306	791	473
.copy	48	184	158	453	280
led	29	62	88	161	874
1-element	75	106	421	471	681
#	47	224	58	424	588
sql-style	3	2	253	33	125
movie	23	125	128	429	107
orient=	44	2	253	217	322
rejecting	99	151	339	631	340
4096x4096	88	160	213	674	54
deserialization	86	222	426	611	820
respectively	74	281	162	746	36
europe	80	285	323	742	765
blow	22	13	100	458	50
announcement	46	254	35	302	565
wx.frame	6	69	46	380	384
disallow	10	231	17	716	215
a.iloc	52	72	68	733	154
7.3f	32	205	346	177	576
sum()	92	193	78	105	121
interface	38	1	390	732	389
xlab	64	161	226	641	676
improved	82	180	116	537	246
xgboost	28	26	354	135	816
numpydoc	86	6	29	91	564
improves	82	180	341	537	246
data_train	47	134	349	181	827
pdf	73	125	248	276	304
pde	28	10	324	487	610
approve	65	190	3	702	915
pdb	81	15	305	540	383
load	86	222	329	110	519
wim's	35	238	187	187	308
markdown	73	125	248	276	127
pendulum	79	10	155	487	942
4's	98	146	454	796	984
loan	78	116	445	581	67
ubuntu	85	276	233	393	858
re-paste	27	293	305	420	579
parametrization	61	10	282	487	762
bject	70	59	74	332	681
noncontiguous	75	64	10	231	650
-loop	19	12	497	480	68
list()	19	12	455	480	806
blog	34	254	234	302	565
devil	34	254	234	302	565
])")	52	19	263	284	855
nx.draw_circular	60	275	280	129	162
monthly	80	56	299	77	67
intricacies	17	43	377	321	354
numpy.sign	19	42	198	13	512
azimuthal	33	176	135	617	908
reshapeerror	63	83	49	715	39
tensorflow	28	26	354	135	816
samples	77	29	114	511	616
max()	92	193	78	673	121
.info	9	109	331	594	699
qtableview	3	232	386	110	161
.transpose()	1	57	41	232	280
mlb	43	200	231	265	708
numpy.random.randn()	93	227	193	628	905
handling	38	231	17	716	568
reinstalled	13	128	211	104	485
rds	86	68	119	478	126
mle	79	23	332	511	531
df_train	43	47	68	265	708
cf	74	117	152	746	638
mlr	60	155	240	495	285
forgetting	65	291	258	236	345
optimization	28	10	324	566	13
evaluating	79	10	324	744	231
5:00	67	260	12	372	958
np.mean	87	55	121	673	608
robin	35	207	371	205	336
appengine	30	162	80	381	960
.intersection	47	130	461	174	591
ndimage.interpolation.zoom	53	101	125	720	472
auto-completion	30	15	108	361	383
<3	52	52	180	290	437
<>	47	224	487	424	442
<<	11	234	4	7	60
<=	87	52	180	290	437
pkg_resources	81	88	110	553	584
centennial	15	115	162	133	737
triple	75	297	497	139	756
beautifully	35	207	274	205	767
df_percent.index	80	201	309	727	24
<-	65	173	246	97	196
24bit	84	192	123	592	946
chase	17	62	250	39	180
bollinger	77	116	77	10	347
rdd	86	68	119	370	126
barnes	35	115	409	20	336
shorten	82	137	378	573	29
u_n	11	186	25	683	56
shorter	82	241	378	573	29
reachable	23	84	80	158	127
virtually	40	171	17	691	305
string.format	92	35	275	183	699
nextafter	63	83	383	616	477
mollview	64	119	320	49	296
np.object	70	59	74	332	681
v0.13.0	46	221	124	331	435
unlabeled	3	26	354	135	816
soil_type	52	19	162	133	855
81.75	11	194	4	520	437
viewing	73	125	248	122	304
unpickle	22	85	71	349	820
businesshour	80	35	245	77	333
11991	48	274	180	172	159
p.map	0	224	295	684	231
densify	16	94	333	150	788
find_peaks	47	134	461	348	260
bookkeeping	55	50	341	537	246
picky	10	43	395	200	803
msvcp90.dll	50	145	118	138	204
a=0	72	186	25	174	306
picks	74	117	37	58	214
fontlist.cache	30	122	478	350	181
non-optimal	82	50	341	497	122
concats	3	156	6	354	125
11:24	12	279	319	111	465
a.ctypes.data	70	59	74	332	522
xserver	90	84	376	184	831
json_normalize	92	134	275	183	322
oposite	77	266	22	574	668
project1	81	162	110	247	584
50.0	15	194	61	606	10
unto	77	110	454	623	762
project2	43	72	68	265	708
pre-release	46	221	124	202	435
glitches	77	13	128	429	353
surprises	10	231	395	334	327
en_us.utf-8	30	5	452	199	870
signals	77	292	20	430	547
canvas.print_figure	6	144	18	16	721
checkbuttons	90	69	46	380	384
left-hand	40	13	443	661	363
input	74	232	140	122	36
submissions	77	56	148	638	11
reverted	46	221	151	681	284
surprised	17	43	395	236	803
datetime.time	80	35	245	727	31
1090	12	267	488	111	132
1092	12	267	58	111	132
quest	68	190	116	432	328
enumerable	74	297	37	746	868
projects	38	1	69	321	275
75th	98	281	287	10	358
plot_data	0	155	295	684	12
0.98631	15	157	64	296	837
imposed	28	151	106	128	970
plot_date	51	44	208	560	875
__array__	9	109	331	594	300
main_df	44	134	65	155	965
utf-16-le	76	199	286	477	413
to_list	92	99	275	616	699
-30	33	194	269	65	212
consensus	34	173	359	604	208
communications	28	14	267	710	841
signal1	60	194	418	65	591
imposes	10	151	17	525	305
stylish	10	1	390	334	354
__init__.pyc	50	259	277	303	927
pertaining	29	232	272	161	746
.__doc__	9	109	331	594	386
oups	65	291	258	407	887
.where()	92	104	78	105	154
ogrisel	35	238	116	187	336
--------------------	47	224	162	550	888
pandas.dataframe.from_csv	76	199	322	51	698
bygroup	3	156	6	354	125
newdata	52	134	461	471	622
single-channel	84	195	123	592	427
inlining	55	180	422	537	219
dictates	75	106	317	746	509
cholm	16	94	462	782	800
2014-05-30	80	258	254	796	377
nowhere	29	28	410	161	473
single-row	75	64	10	519	684
wget	13	261	486	797	368
dictated	74	232	386	746	868
aswell	61	28	116	209	36
data.size	1	57	41	50	60
1,200	98	142	220	528	106
1,201	67	260	95	133	272
zip	47	12	461	480	806
coexist	38	232	159	732	370
verbose-debug	30	15	189	481	383
mmap_mode=	76	249	286	102	413
pre-process	86	263	329	468	953
cmap	25	119	320	49	845
nnls	16	94	462	782	800
cmax	37	138	494	207	299
2-tuple	75	106	206	73	77
repair	29	171	80	190	467
12,000	88	160	220	80	54
80.0	12	142	173	528	106
min_periods=0	43	164	181	290	827
recreate	27	293	403	420	579
servers	23	84	376	184	467
appropriate	74	232	246	209	36
troubleshooting	68	254	234	716	746
usetex	73	166	134	91	862
scipy.optimize	79	22	324	566	13
sneaky	65	291	258	407	887
spending	17	62	88	39	180
submit	34	173	359	604	208
irvalue	60	44	173	65	12
map_coordinates	53	101	238	720	396
doen't	75	204	29	790	64
:	29	137	459	15	421
3600	11	234	4	664	743
subgraph	99	288	443	646	329
atop	61	176	282	212	908
doh	65	291	258	407	887
atol	57	89	201	559	907
atom	47	110	280	390	764
atof	47	224	295	196	881
coderunner	83	206	178	540	467
url_for	73	144	102	16	721
suptitle()	6	139	90	324	543
arbitrary_function	82	180	497	537	219
bins=range	60	123	173	557	780
weibull	79	23	332	511	239
latlng	47	110	93	463	475
verification	27	227	116	457	939
doc	64	254	234	302	565
continuously	22	187	294	94	257
alarm	65	185	452	791	887
matplotlib.dates.dateformatter	64	205	346	125	879
reconcile	74	232	175	122	654
relevent	29	171	27	15	421
likewise	74	232	246	209	36
package	83	206	80	197	564
scipy.cluster.hierarchy.linkage	79	26	185	293	716
skimming	34	254	234	97	142
ydiff	52	0	263	284	288
c_data	47	224	162	424	588
multipliying	82	214	154	756	62
invalid	63	83	283	715	311
occasional	23	29	17	94	509
np.broadcast_arrays	19	294	296	291	470
parakeet	55	180	422	337	219
jcc	38	1	29	756	564
vectorized	82	214	341	573	219
elements	75	64	127	587	77
df.apply	87	55	493	76	593
beginnings	29	137	459	15	36
gene_id	78	93	82	390	965
np.char.mod	32	205	346	177	576
ago	17	62	88	233	131
date_time	44	2	26	558	987
agg	73	38	248	635	235
age	78	150	445	584	604
ironpkg	83	206	80	197	467
feature_value	43	200	223	204	832
consumes	88	283	373	549	387
pre-requisites	83	206	5	197	467
opposing	98	146	317	796	984
plt.margins	58	138	495	642	299
datingtestset2.txt	86	110	27	15	519
oracle	86	68	119	478	126
2014-03-31	80	258	254	723	377
numpy-function	10	214	295	684	782
15-min	80	56	299	77	931
partial	74	137	459	744	382
illustrates	27	137	403	15	421
ufuncs	19	214	422	756	761
laziness	17	43	377	396	812
existing	74	232	386	190	629
illustrated	27	137	459	15	421
semicolons	32	16	420	468	768
unmatched	32	263	420	468	655
quickhull	99	288	11	293	716
reallocating	66	50	153	358	387
delegating	9	204	337	790	64
add_axis	19	19	295	684	622
symbol_list	3	110	27	110	519
2013-12-22	80	258	145	2	645
concerned	10	43	17	500	803
~1%	88	283	100	574	54
0.17.0	46	221	151	331	621
0.17.1	46	221	151	331	621
dvips	73	166	134	91	862
postings	17	62	247	161	746
manipulates	22	184	153	691	122
continues	22	187	108	361	214
isomorphism	28	151	106	214	970
s.replace	43	51	487	177	764
continued	29	62	250	161	746
timely	23	187	294	110	214
.99	46	221	124	202	435
plotter.py	50	267	118	734	679
lasso.alpha_	79	23	332	638	11
they've	34	171	35	233	874
.95	60	194	4	606	10
l2_norm	12	19	263	111	465
pout	11	275	25	562	221
dish_name	43	52	68	693	437
on-topic	34	173	307	709	216
dimitris	35	207	371	205	336
yvalue	60	155	240	11	285
linalg.eig	16	94	462	782	800
edgecolor	20	119	24	49	664
visuals	23	6	377	158	625
odr	79	23	332	363	11
-400	60	194	173	65	393
alphanumeric	32	16	420	601	768
enclosed	32	31	420	403	768
1}^n	72	186	25	683	306
odo	86	68	119	478	126
n_a	71	142	268	305	60
.xml	86	110	329	107	519
odd	29	231	395	335	473
ode	79	10	324	487	610
cobyla	79	22	324	566	13
heatmap	51	136	175	22	847
half-hourly	80	29	299	77	931
deviceid	78	56	82	204	832
numpy.exp()	16	214	201	756	782
.first()	44	164	181	700	419
gathered	23	192	365	676	257
ubunto	83	206	306	122	467
delivering	3	137	116	663	953
octave	16	101	125	703	392
one-at-a-time	74	50	497	534	68
consideration	74	232	116	525	328
deduced	29	28	152	791	638
to_stata	92	99	275	105	699
great	68	207	274	205	767
ctr	80	258	430	581	377
receive	63	83	306	595	39
involved	10	231	17	334	246
y_max	60	194	418	65	872
titanic	23	71	354	179	262
cte	0	224	295	684	231
rdf	86	134	275	183	666
y-position	37	290	443	207	449
defeat	82	50	341	497	68
popcorn	43	200	231	204	708
opinion	10	241	116	590	999
.upper()	43	51	487	151	244
weekends	80	163	254	591	897
involves	82	117	341	58	305
firefox	73	84	489	72	818
cbrt	38	214	125	744	382
.toarray()	16	94	333	36	788
remove()	6	161	345	543	481
equals	98	146	317	746	868
usrecq	98	258	26	796	377
tools	38	1	278	317	450
ransac	99	230	428	166	353
celery	23	85	71	349	431
andreas	34	238	35	233	142
obser	98	148	273	141	77
certificate	63	244	283	553	39
minval	87	52	4	43	714
illegal	63	83	283	715	39
testing.csv	76	199	30	283	754
duplicate	3	173	182	587	655
bottom-left	33	31	287	191	964
luminosity	84	195	51	137	353
doubling	22	283	153	548	387
result.to_csv	76	199	286	16	413
dataframe.boxplot()	64	136	140	684	847
reloads	90	187	108	184	248
carrying	74	13	37	663	868
aapl_old	44	93	65	33	965
gladly	68	190	465	432	343
dicing	40	50	291	200	650
c2065	63	244	283	24	323
structs	38	204	29	790	843
high	77	266	106	574	668
balls	28	14	114	710	616
animals	78	93	445	479	604
oi	78	258	299	796	750
portability	55	1	69	636	246
this	29	28	227	209	472
dataframe.cov	16	180	55	337	782
og	47	52	162	424	437
thin	61	31	467	212	276
fulfill	3	232	317	587	602
1.47	11	234	242	664	743
1.42	60	206	306	681	380
weaker	20	151	106	757	303
purposes	38	137	17	525	79
pieces	27	137	159	458	953
d.read_csv	76	199	286	51	189
pieced	17	62	272	161	746
x-data	37	290	443	706	388
font_manager.py	50	145	118	483	927
non-interactive	73	38	248	635	810
destroying	22	171	388	548	526
pd.multiindex.from_product()	92	156	275	105	125
200mb	88	182	373	342	236
np.sin	11	55	201	664	292
oz	65	207	371	205	345
overridden	9	109	331	594	370
singular	16	94	462	782	800
tied	74	232	37	746	868
2x1	71	64	268	738	95
pigs	78	200	252	133	272
preferring	82	241	341	500	215
tier	22	283	80	361	236
ties	3	146	148	587	509
2x3	71	64	268	738	95
2x2	71	64	268	738	95
os	85	276	233	198	858
redundant	40	263	182	548	655
one-letter	32	286	163	482	798
naxis	52	148	273	284	77
may_share_memory	19	220	17	457	135
2x6	71	64	268	738	95
retval	48	219	102	401	427
2014-01-31	80	35	26	2	410
secon	98	64	454	796	984
erasing	22	263	388	190	526
producer	22	85	71	349	431
produces	74	117	459	122	508
markeredgewidth	64	185	226	641	683
doubtful	17	241	395	236	874
produced	29	28	306	122	508
arr.tolist()	75	12	461	471	806
2004-02-05	67	213	95	185	51
mplgrapher	6	69	46	380	384
.min()	87	47	121	673	608
cusp	10	151	106	631	762
cust	78	93	82	463	965
nside	84	195	128	381	353
cusv	30	259	244	127	588
0.222	60	155	240	485	910
separators	32	16	420	468	768
bothering	17	43	395	451	803
transparent	20	119	259	757	786
left-right	37	31	443	191	363
undertaking	55	50	100	537	246
traced	29	13	143	173	874
3.5.1	85	276	42	685	380
3.5.0	85	276	42	685	621
pyplot.draw()	6	46	345	599	356
documenation	92	254	234	200	699
accompanied	61	28	175	122	508
beneath	74	263	306	122	214
traces	61	28	305	122	508
tracer	61	176	282	617	908
text.py	50	145	118	483	927
determine	74	232	37	746	868
doing	82	28	227	209	472
seek()	84	263	246	607	405
temp2	72	148	206	174	714
temp1	72	130	418	174	624
idiosyncrasies	10	231	80	500	568
static	73	125	294	158	127
developer's	34	173	80	241	327
blackbox	79	10	324	744	382
csv's	3	91	367	107	953
x-labels	37	290	166	706	76
fitparameters	71	64	140	684	981
valve	72	186	25	683	306
foo.png	73	243	18	16	721
mydataframe	9	134	65	155	699
doc_mg	43	72	68	265	133
surface_plot	25	161	208	49	854
temps	98	148	206	73	77
eventplot	64	6	227	432	472
cdefs	74	99	261	756	979
thrust	9	214	125	302	782
series.map	92	156	109	512	808
scary	10	241	395	334	327
.item()	9	106	331	594	699
-matrix	72	186	25	683	756
prime_max	48	142	173	196	60
non-python	55	1	69	197	564
choses	74	232	37	746	868
a.csv	76	199	30	712	754
order_array	3	110	93	601	622
set_zlim3d	58	44	383	642	599
nyse	80	116	299	581	67
copy()	9	184	158	453	168
npv	79	292	8	430	531
.readlines()	76	199	30	283	736
behaves	9	117	152	335	638
detailing	34	254	234	97	328
sharey=true	58	139	494	324	352
g.remove_nodes_from	0	224	112	418	162
decorations	37	31	467	780	370
travelled	33	281	282	212	563
behaved	79	151	106	631	382
pandas.dataframe	3	156	6	354	125
o'reilly	23	1	377	179	866
+df	43	47	231	265	708
fit-function	79	23	332	638	239
unbuffered	55	214	422	756	949
haven	17	62	410	609	457
not_equal	47	224	295	770	881
subroutine	55	204	29	790	64
autotexts	6	161	280	543	481
extraordinarily	68	207	371	205	767
appealing	64	241	390	78	256
brewer2mpl	64	6	390	78	450
stricter	38	227	17	601	305
scipy.misc.imsave	84	219	123	607	427
viewer	73	125	248	276	304
abomination	79	151	106	631	970
sysadmin	17	190	80	500	118
intersted	27	137	459	15	421
seaborn.boxplot	51	193	78	272	121
numpy.correlate	79	101	140	703	547
hessian	16	269	324	705	13
756	67	78	52	133	272
c2p0001c054.asc	43	105	231	71	255
re-post	34	190	307	702	216
speedslist	60	102	418	193	910
754	57	89	325	86	22
reloaded	22	171	388	361	248
sns.factorplot	51	17	351	4	12
persistence	38	50	426	663	79
calculus	28	14	267	744	610
02	67	260	284	718	483
allow	74	232	152	209	305
do-able	17	43	377	236	803
xarr	75	293	206	695	719
visa	78	99	430	14	410
device	23	84	365	676	257
07	67	260	284	718	483
cke	32	16	190	415	413
amortize	22	180	100	537	59
04	67	260	284	718	483
1-alpha	11	234	242	531	56
some_val	70	59	452	171	522
non-consecutive	3	146	148	587	340
stronger	20	151	106	757	786
lopnr	78	78	445	204	272
scipy.stats.ttest_ind	79	275	140	684	231
atmosphere	33	176	77	623	210
09	67	163	284	718	483
=p	60	155	240	348	987
=s	12	130	162	133	272
=|	11	224	4	770	743
=y	11	52	242	129	56
=x	60	52	242	129	221
popupmenu	90	46	345	624	112
=d	43	164	181	348	987
persistance	86	85	294	691	820
=a	52	0	160	284	855
=c	52	148	206	284	714
=b	48	59	112	620	636
simplfy	29	137	459	15	421
rough	27	137	459	525	421
=n	72	186	207	683	306
=i	52	0	273	284	19
=j	52	0	263	215	19
freq=	80	149	447	460	612
plt.xlim()	58	44	494	341	388
pausa	72	275	295	139	756
=]	35	207	371	205	767
=\	47	186	170	366	588
forward-filling	92	146	424	414	691
=[	60	164	303	348	640
numpy.delete	19	294	296	291	601
pad_inches=0	58	243	18	16	721
d.dateoffset	67	201	284	2	99
pyplot.subplots()	6	139	90	324	543
=4	50	52	133	770	588
=7	52	0	263	284	855
work_done	9	12	461	776	622
=1	52	52	68	290	985
=0	52	52	198	770	985
=3	52	52	68	290	985
=2	98	52	273	770	985
==	52	52	198	770	985
familiar	17	43	377	396	803
=>	47	224	58	424	588
=9	11	186	162	129	756
lucky	17	13	250	236	345
wiggle	61	14	294	429	951
=-	15	52	162	71	437
=/	30	259	244	159	181
=)	68	207	371	205	767
=(	60	123	173	50	371
=+	1	0	4	215	19
freqz	79	101	140	703	392
denmark	43	200	231	71	765
freqs	77	292	20	430	830
multi_df.ix	52	0	263	290	855
2013-02-01	67	260	95	2	24
numpy.take	19	42	296	13	601
2013-02-03	67	260	12	2	24
intervening	3	146	6	534	961
btw	65	28	246	209	472
matplotlib.pyplot.subplots	64	136	208	543	847
plt.imsave	84	219	102	607	405
configured	83	84	376	184	467
qty	78	258	82	41	965
btc	43	149	447	406	12
stack	34	232	6	97	678
electrode	77	29	77	182	210
qth	59	132	97	683	988
isnan	87	39	424	108	203
wire	23	85	294	595	326
bt\	76	199	286	138	204
testing.txt	47	224	30	283	736
funclist	0	106	295	684	231
player's	78	150	163	479	604
quickest	82	241	378	573	29
unravel	40	64	10	519	678
62844	70	59	74	332	522
os-x	85	276	151	685	380
greatful	68	207	465	432	343
qt4	90	38	46	635	810
qt5	46	38	46	635	810
qt3	13	170	211	104	485
second-order	79	10	324	487	610
plt.subplots_adjust	58	138	495	642	299
productcategory	44	72	93	155	708
covar	79	23	332	638	11
xkcd-style	38	6	278	158	450
interchangeable	38	214	17	200	79
np.cov	16	275	121	562	800
io.bytesio()	76	144	357	283	736
np.cos	11	234	242	664	292
ramp	77	13	428	429	762
382	67	213	95	185	51
tlc	46	221	124	285	435
mathgl	38	6	278	317	450
itertools	19	12	455	480	806
eta	72	275	25	129	756
etf	32	116	420	581	67
eth	78	93	351	42	984
w.r.t.	10	118	106	631	999
etl	23	50	294	317	866
theta2	33	102	280	617	756
theta1	33	186	25	617	756
range_list	52	0	263	364	288
user_agent_string	76	224	93	177	987
taylor	79	10	8	744	610
1421	50	267	118	483	679
8.0	15	272	61	225	544
8.3	15	256	162	196	888
8.5	15	272	61	225	544
8.4	12	272	61	225	544
8.7	15	256	236	196	980
powered	38	6	294	317	79
8.9	15	272	236	514	980
8.8	15	256	61	364	265
distributional	28	23	332	511	531
50*50	71	195	213	646	744
waste	17	283	100	497	463
thetas	72	102	25	129	756
unq	98	148	206	121	886
pd.resample	92	149	447	460	612
#rows	1	19	162	139	60
-ubuntu	67	45	264	718	483
thetaf	11	234	242	531	292
graphics	73	125	248	276	304
0.042725	15	157	64	296	837
datalon	72	102	418	129	722
float32_t	70	59	74	332	979
pandas.set_printoptions	58	185	452	171	290
2-by-2	71	64	268	738	95
accesible	86	110	163	746	444
ax._get_lines.color_cycle	0	12	461	480	806
b.flatten()	1	220	198	770	985
aesthetics	51	136	390	78	256
.hist()	43	72	195	265	12
5th	98	263	254	796	428
antiderivative	79	10	324	487	610
minimizers	79	22	324	566	13
-sum	11	55	25	562	591
excessively	82	241	100	334	463
optimistic	82	43	100	334	246
scale=1	93	123	173	557	230
conserve	40	184	153	691	122
archflags	30	170	244	165	181
dilate	99	230	428	166	353
iopro	46	68	151	685	621
linode	83	84	69	670	467
spends	88	147	55	537	89
python	38	206	80	209	564
print_figure	50	144	118	483	927
data.replace	43	51	487	145	567
glaring	68	231	227	432	571
conflicting	29	231	80	716	568
raymond	35	207	371	205	767
4.4	15	272	61	225	544
upon	29	171	306	173	36
4.7	15	272	61	225	544
mathlab	27	137	27	15	421
somelist	52	148	273	471	622
df.as_matrix()	92	134	78	105	788
fedora19	83	33	211	202	467
4.1	15	272	61	225	544
decimals=3	52	0	263	215	288
decimals=2	11	55	201	664	743
mosaic	20	136	259	584	847
axesstack	6	109	331	543	386
error-message	63	83	283	715	39
numpy_array	71	19	210	284	525
unicode()	32	16	275	601	979
a.searchsorted	52	57	180	232	714
asymmetrical	61	136	175	22	847
lest	10	190	307	590	215
inconsistently	29	99	152	335	920
_most_	22	197	73	574	214
mlab.csv2rec	86	54	382	260	698
.update	44	134	93	700	260
less	82	266	100	497	668
downvotes	34	190	307	702	216
downvoter	65	190	307	590	571
des1	48	224	180	424	159
des2	48	224	180	424	159
4.8	15	272	61	225	544
predicts	28	26	354	523	816
numpy.char	38	214	125	756	382
paul	35	238	409	187	336
downvoted	34	190	307	702	216
train_length	98	146	148	139	62
combine	3	232	6	110	953
optimising	55	180	341	537	219
combing	3	62	6	370	161
maxiter	11	275	173	129	306
rectilinear	53	288	339	720	908
#define	50	244	58	24	323
~df	43	72	68	265	708
pre-compiled	13	128	5	797	391
increased	88	266	485	574	668
hpaulj's	35	238	187	187	308
dest	30	162	58	381	588
increases	88	266	485	574	668
studentid	78	93	243	390	984
five	74	263	454	746	428
desk	17	62	56	753	180
belgium	78	200	132	550	888
loader	86	222	329	152	405
desc	78	93	243	390	965
resid	78	258	445	796	984
=array	52	19	263	364	265
numpy.__file__	81	5	110	199	870
cv2.cv	81	88	110	739	183
parasite	37	290	90	391	388
priori*	10	232	17	209	999
explaination	35	207	371	205	328
next-to-last	98	263	454	191	428
ranksdf	78	93	82	204	832
toimage	84	101	102	166	427
gevent	55	85	71	349	766
500x500	88	195	213	674	95
4800	71	142	268	305	175
divide-by-zero	57	231	389	716	686
sufficiently	82	151	106	631	970
zpos	60	102	418	129	910
literally	29	263	306	209	472
counts.keys()	75	214	295	684	782
eigendecomposition	16	94	462	782	800
interdependencies	38	1	159	761	564
__getattr__	9	109	331	594	386
.start()	0	224	295	424	8
does	29	28	410	209	472
plt.streamplot	29	102	140	129	910
y.iloc	52	0	160	284	776
blurry	20	195	259	757	303
schedule	23	85	294	149	866
font.family	73	166	134	764	862
zipf	79	23	332	511	239
symlink	30	259	244	1	960
geom_boxplot	51	136	175	272	847
full_matrices=false	16	94	462	139	800
zips	75	297	461	776	903
loans	78	56	445	94	67
hiding	37	31	388	780	370
25.0	15	211	61	606	980
25.5	15	256	236	196	980
25.4	15	256	236	196	432
25.9	15	256	236	514	980
25.8	15	256	236	514	980
n_points	1	102	418	129	910
.seconds	80	35	245	727	852
insufficient	10	118	116	97	999
baseestimator	64	26	354	135	816
revise	65	190	116	590	328
array-wide	75	50	10	691	122
contractions	75	50	154	150	651
base-2	57	89	8	562	62
kmeans	28	26	354	135	816
roads	99	176	282	617	563
merc	60	155	240	495	285
mere	88	197	395	233	812
ouptut	27	137	459	15	508
embarassingly	17	62	88	161	746
stocks	78	116	299	581	67
nanometers	77	281	114	686	762
j.f.	35	238	326	187	308
spots	99	31	259	757	563
')])`	43	105	231	53	255
9.8	15	211	236	514	980
9.9	15	272	61	225	544
frustration	17	62	88	161	180
9.5	15	272	61	606	212
9.7	83	182	325	86	22
9.0	15	272	61	650	634
9.1	15	272	61	225	149
9.2	15	272	61	606	10
9.3	12	272	61	196	149
-df	43	47	309	265	708
overlapping	37	31	467	780	851
first_type	98	281	162	796	358
transcript_id	78	93	243	390	965
np.squeeze	1	57	112	232	280
scipy.spatial.delaunay	53	288	11	315	716
y-velocities	71	64	97	228	491
entered	74	171	306	122	161
datetimeindexes	92	134	65	155	622
chained	10	104	23	733	154
decays	79	292	20	487	942
uglier	82	241	378	573	29
sscanf	88	147	55	196	89
rechecked	29	28	306	791	473
item_nbr	78	93	243	390	984
slowing	82	180	143	537	219
replica	77	28	227	122	508
.head()	44	164	202	700	419
deeper	17	13	143	312	589
exhausting	88	283	100	497	463
ravel_multi_index()	19	106	295	231	782
antialiased=true	25	44	208	193	845
main.exe	63	15	108	361	383
w-1	11	0	180	215	19
forests	28	26	354	135	128
groupby-apply	92	156	78	354	121
precalculating	19	180	497	534	68
gaussian_kde	79	23	332	511	239
cclass	63	83	383	616	286
fclusterdata	16	214	185	293	716
~80	88	180	55	337	89
psid	86	222	329	107	444
maxlag	79	185	226	641	683
monday	80	163	254	723	72
np.histogram	19	42	63	557	780
chance	68	13	250	432	472
grouped.agg	43	164	93	76	593
inspiration	34	254	234	302	565
eog	73	144	248	16	304
eof	63	16	283	715	198
massias	35	207	371	205	767
rule	10	227	17	200	382
eol	35	238	326	187	336
win32com	86	91	367	107	564
trims	37	31	443	191	214
savez	86	222	382	102	820
type_id	78	93	445	41	984
saver	35	207	371	205	767
saves	74	117	329	58	508
subsetting	3	104	23	354	125
numpy.minimum	75	214	140	684	382
timespans	80	29	299	77	333
saved	86	125	329	122	519
ufloat	81	237	397	436	864
relationships	28	250	106	479	625
votes	34	190	307	702	216
const	0	204	25	790	64
endings	32	16	190	477	768
voted	34	190	3	702	216
plt.rcdefaults()	6	46	452	599	356
ergo	98	146	317	746	509
cest	80	285	323	742	920
df2.reset_index	44	164	181	700	895
mac-specific	73	125	248	335	304
find-links	30	170	105	481	174
00:01	67	260	12	372	958
easygui	90	187	46	624	127
tickets	80	56	299	41	67
we'll	74	137	246	209	196
y.shape	1	274	112	677	159
delegate	9	109	29	594	386
298	12	279	488	751	132
299	12	279	488	751	132
296	50	267	58	381	588
297	12	279	488	364	265
y_list	72	102	418	740	756
295	12	256	162	196	432
292	12	279	488	751	132
290	12	279	488	751	465
291	12	267	488	111	132
set_limits	0	106	226	684	699
trx_date	80	258	26	390	410
ilist	47	106	461	471	622
rigorous	82	151	106	631	970
incompatible	63	83	306	715	39
voids	99	288	339	646	563
normalizer	25	119	320	49	296
activity_df	67	201	309	2	24
hyperjeff	30	162	27	302	565
nanmin	87	193	424	414	608
14.04.1	83	206	211	393	467
consisting	71	64	37	746	684
propogate	3	156	65	155	125
told	29	28	227	791	874
missed	65	291	258	407	887
simultaneously	74	232	159	534	36
xticklabel	37	290	166	706	76
wrapping	38	204	29	790	526
3-dimensional	71	64	268	519	684
yeilds	29	28	306	471	473
functionaility	46	221	359	604	435
time=0	77	29	114	77	931
placeholder	32	263	420	680	655
low_memory=false	76	185	322	51	698
kudos	35	207	409	205	336
non-duplicate	98	146	317	587	868
glm	79	23	332	638	531
tol=	57	194	495	559	907
pycall	83	206	390	732	389
pinning	28	1	80	197	118
pooling	98	146	148	98	214
cogent	50	259	118	483	927
keymap	90	15	478	540	181
img_manip	52	19	180	290	159
discontinuous	61	31	339	212	340
neutrons	28	14	267	710	841
opportunities	38	1	291	317	79
achievable	29	241	227	525	999
arr_3d	1	19	112	284	714
ymax-ymin	60	194	269	65	221
fixable	10	241	227	500	472
mktime	80	35	245	560	920
fortran90	83	206	178	197	564
aaron	35	207	371	205	336
insult	34	190	307	97	423
rollforward	80	35	245	560	333
lable	37	290	148	207	668
multiarray.pyd	81	162	486	247	344
0.11-dev	46	221	124	331	435
haha	65	291	258	236	345
curvature	33	288	282	487	942
scrolledwindow	90	69	46	380	384
overrun	57	146	485	139	62
specifiying	64	290	443	207	683
springer	28	14	267	133	888
20150826120000	15	211	231	71	255
word	32	286	163	253	798
y's	72	297	97	73	77
1-second	80	29	148	77	931
varf64	0	204	295	790	64
eclipse	83	15	189	540	818
refusing	22	61	388	358	282
1000000	88	142	173	196	393
libc.math	38	214	201	756	382
interactiveshell.py	50	145	225	168	679
quintile	98	56	445	796	984
triu_indices	19	42	296	13	659
cited	34	254	234	302	565
india	33	176	135	623	293
belonging	74	232	37	746	868
aaaa	80	110	243	463	742
n=100	88	142	55	337	89
matplotlib-users	34	173	35	604	208
numpy.random.exponential	93	214	125	628	239
aaah	65	291	258	407	767
cites	34	173	35	302	142
prettyplot	64	44	90	391	683
1190	15	211	162	364	265
0\n0	32	16	190	177	475
m-dimensional	71	64	268	519	95
ref_rgb	84	195	51	592	353
sever	23	84	376	184	467
residuals()	0	275	295	684	231
rewind	22	187	485	716	214
0.9.0	46	221	460	157	621
lam	0	275	242	129	292
lan	23	84	376	149	257
f-contiguous	40	184	270	453	122
transforming	74	232	386	548	141
lag	77	29	148	77	347
analagous	43	72	68	265	708
lab	23	84	128	623	293
lac	80	258	243	712	410
tackle	68	190	465	432	571
lay	61	13	37	39	589
anaconda's	83	15	5	540	818
codepoints	32	16	190	477	444
law	79	23	332	487	620
meaningful	10	241	395	631	999
las	74	192	329	122	519
simpsons	79	227	148	98	347
occurence	98	146	454	746	639
train_cols	43	72	349	539	708
30000000	88	142	173	139	60
lunum	38	1	291	317	564
])```	52	0	263	364	265
centroidsm	52	19	273	471	622
xlate	44	134	260	155	260
pd.rolling_mean	44	164	447	614	612
order	40	232	182	524	9
itemgetter	19	12	455	480	806
numpy.abs	87	55	201	673	830
showfliers=false	64	44	452	272	683
office	23	84	250	149	275
459	72	102	418	516	910
functools	19	214	109	512	808
"")`	32	51	487	151	151
~200	88	160	220	80	54
satisfied	29	28	317	605	602
proportionate	37	31	467	207	449
pascal	17	1	377	396	275
executemany()	92	68	119	110	126
ompc	83	206	178	202	380
~20%	82	180	55	337	89
satisfies	98	148	317	605	602
.invert_yaxis()	58	44	494	341	599
arcgis10.1	50	145	225	168	204
top-k	3	146	127	293	868
np.float16	70	59	74	332	522
wxversion	13	88	110	165	584
dshape	1	274	112	305	21
shear	99	230	428	166	353
eventually	29	13	246	458	36
numpy.core	81	88	110	247	584
struct.pack()	70	100	357	260	405
month_date	80	175	351	524	410
break	22	13	143	458	589
refactoring	82	241	359	537	78
mathoperation	71	102	268	519	684
owned	30	84	69	128	423
bread	38	1	479	317	628
data.groupby	44	164	181	700	419
oxygen	60	155	162	485	888
np.empty()	19	184	153	358	387
alternately	64	232	246	190	629
text.csv	88	283	220	549	60
df.sort	44	175	181	700	895
misbehave	10	151	106	654	970
eryksun's	35	238	326	187	336
371	12	279	488	751	465
1e5	57	142	269	686	393
373	48	19	112	305	159
372	12	279	488	111	465
375	12	279	488	751	465
374	12	279	488	751	399
377	1	274	268	471	60
zdata	25	161	208	287	109
yerr=	60	155	240	495	12
fin_dat	52	134	260	471	582
meets	98	146	317	605	602
1e9	57	89	325	686	393
disappointing	82	241	395	334	327
ommit	30	144	58	381	588
x=10	33	281	287	719	358
network	28	14	267	710	841
gridded	53	176	339	720	293
cameras	77	192	365	429	353
knearest	28	26	354	135	816
lib64	50	259	277	303	469
pythonxy	83	128	5	461	637
np.lib.index_tricks	38	109	125	200	386
admits	75	214	125	684	382
nth	98	146	148	98	428
ctables	38	50	6	354	125
contour3d	61	6	278	158	450
wavefile	84	192	329	676	946
row_stack	19	294	296	278	470
rdylgn	20	119	259	757	846
np.resize	1	57	41	278	280
lousy	17	62	88	236	345
delved	17	62	88	312	874
sub-classing	64	109	291	78	296
guesswork	10	190	491	590	579
fig.canvas	6	161	345	543	109
benchmarking	55	147	55	537	905
apple-supplied	13	128	211	198	482
theano.config.blas.ldflags	47	115	452	165	588
df.stack()	44	156	78	763	710
self._data.distance_matrix	52	0	263	284	19
pandas.io.parsers	81	88	322	739	183
comic	73	166	134	131	862
kerkez	35	238	326	187	336
1024x1024	71	195	213	674	95
df_list.append	76	134	260	283	736
rejects	74	99	152	601	638
rates	77	29	299	94	67
upshot	82	137	459	15	905
purposefully	10	227	17	457	135
kid	17	62	250	233	275
1417982808753	67	67	256	145	567
my_column	43	72	68	265	708
df.isin	43	47	68	181	985
unorderable	63	83	283	715	39
np.subtract.outer	1	57	296	232	726
numpy.frompyfunc	19	214	295	684	613
xj	72	186	273	215	19
mercy	17	43	377	396	275
target	74	232	37	746	868
presto	65	207	274	205	767
tackles	23	62	247	161	746
irow	40	104	23	733	92
kth	98	132	127	73	77
rate2	43	258	26	145	742
iron	23	127	329	595	519
.predict	0	134	349	539	412
tackled	17	62	88	173	79
hacking	17	62	88	39	118
powers	57	89	8	788	62
youre	65	291	258	407	887
importable	81	88	397	739	807
rewrite	82	137	341	537	219
30.0	72	194	162	528	212
longitudes	33	176	135	617	298
2.7.10	85	276	42	685	621
2.7.11	85	276	42	685	858
infront	32	16	420	403	768
x.hour	87	201	493	76	593
__main__	81	237	397	739	864
overlays	61	136	175	158	847
sub-object	6	61	153	358	282
y-1	11	234	242	215	591
latency	22	266	294	574	487
ponder	82	241	143	321	328
customise	64	290	87	78	370
genuine	10	231	17	335	999
nmslink	78	110	243	463	604
map-reduce	82	50	341	497	431
indexer	92	104	23	733	154
indexes	3	146	182	587	125
np.nonzero()	19	294	296	231	601
text's	37	290	443	207	449
forces	74	117	152	58	638
indexed	3	110	6	354	125
matplotlib.basemap	64	136	208	746	908
circles	61	31	282	212	138
optimizer	79	22	324	566	13
optimizes	55	180	341	537	219
distracts	34	190	307	590	216
singly-indexed	3	134	65	155	125
")])`	47	67	256	177	764
extending	74	232	386	200	526
optimized	55	174	341	90	651
oltpsource	98	146	148	673	347
circled	61	31	282	212	276
phase	77	292	20	430	942
800	88	142	220	528	106
4.1.2	85	45	264	513	634
2013-10-16	67	72	231	2	24
2013-10-17	67	213	95	185	51
fitter	79	10	324	566	13
y-x	11	234	242	129	56
natsort	92	156	78	524	971
y-z	33	176	282	617	908
inferred	74	99	152	601	638
newcomers	34	190	307	236	345
investments	98	281	454	796	984
wildcard	32	68	275	739	768
xlim_changed	6	69	32	572	112
collections.ordereddict	19	12	455	776	903
inout	48	184	102	453	981
decidedly	82	241	377	497	812
re-phrase	47	224	116	97	328
triang	25	119	320	193	845
yeh	65	291	258	407	887
ambiguously	92	106	421	641	699
respectfully	65	291	258	407	887
.dot()	16	94	462	782	800
a.copy()	1	184	158	476	757
horizontalalignment=	58	138	265	651	224
+000	43	72	93	145	764
toast	52	19	162	200	888
a-za-z	52	51	487	307	244
10,100	1	123	173	50	393
index_col=1	43	72	231	265	987
index_col=0	76	199	322	51	189
600000	88	160	220	80	217
pursuing	34	190	307	590	118
300x300	71	142	213	674	175
3.2gb	88	182	373	549	236
+00j	15	211	64	364	265
preferred	82	241	378	573	29
2.3.10	46	221	124	202	435
image2_mask	52	52	198	43	714
to_sql	92	68	119	478	824
mainwindow	6	69	46	380	384
ytes	70	100	74	332	522
ndframes	3	50	426	663	843
pearson	79	23	185	638	11
numpy-ish	82	241	378	573	29
2:10	52	19	160	364	855
font.serif	73	166	134	764	862
417	50	267	488	111	132
stead	74	117	306	448	472
411	12	256	488	751	432
412	12	279	488	751	432
analytical	79	10	324	487	610
implication	10	118	17	590	812
pd.value_counts	44	164	260	700	827
steal	64	31	246	732	370
steam	61	136	175	110	625
3:00	80	260	254	530	931
bfield	0	224	418	129	910
erroneous	29	263	389	335	655
askewchan	35	238	409	187	336
scipy.cluster	38	50	125	293	716
shared-memory	38	1	341	317	79
observed	79	23	306	631	905
analytics	23	84	101	461	637
holding	74	232	386	746	359
inno	83	261	486	247	368
axis.py	50	145	225	168	927
keep_default_na	92	185	322	415	130
scipy.interpolate.griddata	53	288	238	720	396
%len	52	0	263	284	19
ax=none	60	155	240	495	8
cax.get_yticklabels()	58	44	240	495	890
clued	35	28	116	97	345
26min	78	255	223	550	475
skipinitialspace=true	76	199	322	51	189
.time()	43	47	309	727	852
time_text	6	46	345	44	356
custom.css	30	122	478	159	181
borehole	78	250	77	425	798
preprocessor	55	174	29	317	354
unfold	3	137	6	354	125
clues	68	254	465	432	343
tupled	74	106	461	471	141
intelligent	82	241	378	573	29
negatively	79	151	106	631	970
received	63	83	272	791	39
ill	65	291	258	236	345
param_1	0	237	397	436	864
pd.dataframe	44	134	260	348	827
param_2	0	237	397	436	864
60.8	52	19	160	284	855
misunderstand	65	118	227	407	887
receives	74	117	152	595	638
receiver	77	14	365	676	257
ncar	38	6	278	317	450
unlinked	37	290	443	780	851
60.0	57	194	269	664	743
mathsys	38	6	29	334	564
tough	17	62	395	659	327
timescale	23	29	294	94	668
ind_pos	52	19	263	284	855
excelfiles	3	91	367	107	86
inc()	9	204	29	790	64
wider	37	31	467	207	668
dataframe.to_csv	76	54	322	183	698
speak	17	43	377	396	354
light	68	13	227	432	571
trickery	38	241	341	756	382
engines	38	85	119	349	126
observing	10	231	395	335	999
list-comp	19	12	455	480	806
comb.ix	52	0	263	290	855
3-12	51	136	148	746	868
tuples	75	297	10	776	903
thrice	12	197	73	528	217
39906	71	142	268	139	60
90th	80	56	254	10	347
ylim	58	44	494	341	388
concerning	29	118	116	97	328
subset_b	87	52	198	605	437
ndarray.dtype	9	109	331	594	699
y_valid	79	26	349	539	412
reobsmaf	43	72	68	265	708
apply_along_axis	19	294	422	13	761
ident	52	78	30	257	764
engine=	76	199	322	51	413
with-python3	13	170	50	481	174
fcluster	53	275	185	293	716
reedit	65	118	116	407	216
mistake	65	291	258	407	887
single-dimensional	75	64	10	231	981
sting	32	99	275	601	444
pandas.dataframe.plot	51	44	195	272	950
10-digit	98	146	454	587	744
brake	64	137	116	525	328
setdiff1d	19	42	296	13	512
b'a	76	105	487	177	764
b'c	12	105	256	145	764
descent	28	22	324	487	13
tring	29	28	227	110	472
b's	98	146	454	796	984
250000	1	142	173	305	60
accumulating	22	50	482	534	68
matlibplot	61	136	175	626	847
decibel	77	292	20	430	62
outter	22	197	497	534	68
infeasible	82	283	100	497	463
perimeter	99	288	282	315	138
independent	74	232	37	768	36
emphasise	10	151	106	631	762
nin	15	157	64	296	837
nil	75	180	295	139	60
somethign	29	28	227	791	473
obfuscating	82	241	341	590	29
swell	22	283	373	549	236
outperformed	55	180	55	337	651
nix	83	84	376	184	467
left_index=true	44	2	253	427	176
feature_matrix	43	72	68	265	708
trucks	88	197	114	574	616
nit	47	224	317	424	999
centred	37	281	443	10	851
hopping	29	62	88	161	874
final_df	3	134	65	155	965
zwicker	35	115	409	201	336
ragged	75	99	421	663	843
input_image.t	1	274	349	539	412
u'open	43	72	231	204	708
centres	99	288	443	646	138
msvc9compiler.py	30	162	486	247	344
bbox	58	161	265	651	224
long_scalars	63	244	389	428	57
solaris	96	30	480	785	858
quoted	32	16	420	468	768
fill-between	27	281	287	719	358
1.37272	67	157	64	296	837
quotes	32	16	420	403	768
my_structured_array	75	106	421	305	681
matplotlib.colors	25	119	320	49	296
clamped	99	288	339	191	744
bookmarked	35	207	371	205	345
multi-subsets	72	186	25	683	306
plt.get_backend()	81	5	110	199	870
evidenced	29	171	306	122	508
fixed-size	75	99	426	691	843
maya	83	206	178	197	564
brenbarn	35	238	409	187	336
microcontroller	23	192	365	595	257
osname	81	5	110	130	870
sympy's	79	10	324	744	610
fusion	22	283	106	94	246
set_xbound	58	44	494	341	388
dset	71	195	213	519	684
reusable	38	237	291	732	966
column_of_ints	43	47	68	265	708
hackish	82	241	378	573	29
np.select	19	42	198	13	512
unfortunatly	82	180	341	537	246
colnum	43	72	68	265	708
536	12	181	64	751	888
535	12	181	58	24	132
533	50	181	223	24	132
532	50	181	58	24	888
530	12	181	64	24	888
invaluable	68	207	371	205	767
one-step	82	241	341	573	29
539	12	181	64	24	888
538	12	181	488	751	888
dtype.type	9	109	331	594	979
exit()	90	46	108	599	248
regex=true	76	51	487	415	244
|s10	70	205	346	53	576
35133032	15	0	64	296	288
frequencylist	0	237	397	436	864
humor	73	166	134	131	862
cumcount	92	188	78	763	121
np.where	87	52	198	13	985
joshadel's	27	238	187	15	308
unavoidable	82	241	288	497	463
lambda1	81	88	110	739	584
geocoding	23	84	27	370	257
plu	16	186	462	782	800
plt	81	88	110	739	889
pls	27	293	202	285	919
repository	83	128	5	797	368
core.py	50	145	118	483	927
np.void	70	59	74	754	681
undeleted	65	118	307	590	216
ply	47	110	317	155	508
restructuring	82	50	341	537	215
binomial	79	23	332	511	239
taskset	22	5	244	165	889
sorce	47	224	80	110	588
properties	64	161	90	78	370
qcut	92	193	63	31	66
rmagic	38	15	189	226	818
__mul__	9	109	331	55	878
horizon	28	14	267	710	841
min_period	80	146	148	77	509
beacuse	47	28	452	20	473
treble	77	292	20	430	227
considerations	10	227	17	321	246
xys	75	106	206	471	77
st.int.arvl	98	258	25	243	139
48gb	88	182	373	549	236
xyz	33	176	135	617	293
haskell	55	1	29	396	564
vline	6	161	208	543	481
pl.legend	58	155	240	495	285
spring_layout	99	288	280	646	329
np.putmask	19	214	296	13	512
centos	85	276	233	393	858
subwindows	98	281	148	207	214
nodal	33	102	114	646	684
0,500	60	194	269	65	162
slowdowns	82	180	100	537	246
ridgecv	79	26	354	135	816
quirks	38	231	17	317	79
inset_axes	64	44	90	391	683
quirky	82	241	274	334	669
additionaly	75	214	295	684	231
chi2_contingency	79	275	140	684	239
emulated	38	109	331	200	354
xy2	11	234	242	531	56
sqlalchemy	86	68	119	478	126
lowess	79	23	332	363	531
same2	43	72	82	204	708
.............	43	78	231	145	272
vs2013	83	30	69	461	637
parametrize	61	288	282	617	908
vs2010	83	45	5	650	634
emulates	38	214	125	703	392
astonished	17	43	377	236	803
nfft=256	60	224	295	424	881
pre-set	74	106	152	641	638
normalising	79	292	148	98	62
atbvec	71	274	268	305	881
mtx	75	148	454	73	77
pre-allocating	82	184	153	537	359
n_jobs=1	22	28	293	361	473
crystal	10	118	116	590	812
mth	72	186	25	129	247
perpetuity	28	180	341	98	347
unusually	57	231	106	631	970
optimisation	55	10	341	537	246
mtd	47	224	162	424	214
1.1.1	85	276	151	681	252
fulfills	10	118	116	590	812
1.1.2	83	206	178	685	380
1.1.7	85	276	42	685	380
abstract	38	43	291	334	354
conserved	71	195	454	646	175
weave.inline	55	174	29	790	455
score1	78	78	52	796	272
spark's	23	26	354	761	816
distributions	79	23	332	511	239
archive	86	261	486	797	368
numpy.diag	16	94	462	782	659
stake	88	180	55	574	89
reality	88	160	342	80	999
.argsort	1	57	112	232	726
shrink	37	31	467	207	449
scored	78	150	445	479	604
pyramids	77	195	128	429	353
sort_index	92	90	78	763	971
convincing	10	190	395	590	812
mlist	44	2	253	558	895
write-up	34	190	371	205	328
scorer	28	26	354	135	816
scores	78	150	445	479	604
omega	11	186	242	129	292
abscissa	98	146	97	796	639
float-like	70	99	325	601	979
s.astype	70	39	309	177	979
datetime-like	92	35	245	781	934
np.random.seed	93	123	193	628	361
_method_i_do_not_have_access_to	75	106	140	684	231
data-coordinates	37	31	443	780	851
numpy.cumsum	87	42	121	673	608
switched	29	171	306	791	874
dance	23	150	163	482	275
time_range	80	35	245	727	612
switches	8	117	152	122	629
numpy.ravel()	40	294	296	231	280
memset	9	184	153	358	782
keras	23	26	354	761	816
pause()	6	46	345	599	356
x_test	1	26	349	539	412
629.5080666666667	15	157	64	296	837
somthing	29	137	459	15	472
random_matrix	0	12	295	139	881
hovers	90	69	32	624	536
32bits	85	30	480	685	858
infinitesimally	77	266	97	574	762
take_last	92	185	138	605	130
calculator	28	14	267	744	841
brown	20	200	259	757	786
m+1	72	186	25	683	306
alpha=0	20	119	320	49	664
pandas.get_dummies()	92	156	168	105	971
seemingly	29	231	395	335	473
alpha=1	20	155	259	495	285
foo.py	30	15	189	540	383
trouble	17	62	88	161	526
dframe	3	116	6	155	699
aggressively	10	231	17	500	246
python34\	50	145	118	138	204
gnucash	86	84	72	478	126
suprised	17	43	395	236	803
setitem	9	109	158	594	424
ill-formed	86	110	329	601	519
qscrollarea	64	69	46	572	370
upper	37	31	443	191	964
hte	22	237	485	740	975
brave	17	43	377	500	803
regret	65	291	258	236	345
bravo	35	207	274	205	767
8601	80	285	245	781	920
discover	17	43	143	500	874
hth	35	207	371	205	767
higher-order	79	10	324	744	610
cv2.matchtemplate	84	219	102	401	427
unconnected	72	186	25	683	756
=o	48	59	74	332	681
pathcollection	6	161	208	543	109
trivial	82	241	395	209	999
assistance	68	207	465	432	343
uncompress	86	222	329	611	368
rollup	23	150	294	354	866
_configtest	50	145	133	117	30
~50%	88	180	55	337	89
1016	12	267	488	111	132
1010	12	267	488	111	132
events_per_week	80	56	26	77	931
subdivided	77	288	114	646	762
350363	16	94	462	150	800
anding	75	64	10	605	650
performancewarning	63	39	389	715	39
gawk	47	147	327	366	588
downloaded	13	261	5	797	368
pause	90	187	345	599	107
0.16666667	15	211	263	364	265
rainflow	55	1	267	317	564
11000	88	142	162	528	106
ax.pcolormesh	25	161	320	49	845
treemap	23	14	294	710	625
weakref	9	109	331	594	386
myvar	52	220	160	476	757
decouple	22	85	388	190	118
complevel=9	76	199	379	217	502
country's	78	250	299	479	604
montreal	67	213	95	133	888
powerlaw	77	23	332	511	531
pancreatitis	67	200	132	550	888
__getslice__	9	109	331	55	386
marked	34	118	116	97	216
customised	64	136	390	78	370
sincerely	68	207	371	205	345
marker	61	136	24	42	664
data_lvl1	67	110	243	712	754
skip_header=1	76	199	286	51	413
market	80	116	299	581	67
sys.exit	22	187	389	361	383
flavors	86	68	119	478	126
httpd	30	259	376	496	960
.cla()	6	139	494	418	543
columns=none	48	59	2	621	987
dish_specific_perf	43	52	180	693	437
f.ex	47	224	30	424	588
https	23	84	376	184	127
lower_bounds	75	148	206	471	77
angels	77	29	73	77	931
reduceat	19	280	78	13	512
heart.groupby	43	72	93	265	832
club	78	150	445	479	604
zoom-to-rectangle	90	69	32	624	536
pyqwt	83	1	278	461	450
envelope	77	292	20	430	942
clue	68	28	227	432	571
numpy.real	38	214	201	756	382
frame_query	76	68	119	478	824
viewed	74	125	152	122	673
pre-computed	74	232	339	98	673
scipy.linalg.toeplitz	16	94	462	455	800
.unstack()	44	164	181	700	419
matplotlib.mlab.rec_groupby	29	28	272	161	457
m+n	89	142	207	261	90
f.e.	84	195	51	592	625
concatenate()	19	294	296	278	470
=5	87	52	180	770	437
cygdrive	50	259	277	138	469
pauses	90	187	108	361	248
re-implement	38	109	29	732	386
paused	90	187	32	624	112
=6	1	52	180	215	437
posing	34	190	307	702	216
right=true	60	194	63	557	221
ipython_notebook_config.py	30	122	478	159	181
fortunately	38	232	291	209	305
non-business	80	35	59	723	931
write	74	137	246	110	472
??	29	28	227	432	472
.base	9	220	85	476	191
cranky	17	62	88	236	345
dive	17	254	143	312	118
use	74	232	246	209	472
southern	33	176	282	617	563
%%cython	30	15	189	226	818
0.72	15	194	61	606	10
pqr	60	155	231	485	285
?,	47	28	227	432	472
0.75	60	194	269	606	10
0.79	15	256	236	514	980
0.78	15	211	236	514	144
annotation	37	31	90	780	76
?!	29	28	227	432	472
400x400	71	195	213	674	95
whenever	29	187	306	190	214
futures	80	116	299	581	67
marshal	86	222	426	611	820
#include	30	162	94	138	30
df.c.values	19	294	296	291	470
automatically	74	232	152	190	370
yhat's	38	6	390	161	79
typical	82	137	459	209	36
submatrices	71	64	127	738	95
(-:	65	291	371	205	345
generic_filter	53	101	428	166	782
.1f	76	205	346	177	576
a.item	1	59	41	215	726
my_img	1	219	102	401	427
tending	57	266	485	139	743
1831	12	13	92	238	646
curly	32	16	420	403	768
arduino	23	192	365	676	257
.items()	47	12	461	776	903
shift+enter	90	187	108	540	248
memcpy	9	184	153	358	64
according	74	232	37	746	638
multiline	32	16	420	403	768
myvalue	70	72	93	332	764
refbase	98	146	454	601	979
m_2	72	186	25	129	756
m_1	72	186	25	683	756
.tolist()	44	134	461	290	827
inefficiency	82	180	341	537	246
datadrame	3	156	78	354	125
.13	46	221	124	331	435
linalg.lstsq	16	94	462	782	800
.11	46	206	151	202	284
.16	15	211	269	606	212
error-handling	27	231	305	716	215
.15	46	272	61	225	544
scaling	37	290	467	207	668
gufunc	55	214	422	790	761
identically	74	232	10	587	36
flawlessly	35	207	274	205	739
superset	38	1	291	200	354
provision	55	174	29	758	564
discuss	34	173	359	97	208
subf	9	237	397	436	864
m_i	72	186	25	683	756
splines	53	10	238	720	396
slurp	86	222	329	260	519
james	47	115	209	20	588
anonymize	27	293	305	420	579
.to_timestamp	43	201	309	460	593
orthonormal	16	94	462	150	988
set_xdata	6	161	383	543	109
a.item()	67	217	375	263	146
colororder	64	290	90	391	388
last	98	263	306	209	428
s=500	60	155	240	495	285
rgbd_crop_file	15	211	236	71	255
cairo	73	38	248	635	810
snapshots	23	84	294	595	107
bradley	35	115	371	20	888
sandwich	98	146	317	605	602
backport	46	1	80	461	564
operand	63	83	283	715	286
wavelength	77	292	20	182	210
expanding_mean	92	193	78	614	121
dirname	76	199	286	283	736
250gb	22	182	373	549	236
numpy.repeat()	16	94	333	231	788
parallelogram	33	288	282	315	138
f*x	57	89	8	788	62
test.jpg	84	144	102	401	427
ndarray's	9	109	331	594	386
rebuilding	22	171	80	548	526
y_min	60	194	418	65	872
rle	74	99	10	601	141
_collapse	9	275	121	684	695
512*512	71	142	213	674	175
data.head()	27	293	202	122	508
array-based	82	180	341	573	29
+05	15	213	263	364	311
numpy.i	55	204	29	790	64
couldn	29	28	410	609	457
honest	17	43	395	500	196
inverts	40	117	317	448	363
w_avg	43	201	180	133	99
24hrs	34	29	299	77	931
initial	74	232	306	525	36
625	98	146	162	528	221
624	93	123	193	628	60
_never_	65	291	246	500	42
variables	74	237	397	436	864
yourself	82	241	246	500	118
column_c	78	200	445	520	832
column_b	43	72	231	265	708
column_a	43	72	68	204	708
qtr	78	200	430	463	832
getmaxdeflection	0	275	140	684	231
angular	33	292	20	430	725
b.sum()	52	19	273	139	60
set_xticks	58	44	166	341	184
dayfirst	76	185	322	51	934
bakuriu	35	238	409	187	336
traction	17	241	291	500	327
cv_32s	63	244	58	532	323
up-down	84	195	51	191	363
lassocv	79	26	226	641	816
plot-directive	83	84	178	158	854
editor	73	15	189	540	818
column_1	70	105	74	177	764
that	29	28	306	209	472
variable1	43	93	82	204	965
thay	65	291	274	236	345
variable2	78	164	82	204	832
eliminates	74	117	306	548	655
thak	35	207	371	205	767
yourarray	1	274	112	305	159
eliminated	29	263	306	791	673
than	82	241	246	209	36
semantics	10	231	17	200	305
stock_name	43	72	93	204	708
thumbnails	73	6	278	158	450
accordance	29	28	116	791	421
pyqtgraph	38	6	278	158	450
datelist	80	34	26	727	410
accesses	22	61	153	691	122
))))`	11	55	180	50	371
180000	71	142	268	528	175
xcorr	79	101	20	430	547
remained	29	171	306	548	874
craig	35	115	409	20	336
ticklabel	37	290	166	706	76
crossover	28	14	114	710	616
df.searchid	52	72	68	290	708
invalidates	34	190	116	97	328
copy.deepcopy	9	294	158	476	200
symmetrized	16	186	25	150	988
lumpy	61	151	106	626	762
pixel-by-pixel	84	230	428	166	353
computationally	82	241	341	497	463
nuanced	34	118	116	590	328
=none	58	185	452	642	162
.to_pydatetime()	92	35	245	727	852
terrific	35	207	274	205	767
implot	64	136	90	272	847
nuances	38	43	377	321	354
ascending=0	43	47	231	290	12
online	34	254	247	161	746
similiar	82	137	272	161	905
begin	29	28	246	209	472
cogroup	3	214	154	231	382
algebraic	28	10	324	744	422
a.transpose()	16	178	462	150	726
script1.py	47	224	275	183	736
down-sampling	77	195	428	429	353
jedi.el	30	162	244	159	960
linecache	86	54	246	110	444
professional	17	43	377	396	275
matplotlib-1.3.1	83	206	178	393	467
filing	46	173	359	604	208
clustermap	51	136	195	272	847
end-up	98	186	148	574	306
ms-dos	83	15	486	540	383
right-handed	33	31	443	191	725
probmatrix	52	12	461	471	622
line.split()	52	12	461	471	806
u'data	67	213	231	71	255
crashing	22	187	108	361	248
aint	29	28	410	500	472
title	37	290	90	391	76
disables	90	117	152	572	370
threefold	27	118	116	15	905
nonzero()	19	42	296	13	782
oscilloscope	23	14	365	676	257
infer_types=false	76	134	260	348	827
samuel	65	115	116	407	887
.iloc()	92	104	23	733	92
c_col1	3	93	243	796	984
word-topic	28	297	163	511	798
gist_rainbow_r	20	119	259	757	786
pseudorandom	93	151	193	628	507
differentiating	99	151	185	631	762
re.search	76	51	109	512	808
my_grid	98	297	454	73	77
pd.read_csv	76	199	286	51	189
postgis	23	84	119	61	401
reorganized	3	171	182	190	673
newarray	52	148	112	471	622
iqt	98	78	52	133	272
decompressing	86	222	426	611	820
pyplot.figure()	6	46	18	324	356
parenthesized	75	106	421	471	979
matplotlib.interactive	6	46	345	418	356
color-mapped	20	119	259	757	786
namely	74	232	306	746	36
transpose()	19	294	296	231	470
iqr	98	194	287	10	358
re-drawing	6	46	388	666	373
interchangeably	75	99	159	756	382
dtype.names	70	99	421	601	843
workbooks	86	91	367	107	86
dst_ds	47	224	180	424	764
3	12	19	162	305	60
jth	98	132	273	73	77
mpl.dates.date2num	92	35	245	560	934
ytd	80	56	299	204	832
yte	70	100	325	86	22
notice	29	28	306	791	472
plt.yscale	58	44	494	341	599
takagi	16	94	462	782	800
prettiest	82	241	378	573	29
analyzer	23	14	365	676	257
analyzes	55	174	27	595	564
^2+	11	234	4	531	99
random.sample	93	123	193	628	361
capstyle	64	166	90	764	664
analyzed	23	171	472	94	616
2d-histograms	61	64	10	519	684
non-printing	32	16	420	477	5
discernible	22	283	485	574	668
#qo	63	83	93	715	311
fliers	51	136	24	42	664
dgesdd	16	22	462	782	800
wheels	13	128	5	797	391
groupby	92	156	78	763	121
df.diff()	87	55	68	770	985
nearby	99	288	339	646	744
df.index.time	43	47	309	727	852
np.errstate	63	39	389	171	686
tempfid	48	274	268	305	60
learning	28	43	377	179	275
groupedby	3	156	6	354	125
oliver	35	238	409	187	336
cycling	20	119	497	534	526
gboffi	35	238	409	187	336
cares	10	43	227	233	812
invert	16	94	462	661	363
oder	74	232	246	511	472
odes	79	10	324	214	610
cared	19	214	246	209	512
winston's	82	238	187	187	308
outweighed	88	180	100	537	246
multi_line	3	232	6	110	847
critieria	3	104	6	587	125
y_idx	1	148	112	73	77
self.fig	6	139	345	418	543
two-liner	82	241	378	573	669
external	23	84	294	595	127
matrixlib	50	259	277	381	842
numpy.gradient	79	153	140	231	782
animate()	6	161	345	44	635
13:45	80	56	254	723	931
rasterize	73	125	248	276	304
n=none	11	57	180	193	830
polycollections	25	161	208	251	109
right=1	58	138	495	642	162
coolest	82	241	17	500	812
regularisation	79	26	354	638	11
suse	83	206	178	393	858
stdout	30	144	327	147	383
100th	98	197	73	528	217
prettytable	86	68	367	107	322
l's	65	13	116	587	589
datetime.combine	92	35	245	781	920
65536	88	142	220	674	60
worry	10	241	246	500	118
easing	74	232	154	98	382
getpos	9	106	140	684	699
colormesh	61	136	208	719	358
python-like	55	174	29	90	219
cc1	63	244	283	361	383
scipy.stats.sem	81	88	110	739	183
keith's	34	173	116	97	142
xticks()	58	44	166	341	184
\matplotlib\	50	145	225	27	429
investigated	29	62	88	161	746
per-se	82	50	100	497	246
initialization	9	109	397	436	359
arff	86	222	329	260	405
matplotlib.pyplot.hist	51	136	63	557	780
ccy	3	110	65	390	984
mytest.csv	76	134	30	155	754
charges	77	288	114	646	210
ccw	33	176	443	617	725
tar.gz	13	261	486	797	368
agreeing	65	118	395	590	887
data_mat	48	274	295	539	881
coordinate	33	176	135	617	908
defers	9	109	331	594	842
itertools.accumulate	87	57	112	232	726
ccc	43	53	82	145	569
charged	28	14	267	710	841
heaps	35	207	371	205	767
heapq	19	42	125	13	886
audioop	38	214	80	500	564
knowledgeable	34	190	307	590	803
heapy	55	283	373	128	282
milestone	80	258	26	604	435
ci	83	170	244	165	467
bitmap	84	125	248	276	304
libfreetype6-dev	13	170	50	104	485
groupby.apply()	92	156	78	105	121
tukey	79	23	332	761	531
mayavi2	38	6	278	158	450
powerset	3	297	497	534	68
np.add.reduce	87	57	121	673	608
ndarrays	75	106	10	519	681
numpy.arrays	75	99	10	231	843
staging	23	84	376	184	126
thinking	17	43	88	236	874
unpickler	9	109	331	594	699
improvement	82	180	55	337	89
subversion	83	1	80	197	564
inner	75	297	497	534	68
600,300	1	274	112	305	726
poissonian	79	23	332	511	239
unpickled	22	61	71	349	807
ca	88	160	220	80	54
ic	72	186	25	563	756
seams	29	28	227	335	473
item-by-item	82	50	497	47	68
pyplot.plot()	51	136	208	272	481
eventlist	22	110	397	595	214
576	12	78	52	528	175
early	17	13	250	39	275
voigt	28	23	332	511	531
sma_22	43	273	309	265	708
velocities	33	176	114	623	210
interleave	40	50	10	534	678
benefit	82	180	341	537	246
ts_placed	78	93	82	204	832
appid	80	78	256	133	272
animating	61	136	278	158	107
endorsed	34	173	35	302	142
900000	88	160	220	80	54
sp500.index	60	34	418	727	591
rrule	74	232	430	525	36
questionnaire	23	150	6	94	67
nurbs	28	10	282	487	762
dfrand	98	52	206	141	714
lu_solve	16	94	462	782	800
20x20	71	195	213	674	95
forks	22	85	71	349	431
0,1,100	93	123	173	129	910
axes()	58	139	494	775	543
8.1	85	276	42	685	858
business	80	56	299	723	333
1420	67	181	58	133	888
tdf	43	72	68	471	622
tde	86	222	426	663	519
r_div	71	148	268	73	77
1935	67	181	95	24	51
explicitely	74	99	246	209	979
np.isinf	87	52	198	770	985
n.append	52	0	273	284	19
comparison	75	227	317	457	135
figurecanvasgtkagg	6	161	383	380	384
matplotlib.tri	61	176	208	617	908
index.py	50	145	118	580	429
cbar	58	44	320	49	162
processor	55	30	480	785	431
side-note	10	238	187	525	308
multigraph	61	136	280	780	329
unbounded	57	89	485	654	970
plt.close	6	46	18	599	356
color-coded	61	119	175	757	786
multiprocessing.array	9	184	153	358	807
you~	35	207	371	205	767
elementary	17	62	247	451	98
yout	75	102	10	129	756
nowadays	38	1	69	317	564
your	27	137	246	209	472
pylab.subplot	6	139	345	418	356
get_cmap	25	119	320	49	846
forwarded	83	84	376	184	467
area	61	31	282	212	138
assumed	29	28	306	791	874
unmodified	27	171	388	439	673
.cache	30	122	478	350	181
cats	78	200	132	149	423
cflags	30	122	94	159	181
non-math	73	166	134	131	862
15:45	67	260	284	718	483
x.unique()	87	55	493	76	591
assumes	74	117	152	58	638
fixture	78	56	445	479	897
paraphrase	27	137	116	110	421
c-extension	55	174	422	537	219
non-float	70	99	424	756	979
posterior	79	23	332	511	531
single-label	75	104	23	200	650
80-bit	57	100	325	86	22
factorized	74	232	182	587	673
ffast-math	55	174	422	90	30
nd.array	9	106	295	231	699
hash-based	38	50	17	691	122
cat1	78	93	82	584	804
cat2	78	93	82	584	804
one-character	32	99	420	482	475
df_all	52	134	260	155	622
tones	77	151	428	429	762
wind_dirs	52	0	263	284	855
gibberish	29	263	420	458	898
patch_artist=true	51	44	24	272	683
scanner	23	14	365	676	841
win_amd64.whl	13	261	348	797	368
row-first	40	104	270	713	650
1200	12	60	220	305	60
aplpy	84	230	128	607	427
scanned	29	62	247	161	746
gradients	28	151	428	487	762
yob	3	146	317	587	999
prepend	32	263	420	468	629
valid	74	28	317	209	638
you	74	232	246	209	472
src.linux-x86_64-2.7	50	259	133	117	160
np_vertices=	48	59	173	50	21
dynamically-named	10	237	397	436	864
np.histogramdd	19	294	296	231	782
set_clip_path	25	161	208	543	109
multidimension	71	64	10	519	684
grouped_df	44	134	260	700	827
plt.fill_between	60	155	238	777	12
s.t.	72	186	25	129	756
building	74	50	386	110	359
neighbour	99	288	11	293	716
plt.ylim()	58	44	494	65	388
decimal()	29	263	389	458	874
hyry	35	238	326	187	336
flush()	22	241	341	537	246
from_datetime	65	291	258	407	141
signalling	10	231	395	500	509
.combine_first	43	47	223	290	567
unicodes	32	99	93	601	979
corret	29	28	306	631	472
datenums	80	35	245	560	920
np.cumsum()	19	214	140	231	512
1+x	11	234	242	531	56
fftpack	55	174	408	90	651
df_new	43	134	26	290	827
messy	82	241	378	334	327
managed	29	62	272	161	457
c1	72	130	431	174	624
carpet	61	136	175	626	951
somefunc	0	57	295	232	827
megaball	98	281	454	796	428
array-oriented	55	180	341	537	219
icons	90	69	32	624	536
.raw	86	222	123	607	405
graphicx	73	166	134	91	862
d_0	1	274	268	715	981
d_1	71	274	268	683	981
arbitary	99	288	339	646	616
ngrams	28	26	354	135	816
equivalency	75	227	17	457	135
nogil	55	204	29	790	64
c4	43	130	431	174	624
rogue	29	263	420	780	655
balancing	28	50	106	128	970
new_ids_mat	52	19	263	364	265
1+3	11	234	242	531	56
1+2	11	194	162	215	99
1+1	11	234	242	531	56
productid	43	200	231	204	708
new_name	43	47	68	700	827
df.index.astype	43	201	309	727	852
inversions	16	94	462	782	800
scipy.ndimage	53	230	428	166	716
i'll	65	291	250	236	345
fence	17	241	395	334	327
pyobject	9	204	29	790	64
precalculate	82	50	341	139	953
enhancement	46	173	359	604	208
casual	10	43	377	500	803
snippets	27	293	305	420	579
df.columns.names	92	220	452	476	622
*100	87	201	180	50	593
pivot-table	3	50	6	354	125
consumers	55	85	69	349	431
x.pow	11	234	4	215	99
math.log	87	55	201	664	593
seconddata2	61	102	1	285	502
skeletonize	84	230	428	166	353
lt.gca()	58	44	494	418	162
edited	65	118	116	407	887
i.t	52	19	160	284	855
logspace	93	123	63	557	780
modular	82	241	341	744	382
trunk	46	221	124	202	435
i.e	74	232	37	746	36
.tight_layout()	6	46	345	418	356
trunc	57	89	8	664	62
.reindex	44	164	181	700	691
re-merge	3	50	294	94	953
exceptionally	17	43	88	194	803
creepy	17	190	395	236	345
amount	88	266	100	574	668
filter()	19	214	455	480	761
uniquely	3	110	49	390	125
colourmaps	64	6	278	525	951
shuffle	40	64	182	231	678
timestep	77	29	114	182	931
ressources	83	1	80	202	564
cosmetic	10	231	17	631	305
activity_month	44	175	93	204	410
analyzing	23	14	294	94	866
trained	28	26	354	452	128
-lc	50	145	133	138	204
y_int	72	102	418	129	773
flaws	68	1	17	321	215
-ld	30	259	478	159	588
_dotblas.c	50	145	133	117	160
-lm	50	259	133	117	160
pyvenv	30	206	244	165	960
assessor	78	150	445	479	604
libpng-1.5.9	83	206	211	202	485
columnname1	76	199	30	283	987
mask=false	9	220	198	605	782
preallocation	82	294	341	231	387
freq_177	75	64	10	231	981
y-limits	58	290	494	391	388
suffered	29	62	148	428	568
numpy.float64	70	83	383	616	286
single-file	83	206	178	197	564
index_col	76	185	322	51	189
cm.coolwarm	60	155	240	193	910
test.pdf	73	243	18	16	721
so's	34	190	307	590	328
01-01	80	260	254	781	920
01-04	80	163	284	718	483
%%timeit	19	147	189	226	889
modularity	10	1	17	334	215
n+m	89	142	207	261	90
set_position()	64	161	90	543	683
snipped	27	293	459	15	421
np.piecewise	0	55	295	684	231
rowspan	37	139	90	391	984
processors	55	30	480	785	431
b-spline	53	10	238	720	396
spreadsheet	86	91	367	107	86
stayed	29	171	306	791	874
snippet	27	293	459	15	421
\pandas\core\frame	50	145	118	138	204
textview	90	125	329	110	629
figure.add_subplot	58	44	90	341	683
tried	29	28	272	161	457
rude	65	118	395	590	812
derived	74	232	386	746	161
1900-01-01	80	260	254	2	24
n+1	89	132	207	683	306
tries	29	117	152	58	638
derives	9	109	386	404	359
col_idx	1	57	112	232	19
a	74	232	37	209	36
contrived	27	137	459	334	421
x_percents	72	281	418	73	221
3118	9	204	29	790	64
frame.groupby	43	200	231	204	832
scipy.ndimage.measurements.label	99	230	428	166	138
bashing	17	62	56	753	180
zerodivisionerror	63	83	389	715	39
left=true	60	275	495	575	162
egg	13	261	486	247	368
annoyingly	82	241	395	334	327
ndimage.generic_filter	75	214	140	684	782
committed	46	221	124	202	435
minmax	98	297	163	429	798
comfortably	82	283	100	663	953
dummies	78	56	168	584	604
a.reshape	1	57	41	677	280
nbagg	90	38	189	226	810
varies_in_dim	98	19	162	141	221
_ref_locs	63	83	383	616	477
lateral	99	288	282	646	762
solving	79	10	324	214	610
ticklabels	37	290	166	706	76
optimisations	55	174	408	90	651
actually	29	28	306	209	472
fig.canvas.blit	6	46	345	418	373
radical	82	137	246	525	668
recombined	3	64	6	354	953
scalarformatter	58	44	166	341	184
motivated	17	190	307	590	812
digging	17	62	143	312	746
autocorrelations	78	56	299	638	347
df2016	3	110	243	390	984
inversed	98	148	206	141	77
motivates	10	118	307	590	812
view_as_blocks	75	101	125	231	782
image.jpg	47	144	102	401	588
kdes	53	101	125	631	762
decimal	57	89	8	788	898
resized	37	69	46	207	536
semiannual	80	29	299	77	333
resizes	90	69	46	624	536
invoked	81	171	397	684	383
smoothbivariatespline	53	10	238	720	396
mass_balance	0	275	25	684	306
size=20	58	155	240	495	890
_dotproduct	72	186	25	562	756
quantum	28	14	267	710	841
beyond	10	13	485	631	589
todo	17	173	359	604	208
v0.16.1	46	221	151	331	435
v0.16.2	46	221	124	331	435
forward-fill	92	156	424	414	691
regexes	32	227	109	482	444
np19py27_p0	85	276	42	685	621
+0530	67	213	284	718	483
multilabel	47	26	354	19	816
earliest	80	56	299	723	897
x_n	72	186	25	683	773
revolutionary	38	1	17	317	79
parametrized	33	288	282	487	762
cpsd	79	101	20	430	547
numpy.arctan2	0	275	295	684	231
un-pythonic	82	241	378	573	29
datarame	3	110	6	155	125
xsam	75	64	10	519	981
terribly	82	241	395	497	463
expecting	29	28	227	791	473
non-answer	82	190	307	590	812
undergo	46	221	124	202	435
interact	90	69	46	624	536
sacrifice	82	241	341	537	246
ecatmur's	82	241	187	497	308
misc	30	259	430	381	588
unexpected	63	83	389	715	39
re-ordering	3	231	182	548	526
miss	29	28	227	791	472
pd.read_table	76	199	286	51	189
php	23	84	376	540	127
np.reshape	1	57	41	232	280
kanade	28	14	267	710	841
keypoints	84	230	128	429	271
df.date.apply	47	205	493	125	593
pinned	22	184	153	358	282
monthend	80	35	254	560	333
overlaying	61	136	175	22	847
st1	72	130	231	174	888
dt=	11	186	242	531	56
st3	83	206	178	165	380
anaconda3-2.3.0-windows-x86_64	83	206	151	165	380
dt2	80	258	26	155	410
dt1	80	258	26	155	377
mipmap	37	187	443	122	214
blindly	27	28	246	500	215
5102	0	275	263	488	881
5100	11	194	269	606	743
dataframe_one	3	146	6	587	125
std	87	193	121	673	347
_my_func	0	106	295	684	231
stl	84	222	29	607	405
dta	86	91	367	342	86
answer's	35	238	187	187	308
dte	43	200	82	204	708
intensities	84	195	51	137	353
attention	65	190	413	590	328
rroowwllaanndd	35	207	326	187	336
dtw	28	14	185	293	868
mine's	65	291	274	236	345
alongside	74	232	175	122	36
svds	16	94	462	782	800
affirmative	28	14	106	710	970
=100	43	52	68	290	708
numpy.ufunc	9	109	331	594	699
sentences	3	286	163	253	798
pytable	86	68	379	611	126
concentration	99	250	77	623	210
mpl_toolkits.axes_grid1	58	44	90	341	683
rebin	53	288	339	626	340
lib	30	259	277	303	752
subtype	9	109	331	594	699
lil	16	94	333	455	788
lim	98	266	14	207	221
imagegrid	58	44	90	391	388
scotland	78	200	132	463	6
s20	70	105	74	53	502
mysql.connector	86	68	119	478	126
np.add.reduceat	19	42	296	13	886
method=nearest	53	146	424	414	509
dfbig	3	156	65	354	125
lis	98	148	461	139	77
extrapolating	53	151	339	720	340
sve2_all	43	52	68	290	569
aliasing	77	151	428	631	303
boxplot	51	136	24	272	847
np.fft.fftfreq	77	292	20	430	830
n~3^n	98	148	273	141	60
x'x	79	10	324	744	610
diferent	74	232	175	746	36
f.readline()	76	54	30	468	736
alpha	20	119	259	757	786
4.6.3	85	45	264	513	634
approved	34	173	35	604	142
mobile	23	84	35	149	275
performances	82	180	341	537	246
clear	65	118	116	590	999
snapping	37	13	443	207	589
unstacked	51	136	6	354	125
clean	82	241	378	458	417
bufferregion	6	161	345	543	481
hyper	99	288	11	315	616
non-invertible	16	94	462	782	800
commas	32	16	420	468	768
buy_groups	3	297	243	776	903
impressively	82	180	341	497	669
hexbin	51	136	63	272	780
modelid	78	200	93	204	832
.scatter	60	155	240	485	285
9.751	15	157	64	296	837
deprecationwarning	63	244	389	716	842
parameters	79	275	226	641	13
verison	46	221	151	157	621
nonposy=	58	243	452	641	599
flights	52	148	273	284	622
separetely	74	232	37	110	36
subsection	74	232	37	534	359
df.ffill()	92	134	424	414	971
circle	61	288	282	212	138
darwin	96	45	264	513	634
new_df	44	134	260	700	827
__file__	30	37	327	130	413
sub-classes	9	109	331	594	386
scipy.ndimage.uniform_filter	19	101	125	13	512
10:43	67	260	284	718	483
10:40	67	260	284	718	483
reorganise	3	110	6	110	673
np.trapz	87	42	121	416	608
parameter1	43	164	82	204	832
castro's	35	238	187	187	308
parameter2	80	56	82	520	832
ignore_index=true	44	2	260	33	176
function_base.py	50	145	118	483	927
np.lib.format.open_memmap	48	219	357	260	736
pycharmprojects	50	145	118	734	679
x	72	102	418	129	756
logical_and()	19	214	125	13	782
site.id	43	72	68	265	708
redefine	64	237	397	436	629
instruction	83	174	80	197	467
jianxun	35	207	409	187	336
throwing	29	28	389	361	473
x-label	37	290	166	706	76
plausibly	68	207	116	420	345
plausible	82	151	395	335	970
s_id	78	93	243	558	705
iso3	43	2	82	204	987
np.random.random	93	123	173	50	361
peel's	34	238	187	97	308
numpy.linalg.inv()	16	94	462	782	800
n-length	71	64	10	519	684
gravitation	28	10	324	487	610
probable	10	151	106	590	812
min_coords	52	148	273	284	622
familiarity	17	43	377	396	354
autocompletion	38	15	189	29	818
t^2	11	234	4	531	56
incompatibility	46	221	151	202	568
probably	82	241	246	500	472
unobserved	3	146	424	414	509
intending	10	43	227	500	999
pdftops	73	125	248	276	304
preferrable	82	241	378	573	29
stale	29	72	93	265	708
both	74	232	159	209	36
scypy	83	206	80	197	564
delimit	32	16	420	468	768
mega	23	192	365	676	799
items()	19	12	455	480	806
sensitive	10	151	106	631	970
preferrably	74	232	37	158	382
megs	88	182	373	549	236
quick-and-dirty	82	241	378	573	669
np.fliplr	1	57	112	232	726
-2000	77	142	162	528	212
large-scale	28	14	267	710	841
argand	61	136	175	626	951
manners	34	190	307	97	216
whatever	74	232	246	209	629
rename()	92	134	78	105	971
header	76	54	329	468	444
errors=	76	39	452	415	686
linux	85	30	233	393	858
data-frames	3	156	6	354	125
lattice	99	288	339	315	138
quantile	98	193	332	10	347
hold()	6	46	345	572	481
geddes	74	232	246	209	36
coarse	53	151	339	720	762
file_name	76	199	286	283	736
2014-02-24	80	35	245	125	879
territory	17	43	377	396	803
0004	50	181	58	550	888
0005	32	67	487	177	764
dialogue	90	187	108	624	536
0000	12	256	488	196	432
0001	32	67	256	145	272
series.apply	92	156	109	512	808
imag	57	292	20	430	547
0008	47	255	132	550	888
pct_change()	92	193	78	31	121
imac	85	30	480	785	858
determination	79	23	332	638	11
imax	57	194	269	141	221
point's	33	288	114	646	744
???????	47	115	231	127	255
imap	19	12	455	480	806
0-based	40	104	270	713	650
animates	90	69	32	624	112
while	29	28	306	209	36
sphericalrefraction	99	288	11	315	138
packbits	75	214	10	231	782
animated	61	136	175	158	107
clobbers	75	117	152	691	305
bos	67	213	95	185	51
canvas.blit	6	46	345	418	373
5k	88	160	220	80	54
trading_days	44	2	26	155	965
scipy.sparse.block_diag	82	241	100	497	463
-fpic	96	259	133	117	160
skype	34	190	307	702	915
np.linspace()	93	214	193	628	782
.set	58	44	494	485	162
gimp	73	125	248	387	304
np.cross	19	57	296	291	280
pd.isnull	87	52	198	181	985
disutils	30	162	486	165	383
reshape()	19	294	296	453	280
8:00	80	260	12	372	958
2014-07-01	67	260	12	2	24
pandas.datetimeindex	80	35	245	781	920
undirected	99	288	11	214	329
lat-long	99	288	11	646	744
bom	32	16	190	477	261
.drop_duplicates()	44	134	260	700	827
lawyers	12	279	488	751	106
bonus	82	137	116	525	669
tufte	10	151	106	631	479
cleaning	22	62	88	458	417
superpose	61	136	175	757	786
thnaks	35	207	371	205	767
eigenvectors	16	94	462	782	800
database	86	68	119	478	126
get_window_extent()	64	161	90	543	683
thanks~	68	137	465	432	571
-tuples	33	102	135	73	684
ext_data	98	227	317	482	699
paramters	79	23	332	511	762
savvy	17	43	377	396	803
bog	84	192	128	429	353
colomns	3	110	6	354	125
gsl	55	174	408	90	455
scouring	68	62	57	161	746
line's	61	161	282	85	138
cout	47	224	487	177	244
notional	74	281	454	646	868
coud	68	28	227	432	571
fontsize=none	60	155	240	495	8
self.figure	6	243	18	418	162
time-steps	77	29	77	623	210
raschka	65	173	116	97	142
0.70135	11	186	25	129	19
motivating	27	137	116	334	328
finalize	22	61	388	44	282
-isysroot	50	259	133	117	160
yourlist	47	224	461	424	622
verbosely	82	241	378	200	29
nginx	23	84	376	184	831
foo_list	52	148	273	471	19
plt.axvline	60	155	240	495	285
translucent	61	31	24	757	786
capsule_text	43	72	68	265	708
2015-03-20	80	260	254	723	931
test1.csv	76	199	286	283	754
2015-03-25	67	35	245	2	24
bisect_left	19	214	295	13	512
2015-03-28	67	213	95	185	51
toyota	78	56	445	479	604
translates	74	117	149	58	638
restack	3	110	6	354	125
translated	74	137	27	40	673
group_id	78	93	445	796	984
numpy.arcsin	0	106	226	641	676
scipy.stats.linregress	79	23	332	363	620
pool.map()	55	85	71	349	431
some	29	137	159	209	36
pierre	35	238	326	187	336
urgent	68	190	377	432	571
*zip	60	155	240	232	910
voxel_matrix	52	0	263	284	19
groupby.sum()	16	94	333	455	788
23571	71	94	333	455	788
id=	32	144	30	463	475
sparsity	16	94	333	455	788
limmag	60	179	93	42	309
id2	78	93	82	390	965
id3	78	258	82	796	377
id0	78	93	82	558	965
id1	78	93	82	390	965
two's	57	100	325	86	22
by()	78	258	162	796	832
bw_method	79	185	226	641	683
sqllite	86	68	119	478	126
eating	22	283	373	549	417
.so	30	162	486	247	344
sframes	86	26	168	135	816
.index()	19	42	198	13	512
infinitum	78	29	73	94	616
raspberry	23	84	376	184	257
subtract	98	146	148	98	62
dicomdir	86	222	329	344	519
gnome	85	206	233	393	858
idx	52	148	206	284	714
tracing	17	13	143	710	589
_read	50	267	118	580	679
.tofile()	86	222	357	260	405
ids	3	297	163	41	984
simulation	28	14	267	710	841
idl	38	1	377	703	392
idm	89	178	207	261	624
matchesdf	43	47	82	204	708
idk	65	291	258	407	887
binade	77	266	114	141	563
idf	47	26	349	135	832
ide	83	15	189	540	818
bloch	25	161	208	543	908
block	22	263	153	534	214
disclosure	34	173	35	604	142
encircling	72	186	273	191	725
1000x1000x1000	71	64	268	519	684
14.10	85	276	233	393	858
statistics	23	193	148	98	347
k-th	40	132	127	73	77
rees	35	238	326	187	336
add_artist	6	161	90	543	373
registered	90	187	32	595	112
1040	12	267	488	111	159
pympler	17	62	143	39	180
newer	46	221	124	202	435
numpy.isnan	87	52	198	181	985
sklearn-stocks	50	145	118	734	679
crosstab	92	156	78	763	121
info	27	254	234	97	328
utc	80	285	86	781	920
compactly	1	241	378	40	520
utf	32	16	190	477	261
fdf	43	72	231	265	708
stumbling	17	62	88	161	803
pandas-way	82	241	378	573	29
fdo	27	266	162	122	508
argtypes	9	204	331	594	64
infs	84	226	424	414	509
loglocator	58	44	166	341	184
qgridlayout	90	69	46	380	384
scipy.ndimage.gaussian_filter	53	101	428	430	547
beginpoints	80	258	26	77	377
expand_dims	1	294	112	231	782
codecs.open	76	199	286	283	413
nag	30	259	277	381	960
objection	82	241	116	525	215
nah	65	291	258	407	887
cmap=cm	60	155	240	193	910
nan	98	79	424	414	203
accross	29	56	148	98	214
nar	65	291	274	407	767
nas	3	146	424	414	509
-the	28	14	185	293	762
electrical	28	14	267	623	841
nat	92	39	424	414	934
pandas	3	156	6	354	125
drat	65	291	258	236	887
draw	61	136	175	212	138
row-order	40	294	270	231	601
totaldata	29	171	306	122	508
14000	88	142	220	196	106
fewest	82	266	341	537	219
william	35	17	223	4	567
drag	90	69	32	624	536
your_list	52	12	461	471	806
structure	3	50	386	663	843
cryptographic	28	14	69	628	507
math.e	11	55	201	562	726
practically	10	28	17	497	999
ranks	98	146	445	796	984
multi-type	75	50	10	663	843
youtube	34	254	35	179	565
math.h	55	174	408	90	455
fresh	83	206	178	197	713
...........	47	224	30	424	622
incrementing	22	146	485	534	526
co-author	28	14	35	293	142
ndtr	11	234	242	531	56
python3-matplotlib	13	128	50	104	482
proposition	35	238	326	187	308
salaries	78	26	349	539	412
pandas.dataframe.to_html()	29	125	329	122	508
dy()	27	117	397	684	231
matplotlib.pyplot.draw()	90	46	46	572	356
funcanimation	6	46	345	543	107
db_rating	43	72	68	265	708
0-60	80	56	254	723	931
country_name	44	2	253	33	965
cols_to_delete	1	148	206	232	714
expert_level	3	93	65	155	125
unstructured	53	176	339	720	396
facebook	23	150	120	370	866
apt-get	13	128	50	104	482
matrices	16	94	462	150	800
to_csv()	76	54	322	183	698
libjpeg8-dev	13	170	50	104	174
exits	90	187	108	361	248
stiff	79	10	324	214	610
gender	78	150	445	584	604
button	90	69	32	624	536
hive	86	68	119	478	126
ndarray.view	70	59	74	332	681
2.29	88	197	55	549	89
fit_transform()	92	26	349	135	412
inspection	29	231	143	122	508
2.24	15	272	61	225	544
2.25	15	211	61	606	265
pylab.ion()	90	46	345	599	356
s.a	1	55	295	232	726
blitz	55	214	422	231	219
date_format=	76	205	346	125	879
plt.get_cmap	20	119	320	495	846
preprocess	86	263	329	468	953
sparsedataframe	3	156	333	455	788
liner	82	137	378	573	669
out=c	1	178	41	562	726
out=a	1	57	41	232	726
lo360	33	102	135	646	298
coupon_test	43	72	68	265	708
plays	38	117	294	317	628
invertible	16	94	462	782	800
asfreq	92	149	447	614	333
ax.autoscale()	58	44	494	341	388
unhelpful	10	231	395	335	568
udacity	34	190	307	97	216
poles	33	288	282	315	725
numpy.roots	0	275	140	684	292
data.json	76	199	30	283	736
_path.so	30	259	94	165	960
datetime.datetime.fromtimestamp	47	201	309	125	879
.set_aspect	58	243	494	775	599
filings	80	56	299	723	278
re-run	22	171	108	361	248
optimizers	79	10	324	566	13
scipy.ndimage.map_coordinates	53	294	238	720	396
vba	86	91	367	107	86
vbe	65	291	258	407	999
mpimg.imread	48	219	102	401	881
vbo	22	61	128	691	360
.......	78	115	243	133	588
formerly	38	1	35	317	564
weren't	29	28	306	791	874
hexagon	99	288	114	687	138
addresses	34	118	116	97	161
danger	10	231	17	173	215
numpy.ix_	19	294	296	291	601
austria	43	200	231	463	708
boolean	75	104	198	605	602
........	47	115	92	238	888
ckdtree	53	180	11	293	716
.count()	43	164	181	700	419
metaphor	10	43	227	631	571
qobject	9	61	71	404	807
=len	72	0	180	215	591
vehicle	78	250	132	463	604
exhaustive	82	241	291	525	3
recompose	3	110	6	155	410
popped	90	187	108	624	248
permutations	3	297	182	587	616
matplotlib.tri.triangulation	53	288	208	720	396
becomes	74	117	306	58	214
mismatch	63	83	283	715	39
series.str.extract	92	156	109	512	808
1th	98	64	454	713	428
detrending	79	23	332	470	531
ride	98	263	148	39	428
df3.index	44	2	181	700	895
retried	46	221	151	202	284
ridx	52	0	296	232	601
aggfunc=len	43	164	181	460	895
ax.legend	58	138	90	651	890
control	64	232	246	78	370
cross-section	40	156	65	354	125
idiomatically	82	241	378	573	29
spanning	77	29	299	94	616
stemmed	32	144	420	482	588
n_comp	88	266	106	574	970
uchar	47	64	10	139	141
p.dot	1	178	112	562	726
2.675	57	89	201	664	743
re-use	38	50	341	732	118
4-element	75	64	10	519	684
n.b.	29	28	306	791	473
aureus	43	52	82	181	708
device_id	78	164	82	204	832
pyplot.figure	6	139	18	324	543
-length	89	294	207	231	981
pep_list	0	224	461	424	736
735872.0	60	4	469	516	254
pd.series.mean	87	164	493	76	593
{1}	43	51	487	71	567
5,000	88	160	220	80	54
bipartite	99	288	267	710	329
superimposing	37	31	443	780	449
fresno	98	281	162	191	428
parallelized	55	174	408	90	651
n.sum	11	57	180	172	99
chrisb's	82	238	187	525	308
enclose	10	232	317	113	135
cruise	33	14	114	710	210
parallelizes	55	85	100	761	431
converting	74	99	386	601	141
facilitates	38	1	291	317	628
fwhm	77	23	332	10	11
masses	99	281	114	646	77
notebooks	83	15	189	226	818
him	34	190	307	233	915
\left	32	51	487	403	244
np.ndarrays	75	106	421	756	135
%timeit	93	147	55	337	432
subpanel	37	290	443	572	536
x100	88	142	55	337	89
np.product	1	274	112	305	726
numpy.append	19	294	296	278	470
scipy.stats.norm	79	275	140	511	239
__pow__	9	109	331	594	386
front	74	263	420	458	214
masters	17	62	377	396	275
x_value	33	281	443	191	358
nfl_frame	43	134	93	265	987
magnitude	77	266	97	430	762
table_b	78	93	243	390	984
table_a	78	110	243	390	984
globe	61	176	282	617	908
dataframe.apply	92	156	78	105	971
t*n	11	186	242	129	292
encodings	32	16	190	477	444
142	12	279	488	751	465
photoimage	84	125	248	122	304
list.sort()	19	12	455	524	782
strokes	64	31	467	78	664
plt.set_xlim	60	44	227	673	881
inputted	74	110	37	110	161
high-performance	38	1	291	317	866
python34\scripts	30	162	486	138	204
np.ma.corrcoef	52	134	349	290	855
show()	90	46	345	599	356
undo	40	171	388	190	629
attending	78	150	430	479	604
rdata	1	102	102	193	910
encoding=	76	199	286	51	189
149	12	267	488	111	132
20,000	88	160	220	80	54
dataframe.groupby()	92	156	78	105	121
set_visible	6	161	90	543	109
deprecated	46	221	124	730	435
dereferencing	40	184	153	691	122
mannually	73	125	248	148	472
hexadecimal	32	16	190	601	898
5-tuples	78	297	454	41	639
start_point	75	64	10	519	981
input.txt	76	199	30	283	754
ndim	1	274	421	677	681
ndii	98	281	301	520	995
p_guess	72	275	25	566	292
arr	1	57	112	476	714
args.avg_window	0	44	452	642	162
wx.notebook	90	69	46	380	384
array_agg	75	106	421	601	699
qcut()	92	146	63	31	66
quality	73	125	106	276	625
.pxd	30	162	29	381	842
privacy	27	293	305	256	215
bears	10	118	116	590	812
adopted	34	254	234	97	565
99.9	47	224	30	424	736
intelligence	28	14	377	179	275
99.5	98	266	269	520	10
final	74	137	306	122	673
fine-tuning	64	151	106	525	628
weekofyear	80	56	447	723	333
exactly	29	28	227	209	472
np.char.add	1	57	41	232	21
,..	47	130	162	174	624
ax=axes	60	155	240	485	12
troubling	17	62	88	161	473
that'll	65	291	246	236	196
dimenions	75	28	306	209	370
internals.py	50	145	118	580	429
y=none	60	155	240	495	162
barb	33	136	208	319	995
99.x	77	151	106	141	750
injecting	38	237	397	732	864
referral	29	28	306	791	472
behaviors	10	227	17	335	354
cgohlke's	34	6	80	197	142
tabs	32	16	420	468	768
py2	46	68	151	259	932
py3	46	221	151	259	932
t.append	47	201	309	727	593
1,000,000	88	160	220	80	54
barh	51	155	195	272	12
need	74	232	246	209	472
keep_observers=true	6	46	345	418	162
instrumentation	28	151	106	128	970
microphone	23	192	365	676	946
800x600	84	195	213	674	353
quartile	51	281	287	10	358
column-specific	3	110	6	354	125
compacted	22	50	100	534	953
vertica	86	68	119	478	126
fileio	86	222	329	691	405
vertice	72	132	273	73	77
tactic	10	241	17	500	215
in_array	1	19	112	677	726
numpy.gradient()	79	101	125	566	13
dictionnary	86	297	163	776	903
numpy.cos	0	55	201	562	726
numpy.cov	16	94	121	782	800
matplotlib.lines.line2d	6	161	90	543	109
7-day	3	193	148	98	347
zcopy	52	19	263	476	855
cv2.cvtcolor	84	219	102	401	427
fullscreen	90	69	46	624	536
aws	83	84	376	670	467
.clear()	6	46	345	418	356
confusingly	10	118	395	791	999
awk	32	16	327	147	383
pyc	30	162	486	247	344
pyd	81	162	486	247	344
stereo	84	192	123	676	946
topographic	61	176	282	626	908
d+1	70	186	25	562	726
eachother	37	31	467	780	851
upset	17	62	88	161	345
multi-variate	79	23	332	761	620
scrambled	29	146	106	631	673
dataformat	86	222	426	663	519
get_group	92	156	78	763	121
ticket_number	44	164	82	204	832
numpy.array_split()	29	85	71	349	807
impression	29	28	227	791	874
objs	1	12	461	776	903
order_no	43	47	231	145	567
numpy.tensordot()	19	294	296	231	512
dgesv	16	94	462	782	800
sub-process	22	85	71	349	431
objc	38	109	29	381	842
1_2	3	93	243	796	984
1_1	98	93	82	796	475
join=	44	2	253	33	176
high-level	38	1	479	317	354
ndarray.tolist()	75	294	10	231	782
mprof	90	187	108	361	473
multipoint	99	288	185	293	744
earned	34	111	252	702	915
matplotlib.backends.backend_qt4	81	88	110	739	889
winner	78	115	215	20	720
1.41421356	15	211	64	364	265
employer	78	150	387	41	423
employee	78	150	445	41	604
b.base	19	220	85	453	29
ax.tick_params	58	112	265	651	599
dodge	51	17	351	42	12
hassles	68	1	305	432	392
mini-batch	28	26	354	135	816
index_list	19	148	206	13	886
spreadsheets	86	91	367	107	86
joint	77	23	332	615	239
legitimate	10	231	395	335	812
joins	3	50	182	354	125
buyer	80	56	445	723	897
dodgy	82	241	378	334	29
+mkl	13	261	348	797	368
set_xlabel()	64	44	90	543	481
wellness	50	157	277	71	469
instantiate	9	109	386	436	359
jointgrid	51	136	195	272	388
exercises	17	62	377	179	866
contain	74	110	37	746	868
x.dayofweek	87	47	493	76	593
computed	74	232	148	98	673
norm.cdf	87	55	4	562	230
pitch	77	292	77	623	210
gotchas	10	254	234	321	565
computes	79	117	185	98	347
computer	83	30	480	785	467
.get_group	43	164	181	460	419
time-efficient	82	50	100	497	463
stats	3	193	430	761	347
u*v	16	186	25	562	800
realign	3	156	65	190	629
state	22	237	397	732	214
beautify	82	241	378	334	327
stata	86	91	367	107	86
masking	40	146	428	166	678
dict.values()	9	12	455	776	903
fig.close()	6	46	345	599	356
newmean	65	0	263	407	887
importance	28	151	106	631	970
zero-filled	71	184	386	519	359
efficiency	82	180	341	537	246
batch_size	0	274	349	539	412
police	78	150	132	550	626
matplotlib.pylab.plot	51	136	208	684	481
snaptocursor	9	109	397	595	699
python.exe	30	162	486	138	383
colorscheme	20	119	259	757	786
stat=	60	155	240	495	12
aqua	23	176	77	623	293
minds	65	291	274	236	345
do_something	52	148	273	471	622
2.x	83	12	455	480	932
a.m.	37	31	467	22	851
reallocates	22	184	153	358	387
interesting	65	231	395	335	345
unalignable	63	83	49	715	39
np_array	52	106	461	471	881
single-dtyped	92	104	23	733	154
self.coordinates	71	19	268	284	855
harmonic	79	292	155	487	942
sub-elements	71	64	10	519	684
scaley=false	58	44	494	642	162
maximize	79	187	185	207	643
normalisation	25	119	320	137	296
3,100	52	19	162	305	159
small-sized	77	29	73	574	668
tread	75	99	421	691	953
aligning	37	290	182	780	526
scipy.ndimage.filters.convolve	84	101	125	166	547
treat	74	99	152	601	141
sklearn.preprocessing.normalize	79	26	125	135	816
ts.plot	58	44	494	418	162
fig.gca()	6	139	494	418	543
oth	64	31	24	780	370
exaple	98	110	454	796	588
diversity	82	1	291	317	866
optimally	82	227	341	497	36
subspace	71	64	127	150	988
pie-plot	3	110	272	161	746
matplotlib.dates	64	35	245	560	184
sensed	84	195	51	592	427
csv2rec	76	54	382	260	698
.bahl	65	237	258	407	215
piqued	17	137	250	525	275
glossary	9	109	152	200	638
iris.target	98	146	454	471	622
np.ndarray.astype()	65	291	227	432	571
harder	82	241	291	334	327
180,000	12	142	220	528	106
6:8	52	0	160	284	776
pgfplots	73	6	278	158	450
1511	50	181	118	24	679
same-length	75	64	10	519	684
ax1.set_ylim	58	194	494	65	162
deliminated	32	110	329	601	519
threshold=	60	155	452	495	285
ax.text()	58	44	90	341	683
35086	58	44	166	706	82
apipe	9	214	140	684	807
idxmin()	92	42	78	13	971
hierachical	3	156	49	354	125
began	23	62	88	161	874
lag-1	51	136	175	761	847
diagonalize	16	94	462	782	800
pandas.to_csv	86	54	275	601	519
right-aligned	32	263	420	468	898
ax.vlines	58	44	494	418	162
a.any()	92	217	375	263	146
x-axis	37	290	166	706	76
item()	92	42	78	105	971
effect	29	28	306	209	305
non-copying	22	85	71	691	282
discouraged	10	231	17	500	215
pyarray_newfromdescr	9	204	29	790	64
onedir	83	38	189	517	889
polymorphism	17	241	291	321	79
header=none	76	199	322	51	189
obstacles	99	14	294	317	79
matplotlib.get_py2exe_datafiles()	47	224	452	424	588
.wouda	65	118	116	407	887
markings	37	31	443	780	851
restore	74	171	388	190	629
sourced	23	110	27	370	519
grpah	61	136	175	158	951
1,100	60	123	173	50	393
)']	43	149	231	460	612
sources	23	254	80	197	564
read_excel()	86	68	275	183	444
skill	17	190	377	396	275
coordination	99	14	294	646	625
logged	23	84	376	184	831
r_value	11	0	180	215	288
iterateoverelements	0	12	295	480	806
2015-12-22	80	258	145	723	645
sns.kdeplot	51	155	195	418	12
k-1	72	186	207	683	306
)'`	47	5	110	343	870
logger	23	29	299	94	67
ought	82	241	246	573	196
scipy.fft	0	292	20	430	547
ample	68	207	159	321	328
devised	35	62	88	187	874
start_time	80	258	26	41	377
crushed	29	28	227	672	473
atol=	57	89	495	559	907
source2	43	200	231	265	708
ldconfig	30	170	244	165	960
5am	80	163	254	723	72
burden	10	50	100	128	246
data_columns	86	68	379	217	865
crushes	88	197	55	337	89
martix	52	19	273	284	622
k-d	53	288	11	293	716
sub-strings	78	297	163	253	798
k-n	72	0	180	215	19
x.shape	1	274	112	677	159
luke's	35	238	187	187	308
martin	35	115	409	20	336
setups	55	174	408	90	651
)')	43	47	170	460	593
sys.executable	81	5	110	199	870
shed	68	231	465	432	571
on_key	0	46	345	44	112
--------------	47	115	58	550	888
arrows	61	31	282	212	276
twitter	23	150	163	370	798
certain	74	232	37	746	868
mkl-cp34-none-win_amd64.whl	13	261	244	138	174
francisco	78	250	132	479	995
warmer	29	13	227	631	473
xplusy	98	281	454	587	984
read_stata	86	68	367	183	698
-array	75	148	273	73	77
skimage	84	230	428	166	427
multipolygons	68	176	465	646	293
index_column	44	164	82	442	832
bottom_depth	43	200	82	558	708
.info()	92	134	202	183	188
sparse=true	1	294	112	232	470
axes.plot	6	46	345	418	162
datecol	43	72	309	265	708
intersections	99	288	11	315	138
scipy.interpolate.univariatespline	53	10	238	720	396
pull-requests	68	173	359	604	919
coders	17	190	377	396	275
duh	65	291	258	236	345
monetary	57	89	100	788	970
fftfreq()	79	275	148	285	62
randint()	93	275	226	641	676
set_title	58	44	90	543	481
17,000	3	160	220	94	54
offset	37	290	443	207	76
instinct	65	118	116	590	669
user_id	78	93	82	390	965
3d-numpy-array	61	176	128	623	293
replots	90	187	388	572	978
cleans	22	117	27	458	417
os.walk	81	162	486	247	344
23.5	15	256	61	196	980
23.4	15	256	61	196	980
23.3	15	256	61	196	888
23.1	15	256	236	514	980
23.0	43	78	82	133	272
systemerror	63	244	283	553	39
scipy.linalg	16	94	462	782	800
discretization	77	151	106	631	762
5-element	75	64	10	519	684
python-3.4.3.amd64	50	145	118	168	204
artists	6	161	90	543	109
additions	82	180	341	537	246
swf	73	125	248	276	304
utility	38	6	329	317	79
pb	74	106	397	684	868
networking	28	14	267	710	841
tidied	27	62	88	458	417
tidier	82	241	378	573	29
25.05	67	213	95	185	51
count_dic	43	93	82	145	965
data.reshape	1	57	41	677	280
frame.apply	87	55	493	76	593
subjective	10	190	307	590	812
pj	72	186	25	683	773
pk	72	130	25	174	624
conventions	10	237	17	200	215
brick	77	14	267	39	841
1.55358	63	83	283	715	311
truncation	57	231	8	654	568
ax.collections	25	161	208	485	109
converter	32	54	275	601	444
cells	99	146	454	646	509
auto-adjust	37	290	467	780	370
hosting	83	84	69	670	637
signed	70	100	325	86	22
numpy.fromfunction	19	214	140	684	512
720	12	279	488	111	175
piece	27	137	459	15	421
matplotlib.text.text	6	161	90	543	481
intersects	33	288	287	719	138
devise	68	137	37	525	868
oversample	77	151	339	631	762
_different_	79	227	106	631	970
set_cmap	25	161	320	49	845
eom	80	56	254	723	897
99.99	60	194	269	528	221
chromosome	78	286	243	390	965
sel_id	52	220	198	476	714
~30	88	197	73	337	217
new_vals	1	0	112	232	726
offensive	34	190	307	590	812
121:03	67	213	95	185	51
suspiciously	32	110	163	482	798
lc_all	30	166	452	764	862
600141	78	200	231	81	12
df_grouped	43	47	493	76	832
single-precision	57	100	325	86	22
upsample	80	29	299	77	333
offshore_umgeni_deep	52	19	162	133	888
fig.set_size_inches	58	243	18	16	721
cut-off	77	266	443	207	668
mathtext.default	58	166	452	764	862
~3x	88	180	55	337	89
sphinx	73	6	278	91	127
using	74	232	246	209	36
z-index	75	64	10	73	77
portion	74	263	459	122	421
f77	96	174	408	650	455
np.add.at	19	42	296	13	886
end-of-line	32	16	420	468	768
samething	1	19	112	231	726
todays	80	56	299	723	701
pd.to_datetime	43	273	309	727	852
similarity	28	26	185	293	11
mathtextparser	64	232	306	122	370
nun	71	64	268	680	359
andre	35	207	371	236	345
sparse-matrix	38	214	125	691	564
update2	27	137	459	15	421
update1	22	171	108	361	473
datetime.timedelta	80	35	245	678	920
ones()	1	64	112	231	981
segments	99	288	282	212	138
strvector	74	99	275	601	141
suplots	37	136	383	391	847
presents	74	117	152	58	305
unroll	40	50	341	392	219
mingw-w64	96	45	5	650	634
teaching	17	43	377	451	803
ndarrayobject.h	50	145	277	381	842
1d-array	75	64	10	519	684
updated	65	118	116	407	887
connects	61	13	175	329	83
updater	22	171	397	436	161
updates	22	171	388	190	214
matplotlib.pyplot.show()	90	46	345	599	356
\pandas	50	145	118	138	204
skills	17	43	377	396	98
df_training	3	146	65	155	673
tifffile.py	84	222	123	607	405
2013-01-01	67	260	12	372	958
convenience	38	6	291	200	79
2013-01-02	67	260	12	2	24
groking	17	43	227	590	803
2013-01-06	80	163	254	723	897
cumulative=true	51	136	63	557	780
g.epsilon	98	148	273	476	714
n_jobs	79	26	293	135	1
force	74	232	246	190	629
phyton	17	43	377	396	803
warns	10	231	389	716	568
heterogenous	75	99	421	663	843
phstab	3	110	497	534	984
goto	96	174	408	90	729
even	29	28	246	209	472
asin	11	55	493	129	593
maverics	85	276	233	198	380
tipo	43	47	179	181	164
df.duplicated	44	164	181	181	895
ax.set_autoscale_on	58	44	452	642	162
evec	52	0	263	284	855
asia	78	285	323	742	765
multiplot	6	136	175	732	526
lights	29	13	306	432	36
tips	68	254	465	432	343
ever	29	28	246	209	472
compactness	82	50	341	537	122
deemed	34	190	307	590	812
intercepts	37	290	467	780	668
refinement	53	6	339	525	396
deposition	33	176	135	617	210
bash_profile	30	122	478	159	181
aren't	10	231	159	209	999
idiomatic	82	241	378	573	29
last_valid	35	238	442	699	308
kington's	35	238	187	187	308
numpy.linalg.norm	16	178	121	673	652
permit	10	231	17	691	305
ft2font	81	244	94	553	584
regr_magic()	9	214	295	684	231
numpyarray	48	219	206	471	681
re-render	6	46	388	572	356
whatnot	38	50	246	732	118
\t\t	32	67	256	133	475
campaign	78	93	445	41	604
.clip_upper	43	47	223	290	567
elude	17	62	88	161	746
pylab.show()	90	46	345	599	356
moral	10	43	395	500	812
welch	79	101	125	196	989
circumvent	29	231	227	173	472
particularity	61	176	175	646	908
fontsize=	58	44	452	642	890
orb	34	254	234	302	565
arms	82	241	291	334	327
tabulated	86	110	329	219	519
paramater	64	23	226	641	683
pairplot	51	136	195	272	847
overhead	55	180	100	537	246
calm	10	43	317	396	812
map_async	22	85	71	349	807
python27	30	261	486	159	960
interruption	22	187	108	361	248
calc	74	266	148	98	347
armb	33	176	114	617	725
lexsorted	40	104	49	587	154
np.empty_like	1	57	41	232	21
advance	68	207	465	432	343
composite	74	232	128	110	36
re-bin	37	232	246	190	629
log-log	61	136	175	22	614
root.mainloop()	22	187	108	361	248
eternally	68	190	465	432	343
pivoting	3	156	6	354	125
2014-12-10	67	260	12	2	24
nx.draw_network	6	102	280	44	910
fontsizes	37	290	166	207	76
snr2	0	106	295	44	231
ax2.bar	60	155	240	495	12
np.isfinite	87	52	198	181	714
orignal	3	232	6	190	629
defer	17	43	377	500	118
m-x	81	15	327	540	383
tick_bars	80	200	26	727	377
involve	82	241	341	497	305
hline	6	161	208	777	481
cursors	90	69	46	380	384
cursory	17	62	143	302	142
vcvarsall.bat	13	261	94	650	634
beamdeflection	0	275	295	684	231
playerid	43	200	231	204	272
image_box1	81	204	29	790	64
ethnicity	78	150	252	584	604
answer	35	238	187	187	216
my_list	75	12	461	471	806
1750	33	176	135	617	298
title()	6	46	90	391	481
crowding	37	290	467	780	851
timedelta	80	35	245	678	920
m-1	72	186	25	683	756
hard-code	64	232	246	209	472
m-2	71	64	127	683	306
thankyou	35	207	371	205	767
x.mean	87	57	121	232	608
curiosity	65	291	258	236	345
cursor=	6	38	46	764	384
data.split	76	105	487	177	244
mimetype	73	144	248	147	405
purchase	78	56	445	41	67
1280	12	142	162	528	175
capitalise	3	134	93	155	622
stand-alone	27	293	403	420	579
follwing	29	137	459	15	156
maintain	74	232	182	548	305
8760	80	78	77	528	272
panda's	92	156	78	354	971
a.npy	47	105	357	283	736
playtennis	78	56	445	204	832
operations	75	50	341	756	382
deck	23	85	294	110	953
profits	74	266	114	94	868
my_data2	71	274	349	539	412
set_xscale	58	44	494	341	599
numba's	55	174	422	90	761
assert_array_almost_equal	10	227	62	791	782
responsive	90	187	108	624	248
blanked	29	28	306	791	673
scoring	28	26	354	135	816
x-coordinate	33	281	287	719	358
,	74	28	306	209	36
better	82	241	378	573	29
differently	74	231	152	335	36
naturalnamewarning	63	68	119	478	824
overcome	29	28	227	173	568
renko	61	136	175	22	466
donors	78	93	243	390	705
zero-dimensional	75	106	421	519	295
fixation	98	146	454	94	509
weakness	38	1	479	317	354
downs	22	13	100	39	463
io.stringio	76	199	286	283	413
type1cm	13	170	50	165	482
cc1plus	63	244	283	553	323
resizing	22	171	388	207	526
singularity	57	10	8	654	610
-set	72	130	431	174	624
-ser	65	118	258	407	887
decorator	9	109	422	790	761
hhmmss	80	35	26	781	377
grammar	38	6	390	78	354
_set_scale	63	161	383	616	477
blas-devel	13	170	50	104	482
antialiased=false	60	155	240	193	285
domainmax	64	44	90	78	683
scipy-0.10.0-py2.6-linux-x86_	50	259	277	303	469
went	29	62	88	39	874
nx.draw_networkx	6	46	345	418	162
inserts	74	117	152	58	638
ncoord	52	132	273	284	77
successively	3	297	497	534	953
principles	34	254	17	321	354
itemset	78	150	163	321	328
doug	35	238	326	187	308
humidity	80	29	77	182	210
extract	74	232	37	110	868
contend	17	190	116	590	812
prange	55	174	422	537	219
rcparam	73	166	134	764	862
numpy.random.uniform	93	123	193	628	361
grid()	58	44	494	777	683
start2	98	148	273	141	750
restricted	74	232	17	209	999
start1	98	52	273	141	750
df2.index	44	134	26	727	827
content	74	110	329	110	508
csv_file_object	76	199	30	283	736
y_pred	1	275	349	539	412
linearoperator	16	94	462	455	800
find_peaks_cwt	53	101	125	566	13
apply_func	0	237	226	684	231
turning	74	13	143	458	526
linear	79	10	324	487	620
interchange	74	232	246	209	141
aborting	47	224	58	436	588
04:00	67	260	12	372	958
yesterday's	80	258	148	520	377
libopenblas-dev	13	170	211	104	482
starts	22	117	306	58	214
signature	0	204	226	790	64
5000x5000	88	195	213	674	353
laggy	68	241	274	334	327
url's	3	110	6	107	519
grade	78	150	430	149	423
cp1252	76	16	190	477	413
peculiarity	74	99	17	601	141
disappearing	37	31	467	780	577
enumerate	19	12	461	480	806
polygon	99	288	11	315	138
grads	17	14	377	396	275
pragmatic	34	173	359	590	812
vm	83	30	376	670	467
1a	78	281	252	338	646
tensordot()	82	180	55	497	512
model.params	47	224	93	155	622
twisted	23	85	71	349	431
step-size	79	10	324	487	13
-th	72	132	273	73	77
zeros	71	263	127	680	509
twister	93	174	193	628	507
rcsetup.py	50	145	118	483	927
horrendously	22	187	100	497	463
myfun	0	46	295	44	231
ontype	6	46	345	44	112
new_positions	71	64	268	73	77
time-indexed	3	29	299	94	67
virtualenvwrapper	13	128	5	159	181
noodle	27	13	305	39	473
somewhat	82	241	395	334	327
peculiar	29	231	395	335	473
symptom	29	28	306	791	473
100gb	88	182	373	549	236
fromfunction	19	214	295	684	782
xtimesy	98	281	454	587	984
1m	88	160	220	80	54
bigrams	78	286	163	253	798
silly	65	291	258	236	345
spoiled	17	43	88	396	803
gnuplot-py	38	1	377	321	354
subplot	37	139	90	391	388
usages	38	85	294	349	628
x^2+y^2	11	234	242	531	56
bounces	90	187	108	624	248
scipy.stats.nanmean	87	193	121	470	608
7th	98	263	254	796	428
churn	23	150	437	479	604
numpy.dstack	84	219	296	278	470
data-	61	136	175	22	625
miliseconds	80	197	73	781	920
dep_3	29	28	349	539	509
data=	76	123	173	50	736
chess	61	176	282	757	786
paris	80	260	254	581	272
0.375	15	211	263	364	265
data1	47	134	82	556	622
data0	47	130	349	556	754
data3	47	110	30	556	588
data2	47	134	349	556	622
x-ticks	37	290	166	706	76
nonzeros	75	64	127	455	788
data\	76	199	286	51	413
scalarmap.to_rgba	60	102	418	129	910
typ	47	105	93	177	764
mpltools	64	6	390	78	450
broadcast	75	64	154	231	436
scipy.fftpack.fft	16	94	8	562	800
get-go	23	1	27	370	161
dataf	43	134	158	755	260
dict{k	0	106	295	743	8
??????	47	105	93	127	764
definitely	82	241	274	236	345
datay	72	148	206	73	77
nbytes	70	204	74	332	681
parenthesis	32	263	420	403	768
mailing	34	173	35	604	208
datas	74	29	77	110	519
20-30	88	197	73	574	217
reduce()	19	12	455	480	806
interger	75	99	317	605	979
ending	80	263	306	458	214
attempts	29	28	272	161	457
stepping	40	13	143	534	526
get_legend_handles_labels()	6	161	90	543	481
downscaling	84	195	128	674	353
precedence	10	104	198	113	135
d.month	43	47	68	290	593
cross-platform	55	1	69	317	564
libary	38	26	354	761	816
salespandas	43	273	309	727	852
qprogressdialog	90	69	32	624	112
20,000,000	88	160	220	80	54
1.9gb	88	283	373	549	236
exports	86	125	329	107	519
above	27	137	459	15	421
colorful	61	119	175	757	786
80mb	88	182	373	549	236
2000-03-01	78	258	82	463	377
scipy.fftpack.rfft	70	101	20	332	547
np.round()	57	89	201	788	979
tf.reduce_mean	87	19	4	770	726
"]]`	43	17	223	4	567
bat	65	13	143	39	118
bar	51	136	195	22	847
bas	35	238	409	187	336
baz	78	200	93	42	12
microscopy	84	192	128	623	293
bay	61	13	282	39	589
bag	23	271	163	425	798
bad	10	231	395	500	812
rockssep	50	145	118	734	679
duck-typing	9	109	331	594	354
18	12	279	319	111	465
bal	43	200	82	204	708
bam	23	110	163	110	798
flagged	34	118	307	791	216
bah	65	291	258	236	345
datetime.datetime.now()	47	201	346	177	879
pyside	90	38	46	635	810
total_seconds()	92	35	245	560	920
df2.columns	44	2	260	33	827
01:15	15	213	236	514	980
sinks	99	13	143	39	563
brazil	78	200	132	463	765
scipy.linalg.eigh	16	94	462	782	800
enthought	83	128	5	461	637
inappropriate	10	231	395	691	215
constant-time	40	184	153	691	122
shaved	82	180	22	574	89
filename	76	199	286	283	736
reassigned	9	237	158	436	673
shaves	88	197	55	337	89
tolerance	57	227	317	559	907
booted	83	84	376	184	467
mplot3d	25	6	278	158	450
programatically	64	232	246	110	370
bincount	19	42	296	13	886
restricting	74	146	37	587	526
ignorance	17	43	377	451	98
ellipticity	77	23	332	511	210
herring	65	231	395	631	812
1*	11	234	4	770	743
eyeball	28	151	106	631	970
matplotlib.animation.funcanimation	6	161	345	543	481
restarting	22	15	108	540	248
mdurant	35	238	409	187	336
contribution	35	190	371	205	216
confronted	29	231	88	173	473
ld_library_path	30	122	478	159	181
grey_image_as_array	75	148	206	73	77
exemplary	27	137	459	15	421
:::	63	224	283	424	39
cax=cax	60	155	240	418	162
foobar	10	115	93	42	475
16g	85	30	480	785	236
cobble	27	137	403	420	579
deciphering	17	62	88	161	803
16x	88	142	55	337	89
autolocator	58	44	166	341	184
test.cpp	30	170	244	165	588
16s	88	160	220	80	217
df.d	52	52	68	290	154
targeting	83	1	80	317	564
numpy.diagonal	19	42	296	13	512
three	74	232	159	746	36
dataframe.describe()	92	193	125	703	392
geocode	23	150	163	370	257
over-ride	75	109	331	594	509
threw	29	28	306	791	874
readerid	78	93	82	558	965
plt.ylim	58	138	494	65	388
.get_paths()	52	0	263	485	855
theorem	79	292	20	394	547
itertools.zip_longest	19	12	461	480	806
multithread	55	174	408	90	651
2012-03-31	67	260	12	2	24
168	12	279	488	111	132
169	12	267	58	111	132
164	12	256	488	196	432
165	12	279	488	111	132
166	12	279	488	111	465
167	12	256	488	751	132
160	12	279	488	111	106
161	12	279	488	111	132
162	12	181	488	751	269
163	12	267	488	111	132
distorts	77	151	106	626	762
gracias	35	207	274	205	767
slx	75	106	421	471	979
is_monotonic	92	104	78	105	130
originate	29	231	143	173	568
slr	98	148	273	73	77
asign	74	110	454	746	622
matplotlib.path.path	64	161	208	543	854
points_inside_poly	46	221	151	327	380
suppose	74	232	459	209	36
ode15s	79	22	324	566	610
balance	28	266	106	574	246
study	28	14	377	525	328
spawn	22	85	71	349	431
mexico	78	200	132	463	765
factorize()	65	238	424	414	887
kwarg	64	185	226	641	683
string-valued	3	99	245	781	843
{{}	52	0	180	215	19
mediumseagreen	20	155	259	495	285
{{{	0	85	397	44	807
op's	10	118	187	590	308
112	12	279	488	751	465
speculating	82	43	341	590	246
roland	35	238	409	187	336
hahah	65	291	258	236	887
grows	88	283	100	574	387
3rd-party	13	170	211	197	482
index_tricks	19	294	296	291	601
col_name	43	72	68	265	462
declarative	38	6	291	317	628
bloomberg	86	116	119	581	126
total_data	43	258	26	204	377
he'll	82	241	80	500	196
thoughts	68	28	465	432	343
consumed	88	283	373	549	226
stimuli	78	250	77	182	532
store.select	43	134	379	217	824
smoker	78	200	252	204	832
nlog	89	186	207	261	90
claims	29	28	152	791	638
paradigm	82	241	291	200	29
nlon	72	102	418	305	175
left	37	31	443	191	964
dataframe.hist	51	161	226	641	481
just	29	28	246	209	472
sentence	65	118	163	482	798
3's	98	146	454	141	428
fft's	77	292	20	430	547
unfair	10	231	395	153	812
shocked	17	43	274	236	803
plug-in	90	187	178	540	818
component-wise	75	64	154	150	981
psychopy	29	171	306	791	473
nicolas	34	254	234	302	565
candidate	46	13	359	604	208
infinitely	77	13	114	631	762
agile	23	1	69	317	866
macport	13	128	211	104	482
affinity	16	26	354	135	816
axisbg=	58	155	240	495	285
datestr2num	80	35	245	560	920
whichever	74	232	246	190	629
seperate	74	110	6	110	36
2.4.4	83	206	151	202	380
background	20	31	259	757	786
ajcr	35	238	326	187	336
p_value	43	130	82	181	591
-_-	17	291	88	236	345
manual	38	254	234	302	565
detections	77	146	317	94	509
2008-01-01	80	258	26	2	24
notorious	55	283	100	768	564
201	12	279	488	528	106
per-user	30	259	244	165	960
formulas	79	91	367	744	610
paragraphs	34	254	116	321	328
absent	74	263	306	746	655
precomputed	16	94	185	293	716
dense	16	94	333	455	788
arguing	65	43	395	236	812
hist()	51	136	63	272	780
localhost	30	84	376	184	831
.apply()	92	156	78	105	121
incidence	77	250	114	623	210
colormap	25	119	320	49	296
before-hand	64	232	246	207	370
statistician	17	43	377	396	803
sift	84	230	128	166	353
bid_price	98	258	82	796	377
super	82	241	274	334	463
unbinned	77	23	63	511	780
"]`)	20	17	223	4	567
jsonpickle	86	222	329	317	564
showpopupmenu()	90	220	317	605	602
commit	46	221	124	604	435
sprites	99	288	128	315	138
definetely	88	241	100	521	463
erro	29	28	306	715	473
lied	29	118	116	791	905
comparatively	82	180	479	497	354
lien	78	56	351	479	400
cascaded	71	64	213	519	95
parsing	86	54	275	601	444
lies	29	13	306	173	589
normalize	74	232	63	98	780
p-values	79	23	332	638	11
dflist	44	134	260	33	903
chime	34	190	307	604	208
substitutions	79	186	8	744	610
20+	88	160	220	80	54
annoyance	17	43	377	500	327
pandas-	3	156	6	354	125
amazingly	35	207	274	497	767
imin	57	194	269	141	221
subdivide	77	29	339	646	340
approximate	79	10	324	487	970
influencing	37	31	443	191	725
v.index	60	155	240	42	12
timestamped	80	29	299	77	67
offering	17	43	396	321	665
build\	50	145	133	138	204
speed-ups	55	180	343	537	219
229	47	224	58	424	736
228	1	274	162	424	436
227	80	142	73	528	931
226	12	267	58	111	132
225	12	267	488	111	132
224	12	279	319	320	159
223	12	279	319	320	465
222	12	279	319	320	465
221	12	279	319	320	465
220	12	160	220	528	106
grid_forget()	6	46	90	572	481
numpy.random.choice	93	123	193	628	361
index.get_loc	47	224	461	424	622
builds	83	206	80	474	564
3.7	15	272	61	225	544
attached	27	137	175	122	421
3.4	85	276	42	685	380
buildd	50	259	277	303	469
gdf.aggregate	87	55	295	562	726
\d+	32	51	487	151	244
3.2	85	272	61	225	544
stages	22	85	294	94	953
df.age	43	52	68	693	437
diagnose	27	293	403	420	579
obtainingparams	0	275	295	684	231
blocksize	1	142	268	139	60
3.1	15	272	61	225	544
mulitply	71	146	127	150	62
mulitple	74	160	497	534	36
sub_array	75	106	10	231	684
errorbar()	51	136	208	272	481
floating	57	89	325	788	22
1e-10	57	89	269	559	907
vista	85	276	233	393	858
1e-12	57	89	8	559	907
1e-15	57	89	325	559	907
1e-14	57	89	269	559	907
1e-17	57	89	8	654	743
1e-16	57	89	8	559	907
y=k	19	148	418	471	77
generally	82	241	17	500	999
handed	17	43	395	334	354
.rank	44	164	181	700	419
kepler's	79	186	242	487	942
y=x	61	102	287	777	276
misinterpreted	65	118	258	407	887
a11	72	130	431	174	624
a10	48	105	74	53	764
a12	3	130	224	449	965
boundscheck	55	174	422	716	761
voodoo	17	43	88	334	803
.fillna()	92	156	424	414	691
neuroscience	28	1	377	321	275
jones	78	115	438	20	423
montesano	35	207	371	205	767
apology	65	118	307	590	216
daily	80	116	299	77	67
'])]`	43	47	231	265	708
y=1	33	281	287	719	358
y=0	33	31	287	719	358
y=3	60	281	287	719	358
y=2	33	281	287	719	358
y=5	98	281	287	719	358
y=4	60	281	287	191	358
eumiro	35	207	326	187	336
df1.index.time	11	201	180	215	437
shop	78	56	445	41	769
my_dict	52	148	461	471	501
subindices	75	227	317	335	782
recalculation	37	31	388	572	214
peruse	64	6	234	78	638
mild	17	43	377	396	275
mile	68	197	250	39	345
mill	35	207	371	205	767
abundant	10	254	234	321	999
5.67	15	211	92	514	980
hdf4image	76	144	30	177	413
filling_values=	76	199	286	177	413
50826113000	15	211	231	71	255
technique	28	151	428	525	79
_that_	6	161	388	572	370
amaze	17	207	274	205	767
summarised	27	137	6	15	421
unpleasant	82	241	395	334	327
overund	43	72	430	581	708
.dylib	30	259	94	247	960
permissive	38	1	291	500	215
accession	78	110	243	390	410
request_type	78	56	445	41	279
1620	80	258	254	77	931
tridiagonal	16	94	462	455	800
dftrain	78	110	93	155	410
ts.head()	29	28	227	715	473
materialize	75	184	153	358	387
dim	71	64	268	305	981
ghostscript	73	125	248	91	304
did	29	28	410	791	457
die	22	187	108	361	248
dif	87	52	68	770	985
dig	17	62	143	312	118
dia	16	94	333	455	788
dic	3	297	461	776	260
diy	82	241	378	573	29
overlain	61	176	282	617	908
div	92	39	78	105	62
mann-whitney	28	23	185	638	11
overlaid	61	136	175	22	847
dir	30	162	478	165	870
cross-correlate	77	101	140	98	347
work	29	28	410	209	472
maximization	79	22	324	566	13
max_len	87	57	180	50	591
circle-like	99	288	282	646	138
bacterial	99	14	70	295	563
re-add	6	46	388	190	629
ptf77blas	96	259	277	117	469
favour	82	180	17	500	215
ampersand	22	214	397	403	135
p.draw()	6	46	345	491	356
completness	86	222	329	260	405
jumps	77	13	485	574	214
ax2.plot	60	155	240	418	890
asarray()	9	109	331	594	386
elses	34	137	227	590	472
decipher	17	43	395	659	327
earthquake	33	176	77	623	293
wait	65	291	250	39	915
handle	74	232	152	209	638
non-performant	82	50	341	497	463
.astype	70	273	309	727	522
institute	23	84	35	461	637
20ms	88	197	73	574	89
martijn	35	238	326	187	336
example.txt	76	199	30	283	754
broken_barh	51	136	245	391	875
20mb	86	222	329	549	236
lagbin	44	134	93	204	832
massage	86	137	275	110	953
dataframe.index	92	104	23	733	92
spatially	77	250	339	646	744
bivariatespline	53	101	238	720	396
fig.tight_layout()	58	46	494	418	356
xerr	51	155	24	272	926
flexibility	38	6	291	78	628
licensing	28	227	69	128	970
everybody	35	207	371	205	336
.place	52	72	68	290	622
endtime	78	110	26	390	410
additive	79	23	332	511	531
perf	82	180	359	537	246
sharper	77	292	467	430	303
'``	76	39	1	285	502
perm	1	294	296	232	601
france	43	200	132	463	765
stylesheet	73	166	46	380	384
sharpen	77	13	428	429	353
checkout	38	6	359	604	208
sympy.sin	57	89	201	664	743
----------------	47	115	162	550	888
vazquez-abrams	65	238	187	187	308
sharing	37	232	159	391	526
fine-tuned	82	180	55	537	246
appending	3	50	497	534	68
acceptable	82	241	246	497	999
mtrand.cpp	50	145	118	514	679
numpy.ndarray.flat	19	294	153	231	512
----	47	115	58	550	888
3:8	52	19	271	284	855
enthusiasm	34	190	307	590	328
3:2	52	19	160	284	776
3:3	52	19	160	284	776
3:1	52	19	160	207	449
slurping	22	50	100	534	953
3:7	52	19	160	284	776
3:4	52	19	160	284	776
3:5	52	19	160	284	776
fly	74	50	294	691	629
rotational	33	14	114	710	697
tokyo	55	174	408	90	651
deformed	99	176	282	617	908
avoiding	82	50	341	537	526
ulp	57	89	325	141	397
standalone	83	84	178	158	564
soul	17	62	377	396	275
soup	86	68	275	478	126
subplots=true	51	139	195	324	362
9th	98	263	254	796	428
arrive	29	29	73	77	931
bites	83	30	250	39	180
linregress	19	214	140	684	231
_any_	10	237	305	732	215
claim	10	118	116	97	999
input1	98	78	162	133	272
drawed	37	31	443	542	214
predict	28	26	354	135	816
agent	78	150	445	41	423
mylist1	75	106	317	605	135
your_array	1	134	202	471	881
mylist2	75	106	421	605	135
c++11	55	174	29	90	651
berak	35	238	326	187	336
wheezy	85	276	233	393	858
non-interactively	90	187	108	361	248
ewert	35	238	326	187	308
plist	52	0	263	284	855
nyc	23	150	132	149	293
21:56	67	157	64	296	837
square-root	79	10	324	487	610
tolist	9	12	455	776	903
staying	82	13	341	548	526
df.fillna	44	39	424	414	691
critics	78	150	445	479	604
np.nansum	87	55	121	673	608
nosetests	30	170	244	106	960
8-10	88	160	73	80	54
arr.flat	1	57	160	476	974
adash	52	220	158	476	757
numpy.fromstring()	86	222	382	260	405
23:59	80	260	12	372	958
gshhs	99	176	135	623	293
theano.scan	75	294	10	231	650
6th	98	263	254	796	428
borrowing	38	238	187	187	308
23:56	12	279	284	133	272
23:55	80	260	12	372	931
pandas.apply	3	156	140	105	971
q	72	186	25	683	756
switch	74	232	246	190	629
a*exp	11	234	242	531	56
get_label()	64	161	90	543	481
navigationtoolbar2wx	6	69	46	380	384
hermval2d	79	275	140	684	231
gee	68	207	371	432	328
cutoff	77	266	148	141	668
gradual	28	151	106	631	195
intersect1d	19	42	296	13	512
fig.suptitle	58	243	18	16	890
df.eval	43	52	68	181	985
pre-processed	23	125	329	110	127
argued	10	118	395	335	812
linalg.det	16	94	462	782	800
'])``	43	47	181	265	987
single-level	3	156	49	354	125
n-by-m	71	64	268	527	756
jiting	55	180	422	537	219
n-by-n	71	64	268	738	988
self.update	43	47	68	290	61
thank	35	207	371	205	767
n-by-k	72	186	25	683	756
low_memory	92	185	322	51	130
xrange()	93	12	455	480	806
gen	47	180	55	337	89
digraph	99	297	280	158	329
gem	17	291	274	236	345
thanx	35	207	371	205	767
tweets	78	150	163	479	798
mail	34	173	35	604	915
main	22	171	306	173	214
thans	35	207	371	205	767
views	40	184	153	691	122
impulses	61	136	175	158	854
matplotlib.patches	61	161	208	777	109
yticks()	58	44	166	341	184
'])`)	43	72	309	265	987
developments	23	1	69	321	275
possess	74	50	37	663	359
outweigh	55	50	341	537	246
obviates	40	50	10	587	122
overmeire	35	238	409	187	336
directories	30	162	486	247	344
proteins	78	286	163	425	798
windowsize	82	180	100	139	463
decrementing	57	266	485	574	975
redraw	6	69	345	572	373
n-by-1	71	64	268	150	684
n-by-2	71	64	268	519	684
num_points	1	274	268	305	981
make-model-variant	78	250	132	463	604
classifying	28	26	67	135	816
abnormal	23	187	317	361	214
0.9.2	46	221	124	202	435
inhomogeneous	75	99	421	663	843
gird	61	31	175	780	851
0.9.3	46	221	124	331	435
fisher's	79	23	332	35	531
girl	17	28	272	479	345
requesting	34	173	35	604	142
living	17	241	395	500	327
ax1.plot	60	155	240	418	12
pyarray_simplenewfromdata	9	204	29	790	64
7.0-2	85	45	264	513	858
rational	57	89	8	788	610
radiobuttons	90	69	46	624	384
dominate	28	266	106	574	246
correct	29	28	227	209	472
uniq_ids	88	142	173	139	60
ypos	72	102	418	485	77
california	78	116	132	623	293
forbids	70	204	29	790	64
fromtimestamp	80	35	245	781	920
python3-scipy	13	170	50	104	485
trtab	52	0	273	284	855
out-of-the-box	38	1	291	317	79
reimplement	38	1	479	744	219
annotation_clip	64	44	90	641	683
lat	33	176	135	617	298
handletextpad	58	138	90	651	683
cluster_id	78	93	243	390	965
logspaced	37	290	467	22	340
df.mean()	92	193	424	414	375
lap	47	224	30	204	588
yield_pct	43	72	309	265	987
numpy.complex64	75	184	10	519	681
numpy.zeros()	75	294	497	231	782
df.dropna	44	164	181	700	895
sys.modules	81	88	110	739	584
pcolor	25	136	208	49	845
mining	23	14	354	179	866
time.time	55	147	55	537	246
scipy.spatial.distance	53	214	185	293	716
geo-referenced	84	195	128	674	293
a.columns	44	134	461	290	827
blacklist	75	297	246	209	903
np.savetxt	76	54	382	260	698
undoubtedly	68	190	116	590	328
here's	27	137	459	15	421
plt.clim	60	46	452	642	162
pandas.read_json	92	68	275	183	322
1-point	74	281	443	746	214
sean	68	207	371	205	328
t_id	78	110	243	712	984
lower-right	37	31	443	191	964
occupies	88	283	373	484	236
quadratic-time	82	50	341	537	246
dash	32	16	24	477	664
winding	3	263	182	587	999
dask	38	50	426	611	431
filter_list	92	106	317	186	602
dtu_topic_split	43	200	93	145	764
pd.options.display.encoding	32	16	190	477	413
occupied	37	283	373	549	236
albedo	77	23	77	623	210
stopgap	29	146	306	680	509
memoryerrors	88	283	100	549	236
+22	52	0	263	284	855
bezier	61	288	282	212	138
upgrading	46	221	151	681	284
boost.python	55	174	29	790	455
trade_date	70	273	93	781	622
channel	84	195	51	592	353
kasra	35	238	326	187	336
trace	27	293	305	420	579
normal	74	232	246	209	239
track	22	13	143	39	589
c99	55	174	29	86	455
timeit	19	147	55	337	89
linalg.inv	16	94	462	782	800
satisfying	98	146	317	605	602
tract	78	150	445	479	604
_as_parameter_	9	109	331	594	386
in-situ	75	184	158	476	757
especially	82	241	17	500	463
joblib.parallel	55	85	71	349	431
gracefully	29	231	152	716	40
info.get_g_type()	47	224	180	424	888
triggering	29	231	389	716	473
conditionals	75	227	300	457	135
precise	10	151	106	631	999
inputing	3	110	6	110	673
moderator	34	190	307	702	216
quradate	43	164	181	700	895
ft2font.h	50	244	283	553	323
eucledian	99	288	185	293	347
boundaries	99	288	339	646	138
either	74	232	246	209	472
na=false	43	47	68	181	708
ranking	78	146	445	587	604
x_lims	52	0	21	215	288
6.50	67	213	95	185	51
contracts	80	56	299	723	897
0:200	52	219	263	401	288
designated	74	232	37	746	161
repr	70	224	202	183	508
repo	46	221	124	604	208
repl	90	15	189	540	818
distinctly	61	250	175	757	779
conjunction	64	6	278	158	370
numpy.random.normal	93	123	193	628	239
gtk	90	38	46	635	810
n-element	71	64	268	519	684
median	98	193	148	10	347
clip_lower	87	291	295	642	655
4402	52	52	180	215	437
tfidf	16	26	354	135	816
threading	55	85	71	349	431
stupid	65	291	258	451	98
finishing	17	62	250	39	180
6.2	85	272	480	225	544
caller	22	61	397	358	282
set_title()	64	44	90	391	481
.xaxis	58	44	166	341	480
invalidating	35	118	116	97	216
years=1	60	201	173	424	162
envisioning	17	43	377	334	803
enumerates	3	93	65	390	125
mean()	92	193	78	105	121
forecast	80	29	299	723	67
gage	78	250	77	182	210
0.023	15	211	269	606	10
enumerated	3	297	454	587	903
numpy.histogram2d	51	136	63	557	780
parens	32	263	420	403	768
rolling_mean	92	193	447	614	121
parent	22	61	397	436	807
kool	35	207	371	205	767
merged2.fcast.plot	58	44	195	418	162
signaled	57	78	325	574	272
condensing	27	137	305	420	345
gregorian	80	35	245	781	920
reporting_periods	60	123	173	642	162
drop_level	92	185	138	641	130
tractable	82	241	378	573	29
.how	47	224	162	424	764
trader	78	56	445	41	347
video_id	44	93	65	390	965
approximative	82	137	459	525	421
0.02s	88	197	55	337	89
etopo	61	176	259	757	908
remake	3	232	388	190	629
traded	78	116	299	581	720
generalisation	28	151	106	150	988
stretches	37	31	467	207	851
maintainer	34	173	35	604	142
12:01	67	260	12	372	958
12:02	67	260	12	372	958
12:03	67	260	284	133	272
terse	82	241	378	334	29
qpolygonf	75	106	10	691	141
unittest	81	227	110	457	183
3000x	11	234	4	196	743
maintained	38	171	80	202	305
grants	23	85	294	94	67
stretched	37	31	467	207	449
numpy.select	87	52	198	605	714
non-uniformly	53	29	339	720	340
cramped	37	31	467	780	851
unusual	10	231	395	335	999
non-system	13	170	244	165	482
marc	80	163	254	133	897
encryption	55	84	69	197	165
mark	35	190	3	702	915
recfromtxt	76	54	382	260	698
marr	52	19	263	284	855
numpy.dot	16	178	462	562	800
mary	78	200	252	463	423
matplotilb	29	137	80	158	472
784	71	274	268	305	175
will's	19	238	187	187	308
30000	88	160	220	80	106
with	74	232	306	209	36
word_list	47	297	461	139	903
hd\	67	105	231	71	255
pre-allocated	75	184	153	358	387
optimality	79	10	324	566	13
bayesian	28	26	267	710	531
reinitialize	6	46	345	44	807
3000+	61	250	163	425	625
new.pyc	30	162	478	247	344
hdu	86	110	329	601	519
stacked	51	136	175	22	847
hdr	23	192	128	663	953
quantification	77	250	163	646	798
profiles	77	29	175	626	340
profiler	55	147	55	537	219
hdf	86	222	426	611	820
associates	74	117	386	746	161
profiled	88	147	55	537	219
northings	33	176	135	617	298
lon_0	33	176	265	319	224
scores1	47	224	461	776	881
scores2	47	224	461	471	881
characteristics	77	227	159	94	36
a.take	1	57	112	232	726
random()	93	214	8	756	382
elems	48	224	180	177	60
from_tuples	92	156	78	105	971
ode's	79	10	324	214	610
re-combine	3	232	6	110	953
dangerously	10	231	395	500	215
grinds	88	197	373	549	217
obnoxious	17	43	395	236	327
everyday	23	150	299	94	897
movements	74	13	294	429	214
bags	23	110	163	149	798
different	74	232	159	209	36
pas	65	115	116	97	812
pat	76	199	30	512	736
harsh	65	291	307	236	812
degenerate	99	288	11	277	988
doctor	13	128	250	104	249
resize_event	6	69	345	572	112
sketchy	82	241	291	500	327
thinning	28	14	267	429	841
pad	37	263	424	680	509
pae	83	30	69	128	236
struggling	17	62	272	161	803
y_array	60	102	418	305	910
bago	35	207	371	205	336
pan	90	69	32	624	536
meaningfully	10	151	246	631	999
exhaust	22	61	153	358	68
)")	47	201	170	133	888
.swapaxes	1	0	41	215	99
numpy.pad()	79	214	140	684	231
third-party	83	1	80	197	564
minor_locator	58	44	90	642	683
bidvol	78	258	243	796	984
df1.value	11	55	4	664	743
s=1	20	195	259	129	756
s=0	53	10	238	720	396
linearize	79	10	324	214	610
parantheses	32	16	420	403	768
markus	35	238	116	187	308
markup	32	125	248	482	127
#ts	11	201	180	50	99
multi_index	19	294	296	231	601
fmin_slsqp	79	22	324	566	13
users\sam\appdata\local\enthought\canopy\user\lib\	50	145	225	168	679
multicolumn	3	156	6	354	125
draw_if_interactive()	6	46	345	684	481
gates	34	115	430	149	423
cstride=1	60	102	418	193	910
aspect	37	243	494	207	449
.dll	55	261	486	247	770
int-like	70	99	245	601	979
grouped	3	56	6	354	832
itertools.product	19	12	455	480	806
param	92	185	322	641	130
extensive	38	254	234	302	565
pegs	61	31	467	212	138
mxnx3	84	195	51	759	427
matplotlib.pyplot.yticks	58	44	166	341	683
numpy.clip()	58	44	246	642	512
fspecial	79	101	125	703	392
mon	80	163	284	718	483
pearsonr	79	275	121	673	608
matplotlib.get_configdir()	30	162	478	165	870
aiming	10	43	377	321	803
disappointed	17	43	88	236	803
mod	57	89	198	139	62
win32.whl	13	261	348	797	368
x.ravel()	1	57	418	232	910
datear	78	93	243	558	377
lightning	77	266	114	623	995
para2	72	130	349	174	624
para1	72	130	65	174	624
laughing	17	291	250	39	180
np.dot	16	178	462	562	726
fulfil	98	118	317	605	602
0.006104	15	157	64	296	837
matplotlib.pyplot.contour()	61	232	37	626	762
octant	33	176	282	617	908
organizing	38	50	377	663	866
error-prone	82	241	378	334	439
solution's	82	241	341	497	246
overly	82	241	395	334	999
chips	28	150	106	429	604
critical	82	180	106	537	246
expressing	82	43	341	573	354
moderate	88	180	100	574	246
bessel	79	10	324	416	942
measuring	77	14	114	574	210
manufactured	80	35	245	77	410
xlwings	83	91	367	107	86
notable	10	231	17	200	246
fig2.add_subplot	60	139	495	485	543
notably	38	227	17	768	305
370	12	256	73	196	432
finicky	10	231	395	335	797
read_csv's	76	185	322	51	698
manufacturer	43	47	231	76	593
conducting	28	14	267	710	841
crabtree	50	259	133	117	160
np.average	87	193	121	557	608
numpy.size	19	294	296	231	782
xnx	35	207	409	20	336
scriptable	38	241	291	497	628
practical	82	241	17	497	463
als	90	15	189	226	889
carlos	30	259	478	381	960
u'other	43	105	231	71	255
376	52	211	263	364	265
road	17	13	143	39	589
100,110	52	19	263	471	622
quietly	22	171	388	716	215
numpy-thonic	82	241	378	573	29
whites	99	31	259	757	138
spreading	77	29	159	94	668
matplotlib.collections.linecollection	25	161	208	543	481
whiten	84	26	354	135	816
,,,,,	12	279	488	751	465
to_period	92	35	245	560	333
ymax	58	198	494	65	221
.replace	43	51	487	151	244
3th	78	200	82	796	428
styling	64	136	390	78	847
decode	32	16	190	477	261
compliant	86	68	275	478	126
paramether	79	22	324	545	13
matplotbib	83	206	178	202	380
chats	78	56	445	41	604
apis	38	1	291	317	79
gory	34	254	234	302	565
numpy.lib.stride_tricks.as_strided	19	294	296	291	601
alexander's	35	238	187	187	308
subclassed	9	109	331	594	386
fnrss	0	275	140	684	231
subclasses	9	109	331	594	386
multipled	86	110	386	601	519
fellow	68	190	377	396	571
non-deterministic	10	231	17	335	568
shut	90	187	108	624	248
allocating	22	184	153	358	387
b=false	60	102	418	129	910
add()	92	156	78	105	971
-60	15	194	269	606	212
python-compatible	9	204	29	790	64
recognizable	74	232	420	601	898
wave_flux	1	57	54	232	470
cleanup	22	171	388	458	417
.get()	9	106	331	594	699
+range	52	0	180	215	19
temp.py	74	162	27	15	519
0th	98	263	454	713	428
10.8.5	85	276	233	198	858
10.8.4	85	276	233	198	858
aster	17	176	128	161	293
set_xlim()	6	46	494	572	388
10.8.2	85	276	233	198	858
ansi	32	16	190	477	444
ashwini	35	238	326	187	336
sharedmem	9	61	153	358	282
awkwardly	82	241	395	334	463
delineate	61	250	175	646	138
laptops	78	250	132	149	423
subdivision	43	72	68	265	708
unload	22	85	294	611	257
casts	70	100	74	332	979
matplotlib.cm	25	119	320	49	296
35000	12	142	220	528	106
resolution	77	29	339	207	668
unset	30	122	478	159	181
forget	65	291	246	407	472
selinux	83	84	376	184	467
numpy.may_share_memory()	82	227	341	457	122
totaldata.plot	60	155	240	495	12
install-record.txt	50	145	133	138	30
children	6	61	90	572	807
pyplot.imshow	84	119	51	49	845
pymedia	83	206	211	197	564
+cos	11	234	242	531	56
+col	52	0	263	290	288
result.append	52	134	461	290	827
issued	90	171	389	716	568
cityblock	16	101	185	293	716
goog.csv	76	199	30	283	736
premium	83	30	480	785	637
distorting	37	13	467	207	668
straightforward	82	241	378	573	29
scipy.signal.correlate2d	19	294	125	13	512
translations	33	176	282	617	908
util	50	259	277	381	842
get_majorticklabels	0	224	295	424	8
concatenating	3	50	6	354	678
.isin	43	47	68	181	708
recl_pi	78	281	454	796	984
forth	74	13	143	458	363
worded	65	118	307	590	216
sliding	77	101	428	98	347
hyp	28	214	125	756	382
plot_trisurf()	53	161	208	49	854
biological	23	286	163	425	866
neighborhood	99	288	185	293	744
burger	47	224	58	424	588
range1	98	110	454	796	984
cross-correlation	79	292	20	430	547
affectation	10	231	227	209	999
ribbon	61	136	175	626	847
abc	47	67	223	145	569
abd	85	206	93	685	380
abe	43	115	223	20	567
diag	16	178	462	562	726
group.nth	3	56	6	354	125
magnifying	90	69	32	624	536
pure-python	82	241	341	756	219
onselect	0	46	497	44	231
abt	65	115	371	205	767
clevs1	98	148	269	141	221
notnull	92	126	424	414	971
random.randint	93	123	193	628	361
movement	33	14	114	710	214
ranged	72	281	25	141	756
wrangling	17	62	88	663	79
ranges	77	29	37	646	340
ranger	60	201	173	50	612
cylindrical	33	176	282	617	908
hmmmm	65	291	258	407	887
numpy.diff()	79	11	140	626	382
generalizing	40	64	154	150	678
stretching	37	31	467	207	353
farhawa	35	207	371	205	767
numpy.ndarray	9	106	383	616	286
.to_datetime	92	35	383	616	699
np.argwhere	19	42	296	13	601
published	34	150	35	302	142
time_size	48	142	173	305	175
deterministic	28	151	193	628	507
buses	23	13	100	94	625
filetype	27	293	305	420	421
fftshift	77	292	20	430	547
aptitude	13	128	50	104	482
0-index	98	148	273	141	622
linear-algebra	55	174	408	90	651
huzzah	65	207	371	205	767
reproject	84	176	135	617	908
deg2rad	38	214	125	739	183
test.iloc	52	0	263	290	855
distinct	3	297	159	746	36
scipy.optimize.newton	79	22	140	566	13
destination	74	232	37	110	161
0.82	15	194	162	606	221
dispatching	22	85	71	349	807
0.80	15	157	236	514	980
0.81	46	221	151	331	435
0.87	15	211	4	606	99
0.84	15	211	61	606	10
0.85	60	251	495	606	10
swaplevel	44	156	182	763	971
0.88	15	194	287	606	10
0.89	15	211	61	606	10
genfromtxt	76	54	382	260	698
non-logarithmic	37	290	166	706	388
get_label	6	161	90	543	683
diamond	61	31	24	212	276
numpy.sum()	19	214	422	756	761
mydialog	6	46	345	44	112
staggering	22	13	341	537	246
cmap.set_bad()	20	119	320	49	845
event.ydata	6	161	32	572	115
ain't	82	241	274	236	345
particular	74	232	37	209	868
npy_double	70	59	74	332	681
7:9	52	72	68	290	622
pylibtiff	34	173	234	302	208
pressing	90	187	32	624	536
jdx	52	0	263	284	19
libpng16.so.16	30	162	94	553	960
stacking	40	50	182	354	678
share	74	232	37	110	161
loosing	29	283	143	548	526
sharp	77	151	282	212	303
csn	78	258	26	204	832
csi	89	178	25	285	792
csd	79	292	20	430	547
filenotfounderror	63	244	283	553	323
csc	16	94	333	455	788
0.9.1	46	221	151	331	621
716	12	267	488	111	132
csv	86	91	329	107	519
css	73	125	248	131	127
csr	16	94	333	455	788
np.log	87	55	201	664	743
lakes	99	176	282	646	563
pylab.savefig	73	144	18	16	721
leastsq()	79	22	324	566	13
.strides	48	19	41	677	315
0,150	60	194	269	65	12
response	35	207	371	205	336
flatnonzero	52	148	206	284	714
randomised	27	137	459	15	421
reinterpret	70	100	153	332	122
k-means	28	26	354	135	816
eats	22	283	373	549	236
ax.transdata	58	44	265	543	642
x_ticks	64	290	166	706	184
.save()	92	109	78	105	699
tval	43	47	68	290	708
retrieval	23	50	426	370	141
ok1	52	148	206	605	602
ok0	75	148	206	605	714
infant	68	13	259	757	786
rounded	57	89	8	788	62
bracketed	32	263	420	468	768
attachment	99	125	185	595	127
t.inv	16	178	462	150	800
colorspace	84	119	51	137	296
2.4.10	83	206	178	202	380
edge_color	25	119	320	49	683
>>	47	224	58	366	588
np.ones()	71	64	268	519	684
thnx	65	291	258	205	767
detected	29	171	306	429	568
initializing	22	184	386	534	359
semesters	78	250	159	94	616
w-mon	43	149	447	460	612
week_num	43	134	93	204	708
goog	80	116	430	581	67
hurting	82	241	395	500	463
someone	68	190	227	432	571
.avi	22	125	388	122	107
detour	38	6	291	317	628
easily	74	232	246	40	382
cols=	44	164	181	700	895
check_build	81	88	110	553	584
.wasowski	35	238	409	187	887
pandas.resample	34	6	234	525	542
pnas_class	74	232	306	209	36
ports	13	128	5	197	482
subsystem	23	85	69	294	431
mental	17	43	377	321	354
underscores	32	16	420	403	768
andy's	35	238	187	187	308
connect	61	84	294	329	83
phi_1	72	4	287	129	212
phi_2	72	4	287	129	910
to_frame	92	156	78	568	971
halo_positions	9	106	331	594	699
v0.14.0	46	221	151	761	380
v0.14.1	85	221	151	685	380
1.74	15	272	236	514	980
1.75	15	211	61	606	10
acting	40	117	152	691	382
python2.7	30	259	277	106	469
1.71	85	30	480	685	380
ygrid	75	106	226	641	681
2014-01-04	43	200	231	2	24
2014-01-05	67	260	26	2	24
2014-01-02	67	260	231	2	24
2014-01-03	67	260	12	2	272
offsets	74	232	245	601	307
squished	37	31	467	780	851
commits	46	221	124	604	435
dealt	17	62	88	161	746
ax.dist	33	194	443	207	449
2014-01-08	67	213	95	2	24
geared	38	1	291	317	628
difficulty	29	62	88	161	526
terminals	27	171	27	122	508
rated	78	150	252	479	604
0001-01-01	80	285	254	781	920
benefits	82	180	17	537	246
sublists	75	297	454	73	77
hulls	99	288	11	315	814
nonnegative	71	94	127	683	988
1.7s	88	197	73	196	217
omits	29	263	306	190	655
1.7x	88	180	55	337	89
phi_n	72	186	242	129	56
mistakenly	65	28	258	791	887
build_exe	30	170	244	165	368
disregarded	98	79	317	141	509
python2.4	30	259	277	165	960
_was_	65	162	258	407	887
instances	74	232	386	436	36
shapely	99	288	11	315	716
self.n	0	275	295	664	743
cups	57	181	250	133	888
build_ext	30	170	244	688	30
smoothes	53	288	339	720	340
smoother	53	151	428	720	303
sharedvector	87	55	493	675	593
pyimport_importmodule	81	88	110	739	383
statement	29	263	397	684	231
smoothen	53	151	238	626	396
compromise	82	180	341	497	246
family=	73	166	134	764	862
smoothed	77	292	332	511	762
gridspec	58	139	90	324	543
np.ogrid	19	294	296	291	601
tresholds	75	297	497	73	77
excels	38	1	291	317	79
sizable	82	50	100	94	628
favorable	10	241	17	774	463
myclass	9	109	331	594	386
binom	16	214	125	756	183
oscillate	77	151	485	574	668
clarifying	35	207	371	205	336
pd.datetimeindex	44	273	309	727	852
np.std	87	193	121	786	608
gotten	29	62	272	161	746
callguid	76	199	286	51	987
865	12	224	58	196	432
864	12	267	58	424	132
866	47	224	30	424	736
np.str	70	59	74	53	522
contrary	10	231	395	335	999
sub-plot	37	290	90	391	388
get_group()	92	156	78	105	971
treated	74	99	152	601	638
pre-existing	74	232	386	110	359
ages	88	197	73	94	217
to_datetime	92	35	245	560	934
headings	3	110	6	155	519
5210	29	28	306	791	473
.axes	6	139	90	543	481
mountain	85	276	233	198	858
char	70	100	74	601	979
time-stamp	80	29	299	77	173
built	38	206	80	317	564
dancing	90	187	108	361	473
zipcode	78	200	93	463	832
.ps	73	125	248	276	304
plt.ion	6	46	272	418	356
4:10	15	211	263	364	265
with=f	52	0	263	364	100
math.sqrt()	75	99	341	756	141
of-course	74	232	159	209	36
row-wise	92	193	154	98	121
medians	78	193	148	10	66
#do	1	224	112	139	726
2th	40	64	454	191	428
ma.masked	52	19	263	284	714
coercing	70	99	421	601	979
rejected	65	190	307	702	915
li's	35	238	187	187	308
matplotlib.pyplot.scatter	25	161	208	49	910
fluctuate	77	266	106	574	509
.local	30	122	478	159	181
reprojection	38	6	128	158	79
4.4.7	85	45	264	513	634
.ebextensions	30	122	478	159	181
df.unstack	44	164	181	700	895
organise	3	50	6	663	953
azimuth	33	176	135	617	725
xstart	60	102	418	129	910
organism	78	110	243	390	984
joining	3	156	6	354	125
particularly	10	241	17	334	79
disturbances	23	283	365	304	946
prepackaged	83	206	80	461	637
fint	43	201	231	2	24
filtered_df	43	72	68	265	708
fink	13	128	5	104	482
relation	79	151	185	631	970
fine	29	28	306	209	473
find	74	232	37	209	868
backtracking	28	13	341	39	589
month's	80	56	299	41	67
multichannel	84	192	123	607	405
giant	74	13	100	85	953
depended	83	206	80	768	467
df.convert_objects	44	39	309	171	934
scipy.interpolate.nearestndinterpolator	19	6	125	302	512
3d-plot	61	136	175	626	847
convoluted	82	241	378	334	29
money	78	150	430	149	423
chang's	34	238	116	97	308
fft.fftfreq	11	292	20	430	830
reimplemented	38	214	341	756	382
g.agg	87	164	493	76	593
matplotlib2tikz	90	187	175	158	214
some_value	43	72	68	181	985
numpy.rollaxis	40	294	296	291	601
ax.get_yticks()	60	0	173	65	162
plt.style.use	64	166	390	764	889
chrom	78	93	82	390	965
ax.fill_between	60	155	240	495	162
resolve	29	28	227	432	568
redefines	64	117	152	190	638
5ms	77	101	114	77	347
orcl	43	200	231	265	454
redefined	9	237	397	652	864
13:35	67	213	95	185	51
ph	78	250	77	70	832
back-ends	90	84	178	184	467
printout	27	137	27	15	508
delauney	53	288	11	720	396
prod()	19	214	295	684	231
genomic	99	286	114	94	616
11th	80	163	254	723	428
initial_val	75	275	295	684	981
hole	99	13	282	212	589
flavor	86	68	119	478	824
data-frame	3	156	6	354	125
visiting	34	173	234	302	161
please	68	293	403	420	579
rgbimage	84	219	102	401	427
smallest	98	146	127	141	868
supersedes	64	117	152	458	370
aditional	29	28	116	525	328
json.dumps	76	12	275	183	322
responses	34	190	371	97	216
4gb	88	182	373	549	236
aircraft	33	176	135	623	293
ipython	90	15	189	226	818
lightness	20	119	259	137	786
scipy.sparse.hstack	16	294	296	278	470
cubes	99	288	339	315	138
tipping	88	142	114	574	616
annual	80	56	299	723	67
non-overlapping	99	31	339	646	340
1294272000000	67	213	95	185	51
checkboxes	90	69	46	624	384
-file	86	222	329	89	519
loffset=	80	149	447	460	612
upgraded	46	221	151	681	284
consume	22	283	373	549	387
_rvs	65	118	116	407	887
sln.x	52	148	263	284	855
asymptotically	89	180	341	164	970
string-based	3	50	6	354	125
f.set_index	44	164	181	700	895
upgrades	46	221	211	202	284
xkcd	73	166	134	131	862
headaches	17	231	395	500	327
raise	63	83	389	715	39
2560	71	142	268	528	175
laplacian	79	292	428	487	547
axes_grid1	64	44	90	341	683
scripttext	76	37	286	130	413
ahhhh	65	291	258	205	767
meeting	98	146	317	605	602
math.ceil	87	55	201	664	591
subfigures	37	290	467	391	76
sourceid	3	93	243	558	705
cyborg	35	207	409	20	336
500,000	88	160	220	80	54
pyparsing	13	128	5	104	715
967	70	78	52	133	272
960	12	279	319	111	465
961	12	78	319	111	272
solid	61	31	24	212	276
\microsoft	50	145	486	650	204
cluster	99	288	185	293	616
superposed	61	31	175	212	851
256l	48	274	112	649	159
arr.t	40	184	112	453	280
equals()	92	227	317	457	135
asof	92	156	78	614	333
n_colours	75	106	383	519	981
key=	87	175	181	524	591
key3	78	93	82	558	965
key2	43	93	82	558	965
key1	78	93	82	558	965
drawbacks	10	227	17	321	246
jake	34	254	35	302	565
calender	80	56	299	723	333
kernal	90	187	108	511	969
udfs	23	84	119	349	126
greyed	90	31	32	624	536
m4rtini's	19	238	187	187	308
forced	29	171	246	209	305
keys	3	297	280	776	903
__getitem__()	9	109	331	594	386
sqlalchemy's	38	254	234	321	565
leopard	85	276	233	198	858
yesterday	65	62	250	236	874
scikits-image	38	230	125	302	565
poitns	77	29	339	646	340
cstride	20	119	259	49	845
int64s	75	99	325	788	979
one-to-many	78	93	243	390	965
index=2	98	146	243	796	984
flags	55	174	29	716	455
organization	3	150	430	663	423
avaiable	74	117	306	746	36
parametric	79	10	324	487	610
david's	35	238	187	187	308
cppflags	30	170	244	165	181
winsorized	79	23	332	638	11
regularly-gridded	53	151	339	720	542
randomly-generated	71	142	213	139	60
geodataframe	99	176	228	746	868
gdcm	64	6	80	381	854
impetus	17	43	377	236	354
submodule	81	88	110	739	183
06459175	15	157	236	514	144
fitpack	53	22	238	720	396
snag	17	62	88	39	746
str	70	51	309	177	979
within-group	28	227	185	293	347
snap	37	290	443	207	683
solvable	82	241	324	214	610
bin	30	259	63	557	66
re.findall	32	51	487	151	244
varchar	70	100	325	478	979
np.abs	87	234	4	673	830
big	88	283	100	497	463
bid	78	258	156	581	377
mins	88	197	73	196	217
bic	28	26	354	638	11
fslice	52	19	160	284	855
half-precision	57	89	325	788	22
bit	17	241	395	334	327
qwt	38	6	278	158	450
scaled	37	290	467	207	449
follows	74	137	459	15	156
jsonify	75	106	275	595	699
zero-pad	77	151	467	207	668
1410	50	145	118	168	679
pointwise	16	178	154	150	981
rackspace	83	30	376	670	467
google	34	254	247	302	3
often	82	241	17	500	79
10,000,000	88	160	220	80	54
numpy.arange()	75	106	295	684	761
prototyping	28	1	479	317	866
newby	17	43	377	451	98
docs.append	47	224	162	196	60
@user	35	238	409	407	887
entitled	27	254	234	15	565
oscillations	77	151	20	430	303
co-occurence	3	297	37	293	868
ourselves	27	293	403	420	579
pronounced	77	266	467	574	668
x.astype	70	59	74	332	522
scale	37	290	467	207	668
euclidian	99	288	185	293	716
scala	38	1	479	317	354
affects	74	117	152	548	305
store.select_column	43	47	231	265	708
pre-written	38	214	125	317	382
eliminate	74	263	37	190	655
class's	9	109	331	594	386
missing=	44	39	424	414	691
remembered	65	291	258	407	887
continuing	29	13	143	39	214
munge	3	110	6	110	904
pandas.rolling_apply	0	193	140	684	231
restrictive	10	241	395	497	335
fee	34	190	291	321	328
supress	61	28	175	780	472
usc	98	52	317	155	58
tripping	65	291	88	791	874
new_index	44	134	181	700	827
fea	38	1	178	317	564
maplotlib	64	136	278	158	847
rainfall	80	29	299	77	67
seaborn.heatmap	29	185	452	641	473
pick_events	90	250	32	624	214
|v|	89	234	207	261	90
misplaced	32	263	420	468	655
_really_	65	28	246	500	472
gouraud	20	119	259	49	845
subaxes	37	69	46	572	214
pythonpath	30	122	478	159	181
262144	88	160	220	80	54
proportional	77	266	114	207	668
yvalues	60	194	269	65	221
ftheader.h	30	244	94	553	323
myfunction	0	134	493	76	881
multilayer	28	14	267	710	841
subsl	1	274	112	677	442
subsm	0	224	90	418	890
scipy.stats.ks_2samp	38	101	125	703	392
handbook	23	1	430	179	866
z-data	77	151	97	631	762
subfields	3	110	10	601	519
errant	29	263	389	502	655
python-sympy	13	170	50	481	174
usp	98	110	454	796	428
hoped	29	241	274	573	669
sdd	43	72	68	265	708
sde	34	173	35	396	142
sdf	44	134	65	155	154
sda	47	224	58	462	588
sdl	38	6	278	732	450
migrating	17	43	377	396	275
sdk	13	128	5	650	634
directed	99	288	267	158	329
biggie	10	291	395	236	812
1+0j	15	211	162	606	265
sym2	43	72	68	265	708
gstreamer	84	192	123	607	405
sym1	52	0	273	284	19
clips	29	263	306	791	655
tomorrow's	28	250	77	623	67
regedit	30	15	486	540	383
autonomous	79	10	324	214	610
warren's	35	238	187	187	308
planing	17	13	250	39	118
to_replace	76	51	109	512	808
images	84	195	128	674	353
gephi	23	84	294	595	127
scipy.signal.welch	79	292	20	430	547
dragging	90	69	32	624	536
\numpy\random\mtrand\	50	145	118	138	679
22:00	67	213	95	185	51
%	47	205	346	177	576
200k	88	160	220	80	367
]```	52	0	15	284	379
matching	3	146	37	587	868
df.col	92	134	23	733	154
train_index	75	104	349	476	622
scale=	60	194	269	557	10
200x	88	180	55	337	89
v.1500	85	45	264	163	483
helpfull	68	207	371	205	767
llvm	96	212	408	650	455
raveled	75	64	127	73	77
accidental	65	118	258	407	887
lend	68	43	377	432	571
favourite	38	137	80	525	564
liners	68	241	250	39	118
amended	65	118	116	407	887
fdata4	52	19	263	284	855
z_min	60	194	269	65	221
24:00	80	35	346	125	879
lenx	70	106	295	332	979
layout-algorithms	28	151	106	631	894
200+	88	160	73	80	217
vehicles	78	286	252	463	604
2002	67	163	284	133	272
2003	67	163	284	718	483
2000	88	142	220	528	106
2001	67	163	284	718	483
2006	67	163	284	718	483
fitted	79	23	332	363	620
2004	67	163	284	718	483
2005	80	163	284	718	483
failures	29	227	389	457	568
2008	80	163	284	718	634
2009	80	163	284	718	483
rinse	22	197	497	534	68
jason	35	207	371	205	336
matplotlib.artist	81	88	110	739	584
round-tripping	29	99	246	601	979
intricate	38	6	291	317	866
t-stats	79	23	332	638	11
d+	76	51	487	151	244
500th	98	281	454	191	428
45129-09-19	67	213	95	185	51
45129-09-15	67	213	95	185	51
2.962492	15	211	263	364	265
intensive	82	50	100	497	463
data.apply	87	55	493	382	593
blaze	86	68	119	611	126
quarterly	80	56	299	723	259
fatal	63	244	283	553	323
ingredient	78	286	163	253	798
uninitialized	9	184	153	691	359
.to_latex()	92	68	275	183	322
lenghts	74	232	97	587	340
set_gid()	61	136	175	42	847
tiebreaker	78	200	82	204	832
%memit	88	283	373	549	236
arrange	74	232	37	110	625
objectpoints	75	106	295	791	981
unluckily	55	28	80	500	999
frobenius	16	94	391	782	800
itertools.imap	19	12	455	480	806
joel	35	207	409	187	336
shock	77	29	365	676	227
.otf	73	166	134	131	916
min	98	193	148	673	347
stddev	98	193	148	10	347
d:	30	162	118	483	588
visualisation	61	6	278	158	450
bleeding	46	13	143	202	589
application-specific	38	1	69	317	564
replicates	27	137	459	15	421
fortran-ordered	40	184	270	453	122
uncomfortable	17	241	395	334	327
bystate_df	52	104	23	733	154
html5lib	63	5	283	553	584
fonction	29	28	227	684	472
7.9	88	272	61	225	544
chicago	33	176	132	550	765
+001	15	211	64	606	265
wireframe	61	136	24	626	276
fitfunc()	0	275	295	684	231
dlls	13	261	486	797	368
anther	82	137	246	573	669
rowwise	40	64	154	98	678
loglog	51	136	166	272	614
body	0	137	116	432	214
justification	10	89	8	788	999
pseudoinverse	16	94	462	782	800
down-sample	77	29	339	207	353
low-hanging	82	241	159	321	246
1-to-1	10	297	182	587	999
sink	22	13	143	39	589
xnew	72	102	418	129	591
]]`)	52	19	263	364	640
extrema	53	103	238	487	744
irritating	38	241	395	500	327
widening	37	232	467	207	668
x.dtype	70	59	74	332	825
kaggle's	23	26	354	135	816
alaska	47	67	256	145	475
contradiction	10	118	152	335	999
gauss-seidel	28	10	324	487	610
df1.combine_first	44	2	260	33	176
proof	10	137	116	525	812
tau	93	275	242	664	292
lims	37	232	37	646	36
diagonalizable	16	94	462	782	800
divmod	93	123	201	664	743
16:01	67	260	12	2	24
limb	37	13	143	39	589
clockwise	33	176	282	617	725
16:02	80	200	223	550	888
lime	20	200	132	42	786
sklearn.datasets	81	88	110	739	584
zscore	79	193	332	638	347
clocking	88	180	55	337	89
.split	43	51	487	151	244
matplotlibwidget	90	69	46	380	384
ax1.scatter	60	155	240	495	285
tax	78	56	445	41	67
getters	64	109	390	732	370
diophantine	28	10	324	214	610
ndimage.rotate	53	176	282	617	908
32gb	88	182	373	549	236
eccentricity	61	31	282	212	709
whitespace-delimited	86	222	329	107	444
tearing	17	62	56	753	180
customerid	78	93	82	41	705
subscription	38	116	430	149	637
tkagg	73	38	134	635	810
tunnel	23	84	376	184	831
gabriel	35	207	371	381	588
dfnew	44	134	65	155	827
16.03	12	279	162	133	888
cap.read()	47	224	158	471	881
parquet	86	222	426	611	330
multivariate_normal	79	94	332	782	239
linux2	85	45	264	513	634
ixj	40	184	270	453	122
predecessor	98	227	185	293	382
e.g.	74	232	37	209	36
gamma0	57	266	485	574	668
msvs	83	45	211	461	637
gamma=	15	211	61	606	10
vectorising	82	180	341	537	219
-126	57	194	269	141	212
np.append	1	57	296	232	470
employs	38	214	341	756	382
bones	27	137	459	15	421
g.filter	87	52	493	76	593
expandable	74	50	426	663	519
serial	23	85	365	676	257
10.04	85	276	233	393	858
native	38	99	291	756	564
gca	6	46	345	418	543
gcc	96	45	264	650	634
gcd	16	214	185	756	800
gcf	6	46	345	543	481
line3	47	130	30	42	44
line2	47	224	461	42	44
line1	60	155	240	42	44
gcn	27	137	459	684	421
2:6	52	19	160	284	776
2:5	52	19	160	284	776
2:4	52	19	160	284	776
2:3	52	19	160	284	776
2:2	52	0	160	284	855
2:1	37	19	162	207	449
gcv	16	94	185	293	988
stock	80	116	299	581	67
105,105	60	219	297	193	285
gammas	79	10	476	487	610
gentoo	85	276	151	685	380
db	86	68	119	478	126
collection	74	232	386	691	36
dc	77	292	20	430	227
united	78	250	132	577	765
multiplication	16	94	154	150	800
dataframe.join	92	156	78	105	971
libifport.so.5	30	162	94	165	960
yielded	29	171	34	122	508
unique_ids	43	200	82	204	260
decaying	79	23	332	511	531
25,000	88	160	220	80	54
.ipython	30	122	478	159	181
lines	61	31	175	212	276
numpy.linspace()	53	294	10	519	684
provisional	79	186	25	129	306
data.tolist()	47	224	275	183	881
chief	17	43	377	396	275
10-day	77	29	299	77	931
ssize_t	70	100	325	86	22
dz	72	102	418	129	910
lined	37	31	467	458	851
jira	3	110	6	107	519
3.1.2	83	206	178	685	380
3.1.1	46	221	151	331	621
3.1.0	85	276	151	685	621
pd.rolling_std	87	149	447	460	612
dy	72	186	242	129	56
sharex=true	58	139	494	324	543
block-averaging	40	146	10	231	678
fortunate	10	241	395	500	812
dbus-daemon	30	259	244	159	552
bridges	99	288	282	212	138
ext3	55	85	69	128	431
datetimeindex's	92	35	245	781	979
scipy.griddata	53	176	272	720	396
winning	28	180	215	574	720
tstarr	52	19	160	284	776
12.04	85	276	233	393	858
tstart	98	258	26	558	377
6320	15	211	92	238	646
<	47	52	180	290	437
.merge	44	2	253	33	176
t=10	77	29	459	15	762
symlog	51	290	195	341	614
junction	99	195	114	429	563
descriptive	10	118	395	482	328
dam	23	14	267	710	563
dan	35	238	409	187	336
timeindex	80	35	245	781	410
yearend	47	149	93	204	732
pseudocolor	61	195	175	626	847
mention	65	118	116	791	887
cutting	74	13	143	458	589
dap	30	162	94	213	584
\x01	32	16	190	477	475
insisting	29	62	272	161	526
kindness	35	190	371	205	767
day	80	56	254	723	897
synaptic	13	128	211	104	482
pgal	43	52	82	145	764
pd.index	44	201	309	727	827
verifying	29	227	389	457	905
warned	10	231	395	500	215
sas7bdat	86	68	119	478	126
radians	33	292	20	664	725
harness	82	227	341	756	215
webagg	90	38	278	635	810
disregard	29	146	306	548	655
identifies	74	117	37	746	868
identifier	78	110	243	390	984
uninteresting	99	151	106	710	303
pandas_env	30	170	244	159	174
lie	99	288	443	646	138
activate	30	122	244	159	181
.notnull()	43	47	68	181	708
datamatrix	92	175	78	524	699
allan's	35	238	187	187	308
where_dealiased	52	148	206	770	714
lfv	57	89	8	654	970
calibrate	77	14	128	623	210
linesphericaldist	0	275	295	139	231
re-wrote	65	238	116	407	887
miktex	73	128	5	91	810
sk-learn	30	259	277	381	842
aggfunc	92	193	78	31	121
trickier	82	241	378	334	327
contiguously	40	184	153	691	122
type-casting	70	99	246	601	979
lecture	28	254	35	179	142
z-level	99	288	467	646	138
coef	79	23	349	363	620
doeclient	32	51	487	145	244
hazard	79	23	332	511	531
indent	27	263	305	468	558
midi	23	14	267	94	841
explanations	68	207	465	432	328
28000	60	142	173	528	106
cname	48	105	52	53	764
barriers	23	14	69	321	275
facilitate	38	227	17	317	79
unrolling	55	180	422	537	219
south	33	176	132	644	725
_regen	0	72	93	177	475
xmas	80	258	430	723	897
figuresize	37	290	24	706	76
improvements	68	180	359	537	246
puppet	83	84	69	197	467
sadly	29	28	410	161	457
observer	78	200	223	479	423
fromat	74	110	329	110	519
performance-critical	55	1	479	537	219
readline()	32	54	382	147	405
triplot	25	161	208	49	109
.size()	44	164	181	76	419
t1.csv	78	110	243	796	984
udp	22	85	71	349	257
gear	83	84	376	39	467
boolarray	48	19	206	471	60
aabb	37	31	443	446	489
scikit	28	26	354	135	816
documentations	34	177	247	161	746
one-hot	28	26	168	135	816
udf	92	156	78	105	971
content_type	73	144	102	607	304
while-loop	22	263	497	361	68
factorize	92	156	168	105	971
np.diff()	19	42	424	13	512
backend-specific	6	69	46	732	389
prune	37	290	166	706	76
hists	51	136	175	22	847
geostrophic	33	176	282	623	762
inversely	77	23	332	207	449
pool.close()	22	46	345	599	383
subsequence	98	148	206	73	77
loves	10	190	377	500	812
powell's	28	10	324	487	610
histc	19	101	63	557	780
curves	61	31	282	212	138
-lgomp	96	170	133	650	30
milion	88	160	220	80	54
numpy.test	81	5	110	199	443
dictate	74	232	37	525	868
curved	61	31	282	212	276
demonstration	27	137	459	15	421
thorugh	74	232	497	534	68
misaligned	37	31	467	780	851
minimally	27	293	403	420	421
haywire	29	13	143	716	473
istm	82	241	246	500	472
32-	96	30	5	685	858
322	12	279	488	751	132
323	15	256	236	196	980
builtin	38	214	455	756	382
321	12	267	488	111	132
326	12	256	488	751	132
327	15	211	61	514	980
324	12	279	92	751	465
325	12	267	58	196	132
unless	10	28	246	500	999
rearrange	40	64	182	110	678
preliminary	82	180	341	537	246
suprisingly	82	180	55	497	463
pygraphviz	83	6	278	158	450
barebones	27	137	403	420	421
strace	22	147	108	361	383
32k	88	283	373	549	236
gather	74	232	37	110	161
filename.txt	76	199	286	283	413
date_list	80	35	26	727	53
gtk3cairo	73	38	134	635	810
32x	83	30	480	785	858
axvspan	6	161	208	777	481
--------	67	213	95	185	51
selection	74	104	37	733	154
brute-force	82	241	378	573	29
np.int32_t	70	59	74	332	522
absorbing	10	151	106	631	999
text	32	125	329	780	519
scipy.convolve	19	101	125	231	782
cross-validation	79	26	354	135	816
portfolio	78	116	299	581	67
subarrays	75	64	127	231	981
expenses.csv	76	199	286	51	987
0630	43	47	231	76	593
q=0	98	148	25	673	77
numoy	83	206	80	202	564
photographs	28	192	128	429	353
namedtuple	9	109	455	663	903
peptide	78	286	243	425	705
exceptional	10	227	17	716	650
beat	82	180	55	537	720
lower_bound	87	275	295	673	231
stripes	61	31	467	757	786
bear	17	43	377	451	98
13ms	88	197	73	574	616
beam	33	176	282	710	908
d_time	80	56	93	204	832
striped	61	31	467	757	786
densities	77	23	63	511	239
sort_columns=true	60	155	195	495	12
intersting	35	207	274	205	767
calling	22	171	386	684	526
plotdata	47	144	58	708	202
backend_tkagg.py	50	145	118	483	927
pacman	13	128	211	104	482
update_r	0	46	345	684	231
matplotlib_venn	61	136	175	158	847
exists	74	28	317	209	868
notational	38	214	291	200	382
windows-specific	46	231	359	604	208
-ipandas	50	259	133	117	160
df.iterrows	19	50	497	47	68
writable	30	122	478	159	181
np.random.seed()	93	109	193	628	807
scikits-learn	28	26	354	135	816
2d-numpy	75	64	352	519	684
df.rename	44	164	181	700	895
pre-allocation	82	184	153	358	122
phases	77	292	20	430	942
df1.groupby	44	164	181	700	419
clearing	6	46	388	666	356
read_json()	86	68	275	183	322
plt.xlim	58	138	494	65	299
phased	38	1	17	732	564
routine	38	214	125	684	382
progress	17	62	250	39	180
c_id	78	93	243	558	705
01-30	67	260	95	2	51
vrt	86	110	329	110	519
df.index.names	92	72	93	733	852
halo_pos	9	106	383	616	699
algorithms.py	12	267	58	111	132
thanks-	17	62	274	161	457
liq	78	17	223	4	832
joshadel	35	238	326	187	336
float64	70	100	74	332	522
moderators	34	190	307	702	216
sexes	78	250	445	479	616
otherwise	29	28	246	209	472
.set_xticklabels	58	44	240	485	599
venv	30	122	244	159	181
ax.right_ax	6	161	90	543	481
np.fromiter()	19	106	455	480	782
invasive	17	241	395	334	327
stdev	98	193	148	10	347
synology	83	206	178	197	467
compile-time	9	204	29	790	64
monstrosity	82	241	378	573	29
numpy.fft.fft2	77	292	140	626	547
venn	61	136	175	22	951
unutbu's	35	238	187	187	308
haswell	96	30	480	785	729
tremendous	55	180	341	537	246
actualize	90	69	46	572	536
maxes	88	283	485	549	953
copies	40	184	153	691	122
%precision	64	15	189	171	290
dtdate	80	258	26	41	377
copied	27	171	27	791	673
outliers	77	266	106	10	11
filling_values	76	54	322	51	698
358.5	33	176	135	617	212
define	74	232	37	436	638
angled	37	31	443	212	851
citation	65	118	116	482	142
anglea	33	176	282	617	725
hdfstore.select	86	68	119	611	126
angleb	33	176	282	617	725
465	12	267	488	111	842
460	16	94	462	381	800
ridden	23	171	329	94	519
angles	33	176	282	617	725
jtaylor	35	238	409	187	336
resultant	74	232	6	122	673
solve()	79	10	324	744	610
get_axes()	6	161	90	543	481
plain	38	99	246	209	382
dstack	19	294	296	278	470
appearance	64	136	175	78	370
promoter	3	146	65	587	984
promotes	40	99	182	788	979
zlib-1.2.8	13	170	211	104	485
promoted	70	99	421	774	979
revisited	34	62	247	97	746
zlib-1.2.7	13	170	211	104	485
stock_id	44	134	65	155	125
array_csv	75	222	10	260	519
planets	99	288	351	429	951
helper	38	214	397	436	382
guiqwt	38	6	278	317	450
violating	10	43	307	590	216
helped	35	207	371	205	767
rect.so	55	162	486	247	455
claimed	29	28	306	791	905
rodrigo	74	232	306	209	36
inspector	90	69	46	380	384
numpy.equal	19	214	295	13	135
%h	80	205	346	125	879
begining	74	263	306	534	214
landmarks	99	288	282	617	138
-vector	40	50	154	150	122
arr_a	87	220	198	770	714
arr_b	75	220	158	476	714
numpys	19	214	125	756	782
set2	98	148	273	73	77
set3	60	17	351	4	385
finite	28	10	324	487	970
matplotlib.cm.jet	60	123	320	193	845
.dt	92	35	309	727	852
openblas	96	174	408	90	729
practice	10	241	17	500	215
iow	10	104	317	587	154
%a	32	205	346	125	879
2.3.2	85	276	42	685	380
2.3.3	46	221	124	331	435
ios	55	84	69	461	637
2.3.7	85	276	42	685	380
ion	90	46	345	599	889
write.csv	76	199	30	283	736
set_	64	44	90	543	683
pandas.read_csv	76	54	322	51	698
tighter	82	241	291	334	29
byteorder	70	100	74	86	182
arr_1	47	19	30	424	764
arr_0	70	100	30	283	764
matrix()	16	94	295	756	782
seta	11	52	180	215	99
setb	11	52	180	215	99
seth	35	207	326	187	336
thought	65	291	258	791	874
plt.arrow	58	44	208	777	683
sets	74	232	159	94	36
position	37	281	443	191	868
single-segment	75	184	153	691	122
hmmph	35	180	55	236	89
barking	17	62	88	39	417
v0-v8	79	297	324	744	610
proximity	99	288	97	646	744
%u	76	205	346	125	879
evince	73	125	248	276	304
voltage	77	29	77	182	210
symlinked	30	259	478	159	960
widen	37	290	467	780	76
~1000x1000	84	195	213	674	353
conjugates	77	292	20	430	547
my_autopct	0	44	226	44	8
autogenerate	38	232	397	595	854
lake	78	200	132	463	377
bitmaps	73	125	248	276	304
r.dll	30	162	94	553	584
numpy.testing	38	227	125	457	564
c11	43	130	93	174	987
resize()	40	184	153	231	782
optimizations	55	174	341	537	219
everthing	83	206	178	540	473
oa_ndim	63	220	198	770	985
fyi	46	221	124	285	435
cnts	1	57	173	232	886
.but	29	28	306	631	473
skinnier	37	31	467	22	851
0%	88	266	22	574	668
qualitative	51	136	175	22	847
minute-level	80	29	299	77	931
np.newaxis	1	57	160	359	470
soft	23	84	69	149	423
audible	77	192	365	676	946
numpy-	74	232	80	293	564
l\xfccke	76	16	322	415	413
alive	22	61	108	608	282
queryid	98	93	82	558	832
convey	10	118	106	631	999
stuffs	38	1	479	458	118
pymat	23	1	35	302	142
conver	74	232	37	601	141
highlighting	64	137	175	78	328
economical	82	180	341	497	29
2011-01-03	67	260	12	2	24
transmitted	77	192	365	676	257
2011-01-01	67	260	12	2	24
pandas.notnull	87	52	198	181	985
chains	28	14	267	143	140
2011-01-06	67	213	95	185	51
serie1	98	93	82	558	984
regain	22	61	108	358	282
plt.rcparams	73	166	134	764	862
textfiles	3	110	454	110	519
multi-core	55	174	408	349	431
expiry	78	56	26	204	897
host	23	84	376	184	467
concreteness	71	64	268	519	684
approximating	79	10	324	487	610
noisy	77	151	428	430	303
collinearity	79	151	106	654	970
mencoder	73	125	123	607	107
glade	90	69	46	380	384
input_data	47	134	30	122	508
hexbins	51	136	24	272	847
3-byte	70	99	74	601	681
addendum	27	293	116	187	308
alphabetically	3	175	129	524	9
file.py	30	162	478	540	383
parallelize	55	85	341	537	219
downgrading	46	221	151	681	284
zooms	37	31	32	624	536
chronic	67	200	132	550	888
guard	10	227	294	716	215
sample_id	44	93	82	558	965
column-name	3	110	182	587	984
signify	98	281	454	556	509
_tkinter.create	90	144	58	424	383
schart2	6	46	345	599	356
awarded	35	190	371	702	915
hasse	61	14	175	626	951
3-10	88	197	73	39	217
typesetting	73	6	291	131	628
1.9.1	85	276	42	157	621
maze	33	176	282	746	868
1.9.3	85	276	42	157	621
1.9.2	85	276	42	157	621
569	15	279	64	751	96
new_series	51	134	65	155	12
-t	30	170	244	366	174
trainingdata	3	297	166	706	76
560	12	160	220	528	54
561	50	267	118	483	132
562	47	224	273	746	868
564	12	256	162	196	432
565	12	256	488	751	432
reminds	65	291	258	236	812
series.fillna	92	42	424	414	691
flexible	82	241	291	573	628
editing	65	118	116	407	526
scipy-user	34	173	307	97	142
dangerous	10	241	395	500	215
j	72	132	273	284	19
rv_discrete	79	10	140	511	239
avaliable	83	206	80	202	564
trapezoid	79	292	20	487	942
.lt	87	55	198	113	135
svc.coef_	52	0	263	215	855
%apply	70	204	74	790	64
to_series	92	156	78	105	971
day=1	67	201	284	2	24
pij	1	19	112	683	726
pil	84	230	123	607	427
pandas-like	82	241	378	573	29
pin	29	13	385	39	589
deaths	43	72	68	265	708
pic	27	125	175	122	508
pid	78	93	82	204	832
pie	37	136	175	22	847
pig	83	84	376	670	126
pix	84	219	102	401	427
last_valid_index	19	42	326	13	512
pip	13	128	50	104	482
pir	74	232	306	209	36
shooting	17	13	250	39	180
pit	98	146	317	587	868
df.one	87	52	198	181	985
ncols=2	58	139	90	324	543
ncols=1	58	139	495	324	543
claiming	29	28	395	791	568
2012-12-30	43	47	231	71	708
patsy	38	26	168	761	392
ellipses	61	31	282	212	138
t_data.csv	78	110	243	712	984
resembles	77	137	459	15	421
account_aggregates.groupby	43	105	231	71	255
enlargement	92	104	23	733	92
dytpe	63	83	383	616	477
subset_a	98	146	317	605	602
most_common	19	12	455	684	782
iris-setosa	15	272	61	225	544
astronomy	28	1	377	396	275
df_upper	3	93	65	155	984
all_argmax	52	42	296	232	886
yelp	78	116	430	149	519
data_rgb	84	195	51	592	353
onset_time	43	200	82	558	708
yell	68	190	227	432	571
cookbook	34	254	234	302	565
8th	98	263	454	796	428
1025222400000000000l	67	201	309	2	24
name_map	47	93	93	145	965
exponentiation	16	89	201	756	62
x.append	0	55	461	471	591
assembler	55	174	408	90	651
save()	86	68	275	260	824
earray	86	222	426	611	820
sleep	22	197	250	39	180
assembled	74	297	386	15	161
feeding	74	232	140	122	141
patches	99	161	208	543	138
whereever	30	170	244	165	960
duplicates	3	146	182	587	655
patched	46	221	124	202	435
mwe	27	293	403	420	421
qlabel	90	69	46	380	384
risk	10	13	17	500	215
incurs	82	180	100	389	463
rowindex	98	104	23	733	984
neue	73	166	134	764	862
rise	77	151	106	631	762
msvcp71.dll	13	261	362	247	368
worms	22	13	143	39	118
linecollection	25	161	208	543	109
matplotlib.backends.backend	81	5	110	199	870
pycogent	83	206	178	197	854
servlet	23	84	27	595	257
crit1	52	52	198	770	985
datadate	78	56	82	204	832
venue	80	146	148	723	897
inputdata	75	106	10	471	508
retry_count	76	181	58	24	454
flashy	17	13	377	39	275
guiding	68	190	116	432	328
enclosing	99	237	397	436	864
venus	61	176	282	212	138
some_name	43	72	93	265	708
np.append()	19	294	296	231	68
009903	78	56	445	41	616
1-dimension	75	232	10	663	382
incantation	17	62	88	161	746
dataframe.shift	19	214	295	231	512
expressive	82	241	291	497	628
n_examples	1	274	268	305	159
sub()	92	156	78	105	971
xs()	92	156	78	105	971
nx.spring_layout	0	102	280	44	329
chrisb	35	238	187	187	308
aggregator	92	156	78	105	121
elsize	70	100	74	332	681
sfmath	73	166	134	91	862
{0}	47	205	346	177	576
seeks	88	50	270	497	122
kicked	29	13	143	39	589
a_sub	52	19	112	284	855
preserves	40	117	182	548	305
kicker	88	160	353	94	519
x_test.shape	1	274	112	305	159
<---	63	224	58	424	385
logarithmic	37	290	175	706	614
x.get	47	105	93	177	764
digits	57	89	420	788	898
cv2.__version__	81	5	110	739	870
multimediaparams	9	61	153	358	282
cdef	70	204	29	790	64
intead	81	263	246	209	472
sepi+1a	15	272	236	514	980
changed	29	171	306	791	673
analysts	23	1	291	317	866
changes	74	171	306	548	629
changer	82	13	341	39	219
numpy.searchsorted	19	42	296	13	886
2.0.2	46	206	151	202	380
2.0.1	85	276	42	163	621
2.0.0	46	221	151	681	252
arraysize	86	185	119	641	126
bashrc	30	162	478	159	181
bi-dimensional	71	64	10	519	684
ymin	58	198	269	65	221
forums	34	254	247	161	746
numeric_only	92	185	452	105	130
none-zero	98	146	454	141	984
scaffolding	27	137	305	321	328
-coordinates	33	102	418	129	910
rank-order	78	250	445	479	604
asset	78	116	445	581	67
set_yticks	58	44	166	341	184
parallel.py	83	162	80	247	564
annotations	37	290	90	780	76
opensource	23	1	69	317	866
dumped	86	222	329	355	236
green's	79	10	324	487	547
"]))`	43	17	223	4	567
naive	82	180	341	497	29
ylabel	58	290	166	391	890
phone	23	150	163	482	798
_solved_	34	190	3	702	216
h_x	70	204	74	332	64
read.table	76	222	382	260	736
xlimits	64	161	90	572	481
numpy.allclose	87	227	198	457	907
daft	34	173	305	97	208
henry	35	115	409	588	336
climatology	80	193	299	77	347
pyarg_parsetuple	0	204	29	790	64
on_motion	6	46	345	418	481
two-sample	79	23	332	638	11
scheduling	23	85	69	128	431
non-commercial	96	174	408	461	637
guarantee	10	232	17	209	305
quitting	90	187	108	540	248
other_array	75	148	206	284	650
numpy.square	16	214	201	756	782
adjacent	99	288	454	646	744
gate	99	176	430	149	423
widespread	38	1	291	317	628
basedirlist	30	162	244	165	960
multi-indexing	92	156	78	763	125
createfig	6	46	345	572	481
dietrich	35	207	371	205	336
fig.clf()	6	46	345	599	356
whittle	27	13	143	39	589
spectrometer	23	14	365	676	257
acknowledged	10	173	359	604	208
hypotheses	28	137	73	94	36
correlation	79	23	185	638	11
2.7.8_1	50	259	277	303	469
recurrent	28	14	267	744	610
interpretation	10	118	17	631	999
doacalculation	55	180	422	537	219
pyxll	38	1	80	317	564
k=0	11	186	207	683	659
self.__dict__	9	109	331	594	386
over	74	232	497	534	36
casted	70	99	74	601	979
expects	74	106	152	58	638
2.6	85	276	42	685	380
executes	22	187	108	361	248
cmap=cmap	60	155	240	193	285
r_tot	75	106	10	471	684
decision_function	79	26	354	638	11
scipy.ndimage.zoom	53	101	238	720	396
digest	17	62	143	312	118
textbox	90	69	32	624	536
set_3d_properties	25	161	208	543	481
edite	35	115	58	97	588
scypi	83	206	178	197	467
writing	86	137	329	110	526
destroyed	90	187	46	380	384
edits	65	118	116	407	887
software\python26\lib\	50	145	225	168	679
1376	12	267	58	483	132
descend	37	13	443	191	214
ftse	78	200	132	550	423
df.key	52	52	68	290	985
suptitle	6	46	90	272	890
q=50	98	193	140	673	347
sub-modules	81	88	110	739	183
avoids	82	117	341	173	305
3-vectors	71	64	127	150	684
wednesdays	80	56	254	723	897
bypasses	82	241	341	497	219
t.dot	72	186	25	562	726
netherlands	78	200	132	463	765
plt.bar()	51	136	195	272	12
fonts	73	166	134	131	862
edit-	65	291	274	236	345
edit1	27	293	459	15	421
edit3	35	238	187	15	308
edit2	27	238	116	15	308
hash1	52	130	273	258	792
edit4	35	207	371	381	472
bbox_inches	58	243	18	16	721
train_data	52	26	349	539	412
pdflatex	73	125	248	91	304
timedelta()	80	35	245	727	979
15.09	47	115	430	550	888
hanged	22	187	108	361	248
15.05	47	115	430	550	888
15.04	85	276	233	393	858
reused	22	61	153	358	282
plt.draw	6	46	345	599	356
driving	17	62	88	659	180
column-first	40	184	270	260	650
high-frequency	77	29	106	94	227
datarray	35	6	274	579	745
toolbars	90	69	46	380	384
30gb	88	160	373	549	54
reuses	75	184	153	231	782
resistor	77	292	267	710	942
indweight	87	193	148	520	347
perception	28	151	106	429	841
re-created	3	156	6	354	125
monte-carlo	28	14	267	710	841
num_images	71	274	268	305	175
y-limit	37	290	494	207	388
free	34	190	69	461	637
pickle.load	76	144	327	147	736
groupby.apply	92	156	78	105	971
.then	47	102	418	129	910
easybuild	83	1	35	461	637
formation	61	250	282	646	138
rain	80	258	26	723	377
freq	80	149	447	77	612
superimpose	61	136	175	626	847
.cumsum()	87	47	181	76	419
g.get_group	43	47	493	76	593
bummer	65	291	258	407	887
openssl	13	170	211	104	482
jointly	99	232	159	646	36
np.genfromtext	76	54	382	260	698
10.9	85	276	233	198	858
corrections	68	207	465	432	328
basic.py	50	145	225	168	679
lib.linux-x86_64-2.7	50	259	133	117	160
industrial	78	200	132	149	423
mpl.use	73	38	452	635	810
cursor	90	69	32	624	536
philosophical	10	190	17	500	571
broadcast-able	1	274	268	305	981
0.08	15	194	269	526	10
0.09	15	194	61	606	10
.std()	87	193	121	673	608
ax.set_yscale	58	44	195	341	599
0.03	15	194	61	606	10
0.00	15	284	61	415	110
0.01	11	194	269	606	10
0.06	15	194	269	606	10
0.07	11	194	269	606	743
0.04	15	194	61	606	10
0.05	11	194	269	606	10
partial_fit	79	26	293	135	816
0.20.1	55	174	29	202	380
wildly	77	151	106	631	970
toolset	38	6	274	317	628
percentage	98	266	148	520	347
matlab	38	1	125	703	392
centered	37	31	443	780	851
esoteric	82	241	291	334	327
downsize	88	182	373	549	236
abandoning	82	137	88	15	526
imgarray	1	220	158	476	757
classed	78	67	223	390	984
thy	65	190	250	236	345
cummax	87	42	78	13	121
gabor	84	230	428	166	353
numpy.sin()	19	214	140	684	382
plt.cla()	6	46	345	666	356
plt.figure()	6	139	18	324	543
reconstructing	40	50	386	548	359
arma	79	26	354	761	816
classes	38	109	159	732	354
verts	1	102	418	471	19
glueing	82	241	378	573	678
18.1	15	256	236	196	432
18.0	15	211	236	514	980
18.2	15	256	236	196	432
18.5	15	256	162	196	432
preceeding	98	258	26	155	377
self._args	0	275	295	44	8
multi-d	75	64	10	519	650
re-label	74	146	182	587	363
tripcolor	25	119	208	49	296
ran	29	62	272	361	905
ths	29	28	306	173	473
plugins	83	69	32	624	450
f's	35	197	73	574	616
raw	86	192	329	676	519
rat	44	72	82	204	708
1971	43	72	68	265	708
unaffected	29	171	388	122	673
.27	15	211	236	514	96
.25	15	284	162	606	10
ray	33	176	282	617	725
tho	65	291	258	407	887
data-space	37	161	90	572	835
b'1	70	105	74	177	764
python-devel	13	128	50	104	600
isolated	22	171	80	209	467
qthreads	22	85	71	349	431
isolates	28	14	267	710	841
count()	92	193	78	31	121
residue	79	23	332	638	11
over-thinking	17	241	88	236	589
np.power	57	55	201	664	743
glob	86	54	382	260	444
denominator	79	89	8	428	484
.2g	76	205	346	177	576
.2f	32	205	346	177	576
.2e	32	205	346	177	576
the	74	232	306	209	36
brackets	32	263	420	403	768
metal	99	250	132	757	563
eachstock	0	237	397	436	864
regards	68	118	116	432	328
inaccuracies	57	89	8	654	970
contacted	34	150	35	233	316
queen	35	115	409	20	423
get_offsets	9	161	383	616	477
pops	90	187	108	624	248
popt	72	275	418	363	292
earth	33	176	282	617	908
availability	23	84	294	768	625
2-level	3	156	6	354	125
dateline	33	176	282	617	908
09:00	67	260	12	372	958
pyton	83	206	178	15	739
09:03	52	19	162	133	855
1.37275	67	157	64	296	837
beacause	29	29	148	209	36
ocr	28	230	128	429	816
oct	67	163	284	718	483
mpl.__version__	47	5	202	199	870
label=	60	155	240	603	285
label1	60	155	93	556	475
label2	43	200	93	556	475
scipy.test()	13	170	50	199	443
5-minute	80	116	299	77	67
a.shape	1	57	41	677	726
reconstruct	74	232	386	110	673
left-hand-side	3	104	65	661	363
idiotic	17	43	377	236	803
useoffset=false	58	44	166	341	184
occurance	98	146	454	746	639
time-weighted	80	193	299	77	347
5000	88	160	220	80	106
invaliddocument	63	83	283	715	39
sporadic	98	146	148	796	509
ndarray.take()	19	185	226	641	782
instance's	6	161	90	543	481
cofactor	16	94	462	782	800
one-minute	77	29	299	77	67
temptation	10	118	307	500	215
iirc	46	221	124	202	435
overridable	38	109	331	113	135
sort_index()	92	175	78	524	971
temp.csv	76	199	286	283	987
table.index	80	35	245	781	410
autoscale_none	63	83	383	616	477
adding	74	263	386	190	526
fugly	82	241	378	573	29
delim_whitespace	76	185	322	51	698
html5	73	6	278	158	450
backgroundcolor	37	290	90	572	683
dish_relative_perf	43	52	180	693	437
faced	29	62	88	161	874
non-constant	77	50	100	663	122
facet	51	136	24	272	847
players	78	150	445	479	604
faces	99	288	282	315	138
2sec	32	255	132	550	931
mpl_toolkits.basemap	81	88	110	739	584
reconstructs	75	297	10	231	782
betting	17	43	80	500	803
comprehension	19	12	455	480	806
straighforward	82	241	378	573	29
lw=0	60	155	240	495	285
lw=2	60	155	240	603	285
lw=3	60	155	173	495	162
power-law	79	23	332	511	531
bingo	65	291	371	205	767
array_split	19	294	296	13	512
incomparable	10	99	389	756	979
mydata.csv	76	199	286	283	413
nearlyequal	57	89	4	559	743
03:00	67	260	12	372	958
confident	10	43	395	500	803
maxsize	47	224	30	424	622
scikits.cuda	83	206	178	197	564
c2091	63	244	283	24	323
containers	38	50	291	663	843
stepsize	57	194	269	141	221
craft	28	14	267	710	841
__raw_data	9	109	158	594	386
catch	65	291	389	716	345
dataframe.combine_first	92	156	246	105	512
maximally	77	151	106	646	668
70000	71	142	333	455	106
plasma	64	206	80	202	475
row_product	1	57	41	232	21
strangest	29	28	272	361	473
sample_size	44	123	309	727	612
blazingly	55	180	55	337	651
penultimate	29	263	306	468	428
cracked	65	62	250	236	345
container1	9	220	158	476	757
precede	32	263	420	468	655
container2	75	220	158	476	757
nodejs	55	1	29	317	564
__array_prepare__	9	109	331	594	782
brewed	13	128	5	197	482
36000	88	160	220	528	106
sofar	82	137	116	97	328
assigment	92	154	198	113	819
in1d()	19	294	296	13	512
ammar	32	227	317	605	475
2082-05-03	67	213	95	185	51
df.std()	87	52	198	770	437
0.0000i	15	211	64	514	980
platform-independent	82	222	378	497	405
paddings	37	31	443	207	668
np.tensordot	16	178	473	562	726
arr.astype	70	59	74	332	522
numpy.interp	53	101	238	720	396
120hz	77	292	20	430	227
characters	32	16	420	477	768
mentions	34	173	234	302	638
workings	10	43	422	312	354
cycle	20	119	497	42	664
mentioning	10	173	359	500	887
mpl.rcparams	73	166	134	764	862
charlie	50	259	277	303	469
0.00001	57	89	269	664	743
refresher	82	241	341	500	382
gps_data	3	134	65	33	125
1million	88	160	220	80	54
.agg()	92	156	78	105	121
zipline	23	116	80	581	67
laptop	88	30	480	785	858
numpoints=1	58	138	495	651	890
correspondance	74	232	306	209	36
np.frompyfunc	19	214	422	13	761
])])	52	0	263	215	288
m=1	71	186	268	593	306
m=0	22	61	153	361	282
functionally	19	214	295	703	392
y-label	37	290	443	391	76
df.to_hdf	76	199	379	217	502
parse_cols	76	185	322	51	987
monitored	22	283	108	361	257
explanatory	27	137	168	436	421
boxplot()	51	136	195	272	971
pdist	16	94	185	293	716
shx2	35	238	326	187	336
disadvantage	38	241	17	497	305
fig.transfigure	58	44	265	651	642
systemexit	63	244	283	553	323
omission	65	231	395	335	812
advances	93	194	162	133	888
scipy.linalg.solve_triangular	16	22	462	566	13
file.sav	27	293	27	15	421
])]`	52	0	303	290	640
ax1.axis	37	31	443	207	449
advanced	38	104	23	200	650
scipy.linalg.lu	16	94	462	782	800
lapack's	16	94	462	782	800
informative	68	207	395	205	328
non-table	86	68	379	217	502
s.dot	1	178	201	562	726
python-xy	83	206	27	197	467
.nouri	35	238	326	187	336
n*log	89	180	381	261	90
point_labels	64	44	90	641	683
re-ordered	3	146	182	587	984
pl.gca()	58	155	495	642	162
donald	32	115	116	482	898
circumvented	29	171	306	173	874
lapsed	80	35	254	77	931
securities	80	116	299	581	67
cnt	98	148	461	155	832
cnp	81	88	110	739	183
seaborn	51	136	390	272	847
exhausts	22	61	497	534	161
cnx	86	68	119	478	824
cna	98	281	454	638	868
cnn	28	14	267	710	841
norm()	19	214	295	684	761
operationalerror	63	244	283	585	39
algorithmic	82	180	341	537	246
43200	71	142	73	139	60
stereonet	99	176	282	617	908
comb_sorted	52	0	263	215	288
eye	28	13	143	39	589
non-homogeneous	38	50	291	663	35
os.path.expanduser	76	144	30	283	588
steadily	88	283	485	574	89
efforts	68	190	371	205	579
thr	98	148	206	680	655
dataframe.to_dict	70	99	93	776	903
jan-philip	35	115	409	20	336
respondent	78	150	445	409	604
simhei	73	166	134	764	862
puzzle	17	62	88	432	571
percentile	98	193	148	10	347
finely	82	151	106	631	970
igavriil	35	207	409	20	336
df.sort()	44	156	181	763	971
rounds	57	89	8	788	62
chessboard	99	288	114	646	744
comparing	74	227	317	457	905
.last()	44	164	181	700	419
lead-in	77	292	148	430	547
plt.suptitle	58	44	18	418	890
5x10	71	64	213	738	95
df_train_fly	44	2	93	265	987
x-coordinates	37	281	97	646	358
max_result	87	57	121	673	608
differences	10	227	17	631	246
removes	74	263	306	58	655
solar	77	29	77	623	210
sustained	77	29	73	77	931
acttemplow	52	0	214	485	288
removed	29	171	306	791	655
differenced	3	258	65	354	125
r-squared	79	23	332	638	620
versions	46	221	151	202	380
supp	76	199	322	415	987
devide	30	162	329	660	588
cross-tabulation	3	193	6	354	125
prematurely	22	118	307	590	215
trigonometry	99	10	282	744	762
trim	27	263	143	680	655
tril	16	94	462	782	659
trie	75	106	10	519	382
trig	38	214	397	744	382
4^13	75	64	10	139	122
ssp-buffer-size	50	157	133	117	160
triu	16	42	296	13	659
trip	17	62	88	458	141
tris	35	297	116	139	953
constructed	74	232	386	746	673
blatantly	27	137	227	627	421
looked	29	62	247	161	746
radically	82	180	116	537	905
tip	35	207	371	205	767
vanishes	22	187	108	361	214
tis	65	118	258	407	887
til	22	50	246	522	953
tim	35	115	409	20	336
tid	78	56	445	41	984
tie	74	146	148	587	66
vanished	83	206	178	681	473
tia	68	207	465	432	343
tib	88	283	373	549	236
tic	37	290	443	780	76
permitting	22	61	158	691	282
nuance	10	231	395	335	215
phoenix	46	206	124	202	380
myclasses	9	106	331	594	903
uniformly	77	29	339	646	340
matplotlib.pyplot.hist()	51	123	63	557	780
timeseries	80	29	299	77	333
sub-sampling	77	29	339	646	340
hashing	28	50	100	497	141
longer	29	28	306	209	305
359.89	78	56	445	520	832
serious	17	231	17	500	246
dend	80	149	447	77	931
stacks	40	64	154	519	678
neighbors	99	288	11	293	744
numactivity	43	72	68	265	708
remarkable	28	180	100	317	628
datedif	43	72	309	727	410
alternatives	68	227	159	432	79
barfs	75	99	421	601	473
snip	27	147	27	196	214
msvccompiler	81	88	110	553	584
graphing	23	6	278	158	625
computation	28	50	341	537	246
remarkably	38	214	291	497	628
folium	61	176	128	158	293
sub-cubes	99	297	127	646	744
1949	80	258	26	723	377
essentials	23	1	377	659	874
1943	47	267	223	133	588
1940	80	258	340	723	377
1946	98	146	317	155	984
all()	19	214	198	605	135
essentialy	74	117	397	739	183
panel.apply	87	156	493	105	593
melon	12	211	162	133	272
managable	22	283	373	94	953
.parse	76	199	30	283	8
percentileofscore	87	193	295	673	347
np.hstack	1	57	296	278	470
interpolator	53	10	238	720	396
1496	1	274	112	305	436
n25846	67	181	64	24	911
python's	38	214	17	756	382
r.shape	1	274	112	305	681
brother	17	190	371	205	275
vectorizations	75	50	497	534	219
.to_sql	92	68	119	217	824
crosshair	90	69	32	624	536
quick	35	137	274	573	669
word1	43	67	93	145	965
says	29	28	152	791	638
density=true	51	275	63	557	780
numpy.linalg.lstsq()	79	10	324	214	610
__rmul__	9	109	331	55	878
slowed	22	197	485	39	89
frustratingly	17	43	395	500	473
re-casting	40	184	10	548	673
drinks	78	150	430	149	423
stands	74	117	152	209	638
generate_correlation_map	19	180	55	337	231
64bit	85	276	42	685	858
marketing	78	67	223	149	423
testing.py	50	145	118	734	679
subimages	99	142	213	674	616
1234	47	224	30	177	764
1230	15	211	162	364	265
divakar's	35	238	187	337	308
pyuic4	90	69	46	595	384
plz	68	207	465	432	343
water	77	250	77	623	210
fluke	29	28	306	791	874
baseball	78	150	77	479	604
800x800	84	195	213	674	353
cross-over	99	288	37	212	868
supplying	74	185	152	641	638
intersect	99	288	11	315	138
hashable	9	99	421	776	903
reformatting	3	137	182	548	526
expressly	29	231	389	716	568
timings	88	180	55	337	89
enties	98	146	454	757	509
resonance	77	176	77	623	210
.describe()	44	134	202	700	827
navigation	90	69	46	380	384
output2	12	19	162	133	272
tweak	64	137	246	525	370
n-grams	28	26	163	135	798
output1	52	19	162	133	272
modifying	74	171	158	548	526
$pip	13	170	50	481	174
npackd	83	170	80	197	564
optimize.leastsq	79	22	324	566	13
synchronized	22	85	294	94	431
z_list	75	99	421	756	843
largearray	75	148	158	476	757
.tx0	86	110	329	107	519
memory	22	283	153	358	387
unwarranted	10	184	17	500	122
comment=	76	199	322	51	189
reworking	27	180	55	537	89
parser_f	50	267	118	168	679
sessions	23	84	294	94	866
clicking	90	187	32	624	536
self.ndim	47	224	58	424	881
2000x2000	88	142	213	674	89
scipy.stats.kde	79	23	332	511	239
end-points	98	146	454	141	340
df_train_csv	43	72	26	265	410
ax.yaxis.set_major_locator	60	123	173	65	162
insights	68	207	465	432	343
index()	9	106	331	684	699
ahve	22	28	227	361	473
contradicts	10	118	152	335	999
modified	27	137	116	15	421
sub-tables	3	232	6	587	953
radon	77	281	148	631	762
.txt	86	110	329	107	519
modifies	9	117	158	58	757
modifier	90	187	32	624	112
pyviz	68	28	227	432	472
150000	88	160	220	80	605
broadcastable	75	64	421	231	981
stream	23	192	365	676	257
calculate_duration	27	137	459	15	421
nd_offset	70	72	93	727	410
quacks	65	291	395	377	812
conversely	74	232	485	207	45
my_fun	0	275	295	684	231
inheritance	9	109	331	404	386
800mb	88	182	373	549	236
gen_ticker	43	72	298	378	708
z_max	60	194	259	65	358
pycxx	83	206	178	197	564
differente	37	31	175	780	851
alway	23	85	294	458	118
differents	74	232	272	94	36
category1	43	67	223	145	567
str.slice	92	156	78	105	971
category2	43	17	223	4	567
clone	83	170	80	797	368
needs	74	232	152	209	196
pd.series.nunique	92	156	78	105	971
birthday	78	163	254	723	897
typestr	9	204	295	684	782
branches	28	13	267	710	589
awkward	82	241	378	334	327
filehandles	22	283	373	549	236
fromstring	19	54	357	260	782
2081	67	213	95	185	51
np.searchsorted	19	42	296	13	886
devs	34	173	359	604	208
networkx.draw	64	161	208	543	854
dispose	74	232	37	190	629
imagining	99	210	415	646	999
trim_right	52	220	198	770	985
acts	74	117	152	58	638
constituents	3	232	6	110	953
mainly	10	1	17	321	79
-oo	11	234	242	531	56
motions	23	14	114	710	841
size_t	70	204	74	790	64
""')]	50	51	487	71	567
mixed-type	3	99	6	663	843
he's	10	118	116	233	812
organisation	27	137	459	15	421
suboptimal	82	241	341	497	463
he'd	29	62	88	233	874
int()	63	83	283	715	311
tillsten	35	207	409	407	336
curr_g	1	57	112	232	714
backported	46	206	124	202	380
three-line	82	241	378	573	29
pd.melt	44	156	78	763	971
stix	73	166	134	131	862
eccentricities	33	281	282	617	725
-o3	96	174	133	117	30
-o2	96	174	133	117	30
-o1	96	170	133	117	30
-o0	55	174	29	90	455
qs	1	142	268	139	60
row's	98	258	243	796	377
as-needed	23	84	376	184	467
hhm-hhs	11	234	4	531	99
26.1	98	67	223	796	984
corners	99	288	282	315	138
numpy.fft.rfft	77	292	20	430	547
realistic	82	137	106	497	970
check-in	98	56	148	94	931
i'am	74	232	227	346	472
pd.dataframe.apply	92	156	78	105	971
rethinking	82	50	341	537	118
hypergeometric	28	14	267	710	531
setup_requires	83	170	178	202	782
numpy.putmask	74	171	246	190	629
tofile	86	222	382	260	405
betweeen	80	110	73	712	530
distributor	78	200	203	149	423
mapping	74	232	182	746	141
mysql+	63	224	58	424	454
annonate	37	31	259	757	786
hacker	10	190	17	500	215
factors	28	151	106	94	970
nxmx4	20	119	51	592	296
factory	9	109	331	594	386
pyhton	83	206	377	685	739
triangles=	60	102	418	193	910
collate	3	50	6	110	953
hacked	82	137	88	458	874
attended	78	150	252	479	604
bolts	23	1	69	396	467
hull	99	288	11	315	814
unfriendly	17	125	80	500	79
meshgrid	53	294	238	291	601
np.lib.stride_tricks.as_strided	19	294	125	231	601
compression	86	222	379	611	820
factor1	78	93	82	204	832
10mb	88	182	373	549	236
centroids	99	288	185	646	716
os.system	73	144	327	147	383
motion	33	14	267	710	841
trues	98	146	317	605	602
n_rows	1	274	112	677	442
10ms	77	197	73	77	931
high-resolution	88	195	128	674	353
discontinued	83	206	80	197	564
programing	17	43	377	396	803
asi8	70	35	245	616	477
fetched	23	84	27	370	161
libagg	13	170	50	104	482
-index	40	64	154	231	981
pseudocode	27	137	459	15	912
symbolic	79	10	324	744	610
input_items	90	69	46	572	112
clumsy	82	241	378	573	29
fetches	22	171	27	595	161
doenst	92	156	410	183	655
george	35	115	409	20	423
image-like	61	176	339	626	340
whith	74	232	306	209	36
9.7499	15	157	64	296	837
white	20	31	259	757	786
exploring	17	62	88	161	803
np.transpose	1	57	112	232	726
discretised	33	102	114	129	210
xcoords	9	109	331	594	386
sub-lists	71	297	268	73	684
editions	83	206	178	197	467
simpson's	79	10	324	487	610
wide	37	232	467	207	668
\d+\	32	51	487	151	244
interpolated	53	288	238	720	396
framerate	77	151	106	429	107
deduplicate	3	110	6	354	953
that'd	68	291	246	432	196
exacly	65	291	371	407	767
cm.hot	60	155	240	193	845
videowriter	84	219	102	607	427
subprocesses	22	85	71	349	431
datetime.now()	80	201	309	727	852
xy1	75	294	10	73	981
multinomialnb	63	26	45	135	816
dragon	98	13	162	122	214
fixed-point	57	89	8	654	970
conversion	70	99	245	601	141
silhouette	84	230	428	166	353
tillsten's	53	238	187	720	308
strengths	38	1	291	321	79
drastically	88	180	100	537	246
vfiax_monthly.open	11	0	4	215	855
closes	90	187	108	624	248
tornado	83	84	278	158	127
sagemath	61	6	278	158	450
barycentric	99	288	11	617	908
multiply	71	64	154	150	62
white-space	32	16	420	468	768
bar.py	22	263	305	468	383
closet	98	146	206	587	868
discarding	40	263	388	548	526
color_list	25	119	280	42	910
readjust	37	290	443	572	536
cluttering	22	171	80	458	118
numpy.pad	19	92	125	13	782
senior	78	200	252	149	423
quantity	78	56	148	98	347
detective	65	291	258	236	345
pre-installed	13	128	211	104	482
to_pydatetime	92	35	245	560	934
hack	82	241	378	334	669
superb	35	207	274	205	767
np.fromfile()	76	54	382	260	698
dataframe.from_dict	92	156	275	183	322
subpackages	81	88	110	739	183
reindex_axis	92	156	78	763	971
wood	17	43	377	236	345
a.min()	87	123	173	642	886
parabolic	77	151	282	710	762
dreaded	29	231	389	716	473
re-assignment	40	184	158	691	122
mkl-cp34-none-win32.whl	50	145	244	138	204
math.sin	93	55	201	664	361
viewpoint	64	290	443	207	370
sst	33	102	135	720	908
classificadoes	43	47	179	71	164
expectation	79	23	332	511	239
sss	47	102	418	129	221
ssl	13	84	376	184	467
df1.reset_index()	44	2	181	700	895
lighter	20	119	259	757	786
sse	96	174	408	90	651
ssd	88	30	480	785	236
2012-01	80	35	245	781	920
qqplot	79	23	332	511	239
radar	33	176	77	623	293
naked	9	106	421	594	699
differencing	79	151	148	98	970
obfuscated	10	241	395	334	215
ignored	29	171	306	716	655
0:512	52	19	160	284	776
encourages	10	190	291	321	354
([[[	52	19	303	364	265
com3	83	84	376	184	831
#null	92	185	424	415	655
arbitrary-precision	57	89	325	86	22
random.rand	93	19	4	770	60
ignores	74	117	152	58	638
parking	12	160	220	712	54
lng	78	200	430	463	293
encouraged	34	173	307	97	216
7:11	52	0	263	364	288
ways	82	241	159	573	79
review	34	173	307	709	216
fig.show()	90	46	345	599	356
.gdp	43	47	68	265	708
textcoords	58	44	265	651	224
toying	17	62	88	161	647
zip_code	43	72	93	204	832
arrival	80	29	299	77	931
multiplied	71	64	154	150	62
.join()	44	156	109	512	808
25	12	279	319	528	106
originated	29	110	329	173	519
comp	75	12	461	776	903
queueing	22	85	71	349	431
matplotlib.pylot	37	136	175	706	847
detrend	77	292	20	430	547
fiddling	17	62	88	161	647
paramter	25	185	226	641	664
multiplies	16	94	154	150	62
multiplier	57	290	8	788	898
coma	32	99	420	468	768
arial	73	166	134	764	862
comb	19	12	497	47	68
come	29	62	88	458	417
originates	74	117	27	370	161
reaction	28	14	267	479	423
vimrc	27	162	305	15	383
normcdf	11	186	242	683	56
safeguard	83	206	178	361	467
23	12	279	319	111	465
voronoi	99	288	11	315	138
scattermatrix	3	156	6	354	847
text_factory	70	100	357	332	522
gantt	51	136	175	22	847
x-server	90	38	376	184	831
utterance	78	286	163	85	798
1.1.0	85	276	42	681	252
continuation	34	173	190	97	261
~4000	88	160	220	80	54
dispatch	55	85	98	349	431
rr_quality	43	72	68	290	708
assertions	29	227	317	457	472
homebrew	13	128	5	104	482
reworded	34	118	116	590	216
bizarre	29	231	395	335	473
skeletons	28	14	267	710	841
mylabel	98	148	206	556	77
*df	43	47	231	265	260
cut-n-paste	27	293	403	420	579
pd.set_options	57	89	452	171	290
*dy	72	132	273	683	19
df_lower	98	93	243	558	984
#defining	50	17	58	4	385
asbytes	76	205	346	177	576
followup	34	118	307	590	216
decimating	77	151	106	574	668
.interpolate	87	149	297	460	612
zdir	25	102	320	319	845
new-line	32	16	190	477	768
#aaaaaa	32	17	351	4	385
shops	78	56	299	479	67
2+	88	160	220	80	36
unsatisfactory	29	118	227	590	905
hit22	47	297	454	746	36
handlelength	58	138	90	651	683
einsum	19	178	422	291	884
telephone	77	151	106	94	625
scipy.sparse.linalg.eigs	16	94	462	782	800
grey-scale	84	195	51	592	427
d=3	72	186	25	683	756
subpackage	38	88	125	739	183
capping	98	146	148	631	509
2012-10-10	80	35	309	2	24
browser	90	84	489	184	127
10:39	67	260	95	133	272
~25%	88	180	55	337	89
numpy.dtype	70	59	74	332	522
$20	34	150	35	149	423
3*1	72	186	25	150	988
locking	22	85	71	349	431
10:36	12	279	162	364	272
3*4	1	274	162	305	442
10:34	67	260	12	372	958
attributing	10	231	227	335	999
~250	88	160	220	80	54
distilled	82	62	88	334	874
solid_capstyle	58	161	90	777	683
reminder	35	207	371	205	767
sub-region	99	176	443	617	563
anzel	35	207	371	205	767
screenshot	27	293	27	122	421
disadvantages	38	231	17	537	246
pandas.factorize	75	214	140	105	684
nparrays	75	297	10	519	684
drives	17	43	227	659	571
driven	23	14	294	710	275
zeitstempel	43	273	309	727	987
pandorable	82	241	378	573	29
50km	99	288	114	646	563
scipy.stats.binned_statistic_2d	98	281	454	73	77
3*x	11	234	242	531	56
circos	38	6	278	158	450
minimize	79	22	324	566	643
safezip	0	267	58	424	8
3*n	71	274	268	305	60
components	77	14	37	746	762
3*a	1	178	55	562	726
dt.datetime	67	201	284	561	24
captures	74	137	459	631	402
style=	60	155	240	603	285
kill	22	187	108	361	248
kilo	47	67	346	550	888
captured	23	171	365	122	257
feedforward	28	26	354	761	841
sampled	77	29	339	77	340
hint	68	207	465	432	343
pd.notnull	87	52	68	181	985
we've	29	13	143	791	874
x.max()	60	81	269	65	871
everyone's	68	190	371	205	767
numpy.matrixlib.defmatrix.matrix	48	106	74	332	681
tempsheet	52	0	263	323	855
blob	86	192	128	611	405
set_facecolors	25	161	208	543	109
sampler	79	85	193	511	507
numpy.random.randint	93	123	193	628	361
multi-row	3	110	6	354	717
samplez	98	266	454	141	397
styles	64	136	24	78	664
openpyxl	46	91	367	107	86
32,000	88	160	220	80	54
styled	61	136	175	780	847
kmeansminibatch	9	109	397	436	807
correcting	65	291	116	407	345
unwilling	10	118	227	590	999
particle	33	14	114	710	210
filepaths	76	224	30	283	736
oddly	29	28	410	335	473
from_dict	92	156	78	763	322
sample1	78	130	61	606	10
sample2	47	130	61	606	10
code-block	27	263	306	361	214
deduct	98	146	148	796	347
rms	79	292	20	98	547
plt.ticklabel_format	58	44	166	341	599
deduce	86	99	275	601	444
rowid	78	93	445	41	937
respect	74	232	37	746	868
min_time	52	52	68	290	985
to_keep	44	134	65	155	260
intact	40	263	182	548	655
all_data	47	49	461	471	622
slice	40	104	10	231	650
|epd	85	45	264	163	858
slick	82	241	378	573	29
shade=false	60	155	240	193	910
clearify	65	118	116	407	887
subproblem	10	43	227	590	999
.loc()	92	104	23	733	92
yieldcalc	0	275	140	684	231
metropolis	79	10	324	487	531
ubuntu's	13	128	50	104	145
s.groupby	44	164	181	700	419
inspect	74	232	37	110	508
myarray.astype	48	59	74	332	522
sourcecode	38	6	80	15	854
submodules	81	88	110	739	183
baffled	17	62	272	161	803
widgets.py	50	162	118	483	927
worksheet	86	91	367	107	909
stop1	52	148	273	284	19
2012-06-10	67	213	95	185	51
endpoint=false	60	123	173	50	99
min_itemsize	86	185	379	217	865
baffles	29	28	395	236	473
concentrations	77	250	70	295	210
numpy.double	70	59	74	332	681
2k	88	160	220	80	54
sub-graphs	37	290	467	94	953
lastly	74	232	246	209	36
scipy.interpolate.linearndinterpolator	53	10	238	720	396
parseable	86	99	329	601	519
distinctions	10	227	17	275	905
disposed	22	61	388	358	282
dispersion	61	136	175	626	762
insure	40	232	467	661	137
valley	99	13	132	295	563
fish	78	150	252	149	423
exog	79	26	168	518	412
one-element	75	106	421	471	681
.add_legend()	60	17	351	4	385
fundamentals	17	43	377	321	275
odata	86	1	329	370	741
read_hdf	86	68	379	342	824
numpy.ndarrays	75	106	421	790	64
loadtxt()	86	54	382	260	698
data.append	47	224	30	424	736
max_colwidth	58	185	452	171	290
-dndebug	50	145	133	117	30
objectives	28	140	341	238	617
reusing	22	61	388	358	526
ds1.values.ravel()	52	0	263	770	714
contributors	34	173	35	321	216
concating	3	134	260	33	68
rephrasing	34	118	307	590	216
eval_legendre	93	275	173	562	726
np.extract	19	42	198	13	512
britain	99	176	132	617	563
intro	17	254	234	302	565
99.95351796	15	157	64	296	837
intra	80	56	299	77	931
incorrect	29	28	306	791	473
pd.tseries.offsets	38	35	245	560	333
fiddles	10	237	397	732	370
4.6	85	272	61	225	544
%20	32	16	420	468	768
4.0	15	272	61	749	544
4.3	15	272	61	225	544
4.2	15	272	61	225	544
log-binned	77	23	332	511	531
4.9	13	272	264	225	544
rdbu	20	119	259	137	846
matrix-multiplication	16	178	154	150	470
id-numbers	78	250	454	425	984
5	12	19	162	528	106
fiddled	17	62	88	161	647
python+pandas	86	50	100	663	866
trash	32	263	420	468	655
0.951182	47	200	162	133	888
tqdm	81	88	110	739	361
requested	27	137	459	15	421
separate	74	232	37	110	36
plot_implicit	38	214	125	744	610
symbol	32	110	430	482	898
whiskers	51	31	24	10	358
_both_	61	31	443	212	851
requester	43	47	231	71	255
covs	16	275	462	782	800
df_two	44	93	65	558	965
calls	0	117	397	684	231
_very_	82	241	274	497	463
grayzone	6	46	345	44	112
numpy.vectorize()	19	214	422	684	761
.decode	76	51	487	151	244
decompressed	86	222	426	611	820
clauses	38	241	291	457	135
sublimerepl	83	206	178	540	818
00:05	67	260	12	372	958
lack	10	43	17	173	999
00:03	67	260	12	2	24
00:02	67	260	12	372	958
21.298	57	194	269	686	743
00:00	67	260	12	372	958
executing	22	187	108	361	383
.argsort()	52	0	263	290	855
strassen	89	94	207	261	651
pygsl	55	174	80	197	564
synthetic	27	293	403	420	579
jessie	83	206	211	393	467
rowname	43	134	68	265	154
repetition	82	297	182	587	246
plt.boxplot()	51	161	226	272	481
lining	37	290	154	458	417
sparkline	61	31	175	22	951
myapp.py	30	162	486	247	344
.year	43	35	309	727	852
init	0	162	118	483	927
threads=1	29	62	88	39	874
siblings	78	281	454	796	984
missing_values	76	54	322	51	698
test-case	29	28	274	236	874
song	78	150	163	463	798
far	29	137	272	15	457
fas	30	259	277	303	960
ticked	37	31	307	590	851
faq	34	254	234	302	565
fat	77	266	22	574	668
print	47	224	202	122	508
fan	17	43	377	396	803
reordering	40	50	182	548	678
warnmain.txt	30	162	486	247	344
ticket	34	173	359	604	208
ticker	80	116	430	581	67
stimulus	28	14	267	710	841
debian-based	83	128	211	197	482
xlineplots	0	224	58	424	231
count2	78	93	445	796	965
tomaugspurger	35	238	326	187	336
n-dimensions	99	288	10	315	988
ddof=0	87	193	121	786	484
ax.set_xscale	58	44	494	341	599
np.random	93	123	193	628	361
ax.yaxis	58	44	90	543	683
raw_line	52	0	263	284	622
mgilson's	35	238	187	590	308
nba	28	14	267	179	841
functioning	27	137	116	791	421
groupby.agg	92	156	78	105	971
will	74	28	246	209	196
imported	81	88	110	739	183
advantageous	82	241	341	497	246
800x600px	84	195	213	674	353
importer	23	222	294	94	79
pd.read_html	76	68	275	183	322
pandas.py	30	162	478	247	344
.cat	43	72	68	265	708
plot_test.py	30	162	478	540	383
windows\system32\windowspowershell\	50	145	225	138	204
devoted	34	254	234	97	565
complex64	70	100	325	332	522
pyopengl	38	6	278	158	360
liblapack.so.3	30	259	94	381	960
depreciation	29	28	389	716	568
codebase	46	221	124	604	435
step()	64	185	226	641	683
relaxation	53	10	324	487	762
df.drop	44	164	181	700	895
newish	38	43	377	761	803
uncommenting	58	46	452	16	383
matplotlibdeprecationwarning	63	244	58	483	842
handlers	90	69	46	624	112
ax.set_ylim()	58	44	494	341	388
testarray	1	204	295	471	881
allows	74	117	152	58	305
smas	21	258	263	284	855
multilevel	3	156	6	354	125
piece-wise	53	10	238	280	620
suddenly	29	28	306	361	473
layer	74	13	128	732	856
np.ascontiguousarray()	19	184	158	453	280
plone	73	125	178	158	127
mma	79	10	162	744	610
jpeg-ls	84	192	123	607	405
forcefully	22	171	388	190	629
space-separated	86	110	329	601	519
branded	43	72	68	265	708
thank's	35	207	371	205	767
grabbing	74	232	37	534	526
e_vals	52	19	316	54	855
instancemethod	63	83	383	616	286
time.struct_time	70	35	383	616	477
stick	82	232	246	500	118
qtabwidget	61	69	46	380	384
_serialize_xml	50	145	118	168	523
lambdas	9	237	397	436	761
1733	98	78	454	796	272
base-10	57	89	325	788	898
lambda_	75	106	112	519	756
df.describe	47	224	30	424	508
challenging	17	241	291	334	327
prompting	90	187	32	624	112
barwidth	32	290	420	403	76
subtrees	99	281	454	646	868
5.0	15	272	61	225	544
5.1	15	272	61	225	544
5.2	15	272	61	225	544
5.3	15	272	61	225	544
5.4	15	256	236	196	980
5.5	15	272	61	225	544
5.6	15	272	61	225	544
5.7	15	256	61	225	980
5.8	85	272	480	225	544
5.9	67	213	95	185	51
zhang	35	207	371	205	767
stemming	34	231	234	321	568
speeding	82	98	341	537	219
y=-1	33	281	287	719	358
griddata	53	101	238	720	396
simplicity	27	137	459	525	421
shouldnt	29	28	410	209	196
over-writing	3	137	37	110	868
_pdf	9	109	331	44	386
reflect	65	118	116	407	887
.argmax	1	57	180	232	726
waitkey	84	195	102	122	214
shortcomings	28	227	106	710	970
text.txt	76	199	30	283	754
base.py	50	145	118	168	679
callback	90	69	345	44	112
plt.imread	84	219	102	401	427
\lib\	50	145	225	168	429
ax.cla()	6	46	345	666	356
recompiled	13	170	211	104	485
gausspoints	72	102	418	129	756
best-case	88	180	100	497	89
don't	29	28	410	209	472
eludes	82	241	88	334	305
disabled	90	171	189	716	370
scientist	17	159	99	396	275
htop	88	182	373	549	236
dave's	53	238	187	187	308
blockproc	38	101	125	703	392
2*pi	11	234	242	664	743
.to_html()	92	68	275	183	322
inward	37	31	467	780	851
macosx10.7.sdk	50	259	277	117	160
ricardo	35	207	409	20	336
attendframe.yes.str.split	43	47	493	76	593
harmless	10	231	395	500	215
align=	58	138	265	651	224
allorders	19	12	461	480	806
return	74	106	317	684	638
resizable	90	187	46	572	384
1dim	75	64	10	231	650
divakar	35	238	326	187	308
framework	83	1	69	317	450
my_y	58	44	240	642	599
signing	82	241	341	173	526
numpy.argmax	19	42	296	13	886
accumulate	74	193	148	98	347
suffice	82	137	246	209	669
nepidemix	83	206	178	197	380
=10	43	52	68	290	437
=15	60	194	162	606	931
subtler	10	151	106	631	970
blockwise	82	50	341	98	651
4133	67	78	52	2	272
refresh	90	69	32	624	112
fasten	22	50	341	537	219
zone14	32	17	223	4	567
aligns	40	117	182	661	363
residing	74	110	27	110	161
itertools.combinations	19	12	455	480	806
neglects	98	146	317	141	509
malfunction	29	13	106	631	214
needless	10	43	395	500	812
generation	22	85	294	710	841
repartition	34	150	250	149	423
lubuntu	83	206	376	393	467
set_edgecolor	6	161	208	543	109
self.axis	58	44	494	642	162
10.000	88	142	220	80	54
usec	88	245	55	196	432
-march=native	43	72	133	138	30
1.9.2rc1	85	276	151	157	621
permutating	3	297	182	587	125
b.tolist()	1	57	112	232	726
origin_lat	47	275	25	174	881
_has_	22	171	80	500	118
fiber	28	14	267	710	841
chunksize	86	68	322	217	698
cpu's	55	174	408	349	431
cv2's	84	219	102	607	427
memcache	86	222	426	611	820
3.00	15	284	236	606	110
forgive	17	43	377	451	98
isempty	9	109	331	594	699
tottime	0	147	125	524	9
organising	82	50	294	663	79
navigationtoolbar2wxagg	90	69	46	380	384
thread	22	85	71	349	431
plt.plot()	6	46	208	543	481
row_indexer	52	80	23	733	853
inputs	75	227	140	684	382
x-array	98	148	97	73	77
2*b	11	234	4	215	19
informations	64	232	246	78	328
relate	74	232	37	746	36
geodesic	99	288	185	293	716
fancy	40	104	10	200	650
*sorted	1	57	180	232	591
pd.concat	44	2	260	33	176
subfunction	0	237	397	684	231
shufflesplit	9	26	354	135	699
passes	74	117	152	58	638
183	12	279	488	111	132
np.floor	87	55	201	664	743
idx_cell	52	52	263	215	437
garbage-collected	9	61	388	358	282
i.index	52	0	180	284	855
publication-quality	73	125	248	276	304
181	12	279	488	528	175
psql.frame_query	76	68	119	478	736
eval()	0	237	397	436	761
passed	0	106	152	641	638
gene1	78	93	454	796	984
headache	17	62	88	659	327
.mask	9	220	331	594	203
imperfect	82	231	106	525	568
option	64	6	246	209	669
boilerplate	27	1	291	334	628
relieved	17	190	371	236	345
exploded	29	28	227	209	473
urllib2	86	68	275	107	444
fname=	47	144	58	764	588
convinced	17	43	395	236	803
explodes	88	283	373	549	236
albeit	82	241	100	497	463
double	70	204	325	790	64
xy-plane	61	176	282	626	908
libpng-dev	13	170	50	104	485
bin_centers	98	148	273	139	221
n-body	28	14	267	710	841
stall	22	187	108	361	248
doubly	75	297	497	776	903
numpy.diff	19	42	296	13	512
dang	65	291	258	236	345
.numpy	30	122	478	159	181
dane	43	47	231	265	567
galt	35	238	409	187	336
cleaner	82	241	378	573	29
imports	81	88	110	739	183
expit	11	275	456	562	838
some_column	43	72	68	265	708
alike	10	227	274	703	392
scatter-plot	61	136	175	626	847
cleaned	27	171	88	458	417
fiona	38	6	278	317	450
remapping	40	297	182	587	678
adj_matrix	71	142	333	455	788
0.10.1	46	221	151	331	621
0.10.0	46	221	151	331	621
robustly	82	241	378	525	669
window=	87	149	447	460	612
randint	93	123	193	628	361
quicksort	19	175	270	524	718
cropped	37	31	467	780	851
gigabytes	88	182	373	549	236
feature_names	47	105	30	177	736
weibull_min	79	23	332	511	531
np.dot()	16	178	201	756	651
long's	35	207	371	205	336
group.loc	52	72	68	290	708
anwer	35	238	187	187	308
data.frame	92	156	275	703	392
reach	22	13	485	39	214
ibound	98	52	198	770	714
react	90	69	32	624	536
~500	88	160	220	80	54
seasons	78	56	299	723	897
dict_list	75	12	461	776	903
splat	19	12	455	480	806
equatorial	33	176	135	617	908
runnable	27	293	403	420	579
date2num()	64	35	245	560	920
blockdiagonal	71	64	127	738	95
windows	83	206	178	685	858
1048	67	260	254	2	272
coincides	60	102	418	129	357
itertools.product()	19	214	455	13	512
4.2.1	85	45	264	513	634
transfrom	33	292	128	617	908
df.describe()	92	134	217	183	188
py4j	83	1	71	349	564
bidhigh	43	47	68	290	708
stft	77	292	20	430	540
fromarrays	75	106	421	231	699
font	73	166	134	764	862
np.fft.fft2	84	292	20	430	547
_format	9	109	331	594	386
month-day	80	35	245	781	410
underflow	57	89	8	654	57
starters	82	137	246	525	186
math.isnan()	57	89	424	108	203
_much_	82	180	100	497	463
arrowheads	61	31	24	780	276
alpha=alpha_k	60	155	240	495	285
his	35	238	187	233	308
hit	22	13	143	39	589
keepdims	19	185	121	231	608
hid	37	290	175	780	76
longest	98	263	454	680	868
hii	35	207	371	205	767
exptime	51	179	93	42	309
unintuitive	10	231	395	335	327
lmes	99	176	135	617	935
df.isnull()	87	52	198	181	985
bars	37	136	24	22	851
art	17	43	377	396	275
dump	86	222	329	110	519
ary	52	220	273	476	757
matix	16	94	154	150	800
manage.py	83	84	376	184	467
non-regular	99	288	339	646	340
arc	33	176	282	212	725
bare	17	43	377	500	354
are	74	232	159	209	36
arg	0	185	226	641	676
cleverly	82	241	341	573	79
ari	43	200	231	265	708
heapq.nsmallest	19	42	296	13	512
indentationerror	63	83	389	715	39
recording	77	29	365	676	257
learns	28	26	354	135	816
learnt	17	62	88	205	767
2025	67	213	95	185	51
distinctive	61	136	24	780	847
formatted	32	110	329	601	519
libraries	55	1	408	197	564
unions	3	50	182	587	125
various	38	232	159	161	746
times_dense	75	297	333	455	788
yarray	72	102	216	129	756
consecutive	98	146	454	587	639
formatter	64	290	166	341	184
pad=0	58	138	495	642	299
chain-indexing	10	104	23	733	154
2021	78	200	82	145	272
ar1	75	106	206	471	77
ar2	75	148	206	471	714
genes	78	286	163	425	798
reg_exp	47	51	487	151	244
initially	29	28	306	791	874
memap	86	222	29	607	405
general-purpose	38	1	291	317	32
lineterminator	76	185	322	51	698
pymssql	23	68	119	478	126
pcar	98	148	206	73	77
c	55	204	29	790	64
linecollections	64	161	90	777	481
movers	43	72	231	265	708
became	29	28	306	791	874
z-value	33	281	135	646	358
totalseconds	9	109	383	616	477
cramer's	79	10	324	487	610
scipy.optimize.fmin_l_bfgs_b	29	28	295	684	231
finds	74	117	37	58	868
arbitrarily	74	232	37	209	340
date_closed	80	258	26	2	410
clashing	3	171	80	190	629
improper	29	231	389	791	568
flattest	77	151	428	212	762
type1cm.sty	73	125	329	91	473
inplace_array1	70	204	74	790	64
2015-08-09	67	181	95	24	272
next_day	43	200	223	4	567
enhancements	46	221	359	604	435
overlook	17	43	17	500	215
whos	74	15	189	703	392
johannes	65	118	116	97	472
whom	34	190	69	321	571
reduction	40	50	154	98	382
complicated	82	241	378	334	327
wraparound	57	89	8	716	874
np.add.outer	19	57	296	13	512
whoa	65	291	258	236	345
fig.subplots_adjust	58	138	495	651	299
df.where	87	52	198	181	985
multi-thread	83	30	480	349	467
non-comment	30	162	478	483	927
121:02	67	213	95	185	51
auto-scaling	37	290	494	706	388
121:04	67	213	95	185	51
misbehaving	83	206	80	197	380
cartopy	61	176	278	158	908
cummin	92	193	78	614	121
gaussian_filter1d	53	101	238	487	13
tight_layout	58	138	90	341	299
stolen	64	254	234	302	565
perron-frobenius	16	94	462	782	800
earthquakes	77	176	77	623	210
behavior	10	231	395	335	568
__hash__	9	109	331	55	386
gui's	90	69	46	380	384
engineers	28	1	69	317	866
identical	74	232	306	122	905
low-contrast	84	195	51	592	353
saturation	20	119	259	541	786
rip	17	62	35	233	142
avconv	73	125	248	607	304
where=	44	185	452	181	12
uncomment	90	46	345	599	356
pandas.period	80	99	245	781	920
rig	17	62	80	197	467
rid	29	263	306	458	655
currents	61	176	77	623	293
yosemite	85	276	233	198	858
cmyk	84	195	51	592	427
lengthy	27	137	395	334	327
largedoses	32	67	346	177	764
twofold	65	118	116	590	216
meridians	33	176	135	617	908
lengths	75	297	97	519	340
orientated	37	31	467	732	923
widely	38	1	291	317	79
bikes.ts.dt.hour	52	52	180	693	437
temp_df	47	134	93	155	622
my_array.shape	1	274	112	305	60
triangulation	53	288	11	720	716
moving	74	13	148	98	347
np.int64	70	59	74	332	522
test2.csv	76	199	30	283	754
.sort_index()	44	164	181	700	895
fcompiler=gfortran	30	170	133	481	30
depending	74	232	246	768	36
analysis	28	14	267	179	866
edge	99	31	443	191	138
14,000	88	160	220	80	54
length-	75	132	273	73	981
programmingerror	63	83	283	715	39
two-step	82	241	274	429	463
df.info()`	27	293	202	183	188
marshalling	55	99	29	756	564
reliant	82	50	341	768	118
$temp	12	19	263	364	265
intervall	80	56	254	723	897
_what_	65	190	227	590	571
intervals	77	29	299	77	340
t=3	98	148	206	73	221
normplot	79	101	369	703	392
abarnert	35	207	326	187	336
df.t	44	134	260	290	827
collections.namedtuple	75	109	455	200	903
df.x	52	52	68	290	985
df.y	52	72	68	290	985
start_station_id	78	93	82	204	965
matplotlib.gridspec	64	6	90	78	683
df.e	43	72	68	290	708
128-bit	57	100	325	86	22
df.a	52	52	68	290	985
df.b	43	52	68	290	985
df.c	43	52	68	181	985
df.l	11	234	180	215	99
boolean-valued	3	104	154	587	135
$a$	71	64	127	738	988
679	15	279	64	172	96
fill_method	92	185	424	414	691
isomorphisms	28	14	267	710	841
675	43	105	231	71	255
676	52	0	263	215	19
unlimited	57	89	325	788	22
aggregation	3	193	78	354	121
catalan	1	19	162	139	60
libatlas-dev	13	170	50	104	174
modifications	27	171	388	548	526
u-v	72	186	25	129	756
deserialize	86	222	426	611	820
tingis	68	207	371	205	767
incidental	10	118	395	791	999
ignore	29	263	389	716	655
phylum	78	200	132	463	604
unstable	28	151	106	654	970
rearrangement	40	294	378	200	678
pcolor()	25	119	208	49	845
hhmm	32	35	245	601	920
empirically	22	227	106	457	970
hinted	34	118	116	97	142
traits	38	6	278	158	450
illumination	20	151	106	631	762
iloc()	92	214	274	200	650
timeout=none	43	47	309	424	593
empy	74	106	386	595	161
type-checking	38	99	29	756	979
prot	78	93	82	204	832
pros	38	254	247	321	79
prop	64	161	90	764	683
scipy.sparse.linalg	16	94	462	782	800
proj	30	162	478	165	588
ticking	80	290	3	77	333
prog	78	110	430	42	475
prof	28	115	480	179	142
anne	74	28	306	209	36
prod	87	193	121	673	608
proc	86	68	119	703	392
eggs	13	170	164	197	557
anna	35	207	409	20	336
~3	88	197	55	337	89
zzz	43	72	68	265	708
cla()	6	46	345	666	356
pandas.qcut	92	193	63	31	121
stereoscopic	61	136	175	626	847
prop_cycle	46	221	151	202	380
pandas.factorize()	75	297	455	776	903
intense	23	14	294	429	353
roundup	98	266	148	141	509
modar	0	106	397	684	673
completing	22	171	250	361	214
greets	29	28	306	209	473
array.reshape	1	57	112	232	726
ncol=5	60	123	173	50	10
credible	10	227	8	631	812
undoing	40	232	182	587	363
unnoticed	37	13	143	39	589
stitched	29	28	6	534	953
python33\lib\	50	145	225	168	679
df.index.unique()	87	224	461	139	881
colorize	20	119	366	137	786
intraday	80	116	299	581	466
np.linalg.pinv	16	178	462	562	726
extremely	82	241	100	497	463
np.complex128	70	59	74	332	522
signifies	98	281	454	796	428
window	90	187	46	624	536
qthread	90	69	345	546	112
subregions	77	151	339	94	802
fabio	35	207	371	205	767
perplexing	29	231	395	335	327
data**	47	224	227	424	887
crank	28	13	143	39	589
repeatedly	22	171	497	534	68
hcluster	81	150	35	302	854
upright	37	31	443	207	449
plotly's	38	6	278	158	450
cvxpy	65	291	258	236	345
seterr	57	185	389	171	686
calles	9	106	158	476	699
declarations	55	204	29	790	455
.fetchall()	47	5	30	478	454
z	72	102	418	129	910
np.float_	70	59	74	332	522
called	74	117	397	436	638
pets	78	67	223	145	948
row_ids	52	148	206	556	622
dill	81	109	71	379	820
yyyymmdd	80	35	245	781	920
shortcuts	38	50	159	200	79
row_idx	1	294	296	291	470
depthmap	74	232	306	122	673
dataframe.to_html	86	125	275	183	322
cross-post	34	173	307	97	142
2dp	57	99	325	788	898
tentative	34	254	234	302	565
119	12	279	488	751	132
image	84	195	51	607	353
malicious	22	85	305	349	215
fortran-contiguous	40	184	270	453	122
_how_	27	293	227	432	579
behzad.nouri	35	238	326	187	336
fortran's	55	174	29	537	651
interpretable	10	28	395	209	999
s.sum()	47	224	4	664	743
0.01um	43	200	231	265	708
_only_	29	28	246	500	472
full=true	79	275	226	641	13
ravel_multi_index	19	42	296	13	601
iter_segments()	64	161	208	543	481
input_image	1	219	102	401	757
delineation	32	110	420	482	589
fluorescence	77	14	267	623	841
)"`	32	5	170	130	244
pd.read_csv()	76	54	322	51	698
c-contiguous	40	184	270	453	122
karma	34	190	3	702	915
autoincrement	3	156	65	155	629
x-dimension	37	31	467	207	449
flatten()	19	294	296	453	280
jaime's	35	238	187	187	784
scroll	90	69	32	714	536
mollweide	33	176	282	617	908
lean	10	43	390	500	215
zmin	33	194	269	65	221
pymysql	83	68	119	478	126
bioconductor	38	6	275	761	699
yscale	58	290	494	341	388
atleast_2d	19	294	296	278	470
paralellize	82	50	341	537	219
adjustment	37	290	467	207	668
pd.series	44	201	493	348	827
sliding-window	65	118	227	407	999
note2	27	28	116	791	655
a.dtype	70	59	74	620	522
simliar	35	115	409	233	336
axis=2	1	57	121	232	608
axis=3	1	57	112	232	726
axis=0	87	57	121	673	608
axis=1	87	164	181	700	608
squeezing	40	294	154	231	678
visualizing	28	151	128	626	625
snipet	27	137	459	15	421
tooltips	90	69	32	624	536
pay	10	190	413	500	118
wished	74	137	116	209	36
60-70	88	197	73	528	217
future-proof	55	137	341	500	219
714	15	201	180	172	96
710	12	211	4	111	743
-specific	9	214	397	756	135
wishes	69	190	246	590	571
stackoverflow	34	173	247	97	216
notes	34	254	234	302	565
axis=n	1	57	112	232	726
deals	74	117	152	173	305
minimizing	79	10	324	566	643
interpolating	53	288	339	720	396
mean_data	52	19	160	476	757
300000	88	160	220	80	54
noted	35	238	326	187	336
entrys	71	146	454	796	984
cfd	23	250	77	623	293
13:15	67	213	95	185	51
matlpotlib	23	62	294	94	36
flavor=	76	68	119	217	824
linebreaks	32	16	420	468	768
manipulating	74	50	386	663	526
cft	79	292	20	430	547
cfs	87	55	180	232	591
hourly	80	29	299	77	67
-line	29	28	306	122	508
subselect	92	156	78	105	971
1.55367	15	157	64	550	888
rollaxis	19	294	296	291	601
1.55363	15	157	64	296	837
1.55362	47	115	58	550	888
polyfit	79	10	332	363	620
waiting	22	187	250	39	248
relocate	37	263	443	190	629
cum_ret	1	57	112	232	726
df.append	44	134	260	700	827
exponentials	57	89	8	744	211
dgemm	16	174	408	90	651
columns=columns	44	134	260	348	827
analysed	23	150	163	94	953
identically-labeled	92	83	49	715	704
val_arr	75	148	206	73	719
stop_id	3	134	65	558	68
recomputing	77	266	497	98	66
scrapped	86	62	329	107	874
adjusts	37	290	443	207	449
metre	37	281	162	528	221
your_file	76	199	286	283	502
2,100	1	274	112	305	159
.read	76	199	286	283	736
helpers	38	6	291	78	79
.real	11	234	242	531	56
appearently	40	28	125	791	468
apple	83	45	430	513	423
scaler	25	119	140	137	296
scales	37	290	467	207	388
forbid	64	190	246	525	118
black-and-white	84	125	128	607	304
scalex	58	185	452	642	130
scaley	63	185	452	642	130
non-optimized	55	180	55	90	219
analogous	74	117	152	703	382
coo_matrix()	16	94	333	455	788
motor	77	14	114	182	210
apply	74	193	78	98	121
myfmt	58	44	452	642	162
ax.plot_trisurf	60	102	418	193	910
varphi	33	194	269	191	725
matrixs	71	266	100	574	668
infomation	68	207	371	205	328
expanding	74	232	37	98	526
3^n	89	234	207	261	90
node_color	25	119	320	49	664
usecols=	76	199	286	51	987
sql-like	3	156	378	354	125
dxs	52	79	273	284	622
inclined	82	43	246	500	196
.ctypes	9	59	85	594	681
p&l	77	56	299	77	347
override	64	109	331	594	370
rabbit	17	13	143	39	589
rows.plot()	58	185	452	642	130
28-by-28	71	64	268	519	95
women	78	281	252	479	545
annoy	17	190	307	500	327
wtih	29	28	452	209	473
.query	92	104	23	733	154
infinities	57	89	8	654	509
annot	93	275	461	139	881
ordinals	80	35	245	781	920
abort	22	187	108	361	248
0.00000000	43	17	223	4	567
0.00000001	52	0	263	284	221
annon	43	2	231	265	965
non-numerical	3	99	168	663	843
refine	27	137	116	525	328
0.9	46	272	61	606	10
0.8	60	272	61	606	10
columm	3	134	65	155	125
tap	38	1	80	317	118
quickstart	34	254	234	302	565
tar	13	261	486	797	368
0.1	60	194	269	606	10
0.0	15	284	61	606	10
0.3	15	272	61	606	10
0.2	15	272	61	606	10
0.5	60	194	269	606	10
0.4	15	194	61	606	10
0.7	15	272	61	606	10
0.6	60	194	61	606	10
tad	82	241	395	334	463
tag	34	173	307	482	142
tab	32	16	420	468	768
tan	33	234	242	617	725
.pct_change()	43	72	68	181	612
multicollinearity	28	227	106	214	970
guru	68	43	465	451	571
rvec	52	220	158	476	622
v0.13.1	92	83	151	761	39
as_index=true	44	164	181	700	895
a.sum()	1	57	201	664	726
multiplcation	16	64	154	150	62
binstar	13	128	5	197	467
panic	29	231	395	654	970
segmenting	74	29	294	429	841
exemplify	27	137	459	15	421
administrator	30	15	376	250	348
outlier	79	23	332	10	11
sparse=false	92	26	168	135	412
0.j	11	211	4	364	265
r_sort	52	0	263	215	288
astroid	46	221	124	681	284
protopopov	35	207	409	407	336
header=true	76	199	286	51	413
delta_array	98	132	273	73	77
targetid	3	93	129	524	705
interrupted	22	187	108	361	248
wwii	35	238	326	187	336
insert()	92	106	78	105	699
crawling	22	84	27	595	467
boston.target	48	274	112	305	159
mouseover	61	69	32	624	536
irregularity	77	146	148	631	509
elif	87	52	198	770	985
copy+pasteable	27	137	403	420	579
numpy.set_printoptions()	64	15	246	716	370
deprecating	65	173	258	236	874
jakevdp	35	207	371	205	767
')```	43	39	15	460	612
10**9	87	201	309	727	60
newnames	76	199	286	51	987
10**4	88	142	269	528	212
10**5	11	194	4	606	743
10**6	88	142	446	528	668
10**3	15	194	269	606	212
get_xlim()	6	161	208	543	481
complicate	82	241	17	334	327
condtion	3	110	243	155	984
byt	29	227	410	482	457
mat0.ravel()	87	57	112	232	591
choose	74	232	37	209	868
inconsistencies	10	231	17	335	568
covered	34	254	234	97	565
bye	35	115	93	550	475
pending	27	173	139	604	208
10**n	11	234	4	664	743
crash	22	187	108	361	248
numpy.nan	70	99	424	108	203
yada	50	244	58	553	323
table()	9	214	397	684	761
.nunique()	43	164	181	204	419
numpy.r_	19	214	201	359	601
transmitter	77	281	114	623	563
by=	51	164	195	689	12
dirac	77	292	20	430	942
themechanged	50	267	118	130	679
fiddly	82	241	291	334	327
fiddle	64	232	246	458	370
trap	90	187	108	361	248
y_train	1	274	349	539	412
completions	38	15	189	29	818
df1's	3	93	82	558	965
desireable	10	241	17	200	999
np.fromstring	70	59	357	332	522
right_on=	44	2	253	427	176
sqldate	43	72	82	265	708
category	78	150	445	584	604
respects	74	117	152	548	305
biogo.matrix	55	174	408	90	651
command-line	90	15	189	540	818
reformulate	79	10	324	214	610
scikits.statsmodels	79	23	168	761	620
evector	43	47	493	76	593
pause=	87	51	487	177	244
pl.ion()	22	187	108	361	248
metaclass	9	109	331	594	386
sampled_vec	75	148	206	231	981
np.mat	1	57	41	232	21
\pandas\core\	50	145	225	168	429
dictionary	3	297	280	776	903
np.max	87	57	121	673	608
york	78	200	132	550	765
conflicts	83	231	80	173	568
anyhow	29	28	246	209	472
fromarray	84	219	102	607	427
img_gray	84	219	102	122	427
data=none	0	134	2	621	699
segregated	40	50	10	663	122
tripled	80	50	245	691	920
?.	29	26	227	432	472
0.71	15	284	92	514	980
feasible	82	241	100	497	463
conversation	34	173	307	604	2
xlimit	58	290	166	706	388
updated_event	98	134	93	605	602
stk_id	44	93	82	204	832
.groupby	44	164	181	700	419
beggining	32	263	420	468	768
hitherto	10	104	17	663	354
destinations	78	150	445	479	639
series.unique()	19	42	455	13	886
salient	28	151	106	511	625
weka	86	1	354	317	866
overtime	78	250	77	149	210
np.nan	87	39	424	415	203
macosx_deployment_target	30	170	244	165	870
accent	32	16	420	482	898
pyenv	13	128	5	197	482
lifting	55	1	479	317	219
doomed	82	50	341	537	246
mentionned	46	118	116	202	183
dataframe.corr()	79	214	125	761	854
binname	98	281	269	528	212
in_stock	43	72	68	265	708
simulate	28	14	267	710	841
x.loc	43	47	68	290	708
_tkagg	81	88	110	553	584
males	78	250	252	479	604
tprice	43	72	82	265	708
richer	38	1	291	317	628
_just_	27	263	6	780	655
some_metric	28	85	106	631	999
xlabel	58	290	166	391	890
1.4	46	272	151	681	544
1.5	15	272	61	225	544
1.6	46	272	151	225	544
1.7	46	221	151	157	544
1.0	15	194	61	606	10
1.1	46	272	61	225	544
1.2	46	272	61	225	544
1.3	46	272	61	225	544
1.8	46	221	151	157	435
1.9	46	221	151	157	435
myproject	30	259	277	303	469
close_event	6	46	345	44	112
pconv	52	0	263	215	19
numpy.ctypeslib.as_array	48	59	295	232	782
metter	3	263	182	587	655
r_x	33	186	443	129	725
r_y	11	186	242	129	56
r_z	33	281	443	191	725
afraid	17	43	227	236	803
parallelising	88	197	100	537	219
numpy.trapz	79	10	324	487	13
hatch=	60	155	495	495	285
edgecolor=	20	155	240	603	285
r_i	52	19	206	120	622
ahold	64	171	388	572	214
dublicate	3	118	182	587	125
r_a	11	234	242	531	56
spawns	22	85	71	349	807
floris	35	207	409	187	336
25000	78	160	220	80	106
centre	33	31	443	191	964
1.x	46	221	124	202	435
delve	17	62	143	312	118
nucleotide	99	286	114	425	616
1.j	15	211	263	364	265
edgecolors	25	119	24	49	664
intesity	77	23	301	137	762
archiving	86	222	426	662	820
intersected	98	281	454	646	744
input()	0	46	345	467	356
prefactor	79	292	20	430	547
df_data	44	134	65	155	622
poly3dcollection	25	233	208	251	109
gps_time	1	274	268	305	981
a.toarray()	16	94	333	455	788
randrange	93	123	173	50	361
ax.xaxis	58	44	90	418	162
mistook	65	291	258	407	887
getregion	0	55	493	129	591
purely	10	241	17	631	999
dtypewarning	50	267	322	580	444
word2	43	67	93	145	764
superimposed	61	136	175	22	847
neighbourhoods	74	232	10	746	868
chicken	98	52	317	605	602
debate	10	118	17	590	812
python.app	30	15	244	165	960
ndvi1	52	148	206	605	714
cache	22	283	373	128	282
operational	10	137	116	525	328
candidates	99	297	185	293	868
60mb	88	197	373	549	217
.iterrows()	92	156	23	47	92
thousands	88	160	220	80	54
freetype	13	128	94	104	482
992	12	279	488	751	465
unchained	47	115	274	424	588
diagnosing	10	231	143	173	568
999	98	78	162	141	60
998	12	267	162	133	588
jedi-vim	83	206	178	197	380
99%	10	266	22	574	246
ones	74	232	159	680	36
interoperability	38	1	479	317	564
words	74	286	163	482	798
documention	29	254	80	302	564
;-))	34	173	116	97	345
wordy	82	241	395	334	327
errored	29	263	116	791	655
groupby.plot	29	232	246	534	472
non-integers	82	156	182	587	382
precomputing	40	50	154	150	122
true}	76	144	452	177	987
jaime	35	238	326	187	336
sediment	47	67	223	145	567
generations	88	197	55	196	217
view	40	184	158	453	122
conversions	38	99	17	756	141
toarray()	16	94	333	36	788
feature_indices_	52	26	349	539	412
merits	34	151	106	590	246
10e6	88	142	173	139	60
violet	20	119	259	757	786
imread	84	219	102	607	427
.to_csv()	76	134	260	183	698
scoured	68	62	247	161	746
closer	77	13	106	631	762
.to_period	43	149	309	460	612
closep	52	0	263	284	855
mentioned	29	238	116	97	308
reducebykey	47	55	493	76	593
ieee	57	89	325	86	22
colc	43	72	68	353	708
xray	38	6	359	317	79
genius	35	207	371	205	767
normed=true	51	193	63	557	780
closed	90	187	108	361	214
opencv-3.0.0	50	145	118	734	679
theta	33	102	242	129	725
df.low	98	258	290	796	377
dependancy	55	174	80	500	564
python27\scripts\	30	162	486	138	204
1830	98	281	162	528	221
r.date	47	134	93	727	410
spoil	10	227	246	631	970
doesnot	29	28	410	548	473
voight	28	14	267	626	531
grain	77	13	250	39	118
atleast	29	263	159	209	36
canopy	83	128	5	540	818
safely	63	99	421	716	979
d_values	47	12	461	471	622
-wl	50	157	133	117	160
re-indexing	3	156	182	354	125
sys.getsizeof	48	59	357	332	60
hyphen	32	16	420	403	898
a_max	87	55	4	673	985
delimeter	32	16	420	468	768
my_script.py	81	15	189	540	383
bbb	43	53	82	145	569
validating	28	14	294	94	953
var_name	47	134	93	776	260
enlarging	74	50	386	691	526
2400	77	281	114	182	210
scalars	75	106	421	756	979
pickle.dump	76	222	382	102	820
numpy.histogramdd	53	136	63	31	780
numpy.ma	53	88	424	108	203
vert=false	51	155	195	495	12
saner	82	50	100	497	463
*vertices	52	0	180	215	591
scipy's	53	101	125	720	716
zoomed_inset_axes	58	44	90	391	683
\rho	32	166	134	131	898
vanilla	38	180	80	756	219
ddof=1	87	23	121	786	484
popsize	1	123	173	50	99
df2.query	60	155	240	495	12
modifiy	64	161	226	543	481
hovering	90	69	32	624	536
wild	17	291	250	236	812
last_inserted_id	43	51	487	177	244
.12	46	221	151	331	284
2*3	71	274	268	305	159
2*2	71	195	213	738	653
2*1	11	234	4	531	743
.10	32	205	346	177	576
second.csv	78	258	243	712	984
2**	89	89	207	261	60
isocalendar	80	35	245	781	333
.14	46	221	151	331	284
privileges	13	128	376	250	348
adverse	22	187	108	361	248
question's	27	118	116	97	308
col7	43	93	48	204	804
panning	90	69	32	624	536
2*p	11	234	4	531	56
19:30	67	213	95	185	51
np-complete	10	173	106	214	970
scikit-image	84	230	428	166	353
2*x	11	234	242	531	56
boxplots	51	136	24	272	847
2*a	52	19	160	284	855
np.linalg.eigvals	16	94	462	562	800
2*n	1	274	112	677	60
2.5.4	85	276	42	685	380
col1	44	93	82	558	965
2.5.2	85	276	233	685	380
2.5.3	85	206	42	685	380
2.5.0	46	221	151	202	380
2.5.1	85	206	151	685	380
bottom=0	58	138	495	642	162
appropriated	68	207	465	432	343
fname3	1	274	112	305	159
unpacked	30	252	486	165	368
expdate	78	56	445	41	984
theses	74	232	8	788	898
modelled	78	250	77	182	210
english	32	43	163	482	98
breaker	82	241	341	663	669
sensing	23	29	294	370	866
qvoronoi	99	288	11	315	138
np.arctan2	1	275	201	664	292
rocket	90	187	108	624	248
percent	78	266	22	520	347
m4rtini	35	238	326	187	336
matlplot	83	206	178	197	564
parabolas	79	10	324	487	620
scanline	99	288	128	674	563
numexpr	55	174	422	90	651
to_json()	92	68	275	183	322
sku	78	93	82	390	965
sky	33	176	135	617	908
unsigned	70	100	325	86	22
googling	17	62	247	161	746
protocol=2	83	222	357	260	820
adoption	38	1	479	317	275
dateparser	92	99	245	601	934
.hour	43	47	309	727	852
knob	64	23	332	626	762
+numpy	38	1	80	202	564
sick	17	62	88	236	180
markersize	25	161	24	49	664
evecs	52	132	273	721	334
non-null	98	78	52	796	272
wxpanel	90	69	46	380	384
know	29	28	227	432	472
knot	33	103	238	487	725
variants	38	227	212	321	79
msft	78	200	82	204	965
m_n	72	142	25	683	60
memoize	22	214	397	684	807
ahem	17	291	274	236	345
arr1-arr2	1	57	112	232	726
4641	78	78	82	796	272
sympy.lambdify	79	10	324	744	610
1.7.1	85	276	42	157	621
index=rng	11	201	180	50	99
0xff	32	16	190	477	261
starred	98	263	317	468	655
j's	78	297	454	479	984
time()	47	35	245	727	920
because	29	28	306	209	999
shabby	82	180	395	497	463
sequence	75	106	421	746	684
searching	17	62	247	161	746
115	12	279	319	751	465
114	12	181	488	24	132
117	12	279	488	751	465
116	50	267	118	168	679
111	6	139	18	324	543
110	12	279	488	751	465
113	12	279	488	111	132
pyconfig.h	30	259	94	247	960
2012-03-03	67	213	95	185	51
2012-03-01	67	213	95	185	51
neglecting	10	263	17	791	655
118	12	274	488	305	159
matrix1	1	148	206	538	714
flummoxed	17	28	227	451	803
leaf	99	297	163	85	329
lead	10	231	395	173	568
leak	22	61	153	358	282
g_type	47	224	180	424	888
adaptively	37	31	443	780	138
leap	80	163	254	723	72
boolean_array	98	134	68	733	602
leader	34	115	163	482	142
gammaln	16	94	462	782	800
locate	29	28	37	746	868
df.sort_index()	92	156	78	105	971
enum	9	99	280	436	903
consuming	82	283	100	497	463
11k	88	160	220	80	54
matrixa	1	57	112	232	726
overall	82	266	106	574	668
30mb	88	283	373	549	236
wdir=	50	145	277	734	469
slug	47	28	306	209	588
x.ndim	1	57	112	677	726
if_exists	76	68	119	217	824
test.csv	76	199	286	283	754
getting	29	28	306	791	473
dependence	79	23	106	631	970
shipping	23	84	80	317	118
re-index	3	156	6	354	125
dependency	13	128	80	197	482
diverging	20	119	40	137	846
clojure	55	1	479	90	651
ax.get_children()	6	161	461	471	109
10000000	88	142	173	196	432
warrants	34	118	307	590	216
libtiff	86	222	80	209	472
df.t.iloc	52	0	263	290	288
freq=none	43	201	309	460	612
brush	61	31	428	18	138
registration	23	230	128	607	353
dataframe.columns	92	104	65	155	154
h264	86	192	123	676	127
brilliantly	35	291	274	205	767
bgcolor	64	161	90	543	683
semilog	51	136	195	272	614
r.plot	92	39	389	434	827
build-in	38	214	125	31	382
eg	74	232	37	746	36
np.full	1	57	41	232	636
new_data	1	134	349	680	714
i've	29	62	272	161	746
funds	80	116	430	581	67
gaussian	79	23	332	511	531
insecureplatformwarning	30	259	244	165	960
contradictory	29	231	395	335	905
memory-map	86	222	426	102	405
leastsq	79	22	324	566	13
interpolatedunivariatespline	53	101	238	720	396
instructive	34	173	234	97	928
first_valid_index	92	156	78	105	971
read_clipboard()	27	171	275	183	473
pip_build_root	50	259	277	138	469
200,000	88	160	220	80	498
broadly	10	118	291	590	999
non-existent	10	231	395	334	655
ts.resample	43	149	447	460	612
window's	90	187	485	624	112
meaningless	10	117	306	631	999
4.2f	47	205	346	177	576
rl5	43	105	231	71	255
goodness	79	23	332	638	11
et	28	14	267	710	841
index_col=none	76	199	322	51	189
anythin	83	206	80	202	564
3.7.11	50	145	133	138	204
mapped_function	1	274	112	305	881
improving	68	180	341	537	246
bifurwidth	25	119	320	49	845
more-or-less	64	6	390	732	389
matplotlib.axes.axessubplot	9	161	331	543	699
cv2.videocapture	84	144	102	401	427
book	34	254	35	179	565
bool	70	59	198	332	979
boom	65	291	258	236	416
branch	46	221	124	604	435
long-time	17	43	377	396	275
holoviews	64	6	390	78	79
junk	29	263	420	468	655
juno	83	206	178	711	380
ax.get_position()	58	44	90	207	449
june	80	163	284	723	72
hausdorff	99	288	185	293	716
accomplish	82	137	378	573	29
m-by-n	71	64	268	738	95
scipy.optimize.brute	79	214	140	684	13
ifilter	19	214	125	231	382
expands	40	117	154	58	981
basex=2	58	44	240	341	599
x-x.mean()	11	234	4	673	743
.set_xticks	58	44	494	485	162
