How	O	O
to	O	O
convert	O	O
2D	O	O
float	O	O
numpy	O	O
array	O	O
to	O	O
2D	O	O
int	O	O
numpy	O	O
array	O	O
?	O	O
	
How	O	O
to	O	O
convert	O	O
real	O	O
numpy	O	O
array	O	O
to	O	O
int	O	O
numpy	O	O
array	O	O
?	O	O
	
Tried	O	O
using	O	O
map	O	B-API
directly	O	O
to	O	O
array	O	O
but	O	O
it	O	O
did	O	O
not	O	O
work	O	O
.	O	O
	
Use	O	O
the	O	O
astype	O	B-API
method	O	O
.	O	O
	
>>>	O	O
x	O	O
=	O	O
np.array	O	B-API
(	O	O
[[	O	O
1.0	O	O
,	O	O
2.3	O	O
]	O	O
,	O	O
[	O	O
1.3	O	O
,	O	O
2.9	O	O
]]	O	O
)	O	O
	
>>>	O	O
x	O	O
	
array	O	O
(	O	O
[[	O	O
1	O	O
.	O	O
,	O	O
2.3	O	O
]	O	O
,	O	O
	
[	O	O
1.3	O	O
,	O	O
2.9	O	O
]]	O	O
)	O	O
	
>>>	O	O
x.astype	O	O
(	O	O
int	O	O
)	O	O
	
array	O	O
(	O	O
[[1	O	O
,	O	O
2]	O	O
,	O	O
	
[	O	O
1	O	O
,	O	O
2	O	O
]]	O	O
)	O	O
If	O	O
you're	O	O
not	O	O
sure	O	O
your	O	O
input	O	O
is	O	O
going	O	O
to	O	O
be	O	O
a	O	O
Numpy	O	O
array	O	O
,	O	O
you	O	O
can	O	O
use	O	O
asarray	O	B-API
with	O	O
dtype=int	O	O
instead	O	O
of	O	O
astype	O	B-API
:	O	O
>>>	O	O
np.asarray	O	B-API
(	O	O
[1	O	O
,	O	O
2	O	O
,	O	O
3	O	O
,	O	O
4]	O	O
,	O	O
dtype=int	O	O
)	O	O
	
array	O	O
(	O	O
[1	O	O
,	O	O
2	O	O
,	O	O
3	O	O
,	O	O
4	O	O
]	O	O
)	O	O
If	O	O
the	O	O
input	O	O
array	O	O
already	O	O
has	O	O
the	O	O
correct	O	O
dtype	O	B-API
,	O	O
asarray	O	B-API
avoids	O	O
the	O	O
array	O	O
copy	O	O
while	O	O
astype	O	B-API
does	O	O
not	O	O
(	O	O
unless	O	O
you	O	O
specify	O	O
copy=False	O	O
):	O	O
>>>	O	O
a	O	O
=	O	O
np.array	O	B-API
(	O	O
[1	O	O
,	O	O
2	O	O
,	O	O
3	O	O
,	O	O
4	O	O
]	O	O
)	O	O
	
>>>	O	O
a	O	O
is	O	O
np.asarray	O	B-API
(	O	O
a	O	O
)	O	O
#	O	O
no	O	O
copy	O	O
:)	O	O
	
True	O	O
	
>>>	O	O
a	O	O
is	O	O
a.astype	O	B-API
(	O	O
int	O	O
)	O	O
#	O	O
copy	O	O
:(	O	O
	
False	O	O
	
>>>	O	O
a	O	O
is	O	O
a.astype	O	B-API
(	O	O
int	O	O
,	O	O
copy=False	O	O
)	O	O
#	O	O
no	O	O
copy	O	O
:)	O	O
	
True	O	O
you	O	O
can	O	O
use	O	O
np.int_	O	O
:	O	O
>>>	O	O
x	O	O
=	O	O
np.array	O	B-API
(	O	O
[[	O	O
1.0	O	O
,	O	O
2.3	O	O
]	O	O
,	O	O
[	O	O
1.3	O	O
,	O	O
2.9	O	O
]]	O	O
)	O	O
	
>>>	O	O
x	O	O
	
array	O	O
(	O	O
[[	O	O
1	O	O
.	O	O
,	O	O
2.3	O	O
]	O	O
,	O	O
	
[	O	O
1.3	O	O
,	O	O
2.9	O	O
]]	O	O
)	O	O
	
>>>	O	O
np.int_	O	O
(	O	O
x	O	O
)	O	O
	
array	O	O
(	O	O
[[1	O	O
,	O	O
2]	O	O
,	O	O
	
[	O	O
1	O	O
,	O	O
2	O	O
]]	O	O
)	O	O
Some	O	O
numpy	O	O
functions	O	O
for	O	O
how	O	O
to	O	O
control	O	O
the	O	O
rounding	O	O
:	O	O
rint	O	O
,	O	O
floor	O	O
,	O	O
trunc	O	O
,	O	O
ceil	O	B-API
.	O	O
depending	O	O
how	O	O
u	O	O
wish	O	O
to	O	O
round	O	O
the	O	O
floats	O	O
,	O	O
up	O	O
,	O	O
down	O	O
,	O	O
or	O	O
to	O	O
the	O	O
nearest	O	O
int	O	O
.	O	O
	
>>>	O	O
x	O	O
=	O	O
np.array	O	B-API
(	O	O
[[	O	O
1.0	O	O
,	O	O
2.3	O	O
]	O	O
,	O	O
[	O	O
1.3	O	O
,	O	O
2.9	O	O
]]	O	O
)	O	O
	
>>>	O	O
x	O	O
	
array	O	O
(	O	O
[[	O	O
1	O	O
.	O	O
,	O	O
2.3	O	O
]	O	O
,	O	O
	
[	O	O
1.3	O	O
,	O	O
2.9	O	O
]]	O	O
)	O	O
	
>>>	O	O
y	O	O
=	O	O
np.trunc	O	B-API
(	O	O
x	O	O
)	O	O
	
>>>	O	O
y	O	O
	
array	O	O
(	O	O
[[	O	O
1	O	O
.,	O	O
2	O	O
.	O	O
]	O	O
,	O	O
	
[	O	O
1	O	O
.,	O	O
2	O	O
.	O	O
]]	O	O
)	O	O
	
>>>	O	O
z	O	O
=	O	O
np.ceil	O	B-API
(	O	O
x	O	O
)	O	O
	
>>>	O	O
z	O	O
	
array	O	O
(	O	O
[[	O	O
1	O	O
.,	O	O
3	O	O
.	O	O
]	O	O
,	O	O
	
[	O	O
2	O	O
.,	O	O
3	O	O
.	O	O
]]	O	O
)	O	O
	
>>>	O	O
t	O	O
=	O	O
np.floor	O	B-API
(	O	O
x	O	O
)	O	O
	
>>>	O	O
t	O	O
	
array	O	O
(	O	O
[[	O	O
1	O	O
.,	O	O
2	O	O
.	O	O
]	O	O
,	O	O
	
[	O	O
1	O	O
.,	O	O
2	O	O
.	O	O
]]	O	O
)	O	O
	
>>>	O	O
a	O	O
=	O	O
np.rint	O	B-API
(	O	O
x	O	O
)	O	O
	
>>>	O	O
a	O	O
	
array	O	O
(	O	O
[[	O	O
1	O	O
.,	O	O
2	O	O
.	O	O
]	O	O
,	O	O
	
[	O	O
1	O	O
.,	O	O
3	O	O
.	O	O
]]	O	O
)	O	O
To	O	O
make	O	O
one	O	O
of	O	O
this	O	O
in	O	O
to	O	O
int	O	O
,	O	O
or	O	O
one	O	O
of	O	O
the	O	O
other	O	O
types	O	O
in	O	O
numpy	O	O
,	O	O
astype	O	B-API
(	O	O
as	O	O
answered	O	O
by	O	O
BrenBern	O	O
):	O	O
a.astype	O	O
(	O	O
int	O	O
)	O	O
	
array	O	O
(	O	O
[[1	O	O
,	O	O
2]	O	O
,	O	O
	
[	O	O
1	O	O
,	O	O
3	O	O
]]	O	O
)	O	O
	
>>>	O	O
y.astype	O	O
(	O	O
int	O	O
)	O	O
	
array	O	O
(	O	O
[[1	O	O
,	O	O
2]	O	O
,	O	O
	
[	O	Performance by label (#match, #model, #ref) (precision, recall, F1):
1	O	    O: (474, 474, 495) (1.0000, 0.9576, 0.9783)
,	O	    B-API: (0, 21, 0) (******, ******, ******)
2	O	Macro-average precision, recall, F1: (0.500000, 0.478788, 0.489164)
]]	O	Item accuracy: 474 / 495 (0.9576)
)	O	Instance accuracy: 32 / 48 (0.6667)
	Elapsed time: 0.037936 [sec] (1265.3 [instance/sec])
